Search.setIndex({"docnames": ["aprcl", "arith", "bug_reporting", "building", "contributors", "d_mat", "d_vec", "double_extras", "examples", "fft", "flint", "flintxx", "fmpq", "fmpq_mat", "fmpq_mpoly", "fmpq_mpoly_factor", "fmpq_poly", "fmpq_vec", "fmpz", "fmpz_factor", "fmpz_lll", "fmpz_mat", "fmpz_mod", "fmpz_mod_mat", "fmpz_mod_mpoly", "fmpz_mod_mpoly_factor", "fmpz_mod_poly", "fmpz_mod_poly_factor", "fmpz_mod_vec", "fmpz_mpoly", "fmpz_mpoly_factor", "fmpz_poly", "fmpz_poly_factor", "fmpz_poly_mat", "fmpz_poly_q", "fmpz_vec", "fq", "fq_default", "fq_default_mat", "fq_default_poly", "fq_default_poly_factor", "fq_embed", "fq_mat", "fq_nmod", "fq_nmod_embed", "fq_nmod_mat", "fq_nmod_mpoly", "fq_nmod_mpoly_factor", "fq_nmod_poly", "fq_nmod_poly_factor", "fq_nmod_vec", "fq_poly", "fq_poly_factor", "fq_vec", "fq_zech", "fq_zech_embed", "fq_zech_mat", "fq_zech_poly", "fq_zech_poly_factor", "fq_zech_vec", "index", "introduction", "long_extras", "longlong", "macros", "memory", "mpf_mat", "mpf_vec", "mpfr_mat", "mpfr_vec", "mpn_extras", "mpoly", "nmod", "nmod_mat", "nmod_mpoly", "nmod_mpoly_factor", "nmod_poly", "nmod_poly_factor", "nmod_poly_mat", "nmod_vec", "padic", "padic_mat", "padic_poly", "perm", "portability", "profiler", "qadic", "qsieve", "references", "thread_pool", "threading", "ulong_extras"], "filenames": ["aprcl.rst", "arith.rst", "bug_reporting.rst", "building.rst", "contributors.rst", "d_mat.rst", "d_vec.rst", "double_extras.rst", "examples.rst", "fft.rst", "flint.rst", "flintxx.rst", "fmpq.rst", "fmpq_mat.rst", "fmpq_mpoly.rst", "fmpq_mpoly_factor.rst", "fmpq_poly.rst", "fmpq_vec.rst", "fmpz.rst", "fmpz_factor.rst", "fmpz_lll.rst", "fmpz_mat.rst", "fmpz_mod.rst", "fmpz_mod_mat.rst", "fmpz_mod_mpoly.rst", "fmpz_mod_mpoly_factor.rst", "fmpz_mod_poly.rst", "fmpz_mod_poly_factor.rst", "fmpz_mod_vec.rst", "fmpz_mpoly.rst", "fmpz_mpoly_factor.rst", "fmpz_poly.rst", "fmpz_poly_factor.rst", "fmpz_poly_mat.rst", "fmpz_poly_q.rst", "fmpz_vec.rst", "fq.rst", "fq_default.rst", "fq_default_mat.rst", "fq_default_poly.rst", "fq_default_poly_factor.rst", "fq_embed.rst", "fq_mat.rst", "fq_nmod.rst", "fq_nmod_embed.rst", "fq_nmod_mat.rst", "fq_nmod_mpoly.rst", "fq_nmod_mpoly_factor.rst", "fq_nmod_poly.rst", "fq_nmod_poly_factor.rst", "fq_nmod_vec.rst", "fq_poly.rst", "fq_poly_factor.rst", "fq_vec.rst", "fq_zech.rst", "fq_zech_embed.rst", "fq_zech_mat.rst", "fq_zech_poly.rst", "fq_zech_poly_factor.rst", "fq_zech_vec.rst", "index.rst", "introduction.rst", "long_extras.rst", "longlong.rst", "macros.rst", "memory.rst", "mpf_mat.rst", "mpf_vec.rst", "mpfr_mat.rst", "mpfr_vec.rst", "mpn_extras.rst", "mpoly.rst", "nmod.rst", "nmod_mat.rst", "nmod_mpoly.rst", "nmod_mpoly_factor.rst", "nmod_poly.rst", "nmod_poly_factor.rst", "nmod_poly_mat.rst", "nmod_vec.rst", "padic.rst", "padic_mat.rst", "padic_poly.rst", "perm.rst", "portability.rst", "profiler.rst", "qadic.rst", "qsieve.rst", "references.rst", "thread_pool.rst", "threading.rst", "ulong_extras.rst"], "titles": ["<strong>aprcl.h</strong> \u2013 APRCL primality testing", "<strong>arith.h</strong> \u2013 arithmetic and special functions", "<strong>Bug reporting</strong>", "<strong>Configuring and building</strong>", "<strong>Contributors</strong>", "<strong>d_mat.h</strong> \u2013 double precision matrices", "<strong>d_vec.h</strong> \u2013 double precision vectors", "<strong>double_extras.h</strong> \u2013 support functions for double arithmetic", "<strong>Examples</strong>", "<strong>fft.h</strong> \u2013 Schoenhage-Strassen FFT", "<strong>flint.h</strong> \u2013 global definitions", "<strong>flintxx</strong> \u2013 C++ Wrapper", "<strong>fmpq.h</strong> \u2013 rational numbers", "<strong>fmpq_mat.h</strong> \u2013 matrices over the rational numbers", "<strong>fmpq_mpoly.h</strong> \u2013 multivariate polynomials over the rational numbers", "<strong>fmpq_mpoly_factor.h</strong> \u2013 factorisation of multivariate polynomials over the rational numbers", "<strong>fmpq_poly.h</strong> \u2013 univariate polynomials over the rational numbers", "<strong>fmpq_vec.h</strong> \u2013 vectors over rational numbers", "<strong>fmpz.h</strong> \u2013 integers", "<strong>fmpz_factor.h</strong> \u2013 integer factorisation", "<strong>fmpz_lll.h</strong> \u2013 LLL reduction", "<strong>fmpz_mat.h</strong> \u2013 matrices over the integers", "<strong>fmpz_mod.h</strong> \u2013 arithmetic modulo integers", "<strong>fmpz_mod_mat.h</strong> \u2013 matrices over integers mod n", "<strong>fmpz_mod_mpoly.h</strong> \u2013 polynomials over the integers mod n", "<strong>fmpz_mod_mpoly_factor.h</strong> \u2013 factorisation of multivariate polynomials over the integers mod n", "<strong>fmpz_mod_poly.h</strong> \u2013 polynomials over integers mod n", "<strong>fmpz_mod_poly_factor.h</strong> \u2013 factorisation of polynomials over integers mod n", "<strong>fmpz_mod_vec.h</strong> \u2013 vectors over integers mod n", "<strong>fmpz_mpoly.h</strong> \u2013 multivariate polynomials over the integers", "<strong>fmpz_mpoly_factor.h</strong> \u2013 factorisation of multivariate polynomials over the integers", "<strong>fmpz_poly.h</strong> \u2013 univariate polynomials over the integers", "<strong>fmpz_poly_factor.h</strong> \u2013 factorisation of polynomials over the integers", "<strong>fmpz_poly_mat.h</strong> \u2013 matrices of polynomials over the integers", "<strong>fmpz_poly_q.h</strong> \u2013 rational functions over the rational numbers", "<strong>fmpz_vec.h</strong> \u2013 vectors of integers", "<strong>fq.h</strong> \u2013 finite fields", "<strong>fq_default_default.h</strong> \u2013 unified finite fields", "<strong>fq_default_mat.h</strong> \u2013 matrices over finite fields", "<strong>fq_default_poly.h</strong> \u2013 univariate polynomials over finite fields", "<strong>fq_default_poly_factor.h</strong> \u2013 factorisation of univariate polynomials over finite fields", "Computing isomorphisms and embeddings of finite fields", "<strong>fq_mat.h</strong> \u2013 matrices over finite fields", "<strong>fq_nmod.h</strong> \u2013 finite fields (word-size characteristic)", "Computing isomorphisms and embeddings of finite fields", "<strong>fq_nmod_mat.h</strong> \u2013 matrices over finite fields (word-size characteristic)", "<strong>fq_nmod_mpoly.h</strong> \u2013 multivariate polynomials over finite fields of word-sized characteristic", "<strong>fq_nmod_mpoly_factor.h</strong> \u2013 factorisation of multivariate polynomials over finite fields of word-sized characteristic", "<strong>fq_nmod_poly.h</strong> \u2013 univariate polynomials over finite fields (word-size characteristic)", "<strong>fq_nmod_poly_factor.h</strong> \u2013 factorisation of univariate polynomials over finite fields (word-size characteristic)", "<strong>fq_nmod_vec.h</strong> \u2013 vectors over finite fields (word-size characteristic)", "<strong>fq_poly.h</strong> \u2013 univariate polynomials over finite fields", "<strong>fq_poly_factor.h</strong> \u2013 factorisation of univariate polynomials over finite fields", "<strong>fq_vec.h</strong> \u2013 vectors over finite fields", "<strong>fq_zech.h</strong> \u2013 finite fields (Zech logarithm representation)", "Computing isomorphisms and embeddings of finite fields", "<strong>fq_zech_mat.h</strong> \u2013 matrices over finite fields (Zech logarithm representation)", "<strong>fq_zech_poly.h</strong> \u2013 univariate polynomials over finite fields (Zech logarithm representation)", "<strong>fq_zech_poly_factor.h</strong> \u2013 factorisation of univariate polynomials over finite fields (Zech logarithm representation)", "<strong>fq_zech_vec.h</strong> \u2013 vectors over finite fields (Zech logarithm representation)", "FLINT: Fast Library for Number Theory", "<strong>Introduction</strong>", "<strong>long_extras.h</strong> \u2013 support functions for signed word arithmetic", "<strong>longlong.h</strong> \u2013 support functions for multi-word arithmetic", "<strong>Macros</strong>", "<strong>Memory management</strong>", "<strong>mpf_mat.h</strong> \u2013 matrices of MPF floating-point numbers", "<strong>mpf_vec.h</strong> \u2013 vectors of MPF floating-point numbers", "<strong>mpfr_mat.h</strong> \u2013 matrices of MPFR floating-point numbers", "<strong>mpfr_vec.h</strong> \u2013 vectors of MPFR floating-point numbers", "<strong>mpn_extras.h</strong> \u2013 support functions for limb arrays", "<strong>mpoly.h</strong> \u2013 support functions for multivariate polynomials", "<strong>nmod.h</strong> \u2013 integers mod n (word-size n)", "<strong>nmod_mat.h</strong> \u2013 matrices over integers mod n (word-size n)", "<strong>nmod_mpoly.h</strong> \u2013 multivariate polynomials over integers mod n (word-size n)", "<strong>nmod_mpoly_factor.h</strong> \u2013 factorisation of multivariate polynomials over integers mod n (word-size n)", "<strong>nmod_poly.h</strong> \u2013 univariate polynomials over integers mod n (word-size n)", "<strong>nmod_poly_factor.h</strong> \u2013 factorisation of univariate polynomials over integers mod n (word-size n)", "<strong>nmod_poly_mat.h</strong> \u2013 matrices of univariate polynomials over integers mod n (word-size n)", "<strong>nmod_vec.h</strong> \u2013 vectors over integers mod n (word-size n)", "<strong>padic.h</strong> \u2013 p-adic numbers", "<strong>padic_mat.h</strong> \u2013 matrices over p-adic numbers", "<strong>padic_poly.h</strong> \u2013 polynomials over p-adic numbers", "<strong>perm.h</strong> \u2013 permutations", "<strong>Portability</strong>", "<strong>profiler.h</strong> \u2013 performance profiling", "<strong>qadic.h</strong> \u2013 unramified extensions over p-adic numbers", "<strong>qsieve.h</strong> \u2013 Quadratic sieve", "References", "<strong>thread_pool.h</strong> \u2013 thread pool", "<strong>Threading</strong>", "<strong>ulong_extras.h</strong> \u2013 arithmetic and number-theoretic functions for single-word integers"], "terms": {"thi": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91], "modul": [0, 1, 8, 14, 18, 20, 21, 26, 31, 61, 80, 91], "implement": [0, 1, 3, 5, 6, 9, 11, 12, 14, 16, 18, 19, 20, 21, 26, 29, 31, 33, 35, 36, 37, 48, 51, 54, 57, 61, 70, 73, 74, 76, 78, 80, 81, 82, 86, 90, 91], "rigor": [0, 1, 21], "suitabl": [0, 12, 16, 18, 31, 91], "integ": [0, 1, 8, 10, 12, 14, 16, 20, 34, 36, 37, 39, 42, 43, 45, 46, 48, 51, 54, 56, 57, 61, 62, 63, 64, 65, 70, 71, 80, 82, 85, 86, 87, 88, 90], "up": [0, 1, 3, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 23, 24, 26, 29, 31, 35, 41, 42, 44, 45, 46, 55, 56, 64, 65, 71, 73, 74, 76, 89, 90, 91], "few": [0, 1, 12, 18, 61], "thousand": 0, "digit": [0, 3, 18, 62, 64, 80, 91], "author": [0, 4], "vladimir": 0, "glazachev": 0, "googl": [0, 2, 60], "summer": 0, "code": [0, 3, 8, 9, 12, 18, 36, 37, 54, 61, 65, 68, 71, 76, 80, 85, 86, 87, 91], "2015": [0, 3], "int": [0, 1, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 62, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91], "aprcl_is_prim": 0, "const": [0, 1, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 91], "fmpz_t": [0, 1, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 43, 46, 48, 51, 54, 57, 72, 73, 74, 76, 80, 81, 82, 86, 87, 91], "n": [0, 1, 5, 8, 9, 12, 13, 16, 17, 18, 19, 20, 21, 22, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 48, 49, 51, 52, 55, 56, 57, 58, 62, 63, 66, 70, 71, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91], "us": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 48, 49, 51, 52, 54, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "same": [0, 1, 3, 5, 9, 11, 12, 13, 14, 16, 18, 20, 21, 23, 24, 26, 27, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 45, 46, 48, 49, 51, 52, 54, 56, 57, 58, 64, 65, 66, 70, 71, 73, 74, 76, 77, 78, 79, 80, 83, 84, 86, 87, 90, 91], "aprcl_is_prime_jacobi": 0, "If": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 62, 63, 64, 65, 66, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 85, 86, 87, 89, 90, 91], "prime": [0, 1, 8, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 36, 37, 39, 43, 47, 48, 51, 54, 57, 65, 70, 72, 73, 74, 75, 76, 78, 80, 81, 82, 86, 87, 88], "return": [0, 1, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91], "1": [0, 1, 2, 3, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91], "otherwis": [0, 1, 3, 5, 6, 7, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 62, 63, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 86, 87, 89, 91], "0": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91], "The": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91], "algorithm": [0, 1, 5, 6, 9, 12, 13, 14, 16, 18, 19, 20, 21, 23, 24, 27, 29, 31, 33, 36, 37, 38, 39, 40, 42, 43, 45, 46, 48, 49, 51, 52, 54, 56, 57, 58, 63, 66, 68, 70, 72, 73, 74, 77, 78, 80, 83, 86, 88, 90, 91], "well": [0, 2, 16, 20, 31, 76, 78, 87], "describ": [0, 1, 11, 21, 31, 39, 48, 51, 57, 76, 80, 91], "new": [0, 4, 9, 14, 16, 18, 20, 21, 24, 29, 31, 32, 46, 70, 71, 74, 80, 87, 90, 91], "cohen": [0, 88], "A": [0, 1, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 42, 45, 46, 47, 48, 51, 56, 57, 66, 67, 68, 71, 73, 74, 75, 76, 78, 80, 81, 82, 84, 85, 87, 88, 90, 91], "k": [0, 1, 9, 12, 13, 14, 18, 19, 20, 21, 23, 24, 26, 29, 31, 32, 33, 38, 42, 45, 46, 48, 51, 56, 57, 71, 73, 74, 76, 78, 80, 82, 87, 88, 91], "lenstra": 0, "cours": [0, 9, 11, 76, 88], "comput": [0, 1, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 31, 33, 35, 36, 37, 38, 39, 42, 43, 45, 46, 48, 51, 54, 56, 57, 60, 61, 63, 64, 65, 66, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 86, 87, 88, 90, 91], "algebra": [0, 1, 61, 88], "number": [0, 4, 5, 6, 7, 8, 11, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 48, 49, 51, 52, 54, 56, 57, 58, 61, 62, 63, 64, 65, 71, 72, 73, 74, 76, 77, 78, 79, 85, 87, 88, 89, 90], "theori": [0, 61, 88], "It": [0, 1, 3, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 38, 39, 42, 45, 46, 47, 48, 49, 51, 52, 56, 57, 58, 61, 64, 65, 70, 71, 72, 73, 74, 75, 76, 82, 87, 91], "theoret": [0, 18, 60, 88], "possibl": [0, 1, 2, 3, 4, 11, 14, 16, 18, 19, 24, 26, 29, 31, 40, 46, 49, 52, 58, 71, 74, 76, 77, 80, 86, 87, 91], "fail": [0, 13, 14, 18, 19, 20, 21, 24, 26, 29, 31, 46, 64, 74, 76, 91], "prove": [0, 1, 18, 19, 21, 31, 90, 91], "In": [0, 1, 3, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 26, 31, 33, 35, 36, 37, 38, 39, 42, 43, 45, 48, 50, 51, 53, 54, 56, 57, 59, 63, 70, 71, 76, 78, 79, 80, 81, 82, 86, 88, 90, 91], "event": [0, 29], "flint_abort": 0, "call": [0, 1, 3, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 25, 26, 27, 29, 30, 31, 32, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 51, 52, 54, 56, 57, 58, 65, 70, 73, 74, 75, 76, 77, 80, 82, 87, 89, 90, 91], "To": [0, 1, 3, 8, 9, 12, 16, 18, 24, 26, 29, 31, 39, 46, 48, 51, 57, 61, 64, 74, 76, 82, 90], "handl": [0, 1, 3, 13, 16, 26, 31, 34, 48, 51, 57, 76, 89, 90], "condit": [0, 9, 16, 18, 21, 76, 91], "_aprcl_is_prime_jacobi": 0, "can": [0, 1, 3, 7, 9, 10, 11, 12, 13, 16, 18, 19, 20, 21, 22, 26, 27, 29, 31, 32, 33, 36, 38, 39, 40, 42, 43, 45, 48, 49, 51, 52, 54, 56, 57, 58, 61, 65, 66, 68, 71, 72, 73, 76, 77, 78, 80, 81, 82, 84, 85, 86, 90, 91], "aprcl_is_prime_gauss": 0, "four": [0, 3, 21], "rene": 0, "schoof": 0, "minimum": [0, 13, 18, 64, 82, 84, 85, 91], "requir": [0, 3, 7, 9, 11, 12, 13, 16, 18, 19, 20, 21, 23, 26, 27, 29, 31, 32, 33, 36, 38, 39, 40, 42, 43, 45, 48, 49, 51, 52, 54, 56, 57, 58, 64, 70, 71, 72, 73, 76, 77, 78, 82, 86, 87, 91], "": [0, 3, 5, 6, 7, 9, 10, 12, 13, 16, 18, 19, 21, 24, 26, 29, 31, 34, 35, 36, 37, 38, 39, 42, 45, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 66, 67, 69, 71, 72, 73, 74, 76, 80, 84, 86, 87, 88, 91], "r": [0, 1, 5, 9, 11, 12, 13, 14, 16, 18, 20, 21, 23, 24, 26, 27, 29, 31, 32, 33, 36, 38, 39, 40, 42, 43, 45, 46, 48, 49, 51, 52, 54, 56, 57, 58, 63, 66, 70, 72, 73, 74, 76, 78, 81, 86, 88, 91], "ar": [0, 1, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91], "automat": [0, 1, 11, 13, 16, 21, 23, 26, 31, 33, 36, 37, 38, 42, 43, 45, 48, 51, 54, 56, 57, 73, 76, 78, 85, 86, 91], "By": [0, 12, 18, 36, 37, 43, 54, 90, 91], "default": [0, 1, 3, 13, 16, 20, 21, 31, 36, 37, 43, 54, 65, 73, 77, 85, 90, 91], "ge": [0, 1, 14, 18, 21, 24, 29, 31, 46, 70, 74, 76], "180": 0, "some": [0, 3, 8, 9, 11, 12, 14, 18, 19, 20, 21, 24, 26, 29, 31, 39, 43, 46, 48, 49, 51, 52, 57, 58, 61, 65, 74, 76, 77, 80, 85, 86, 88, 90, 91], "case": [0, 1, 3, 9, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 26, 27, 31, 32, 34, 35, 38, 39, 40, 42, 43, 45, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 70, 73, 76, 77, 80, 81, 82, 86, 87, 88, 90, 91], "mean": [0, 1, 11, 14, 16, 18, 20, 21, 26, 31, 48, 51, 57, 76, 80, 90, 91], "we": [0, 1, 7, 9, 11, 12, 16, 18, 20, 21, 26, 31, 32, 33, 34, 36, 37, 39, 42, 43, 45, 48, 51, 54, 56, 57, 63, 65, 70, 73, 76, 78, 80, 81, 82, 85, 86, 87, 91], "select": [0, 1, 3, 9, 19, 21, 36, 37, 43, 48, 51, 54, 57, 73, 86, 87, 91], "too": [0, 12, 13, 18, 21, 27, 31, 48, 51, 57, 63, 81, 86, 91], "small": [0, 1, 8, 11, 12, 16, 18, 21, 26, 29, 31, 32, 33, 39, 42, 45, 48, 49, 51, 52, 56, 57, 58, 63, 65, 70, 73, 76, 77, 78, 82, 87, 91], "valu": [0, 1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 62, 64, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 91], "primality_test_statu": 0, "aprcl_config": 0, "config": 0, "composit": [0, 18, 19, 27, 41, 44, 55, 80, 91], "unknown": 0, "cannot": [0, 10, 11, 12, 18, 21, 31, 32, 38, 42, 45, 54, 56, 73, 76, 91], "_aprcl_is_prime_gauss": 0, "fix": [0, 1, 14, 24, 26, 29, 31, 43, 46, 48, 51, 57, 74, 76, 80, 87, 91], "probabprim": 0, "void": [0, 1, 3, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91], "aprcl_is_prime_gauss_min_r": 0, "ulong": [0, 1, 3, 12, 14, 16, 18, 19, 21, 22, 24, 26, 29, 31, 33, 34, 35, 36, 37, 39, 40, 43, 46, 48, 49, 51, 52, 54, 57, 58, 64, 70, 71, 72, 73, 74, 76, 77, 78, 80, 82, 84, 85, 86, 91], "aprcl_is_prime_final_divis": 0, "bmod": [0, 1, 18, 21, 31, 32, 76, 80, 86, 91], "where": [0, 1, 3, 5, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 63, 66, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 85, 86, 87, 90, 91], "have": [0, 1, 3, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 31, 32, 33, 35, 38, 39, 40, 42, 45, 46, 48, 49, 51, 52, 56, 57, 58, 61, 63, 64, 65, 66, 70, 71, 73, 74, 76, 78, 79, 80, 82, 84, 86, 87, 89, 90, 91], "_aprcl_config": 0, "hold": [0, 3, 10, 11, 14, 15, 18, 19, 21, 24, 25, 26, 27, 29, 30, 31, 32, 40, 46, 47, 48, 49, 51, 52, 57, 58, 71, 74, 75, 76, 77, 80, 85, 91], "precomput": [0, 9, 16, 18, 19, 21, 26, 33, 63, 64, 70, 72, 76, 78, 80, 86, 87], "paramet": [0, 3, 9, 11, 14, 18, 19, 21, 29, 65, 71, 72, 79, 85, 87, 91], "aprcl_config_gauss_init": 0, "conf": 0, "2": [0, 1, 2, 3, 7, 11, 12, 13, 14, 16, 18, 19, 20, 21, 23, 24, 26, 27, 29, 31, 32, 35, 36, 37, 38, 42, 43, 45, 46, 48, 51, 54, 57, 60, 61, 62, 63, 64, 67, 69, 70, 71, 73, 74, 76, 77, 79, 80, 86, 87, 88, 91], "prod": [0, 1, 21, 31, 71, 91], "limits_": 0, "substack": 0, "q": [0, 1, 5, 8, 11, 12, 13, 14, 16, 18, 21, 24, 26, 29, 32, 34, 36, 37, 38, 39, 42, 43, 45, 46, 48, 49, 51, 52, 54, 56, 57, 58, 63, 66, 70, 74, 76, 80, 81, 82, 86, 87, 88, 91], "text": [0, 18, 21, 26, 36, 37, 43, 48, 51, 54, 57, 64, 76, 91], "also": [0, 1, 3, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 23, 24, 26, 29, 31, 33, 34, 36, 37, 38, 42, 43, 45, 46, 48, 51, 54, 56, 57, 61, 63, 65, 70, 73, 74, 76, 78, 80, 81, 82, 84, 85, 86, 87, 90, 91], "store": [0, 1, 6, 9, 13, 14, 16, 18, 19, 20, 21, 22, 23, 26, 27, 31, 32, 35, 38, 40, 42, 45, 49, 52, 56, 58, 63, 65, 67, 69, 70, 71, 72, 73, 76, 77, 80, 85, 86, 87, 91], "factor": [0, 1, 3, 14, 15, 16, 18, 20, 21, 22, 25, 26, 27, 30, 31, 33, 36, 40, 43, 47, 48, 49, 51, 52, 54, 57, 58, 70, 75, 76, 77, 87, 88, 90], "aprcl_config_gauss_init_min_r": 0, "equiv": [0, 12, 18, 31, 80, 91], "mod": [0, 1, 3, 8, 12, 13, 16, 18, 19, 21, 22, 32, 39, 48, 49, 51, 52, 57, 58, 91], "all": [0, 1, 2, 3, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 61, 63, 66, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 89, 91], "coprim": [0, 16, 18, 31, 34, 91], "aprcl_config_gauss_clear": 0, "clear": [0, 5, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 29, 30, 31, 34, 35, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 56, 57, 59, 66, 67, 68, 69, 73, 74, 75, 76, 80, 81, 82, 83, 86, 90, 91], "given": [0, 1, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91], "element": [0, 1, 12, 13, 14, 18, 21, 22, 24, 26, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 50, 51, 53, 54, 55, 56, 57, 59, 71, 73, 74, 76, 78, 79, 80, 86, 91], "must": [0, 1, 2, 3, 5, 8, 9, 10, 12, 13, 14, 16, 18, 19, 20, 21, 23, 24, 26, 29, 31, 33, 35, 38, 39, 42, 45, 46, 48, 51, 54, 56, 57, 63, 66, 68, 70, 71, 72, 73, 74, 76, 78, 82, 85, 89, 90, 91], "reinitialis": [0, 13, 16, 26, 31, 33, 39, 48, 51, 57, 78, 82], "order": [0, 1, 7, 9, 11, 12, 13, 14, 16, 18, 19, 21, 23, 24, 26, 27, 29, 31, 35, 36, 38, 39, 40, 42, 43, 45, 46, 48, 49, 51, 52, 54, 56, 57, 58, 63, 73, 74, 76, 77, 82, 86], "again": [0, 11, 12, 13, 16, 19, 26, 31, 33, 38, 39, 42, 45, 48, 51, 56, 57, 73, 76, 78, 82, 91], "aprcl_r_valu": 0, "correspond": [0, 1, 9, 13, 14, 15, 17, 18, 21, 24, 25, 26, 27, 29, 30, 31, 33, 39, 46, 47, 48, 51, 54, 57, 61, 71, 74, 75, 76, 78, 80, 82, 91], "greater": [0, 1, 9, 14, 16, 18, 19, 20, 21, 22, 26, 27, 29, 31, 39, 46, 48, 51, 57, 70, 71, 74, 76, 77, 82, 86, 87, 88, 91], "than": [0, 1, 3, 5, 7, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 31, 32, 33, 34, 38, 39, 42, 45, 46, 48, 51, 56, 57, 62, 63, 64, 66, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 86, 87, 88, 91], "sqrt": [0, 1, 9, 12, 18, 19, 20, 26, 31, 39, 48, 51, 57, 76, 91], "maximum": [0, 7, 10, 16, 19, 29, 31, 33, 35, 40, 49, 52, 58, 64, 71, 73, 76, 78, 79, 84, 90, 91], "6983776800": 0, "allow": [0, 1, 5, 9, 11, 12, 13, 14, 16, 18, 21, 23, 24, 26, 29, 31, 33, 36, 37, 38, 42, 45, 46, 48, 51, 54, 56, 57, 65, 66, 70, 73, 74, 76, 78, 80, 81, 83, 85, 86, 89, 91], "6000": 0, "aprcl_config_jacobi_init": 0, "aprcl_config_jacobi_clear": 0, "_unity_zp": 0, "unity_zp": 0, "repres": [0, 1, 11, 12, 14, 18, 19, 21, 24, 26, 27, 29, 31, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 48, 49, 51, 52, 54, 55, 57, 58, 64, 74, 76, 77, 79, 80, 81, 82, 84, 86, 91], "an": [0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 85, 86, 88, 90, 91], "mathbb": [0, 13, 14, 16, 21, 24, 26, 27, 29, 31, 32, 36, 37, 43, 46, 54, 73, 74, 76, 91], "z": [0, 9, 12, 18, 19, 20, 21, 24, 26, 27, 29, 31, 32, 36, 37, 43, 54, 71, 73, 74, 76, 78, 80, 81, 82, 86, 91], "zeta_": 0, "p": [0, 1, 9, 12, 13, 18, 19, 21, 22, 23, 24, 26, 27, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 61, 70, 72, 73, 75, 76, 77, 78, 87, 88, 91], "exp": [0, 1, 7, 9, 12, 14, 16, 18, 19, 21, 24, 27, 29, 31, 32, 33, 34, 35, 40, 46, 49, 52, 58, 67, 69, 70, 71, 74, 76, 77, 78, 80, 86, 91], "fmpz_mod_poly_t": [0, 23, 26, 27, 36, 37, 39, 41, 48, 51, 57], "reduc": [0, 1, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 23, 26, 29, 31, 33, 35, 36, 37, 39, 43, 48, 51, 54, 57, 70, 72, 74, 76, 78, 79, 80, 81, 82, 86, 91], "modulo": [0, 1, 12, 13, 16, 18, 19, 21, 23, 24, 26, 27, 28, 29, 31, 32, 35, 36, 38, 39, 40, 42, 43, 45, 48, 49, 51, 52, 54, 56, 57, 58, 60, 70, 72, 73, 74, 76, 78, 79, 80, 81, 82, 86, 87, 88, 91], "polynomi": [0, 7, 8, 9, 11, 19, 20, 34, 36, 37, 41, 43, 44, 54, 55, 60, 61, 86, 87, 88, 90, 91], "_unity_zpq": 0, "unity_zpq": 0, "zeta_q": 0, "zeta_p": 0, "arrai": [0, 4, 9, 10, 12, 14, 15, 16, 18, 19, 20, 21, 24, 25, 26, 27, 29, 30, 31, 35, 42, 45, 46, 47, 48, 51, 56, 57, 60, 65, 71, 73, 74, 75, 76, 80, 82, 86, 87, 90, 91], "unity_zp_init": 0, "f": [0, 1, 6, 10, 11, 12, 15, 16, 17, 18, 19, 25, 26, 27, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 75, 76, 77, 80, 82, 85, 86, 89, 90, 91], "initi": [0, 1, 9, 10, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 36, 37, 38, 42, 43, 45, 46, 47, 54, 56, 71, 72, 73, 74, 75, 76, 87, 90, 91], "unity_zp_clear": 0, "unity_zp_copi": 0, "g": [0, 1, 3, 8, 10, 11, 12, 14, 15, 16, 18, 24, 25, 26, 29, 30, 31, 39, 46, 47, 48, 51, 57, 61, 64, 74, 75, 76, 80, 82, 88, 90, 91], "set": [0, 1, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 45, 46, 47, 49, 50, 52, 53, 54, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 85, 86, 89, 90, 91], "unity_zp_swap": 0, "swap": [0, 5, 11, 12, 13, 14, 15, 18, 21, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 56, 57, 59, 63, 66, 68, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 82], "unity_zp_set_zero": 0, "zero": [0, 1, 5, 6, 7, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 86, 87, 90, 91], "slong": [0, 1, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91], "unity_zp_is_un": 0, "zeta": [0, 1], "unity_zp_equ": 0, "nonzero": [0, 7, 12, 13, 14, 16, 18, 21, 23, 24, 26, 27, 28, 29, 31, 33, 38, 39, 40, 42, 45, 46, 48, 49, 51, 52, 56, 57, 58, 70, 71, 73, 74, 76, 78, 79, 91], "th": [0, 1, 8, 9, 14, 16, 18, 20, 21, 24, 29, 31, 34, 36, 37, 42, 43, 45, 46, 54, 56, 73, 74, 86, 88, 91], "unity_zp_print": 0, "print": [0, 5, 8, 11, 12, 13, 14, 16, 17, 18, 21, 23, 24, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 46, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 66, 70, 71, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 90, 91], "content": [0, 5, 13, 14, 23, 24, 26, 29, 32, 33, 42, 45, 46, 48, 51, 56, 57, 66, 68, 73, 74, 78, 81], "unity_zp_coeff_set_fmpz": 0, "ind": 0, "x": [0, 1, 5, 7, 9, 10, 11, 12, 13, 14, 16, 18, 19, 21, 22, 23, 24, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 54, 55, 56, 57, 58, 63, 64, 66, 70, 71, 73, 74, 76, 77, 78, 80, 82, 86, 87, 90, 91], "unity_zp_coeff_set_ui": 0, "less": [0, 1, 3, 9, 12, 14, 16, 18, 21, 24, 26, 29, 31, 32, 46, 48, 51, 57, 62, 63, 64, 66, 67, 71, 74, 76, 79, 82, 86, 87, 91], "unity_zp_coeff_add_fmpz": 0, "unity_zp_coeff_add_ui": 0, "add": [0, 1, 3, 9, 16, 18, 19, 26, 32, 34, 35, 39, 48, 50, 51, 53, 57, 59, 61, 63, 67, 69, 76, 79, 87, 91], "unity_zp_coeff_inc": 0, "increment": [0, 12, 16, 26, 31, 39, 48, 51, 57, 82, 91], "unity_zp_coeff_dec": 0, "decrement": 0, "unity_zp_mul_scalar_fmpz": 0, "cdot": [0, 18, 19, 26, 31, 76, 90, 91], "unity_zp_mul_scalar_ui": 0, "unity_zp_add": 0, "unity_zp_mul": 0, "unity_zp_sqr": 0, "unity_zp_mul_inplac": 0, "untiy_zp": 0, "t": [0, 1, 5, 9, 11, 16, 18, 21, 26, 31, 33, 39, 41, 44, 48, 51, 55, 57, 61, 76, 80, 81, 85, 87, 88, 89, 91], "3": [0, 1, 2, 3, 12, 18, 21, 26, 31, 37, 48, 51, 57, 61, 63, 70, 73, 76, 79, 80, 85, 87, 88, 91], "4": [0, 1, 2, 9, 12, 16, 18, 19, 21, 26, 31, 61, 64, 70, 85, 86, 88, 91], "5": [0, 1, 2, 3, 7, 12, 18, 20, 21, 26, 31, 61, 76, 80, 88, 91], "7": [0, 7, 11, 18, 31, 71, 76, 80, 91], "8": [0, 1, 2, 12, 18, 21, 26, 61, 63, 70, 71, 76, 80, 88, 91], "9": [0, 5, 8, 66, 71, 88], "11": [0, 1, 31, 88], "16": [0, 19, 91], "special": [0, 16, 20, 26, 27, 31, 39, 40, 48, 49, 51, 52, 57, 58, 60, 61, 62, 76, 77, 82, 84, 91], "prealloc": [0, 26, 76], "unity_zp_sqr_inplac": 0, "unity_zp_pow_fmpz": 0, "pow": [0, 26, 73, 80], "unity_zp_pow_ui": 0, "_unity_zp_pow_select_k": 0, "smallest": [0, 12, 14, 18, 20, 31, 33, 71, 78, 91], "satisfi": [0, 1, 11, 12, 16, 18, 19, 21, 31, 76, 80, 91], "log": [0, 1, 18, 26, 76, 80, 86], "2k": [0, 1, 9], "unity_zp_pow_2k_fmpz": 0, "ari": 0, "exponenti": [0, 1, 16, 19, 26, 31, 32, 33, 39, 48, 51, 57, 76, 78, 86, 91], "method": [0, 7, 9, 11, 13, 16, 18, 21, 24, 26, 29, 31, 34, 39, 48, 51, 57, 74, 76, 87], "unity_zp_pow_2k_ui": 0, "unity_zp_pow_sliding_fmpz": 0, "slide": [0, 26, 48, 51, 57, 76], "window": [0, 3, 26, 48, 51, 57, 76, 84], "_unity_zp_reduce_cyclotomic_divmod": 0, "_unity_zp_reduce_cyclotom": 0, "phi_": 0, "poli": [0, 1, 7, 9, 16, 24, 26, 27, 29, 31, 34, 35, 36, 37, 39, 40, 48, 49, 51, 52, 54, 57, 58, 76, 77, 82], "unity_zp_reduce_cyclotom": 0, "unity_zp_aut": 0, "sigma_x": 0, "unity_zp_aut_inv": 0, "so": [0, 3, 9, 11, 13, 14, 16, 18, 20, 21, 26, 29, 31, 35, 39, 48, 51, 54, 57, 63, 70, 71, 76, 80, 82, 86, 87, 90, 91], "here": [0, 3, 9, 14, 18, 20, 21, 22, 23, 26, 31, 73, 83, 85, 91], "chi_": 0, "charact": [0, 1, 14, 24, 29, 31, 34, 35, 36, 37, 46, 54, 74, 86], "defin": [0, 1, 3, 7, 12, 14, 16, 18, 21, 24, 26, 29, 31, 35, 36, 37, 39, 41, 43, 44, 46, 48, 51, 54, 55, 57, 65, 73, 74, 76, 78, 80, 82, 85, 86, 90, 91], "primit": [0, 14, 15, 16, 25, 26, 30, 31, 32, 36, 43, 47, 54, 64, 75, 76], "root": [0, 1, 3, 9, 18, 41, 44, 55, 80, 87, 88], "unity_zp_jacobi_sum_pq": 0, "j": [0, 1, 5, 9, 13, 16, 18, 20, 21, 23, 26, 31, 33, 38, 42, 45, 48, 51, 56, 57, 66, 68, 73, 76, 78, 80, 81, 86, 88, 91], "unity_zp_jacobi_sum_2q_on": 0, "j_2": 0, "unity_zp_jacobi_sum_2q_two": 0, "j_3": 0, "unity_zpq_init": 0, "unity_zpq_clear": 0, "reiniti": 0, "unity_zpq_copi": 0, "unity_zpq_swap": 0, "unity_zpq_equ": 0, "unity_zpq_p_un": 0, "unity_zpq_is_p_un": 0, "unity_zpq_is_p_unity_gener": 0, "gener": [0, 1, 3, 8, 10, 11, 16, 17, 26, 31, 36, 37, 41, 43, 44, 49, 52, 54, 55, 58, 63, 68, 76, 77, 83, 86, 87, 90], "cyclic": [0, 91], "group": [0, 1, 2, 19, 36, 37, 43, 54, 60, 86, 88, 91], "unity_zpq_coeff_set_fmpz": 0, "unity_zpq_coeff_set_ui": 0, "unity_zpq_coeff_add": 0, "unity_zpq_add": 0, "unity_zpq_mul": 0, "_unity_zpq_mul_unity_p": 0, "unity_zpq_mul_unity_p_pow": 0, "unity_zpq_pow": 0, "unity_zpq_pow_ui": 0, "unity_zpq_gauss_sum": 0, "tau": [0, 1, 31], "unity_zpq_gauss_sum_sigma_pow": 0, "sigma_n": 0, "arith_primori": 1, "re": [1, 6, 9, 12, 13, 16, 17, 18, 19, 21, 23, 26, 27, 31, 32, 33, 35, 38, 39, 40, 41, 42, 44, 45, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 67, 69, 72, 73, 76, 77, 78, 79, 82, 83, 86, 88, 90], "product": [1, 5, 8, 9, 12, 14, 15, 16, 18, 23, 25, 27, 30, 33, 34, 36, 37, 39, 40, 42, 43, 45, 47, 48, 49, 51, 52, 54, 56, 57, 58, 62, 63, 66, 68, 69, 70, 71, 73, 75, 77, 78, 80, 81, 82, 86, 91], "equal": [1, 5, 6, 9, 11, 12, 13, 14, 16, 18, 19, 21, 23, 24, 26, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 66, 67, 68, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 86, 91], "_arith_harmonic_numb": 1, "num": [1, 10, 11, 12, 13, 17, 19, 29, 34, 71, 91], "den": [1, 11, 12, 13, 16, 17, 21, 33, 34, 78], "arith_harmonic_numb": 1, "fmpq_t": [1, 11, 12, 13, 14, 15, 16, 17, 21, 30, 31, 80, 82], "These": [1, 9, 10, 11, 14, 20, 24, 29, 31, 41, 44, 46, 55, 71, 74, 84, 89, 91], "alias": [1, 5, 9, 12, 13, 14, 16, 18, 21, 23, 26, 27, 29, 31, 32, 33, 35, 36, 38, 40, 42, 43, 45, 48, 49, 51, 52, 54, 56, 57, 58, 66, 70, 73, 76, 77, 78, 80, 82, 83, 86], "fmpq": [1, 13, 14, 16, 17, 31, 60], "arith_stirling_number_1u": 1, "arith_stirling_number_1": 1, "arith_stirling_number_2": 1, "denot": [1, 11, 16, 26, 31, 34, 39, 48, 51, 57, 76, 82, 86], "unsign": [1, 10, 18, 19, 31, 35, 63, 64, 82, 84, 87, 91], "first": [1, 3, 8, 9, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 31, 33, 34, 38, 39, 42, 45, 47, 48, 49, 51, 52, 56, 57, 58, 63, 66, 67, 70, 71, 73, 74, 75, 76, 77, 78, 82, 83, 85, 86, 87, 91], "kind": [1, 8, 16, 31, 70], "s_1": [1, 16], "sign": [1, 5, 6, 7, 9, 10, 12, 16, 18, 19, 21, 26, 29, 31, 32, 33, 35, 48, 51, 57, 60, 63, 64, 71, 76, 78, 82, 91], "second": [1, 3, 8, 9, 11, 18, 21, 26, 76, 85], "s_2": 1, "x_": [1, 14, 24, 26, 29, 31, 46, 74, 76], "sum_": [1, 12, 26, 29, 31, 36, 37, 43, 48, 51, 54, 57, 74, 76, 80, 86], "dotsm": 1, "fall": [1, 18, 31, 76, 78], "factori": [1, 18, 71, 80], "rise": [1, 18], "taken": [1, 9, 21, 31, 36, 37, 39, 43, 48, 51, 54, 57, 91], "three": [1, 3, 6, 9, 13, 14, 29, 34, 63, 71, 72, 76, 91], "isol": 1, "effici": [1, 11, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 29, 30, 31, 33, 34, 39, 46, 47, 48, 51, 57, 68, 70, 74, 75, 76, 78, 80, 81, 82, 90, 91], "rang": [1, 14, 18, 19, 21, 22, 24, 29, 31, 35, 46, 63, 70, 71, 74, 80, 81, 82, 87, 91], "vector": [1, 12, 13, 14, 16, 19, 20, 21, 23, 24, 26, 29, 31, 33, 36, 42, 43, 45, 46, 48, 51, 54, 56, 57, 60, 71, 73, 74, 76, 78, 83, 91], "matrix": [1, 8, 20, 26, 41, 44, 48, 51, 55, 57, 68, 76, 87, 88], "version": [1, 2, 3, 8, 9, 11, 12, 14, 18, 20, 21, 24, 26, 27, 29, 31, 46, 48, 49, 51, 52, 57, 58, 60, 61, 64, 73, 74, 76, 77, 80, 84, 90, 91], "should": [1, 3, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 25, 26, 30, 31, 33, 47, 61, 65, 70, 71, 73, 74, 75, 76, 78, 79, 89, 90, 91], "arith_stirling_number_1u_vec": 1, "fmpz": [1, 11, 12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 26, 27, 28, 29, 31, 35, 36, 43, 46, 48, 51, 54, 57, 60, 61, 70, 71, 74, 80, 81, 82, 86], "row": [1, 5, 9, 13, 20, 23, 26, 48, 51, 57, 66, 68, 76, 81], "klen": 1, "arith_stirling_number_1_vec": 1, "arith_stirling_number_2_vec": 1, "full": [1, 7, 9, 20, 21, 23, 33, 38, 42, 45, 56, 61, 73, 78, 84, 87, 91], "assum": [1, 3, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 51, 52, 54, 56, 57, 58, 62, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 90, 91], "most": [1, 3, 9, 11, 12, 14, 16, 18, 19, 21, 24, 26, 29, 31, 33, 36, 38, 39, 42, 43, 45, 46, 48, 51, 54, 56, 57, 61, 63, 70, 71, 73, 74, 76, 78, 80, 82, 86, 89, 91], "arith_stirling_number_1u_vec_next": 1, "prev": [1, 31], "arith_stirling_number_1_vec_next": 1, "arith_stirling_number_2_vec_next": 1, "contain": [1, 3, 11, 12, 16, 18, 20, 26, 27, 31, 32, 37, 40, 42, 45, 48, 49, 51, 52, 56, 57, 58, 64, 73, 76, 77, 78, 80, 81, 85, 86, 91], "argument": [1, 11, 16, 21, 22, 26, 31, 35, 70, 76, 80, 81, 82, 85, 91], "output": [1, 3, 8, 9, 15, 20, 25, 27, 30, 38, 40, 42, 45, 47, 49, 52, 56, 58, 70, 71, 73, 75, 77, 91], "end": [1, 3, 6, 12, 14, 24, 26, 29, 31, 35, 42, 45, 46, 48, 51, 56, 57, 61, 63, 65, 73, 74, 76, 90, 91], "follow": [1, 3, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 23, 24, 26, 29, 31, 33, 34, 35, 38, 39, 41, 42, 44, 45, 46, 48, 50, 51, 53, 55, 56, 57, 59, 61, 63, 65, 73, 74, 76, 78, 80, 81, 82, 87, 90, 91], "input": [1, 3, 7, 9, 19, 20, 27, 36, 37, 39, 40, 43, 48, 49, 51, 52, 54, 57, 58, 70, 71, 77, 85, 86, 87, 91], "onli": [1, 3, 4, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31, 34, 35, 39, 48, 50, 51, 53, 57, 59, 64, 70, 71, 73, 74, 76, 80, 82, 84, 85, 86, 91], "need": [1, 2, 3, 9, 12, 16, 18, 19, 20, 22, 23, 24, 26, 29, 31, 33, 35, 48, 51, 57, 63, 71, 72, 74, 76, 78, 79, 91], "length": [1, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 39, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 91], "entri": [1, 5, 6, 11, 12, 14, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 35, 38, 39, 40, 42, 45, 46, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 66, 67, 68, 71, 73, 74, 76, 77, 78, 79, 82, 87, 91], "read": [1, 8, 10, 11, 12, 16, 18, 21, 23, 26, 31, 35, 38, 42, 45, 48, 51, 56, 57, 73, 76, 87, 91], "permit": [1, 9, 14, 18, 24, 26, 29, 31, 35, 46, 48, 51, 57, 70, 74, 76], "updat": [1, 4, 21, 26, 31, 32, 42, 45, 56, 71, 73, 76, 87], "place": [1, 3, 9, 12, 13, 16, 18, 20, 21, 23, 26, 27, 31, 35, 38, 40, 42, 45, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 61, 63, 70, 73, 76, 77, 81, 82, 91], "arith_stirling_matrix_1u": 1, "fmpz_mat_t": [1, 13, 20, 21, 23, 26, 33, 38], "mat": [1, 5, 13, 21, 23, 33, 38, 42, 45, 56, 66, 68, 73, 78], "arith_stirling_matrix_1": 1, "arith_stirling_matrix_2": 1, "For": [1, 3, 8, 9, 11, 12, 14, 16, 17, 18, 21, 23, 24, 26, 29, 31, 35, 36, 37, 41, 43, 44, 46, 48, 50, 51, 53, 54, 55, 57, 59, 61, 64, 71, 73, 74, 76, 78, 80, 84, 86, 87, 90, 91], "arbitrari": [1, 12, 14, 18, 23, 24, 26, 29, 31, 38, 39, 42, 43, 45, 46, 48, 51, 56, 57, 65, 73, 74, 76], "m": [1, 5, 9, 11, 12, 13, 14, 16, 18, 21, 23, 24, 26, 29, 31, 38, 39, 41, 42, 44, 45, 46, 48, 49, 51, 52, 55, 56, 57, 58, 63, 66, 70, 73, 74, 76, 77, 78, 81, 85, 86, 91], "write": [1, 11, 12, 13, 18, 26, 31, 36, 39, 43, 48, 51, 54, 57, 63, 73, 76, 87, 91], "truncat": [1, 5, 7, 9, 13, 16, 18, 20, 21, 23, 26, 31, 32, 33, 38, 39, 41, 42, 44, 45, 48, 51, 55, 56, 57, 66, 73, 76, 78, 82, 86, 91], "infinit": [1, 12, 18], "column": [1, 5, 9, 13, 20, 23, 33, 36, 38, 41, 42, 43, 44, 45, 54, 55, 56, 66, 68, 73, 78, 81], "inclus": [1, 18, 21, 31, 33, 73, 78, 86, 91], "upper": [1, 5, 12, 21, 23, 26, 29, 31, 38, 42, 45, 56, 66, 71, 73, 91], "triangular": [1, 5, 21, 66], "part": [1, 9, 11, 13, 16, 18, 21, 26, 31, 34, 36, 37, 43, 54, 80, 81, 86, 91], "ani": [1, 2, 3, 9, 10, 11, 12, 13, 14, 16, 18, 19, 21, 22, 23, 24, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 45, 46, 48, 51, 54, 56, 57, 61, 62, 64, 70, 71, 72, 73, 74, 76, 78, 79, 82, 86, 89, 90, 91], "matric": [1, 8, 12, 24, 29, 60, 74, 88], "thu": [1, 11, 15, 25, 26, 30, 31, 47, 48, 51, 57, 63, 75, 76, 81, 82, 86, 91], "obtain": [1, 3, 7, 11, 12, 13, 18, 21, 26, 31, 34, 38, 42, 45, 56, 73, 76, 85, 87, 90], "invers": [1, 9, 12, 16, 18, 34, 36, 37, 39, 41, 43, 44, 48, 49, 51, 52, 54, 55, 56, 57, 58, 63, 64, 70, 72, 76, 80, 83, 86, 87], "each": [1, 3, 4, 5, 6, 9, 10, 12, 13, 14, 16, 18, 20, 21, 22, 23, 24, 26, 28, 29, 31, 32, 33, 35, 38, 42, 45, 46, 48, 51, 56, 57, 61, 70, 71, 73, 74, 76, 78, 80, 87, 90, 91], "other": [1, 3, 5, 6, 11, 14, 16, 18, 19, 20, 21, 22, 23, 24, 26, 29, 31, 38, 39, 42, 45, 46, 48, 51, 54, 56, 57, 61, 64, 65, 70, 71, 73, 74, 76, 79, 81, 91], "arith_bell_numb": 1, "b": [1, 5, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 51, 54, 56, 57, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 85, 87, 88, 90, 91], "arith_bell_number_dobinski": 1, "arith_bell_number_multi_mod": 1, "b_n": [1, 5, 13, 26, 31, 66, 76], "member": 1, "equival": [1, 3, 8, 10, 11, 12, 13, 17, 18, 21, 23, 26, 27, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 48, 49, 51, 52, 54, 56, 57, 58, 73, 76, 77, 78, 80, 86], "between": [1, 5, 6, 7, 9, 12, 13, 16, 18, 19, 21, 23, 24, 26, 27, 29, 31, 32, 33, 38, 40, 42, 45, 48, 49, 51, 52, 56, 57, 58, 70, 71, 73, 74, 76, 77, 78, 80, 82, 85, 86, 90, 91], "tabl": [1, 12, 18, 19, 31, 65, 87, 91], "lookup": [1, 12, 91], "dobinski": 1, "formula": [1, 12, 16, 18, 19, 21, 31, 33, 42, 45, 56, 73, 76, 78, 86, 87, 88, 91], "multimodular": [1, 13, 18, 21, 31], "evalu": [1, 7, 9, 11, 12, 19, 36, 37, 43, 54, 80, 86, 88, 90, 91], "precis": [1, 2, 18, 20, 21, 26, 27, 31, 32, 33, 38, 39, 40, 42, 45, 48, 49, 51, 52, 56, 57, 58, 60, 63, 66, 67, 68, 69, 73, 77, 78, 79, 80, 81, 82, 85, 86, 91], "seri": [1, 12, 39, 41, 44, 48, 51, 55, 57, 61, 80, 86, 88, 91], "e": [1, 3, 7, 8, 9, 10, 11, 12, 13, 16, 18, 20, 21, 22, 24, 26, 29, 31, 32, 33, 35, 36, 37, 39, 41, 43, 44, 48, 51, 54, 55, 57, 61, 63, 64, 70, 71, 72, 73, 76, 78, 80, 82, 86, 87, 88, 90, 91], "infti": [1, 26, 31, 76, 80, 86], "frac": [1, 12, 16, 18, 26, 31, 62, 76, 80, 86, 91], "fact": [1, 9, 11, 12, 18, 26, 31, 48, 51, 57, 76, 80, 91], "approx": [1, 20], "lceil": [1, 18, 64, 80, 81, 91], "rceil": [1, 18, 64, 80, 81, 91], "avoid": [1, 11, 16, 21, 64, 80], "float": [1, 6, 12, 18, 20, 33, 78, 88, 91], "point": [1, 6, 9, 12, 13, 14, 18, 19, 20, 21, 23, 24, 26, 29, 33, 38, 42, 45, 46, 48, 51, 56, 57, 73, 74, 76, 78, 88, 91], "multi_mod": [1, 13], "result": [1, 9, 11, 12, 13, 14, 16, 18, 19, 21, 23, 24, 29, 31, 33, 35, 36, 39, 41, 42, 43, 44, 45, 46, 48, 51, 54, 55, 56, 57, 63, 67, 69, 70, 71, 73, 74, 76, 78, 79, 80, 81, 82, 85, 86, 88, 90, 91], "sever": [1, 21, 26, 33, 35, 48, 51, 57, 73, 76, 87], "limb": [1, 9, 10, 12, 18, 19, 20, 31, 35, 60, 63, 64, 72, 73, 76, 79, 91], "size": [1, 9, 10, 11, 12, 13, 16, 18, 20, 21, 24, 26, 29, 33, 36, 37, 51, 54, 57, 60, 70, 71, 80, 84, 85, 87, 89, 90, 91], "reconstruct": [1, 11, 18], "fast": [1, 8, 20, 26, 27, 31, 48, 49, 51, 52, 57, 58, 70, 76, 77, 88, 91], "chines": [1, 8, 21], "remaind": [1, 8, 11, 12, 14, 16, 19, 21, 24, 26, 29, 31, 35, 39, 46, 48, 51, 57, 63, 70, 74], "bound": [1, 6, 12, 13, 14, 18, 19, 20, 21, 26, 29, 33, 38, 42, 45, 56, 68, 73, 78, 79, 88, 91], "arith_bell_number_s": 1, "arith_bell_number_vec": 1, "arith_bell_number_vec_recurs": 1, "arith_bell_number_vec_multi_mod": 1, "b_0": [1, 26, 31, 76], "b_1": [1, 5, 12, 13, 26, 66, 71], "ldot": [1, 5, 12, 13, 16, 21, 26, 31, 41, 44, 48, 51, 55, 57, 66, 71, 76], "b_": 1, "recurs": [1, 9, 12, 23, 26, 31, 38, 42, 45, 56, 65, 73, 76], "o": [1, 3, 16, 18, 21, 26, 31, 39, 41, 44, 48, 51, 55, 57, 76, 84, 86, 91], "recurr": [1, 16, 18, 31], "while": [1, 11, 14, 18, 19, 20, 24, 29, 31, 46, 71, 73, 74, 76, 91], "run": [1, 3, 9, 12, 14, 18, 21, 22, 24, 26, 29, 31, 46, 49, 52, 58, 72, 74, 77, 85, 90, 91], "time": [1, 4, 6, 7, 9, 11, 12, 13, 14, 16, 18, 19, 20, 21, 23, 24, 26, 29, 31, 33, 35, 38, 39, 41, 42, 44, 45, 46, 48, 50, 51, 53, 55, 56, 57, 59, 62, 64, 71, 73, 74, 76, 78, 79, 80, 82, 85, 91], "choos": [1, 3, 13, 18, 20, 21, 23, 24, 26, 27, 29, 31, 33, 35, 38, 39, 40, 42, 45, 48, 49, 51, 52, 56, 57, 58, 73, 74, 76, 78, 80, 81, 86, 87], "mp_limb_t": [1, 3, 9, 10, 11, 14, 18, 19, 21, 24, 29, 31, 35, 46, 54, 62, 65, 70, 72, 73, 74, 76, 77, 78, 79, 84, 87], "arith_bell_number_nmod": 1, "nmod_t": [1, 18, 35, 72, 76, 77, 79], "after": [1, 3, 9, 10, 14, 18, 19, 20, 21, 22, 24, 26, 28, 29, 31, 39, 42, 43, 45, 46, 48, 51, 56, 57, 73, 74, 76, 81, 82, 87, 91], "arrang": 1, "oper": [1, 3, 6, 8, 9, 11, 12, 19, 21, 26, 27, 31, 36, 38, 42, 43, 45, 48, 51, 56, 57, 63, 71, 73, 76, 82, 88, 90, 91], "wai": [1, 3, 9, 11, 12, 18, 20, 31, 76, 80, 82, 91], "multipli": [1, 9, 12, 13, 15, 16, 19, 20, 21, 25, 26, 29, 30, 31, 33, 35, 47, 48, 51, 57, 63, 67, 69, 71, 75, 76, 78, 79, 82, 86, 87, 91], "divid": [1, 9, 12, 13, 14, 16, 18, 21, 24, 26, 27, 29, 31, 35, 39, 40, 41, 44, 46, 48, 49, 51, 52, 55, 57, 58, 63, 70, 71, 74, 76, 87, 91], "main": [1, 3, 5, 9, 10, 12, 13, 14, 21, 23, 24, 26, 29, 31, 33, 38, 42, 45, 46, 56, 61, 65, 66, 71, 73, 74, 78], "loop": [1, 20, 91], "As": [1, 3, 9, 11, 12, 14, 16, 18, 19, 21, 26, 27, 31, 33, 37, 39, 40, 48, 49, 51, 52, 54, 57, 58, 61, 62, 63, 71, 73, 76, 77, 78, 82, 84, 86, 91], "further": [1, 3, 11, 17, 19, 20, 21, 26, 31, 35, 36, 43, 50, 53, 59, 76, 87, 91], "optimis": [1, 20, 34, 61, 91], "siev": [1, 19, 60, 91], "power": [1, 9, 12, 18, 19, 20, 21, 27, 32, 33, 36, 37, 40, 41, 43, 44, 49, 52, 54, 55, 58, 70, 77, 78, 80, 86, 87, 88], "memori": [1, 3, 10, 22, 27, 60, 77, 91], "usag": [1, 8, 16, 20], "divis": [1, 9, 12, 18, 19, 21, 36, 43, 54, 80, 82, 88], "imposs": [1, 21, 26], "back": [1, 10, 12, 18, 19, 20, 21, 31, 33, 76, 78, 89, 90, 91], "arith_bell_number_nmod_vec": 1, "last": [1, 3, 9, 12, 16, 18, 19, 20, 21, 26, 31, 76, 87, 91], "coeffici": [1, 7, 12, 15, 17, 18, 21, 23, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 45, 49, 50, 52, 53, 54, 56, 58, 59, 71, 73, 77, 78, 81, 86, 91], "mp_ptr": [1, 9, 18, 19, 31, 35, 43, 54, 65, 70, 76, 79], "arith_bell_number_nmod_vec_recurs": 1, "arith_bell_number_nmod_vec_ogf": 1, "arith_bell_number_nmod_vec_seri": 1, "ogf": 1, "expand": 1, "ordinari": [1, 9, 18, 26, 31, 70, 76], "binari": [1, 9, 11, 12, 16, 18, 21, 26, 31, 33, 35, 39, 48, 51, 57, 64, 70, 76, 87, 90, 91], "split": [1, 12, 33, 35, 48, 51, 57, 80, 90, 91], "which": [1, 3, 6, 8, 9, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 24, 26, 29, 31, 32, 33, 34, 35, 36, 37, 39, 42, 43, 45, 46, 48, 51, 54, 56, 57, 61, 64, 65, 70, 71, 73, 74, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 90, 91], "work": [1, 6, 9, 11, 12, 13, 16, 18, 20, 21, 54, 70, 76, 78, 80, 84, 85, 87, 89, 90, 91], "whether": [1, 11, 16, 18, 20, 21, 26, 27, 31, 34, 35, 36, 37, 39, 42, 43, 45, 48, 51, 54, 56, 57, 70, 71, 72, 73, 76, 80, 81, 82, 86, 91], "success": [1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 29, 30, 31, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 73, 74, 75, 76, 91], "support": [1, 9, 16, 18, 21, 26, 27, 31, 32, 36, 40, 43, 48, 49, 51, 52, 54, 57, 58, 61, 64, 76, 77, 80, 82, 84, 86, 90, 91], "modulu": [1, 11, 12, 16, 18, 21, 22, 23, 24, 26, 27, 28, 31, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 48, 51, 54, 55, 56, 57, 73, 74, 76, 77, 78, 91], "doubl": [1, 9, 11, 12, 16, 18, 19, 20, 21, 22, 26, 27, 29, 31, 32, 35, 39, 40, 48, 49, 51, 52, 57, 58, 60, 64, 72, 77, 80, 82, 85, 91], "lfloor": [1, 12, 16, 18, 21, 26, 64, 76, 91], "rfloor": [1, 12, 16, 18, 21, 26, 64, 76, 91], "previou": [1, 20, 37, 54, 64, 91], "inequ": [1, 21, 91], "left": [1, 9, 11, 12, 14, 16, 18, 19, 21, 24, 26, 29, 31, 39, 42, 45, 46, 48, 51, 56, 57, 62, 63, 70, 72, 73, 74, 76, 80, 91], "792n": 1, "right": [1, 9, 11, 12, 13, 16, 18, 19, 20, 21, 26, 31, 33, 35, 39, 42, 45, 48, 51, 56, 57, 62, 65, 70, 73, 76, 78, 80, 91], "bertas2010": [1, 88], "now": [1, 3, 18, 91], "slightli": [1, 7, 12], "better": [1, 9, 21, 91], "base": [1, 3, 7, 12, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 34, 36, 40, 43, 47, 48, 49, 51, 52, 54, 57, 58, 62, 70, 71, 72, 74, 75, 76, 80, 87, 88, 91], "asymptot": [1, 7, 31], "expans": [1, 7, 8, 12, 16, 18, 21, 26, 31, 39, 48, 51, 57, 76], "_arith_bernoulli_numb": 1, "numer": [1, 3, 11, 12, 13, 17, 20, 21, 24, 29, 31, 34, 61, 64], "denomin": [1, 11, 12, 13, 14, 17, 21, 33, 34, 63, 78], "present": [1, 31, 91], "simpli": [1, 3, 11, 13, 15, 21, 24, 25, 26, 27, 29, 30, 31, 33, 34, 40, 46, 47, 48, 49, 51, 52, 57, 58, 74, 75, 76, 77, 78, 91], "_arith_bernoulli_number_zeta": 1, "arith_bernoulli_numb": 1, "apart": [1, 11, 26, 31, 48, 51, 57], "from": [1, 3, 4, 7, 8, 9, 10, 11, 12, 14, 16, 18, 19, 20, 21, 24, 26, 29, 31, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 62, 63, 64, 70, 71, 73, 74, 76, 77, 78, 79, 80, 85, 86, 87, 90, 91], "being": [1, 3, 9, 11, 12, 18, 19, 20, 21, 26, 29, 31, 38, 39, 42, 45, 48, 51, 56, 57, 71, 73, 76, 89, 91], "singl": [1, 6, 9, 12, 15, 18, 19, 25, 30, 34, 35, 40, 47, 49, 52, 58, 60, 63, 64, 70, 75, 76, 90], "variabl": [1, 12, 13, 14, 16, 18, 20, 21, 24, 26, 29, 31, 33, 34, 36, 37, 39, 43, 46, 48, 51, 54, 57, 65, 67, 71, 74, 78, 80, 85, 86, 88], "warn": 1, "doe": [1, 8, 9, 11, 12, 14, 16, 18, 19, 20, 21, 22, 24, 26, 27, 29, 31, 32, 34, 35, 36, 40, 43, 46, 48, 49, 51, 52, 54, 57, 58, 62, 72, 74, 76, 77, 78, 80, 82, 85, 86, 90, 91], "proven": [1, 18, 31, 70, 91], "could": [1, 18, 19, 31, 71, 91], "wrong": [1, 82], "veri": [1, 8, 11, 13, 18, 21, 26, 29, 31, 33, 65, 73, 78], "larg": [1, 12, 13, 16, 18, 21, 31, 32, 48, 51, 57, 70, 72, 73, 76, 78, 80, 87, 90, 91], "recommend": [1, 2, 3, 15, 25, 30, 31, 47, 61, 65, 75], "arb": 1, "instead": [1, 3, 8, 9, 11, 18, 21, 26, 48, 51, 57, 70, 76, 84, 87, 91], "_arith_bernoulli_number_vec": 1, "b_2": [1, 5, 12, 13, 66, 71], "accord": [1, 12, 18, 19, 20, 80, 81, 91], "arith_bernoulli_number_vec": 1, "arith_bernoulli_number_denom": 1, "even": [1, 11, 14, 16, 18, 21, 26, 27, 31, 42, 45, 48, 51, 56, 57, 73, 83, 86, 87, 91], "properti": [1, 12], "consequ": 1, "von": 1, "staudt": 1, "clausen": 1, "theorem": [1, 18, 21, 26, 63, 76, 80, 91], "odd": [1, 9, 18, 21, 31, 42, 45, 56, 70, 73, 80, 83, 86, 87, 91], "trivial": [1, 16, 18, 19, 26, 48, 51, 57, 86, 91], "whenev": [1, 11, 16, 18, 31, 35, 36, 37, 43, 54, 80, 86], "sequenc": [1, 12, 16, 26, 31, 76, 80, 91], "smaller": [1, 7, 12, 19, 26, 42, 45, 48, 51, 56, 57, 64, 66, 67, 73, 76, 91], "32": [1, 3, 31, 61, 64, 65, 84, 91], "look": [1, 18, 19, 91], "directli": [1, 11, 12, 13, 18, 21, 38, 42, 45, 56, 73, 85, 91], "arith_bernoulli_number_s": 1, "pi": [1, 9, 31, 91], "le": [1, 12, 14, 16, 18, 19, 21, 24, 26, 29, 31, 46, 74, 76, 88, 89, 90, 91], "No": [1, 11, 12, 13, 14, 16, 18, 21, 26, 29, 31, 33, 37, 38, 39, 42, 45, 46, 48, 51, 54, 56, 57, 69, 70, 71, 72, 73, 76, 78, 82, 91], "treatment": 1, "accuraci": [1, 7, 18, 91], "guarante": [1, 11, 14, 16, 18, 19, 21, 26, 31, 36, 37, 39, 43, 48, 51, 54, 57, 82, 84, 87, 91], "10": [1, 7, 8, 18, 80, 81, 88, 91], "14": 1, "arith_bernoulli_polynomi": 1, "fmpq_poly_t": [1, 13, 14, 16, 82], "degre": [1, 16, 26, 27, 31, 33, 36, 37, 39, 40, 41, 43, 44, 48, 49, 51, 52, 54, 55, 57, 58, 71, 76, 77, 78, 82, 86], "binom": [1, 31], "b_k": 1, "basic": [1, 23, 61], "rescal": [1, 13, 16], "exact": [1, 9, 14, 16, 18, 20, 24, 29, 31, 35, 46, 65, 68, 69, 70, 74, 80, 81, 90, 91], "approxim": [1, 7, 14, 18, 19, 20, 29, 33, 63, 70, 78, 88, 91], "2n": [1, 9, 16, 17, 26, 31, 35, 76, 78, 91], "real": [1, 31, 88], "round": [1, 12, 18, 21, 31, 35, 63, 68, 91], "tini": [1, 21], "unnecessari": [1, 21, 33, 78], "overhead": [1, 11, 70], "_arith_bernoulli_number_vec_recurs": 1, "ramanujan": [1, 31], "express": [1, 16, 19, 26, 31, 70, 80, 91], "b_m": 1, "over": [1, 11, 12, 18, 36, 43, 54, 60, 61, 87, 91], "congruent": [1, 18, 76, 86, 91], "6": [1, 2, 3, 9, 18, 26, 31, 61, 88, 91], "appli": [1, 9, 11, 13, 18, 20, 21, 23, 24, 29, 31, 33, 38, 42, 45, 56, 63, 73, 76, 78, 83, 90, 91], "repeatedli": [1, 27, 32, 40, 49, 52, 58, 77, 91], "costli": 1, "gcd": [1, 11, 12, 14, 16, 18, 21, 24, 26, 29, 31, 32, 33, 39, 46, 48, 51, 57, 74, 76, 78, 91], "transform": [1, 20, 26, 48, 51, 76], "intern": [1, 3, 14, 18, 19, 21, 22, 23, 26, 31, 32, 46, 48, 51, 57, 64, 65, 72, 76, 82, 88, 91], "common": [1, 13, 15, 17, 21, 33, 35, 78], "perform": [1, 7, 9, 11, 12, 13, 16, 18, 19, 20, 21, 24, 26, 29, 31, 33, 34, 38, 42, 45, 48, 49, 51, 52, 56, 57, 58, 60, 65, 73, 74, 76, 77, 78, 79, 87, 91], "make": [1, 3, 6, 8, 9, 11, 12, 15, 18, 20, 26, 31, 35, 48, 50, 51, 53, 57, 59, 61, 63, 65, 70, 76, 91], "sai": [1, 11, 20, 26, 31, 76, 80, 81, 82], "1000": 1, "calcul": [1, 16, 21, 24, 26, 29, 31, 32, 35, 74, 76, 87, 88, 91], "http": [1, 2, 3, 4, 5, 6, 18, 19, 20, 60, 66, 88, 91], "en": [1, 91], "wikipedia": [1, 91], "org": [1, 4, 18, 20, 88, 91], "w": [1, 7, 9, 10, 26, 31, 48, 51, 57, 76, 82, 88, 91], "index": [1, 13, 14, 15, 18, 19, 20, 21, 23, 24, 25, 29, 30, 31, 33, 35, 38, 42, 45, 46, 47, 56, 71, 73, 74, 75, 76, 78, 91], "php": 1, "titl": 1, "bernoulli_numb": 1, "oldid": 1, "405938876": 1, "_arith_bernoulli_number_vec_zeta": 1, "repeat": [1, 18, 19, 26, 27, 31, 32, 40, 49, 52, 58, 74, 76, 77, 80, 91], "direct": [1, 12, 13, 18, 21, 33, 48, 51, 57, 73, 78, 91], "_arith_bernoulli_number_vec_multi_mod": 1, "cosh": [1, 76], "4k": 1, "nmod_poli": [1, 26, 60, 78], "yield": [1, 11, 21], "crt": [1, 8, 9, 18, 21, 31, 76], "incorrectli": 1, "buhlercrandallsompolski1992": [1, 88], "save": [1, 18, 26, 76], "about": [1, 7, 9, 18, 20, 26, 31, 39, 48, 51, 57, 65, 70, 71, 72, 80, 82, 85, 86, 91], "half": [1, 9, 12, 26, 31, 76, 91], "compar": [1, 6, 9, 16, 26, 35, 50, 53, 59, 67, 71, 76, 85, 87, 91], "usual": [1, 9, 11, 13, 14, 20, 24, 26, 29, 31, 46, 74, 76, 80, 84, 86, 89, 90, 91], "sinc": [1, 11, 16, 18, 21, 26, 31, 54, 61, 70, 80, 87], "term": [1, 8, 12, 14, 15, 16, 21, 24, 25, 26, 29, 30, 31, 39, 46, 47, 48, 51, 57, 63, 71, 74, 75, 76], "vanish": 1, "e_n": 1, "With": [1, 21], "convent": [1, 12, 18, 90, 91], "ones": [1, 5, 13, 16, 18, 21, 23, 38, 42, 45, 56, 66, 70, 73], "altern": [1, 13], "viz": 1, "e_0": [1, 31], "e_1": [1, 31], "e_2": 1, "61": [1, 88], "1385": 1, "2e": 1, "xt": 1, "arith_euler_numb": 1, "current": [1, 3, 8, 10, 11, 14, 16, 19, 20, 21, 22, 26, 29, 31, 34, 35, 36, 37, 39, 43, 46, 48, 51, 54, 57, 61, 64, 65, 71, 74, 76, 77, 80, 81, 82, 85, 86, 90, 91], "_arith_euler_number_zeta": 1, "arith_euler_number_vec": 1, "dotsc": [1, 16, 26, 31, 70, 80, 91], "e_": 1, "geq": [1, 9, 16, 18, 26, 29, 31, 32, 36, 37, 39, 43, 48, 51, 54, 57, 62, 63, 64, 70, 76, 80, 82, 86, 91], "initialis": [1, 5, 6, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 89, 91], "suffici": [1, 11, 12, 18, 21, 26, 31, 39, 42, 45, 48, 51, 56, 57, 73, 76, 87, 91], "e_k": 1, "tight": [1, 79], "arith_euler_number_s": 1, "final": [1, 9, 11, 18, 19, 20, 21, 26, 31, 32, 35, 49, 52, 58, 64, 76, 77], "recov": [1, 21, 31], "balanc": [1, 12, 18, 31, 80], "arith_euler_polynomi": 1, "onc": [1, 3, 12, 21, 35, 38, 42, 45, 56, 70, 73, 74, 85, 87, 90, 91], "bernoulli_polynomi": 1, "relat": [1, 11, 12, 21, 26, 31, 73, 76, 87], "l": [1, 12, 16, 18, 20, 21, 22, 23, 26, 35, 38, 42, 45, 56, 72, 73, 76, 81, 88], "dirichlet": [1, 88], "chi": 1, "arith_euler_phi": 1, "arith_moebius_mu": 1, "arith_divisor_sigma": 1, "arith_divisor": 1, "fmpz_poly_t": [1, 11, 16, 21, 24, 26, 29, 31, 32, 33, 34, 36, 37, 39, 82], "divisor": [1, 21, 70], "includ": [1, 2, 3, 11, 16, 18, 20, 23, 26, 31, 34, 35, 40, 61, 65, 71, 80, 82, 86, 90, 91], "itself": [1, 31, 91], "ascend": [1, 19, 35, 70, 86], "arith_ramanujan_tau": 1, "prod_": [1, 16, 26, 31, 32, 36, 37, 43, 54, 76], "bigl": [1, 18, 31, 80, 86], "bigr": [1, 18, 31, 80, 86], "24": [1, 19, 31, 91], "ident": [1, 8, 13, 16, 18, 20, 21, 23, 31, 33, 38, 41, 42, 43, 44, 45, 55, 56, 73, 76, 78, 81, 83, 91], "pq": 1, "along": [1, 9, 13, 14, 18, 21, 24, 29, 31, 46, 74, 87], "arith_ramanujan_tau_seri": 1, "speed": [1, 3, 21, 42, 45, 56, 65, 73, 85, 91], "depend": [1, 3, 7, 12, 13, 14, 15, 16, 18, 21, 24, 25, 26, 29, 30, 31, 33, 35, 36, 37, 42, 43, 45, 46, 47, 54, 56, 73, 74, 75, 76, 78, 80, 82, 86, 91], "largest": [1, 18, 20, 21, 26, 27, 31, 35, 39, 40, 48, 49, 51, 52, 57, 58, 70, 71, 76, 91], "futur": [1, 8, 18, 20, 24, 43, 76, 80, 89, 90, 91], "improv": [1, 9, 16, 18, 19, 21, 31, 73, 76, 86, 88], "accomplish": [1, 11, 22, 90], "give": [1, 8, 12, 13, 18, 19, 20, 26, 29, 31, 32, 33, 35, 64, 71, 72, 74, 76, 78, 85, 90, 91], "theta": [1, 26, 31], "biggl": [1, 31], "biggr": [1, 31], "done": [1, 3, 16, 18, 21, 26, 31, 34, 71, 81, 82, 91], "spars": [1, 21, 26, 31, 33, 36, 38, 42, 43, 45, 54, 56, 73, 76, 78, 86, 91], "_arith_cos_minpoli": 1, "coeff": [1, 11, 13, 16, 18, 26, 31, 35, 39, 48, 51, 57, 76], "d": [1, 9, 10, 12, 13, 14, 18, 20, 21, 23, 24, 26, 27, 28, 29, 31, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 51, 52, 54, 56, 57, 58, 63, 70, 73, 74, 77, 86, 88, 91], "minim": [1, 12, 26, 32, 33, 41, 44, 55, 78, 82, 88], "psi_n": 1, "co": [1, 31, 76, 88], "scale": [1, 12, 20, 21, 29, 31, 91], "when": [1, 3, 10, 11, 14, 16, 18, 20, 24, 26, 29, 31, 32, 33, 35, 38, 39, 42, 45, 46, 48, 51, 56, 57, 64, 73, 74, 76, 78, 80, 82, 86, 89, 90, 91], "two": [1, 3, 5, 6, 9, 11, 12, 13, 16, 17, 18, 19, 20, 21, 23, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 70, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 91], "waktinszeitlin1993": [1, 88], "paper": [1, 5, 6, 19, 20, 66, 88, 91], "mpfr": [1, 2, 3, 8, 12, 60, 61, 80], "tree": [1, 3, 8, 12, 31, 70, 84, 91], "form": [1, 11, 12, 14, 16, 18, 19, 24, 26, 27, 29, 32, 33, 34, 40, 46, 48, 49, 51, 52, 57, 58, 74, 76, 77, 78, 80, 81, 82, 83, 88, 91], "determin": [1, 19, 23, 26, 27, 31, 36, 37, 38, 42, 43, 45, 54, 56, 64, 70, 76, 88, 90, 91], "note": [1, 2, 3, 9, 11, 12, 13, 14, 16, 18, 20, 21, 23, 26, 29, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 45, 48, 51, 54, 55, 56, 57, 61, 63, 64, 65, 70, 71, 73, 74, 76, 78, 80, 81, 82, 86, 88, 90, 91], "alpha": [1, 16, 21], "central": 1, "binomi": [1, 18, 26, 31, 76], "mathworld": [1, 91], "wolfram": [1, 91], "com": [1, 2, 3, 60, 91], "trigonometryangl": 1, "html": [1, 4, 91], "arith_cos_minpoli": 1, "ha": [1, 3, 4, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 48, 49, 51, 52, 54, 56, 57, 58, 61, 67, 70, 71, 73, 74, 76, 77, 78, 80, 81, 82, 85, 86, 89, 90, 91], "phi": [1, 18, 31, 91], "psi_0": 1, "arith_landau_function_vec": 1, "len": [1, 6, 7, 14, 16, 17, 18, 24, 26, 27, 28, 29, 31, 32, 33, 35, 36, 39, 40, 43, 46, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 67, 69, 71, 74, 76, 77, 78, 79, 82, 86, 91], "start": [1, 7, 9, 10, 12, 14, 16, 18, 19, 20, 24, 26, 29, 31, 35, 39, 40, 46, 48, 51, 57, 70, 71, 74, 76, 89, 90, 91], "symmetr": [1, 18, 21, 31, 35], "s_n": [1, 16, 31], "deleglisenicolaszimmermann2009": [1, 88], "arith_dedekind_sum_na": 1, "arith_dedekind_sum_coprime_d": 1, "arith_dedekind_sum_coprime_larg": 1, "arith_dedekind_sum_coprim": 1, "arith_dedekind_sum": 1, "arith_number_of_partitions_vec": 1, "pentagon": 1, "arith_number_of_partitions_nmod_vec": 1, "arith_hrr_expsum_factor": 1, "trig_prod_t": 1, "symbol": [1, 18, 62, 88], "a_k": 1, "2hn": 1, "appear": [1, 3, 12, 14, 24, 29, 46, 74], "hardi": 1, "rademach": [1, 88], "rather": [1, 5, 9, 11, 13, 20, 21, 23, 26, 33, 34, 42, 45, 56, 66, 68, 73, 78, 81, 91], "naiv": [1, 9, 12, 13, 76], "cosin": [1, 16, 31], "factoris": [1, 8, 18, 60], "process": [1, 5, 19, 20, 21, 26, 66, 76, 85, 87, 91], "whiteman1956": [1, 88], "structur": [1, 10, 14, 18, 19, 21, 24, 26, 27, 29, 31, 32, 40, 46, 49, 52, 58, 71, 72, 74, 76, 77, 81, 82, 88, 90, 91], "ration": [1, 7, 11, 21, 31, 33, 61, 78, 80, 81, 82], "prefactor": 1, "pre": [1, 31, 80], "trig_prod_init": 1, "24k": 1, "24n": 1, "do": [1, 3, 6, 9, 11, 12, 14, 18, 20, 24, 26, 29, 31, 39, 46, 48, 51, 57, 60, 61, 65, 74, 76, 80, 82, 85], "overflow": [1, 9, 18, 29, 31, 35, 62, 63, 65, 71, 73, 80, 91], "larger": [1, 8, 12, 16, 18, 19, 21, 26, 29, 31, 39, 48, 51, 57, 76, 82, 91], "arith_number_of_partitions_mpfr": 1, "mpfr_t": [1, 12, 18, 69], "chang": [1, 3, 8, 10, 11, 12, 18, 26, 41, 43, 44, 48, 51, 55, 57, 76, 80, 81, 85, 90, 91], "exactli": [1, 11, 12, 18, 21, 26, 31, 38, 39, 42, 45, 48, 51, 56, 57, 72, 73, 76, 80, 82, 84, 85, 91], "interfac": [1, 2, 3, 11, 14, 24, 29, 46, 65, 74, 80, 90], "mai": [1, 3, 7, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 23, 24, 26, 29, 31, 36, 38, 42, 43, 45, 48, 51, 56, 57, 65, 70, 71, 73, 74, 76, 82, 85, 90, 91], "error": [1, 6, 7, 11, 12, 16, 18, 31, 35, 36, 37, 43, 54, 65, 86, 91], "rademacher1937": [1, 88], "u": [1, 4, 9, 10, 11, 20, 21, 23, 26, 38, 42, 45, 48, 51, 56, 57, 73, 76, 80, 82, 91], "c": [1, 2, 5, 8, 9, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 42, 45, 46, 47, 48, 50, 51, 53, 56, 57, 59, 61, 62, 66, 67, 68, 69, 71, 73, 74, 76, 78, 79, 81, 82, 87, 88, 91], "sinh": [1, 76], "quad": [1, 18, 26, 76, 91], "certain": [1, 88], "44": 1, "225": [1, 88], "75": 1, "25": [1, 20, 88], "absolut": [1, 12, 16, 18, 21, 29, 35, 62, 64], "expect": [1, 3, 9, 11, 14, 16, 18, 21, 22, 24, 26, 27, 29, 31, 46, 70, 72, 74, 76, 80, 86, 91], "summat": 1, "increas": [1, 9, 10, 12, 18, 19, 20, 42, 45, 56, 62, 73, 82, 85, 87, 90, 91], "essenti": [1, 9, 11, 12, 18], "addit": [1, 9, 10, 11, 12, 19, 20, 65, 80, 89, 90, 91], "correct": [1, 14, 16, 24, 26, 31, 48, 51, 57, 63, 74, 76, 82, 91], "nearest": [1, 12, 18, 91], "estim": [1, 22, 72, 91], "step": [1, 3, 11, 16, 18, 26, 27, 31, 49, 52, 58, 63, 76, 77, 91], "provid": [1, 3, 7, 8, 9, 11, 12, 16, 18, 21, 26, 27, 31, 32, 36, 39, 40, 43, 48, 49, 51, 52, 54, 57, 58, 61, 70, 77, 80, 84, 86, 90, 91], "log_2": [1, 64, 80, 87], "bit": [1, 9, 12, 13, 14, 16, 17, 19, 20, 21, 24, 29, 33, 46, 61, 62, 63, 64, 66, 67, 70, 71, 72, 74, 79, 84, 86, 87, 91], "get": [1, 11, 20, 27, 40, 49, 52, 58, 73, 77, 81, 90, 91], "low": [1, 12, 16, 18, 26, 31, 34, 39, 48, 51, 57, 76], "below": [1, 9, 11, 12, 16, 18, 21, 29, 31, 74, 91], "magnitud": [1, 7], "broken": [1, 9, 21], "down": [1, 3, 18, 20, 21, 23, 31, 35, 91], "angl": 1, "optim": [1, 20, 21, 31, 33, 76, 78, 87], "involv": [1, 9, 76, 80, 90], "trigonometr": 1, "rel": [1, 7, 15, 18, 19, 25, 30, 31, 47, 75, 76], "therefor": [1, 11, 12, 18, 31, 76, 87], "just": [1, 9, 11, 18, 19, 20, 26, 31, 76, 90, 91], "cancel": [1, 20, 67, 82], "concern": [1, 88], "termin": [1, 3, 14, 16, 18, 21, 24, 29, 31, 36, 37, 39, 43, 46, 48, 51, 54, 57, 74, 86], "befor": [1, 3, 9, 10, 12, 14, 16, 18, 20, 24, 29, 31, 32, 43, 46, 65, 70, 74, 76, 89, 91], "becom": [1, 21, 63], "analysi": 1, "more": [1, 3, 9, 10, 11, 18, 19, 20, 21, 23, 26, 27, 31, 33, 38, 42, 45, 48, 49, 51, 52, 56, 57, 58, 63, 70, 72, 73, 76, 77, 78, 91], "detail": [1, 2, 11, 17, 21, 26, 31, 35, 36, 43, 50, 53, 59, 76, 91], "almost": [1, 11], "certainli": 1, "least": [1, 9, 14, 16, 18, 19, 21, 23, 24, 26, 27, 29, 31, 32, 35, 36, 37, 39, 40, 42, 43, 45, 46, 48, 49, 51, 52, 54, 56, 57, 58, 63, 64, 66, 67, 70, 71, 73, 74, 76, 77, 78, 80, 81, 82, 86, 90, 91], "consid": [1, 11, 14, 16, 18, 20, 21, 26, 27, 31, 36, 37, 40, 43, 49, 52, 54, 58, 71, 76, 77, 80, 91], "significantli": [1, 29, 91], "overshoot": 1, "actual": [1, 11, 16, 18, 26, 31, 48, 51, 57, 71, 76, 79, 86], "switch": [1, 16, 20, 21, 31, 42, 45, 56, 76, 91], "enough": [1, 26, 27, 31, 36, 37, 40, 43, 48, 49, 51, 52, 54, 57, 58, 65, 73, 76, 77, 80, 91], "separ": [1, 3, 12, 16, 17, 19, 21, 23, 31, 34, 35, 50, 53, 59, 73, 76, 80, 81, 91], "accumul": [1, 29, 87], "ad": [1, 6, 12, 18, 26, 27, 31, 40, 49, 52, 58, 76, 77, 91], "period": 1, "arith_number_of_partit": 1, "written": [1, 9, 13, 18, 21, 23, 31, 42, 45, 56, 73, 76, 82, 87, 89], "posit": [1, 6, 7, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 29, 31, 34, 35, 36, 37, 38, 39, 42, 43, 45, 48, 50, 51, 53, 54, 56, 57, 59, 70, 71, 76, 80, 81, 82, 86, 87, 91], "without": [1, 3, 11, 12, 18, 20, 21, 22, 26, 31, 33, 76, 78, 81, 83], "regard": [1, 3, 9, 91], "128": 1, "arith_sum_of_squar": 1, "r_k": 1, "either": [1, 3, 11, 13, 14, 16, 18, 21, 22, 23, 24, 26, 27, 29, 31, 35, 36, 39, 42, 43, 45, 46, 48, 51, 54, 56, 57, 61, 63, 64, 66, 68, 70, 71, 72, 73, 74, 76, 77, 80, 81, 82, 85, 90, 91], "off": [1, 21, 34, 63, 73], "arith_sum_of_squares_vec": 1, "r_i": [1, 12, 16, 26, 27, 31, 40, 49, 52, 58, 76], "represent": [1, 12, 14, 16, 18, 20, 24, 26, 29, 31, 34, 36, 37, 39, 43, 46, 48, 51, 60, 62, 70, 71, 74, 76, 80, 81, 82, 86, 87, 91], "effect": [1, 9, 10, 11, 79, 88], "vartheta_3": 1, "rais": [1, 5, 10, 12, 13, 14, 16, 18, 19, 20, 21, 23, 24, 26, 27, 29, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 48, 49, 51, 52, 54, 56, 57, 58, 66, 73, 74, 76, 77, 78, 80, 82, 86, 91], "maintain": [2, 11, 60, 91], "wish": [2, 3, 10, 31, 85], "made": [2, 11, 12, 18, 19, 20, 21, 26, 31, 39, 48, 51, 57, 61, 65, 67, 69, 72, 76, 82, 91], "awar": 2, "pleas": [2, 3, 4, 90], "send": 2, "email": 2, "your": [2, 3, 4, 8, 11], "flint": [2, 4, 8, 11, 18, 21, 31, 34, 36, 37, 39, 43, 48, 51, 54, 57, 79, 80, 91], "devel": [2, 4, 60], "list": [2, 3, 4, 11, 16, 17, 18, 20, 21, 23, 29, 31, 35, 50, 53, 59, 60, 61, 76, 81, 82, 84, 87], "system": [2, 3, 7, 8, 12, 13, 21, 31, 38, 42, 45, 56, 73, 84, 90], "gcc": [2, 61], "gmp": [2, 3, 18, 61, 65, 84, 91], "mpir": [2, 3, 8, 18, 61, 80], "how": [2, 3, 8, 11, 18, 65, 90], "replic": 2, "link": [2, 3, 31, 61], "against": [2, 3, 22, 91], "later": [2, 3, 11, 26, 31, 36, 37, 54, 60, 61, 76, 86, 87], "compil": [2, 3, 7, 9, 11, 18, 61, 64, 76], "96": [2, 61], "parallel": [2, 3, 85], "build": [2, 8, 11, 18, 19, 26, 31, 60, 76, 91], "There": [3, 9, 11, 15, 18, 20, 23, 25, 27, 30, 31, 34, 36, 37, 38, 42, 43, 45, 47, 48, 49, 51, 52, 54, 56, 57, 58, 61, 73, 75, 76, 77, 80, 87, 90, 91], "One": [3, 11, 16, 18, 31, 85, 90, 91], "through": [3, 9, 20, 78, 91], "standard": [3, 8, 10, 13, 18, 27, 31, 32, 33, 40, 49, 52, 58, 61, 65, 71, 76, 77, 78, 91], "cmake": 3, "distribut": [3, 18, 26, 31, 60, 61, 76], "custom": [3, 21, 90], "script": 3, "makefil": 3, "third": [3, 19, 31], "msvc": 3, "document": [3, 8, 31, 60, 61, 90, 91], "section": [3, 10, 11, 12, 31, 61], "easiest": 3, "share": [3, 13, 21, 23, 38, 42, 45, 56, 73], "librari": [3, 8, 10, 11, 18, 61, 65], "download": 3, "tarbal": [3, 61], "untar": 3, "built": [3, 8, 11, 18, 65, 76, 90, 91], "enabl": [3, 11, 31, 34], "gmpcompat": 3, "option": [3, 16, 18, 20, 26, 31, 90], "pthread": [3, 90], "fork": 3, "pipe": 3, "howev": [3, 7, 9, 11, 16, 18, 19, 20, 21, 26, 31, 42, 45, 56, 73, 76, 90, 91], "disabl": 3, "posix": 3, "happen": [3, 76, 90, 91], "locat": [3, 61, 71, 87, 91], "usr": 3, "lib": 3, "you": [3, 4, 8, 11, 20, 31], "tell": 3, "thei": [3, 6, 9, 16, 20, 21, 26, 31, 35, 39, 48, 50, 51, 53, 57, 59, 65, 67, 71, 73, 80, 90, 91], "path": 3, "home": 3, "user1": 3, "local": [3, 9, 31, 32, 65, 73, 90, 91], "sourc": [3, 11, 60, 61, 84], "though": [3, 11, 18, 26, 39, 48, 51, 57, 61], "program": [3, 18, 20, 31, 61, 65, 85, 91], "via": [3, 11, 14, 18, 20, 26, 31, 38, 42, 45, 48, 51, 56, 57, 71, 73, 76, 80, 85, 86, 91], "static": [3, 11, 18, 64, 91], "platform": [3, 61, 84], "pass": [3, 10, 11, 12, 13, 18, 19, 21, 23, 27, 29, 31, 33, 38, 42, 45, 49, 52, 56, 58, 65, 70, 71, 73, 77, 78, 85, 91], "substanti": [3, 61], "intend": [3, 13, 16, 31, 34, 91], "header": [3, 11, 38, 42, 45, 56, 73], "specifi": [3, 9, 10, 15, 16, 18, 20, 21, 22, 71, 79, 80, 81, 84, 91], "prefix": [3, 11], "directori": [3, 8, 18, 61], "under": [3, 11, 12, 16, 36, 43, 60, 61], "exist": [3, 9, 11, 12, 16, 18, 19, 21, 22, 23, 26, 27, 31, 33, 38, 40, 42, 45, 48, 49, 51, 52, 56, 57, 58, 61, 71, 72, 73, 76, 77, 78, 82, 87, 90, 91], "thread": [3, 18, 23, 26, 29, 31, 60, 65, 73, 74, 76, 91], "storag": [3, 65, 90, 91], "one": [3, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 31, 34, 35, 36, 37, 38, 39, 42, 43, 45, 46, 48, 51, 54, 56, 57, 64, 71, 72, 73, 74, 76, 77, 80, 81, 82, 85, 86, 88, 90, 91], "mutex": 3, "modern": 3, "faster": [3, 9, 12, 14, 16, 18, 19, 20, 21, 29, 31, 74, 91], "its": [3, 8, 10, 11, 12, 16, 18, 19, 20, 21, 23, 26, 29, 31, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 48, 51, 54, 55, 56, 57, 67, 70, 71, 73, 76, 78, 80, 82, 83, 84, 86, 91], "manag": [3, 60], "slower": [3, 12, 35, 91], "complic": 3, "reentrant": [3, 18], "debug": [3, 31, 34, 70, 80, 82], "trace": [3, 36, 37, 41, 43, 44, 54, 55, 86], "alloc": [3, 6, 12, 14, 16, 18, 21, 24, 26, 27, 29, 31, 32, 35, 36, 37, 39, 40, 43, 46, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 70, 74, 76, 77, 80, 82, 86, 91], "import": [3, 31, 65], "On": [3, 16, 26, 48, 51, 57, 76, 88, 91], "sparc": 3, "mac": 3, "avail": [3, 4, 11, 14, 19, 34, 36, 37, 42, 43, 45, 46, 54, 56, 61, 64, 73, 81, 84, 89, 90, 91], "cpu": [3, 85], "type": [3, 8, 10, 20, 61, 64, 71, 80, 89, 91], "choic": [3, 13, 21, 27, 31, 33, 40, 49, 52, 58, 71, 78, 81], "overridden": 3, "64": [3, 9, 18, 31, 61, 64, 65, 84, 88, 91], "mingw64": 3, "necessari": [3, 9, 11, 14, 18, 26, 31, 34, 39, 48, 51, 57, 70, 76, 84, 87, 88, 90, 91], "unabl": 3, "distinguish": [3, 90], "mingw32": 3, "overrid": [3, 65], "x86_64": 3, "x86": [3, 61], "ia64": [3, 61], "sparc64": 3, "ppc": 3, "ppc64": 3, "unrecognis": 3, "those": [3, 27, 31, 38, 40, 42, 45, 49, 52, 56, 58, 73, 77, 87, 91], "machin": [3, 19, 20, 31, 61, 64, 91], "linux": [3, 85], "cygwin32": 3, "cygwin64": 3, "darwin": 3, "freebsd": 3, "suno": 3, "cc": 3, "cflag": 3, "full_path_to_compil": 3, "etc": [3, 11, 18, 20, 31, 61, 63, 76, 86, 91], "function": [3, 5, 8, 13, 15, 19, 21, 22, 23, 25, 26, 27, 30, 31, 32, 33, 38, 39, 40, 42, 45, 47, 48, 49, 51, 52, 56, 57, 58, 60, 61, 64, 65, 72, 73, 75, 77, 78, 81, 82, 83, 84, 85, 87, 88, 89], "flintxx": [3, 60], "cxx": 3, "alwai": [3, 11, 12, 13, 16, 18, 20, 21, 23, 27, 29, 31, 32, 33, 36, 37, 40, 42, 45, 49, 52, 54, 56, 58, 63, 70, 71, 73, 74, 76, 77, 78, 80, 81, 82, 86, 91], "becaus": [3, 11, 16, 26, 27, 70, 76, 81, 90, 91], "segfault": 3, "exhaust": [3, 65, 91], "due": [3, 4, 9, 11, 20, 21, 76, 91], "complex": [3, 7, 16, 21, 26, 31, 32, 76, 86, 88], "gnu": [3, 60, 61], "mingw": 3, "cygwin": 3, "unix": 3, "command": 3, "gmake": 3, "packag": 3, "mkdir": 3, "cd": 3, "dbuild_shared_lib": 3, "ON": 3, "target": [3, 11], "appropri": [3, 7, 9, 21, 31, 39, 48, 51, 57, 61, 76, 90, 91], "Then": [3, 21, 31, 32, 33, 63, 78, 80, 82, 85, 87, 91], "lflint": 3, "lmpfr": 3, "lgmp": 3, "lpthread": 3, "uninstal": 3, "ld_library_path": [3, 8], "let": [3, 9, 12, 13, 16, 21, 24, 26, 29, 31, 63, 76, 80, 82, 91], "linker": 3, "know": 3, "find": [3, 12, 16, 17, 18, 19, 21, 26, 31, 32, 33, 39, 48, 51, 57, 76, 77, 78, 87, 91], "refer": [3, 12, 13, 14, 16, 18, 20, 21, 23, 29, 31, 33, 34, 35, 46, 66, 68, 74, 76, 78, 90], "difficulti": 3, "conflict": 3, "undef": 3, "ulongxx": 3, "stdio": 3, "h": [3, 11, 60, 64, 65, 88, 90], "prevent": [3, 16], "definit": [3, 12, 14, 16, 18, 19, 20, 21, 23, 60, 73, 85], "interf": 3, "respond": 3, "clean": [3, 12, 14, 16, 18, 24, 29, 31, 46, 65, 71, 74, 91], "distclean": 3, "j4": 3, "buggi": 3, "modnam": 3, "name": [3, 4, 9, 11, 14, 16, 20, 24, 26, 29, 31, 36, 37, 39, 43, 46, 48, 51, 54, 57, 61, 74, 86, 90, 91], "invert": [3, 16, 18, 22, 23, 24, 26, 36, 37, 38, 39, 42, 43, 45, 48, 51, 54, 57, 73, 74, 76, 91], "comma": 3, "ulong_extra": [3, 60], "fft": [3, 35, 60, 90], "fmpz_mat": [3, 13, 20, 60, 81], "individu": [3, 5, 13, 16, 21, 23, 26, 27, 31, 32, 33, 34, 40, 42, 45, 49, 52, 56, 58, 66, 68, 73, 77, 78, 80, 81, 85], "chosen": [3, 18, 21, 22, 33, 42, 45, 56, 71, 72, 73, 78, 86, 91], "colon": [3, 36, 37, 43, 54, 86], "clog": 3, "is_prim": 3, "add_sub": 3, "charpoli": 3, "fq_vec": [3, 60], "want": [3, 11, 14, 20, 24, 29, 46, 74, 90], "slow": [3, 12, 13, 91], "consider": 3, "deploy": 3, "encount": [3, 21, 31, 33, 78], "problem": [3, 26, 42, 45, 48, 51, 56, 57, 64, 73], "mostli": 3, "illeg": 3, "abort": [3, 16, 18, 21, 31, 32, 33, 78, 80, 82, 86, 91], "experiment": [3, 90], "proper": [3, 18], "flint_throw": 3, "rare": [3, 90, 91], "At": [3, 26, 76, 91], "flint_set_abort": 3, "abort_func": 3, "user": [3, 11, 12, 14, 18, 20, 24, 29, 31, 34, 46, 65, 71, 74, 76, 85, 90, 91], "similar": [3, 12, 13, 18, 20, 21, 23, 26, 38, 42, 45, 56, 64, 65, 73, 80, 91], "brian": 3, "gladman": 3, "kindli": 3, "commun": [3, 71], "higher": [3, 10, 19, 20, 88, 91], "python": [3, 11, 91], "tool": 3, "github": [3, 60], "ptv": 3, "clone": 3, "git": 3, "repositori": [3, 61], "briangladman": 3, "applic": [3, 12, 26, 31, 88], "layout": [3, 80], "dll": 3, "vc": 3, "sub": 3, "dynam": [3, 29, 74, 90], "normal": [3, 14, 15, 18, 19, 24, 29, 46, 70, 73, 74, 88, 91], "win32": 3, "releas": [3, 4, 13, 14, 16, 18, 21, 23, 24, 26, 29, 31, 32, 38, 39, 42, 45, 46, 48, 51, 56, 57, 73, 74, 76, 82, 89], "x64": 3, "particular": [3, 11, 16, 21, 26, 31, 39, 48, 51, 57, 70, 80, 86, 87, 91], "been": [3, 4, 9, 10, 13, 14, 16, 18, 19, 20, 21, 23, 26, 31, 32, 35, 36, 37, 38, 42, 43, 45, 54, 56, 61, 70, 73, 74, 76, 80, 86, 89, 91], "previous": [3, 10, 26], "open": [3, 21, 23, 76], "sln": 3, "project": [3, 19, 41, 44, 55, 91], "flint_config": 3, "creat": [3, 11, 18, 21, 33, 37, 73, 78, 82, 85, 87, 89, 90, 91], "build_test": 3, "run_test": 3, "py": 3, "within": [3, 5, 6, 9, 18, 68, 76], "line": [3, 11, 21, 23, 87, 88, 91], "19": [3, 85, 88], "exampl": [3, 11, 18, 21, 26, 31, 60, 61, 64, 71, 73, 76, 80, 85, 90, 91], "vs19": 3, "load": 3, "extraordinari": 4, "high": [4, 18, 21, 26, 31, 36, 37, 39, 43, 48, 51, 54, 57, 70, 71, 76, 91], "qualiti": [4, 36, 37, 43, 54], "contribut": [4, 61, 63], "vast": 4, "peopl": [4, 5, 19, 66, 91], "complet": [4, 9, 11, 12, 19, 21, 33, 78, 91], "websit": [4, 61], "flintlib": 4, "believ": 4, "miss": [4, 19, 91], "contact": 4, "immedi": [4, 11, 14, 24, 29, 31, 46, 74], "d_mat_init": 5, "d_mat_t": [5, 20, 21], "col": [5, 13, 21, 23, 33, 36, 38, 42, 43, 45, 54, 56, 66, 68, 73, 78], "d_mat_clear": 5, "d_mat_set": 5, "mat1": [5, 13, 21, 23, 33, 38, 42, 45, 56, 66, 68, 73, 78, 81], "mat2": [5, 13, 21, 23, 33, 38, 42, 45, 56, 66, 68, 73, 78, 81], "copi": [5, 6, 11, 12, 16, 18, 21, 31, 33, 35, 38, 42, 45, 50, 53, 56, 59, 61, 66, 67, 69, 73, 76, 78, 79, 81], "dimens": [5, 13, 20, 21, 23, 33, 38, 42, 45, 56, 66, 73, 76, 78], "d_mat_swap": 5, "differ": [5, 9, 11, 12, 13, 16, 18, 19, 21, 26, 31, 34, 36, 37, 38, 39, 42, 43, 45, 48, 51, 54, 56, 57, 65, 66, 67, 69, 71, 76, 79, 80, 81, 82, 86, 87, 91], "d_mat_swap_entrywis": 5, "struct": [5, 12, 13, 15, 19, 21, 23, 25, 26, 30, 33, 42, 45, 47, 56, 66, 68, 73, 75, 76, 78, 81, 85, 86, 91], "d_mat_entri": 5, "both": [5, 9, 11, 12, 13, 14, 18, 20, 21, 24, 26, 29, 31, 46, 63, 66, 73, 74, 76, 80, 82, 86], "exce": [5, 9, 14, 21, 24, 29, 31, 46, 62, 66, 74, 85, 90, 91], "macro": [5, 11, 60, 72, 79, 80, 82, 84], "d_mat_get_entri": 5, "d_mat_entry_ptr": 5, "pointer": [5, 6, 9, 12, 18, 26, 31, 34, 35, 36, 43, 48, 51, 54, 57, 65, 70, 71, 73, 76, 80, 81, 82, 87, 91], "d_mat_zero": 5, "d_mat_on": 5, "unit": [5, 16, 18, 21, 23, 26, 29, 31, 33, 38, 39, 40, 42, 45, 48, 51, 56, 57, 66, 73, 76, 78, 80, 81, 82, 86], "diagon": [5, 13, 20, 21, 23, 33, 38, 42, 45, 56, 66, 73, 78], "elsewher": [5, 13, 21, 33, 66, 78], "nonsquar": [5, 21, 31, 33, 66, 78], "d_mat_randtest": 5, "flint_rand_t": [5, 6, 7, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 62, 67, 68, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 86, 91], "state": [5, 6, 7, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 62, 66, 67, 68, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 86, 89, 91], "minexp": [5, 6, 7], "maxexp": [5, 6, 7], "expon": [5, 6, 7, 9, 14, 15, 18, 19, 20, 24, 25, 26, 27, 29, 30, 31, 32, 35, 40, 46, 47, 49, 52, 58, 71, 74, 75, 77, 86, 87, 91], "d_mat_print": 5, "stream": [5, 11, 12, 16, 17, 18, 21, 26, 31, 35, 39, 48, 50, 51, 53, 57, 59, 66, 76, 80, 81, 82], "stdout": [5, 14, 16, 17, 18, 21, 23, 24, 26, 29, 31, 34, 35, 36, 37, 38, 39, 42, 43, 45, 46, 48, 50, 51, 53, 54, 56, 57, 59, 66, 70, 73, 74, 76, 80, 82, 83, 86], "d_mat_equ": 5, "non": [5, 12, 13, 16, 17, 18, 19, 20, 21, 23, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 63, 66, 67, 73, 76, 77, 78, 80, 82, 86, 87, 90, 91], "d_mat_approx_equ": 5, "ep": [5, 6], "d_mat_is_zero": 5, "d_mat_is_approx_zero": 5, "d_mat_is_empti": 5, "d_mat_is_squar": 5, "d_mat_transpos": 5, "compat": [5, 13, 21, 33, 38, 42, 45, 56, 66, 73, 78], "object": [5, 10, 11, 18, 19, 20, 21, 26, 34, 38, 42, 45, 56, 71, 73, 76, 80, 85, 90], "squar": [5, 6, 9, 13, 18, 19, 20, 21, 23, 33, 36, 37, 38, 42, 43, 45, 49, 52, 54, 56, 58, 67, 70, 77, 78, 80, 81, 87, 88], "d_mat_mul_class": 5, "except": [5, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 23, 24, 26, 29, 31, 37, 38, 39, 42, 45, 46, 48, 51, 54, 56, 57, 61, 66, 71, 73, 74, 76, 86, 91], "d_mat_gso": 5, "take": [5, 11, 13, 14, 18, 19, 21, 24, 26, 27, 29, 31, 32, 35, 40, 46, 49, 52, 58, 63, 66, 71, 74, 76, 77, 81, 82, 84, 85, 91], "subset": [5, 11, 13, 21, 26, 66, 82, 87], "a_1": [5, 12, 13, 26, 31, 34, 66, 70, 76, 80], "a_2": [5, 12, 13, 26, 66, 70, 76], "a_n": [5, 13, 26, 31, 34, 66, 76], "orthonorm": [5, 66], "span": [5, 13, 21, 33, 66, 78], "subspac": [5, 13, 66], "schwarz": [5, 66], "rutishaus": [5, 66], "see": [5, 6, 8, 9, 11, 12, 14, 16, 17, 18, 20, 21, 23, 26, 31, 35, 36, 43, 50, 51, 53, 59, 65, 66, 73, 76, 90, 91], "pp": [5, 31, 66, 88, 91], "inf": [5, 66], "ethz": [5, 66], "ch": [5, 66], "gander": [5, 66], "qrneu": [5, 66], "pdf": [5, 6, 19, 66, 88, 91], "d_mat_qr": 5, "orthogon": [5, 13, 66], "_d_vec_init": 6, "_d_vec_clear": 6, "vec": [6, 17, 35, 50, 53, 59, 67, 69, 79, 83], "free": [6, 9, 10, 13, 17, 18, 21, 22, 26, 27, 33, 35, 39, 40, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 65, 72, 76, 77, 78, 79, 80, 82, 88, 91], "space": [6, 9, 12, 14, 16, 17, 18, 21, 22, 23, 24, 26, 27, 29, 31, 32, 34, 35, 36, 37, 39, 40, 43, 46, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 70, 71, 72, 73, 74, 76, 77, 80, 81, 82, 86, 90], "_d_vec_randtest": 6, "random": [6, 17, 19, 26, 31, 34, 35, 36, 37, 39, 43, 48, 51, 54, 57, 67, 68, 71, 80, 82, 83, 86, 88], "_d_vec_set": 6, "vec1": [6, 17, 20, 35, 50, 53, 59, 67, 69, 79, 83], "vec2": [6, 17, 20, 35, 50, 53, 59, 67, 69, 79, 83], "len2": [6, 16, 20, 26, 29, 31, 34, 35, 48, 50, 51, 53, 57, 59, 67, 76, 82], "_d_vec_zero": 6, "_d_vec_equ": 6, "_d_vec_is_zero": 6, "_d_vec_is_approx_zero": 6, "_d_vec_approx_equ": 6, "_d_vec_add": 6, "sum": [6, 11, 13, 18, 19, 21, 26, 33, 34, 36, 37, 39, 43, 48, 50, 51, 53, 54, 57, 59, 63, 71, 73, 78, 79, 80, 81, 82, 86, 88, 91], "_d_vec_sub": 6, "minu": [6, 18, 26, 31, 35, 50, 53, 59, 67, 91], "_d_vec_dot": 6, "_d_vec_norm": 6, "euclidean": [6, 12, 18, 21, 26, 67, 76, 91], "_d_vec_dot_heurist": 6, "err": 6, "neg": [6, 7, 12, 13, 14, 16, 18, 19, 24, 26, 29, 31, 33, 35, 36, 37, 39, 43, 46, 48, 51, 54, 57, 64, 71, 72, 74, 76, 80, 81, 82, 86, 91], "_d_vec_dot_thric": 6, "thrice": 6, "ogita": 6, "rump": 6, "oishi": 6, "url": 6, "www": [6, 88, 91], "ti3": 6, "tuhh": 6, "de": 6, "ogruoi05": 6, "d_randtest": 7, "interv": [7, 12, 16, 20, 21, 27, 31, 66, 67, 77, 91], "d_randtest_sign": 7, "d_randtest_speci": 7, "d_nan": 7, "pm": [7, 12, 18, 21, 31, 33, 62, 78], "d_inf": 7, "d_polyv": 7, "horner": [7, 16, 24, 26, 29, 31, 39, 48, 51, 57, 74, 76], "rule": [7, 11, 18, 19, 21, 26, 31, 48, 51, 57, 76], "d_lambertw": 7, "princip": [7, 21], "branch": [7, 91], "lambert": 7, "solv": [7, 26], "equat": [7, 21, 23, 31, 33, 38, 42, 45, 56, 73, 78, 80, 86, 88], "solut": [7, 12, 13, 18, 21, 22, 23, 24, 38, 42, 45, 46, 56, 73, 74], "nan": 7, "piecewis": 7, "zeroth": 7, "infin": [7, 31, 35], "iter": [7, 16, 18, 19, 20, 26, 31, 48, 51, 57, 76, 88, 91], "hallei": 7, "test": [7, 13, 19, 22, 27, 32, 60, 61, 62, 68, 70, 73, 77, 90], "show": [7, 18, 80, 91], "95": 7, "dbl_epsilon": 7, "52": [7, 91], "wors": 7, "grow": [7, 76], "close": [7, 11, 12, 18, 21, 23, 31, 71, 73, 76, 86, 87, 91], "flag": [7, 21, 31, 32, 90, 91], "libm": 7, "d_is_nan": 7, "integr": [7, 15, 82], "d_log2": 7, "logarithm": [7, 11, 16, 18, 60, 76, 86], "domain": 7, "pole": 7, "occur": [7, 9, 11, 12, 16, 18, 21, 26, 29, 31, 37, 76], "come": [8, 26, 76], "demonstr": [8, 18, 65], "featur": [8, 11, 31], "partit": [8, 31, 88], "count": [8, 10, 14, 18, 21, 24, 26, 29, 35, 38, 42, 45, 46, 56, 63, 71, 73, 74, 76, 85], "1000000000": 8, "delta_qexp": 8, "delta": [8, 20, 21, 26, 31, 76, 87], "1000000": 8, "million": [8, 21, 88], "10382788": 8, "variou": [8, 11, 14, 24, 29, 31, 35, 46, 64, 65, 74, 80, 91], "multi_crt": [8, 18], "100493287498239": 8, "13": [8, 18, 91], "stirling_matrix": 8, "stirl": 8, "out": [8, 14, 18, 20, 24, 26, 29, 31, 32, 46, 48, 51, 57, 63, 74, 76, 80, 82, 86, 89, 91], "fmpz_poly_factor_zassenhau": [8, 32], "disk": 8, "obviou": 8, "file": [8, 10, 11, 12, 14, 16, 17, 18, 21, 24, 26, 29, 31, 35, 36, 37, 38, 39, 42, 43, 45, 46, 48, 50, 51, 53, 54, 56, 57, 59, 61, 64, 65, 74, 76, 80, 81, 82, 86, 87], "hard": [8, 11], "padic": [8, 60], "mani": [8, 9, 11, 16, 18, 21, 23, 26, 27, 31, 38, 39, 42, 45, 48, 51, 56, 57, 61, 65, 73, 82, 90, 91], "fmpz_poly_q": [8, 60], "simpl": [8, 11, 12, 16, 18, 26, 31, 76, 81, 82, 90, 91], "fmpz_poli": [8, 16, 26, 33, 48, 51, 57, 60, 61], "fmpq_poli": [8, 12, 31, 60], "associ": [8, 13, 18, 27, 33, 40, 49, 52, 58, 77, 78, 87, 90], "mp_size_t": [9, 18, 70], "fft_split_limb": 9, "mp_srcptr": [9, 18, 31, 35, 43, 54, 70, 76, 77, 79], "total_limb": 9, "coeff_limb": 9, "output_limb": 9, "per": [9, 12, 14, 16, 17, 18, 21, 24, 26, 27, 29, 31, 35, 37, 46, 54, 64, 71, 74, 76, 85, 91], "beyond": [9, 11, 16, 20, 26, 31, 48, 51, 57, 76, 82, 91], "touch": [9, 26, 48, 51, 57], "fft_split_bit": 9, "flint_bitcnt_t": [9, 12, 13, 14, 16, 17, 18, 20, 21, 24, 29, 31, 33, 34, 35, 36, 43, 46, 54, 66, 67, 69, 70, 71, 74, 76, 79], "fft_combine_limb": 9, "flint_bit": [9, 18, 21, 29, 35, 62, 64, 71, 72, 76, 80, 91], "throw": [9, 12, 14, 18, 22, 24, 27, 29, 40, 46, 49, 52, 58, 74, 76], "awai": [9, 20, 76, 91], "ignor": [9, 35, 71, 73], "fft_combine_bit": 9, "fermat_to_mpz": 9, "mpz_t": [9, 12, 16, 18, 26, 31, 34, 80], "convert": [9, 11, 13, 18, 31, 35, 36, 43, 54, 71, 76], "mpn_negmod_2expp1": 9, "negat": [9, 18, 21, 31, 33, 35, 50, 53, 59, 76, 78, 79], "fulli": [9, 19, 35, 70], "mpn_addmod_2expp1_1": 9, "mp_limb_signed_t": [9, 62, 84, 91], "abl": [9, 27, 31, 65, 76], "inlin": 9, "mpn_normmod_2expp1": 9, "complement": [9, 18], "format": [9, 10, 11, 16, 17, 18, 21, 23, 31, 34, 35, 50, 53, 59, 71, 76, 80, 81, 82, 84, 87], "mpn_mul_2expmod_2expp1": 9, "i1": [9, 71], "necessarili": [9, 12, 16, 20, 26, 31, 32, 33, 70, 78, 79, 81, 86, 91], "nonneg": [9, 12, 14, 18, 21, 31, 35, 79], "mpn_div_2expmod_2expp1": 9, "fft_adjust": 9, "thought": [9, 20], "leq": [9, 16, 18, 26, 27, 31, 35, 39, 40, 48, 49, 51, 52, 57, 58, 63, 76, 77, 80, 91], "nw": 9, "fft_adjust_sqrt2": 9, "temp": [9, 18, 21, 31, 70], "butterfly_lshb": 9, "i2": 9, "y": [9, 11, 12, 16, 18, 19, 21, 22, 26, 31, 42, 45, 48, 51, 56, 57, 64, 70, 71, 72, 73, 76, 80, 82, 86, 87, 90, 91], "normalis": [9, 16, 18, 21, 26, 31, 39, 48, 51, 57, 63, 70, 76, 82, 91], "butterfly_rshb": 9, "fft_butterfli": 9, "z1": [9, 19, 91], "ifft_butterfli": 9, "fft_radix2": 9, "ii": [9, 19], "t1": [9, 71], "t2": [9, 71], "dif": 9, "i0": 9, "r0": 9, "r1": [9, 13, 18, 20, 21, 23, 31, 38, 42, 45, 56, 73, 91], "bullet": 9, "r2": [9, 13, 18, 20, 21, 23, 31, 38, 42, 45, 56, 73, 91], "r4": 9, "t0": [9, 85], "u0": 9, "u1": 9, "r3": 9, "uniti": [9, 21, 31, 80, 86], "ring": [9, 14, 24, 26, 29, 39, 46, 48, 51, 57, 61, 71, 74, 76, 78, 88], "mathbf": [9, 12, 16, 26, 31, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 48, 51, 54, 55, 56, 57, 76, 78, 80, 81, 82, 86], "wn": 9, "gmp_limb_bit": 9, "extra": [9, 71, 91], "carri": [9, 16, 19, 26, 31, 48, 51, 57, 63, 80, 82, 86], "temporari": [9, 11, 18, 19, 20, 26, 31, 48, 51, 57, 67, 70, 73, 76, 80], "block": [9, 13, 18, 42, 45, 56, 73, 80, 87, 90, 91], "fft_truncat": 9, "trunc": [9, 26, 31, 39, 41, 44, 48, 51, 55, 57, 76], "impli": [9, 14, 24, 29, 46, 74, 80, 91], "onward": [9, 26, 39, 48, 51, 57, 76], "irrelev": [9, 91], "fft_truncate1": 9, "still": [9, 14, 19, 24, 29, 46, 74, 90, 91], "ifft_radix2": 9, "ifft": 9, "s0": 9, "s1": 9, "i3": 9, "ifft_trunc": 9, "remain": [9, 12, 13, 14, 18, 21, 24, 26, 29, 31, 33, 39, 46, 48, 51, 57, 70, 74, 76, 78, 91], "although": [9, 16, 19, 26, 31, 36, 43, 48, 51, 54, 57, 80, 86], "simplic": 9, "begin": [9, 11, 12, 14, 20, 24, 29, 42, 45, 46, 48, 51, 56, 57, 73, 74, 76], "unspecifi": 9, "twist": 9, "what": [9, 11, 26, 91], "would": [9, 11, 13, 14, 18, 24, 29, 46, 74, 91], "hand": [9, 11, 13, 21], "side": [9, 11, 13, 21], "had": [9, 26, 76, 91], "data": [9, 11, 16, 18, 19, 20, 26, 31, 32, 39, 41, 44, 48, 51, 55, 57, 65, 76, 81, 82, 87], "ifft_truncate1": 9, "entir": [9, 26, 29, 31, 91], "auxiliari": [9, 80], "fill": [9, 18, 27, 40, 49, 52, 58, 70], "layer": 9, "care": [9, 27, 32, 40, 49, 52, 58, 77, 91], "alreadi": [9, 10, 12, 18, 26, 27, 36, 37, 40, 43, 48, 49, 51, 52, 54, 57, 58, 72, 76, 77, 81, 82, 90, 91], "infer": 9, "suppli": [9, 16, 18, 20, 21, 26, 31, 61, 70, 76, 91], "fft_butterfly_sqrt2": 9, "2j": [9, 18], "3nw": 9, "ik": 9, "subtract": [9, 18, 19, 63, 91], "ifft_butterfly_sqrt2": 9, "Of": [9, 11, 76], "fft_truncate_sqrt2": 9, "twice": [9, 18, 26, 76], "4n": [9, 91], "achiev": [9, 32], "twiddl": 9, "ifft_truncate_sqrt2": 9, "fft_butterfly_twiddl": 9, "v": [9, 14, 21, 24, 26, 29, 31, 46, 49, 52, 58, 74, 76, 80, 81, 82, 86], "b1": [9, 19, 91], "b2": [9, 19, 91], "tw1": 9, "tw2": 9, "rc": 9, "ifft_butterfly_twiddl": 9, "fft_radix2_twiddl": 9, "move": [9, 20], "next": [9, 12, 18, 31, 87, 91], "ifft_radix2_twiddl": 9, "fft_truncate1_twiddl": 9, "ifft_truncate1_twiddl": 9, "fft_mfa_truncate_sqrt2": 9, "n1": [9, 63, 71, 76, 82], "total": [9, 14, 24, 29, 43, 46, 71, 74, 90], "depth": 9, "explain": [9, 11, 18, 91], "produc": [9, 12, 16, 18, 91], "n2": [9, 63, 76, 82], "whole": [9, 11, 21, 26, 76, 87], "pile": 9, "short": [9, 11, 31, 85, 88], "compris": [9, 80], "rearrang": [9, 31], "revers": [9, 14, 24, 26, 28, 29, 39, 41, 44, 46, 48, 49, 51, 52, 55, 57, 58, 71, 74, 79, 91], "cach": [9, 65, 70, 91], "decompos": 9, "long": [9, 11, 16, 18, 21, 36, 39, 43, 48, 51, 54, 57, 70, 76, 84], "origin": [9, 10, 12, 19, 26, 27, 31, 35, 61, 91], "sqrt2": [9, 31], "fold": 9, "moreov": [9, 11, 80, 82], "abov": [9, 11, 12, 16, 18, 19, 20, 31, 63, 71, 80, 87, 91], "ifft_mfa_truncate_sqrt2": 9, "fft_mfa_truncate_sqrt2_out": 9, "outer": [9, 19, 91], "fft_mfa_truncate_sqrt2_inn": 9, "jj": 9, "tt": [9, 54], "inner": [9, 20], "pointwis": [9, 28, 35], "mult": [9, 29, 71], "ifft_mfa_truncate_sqrt2_out": 9, "fft_negacycl": 9, "iw": 9, "ifft_negacycl": 9, "fft_naive_convolution_1": 9, "_fft_mulmod_2expp1": 9, "r_limb": 9, "wrapper": [9, 19, 20, 32, 60, 91], "fft_mulmod_2expp1": 9, "fft_adjust_limb": 9, "nussbaum": 9, "adjust": [9, 26, 76, 85, 91], "fft_mulmod_2expp1_cutoff": 9, "tune": [9, 91], "cutoff": [9, 32, 91], "classic": [9, 13, 23, 26, 31, 33, 38, 42, 45, 48, 51, 56, 57, 68, 73, 78], "fit": [9, 12, 14, 15, 18, 19, 21, 24, 25, 26, 29, 30, 31, 46, 47, 48, 51, 57, 63, 70, 71, 73, 74, 75, 80, 90, 91], "restrict": [9, 10, 23, 27, 31, 38, 39, 42, 45, 48, 49, 51, 52, 56, 57, 58, 73, 76, 77, 86, 90, 91], "mul_truncate_sqrt2": 9, "chunk": [9, 80], "exceed": [9, 91], "break": [9, 71], "j1": 9, "j2": 9, "mul_mfa_truncate_sqrt2": 9, "friendli": 9, "flint_mpn_mul_fft_main": 9, "routin": [9, 16, 20, 31, 32, 48, 51, 57, 76, 86], "fft_convolut": 9, "fft_precach": 9, "fft_convolution_precach": 9, "flint_malloc": [10, 65], "size_t": [10, 18, 62, 90], "byte": [10, 18, 63, 85], "flint_realloc": [10, 65], "ptr": [10, 18], "realloc": [10, 14, 16, 26, 27, 29, 31, 32, 39, 40, 46, 48, 49, 51, 52, 57, 58, 65, 74, 76, 77, 82], "area": [10, 61], "flint_calloc": [10, 65], "flint_fre": [10, 65, 76, 91], "flint_rand_": 10, "pseudo": [10, 20, 62, 91], "flint_rand_alloc": 10, "like": [10, 11, 12, 14, 19, 20, 21, 24, 29, 33, 46, 70, 73, 74, 78, 88, 91], "heap": [10, 24, 29, 74], "extern": 10, "flint_rand_fre": 10, "flint_randinit": [10, 16, 18, 31], "flint_randclear": [10, 18], "flint_rand_init": 10, "flint_set_num_thread": [10, 90], "num_thread": [10, 23, 26, 73, 76], "pool": [10, 60, 90], "worker": [10, 26, 27, 76, 77, 89, 90], "master": [10, 90], "level": [10, 12, 16, 26, 34, 76, 84], "woken": [10, 89, 90], "insid": [10, 11, 41, 44, 55], "flint_get_num_thread": [10, 26, 27, 31, 76, 77, 90], "plu": [10, 18, 29, 31, 71, 76, 91], "thread_pool_wak": [10, 89], "flint_set_num_work": [10, 90], "num_work": 10, "old": [10, 91], "restor": 10, "flint_reset_num_work": [10, 90], "cheapli": [10, 31], "temporarili": [10, 12, 90], "exit": [10, 16, 26, 31, 48, 51, 57, 65, 76, 91], "flint_printf": [10, 11, 18, 84, 85], "char": [10, 12, 14, 16, 18, 24, 26, 29, 31, 33, 34, 36, 37, 39, 43, 46, 48, 51, 54, 57, 74, 76, 78, 80, 82, 86, 87], "str": [10, 12, 14, 16, 18, 24, 29, 31, 46, 74, 80, 87], "flint_vprintf": 10, "va_list": 10, "ap": 10, "flint_fprintf": [10, 84], "flint_sprintf": [10, 84], "printf": 10, "vprintf": 10, "fprintf": 10, "sprintf": 10, "modifi": [10, 11, 34, 91], "therebi": 10, "decim": [10, 16, 18, 31, 73], "hexadecim": 10, "flint_scanf": [10, 84], "flint_fscanf": [10, 84], "flint_sscanf": [10, 84], "scanf": [10, 11, 18], "fscanf": 10, "sscanf": 10, "extens": [11, 36, 37, 43, 48, 51, 54, 57, 60], "metaprogram": 11, "lack": 11, "develop": [11, 80], "willing": 11, "try": [11, 14, 22, 24, 29, 31, 36, 37, 43, 46, 54, 70, 74, 91], "mainten": 11, "keep": [11, 26, 31, 76], "wrap": [11, 91], "fmpzxx": 11, "namespac": 11, "7u": 11, "std": 11, "cout": 11, "endl": 11, "seen": [11, 18, 26, 76], "foo": [11, 12, 18], "resid": [11, 85], "fooxx": 11, "class": [11, 18, 26, 41, 44, 55, 76], "live": 11, "overload": 11, "stand": 11, "alon": 11, "drop": 11, "f1": [11, 18], "f2": [11, 18], "fmpz_gcd": [11, 18], "instanc": [11, 90, 91], "sometim": 11, "felt": 11, "incomprehens": 11, "fmpq_next_minim": [11, 12], "fmpq_reconstruct": 11, "fmpqxx_reconstruct": 11, "situat": [11, 16], "expos": 11, "possibli": [11, 18, 19, 26, 27, 31, 42, 45, 48, 51, 56, 57, 71, 73, 76], "prefer": [11, 21, 31], "fmpqxx": 11, "1u": 11, "next_minim": 11, "tri": [11, 19, 20, 21, 73, 87, 91], "incur": 11, "nativ": [11, 61], "reason": [11, 16, 18, 31, 90, 91], "lazili": 11, "excess": 11, "purpos": [11, 13, 18, 21, 34, 62, 76, 82, 84, 90, 91], "behav": [11, 31, 80], "realli": 11, "distinct": [11, 14, 16, 17, 18, 21, 24, 26, 27, 29, 31, 33, 38, 40, 42, 45, 46, 49, 52, 56, 58, 73, 74, 76, 77, 78, 87, 90, 91], "never": [11, 91], "matter": [11, 18], "might": [11, 16, 18, 26, 29, 31, 48, 51, 57, 64, 76, 80, 81, 82, 90, 91], "request": [11, 80, 89, 90], "explicit": [11, 21], "notabl": 11, "caveat": 11, "approach": [11, 16, 18, 31, 48, 51, 57, 80, 88], "messag": 11, "understand": 11, "strive": 11, "check": [11, 13, 18, 19, 21, 26, 27, 29, 31, 33, 34, 36, 37, 38, 42, 43, 45, 49, 52, 54, 56, 58, 65, 67, 69, 71, 73, 76, 77, 78, 82, 87, 91], "earli": [11, 18, 20, 21, 31], "often": [11, 63, 90], "indic": [11, 12, 15, 18, 20, 25, 27, 29, 30, 31, 47, 70, 75, 76, 87, 91], "bug": [11, 60, 70, 73], "natur": [11, 18, 20, 26], "typic": [11, 13, 18, 21, 26, 33, 78, 86], "divrem": 11, "underli": [11, 13, 20, 21, 23, 26, 36, 38, 42, 43, 45, 54, 56, 73, 80], "fmpz_poly_divrem": [11, 31], "map": [11, 36, 37, 41, 43, 44, 54, 55, 86], "someth": [11, 85], "fmpz_polyxx": 11, "particularli": [11, 26, 31, 48, 51, 57, 76, 91], "nice": 11, "syntax": 11, "reminisc": 11, "closer": 11, "analogu": 11, "lazi": 11, "valid": [11, 18, 19, 23, 31, 38, 42, 45, 56, 72, 73, 76, 91], "ltupleref": 11, "ltupl": 11, "type1": 11, "type2": 11, "typer": 11, "construct": [11, 14, 18, 21, 26, 34, 76], "perhap": [11, 91], "occasion": [11, 20], "thing": [11, 12, 20, 31], "observ": 11, "fairli": [11, 29], "weakli": 11, "assign": 11, "comparison": [11, 22], "compon": [11, 32], "match": [11, 23, 35, 76], "anoth": [11, 26, 29, 76, 90, 91], "interest": [11, 18, 91], "ignored_typ": 11, "relev": [11, 22, 26, 76, 86], "discard": [11, 14, 16, 24, 26, 29, 31, 46, 74], "_": [11, 31, 36, 37, 38, 41, 42, 43, 44, 45, 48, 51, 54, 55, 56, 57, 63, 76], "mark": [11, 91], "potenti": [11, 70, 73], "intermedi": [11, 90], "quotient": [11, 12, 14, 16, 18, 24, 26, 29, 31, 34, 35, 36, 37, 39, 46, 48, 51, 54, 57, 63, 70, 71, 74, 76, 80, 88, 91], "contrast": 11, "subtleti": 11, "easili": [11, 31, 32], "fmpq_numref": 11, "fmpq_denref": 11, "interchang": 11, "pair": [11, 12, 16, 18, 21, 31], "everi": [11, 12, 16, 21, 26, 31, 35, 71, 76, 91], "fooxx_ref": 11, "fooxx_srcref": 11, "act": 11, "replac": [11, 12, 13, 14, 18, 21, 23, 24, 29, 38, 42, 45, 46, 56, 73, 74, 84, 91], "foox": 11, "respect": [11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 24, 26, 29, 31, 34, 35, 39, 41, 42, 44, 45, 46, 48, 51, 55, 56, 57, 63, 72, 73, 74, 76, 80, 81, 82, 84, 86, 91], "notic": 11, "implicitli": [11, 21], "explicitli": [11, 12, 23, 31, 38, 42, 45, 56, 73], "fooxx_": 11, "ref": 11, "entail": 11, "implicit": [11, 23, 38, 42, 45, 56, 63, 73], "summari": 11, "constant": [11, 64, 82, 84, 90, 91], "upon": [11, 14, 18, 22, 24, 26, 29, 31, 39, 40, 46, 48, 49, 51, 52, 57, 58, 72, 74, 76, 87, 91], "writabl": 11, "fmpzxx_ref": 11, "readonli": [11, 12, 18], "fmpzxx_srcref": 11, "behaviour": [11, 12, 18, 31, 43, 65, 76, 80, 90], "vari": [11, 18, 21, 33, 78], "quit": [11, 18, 91], "drastic": 11, "promot": [11, 64], "earlier": 11, "discuss": 11, "operand": [11, 16, 26, 31, 48, 51, 57, 64, 70, 76, 80], "facil": [11, 65], "constructor": 11, "from_ground": 11, "fmpzarg": 11, "nmod_polyxx": 11, "mplimbarg": 11, "nmodctxarg": 11, "former": 11, "latter": [11, 21, 31, 72, 91], "nmodxx_ctx_srcref": 11, "word": [11, 18, 19, 29, 31, 60, 71, 80, 84], "totyp": 11, "constructornam": 11, "arg1": 11, "arg2": 11, "interpret": [11, 18, 35, 62], "fmpzexpr": 11, "customari": 11, "iostream": 11, "to_str": 11, "unfortun": 11, "print_pretti": 11, "read_pretti": 11, "similarli": [11, 16, 18, 71, 91], "design": [11, 16, 61], "own": [11, 70, 80, 84, 91], "aggreg": 11, "invis": 11, "sens": [11, 21, 31], "fmpq_polyxx": 11, "set_coeff": 11, "fmpq_polyxx_ref": 11, "virtual": [11, 85], "subject": 11, "concret": 11, "lot": 11, "somewhat": [11, 12, 80, 91], "our": [11, 12, 63, 85, 90, 91], "classifi": 11, "thereto": 11, "oppos": 11, "fmpz_target": 11, "capit": 11, "letter": 11, "fmpz_sourc": 11, "fmpz_expr": 11, "Such": [11, 90], "fmpq_expr": 11, "fmpz_polyxx_src": 11, "suppress": [11, 64], "ever": [11, 19, 76], "unless": [11, 13, 18, 21, 22, 34, 65, 77, 89, 91], "philosophi": 11, "introduc": [11, 21, 34], "fine": [11, 18], "condition": 11, "is_signed_integ": 11, "trait": 11, "self": 11, "explanatori": 11, "pertain": 11, "evid": 11, "signatur": [11, 36, 37, 54, 65, 86], "dlog": 11, "fmpz_dlog": [11, 18], "anyth": [11, 12, 91], "explan": 11, "feasibl": 11, "wherea": [11, 26, 39, 48, 51, 57, 76, 91], "summaris": 11, "briefli": [11, 80], "unari": 11, "descript": [12, 13, 16, 17, 19, 20, 21, 22, 23, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 73, 76, 77, 78, 91], "around": [12, 18, 19, 91], "fuss": [12, 18], "mpq_t": [12, 16, 31, 34, 80], "fmpq_init": 12, "Its": [12, 14, 24, 26, 29, 46, 74], "fmpq_clear": 12, "fmpq_canonicalis": 12, "put": [12, 14, 16, 21, 23, 24, 29, 38, 42, 45, 46, 56, 73, 74, 89], "canon": [12, 13, 14, 16, 18, 19, 21, 22, 24, 26, 29, 34, 41, 44, 46, 55, 74, 80, 81, 82, 88], "lowest": [12, 16, 21, 26, 31, 39, 48, 51, 57, 76], "outcom": [12, 18], "undefin": [12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 29, 30, 31, 36, 37, 38, 42, 43, 45, 46, 47, 48, 51, 54, 56, 57, 63, 72, 73, 74, 75, 76, 80], "regardless": [12, 26], "_fmpq_canonicalis": 12, "fmpq_is_canon": 12, "_fmpq_is_canon": 12, "fmpq_set": 12, "dest": [12, 13, 73, 76], "src": [12, 13, 21, 23, 33, 38, 42, 45, 56, 73, 78], "fmpq_swap": 12, "op1": [12, 16, 34, 36, 37, 39, 43, 48, 51, 54, 57, 76, 80, 82, 86], "op2": [12, 16, 34, 36, 37, 39, 43, 48, 51, 54, 57, 76, 80, 82, 86], "fmpq_neg": 12, "fmpq_ab": 12, "fmpq_zero": 12, "fmpq_one": 12, "fmpq_is_zero": 12, "fmpq_is_on": 12, "fmpq_is_pm1": 12, "fmpq_equal": 12, "fmpq_sgn": 12, "fmpq_cmp": 12, "fmpq_cmp_fmpz": 12, "fmpq_cmp_ui": 12, "fmpq_cmp_si": 12, "fmpq_equal_ui": 12, "fmpq_equal_si": 12, "fmpq_height": 12, "height": [12, 31, 35], "fmpq_height_bit": 12, "fmpq_set_fmpz_frac": 12, "fmpq_get_mpz_frac": 12, "fmpq_set_si": 12, "_fmpq_set_si": 12, "rnum": [12, 16, 31], "rden": [12, 16, 31], "fmpq_set_ui": 12, "_fmpq_set_ui": 12, "fmpq_set_mpq": 12, "fmpq_set_str": 12, "string": [12, 14, 16, 18, 24, 26, 29, 31, 34, 36, 37, 39, 43, 46, 48, 51, 54, 57, 64, 70, 71, 74, 76, 80, 86, 87, 91], "fmpq_init_set_mpz_frac_readonli": 12, "fmpq_get_d": 12, "toward": [12, 18, 21, 31, 35, 63], "fmpq_get_mpq": 12, "fmpq_get_mpfr": 12, "mpfr_rnd_t": [12, 18, 68], "rnd": [12, 18, 68], "_fmpq_get_str": 12, "fmpq_get_str": 12, "36": [12, 91], "buffer": 12, "null": [12, 13, 14, 16, 18, 20, 21, 23, 24, 26, 29, 31, 33, 35, 36, 37, 38, 39, 42, 43, 45, 46, 48, 51, 54, 57, 70, 73, 74, 76, 78, 80, 85, 86, 91], "flint_mpq_init_set_readonli": 12, "uninitialis": [12, 18, 31, 80], "dure": [12, 18, 20], "lifetim": [12, 18], "flint_mpq_clear_readonli": 12, "suggest": [12, 14, 18, 19, 29, 91], "conveni": [12, 18, 21, 26, 31, 39, 48, 51, 57, 70, 76, 90, 91], "fmpq_init_set_readonli": 12, "throughout": [12, 18], "fmpq_clear_readonli": 12, "fmpq_fprint": 12, "verbatim": [12, 91], "forward": [12, 21, 33, 42, 45, 56, 73, 78], "slash": 12, "failur": [12, 14, 15, 16, 17, 18, 21, 24, 26, 29, 31, 35, 38, 39, 42, 43, 45, 46, 48, 50, 51, 53, 56, 57, 59, 73, 74, 76], "_fmpq_fprint": 12, "fmpq_print": 12, "_fmpq_print": 12, "fmpq_randtest": [12, 13], "probabl": [12, 18, 19, 21, 29, 62, 67, 73, 88, 91], "trigger": [12, 70], "corner": [12, 16, 34, 70], "_fmpq_randtest": 12, "fmpq_randtest_not_zero": 12, "fmpq_randbit": [12, 13], "_fmpq_randbit": 12, "fmpq_add": 12, "fmpq_sub": 12, "fmpq_mul": 12, "fmpq_div": 12, "combin": [12, 14, 18, 24, 27, 29, 31, 46, 74, 87, 91], "_fmpq_add": 12, "op1num": 12, "op1den": 12, "op2num": 12, "op2den": 12, "_fmpq_sub": 12, "_fmpq_mul": 12, "_fmpq_div": 12, "whilst": [12, 21, 31, 84, 91], "_fmpq_add_si": 12, "_fmpq_sub_si": 12, "_fmpq_add_ui": 12, "_fmpq_sub_ui": 12, "_fmpq_add_fmpz": 12, "_fmpq_sub_fmpz": 12, "fmpq_add_si": 12, "fmpq_sub_si": 12, "fmpq_add_ui": 12, "fmpq_sub_ui": 12, "fmpq_add_fmpz": 12, "fmpq_sub_fmpz": 12, "_fmpq_mul_si": 12, "fmpq_mul_si": 12, "_fmpq_mul_ui": 12, "fmpq_mul_ui": 12, "fmpq_addmul": 12, "fmpq_submul": 12, "_fmpq_addmul": 12, "_fmpq_submul": 12, "fmpq_inv": 12, "_fmpq_pow_si": 12, "opnum": 12, "opden": 12, "fmpq_pow_si": 12, "op": [12, 13, 16, 18, 23, 26, 31, 34, 36, 37, 39, 43, 48, 51, 54, 57, 73, 76, 80, 81, 82, 86], "fmpq_pow_fmpz": 12, "fmpq_mul_fmpz": 12, "fmpq_div_fmpz": 12, "fmpq_mul_2exp": 12, "fmpq_div_2exp": 12, "_fmpq_gcd": 12, "qr": [12, 88], "appar": 12, "euclid": 12, "stabl": [12, 20, 31], "agre": [12, 13, 14, 24, 29, 33, 46, 73, 74, 78], "sage": 12, "pari": 12, "gp": 12, "fmpq_gcd": 12, "_fmpq_gcd_cofactor": 12, "gnum": 12, "gden": [12, 16], "abar": [12, 14, 24, 29, 46, 74], "bbar": [12, 14, 24, 29, 46, 74], "anum": [12, 16, 31], "aden": [12, 16, 31], "bnum": 12, "bden": 12, "fmpq_gcd_cofactor": 12, "operatornam": [12, 16, 18, 21, 24, 26, 29, 31, 32, 33, 36, 37, 39, 43, 48, 51, 54, 57, 76, 78, 80, 82, 86, 87], "overlin": 12, "unlik": [12, 91], "_fmpq_add_smal": 12, "p1": [12, 31], "q1": [12, 63], "p2": 12, "q2": 12, "coeff_min": [12, 18, 62], "coeff_max": [12, 16, 18, 62, 91], "_fmpq_mul_smal": 12, "_fmpq_mod_fmpz": 12, "fmpq_mod_fmpz": 12, "residu": [12, 16, 18, 21, 31, 87, 91], "pmod": [12, 18, 26, 31, 70, 76, 80, 86, 91], "_fmpq_reconstruct_fmpz_2_na": 12, "_fmpq_reconstruct_fmpz_2": 12, "fmpq_reconstruct_fmpz_2": 12, "2nd": 12, "attempt": [12, 18, 19, 20, 21, 24, 26, 29, 31, 32, 33, 35, 36, 43, 48, 51, 54, 57, 74, 76, 78, 91], "uniqu": [12, 16, 18, 21, 26, 31, 32, 35, 41, 44, 55, 76, 82, 86, 91], "_fmpq_reconstruct_fmpz": 12, "fmpq_reconstruct_fmpz": 12, "_fmpq_next_minim": 12, "skip": 12, "ne": [12, 31], "disadvantag": 12, "calkin": 12, "wilf": 12, "_fmpq_next_signed_minim": 12, "fmpq_next_signed_minim": 12, "interleav": 12, "_fmpq_next_calkin_wilf": 12, "fmpq_next_calkin_wilf": 12, "breadth": 12, "travers": 12, "despit": 12, "late": [12, 87], "advantag": 12, "_fmpq_next_signed_calkin_wilf": 12, "fmpq_next_signed_calkin_wilf": 12, "fmpq_farey_neighbor": 12, "farei": 12, "fmpq_simplest_between": 12, "_fmpq_simplest_between": 12, "x_num": 12, "x_den": 12, "l_num": 12, "l_den": 12, "r_num": 12, "r_den": 12, "simplest": 12, "underscor": [12, 90], "assumpt": [12, 16, 18, 31, 48, 51, 57, 70, 72, 91], "endpoint": [12, 18, 91], "simpler": 12, "iff": [12, 21], "fmpq_get_cfrac": 12, "rem": 12, "fmpq_get_cfrac_na": 12, "c_0": [12, 26, 31], "cfrac": 12, "c_1": [12, 26, 31], "c_2": [12, 31], "ddot": 12, "c_": [12, 26, 31], "c_k": 12, "chain": [12, 31], "extract": [12, 13, 18], "desir": [12, 15, 20, 25, 30, 47, 75, 90], "shorter": [12, 16, 31, 76], "longer": [12, 18, 26, 31, 91], "a_": [12, 26, 31, 76, 80, 86], "els": [12, 14, 19, 24, 29, 35, 46, 74, 76, 87, 91], "finit": [12, 61, 88], "reli": [12, 18, 22], "fmpq_set_cfrac": 12, "c_i": [12, 31], "subquadrat": 12, "converg": [12, 80, 86], "fmpq_cfrac_bound": 12, "sharp": 12, "fibonacci": [12, 18, 26, 76, 88, 91], "f_": [12, 91], "_fmpq_harmonic_ui": 12, "fmpq_harmonic_ui": 12, "harmon": 12, "h_n": [12, 31], "dotsb": [12, 26, 31, 34, 76], "whose": [12, 13, 14, 16, 18, 19, 20, 21, 23, 24, 26, 29, 31, 36, 38, 41, 42, 43, 44, 45, 46, 48, 51, 55, 56, 57, 73, 74, 76, 91], "conquer": [12, 26, 31, 48, 51, 57, 76], "strategi": [12, 21, 27, 31, 49, 52, 58, 77, 90], "apostol": [12, 88], "apostol1997": [12, 88], "hi": [12, 18, 91], "mbox": [12, 29, 74], "setminu": 12, "r_0": [12, 31], "r_1": [12, 16, 18, 31, 91], "r_2": [12, 18, 31, 91], "r_3": 12, "r_n": 12, "r_": [12, 31], "12": [12, 21, 80, 88], "emploi": [12, 80], "6k": 12, "fmpq_dedekind_sum": 12, "fmpq_dedekind_sum_na": 12, "straightforward": [12, 21], "fmpq_mat_struct": 13, "fmpq_mat_t": [13, 81], "fmpq_mat_init": 13, "fmpq_mat_init_set": 13, "fmpq_mat_clear": 13, "fmpq_mat_swap": 13, "fmpq_mat_swap_entrywis": 13, "fmpq_mat_entri": 13, "manipul": [13, 23, 88], "fmpq_mat_entry_num": 13, "fmpq_mat_entry_den": 13, "fmpq_mat_nrow": 13, "fmpq_mat_ncol": 13, "fmpq_mat_set": 13, "fmpq_mat_zero": 13, "fmpq_mat_on": 13, "fmpq_mat_transpos": 13, "rop": [13, 16, 18, 26, 31, 34, 36, 37, 39, 43, 48, 49, 51, 52, 54, 57, 58, 80, 81, 82, 86], "transpos": 13, "fmpq_mat_swap_row": 13, "perm": [13, 21, 23, 33, 38, 42, 45, 60, 73, 78], "permut": [13, 21, 23, 33, 38, 42, 45, 56, 60, 73, 78], "fmpq_mat_swap_col": 13, "fmpq_mat_invert_row": 13, "fmpq_mat_invert_col": 13, "fmpq_mat_add": 13, "fmpq_mat_sub": 13, "fmpq_mat_neg": 13, "fmpq_mat_scalar_mul_fmpq": 13, "fmpq_mat_scalar_mul_fmpz": 13, "fmpq_mat_scalar_div_fmpz": 13, "fmpq_mat_print": 13, "fmpq_mat_randbit": 13, "fmpq_mat_randtest": 13, "fmpq_mat_window_init": 13, "c1": [13, 21, 23, 38, 42, 45, 56, 73], "c2": [13, 21, 23, 38, 42, 45, 56, 73], "submatrix": [13, 21, 23, 38, 42, 45, 56, 73], "fmpq_mat_window_clear": 13, "freed": [13, 21, 23, 38, 42, 45, 56, 65, 73, 76], "fmpq_mat_concat_vert": 13, "vertic": [13, 21, 23, 38, 42, 45, 56, 73], "fmpq_mat_concat_horizont": 13, "horizont": [13, 21, 23, 38, 42, 45, 56, 73], "fmpq_mat_hilbert_matrix": 13, "hilbert": 13, "That": [13, 16, 21, 26, 31, 32, 80, 91], "fmpq_mat_equ": 13, "shape": [13, 21, 23, 33, 38, 42, 45, 56, 73, 78], "fmpq_mat_is_integr": 13, "fmpq_mat_is_zero": 13, "fmpq_mat_is_on": 13, "fmpq_mat_is_empti": 13, "fmpq_mat_is_squar": 13, "fmpq_mat_get_fmpz_mat": 13, "fmpq_mat_get_fmpz_mat_entrywis": 13, "fmpq_mat_get_fmpz_mat_matwis": 13, "fmpq_mat_get_fmpz_mat_rowwis": 13, "preinitialis": 13, "fmpq_mat_get_fmpz_mat_rowwise_2": 13, "num2": 13, "submatric": [13, 21], "fmpq_mat_get_fmpz_mat_colwis": 13, "fmpq_mat_set_fmpz_mat": 13, "fmpq_mat_set_fmpz_mat_div_fmpz": 13, "fmpq_mat_get_fmpz_mat_mod_fmpz": 13, "fmpq_mat_set_fmpz_mat_mod_fmpz": 13, "xmod": 13, "entrywis": [13, 33, 78], "fmpq_mat_mul_direct": 13, "ab": [13, 20, 21, 38, 42, 45, 56, 70, 72, 73], "arithmet": [13, 14, 16, 19, 24, 29, 31, 46, 60, 61, 74, 88], "circumst": 13, "consum": [13, 91], "much": [13, 19, 29, 31], "fmpq_mat_mul_clear": 13, "fmpq_mat_mul": 13, "fmpq_mat_mul_fmpz_mat": 13, "fmpq_mat_mul_r_fmpz_mat": 13, "fmpq_mat_mul_fmpq_vec": 13, "blen": [13, 21, 23, 26, 31, 42, 45, 48, 51, 56, 57, 73, 76], "fmpq_mat_mul_fmpz_vec": 13, "fmpq_mat_mul_fmpq_vec_ptr": 13, "fmpq_mat_mul_fmpz_vec_ptr": 13, "extend": [13, 18, 21, 23, 26, 31, 42, 45, 56, 73, 76, 91], "fmpq_mat_fmpq_vec_mul": 13, "alen": [13, 21, 23, 26, 31, 42, 45, 48, 51, 56, 57, 73, 76], "fmpq_mat_fmpz_vec_mul": 13, "fmpq_mat_fmpq_vec_mul_ptr": 13, "fmpq_mat_fmpz_vec_mul_ptr": 13, "fmpq_mat_kronecker_product": 13, "fmpq_mat_trac": 13, "fmpq_mat_det": 13, "det": [13, 21, 33, 76, 78], "fmpq_mat_solve_fraction_fre": 13, "fmpq_mat_solve_dixon": 13, "fmpq_mat_solve_multi_mod": 13, "fmpq_mat_solv": 13, "ax": [13, 21, 23, 24, 33, 38, 41, 42, 44, 45, 55, 56, 73, 78], "empti": [13, 16, 21, 26, 76, 81], "fraction_fre": 13, "fflu": [13, 21, 33, 78], "dixon": [13, 21], "adic": [13, 21, 26, 32, 61], "lift": [13, 21, 23, 26, 27, 32, 36, 37, 43, 54, 80, 86], "adapt": [13, 20, 21, 34, 91], "stop": [13, 31, 70, 91], "best": [13, 27, 40, 49, 52, 58, 90], "fmpq_mat_solve_fmpz_mat_fraction_fre": 13, "fmpq_mat_solve_fmpz_mat_dixon": 13, "fmpq_mat_solve_fmpz_mat_multi_mod": 13, "fmpq_mat_solve_fmpz_mat": 13, "fmpq_mat_can_solve_multi_mod": 13, "fmpq_mat_can_solve_fraction_fre": 13, "fmpq_mat_can_solv": 13, "fmpq_mat_inv": 13, "singular": [13, 21, 23, 33, 38, 42, 45, 56, 73, 78], "fmpq_mat_pivot": 13, "helper": 13, "search": [13, 32, 33, 70, 78, 87, 91], "among": [13, 18, 29, 31, 33, 70, 78, 82], "found": [13, 19, 26, 27, 31, 61, 70, 71, 76, 87, 91], "pivot": [13, 21, 33, 42, 45, 56, 73, 78], "leav": [13, 14, 16, 18, 21, 22, 26, 35, 36, 37, 38, 42, 43, 45, 48, 51, 54, 56, 57, 73, 76, 91], "unchang": [13, 21, 38, 42, 45, 56, 73], "fmpq_mat_rref_class": 13, "rank": [13, 23, 38, 42, 45, 56], "gauss": [13, 21, 23, 42, 45, 56, 73], "jordan": [13, 21, 23], "elimin": [13, 18, 33, 42, 45, 56, 73, 78], "ineffici": 13, "mainli": [13, 26, 31, 48, 51, 57, 62, 82, 91], "fmpq_mat_rref_fraction_fre": 13, "fraction": [13, 16, 18, 21, 33, 78, 88], "fmpq_mat_rref": 13, "fmpq_mat_gso": 13, "fmpq_mat_similar": 13, "mp": [13, 18, 21, 23, 38, 42, 45, 56, 73], "preserv": [13, 18, 21, 23, 38, 42, 45, 56, 71, 73], "_fmpq_mat_charpoli": 13, "fmpq_mat_charpoli": 13, "pol": [13, 27, 31, 40, 49, 52, 58, 77], "_fmpq_mat_minpoli": 13, "fmpq_mat_minpoli": 13, "mpoli": [14, 24, 29, 46, 60, 74], "fmpq_mpoly_struct": 14, "fmpq_mpoly_t": [14, 15], "fmpq_mpoly_ctx_struct": 14, "parent": [14, 24, 29, 46, 74], "fmpq_mpoly_ctx_t": [14, 15], "fmpq_mpoly_ctx_init": 14, "ctx": [14, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 71, 74, 75, 80, 81, 82, 86], "nvar": [14, 24, 29, 46, 71, 74], "ordering_t": [14, 24, 29, 46, 71, 74], "ord": [14, 24, 29, 36, 43, 46, 54, 71, 74, 80, 82, 86], "ord_lex": [14, 24, 29, 46, 71, 74], "ord_deglex": [14, 24, 29, 46, 71, 74], "ord_degrevlex": [14, 24, 29, 46, 71, 74], "fmpq_mpoly_ctx_nvar": 14, "fmpq_mpoly_ctx_ord": 14, "fmpq_mpoly_ctx_clear": 14, "fmpq_mpoly_init": 14, "fmpq_mpoly_init2": 14, "mpoly_min_bit": [14, 24, 29, 46, 74], "fmpq_mpoly_init3": 14, "fmpq_mpoly_fit_length": 14, "ensur": [14, 16, 18, 26, 27, 29, 31, 32, 40, 43, 46, 49, 52, 58, 67, 69, 71, 74, 76, 77, 80, 81, 82, 85, 86, 91], "fmpq_mpoly_fit_bit": 14, "field": [14, 18, 19, 21, 26, 29, 31, 61, 71, 76, 80, 81, 86, 91], "fmpq_mpoly_realloc": 14, "fmpq_mpoly_clear": 14, "signific": [14, 18, 24, 29, 46, 63, 66, 67, 70, 71, 74, 91], "x1": [14, 19, 24, 29, 46, 70, 74, 76, 91], "x2": [14, 19, 24, 29, 46, 70, 74, 91], "ect": [14, 24, 29, 46, 74], "fmpq_mpoly_get_str_pretti": 14, "respons": [14, 24, 29, 46, 74, 80], "fmpq_mpoly_fprint_pretti": 14, "fmpq_mpoly_print_pretti": 14, "fmpq_mpoly_set_str_pretti": 14, "pars": [14, 24, 29, 35, 46, 74, 87], "fmpq_mpoly_gen": 14, "var": [14, 16, 24, 29, 36, 37, 43, 46, 54, 74, 82, 86], "fmpq_mpoly_is_gen": 14, "fmpq_mpoly_set": 14, "fmpq_mpoly_equ": 14, "fmpq_mpoly_swap": 14, "fmpq_mpoly_is_fmpq": 14, "fmpq_mpoly_get_fmpq": 14, "fmpq_mpoly_set_fmpq": 14, "fmpq_mpoly_set_fmpz": 14, "fmpq_mpoly_set_ui": 14, "fmpq_mpoly_set_si": 14, "fmpq_mpoly_zero": 14, "fmpq_mpoly_on": 14, "fmpq_mpoly_equal_fmpq": 14, "fmpq_mpoly_equal_fmpz": 14, "fmpq_mpoly_equal_ui": 14, "fmpq_mpoly_equal_si": 14, "fmpq_mpoly_is_zero": 14, "fmpq_mpoly_is_on": 14, "fmpq_mpoly_degrees_fit_si": 14, "fmpq_mpoly_degrees_fmpz": 14, "deg": [14, 16, 24, 26, 27, 29, 31, 32, 40, 46, 48, 49, 51, 52, 57, 58, 74, 76, 77, 82, 86], "fmpq_mpoly_degrees_si": 14, "fmpq_mpoly_degree_fmpz": 14, "fmpq_mpoly_degree_si": 14, "fmpq_mpoly_total_degree_fits_si": 14, "fmpq_mpoly_total_degree_fmpz": 14, "tdeg": [14, 24, 29, 46, 74], "fmpq_mpoly_total_degree_si": 14, "fmpq_mpoly_used_var": 14, "fmpq_mpoly_get_denomin": 14, "fmpq_mpoly_get_coeff_fmpq_monomi": 14, "monomi": [14, 24, 29, 31, 41, 44, 46, 55, 74, 76, 82], "thow": [14, 24, 29, 46, 74], "fmpq_mpoly_set_coeff_fmpq_monomi": 14, "fmpq_mpoly_get_coeff_fmpq_fmpz": 14, "fmpq_mpoly_get_coeff_fmpq_ui": 14, "fmpq_mpoly_set_coeff_fmpq_fmpz": 14, "fmpq_mpoly_set_coeff_fmpq_ui": 14, "fmpq_mpoly_get_coeff_vars_ui": 14, "fmpq_mpoly_cmp": 14, "resp": [14, 15, 24, 25, 29, 30, 32, 43, 46, 47, 74, 75], "deal": [14, 16, 24, 26, 29, 31, 39, 46, 48, 51, 57, 74, 82, 91], "violat": [14, 18, 24, 29, 46, 74], "strictli": [14, 21, 22, 24, 29, 46, 74, 76], "mutat": 14, "fmpq_mpoly_is_canon": 14, "fmpq_mpoly_reduc": 14, "fmpz_mpoli": [14, 60], "fmpq_mpoly_sort_term": 14, "fmpq_mpoly_combine_like_term": 14, "fmpq_mpoly_content_ref": 14, "fmpz_mpoly_struct": [14, 29], "fmpq_mpoly_zpoly_ref": 14, "fmpq_mpoly_zpoly_term_coeff_ref": 14, "fmpz_mpoly_t": [14, 29, 30], "zpoli": 14, "lead": [14, 15, 16, 21, 24, 26, 29, 31, 33, 34, 39, 40, 42, 45, 46, 48, 49, 51, 52, 56, 57, 58, 63, 70, 73, 74, 76, 77, 78, 81, 86], "fmpq_mpoly_length": 14, "fmpq_mpoly_res": 14, "new_length": [14, 24, 29, 46, 74], "delet": [14, 24, 29, 46, 74], "append": [14, 19, 24, 29, 31, 46, 74, 90], "fmpq_mpoly_get_term_coeff_fmpq": 14, "fmpq_mpoly_set_term_coeff_fmpq": 14, "fmpq_mpoly_term_exp_fits_si": 14, "fmpq_mpoly_term_exp_fits_ui": 14, "fmpq_mpoly_get_term_exp_fmpz": 14, "fmpq_mpoly_get_term_exp_ui": 14, "fmpq_mpoly_get_term_exp_si": 14, "_ui": [14, 24, 29, 46, 74], "_si": [14, 24, 29, 46, 74], "fmpq_mpoly_get_term_var_exp_ui": 14, "fmpq_mpoly_get_term_var_exp_si": 14, "fmpq_mpoly_set_term_exp_fmpz": 14, "fmpq_mpoly_set_term_exp_ui": 14, "fmpq_mpoly_get_term": 14, "fmpq_mpoly_get_term_monomi": 14, "fmpq_mpoly_push_term_fmpq_fmpz": 14, "fmpq_mpoly_push_term_fmpz_fmpz": 14, "fmpq_mpoly_push_term_ui_fmpz": 14, "fmpq_mpoly_push_term_si_fmpz": 14, "fmpq_mpoly_push_term_fmpq_ui": 14, "fmpq_mpoly_push_term_fmpz_ui": 14, "fmpq_mpoly_push_term_ui_ui": 14, "fmpq_mpoly_push_term_si_ui": 14, "averag": [14, 21, 24, 29, 46, 74, 85], "push": 14, "were": [14, 20, 24, 26, 29, 39, 46, 48, 51, 57, 74], "sort": [14, 15, 19, 24, 25, 29, 30, 31, 46, 47, 74, 75, 86, 87], "dictat": [14, 24, 29, 46, 74], "nor": [14, 19, 24, 29, 31, 36, 43, 46, 48, 51, 57, 74], "adjac": [14, 24, 29, 46, 74, 76], "fmpq_mpoly_revers": 14, "fmpq_mpoly_randtest_bound": 14, "coeff_bit": [14, 29], "exp_bound": [14, 24, 29, 46, 74], "n_randint": [14, 24, 29, 46, 74, 91], "fmpq_mpoly_randtest_bit": 14, "exp_bit": [14, 24, 29, 46, 74], "pack": [14, 24, 29, 46, 73, 74], "fmpq_mpoly_randtest_": 14, "mere": [14, 29, 31, 91], "fmpq_mpoly_add_fmpq": 14, "fmpq_mpoly_add_fmpz": 14, "fmpq_mpoly_add_ui": 14, "fmpq_mpoly_add_si": 14, "fmpq_mpoly_sub_fmpq": 14, "fmpq_mpoly_sub_fmpz": 14, "fmpq_mpoly_sub_ui": 14, "fmpq_mpoly_sub_si": 14, "fmpq_mpoly_add": 14, "fmpq_mpoly_sub": 14, "fmpq_mpoly_neg": 14, "fmpq_mpoly_scalar_mul_fmpq": 14, "fmpq_mpoly_scalar_mul_fmpz": 14, "fmpq_mpoly_scalar_mul_ui": 14, "fmpq_mpoly_scalar_mul_si": 14, "fmpq_mpoly_scalar_div_fmpq": 14, "fmpq_mpoly_scalar_div_fmpz": 14, "fmpq_mpoly_scalar_div_ui": 14, "fmpq_mpoly_scalar_div_si": 14, "fmpq_mpoly_make_mon": 14, "quickli": [14, 29, 31, 91], "fmpq_mpoly_deriv": 14, "deriv": [14, 24, 29, 41, 44, 46, 55, 64, 74], "fmpq_mpoly_integr": 14, "fewest": 14, "unreason": [14, 24, 29, 46, 74], "fmpq_mpoly_evaluate_all_fmpq": 14, "ev": [14, 24, 29, 46, 80], "val": [14, 18, 23, 24, 29, 38, 46, 74, 81, 82, 86], "fmpq_mpoly_evaluate_one_fmpq": 14, "fmpq_mpoly_compose_fmpq_poli": 14, "fmpq_poly_struct": [14, 16], "ctxb": [14, 24, 29, 46, 74], "fmpq_mpoly_compose_fmpq_mpoli": 14, "ctxac": [14, 24, 29, 46, 74], "neither": [14, 16, 24, 29, 31, 36, 43, 46, 48, 51, 57, 70, 74], "alia": [14, 24, 29, 31, 46, 70, 74], "fmpq_mpoly_compose_fmpq_mpoly_gen": 14, "fmpq_mpoly_mul": 14, "fmpq_mpoly_pow_fmpz": 14, "fmpq_mpoly_pow_ui": 14, "fmpq_mpoly_divid": 14, "fmpq_mpoly_div": 14, "known": [14, 18, 21, 29, 31, 70, 74, 91], "fmpq_mpoly_divrem": 14, "fmpq_mpoly_divrem_id": 14, "henc": [14, 18, 24, 26, 29, 46, 64, 74, 76, 80, 86, 91], "fmpq_mpoly_cont": 14, "fmpq_mpoly_term_cont": 14, "fmpq_mpoly_content_var": 14, "vars_length": [14, 24, 29, 46, 74], "coffici": [14, 24, 29, 46, 74], "view": [14, 24, 26, 29, 46, 48, 51, 57, 74, 76], "succcess": [14, 24, 29, 46, 74], "independ": [14, 18, 21, 24, 29, 33, 46, 74, 78, 80, 84, 91], "fmpq_mpoly_gcd": 14, "monic": [14, 15, 16, 24, 26, 27, 31, 39, 40, 46, 48, 49, 51, 52, 57, 58, 74, 76, 77, 86], "wa": [14, 15, 18, 20, 24, 25, 26, 27, 29, 30, 31, 46, 47, 54, 61, 74, 75, 76, 90, 91], "untouch": [14, 24, 29, 46, 74], "fmpq_mpoly_gcd_cofactor": 14, "fmpq_mpoly_gcd_brown": 14, "fmpq_mpoly_gcd_hensel": 14, "fmpq_mpoly_gcd_subresult": 14, "fmpq_mpoly_gcd_zippel": 14, "fmpq_mpoly_gcd_zippel2": 14, "fmpq_mpoly_result": 14, "fmpq_mpoly_discrimin": 14, "discrimin": [14, 24, 29, 46, 74, 76], "fmpq_mpoly_sqrt": 14, "perfect": [14, 18, 19, 24, 26, 29, 31, 39, 46, 48, 51, 57, 74, 76, 87], "fmpq_mpoly_is_squar": 14, "fmpq_mpoly_univar_t": 14, "rewrit": [14, 24, 29, 46, 74], "x_1": [14, 19, 21, 24, 26, 29, 31, 46, 70, 74, 76, 91], "dot": [14, 24, 26, 29, 41, 44, 46, 55, 74, 76, 87], "x_m": [14, 21, 24, 29, 46, 74], "x_v": [14, 24, 29, 46, 74], "vise": [14, 24, 29, 46, 74], "versa": [14, 18, 24, 29, 46, 74], "fmpq_mpoly_univar_init": 14, "fmpq_mpoly_univar_clear": 14, "fmpq_mpoly_univar_swap": 14, "fmpq_mpoly_to_univar": 14, "pull": [14, 24, 29, 46, 74], "belong": [14, 24, 29, 46, 74], "fmpq_mpoly_from_univar": 14, "fmpq_mpoly_univar_degree_fits_si": 14, "fmpq_mpoly_univar_length": 14, "fmpq_mpoly_univar_get_term_exp_si": 14, "fmpq_mpoly_univar_get_term_coeff": 14, "fmpq_mpoly_univar_swap_term_coeff": 14, "fmpq_mpoly_factor_struct": 15, "fmpq_mpoly_factor_t": 15, "fmpq_mpoly_factor_init": 15, "fmpq_mpoly_factor_clear": 15, "fmpq_mpoly_factor_swap": 15, "fmpq_mpoly_factor_length": 15, "fmpq_mpoly_factor_get_constant_fmpq": 15, "fmpq_mpoly_factor_get_bas": 15, "fmpq_mpoly_factor_swap_bas": 15, "fmpq_mpoly_factor_get_exp_si": 15, "fmpq_mpoly_factor_sort": 15, "fmpq_mpoly_factor_make_mon": 15, "fmpq_mpoly_factor_make_integr": 15, "none": [15, 18, 25, 30, 32, 47, 75, 91], "yet": 15, "fmpq_mpoly_factor_squarefre": 15, "pairwis": [15, 18, 19, 25, 30, 47, 75, 76], "irreduc": [15, 25, 26, 27, 30, 31, 32, 36, 37, 39, 43, 47, 48, 51, 54, 57, 75, 76, 77, 86], "fmpq_poly_init": 16, "fmpq_poly_init2": 16, "fmpq_poly_realloc": 16, "fmpq_poly_fit_length": 16, "lost": [16, 26, 31, 39, 48, 51, 57, 63, 82], "fit_length": [16, 31, 39, 48, 51, 57, 82], "_fmpq_poly_set_length": 16, "demot": [16, 26, 31, 82], "fmpq_poly_clear": 16, "_fmpq_poly_normalis": 16, "top": [16, 21, 26, 31, 48, 51, 57, 76, 82, 84, 91], "_fmpq_poly_canonicalis": 16, "fmpq_poly_canonicalis": 16, "firstli": 16, "_fmpq_poly_is_canon": 16, "fmpq_poly_is_canon": 16, "fmpq_poly_degre": 16, "fmpq_poly_length": 16, "fmpq_poly_numref": 16, "delai": [16, 73], "salvag": 16, "fmpq_poly_denref": 16, "properli": [16, 35], "fmpq_poly_get_numer": 16, "fmpq_poly_get_denomin": 16, "fmpq_poly_randtest_foo": 16, "favour": [16, 18], "word_max": [16, 62, 84, 91], "chanc": [16, 18, 19, 91], "fmpq_poly_randtest": 16, "randomli": [16, 31, 87, 91], "fmpq_poly_randtest_unsign": 16, "fmpq_poly_randtest_not_zero": 16, "fmpq_poly_set": 16, "poly1": [16, 24, 26, 29, 31, 39, 48, 51, 57, 76, 82], "poly2": [16, 24, 26, 29, 31, 39, 48, 51, 57, 74, 76, 82], "fmpq_poly_set_si": 16, "fmpq_poly_set_ui": 16, "fmpq_poly_set_fmpz": 16, "fmpq_poly_set_fmpq": 16, "fmpq_poly_set_mpz": 16, "fmpq_poly_set_mpq": 16, "fmpq_poly_set_fmpz_poli": 16, "fmpq_poly_set_nmod_poli": 16, "nmod_poly_t": [16, 26, 31, 37, 39, 43, 44, 48, 51, 54, 55, 57, 73, 74, 76, 77, 78], "fmpq_poly_get_nmod_poli": 16, "reduct": [16, 18, 22, 26, 28, 36, 42, 43, 45, 48, 51, 54, 56, 57, 60, 73, 80, 81, 82, 86], "fmpq_poly_get_nmod_poly_den": 16, "_fmpq_poly_set_array_mpq": 16, "highest": [16, 19, 20, 26, 31, 40, 49, 52, 58, 77, 91], "fmpq_poly_set_array_mpq": 16, "_fmpq_poly_set_str": 16, "segment": [16, 31, 33, 78], "fault": [16, 31], "fmpq_poly_set_str": 16, "fmpq_poly_get_str": 16, "fmpq_poly_get_str_pretti": 16, "pretti": [16, 26, 31, 34, 36, 37, 38, 39, 40, 42, 43, 45, 48, 49, 51, 52, 54, 56, 57, 58, 73, 76, 81, 86], "fmpq_poly_zero": 16, "fmpq_poly_on": 16, "fmpq_poly_neg": 16, "fmpq_poly_inv": 16, "unmodifi": 16, "fmpq_poly_swap": 16, "fmpq_poly_trunc": 16, "fmpq_poly_set_trunc": 16, "fmpq_poly_get_slic": 16, "slice": 16, "exclud": [16, 21, 91], "fmpq_poly_revers": 16, "notion": [16, 18, 20, 26, 29, 31, 35, 39, 48, 51, 57, 74, 76], "pad": [16, 26, 31, 39, 48, 51, 57, 70, 76, 86], "fmpq_poly_get_coeff_fmpz": 16, "retriev": [16, 66, 85], "fmpq_poly_get_coeff_fmpq": 16, "fmpq_poly_get_coeff_mpq": 16, "fmpq_poly_set_coeff_si": 16, "fmpq_poly_set_coeff_ui": 16, "fmpq_poly_set_coeff_fmpz": 16, "fmpq_poly_set_coeff_fmpq": 16, "fmpq_poly_set_coeff_mpz": 16, "fmpq_poly_set_coeff_mpq": 16, "fmpq_poly_equ": 16, "_fmpq_poly_equal_trunc": 16, "den1": 16, "len1": [16, 26, 31, 34, 48, 51, 57, 71, 76, 82], "den2": 16, "fmpq_poly_equal_trunc": 16, "_fmpq_poly_cmp": 16, "lpoli": 16, "lden": 16, "rpoli": [16, 31], "fmpq_poly_cmp": 16, "tie": 16, "fmpq_poly_is_on": 16, "fmpq_poly_is_zero": 16, "fmpq_poly_is_gen": 16, "_fmpq_poly_add": 16, "_fmpq_poly_add_can": 16, "canonicalis": [16, 86], "weak": 16, "explos": 16, "fmpq_poly_add": 16, "henrici": 16, "fmpq_poly_add_can": 16, "_fmpq_poly_add_seri": 16, "_fmpq_poly_add_series_can": 16, "fmpq_poly_add_seri": 16, "fmpq_poly_add_series_can": 16, "_fmpq_poly_sub": 16, "_fmpq_poly_sub_can": 16, "fmpq_poly_sub": 16, "fmpq_poly_sub_can": 16, "_fmpq_poly_sub_seri": 16, "_fmpq_poly_sub_series_can": 16, "fmpq_poly_sub_seri": 16, "fmpq_poly_sub_series_can": 16, "_fmpq_poly_scalar_mul_si": 16, "met": 16, "mathemat": [16, 88, 91], "_fmpq_poly_scalar_mul_ui": 16, "_fmpq_poly_scalar_mul_fmpz": 16, "_fmpq_poly_scalar_mul_fmpq": 16, "fmpq_poly_scalar_mul_si": 16, "fmpq_poly_scalar_mul_ui": 16, "fmpq_poly_scalar_mul_fmpz": 16, "fmpq_poly_scalar_mul_fmpq": 16, "fmpq_poly_scalar_mul_mpz": 16, "fmpq_poly_scalar_mul_mpq": 16, "_fmpq_poly_scalar_div_fmpz": 16, "_fmpq_poly_scalar_div_si": 16, "_fmpq_poly_scalar_div_ui": 16, "_fmpq_poly_scalar_div_fmpq": 16, "fmpq_poly_scalar_div_si": 16, "fmpq_poly_scalar_div_ui": 16, "fmpq_poly_scalar_div_fmpz": 16, "fmpq_poly_scalar_div_fmpq": 16, "fmpq_poly_scalar_div_mpz": 16, "fmpq_poly_scalar_div_mpq": 16, "_fmpq_poly_mul": 16, "fmpq_poly_mul": 16, "_fmpq_poly_mullow": 16, "fmpq_poly_mullow": 16, "fmpq_poly_addmul": 16, "fmpq_poly_submul": 16, "_fmpq_poly_pow": 16, "fmpq_poly_pow": 16, "_fmpq_poly_pow_trunc": 16, "fden": 16, "flen": [16, 26, 76], "fmpq_poly_pow_trunc": 16, "fmpq_poly_shift_left": 16, "insert": [16, 26, 27, 31, 32, 39, 40, 48, 49, 51, 52, 57, 58, 71, 76, 77, 87, 91], "fmpq_poly_shift_right": 16, "_fmpq_poly_divrem": 16, "lena": [16, 26, 31, 39, 48, 51, 57, 76, 86], "lenb": [16, 26, 31, 39, 48, 51, 57, 76], "fmpz_preinvn_t": [16, 18, 31], "inv": [16, 18, 31, 36, 43, 54], "bottom": [16, 21, 26, 31, 39, 48, 51, 57, 91], "meaning": [16, 31], "fmpz_preinvn_init": [16, 18, 31], "fmpq_poly_divrem": 16, "_fmpq_poly_div": 16, "fmpq_poly_div": 16, "_fmpq_poly_rem": 16, "fmpq_poly_rem": 16, "_fmpq_poly_powers_precomput": 16, "denb": 16, "fmpq_poly_powers_precomput": 16, "fmpq_poly_powers_precomp_t": 16, "pinv": [16, 31, 91], "_fmpq_poly_powers_clear": 16, "resourc": [16, 18, 26, 31, 89], "fmpq_poly_powers_clear": 16, "_fmpq_poly_rem_powers_precomp": 16, "dena": 16, "fmpq_poly_rem_powers_precomp": 16, "b_inv": [16, 31], "_fmpq_poly_divid": 16, "qpoli": 16, "qden": 16, "fmpq_poly_divid": 16, "fmpq_poly_remov": 16, "_fmpq_poly_inv_series_newton": 16, "newton": [16, 26, 36, 43, 48, 51, 54, 57, 76, 88, 91], "fmpq_poly_inv_series_newton": 16, "_fmpq_poly_inv_seri": 16, "fmpq_poly_inv_seri": 16, "_fmpq_poly_div_seri": 16, "denq": 16, "fmpq_poly_div_seri": 16, "_fmpq_poly_gcd": 16, "deng": 16, "fmpq_poly_gcd": 16, "_fmpq_poly_xgcd": 16, "dent": 16, "fmpq_poly_xgcd": 16, "neq": [16, 18, 26, 31, 32, 48, 51, 57, 76, 80, 81, 91], "_fmpq_poly_lcm": 16, "denl": 16, "fmpq_poly_lcm": 16, "_fmpq_poly_result": 16, "fmpq_poly_result": 16, "enumer": [16, 71], "bar": 16, "r_m": 16, "s_j": [16, 91], "fmpq_poly_resultant_div": 16, "div": [16, 31], "nbit": [16, 31], "_fmpq_poly_deriv": 16, "noth": [16, 18, 26, 76, 91], "fmpq_poly_deriv": 16, "_fmpq_poly_nth_deriv": 16, "nth": [16, 31, 91], "fmpq_poly_nth_deriv": 16, "_fmpq_poly_integr": 16, "fmpq_poly_integr": 16, "_fmpq_poly_sqrt_seri": 16, "fmpq_poly_sqrt_seri": 16, "_fmpq_poly_invsqrt_seri": 16, "fmpq_poly_invsqrt_seri": 16, "_fmpq_poly_power_sum": 16, "fmpq_poly_power_sum": 16, "_fmpq_poly_power_sums_to_poli": 16, "fmpq_poly_power_sums_to_fmpz_poli": 16, "fmpq_poly_power_sums_to_poli": 16, "_fmpq_poly_log_seri": 16, "fmpq_poly_log_seri": 16, "_fmpq_poly_exp_seri": 16, "hden": 16, "hlen": [16, 76], "fmpq_poly_exp_seri": 16, "_fmpq_poly_exp_expinv_seri": 16, "res1": 16, "res1den": 16, "res2": 16, "res2den": 16, "simultan": [16, 21], "fmpq_poly_exp_expinv_seri": 16, "_fmpq_poly_atan_seri": 16, "tangent": 16, "fmpq_poly_atan_seri": 16, "_fmpq_poly_atanh_seri": 16, "hyperbol": 16, "fmpq_poly_atanh_seri": 16, "_fmpq_poly_asin_seri": 16, "sine": 16, "fmpq_poly_asin_seri": 16, "_fmpq_poly_asinh_seri": 16, "fmpq_poly_asinh_seri": 16, "_fmpq_poly_tan_seri": 16, "fmpq_poly_tan_seri": 16, "_fmpq_poly_sin_seri": 16, "fmpq_poly_sin_seri": 16, "_fmpq_poly_cos_seri": 16, "fmpq_poly_cos_seri": 16, "_fmpq_poly_sin_cos_seri": 16, "sden": 16, "cden": 16, "fmpq_poly_sin_cos_seri": 16, "_fmpq_poly_sinh_seri": 16, "fmpq_poly_sinh_seri": 16, "_fmpq_poly_cosh_seri": 16, "fmpq_poly_cosh_seri": 16, "_fmpq_poly_sinh_cosh_seri": 16, "fmpq_poly_sinh_cosh_seri": 16, "_fmpq_poly_tanh_seri": 16, "fmpq_poly_tanh_seri": 16, "_fmpq_poly_legendre_p": 16, "legendr": [16, 31], "p_n": [16, 31, 91], "p_": [16, 31], "ge0": [16, 31], "overal": 16, "hypergeometr": [16, 31], "fmpq_poly_legendre_p": 16, "_fmpq_poly_laguerre_l": 16, "laguerr": 16, "l_n": 16, "l_": 16, "fmpq_poly_laguerre_l": 16, "_fmpq_poly_gegenbauer_c": 16, "gegenbau": 16, "ultraspher": 16, "_n": [16, 31], "_2f_1": 16, "frac12": 16, "fmpq_poly_gegenbauer_c": 16, "_fmpq_poly_evaluate_fmpz": 16, "fmpq_poly_evaluate_fmpz": 16, "_fmpq_poly_evaluate_fmpq": 16, "fmpq_poly_evaluate_fmpq": 16, "fmpq_poly_evaluate_mpz": 16, "mpz": 16, "fmpq_poly_evaluate_mpq": 16, "mpq": 16, "_fmpq_poly_interpolate_fmpz_vec": 16, "x_i": [16, 26, 31, 76], "y_i": [16, 31], "room": [16, 26, 31, 42, 45, 48, 51, 56, 57, 73, 76], "lagrang": [16, 31, 76], "fmpq_poly_interpolate_fmpz_vec": 16, "_fmpq_poly_compos": 16, "fmpq_poly_compos": 16, "_fmpq_poly_rescal": 16, "denr": 16, "indetermin": [16, 26, 31, 39, 48, 51, 57, 76], "fmpq_poly_rescal": 16, "_fmpq_poly_compose_series_horn": 16, "scheme": [16, 31, 71, 76], "fmpq_poly_compose_series_horn": 16, "_fmpq_poly_compose_series_brent_kung": 16, "brent": [16, 19, 26, 31, 48, 51, 57, 76, 88, 91], "kung": [16, 26, 31, 48, 51, 57, 76, 88], "brentkung1978": [16, 31, 76, 88], "fmpq_poly_compose_series_brent_kung": 16, "_fmpq_poly_compose_seri": 16, "fmpq_poly_compose_seri": 16, "_fmpq_poly_revert_series_lagrang": 16, "linear": [16, 24, 26, 29, 36, 37, 40, 43, 46, 49, 52, 54, 58, 61, 74, 76, 80, 82, 86, 88], "fmpq_poly_revert_series_lagrang": 16, "_fmpq_poly_revert_series_lagrange_fast": 16, "fmpq_poly_revert_series_lagrange_fast": 16, "_fmpq_poly_revert_series_newton": 16, "fmpq_poly_revert_series_newton": 16, "_fmpq_poly_revert_seri": 16, "fmpq_poly_revert_seri": 16, "_fmpq_poly_cont": 16, "fmpq_poly_cont": 16, "_fmpq_poly_primitive_part": 16, "fmpq_poly_primitive_part": 16, "_fmpq_poly_is_mon": 16, "fmpq_poly_is_mon": 16, "_fmpq_poly_make_mon": 16, "fmpq_poly_make_mon": 16, "fmpq_poly_is_squarefre": 16, "_fmpq_poly_print": 16, "fmpq_poly_print": 16, "_fmpq_poly_print_pretti": 16, "fmpq_poly_print_pretti": 16, "_fmpq_poly_fprint": 16, "fmpq_poly_fprint": 16, "_fmpq_poly_fprint_pretti": 16, "fmpq_poly_fprint_pretti": 16, "filt": 16, "fmpq_poly_read": 16, "stdin": [16, 18, 21, 31, 35, 76], "fmpq_poly_fread": 16, "_fmpq_vec_init": 17, "_fmpz_vec_init": [17, 35], "_fmpq_vec_clear": 17, "_fmpq_vec_randtest": 17, "_fmpq_vec_randtest_uniq_sort": 17, "_fmpq_vec_sort": 17, "_fmpq_vec_set_fmpz_vec": 17, "_fmpq_vec_get_fmpz_vec_fmpz": 17, "_fmpq_vec_dot": 17, "_fmpq_vec_fprint": 17, "_fmpq_vec_print": 17, "shift": [18, 24, 29, 63, 70, 72, 91], "malloc": [18, 65], "boundari": [18, 20], "ptr_to_coeff": 18, "__mpz_struct": 18, "coeff_to_ptr": 18, "coeff_is_mpz": 18, "_fmpz_new_mpz": 18, "_fmpz_clear_mpz": 18, "_fmpz_cleanup_mpz_cont": 18, "_fmpz_cleanup": 18, "_fmpz_promot": 18, "doesn": [18, 31, 87], "_fmpz_promote_v": 18, "inconsist": 18, "fmpz_is_zero": [18, 22], "_fmpz_demot": 18, "_fmpz_demote_v": 18, "fmpz_init": 18, "fmpz_init2": 18, "fmpz_clear": 18, "stack": [18, 65], "fmpz_init_set": 18, "fmpz_init_set_ui": 18, "fmpz_init_set_si": 18, "safeti": 18, "randomis": [18, 21, 38, 42, 45, 56, 73], "finish": [18, 31, 38, 39, 42, 45, 48, 51, 56, 57, 73, 76, 82, 89, 90], "fmpz_randbit": 18, "fmpz_randtest": 18, "fmpz_randtest_unsign": 18, "fmpz_randtest_not_zero": 18, "fmpz_randm": 18, "fmpz_randtest_mod": 18, "fmpz_randtest_mod_sign": 18, "fmpz_randprim": 18, "uniform": [18, 70], "cryptograph": 18, "fmpz_get_si": 18, "fmpz_get_ui": 18, "fmpz_get_uiui": 18, "consist": [18, 19, 29, 31, 71, 72], "fmpz_get_nmod": 18, "fmpz_get_d": 18, "fmpz_set_mpf": 18, "mpf_t": [18, 20, 67], "fmpz_get_mpf": 18, "fmpz_get_mpfr": 18, "fmpz_get_d_2exp": 18, "ulp": 18, "fmpz_get_mpz": 18, "fmpz_get_mpn": 18, "n_in": [18, 19, 91], "n_": 18, "fmpz_get_str": 18, "62": 18, "caller": [18, 21, 31, 76, 80, 86], "fmpz_set_si": 18, "fmpz_set_ui": 18, "fmpz_set_d": 18, "subnorm": 18, "fmpz_set_d_2exp": 18, "fmpz_neg_ui": 18, "fmpz_set_uiui": 18, "lo": [18, 91], "fmpz_neg_uiui": 18, "fmpz_set_signed_uiui": 18, "fmpz_set_signed_uiuiui": 18, "mid": 18, "fmpz_set_ui_arrai": 18, "fmpz_set_signed_ui_arrai": 18, "_bit": [18, 20, 54, 79, 91], "fmpz_get_ui_arrai": 18, "true": [18, 20, 71], "fmpz_set_mpz": 18, "fmpz_set_str": 18, "fmpz_set_ui_smod": 18, "flint_mpz_init_set_readonli": 18, "flint_mpz_clear_readonli": 18, "critic": 18, "fmpz_init_set_readonli": 18, "fmpz_clear_readonli": 18, "fmpz_read": 18, "multiprecis": 18, "adopt": 18, "light": 18, "mpz_inp_str": 18, "fmpz_fread": 18, "fmpz_inp_raw": 18, "fin": 18, "raw": 18, "fmpz_out_raw": 18, "mpz_inp_raw": 18, "fmpz_print": 18, "carriag": 18, "cr": 18, "mpz_out_str": 18, "fmpz_fprint": 18, "fout": 18, "portabl": [18, 60], "inform": [18, 20, 26, 36, 37, 42, 43, 45, 54, 56, 70, 71, 73, 76, 80, 85, 90, 91], "decreas": [18, 90, 91], "big": [18, 29, 76], "endian": 18, "fmpz_sizeinbas": 18, "measur": [18, 27, 40, 49, 52, 58, 85], "fmpz_bit": 18, "fmpz_size": 18, "fmpz_sgn": 18, "fmpz_val2": 18, "trail": [18, 31, 34, 70, 76, 91], "fmpz_swap": 18, "fmpz_set": 18, "fmpz_zero": 18, "fmpz_one": 18, "fmpz_abs_fits_ui": 18, "fmpz_fits_si": 18, "fmpz_setbit": 18, "fmpz_tstbit": 18, "accordingli": [18, 19, 41, 44, 55], "fmpz_abs_lbound_ui_2exp": 18, "mantissa": [18, 66, 67, 91], "correctli": [18, 26, 27, 31, 48, 51, 57, 76, 82, 85, 91], "fmpz_abs_ubound_ui_2exp": 18, "fmpz_cmp": 18, "fmpz_cmp_ui": 18, "fmpz_cmp_si": 18, "fmpz_cmpab": 18, "lvert": [18, 91], "rvert": [18, 91], "fmpz_cmp2ab": 18, "2g": 18, "fmpz_equal": [18, 22], "fmpz_equal_ui": 18, "fmpz_equal_si": 18, "fmpz_is_on": 18, "fmpz_is_pm1": 18, "fmpz_is_even": 18, "fmpz_is_odd": 18, "fmpz_neg": 18, "f_1": 18, "f_2": 18, "fmpz_ab": 18, "fmpz_add": 18, "fmpz_add_ui": 18, "fmpz_add_si": 18, "fmpz_sub": 18, "fmpz_sub_ui": 18, "fmpz_sub_si": 18, "fmpz_mul": 18, "fmpz_mul_ui": 18, "fmpz_mul_si": 18, "fmpz_mul2_uiui": 18, "fmpz_mul_2exp": 18, "fmpz_one_2exp": 18, "fmpz_addmul": 18, "fmpz_addmul_ui": 18, "fmpz_addmul_si": 18, "fmpz_submul": 18, "fmpz_submul_ui": 18, "fmpz_submul_si": 18, "fmpz_fmma": 18, "fmpz_fmm": 18, "fmpz_cdiv_qr": 18, "fmpz_fdiv_qr": 18, "fmpz_tdiv_qr": 18, "fmpz_ndiv_qr": 18, "fmpz_cdiv_q": 18, "fmpz_fdiv_q": 18, "fmpz_tdiv_q": 18, "fmpz_cdiv_q_si": 18, "fmpz_fdiv_q_si": 18, "fmpz_tdiv_q_si": 18, "fmpz_cdiv_q_ui": 18, "fmpz_fdiv_q_ui": 18, "fmpz_tdiv_q_ui": 18, "fmpz_cdiv_q_2exp": 18, "fmpz_fdiv_q_2exp": 18, "fmpz_tdiv_q_2exp": 18, "fmpz_fdiv_r": 18, "fmpz_cdiv_r_2exp": 18, "fmpz_fdiv_r_2exp": 18, "fmpz_tdiv_r_2exp": 18, "2exp": 18, "fdiv": 18, "floor": [18, 82], "cdiv": 18, "ceil": 18, "tdiv": 18, "ndiv": 18, "ti": 18, "fmpz_cdiv_ui": 18, "fmpz_fdiv_ui": 18, "fmpz_tdiv_ui": 18, "fmpz_divexact": 18, "fmpz_divexact_si": 18, "fmpz_divexact_ui": 18, "multipl": [18, 19, 22, 27, 32, 33, 36, 37, 40, 41, 43, 44, 49, 52, 54, 55, 58, 63, 72, 77, 78, 86, 88, 90, 91], "fmpz_divexact2_uiui": 18, "fmpz_divis": 18, "fmpz_divisible_si": 18, "fmpz_divid": 18, "fmpz_mod": [18, 60], "fmpz_mod_ui": 18, "fmpz_smod": 18, "preinvn": 18, "fmpz_preinvn_clear": 18, "fmpz_fdiv_qr_preinvn": 18, "hinv": [18, 26, 48, 51, 57, 76], "fmpz_preinvn": 18, "preinvn_cutoff": 18, "fmpz_pow_ui": 18, "fmpz_pow_fmpz": 18, "fmpz_powm_ui": 18, "fmpz_powm": 18, "signal": [18, 80, 82, 86], "fmpz_clog": 18, "fmpz_clog_ui": 18, "log_b": [18, 91], "fmpz_flog": 18, "fmpz_flog_ui": 18, "fmpz_sqrtmod": 18, "quadrat": [18, 19, 31, 32, 60, 91], "meaningless": [18, 29, 91], "fmpz_sqrt": 18, "fmpz_sqrtrem": 18, "fmpz_is_squar": 18, "fmpz_root": 18, "fmpz_is_perfect_pow": 18, "fmpz_fac_ui": 18, "fmpz_fib_ui": 18, "f_n": 18, "fmpz_bin_uiui": 18, "_fmpz_rfac_ui": 18, "fmpz_rfac_ui": 18, "fmpz_rfac_uiui": 18, "fmpz_mul_tdiv_q_2exp": 18, "fmpz_mul_si_tdiv_q_2exp": 18, "fmpz_gcd_ui": 18, "fmpz_gcd3": 18, "fmpz_lcm": 18, "fmpz_gcdinv": 18, "fmpz_xgcd": 18, "af": 18, "bg": 18, "vice": 18, "b\u00e9zout": 18, "fmpz_xgcd_canonical_bezout": 18, "xgcd": [18, 31], "sgn": 18, "textstyl": 18, "qquad": 18, "fmpz_xgcd_partial": 18, "co2": 18, "co1": 18, "lehmer": [18, 91], "qfb": 18, "treat": [18, 31], "cofactor": [18, 19, 21, 26, 31, 48, 51, 57, 76, 91], "r2_orig": 18, "_fmpz_remov": 18, "finv": [18, 26, 48, 51, 57, 76], "remov": [18, 19, 20, 26, 31, 32, 40, 49, 52, 58, 70, 77, 87, 91], "fmpz_remov": 18, "occurr": 18, "fmpz_invmod": 18, "fmpz_negmod": 18, "fmpz_jacobi": 18, "jacobi": [18, 31], "fmpz_kroneck": 18, "kroneck": [18, 31, 33, 42, 45, 48, 51, 56, 57, 62, 78], "fmpz_divides_mod_list": 18, "xstart": 18, "xstride": 18, "xlength": 18, "fmpz_bit_pack": 18, "arr": [18, 31], "borrow": [18, 31, 63], "fmpz_bit_unpack": 18, "fmpz_bit_unpack_unsign": 18, "fmpz_complement": 18, "fmpz_clrbit": 18, "fmpz_combit": 18, "fmpz_and": 18, "wise": [18, 71], "fmpz_or": 18, "fmpz_xor": 18, "exclus": [18, 21, 33, 78, 86], "fmpz_popcnt": 18, "aka": 18, "ham": 18, "weight": [18, 76], "popul": [18, 20], "fmpz_crt_ui": 18, "fmpz_crt": 18, "easi": 18, "advanc": [18, 91], "subdivis": 18, "greatli": 18, "basi": [18, 20, 21, 33, 41, 44, 55, 73, 76, 78, 88], "comb": [18, 21], "fmpz_comb_init": 18, "fmpz_comb_temp_init": 18, "afterward": [18, 26, 31, 76], "fmpz_multi_crt": 18, "fmpz_multi_crt_ui": 18, "moduli": [18, 21, 31, 73, 76], "m1": [18, 21, 31, 91], "m2": [18, 31, 91], "m_1": [18, 31, 91], "m_2": [18, 31, 91], "fmpz_multi_mod_ui": 18, "fmpz_comb_t": [18, 21], "fmpz_comb_temp_t": [18, 21], "fmpz_comb_temp_clear": 18, "ctemp": 18, "num_prim": [18, 19, 70, 91], "recombin": [18, 32], "until": [18, 21, 26, 31, 38, 42, 45, 56, 73, 76, 85, 91], "fmpz_comb_clear": 18, "fmpz_multi_crt_init": 18, "fmpz_multi_crt_t": 18, "fmpz_multi_crt_precomput": 18, "fmpz_multi_crt_precompute_p": 18, "configur": [18, 22, 60, 65, 72, 76], "fmpz_crt_precomp": 18, "fmpz_multi_crt_precomp": 18, "fmpz_multi_crt_precomp_p": 18, "fmpz_crt_precomput": 18, "destroi": [18, 70, 76], "remark": [18, 76], "fmpz_multi_crt_clear": 18, "_nmod_poly_crt_local_s": 18, "nmod_poly_crt_t": 18, "_nmod_poly_crt_run": 18, "_fmpz_multi_crt_run": 18, "_fmpz_multi_crt_run_p": 18, "_fmpz_multi_crt_local_s": 18, "fmpz_is_strong_probabprim": 18, "strong": [18, 88, 91], "fmpz_is_probabprime_luca": 18, "luca": [18, 88, 91], "selfridg": [18, 91], "baiwag1980": [18, 88, 91], "declar": [18, 65, 80, 91], "fmpz_is_probabprime_bpsw": 18, "bailli": [18, 88, 91], "psw": [18, 88, 91], "fmpz_is_probabprim": 18, "trial": [18, 19, 31, 70, 91], "probabilist": [18, 21, 26, 27, 49, 52, 58, 76, 77, 91], "practic": [18, 88, 91], "subsequ": [18, 19, 21, 38, 42, 45, 56, 73, 80], "fmpz_is_prime_pseudosquar": 18, "94": [18, 88], "silent": [18, 29], "pseudosquar": [18, 88, 91], "lukpatwil1996": [18, 88, 91], "limit": [18, 19, 20, 29, 61, 62, 90, 91], "flint_pseudosquares_cutoff": [18, 91], "l_p": [18, 91], "oei": [18, 21, 91], "a002189": [18, 91], "b002189": [18, 91], "txt": [18, 84, 91], "reject": [18, 91], "suspect": [18, 91], "counterexampl": [18, 91], "proce": [18, 19, 21, 91], "execut": [18, 91], "p_i": [18, 31, 91], "hope": [18, 91], "past": [18, 91], "tabul": [18, 91], "bigger": [18, 76, 91], "fmpz_is_prime_pocklington": 18, "pm1": [18, 31], "num_pm1": 18, "pocklington": [18, 91], "amount": [18, 19, 33, 78, 87, 91], "spent": [18, 19, 91], "heurist": [18, 21, 24, 27, 29, 31, 33, 40, 49, 52, 58, 74, 78], "seem": 18, "prepar": 18, "wait": [18, 89, 90], "_fmpz_nm1_trial_factor": 18, "fmpz_is_prime_morrison": 18, "pp1": 18, "num_pp1": 18, "morrison": 18, "_fmpz_np1_trial_factor": 18, "fmpz_is_prim": 18, "n_is_prim": [18, 91], "81": 18, "miller": [18, 31], "rabin": [18, 26, 27, 76, 77], "wit": 18, "shown": 18, "sorweb2016": [18, 88], "brillhart": 18, "proof": [18, 20], "aprcl": [18, 60], "fmpz_lucas_chain": 18, "vm": 18, "vm1": 18, "v_0": [18, 31, 91], "v_1": [18, 31, 80, 82], "v_m": 18, "v_": [18, 91], "v_j": [18, 31], "av_": 18, "v_jv_": 18, "fmpz_lucas_chain_ful": 18, "bv_": 18, "fmpz_lucas_chain_doubl": 18, "u2m": 18, "u2m1": 18, "um": [18, 20], "um1": 18, "u_m": 18, "u_": 18, "2m": [18, 31], "fmpz_lucas_chain_add": 18, "umn": 18, "umn1": 18, "un": 18, "un1": 18, "u_n": [18, 31], "fmpz_lucas_chain_mul": 18, "ukm": 18, "ukm1": 18, "km": 18, "fmpz_lucas_chain_vt": 18, "dinv": [18, 70], "fmpz_divisor_in_residue_class_lenstra": 18, "fac": [18, 27, 31, 32, 40, 49, 52, 58, 77, 91], "fmpz_nextprim": 18, "n_nextprim": [18, 91], "mpz_nextprim": 18, "thereaft": 18, "bpsw": [18, 91], "fmpz_primori": 18, "primori": [18, 19, 91], "fmpz_factor_euler_phi": 18, "fmpz_factor_t": [18, 19, 27, 87], "fmpz_euler_phi": 18, "euler": [18, 31, 91], "totient": [18, 31, 91], "fmpz_factor_moebius_mu": 18, "fmpz_moebius_mu": 18, "moebiu": [18, 91], "mu": [18, 20, 31, 91], "fmpz_factor_divisor_sigma": 18, "fmpz_divisor_sigma": 18, "sigma_k": 18, "fmpz_factor_struct": 19, "fmpz_factor_init": 19, "fmpz_factor_clear": 19, "_fmpz_factor_append_ui": 19, "_fmpz_factor_append": 19, "fmpz_factor_smooth": 19, "control": [19, 90], "lower": [19, 21, 23, 26, 31, 38, 42, 45, 48, 51, 56, 57, 70, 71, 73, 76, 91], "15": 19, "primal": [19, 60], "behavior": [19, 42, 45, 56, 74], "n_factor": [19, 91], "fmpz_factor_si": 19, "fmpz_factor_trial_rang": 19, "flint_prim": [19, 70], "fmpz_factor_tri": 19, "3512": [19, 70], "outsid": [19, 31], "fmpz_factor_refin": 19, "partial": [19, 31, 76, 87], "refin": [19, 91], "fmpz_factor_expand_it": 19, "them": [19, 27, 31, 40, 49, 52, 58, 76, 77, 87, 90, 91], "togeth": [19, 26, 48, 51, 57, 67, 69, 76, 91], "fmpz_factor_pp1": 19, "b2_sqrt": 19, "william": [19, 60, 61, 88, 91], "stage": [19, 70, 91], "roughli": [19, 21, 33, 78, 90, 91], "decai": 19, "smooth": [19, 22, 31, 87, 91], "succe": [19, 21, 26, 31, 76, 91], "fmpz_factor_pollard_brent_singl": 19, "p_factor": 19, "yi": 19, "ai": [19, 91], "max_it": [19, 91], "pollard": [19, 91], "rho": [19, 91], "assur": [19, 91], "cycl": [19, 91], "fmpz_factor_pollard_br": 19, "max_tri": [19, 91], "modif": [19, 31, 91], "richard": [19, 88, 91], "math": [19, 31, 88, 91], "anu": [19, 91], "edu": [19, 91], "au": [19, 91], "pd": [19, 91], "rpb051i": [19, 91], "fmpz_factor_ecm_init": 19, "ecm_t": 19, "ecm_inf": 19, "sz": 19, "fmpz_factor_ecm_clear": 19, "fmpz_factor_ecm_addmod": 19, "n_size": 19, "fmpz_factor_ecm": 19, "fmpz_factor_ecm_submod": 19, "fmpz_factor_ecm_doubl": 19, "x0": [19, 91], "z0": [19, 91], "x_0": [19, 26, 31, 76, 91], "z_0": [19, 91], "4a_": [19, 91], "x_0z_0": [19, 91], "montgomeri": [19, 63, 91], "coordin": [19, 91], "fmpz_factor_ecm_add": 19, "z2": [19, 91], "z_1": [19, 91], "x_2": [19, 21, 70, 91], "z_2": [19, 91], "4z_0": 19, "x_1x_2": 19, "z_1z_2": 19, "4x_0": 19, "x_2z_1": 19, "x_1z_2": 19, "fmpz_factor_ecm_mul_montgomery_ladd": 19, "ladder": [19, 91], "scalar": [19, 20, 69, 91], "fmpz_factor_ecm_select_curv": 19, "sigma": [19, 26, 36, 37, 43, 48, 51, 54, 57, 76, 86, 91], "suyama": [19, 91], "parameter": [19, 91], "unsuit": 19, "fmpz_factor_ecm_stage_i": 19, "prime_arrai": [19, 91], "fmpz_factor_ecm_stage_ii": 19, "n_factor_ecm": [19, 91], "gcd_tabl": [19, 91], "prime_t": [19, 91], "context": [20, 26, 39, 41, 44, 48, 51, 55, 57, 71, 81, 82], "fmpz_lll_t": 20, "govern": 20, "eta": [20, 21, 31], "lattic": [20, 21, 88], "gram": [20, 21], "fmpz_lll_context_init_default": 20, "fl": 20, "rt": 20, "gt": 20, "99": 20, "51": 20, "_basi": 20, "fmpz_lll_context_init": 20, "rep_typ": 20, "gram_typ": 20, "lie": [20, 63, 81, 82], "fmpz_lll_randtest": 20, "fmpz_lll_heuristic_dot": 20, "exp_adj": 20, "massiv": 20, "detect": [20, 21, 23, 29, 31, 33, 38, 42, 45, 54, 56, 67, 73, 76, 78], "fmpz_lll_check_babai": 20, "kappa": 20, "appb": 20, "expo": 20, "fmpz_gram_t": 20, "kappamax": 20, "d_mat": [20, 60], "gso": 20, "captur": 20, "unimodular": 20, "receiv": 20, "appsp": 20, "exactsp": 20, "far": [20, 91], "insuffici": 20, "everyth": 20, "procedur": [20, 21], "fmpz_lll_check_babai_heuristic_d": 20, "pure": [20, 31], "fmpz_lll_check_babai_heurist": 20, "mpf_mat_t": [20, 21, 66], "mpf": [20, 21, 35, 60], "tmp": 20, "rtmp": 20, "prec": [20, 66, 67, 68, 69, 81, 82, 86], "inherit": 20, "fmpz_lll_advance_check_babai": 20, "cur_kappa": 20, "reach": [20, 31, 91], "behind": 20, "upto": 20, "textbf": 20, "fmpz_lll_advance_check_babai_heuristic_d": 20, "fmpz_lll_shift": 20, "idea": [20, 31], "book": 20, "chapter": 20, "stehle2010": [20, 88], "unreduc": [20, 38, 42, 45, 56, 73, 79], "job": [20, 90], "fmpz_lll_d": 20, "fmpz_lll_d_heurist": 20, "fmpz_lll_d_heuristic_with_remov": 20, "fmpz_lll_d_with_remov": 20, "fmpz_lll_d_with_removal_knapsack": 20, "mildli": 20, "greedi": 20, "fmpz_lll_mpf2": 20, "mpf2": 20, "fmpz_lll_mpf": 20, "d_bit": 20, "20": [20, 80, 88], "eventu": 20, "max": [20, 21, 26, 31, 48, 51, 57, 76, 80, 85, 86], "fmpz_lll_wrapper": 20, "greediest": 20, "gs_b": [20, 21], "fmpz_lll_mpf2_with_remov": 20, "fmpz_lll_mpf_with_remov": 20, "fmpz_lll_wrapper_with_remov": 20, "knapsack": 20, "fmpz_lll_wrapper_with_removal_knapsack": 20, "engin": 20, "fmpz_lll_with_removal_ull": 20, "fm": 20, "new_siz": [20, 89], "style": 20, "adjoin": 20, "augment": [20, 32], "tend": [20, 70], "tradit": [20, 31], "attack": 20, "role": [20, 31], "villard2007": [20, 88], "arxiv": 20, "0701183": 20, "villard": [20, 88], "fmpz_lll_is_reduced_d": 20, "fmpz_lll_is_reduced_mpfr": 20, "fmpz_lll_is_reduced_d_with_remov": 20, "newd": [20, 21], "fmpz_lll_is_reduced_mpfr_with_remov": 20, "fmpz_mat_is_reduc": [20, 21], "fmpz_mat_is_reduced_gram": [20, 21], "fmpz_mat_is_reduced_with_remov": [20, 21], "fmpz_mat_is_reduced_gram_with_remov": [20, 21], "inconclus": 20, "_d": 20, "variant": [20, 21, 31, 34, 73, 91], "_mpfr": 20, "fmpz_lll_is_reduc": 20, "fmpz_lll_is_reduced_with_remov": 20, "conclus": 20, "optimzi": 20, "answer": 20, "fmpz_lll_storjohann_ull": 20, "fmpz_mat_lll_storjohann": [20, 21], "turn": [20, 21, 91], "maximis": 20, "fmpz_lll_with_remov": 20, "schmidt": [20, 21], "fmpz_mat_struct": [21, 81], "fmpz_mat_init": 21, "fmpz_mat_clear": 21, "fmpz_mat_set": 21, "fmpz_mat_init_set": 21, "fmpz_mat_swap": 21, "fmpz_mat_swap_entrywis": 21, "fmpz_mat_entri": 21, "fmpz_mat_zero": 21, "fmpz_mat_on": 21, "fmpz_mat_swap_row": 21, "fmpz_mat_swap_col": 21, "fmpz_mat_invert_row": 21, "fmpz_mat_invert_col": 21, "fmpz_mat_window_init": 21, "fmpz_mat_window_clear": 21, "fmpz_mat_randbit": 21, "fmpz_mat_randtest": 21, "fmpz_mat_randintrel": 21, "fmpz_mat_randsimdioph": 21, "bits2": [21, 34, 71], "diophantin": 21, "rest": [21, 70, 71], "fmpz_mat_randntrulik": 21, "ntru": 21, "fmpz_mat_randntrulike2": 21, "fmpz_mat_randajtai": 21, "ajtai": 21, "fmpz_mat_randpermdiag": 21, "diag": [21, 42, 45, 56, 73], "fmpz_mat_randrank": 21, "dens": [21, 24, 29, 33, 36, 38, 42, 43, 45, 54, 56, 73, 78, 88], "fmpz_mat_randop": 21, "fmpz_mat_randdet": 21, "elementari": [21, 38, 42, 45, 56, 73, 76], "fmpz_mat_fprint": 21, "fmpz_mat_fprint_pretti": 21, "bracket": [21, 23, 38, 42, 45, 56, 73], "fmpz_mat_print": 21, "fmpz_mat_print_pretti": 21, "fmpz_mat_fread": 21, "fmpz_mat_read": 21, "fmpz_mat_equ": 21, "fmpz_mat_is_zero": 21, "fmpz_mat_is_on": 21, "fmpz_mat_is_empti": 21, "fmpz_mat_is_squar": 21, "fmpz_mat_is_zero_row": 21, "fmpz_mat_col_equ": 21, "fmpz_mat_row_equ": 21, "fmpz_mat_transpos": 21, "fmpz_mat_concat_vert": 21, "fmpz_mat_concat_horizont": 21, "fmpz_mat_get_nmod_mat": 21, "nmod_mat_t": [21, 38, 42, 43, 44, 45, 54, 55, 56, 73, 76, 78], "amod": [21, 31], "fmpz_mat_set_nmod_mat": 21, "fmpz_mat_set_nmod_mat_unsign": 21, "fmpz_mat_crt_ui": 21, "mn": [21, 31], "fmpz_mat_multi_mod_ui_precomp": 21, "nre": 21, "comb_temp": 21, "fmpz_mat_multi_mod_ui": 21, "fmpz_mat_multi_mod_precomp": 21, "fmpz_mat_multi_crt_ui_precomp": 21, "imag": [21, 31, 36, 43], "fmpz_mat_multi_crt_ui": 21, "fmpz_mat_add": 21, "elementwis": 21, "fmpz_mat_sub": 21, "fmpz_mat_neg": 21, "fmpz_mat_scalar_mul_si": 21, "fmpz_mat_scalar_mul_ui": 21, "fmpz_mat_scalar_mul_fmpz": 21, "fmpz_mat_scalar_addmul_si": 21, "fmpz_mat_scalar_addmul_ui": 21, "fmpz_mat_scalar_addmul_fmpz": 21, "fmpz_mat_scalar_submul_si": 21, "fmpz_mat_scalar_submul_ui": 21, "fmpz_mat_scalar_submul_fmpz": 21, "fmpz_mat_scalar_addmul_nmod_mat_ui": 21, "fmpz_mat_scalar_addmul_nmod_mat_fmpz": 21, "fmpz_mat_scalar_divexact_si": 21, "fmpz_mat_scalar_divexact_ui": 21, "fmpz_mat_scalar_divexact_fmpz": 21, "fmpz_mat_scalar_mul_2exp": 21, "fmpz_mat_scalar_tdiv_q_2exp": 21, "fmpz_mat_scalar_smod": 21, "fmpz_mat_mul": 21, "fmpz_mat_mul_class": 21, "fmpz_mat_mul_strassen": 21, "strassen": [21, 31, 60, 73, 88], "winograd": [21, 73], "_fmpz_mat_mul_multi_mod": 21, "fmpz_mat_mul_multi_mod": 21, "pessimist": 21, "fmpz_mat_mul_bla": 21, "bla": [21, 73], "fmpz_mat_mul_fft": 21, "fmpz_mat_sqr": 21, "fmpz_mat_sqr_bodrato": 21, "bodrato": [21, 88], "bodrato2010": [21, 88], "highli": [21, 61], "150": [21, 88], "fmpz_mat_pow": 21, "_fmpz_mat_mul_smal": 21, "_fmpz_mat_mul_double_word": 21, "fmpz_mat_mul_fmpz_vec": 21, "fmpz_mat_mul_fmpz_vec_ptr": 21, "fmpz_mat_fmpz_vec_mul": 21, "fmpz_mat_fmpz_vec_mul_ptr": 21, "fmpz_mat_inv": 21, "ainv": [21, 33, 78], "lu": [21, 33, 78, 84], "fmpz_mat_kronecker_product": 21, "fmpz_mat_cont": 21, "mat_gcd": 21, "fmpz_mat_trac": 21, "fmpz_mat_det": 21, "fmpz_mat_det_cofactor": 21, "fmpz_mat_det_bareiss": 21, "fmpz_mat_det_modular": 21, "fmpz_mat_det_modular_acceler": 21, "bareiss": 21, "fmpz_mat_det_bound": 21, "consecut": [21, 26, 76], "100": [21, 88], "acceler": 21, "fewer": 21, "nearli": [21, 33, 78, 91], "trick": 21, "abbottbronsteinmulders1999": [21, 88], "fmpz_mat_det_modular_given_divisor": 21, "hadamard": 21, "a_i": [21, 31, 48, 51, 57, 80], "_2": [21, 32, 80], "fmpz_mat_det_bound_nonzero": 21, "fmpz_mat_det_divisor": 21, "arbitrarili": 21, "fmpz_mat_similar": 21, "_fmpz_mat_charpoly_berkowitz": 21, "cp": 21, "fmpz_mat_charpoly_berkowitz": 21, "berkowitz": 21, "_fmpz_mat_charpoly_modular": 21, "fmpz_mat_charpoly_modular": 21, "_fmpz_mat_charpoli": 21, "fmpz_mat_charpoli": 21, "_fmpz_mat_minpoly_modular": 21, "fmpz_mat_minpoly_modular": 21, "worst": [21, 88], "_fmpz_mat_minpoli": 21, "fmpz_mat_minpoli": 21, "fmpz_mat_rank": 21, "linearli": [21, 33, 78], "fmpz_mat_col_partit": 21, "short_circuit": 21, "van": [21, 32], "hoeij": [21, 32], "hat": 21, "bd": 21, "fmpz_mat_solv": 21, "cramer": 21, "substitut": [21, 31, 33, 42, 45, 48, 51, 56, 57, 73, 78], "fmpz_mat_solve_dixon": 21, "fmpz_mat_solve_fflu": 21, "fmpz_mat_solve_fflu_precomp": 21, "insolubl": 21, "fmpz_mat_solve_cram": 21, "fmpz_mat_solve_bound": 21, "fmpq_mat_set_fmpz_mat_mod": 21, "_fmpz_mat_solve_dixon_den": 21, "stabilis": [21, 31], "fmpz_mat_solve_dixon_den": 21, "fmpz_mat_solve_multi_mod_den": 21, "fmpz_mat_can_solve_multi_mod_den": 21, "fmpz_mat_can_solve_fflu": 21, "fmpz_mat_can_solv": 21, "fmpz_mat_find_pivot_ani": 21, "start_row": [21, 33, 78], "end_row": [21, 33, 78], "stop_row": [21, 33, 78], "growth": [21, 33, 78], "fmpz_mat_fflu": 21, "rank_check": [21, 23, 33, 38, 42, 45, 56, 73, 78], "decid": [21, 32, 33, 78], "pariti": [21, 33, 78], "nakturwil1997": [21, 88], "fmpz_mat_rref": 21, "fmpz_mat_rref_fflu": 21, "fmpz_mat_rref_mul": 21, "rref": [21, 38, 42, 45, 56, 73], "nmod_mat_rref": [21, 73], "stein2007": [21, 88], "fmpz_mat_is_in_rref_with_rank": 21, "fmpz_mat_rref_mod": 21, "fmpz_mat_strong_echelon_form_mod": 21, "fiehof2014": [21, 23, 73, 88], "fmpz_mat_howell_form_mod": 21, "stomul1998": [21, 23, 73, 88], "fmpz_mat_nullspac": 21, "nulliti": [21, 33, 73, 78], "maxim": [21, 31], "fmpz_mat_rref_fraction_fre": 21, "fmpz_mat_hnf": 21, "fmpz_mat_hnf_transform": 21, "ua": 21, "fmpz_mat_hnf_class": 21, "coh1996": [21, 31, 88], "fmpz_mat_hnf_xgcd": 21, "fmpz_mat_hnf_modular": 21, "domich": [21, 88], "kannan": [21, 88], "trotter": [21, 88], "domkantro1987": [21, 88], "fmpz_mat_hnf_modular_eldiv": 21, "fmpz_mat_hnf_minor": 21, "bachem": [21, 88], "kanbac1979": [21, 88], "minor": 21, "fmpz_mat_hnf_pernet_stein": 21, "pernet": [21, 88], "stein": [21, 88], "pernetstein2010": [21, 88], "fmpz_mat_is_in_hnf": 21, "fmpz_mat_snf": 21, "fmpz_mat_snf_diagon": 21, "fmpz_mat_snf_kannan_bachem": 21, "fmpz_mat_snf_iliopoulo": 21, "iliopoulo": [21, 88], "iliopoulos1989": [21, 88], "fmpz_mat_is_in_snf": 21, "fmpz_mat_gram": 21, "dimension": 21, "fmpz_mat_is_hadamard": 21, "fmpz_mat_hadamard": 21, "unsuccess": [21, 24, 29, 74], "palei": 21, "92": [21, 88], "116": 21, "156": 21, "a046116": 21, "fmpz_mat_get_d_mat": 21, "fmpz_mat_get_d_mat_transpos": 21, "fmpz_mat_get_mpf_mat": 21, "fmpz_mat_chol_d": 21, "rr": 21, "fmpz_mat_lll_origin": 21, "y_1": 21, "y_2": 21, "y_m": 21, "storjohann": [21, 88], "technic": 21, "report": [21, 60], "249": 21, "zurich": 21, "switzerland": 21, "depart": 21, "informatik": 21, "eth": 21, "juli": [21, 88], "30": [21, 88], "1996": [21, 88], "fmpz_mod_ctx_struct": 22, "fmpz_mod_ctx_t": [22, 23, 26, 27, 28, 36, 37], "fmpz_mod_ctx_init": 22, "fmpz_mod_ctx_clear": 22, "fmpz_mod_ctx_set_modulu": 22, "reconfigur": 22, "fmpz_mod_set_fmpz": 22, "func": [22, 26], "fmpz_mod_is_canon": 22, "fmpz_mod_is_on": 22, "fmpz_mod_add": 22, "fmpz_mod_add_fmpz": 22, "fmpz_mod_add_ui": 22, "fmpz_mod_add_si": 22, "fmpz_mod_sub": 22, "fmpz_mod_sub_fmpz": 22, "fmpz_mod_sub_ui": 22, "fmpz_mod_sub_si": 22, "fmpz_mod_fmpz_sub": 22, "fmpz_mod_ui_sub": 22, "fmpz_mod_si_sub": 22, "fmpz_mod_neg": 22, "fmpz_mod_mul": 22, "fmpz_mod_inv": 22, "mayb": 22, "fmpz_mod_pow_fmpz": 22, "fmpz_mod_divid": 22, "fmpz_mod_pow_ui": 22, "fmpz_mod_discrete_log_pohlig_hellman_init": 22, "fmpz_mod_discrete_log_pohlig_hellman_t": 22, "readi": [22, 72], "fmpz_mod_discrete_log_pohlig_hellman_clear": 22, "fmpz_mod_discrete_log_pohlig_hellman_precompute_prim": 22, "fmpz_mod_discrete_log_pohlig_hellman_primitive_root": 22, "fmpz_mod_discrete_log_pohlig_hellman_run": 22, "fmpz_next_smooth_prim": 22, "23": 22, "fmpz_mod_mat_struct": 23, "fmpz_mod_mat_t": [23, 36, 38, 41, 42, 45, 56], "fmpz_mod_mat_entri": 23, "fmpz_mod_mat_set_entri": 23, "fmpz_mod_mat_init": 23, "fmpz_mod_mat_init_set": 23, "fmpz_mod_mat_clear": 23, "fmpz_mod_mat_nrow": 23, "fmpz_mod_mat_ncol": 23, "_fmpz_mod_mat_set_mod": 23, "fmpz_mod_mat_on": 23, "fmpz_mod_mat_zero": 23, "fmpz_mod_mat_swap": 23, "fmpz_mod_mat_swap_entrywis": 23, "fmpz_mod_mat_is_empti": 23, "fmpz_mod_mat_is_squar": 23, "_fmpz_mod_mat_reduc": 23, "fmpz_mod_mat_randtest": 23, "fmpz_mod_mat_window_init": 23, "fmpz_mod_mat_window_clear": 23, "fmpz_mod_mat_concat_horizont": 23, "fmpz_mod_mat_concat_vert": 23, "fmpz_mod_mat_print_pretti": 23, "fmpz_mod_mat_is_zero": 23, "fmpz_mod_mat_set": 23, "fmpz_mod_mat_transpos": 23, "fmpz_mod_mat_set_fmpz_mat": 23, "fmpz_mod_mat_get_fmpz_mat": 23, "fmpz_mod_mat_add": 23, "fmpz_mod_mat_sub": 23, "fmpz_mod_mat_neg": 23, "fmpz_mod_mat_scalar_mul_si": 23, "ca": [23, 73, 88, 91], "fmpz_mod_mat_scalar_mul_ui": 23, "fmpz_mod_mat_scalar_mul_fmpz": 23, "fmpz_mod_mat_mul": 23, "_fmpz_mod_mat_mul_classical_threaded_pool_op": 23, "thread_pool_handl": [23, 26, 73, 76, 89], "_fmpz_mod_mat_mul_classical_threaded_op": 23, "fmpz_mod_mat_mul_classical_thread": [23, 90], "fmpz_mod_mat_sqr": 23, "fmpz_mod_mat_mul_fmpz_vec": 23, "fmpz_mod_mat_mul_fmpz_vec_ptr": 23, "fmpz_mod_mat_fmpz_vec_mul": 23, "fmpz_mod_mat_fmpz_vec_mul_ptr": 23, "fmpz_mod_mat_trac": 23, "fmpz_mod_mat_rref": 23, "fmpz_mod_mat_strong_echelon_form": 23, "fmpz_mod_mat_howell_form": 23, "fmpz_mod_mat_inv": 23, "fmpz_mod_mat_lu": 23, "generalis": [23, 26, 31, 38, 42, 45, 56, 73, 76], "pa": [23, 38, 42, 45, 56, 73], "nonsingular": [23, 33, 38, 42, 45, 56, 78], "overwritten": [23, 38, 42, 45, 56, 73], "abandon": [23, 38, 42, 45, 56, 73], "defici": [23, 38, 42, 45, 56, 73], "fmpz_mod_mat_solve_tril": 23, "fmpz_mod_mat_solve_triu": 23, "fmpz_mod_mat_solv": 23, "fmpz_mod_mat_can_solv": 23, "fp": [23, 29], "fmpz_mod_mat_similar": 23, "fmpz_mod_mat_charpoli": 23, "fmpz_mod_mat_minpoli": 23, "referenc": [24, 29, 74], "disappear": 24, "fmpz_mod_mpoly_struct": 24, "multivari": [24, 60, 61, 88, 90], "fmpz_mod_mpoly_t": [24, 25], "fmpz_mod_mpoly_ctx_struct": 24, "fmpz_mod_mpoly_ctx_t": [24, 25], "fmpz_mod_mpoly_ctx_init": 24, "fmpz_mod_mpoly_ctx_nvar": 24, "fmpz_mod_mpoly_ctx_ord": 24, "fmpz_mod_mpoly_ctx_get_modulu": 24, "fmpz_mod_mpoly_ctx_clear": 24, "fmpz_mod_mpoly_init": 24, "fmpz_mod_mpoly_init2": 24, "fmpz_mod_mpoly_init3": 24, "fmpz_mod_mpoly_clear": 24, "fmpz_mod_mpoly_get_str_pretti": 24, "fmpz_mod_mpoly_fprint_pretti": 24, "fmpz_mod_mpoly_print_pretti": 24, "fmpz_mod_mpoly_set_str_pretti": 24, "fmpz_mod_mpoly_gen": 24, "fmpz_mod_mpoly_is_gen": 24, "fmpz_mod_mpoly_set": 24, "fmpz_mod_mpoly_equ": 24, "fmpz_mod_mpoly_swap": 24, "fmpz_mod_mpoly_is_fmpz": 24, "fmpz_mod_mpoly_get_fmpz": 24, "fmpz_mod_mpoly_set_fmpz": 24, "fmpz_mod_mpoly_set_ui": 24, "fmpz_mod_mpoly_set_si": 24, "fmpz_mod_mpoly_zero": 24, "fmpz_mod_mpoly_on": 24, "fmpz_mod_mpoly_equal_fmpz": 24, "fmpz_mod_mpoly_equal_ui": 24, "fmpz_mod_mpoly_equal_si": 24, "fmpz_mod_mpoly_is_zero": 24, "fmpz_mod_mpoly_is_on": 24, "fmpz_mod_mpoly_degrees_fit_si": 24, "fmpz_mod_mpoly_degrees_fmpz": 24, "fmpz_mod_mpoly_degrees_si": 24, "fmpz_mod_mpoly_degree_fmpz": 24, "fmpz_mod_mpoly_degree_si": 24, "fmpz_mod_mpoly_total_degree_fits_si": 24, "fmpz_mod_mpoly_total_degree_fmpz": 24, "fmpz_mod_mpoly_total_degree_si": 24, "fmpz_mod_mpoly_used_var": 24, "fmpz_mod_mpoly_get_coeff_fmpz_monomi": 24, "fmpz_mod_mpoly_set_coeff_fmpz_monomi": 24, "fmpz_mod_mpoly_get_coeff_fmpz_fmpz": 24, "fmpz_mod_mpoly_get_coeff_fmpz_ui": 24, "fmpz_mod_mpoly_set_coeff_fmpz_fmpz": 24, "fmpz_mod_mpoly_set_coeff_ui_fmpz": 24, "fmpz_mod_mpoly_set_coeff_si_fmpz": 24, "fmpz_mod_mpoly_set_coeff_fmpz_ui": 24, "fmpz_mod_mpoly_set_coeff_ui_ui": 24, "fmpz_mod_mpoly_set_coeff_si_ui": 24, "fmpz_mod_mpoly_get_coeff_vars_ui": 24, "fmpz_mod_mpoly_cmp": 24, "fmpz_mod_mpoly_is_canon": 24, "fmpz_mod_mpoly_length": 24, "fmpz_mod_mpoly_res": 24, "fmpz_mod_mpoly_get_term_coeff_fmpz": 24, "fmpz_mod_mpoly_set_term_coeff_fmpz": 24, "fmpz_mod_mpoly_set_term_coeff_ui": 24, "fmpz_mod_mpoly_set_term_coeff_si": 24, "fmpz_mod_mpoly_term_exp_fits_si": 24, "fmpz_mod_mpoly_term_exp_fits_ui": 24, "fmpz_mod_mpoly_get_term_exp_fmpz": 24, "fmpz_mod_mpoly_get_term_exp_ui": 24, "fmpz_mod_mpoly_get_term_exp_si": 24, "fmpz_mod_mpoly_get_term_var_exp_ui": 24, "fmpz_mod_mpoly_get_term_var_exp_si": 24, "fmpz_mod_mpoly_set_term_exp_fmpz": 24, "fmpz_mod_mpoly_set_term_exp_ui": 24, "fmpz_mod_mpoly_get_term": 24, "fmpz_mod_mpoly_get_term_monomi": 24, "fmpz_mod_mpoly_push_term_fmpz_fmpz": 24, "fmpz_mod_mpoly_push_term_ui_fmpz": 24, "fmpz_mod_mpoly_push_term_si_fmpz": 24, "fmpz_mod_mpoly_push_term_fmpz_ui": 24, "fmpz_mod_mpoly_push_term_ui_ui": 24, "fmpz_mod_mpoly_push_term_si_ui": 24, "fmpz_mod_mpoly_sort_term": 24, "reorder": [24, 29, 46, 48, 51, 57, 74], "fmpz_mod_mpoly_combine_like_term": 24, "fmpz_mod_mpoly_revers": 24, "fmpz_mod_mpoly_randtest_bound": 24, "fmpz_mod_mpoly_randtest_bit": 24, "fmpz_mod_mpoly_add_fmpz": 24, "fmpz_mod_mpoly_add_ui": 24, "fmpz_mod_mpoly_add_si": 24, "fmpz_mod_mpoly_sub_fmpz": 24, "fmpz_mod_mpoly_sub_ui": 24, "fmpz_mod_mpoly_sub_si": 24, "fmpz_mod_mpoly_add": 24, "fmpz_mod_mpoly_sub": 24, "fmpz_mod_mpoly_neg": 24, "fmpz_mod_mpoly_scalar_mul_fmpz": 24, "fmpz_mod_mpoly_scalar_mul_ui": 24, "fmpz_mod_mpoly_scalar_mul_si": 24, "fmpz_mod_mpoly_scalar_addmul_fmpz": 24, "fmpz_mod_mpoly_make_mon": 24, "fmpz_mod_mpoly_deriv": 24, "fmpz_mod_mpoly_evaluate_all_fmpz": 24, "eval": 24, "fmpz_mod_mpoly_evaluate_one_fmpz": 24, "fmpz_mod_mpoly_compose_fmpz_poli": 24, "fmpz_poly_struct": [24, 26, 29, 31, 33, 34], "fmpz_mod_mpoly_compose_fmpz_mod_mpoly_geobucket": 24, "fmpz_mod_mpoly_compose_fmpz_mod_mpoli": 24, "geobucket": [24, 29, 74], "fmpz_mod_mpoly_compose_fmpz_mod_mpoly_gen": 24, "fmpz_mod_mpoly_mul": 24, "fmpz_mod_mpoly_mul_johnson": 24, "johnson": [24, 29, 74], "fmpz_mod_mpoly_mul_dens": 24, "fmpz_mod_mpoly_pow_fmpz": 24, "fmpz_mod_mpoly_pow_ui": 24, "fmpz_mod_mpoly_divid": 24, "fmpz_mod_mpoly_div": 24, "fmpz_mod_mpoly_divrem": 24, "fmpz_mod_mpoly_divrem_id": 24, "fmpz_mod_mpoly_term_cont": 24, "fmpz_mod_mpoly_content_var": 24, "fmpz_mod_mpoly_gcd": 24, "fmpz_mod_mpoly_gcd_cofactor": 24, "fmpz_mod_mpoly_gcd_brown": 24, "fmpz_mod_mpoly_gcd_hensel": 24, "fmpz_mod_mpoly_gcd_subresult": 24, "fmpz_mod_mpoly_gcd_zippel": 24, "fmpz_mod_mpoly_gcd_zippel2": 24, "fmpz_mod_mpoly_result": 24, "fmpz_mod_mpoly_discrimin": 24, "fmpz_mod_mpoly_sqrt": 24, "fmpz_mod_mpoly_is_squar": 24, "fmpz_mod_mpoly_quadratic_root": 24, "aq": [24, 46, 74], "fmpz_mod_mpoly_univar_t": 24, "fmpz_mod_mpoly_univar_init": 24, "fmpz_mod_mpoly_univar_clear": 24, "fmpz_mod_mpoly_univar_swap": 24, "fmpz_mod_mpoly_to_univar": 24, "fmpz_mod_mpoly_from_univar": 24, "fmpz_mod_mpoly_univar_degree_fits_si": 24, "fmpz_mod_mpoly_univar_length": 24, "fmpz_mod_mpoly_univar_get_term_exp_si": 24, "fmpz_mod_mpoly_univar_get_term_coeff": 24, "fmpz_mod_mpoly_univar_swap_term_coeff": 24, "fmpz_mod_mpoly_univar_set_coeff_ui": 24, "fmpz_mod_mpoly_univar_result": 24, "bx": 24, "fmpz_mod_mpoly_univar_discrimin": 24, "fmpz_mod_mpoly_infl": 24, "stride": [24, 29, 90], "fmpz_mod_mpoly_defl": 24, "undo": [24, 29], "s_v": [24, 29], "min": [24, 29, 76, 80, 82, 85, 86], "fmpz_mod_mpoly_factor_struct": 25, "fmpz_mod_mpoly_factor_t": 25, "fmpz_mod_mpoly_factor_init": 25, "fmpz_mod_mpoly_factor_clear": 25, "fmpz_mod_mpoly_factor_swap": 25, "fmpz_mod_mpoly_factor_length": 25, "fmpz_mod_mpoly_factor_get_constant_fmpz": 25, "fmpz_mod_mpoly_factor_get_bas": 25, "fmpz_mod_mpoly_factor_swap_bas": 25, "fmpz_mod_mpoly_factor_get_exp_si": 25, "fmpz_mod_mpoly_factor_sort": 25, "fmpz_mod_mpoly_factor_squarefre": 25, "fmpz_mod_poly_struct": [26, 36], "fmpz_mod_poly_init": 26, "fmpz_mod_poly_clear": 26, "fmpz_mod_poly_init2": 26, "fmpz_mod_poly_realloc": 26, "fmpz_mod_poly_fit_length": 26, "_fmpz_mod_poly_normalis": 26, "_fmpz_mod_poly_set_length": 26, "fmpz_mod_poly_trunc": 26, "fmpz_mod_poly_set_trunc": 26, "fmpz_mod_poly_randtest": 26, "fmpz_mod_poly_randtest_irreduc": 26, "fmpz_mod_poly_randtest_not_zero": 26, "fmpz_mod_poly_randtest_mon": 26, "fmpz_mod_poly_randtest_monic_irreduc": 26, "fmpz_mod_poly_randtest_monic_primit": 26, "fmpz_mod_poly_randtest_trinomi": 26, "trinomi": [26, 76], "fmpz_mod_poly_randtest_trinomial_irreduc": 26, "max_attempt": [26, 76], "fmpz_mod_poly_randtest_pentomi": 26, "pentomi": [26, 76], "fmpz_mod_poly_randtest_pentomial_irreduc": 26, "fmpz_mod_poly_randtest_sparse_irreduc": 26, "fmpz_mod_poly_degre": 26, "fmpz_mod_poly_length": 26, "fmpz_mod_poly_lead": 26, "fmpz_mod_poly_set": 26, "fmpz_mod_poly_swap": 26, "fmpz_mod_poly_zero": 26, "fmpz_mod_poly_on": 26, "fmpz_mod_poly_zero_coeff": 26, "fmpz_mod_poly_revers": 26, "fmpz_mod_poly_set_ui": 26, "fmpz_mod_poly_set_fmpz": 26, "fmpz_mod_poly_set_fmpz_poli": 26, "fmpz_mod_poly_get_fmpz_poli": 26, "fmpz_mod_poly_get_nmod_poli": 26, "fmpz_mod_poly_set_nmod_poli": 26, "fmpz_mod_poly_equ": 26, "fmpz_mod_poly_equal_trunc": 26, "fmpz_mod_poly_is_zero": 26, "fmpz_mod_poly_is_on": 26, "fmpz_mod_poly_is_gen": 26, "fmpz_mod_poly_set_coeff_fmpz": 26, "fmpz_mod_poly_set_coeff_ui": 26, "fmpz_mod_poly_get_coeff_fmpz": 26, "fmpz_mod_poly_set_coeff_mpz": 26, "fmpz_mod_poly_get_coeff_mpz": 26, "_fmpz_mod_poly_shift_left": 26, "fmpz_mod_poly_shift_left": 26, "_fmpz_mod_poly_shift_right": 26, "fmpz_mod_poly_shift_right": 26, "_fmpz_mod_poly_add": 26, "fmpz_mod_poly_add": 26, "fmpz_mod_poly_add_seri": 26, "_fmpz_mod_poly_sub": 26, "fmpz_mod_poly_sub": 26, "fmpz_mod_poly_sub_seri": 26, "_fmpz_mod_poly_neg": 26, "fmpz_mod_poly_neg": 26, "_fmpz_mod_poly_scalar_mul_fmpz": 26, "fmpz_mod_poly_scalar_mul_fmpz": 26, "fmpz_mod_poly_scalar_addmul_fmpz": 26, "_fmpz_mod_poly_scalar_div_fmpz": 26, "fmpz_mod_poly_scalar_div_fmpz": 26, "_fmpz_mod_poly_mul": 26, "fmpz_mod_poly_mul": 26, "_fmpz_mod_poly_mullow": 26, "fmpz_mod_poly_mullow": 26, "_fmpz_mod_poly_sqr": 26, "fmpz_mod_poly_sqr": 26, "fmpz_mod_poly_mulhigh": 26, "_fmpz_mod_poly_mulmod": 26, "lenf": [26, 48, 51, 57, 76], "fmpz_mod_poly_mulmod": 26, "_fmpz_mod_poly_mulmod_preinv": 26, "lenfinv": [26, 48, 51, 57, 76], "fmpz_mod_poly_mulmod_preinv": 26, "_fmpz_mod_poly_product_roots_fmpz_vec": 26, "fmpz_mod_poly_product_roots_fmpz_vec": 26, "fmpz_mod_poly_find_distinct_nonzero_root": 26, "_p": [26, 36, 37, 41, 43, 44, 48, 51, 54, 55, 57, 76, 80, 81, 82, 86, 87], "_fmpz_mod_poly_pow": 26, "elen": 26, "fmpz_mod_poly_pow": 26, "_fmpz_mod_poly_pow_trunc": 26, "fmpz_mod_poly_pow_trunc": 26, "_fmpz_mod_poly_pow_trunc_binexp": 26, "fmpz_mod_poly_pow_trunc_binexp": 26, "_fmpz_mod_poly_powmod_ui_binexp": 26, "fmpz_mod_poly_powmod_ui_binexp": 26, "_fmpz_mod_poly_powmod_ui_binexp_preinv": 26, "fmpz_mod_poly_powmod_ui_binexp_preinv": 26, "_fmpz_mod_poly_powmod_fmpz_binexp": 26, "fmpz_mod_poly_powmod_fmpz_binexp": 26, "_fmpz_mod_poly_powmod_fmpz_binexp_preinv": 26, "fmpz_mod_poly_powmod_fmpz_binexp_preinv": 26, "_fmpz_mod_poly_powmod_x_fmpz_preinv": 26, "fmpz_mod_poly_powmod_x_fmpz_preinv": 26, "_fmpz_mod_poly_powers_mod_preinv_na": 26, "glen": [26, 76], "ginv": [26, 48, 51, 57, 76], "ginvlen": [26, 76], "fmpz_mod_poly_powers_mod_na": 26, "_fmpz_mod_poly_powers_mod_preinv_threaded_pool": 26, "fmpz_mod_poly_powers_mod_bsg": 26, "fmpz_mod_poly_frobenius_powers_2exp_precomp": 26, "fmpz_mod_poly_frobenius_powers_2exp_t": 26, "fmpz_mod_poly_frobenius_pow": 26, "fmpz_mod_poly_frobenius_powers_2exp_clear": 26, "frobeniu": [26, 36, 37, 41, 43, 44, 54, 55, 86], "caught": 26, "fmpz_mod_poly_frobenius_powers_precomp": 26, "fmpz_mod_poly_frobenius_powers_t": 26, "fmpz_mod_poly_frobenius_powers_clear": 26, "_fmpz_mod_poly_divrem_basecas": 26, "invb": [26, 48, 51, 57], "fmpz_mod_poly_divrem_basecas": 26, "_fmpz_mod_poly_divrem_newton_n_preinv": 26, "binv": [26, 48, 51, 57, 76], "lenbinv": [26, 48, 51, 57, 76], "bq": [26, 31, 48, 51, 57, 76], "furthermor": [26, 48, 51, 57, 76], "div_newton_n_preinv": [26, 51, 76], "fmpz_mod_poly_divrem_newton_n_preinv": 26, "div_newton_n": [26, 51, 76], "_fmpz_mod_poly_div_basecas": 26, "notation": [26, 31, 48, 51, 57, 76, 82], "fmpz_mod_poly_div_basecas": 26, "_fmpz_mod_poly_div_divconquer_recurs": 26, "_fmpz_mod_poly_div_newton": 26, "fmpz_mod_poly_div_newton": 26, "_fmpz_mod_poly_div_newton_n_preinv": 26, "fmpz_mod_poly_div_newton_n_preinv": 26, "fmpz_mod_poly_remov": 26, "_fmpz_mod_poly_rem_basecas": 26, "fmpz_mod_poly_rem_basecas": 26, "_fmpz_mod_poly_divrem_divconquer_recurs": 26, "_fmpz_mod_poly_divrem_divconqu": 26, "_fmpz_mod_poly_div_divconqu": 26, "fmpz_mod_poly_div_divconqu": 26, "fmpz_mod_poly_divrem_divconqu": 26, "_fmpz_mod_poly_div": 26, "fmpz_mod_poly_div": 26, "_fmpz_mod_poly_divrem": 26, "fmpz_mod_poly_divrem": 26, "fmpz_mod_poly_divrem_f": 26, "_fmpz_mod_poly_rem": 26, "_fmpz_mod_poly_rem_f": 26, "nontrivi": [26, 27, 33, 78], "fmpz_mod_poly_rem": 26, "_fmpz_mod_poly_divides_class": 26, "fmpz_mod_poly_divides_class": 26, "_fmpz_mod_poly_divid": 26, "fmpz_mod_poly_divid": 26, "_fmpz_mod_poly_inv_series_newton": 26, "qinv": [26, 31, 39, 48, 51, 57, 76], "cinv": 26, "fmpz_mod_poly_inv_series_newton": 26, "fmpz_mod_poly_inv_series_newton_f": 26, "_fmpz_mod_poly_inv_seri": 26, "fmpz_mod_poly_inv_seri": 26, "fmpz_mod_poly_inv_series_f": 26, "_fmpz_mod_poly_div_seri": 26, "fmpz_mod_poly_div_seri": 26, "think": [26, 39, 48, 51, 57, 76], "fmpz_mod_poly_make_mon": 26, "fmpz_mod_poly_make_monic_f": 26, "_fmpz_mod_poly_gcd_euclidean": 26, "fmpz_mod_poly_gcd_euclidean": 26, "_fmpz_mod_poly_gcd": 26, "fmpz_mod_poly_gcd": 26, "_fmpz_mod_poly_gcd_euclidean_f": 26, "fmpz_mod_poly_gcd_euclidean_f": 26, "_fmpz_mod_poly_gcd_f": 26, "fmpz_mod_poly_gcd_f": 26, "_fmpz_mod_poly_hgcd": 26, "lenm": [26, 48, 51, 57, 76], "hgcd": [26, 39, 48, 51, 57, 76, 88], "_fmpz_mod_poly_gcd_hgcd": 26, "fmpz_mod_poly_gcd_hgcd": 26, "mathcal": [26, 76, 86], "thullyap1990": [26, 76, 88], "_fmpz_mod_poly_xgcd_euclidean": 26, "_fmpz_mod_poly_xgcd_euclidean_f": 26, "fmpz_mod_poly_xgcd_euclidean": 26, "fmpz_mod_poly_xgcd_euclidean_f": 26, "_fmpz_mod_poly_xgcd_hgcd": 26, "fmpz_mod_poly_xgcd_hgcd": 26, "_fmpz_mod_poly_xgcd": 26, "fmpz_mod_poly_xgcd": 26, "fmpz_mod_poly_xgcd_f": 26, "_fmpz_mod_poly_gcdinv_euclidean": 26, "cong": [26, 76, 86], "fmpz_mod_poly_gcdinv_euclidean": 26, "_fmpz_mod_poly_gcdinv_euclidean_f": 26, "fmpz_mod_poly_gcdinv_euclidean_f": 26, "_fmpz_mod_poly_gcdinv": 26, "_fmpz_mod_poly_gcdinv_f": 26, "fmpz_mod_poly_gcdinv": 26, "fmpz_mod_poly_gcdinv_f": 26, "_fmpz_mod_poly_invmod": 26, "lenp": [26, 76], "_fmpz_mod_poly_invmod_f": 26, "fmpz_mod_poly_invmod": 26, "fmpz_mod_poly_invmod_f": 26, "_fmpz_mod_poly_minpoly_bm": 26, "seq": 26, "fmpz_mod_poly_minpoly_bm": 26, "proport": [26, 29], "_fmpz_mod_poly_minpoly_hgcd": 26, "fmpz_mod_poly_minpoly_hgcd": 26, "_fmpz_mod_poly_minpoli": 26, "fmpz_mod_poly_minpoli": [26, 76], "annihil": [26, 76], "seq_i": 26, "seq_": 26, "f_j": [26, 91], "fastest": 26, "_fmpz_mod_poly_resultant_euclidean": 26, "fmpz_mod_poly_resultant_euclidean": 26, "a_m": [26, 31, 72, 76], "a_0": [26, 31, 34, 76, 80], "_fmpz_mod_poly_resultant_hgcd": 26, "addition": [26, 76, 91], "won": [26, 76], "nmod_poly_res_t": [26, 76], "fmpz_mod_poly_resultant_hgcd": 26, "_fmpz_mod_poly_result": 26, "fmpz_mod_poly_result": 26, "_fmpz_mod_poly_discrimin": 26, "fmpz_mod_poly_discrimin": 26, "disc": [26, 31, 76], "lc": [26, 31, 76], "r_j": [26, 31, 76], "_fmpz_mod_poly_deriv": 26, "fmpz_mod_poly_deriv": 26, "_fmpz_mod_poly_evaluate_fmpz": 26, "fmpz_mod_poly_evaluate_fmpz": 26, "_fmpz_mod_poly_evaluate_fmpz_vec_it": 26, "fmpz_mod_poly_evaluate_fmpz_vec_it": 26, "_fmpz_mod_poly_evaluate_fmpz_vec_fast_precomp": 26, "plen": [26, 76], "_fmpz_mod_poly_evaluate_fmpz_vec_fast": 26, "fmpz_mod_poly_evaluate_fmpz_vec_fast": 26, "_fmpz_mod_poly_evaluate_fmpz_vec": 26, "fmpz_mod_poly_evaluate_fmpz_vec": 26, "_fmpz_mod_poly_compose_horn": 26, "fmpz_mod_poly_compose_horn": 26, "_fmpz_mod_poly_compose_divconqu": 26, "fmpz_mod_poly_compose_divconqu": 26, "_fmpz_mod_poly_compos": 26, "fmpz_mod_poly_compos": 26, "_fmpz_mod_poly_invsqrt_seri": 26, "fmpz_mod_poly_invsqrt_seri": 26, "fmpz_ctx_t": 26, "_fmpz_mod_poly_sqrt_seri": 26, "fmpz_mod_poly_sqrt_seri": 26, "_fmpz_mod_poly_sqrt": 26, "fmpz_mod_poly_sqrt": 26, "_fmpz_mod_poly_compose_mod": 26, "lenh": [26, 48, 51, 57, 76], "fmpz_mod_poly_compose_mod": 26, "_fmpz_mod_poly_compose_mod_horn": 26, "fmpz_mod_poly_compose_mod_horn": 26, "_fmpz_mod_poly_compose_mod_brent_kung": 26, "len3": [26, 29], "fmpz_mod_poly_compose_mod_brent_kung": 26, "_fmpz_mod_poly_reduce_matrix_mod_poli": 26, "ith": [26, 48, 51, 57, 76], "_fmpz_mod_poly_precompute_matrix_work": 26, "arg_ptr": [26, 27, 76, 77], "_fmpz_mod_poly_precompute_matrix": 26, "fmpz_mod_poly_matrix_precompute_arg_t": 26, "leng": [26, 48, 51, 57, 76], "lenginv": [26, 48, 51, 57, 76], "fmpz_mod_poly_precompute_matrix": 26, "_fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv_work": 26, "_fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv": 26, "fmpz_mod_poly_compose_mod_precomp_preinv_arg_t": 26, "lenhinv": [26, 48, 51, 57, 76], "fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv": 26, "_fmpz_mod_poly_compose_mod_brent_kung_preinv": 26, "fmpz_mod_poly_compose_mod_brent_kung_preinv": 26, "_fmpz_mod_poly_compose_mod_brent_kung_vec_preinv": 26, "f_i": [26, 76], "fmpz_mod_poly_compose_mod_brent_kung_vec_preinv": 26, "_fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool": 26, "lenpoli": [26, 76], "polyinv": [26, 76], "leninv": [26, 76], "multithread": [26, 27, 61, 73, 76, 77], "across": [26, 31, 76], "fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool": 26, "fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_thread": 26, "_fmpz_mod_poly_tree_alloc": 26, "_fmpz_mod_poly_tree_fre": 26, "_fmpz_mod_poly_tree_build": 26, "b_i": [26, 29, 71, 74], "facilit": 26, "fmpz_mod_poly_radix_t": 26, "fmpz_mod_poly_radix_init": 26, "_fmpz_mod_poly_radix_init": 26, "rpow": 26, "rinv": 26, "lenr": [26, 29, 36, 43, 54, 86], "invl": 26, "degf": 26, "_fmpz_mod_poly_radix": 26, "degr": 26, "fmpz_mod_poly_radix": 26, "5x": [26, 31], "2x": [26, 31, 76], "_fmpz_mod_poly_fprint": 26, "fmpz_mod_poly_fprint": [26, 36], "fmpz_mod_poly_fprint_pretti": 26, "fmpz_mod_poly_print": [26, 36], "fmpz_mod_poly_print_pretti": 26, "fmpz_mod_poly_infl": 26, "fmpz_mod_poly_defl": 26, "fmpz_mod_berlekamp_massey_t": 26, "unlimit": [26, 76], "fmpz_mod_berlekamp_massey_reduc": 26, "fmpz_mod_berlekamp_massey_v_poli": 26, "fmpz_mod_berlekamp_massey_r_poli": 26, "v_i": [26, 76, 91], "cost": [26, 76, 90], "fmpz_mod_berlekamp_massey_init": 26, "fmpz_mod_berlekamp_massey_clear": 26, "fmpz_mod_berlekamp_massey_start_ov": 26, "fmpz_mod_berlekamp_massey_add_point": 26, "fmpz_mod_berlekamp_massey_add_zero": 26, "date": [26, 76], "suppos": [26, 31, 48, 51, 57, 63, 76, 80, 82, 85, 91], "recogn": [26, 76], "fmpz_mod_berlekamp_massey_point_count": 26, "fmpz_mod_berlekamp_massey_point": 26, "fmpz_mod_poly_factor_struct": 27, "fmpz_mod_poly_factor_t": 27, "fmpz_mpoly_factor_struct": [27, 30], "fmpz_mod_poly_factor_init": 27, "fmpz_mod_poly_factor_clear": 27, "fmpz_mod_poly_factor_realloc": 27, "fmpz_mod_poly_factor_fit_length": 27, "fmpz_mod_poly_factor_set": 27, "fmpz_mod_poly_factor_print": 27, "fmpz_mod_poly_factor_insert": 27, "fmpz_mod_poly_factor_concat": 27, "concaten": [27, 32, 40, 49, 52, 58, 77], "fmpz_mod_poly_factor_pow": 27, "fmpz_mod_poly_is_irreduc": 27, "fmpz_mod_poly_is_irreducible_ddf": 27, "fmpz_mod_poly_is_irreducible_rabin": 27, "fmpz_mod_poly_is_irreducible_rabin_f": 27, "_fmpz_mod_poly_is_squarefre": 27, "squarefre": [27, 31, 32, 40, 49, 52, 58, 77, 91], "_fmpz_mod_poly_is_squarefree_f": 27, "fmpz_mod_poly_is_squarefre": 27, "fmpz_mod_poly_is_squarefree_f": 27, "fmpz_mod_poly_factor_equal_deg_prob": 27, "undetermin": [27, 49, 52, 58, 77], "fmpz_mod_poly_factor_equal_deg": 27, "fmpz_mod_poly_factor_distinct_deg": 27, "sizeof": [27, 40, 49, 52, 58, 65, 77], "fmpz_mod_poly_factor_distinct_deg_thread": 27, "fmpz_mod_poly_factor_squarefre": 27, "fmpz_mod_poly_factor_cantor_zassenhau": 27, "cantor": [27, 49, 52, 58, 77], "zassenhau": [27, 32, 49, 52, 58, 77], "fmpz_mod_poly_factor_kaltofen_shoup": 27, "propos": [27, 49, 52, 58, 77], "kaltofen": [27, 49, 52, 58, 77], "shoup": [27, 49, 52, 58, 72, 77], "1998": [27, 49, 52, 58, 77], "babi": [27, 49, 52, 58, 77], "giant": [27, 49, 52, 58, 77], "fmpz_mod_poly_factor_berlekamp": 27, "berlekamp": [27, 49, 52, 58, 77], "_fmpz_mod_poly_interval_poly_work": 27, "fmpz_mod_poly_interval_poly_arg_t": 27, "fmpz_mod_poly_root": 27, "with_multipl": [27, 40, 49, 52, 58], "pz": 27, "e_i": [27, 32, 40, 49, 52, 58], "fmpz_mod_poly_roots_factor": 27, "nz": 27, "_fmpz_mod_vec_set_fmpz_vec": 28, "fmpz_vec": [28, 60], "_fmpz_mod_vec_neg": 28, "_fmpz_mod_vec_add": 28, "_fmpz_mod_vec_sub": 28, "_fmpz_mod_vec_scalar_mul_fmpz_mod": 28, "_fmpz_mod_vec_scalar_addmul_fmpz_mod": 28, "_fmpz_vec_dot": [28, 35], "_fmpz_vec_dot_rev": 28, "_fmpz_mod_vec_mul": 28, "fmpz_mpoly_ctx_struct": 29, "fmpz_mpoly_ctx_t": [29, 30], "fmpz_mpoly_ctx_init": 29, "fmpz_mpoly_ctx_nvar": 29, "fmpz_mpoly_ctx_ord": 29, "fmpz_mpoly_ctx_clear": 29, "fmpz_mpoly_init": 29, "fmpz_mpoly_init2": 29, "fmpz_mpoly_init3": 29, "fmpz_mpoly_fit_length": 29, "fmpz_mpoly_fit_bit": 29, "fmpz_mpoly_realloc": 29, "fmpz_mpoly_clear": 29, "fmpz_mpoly_get_str_pretti": 29, "fmpz_mpoly_fprint_pretti": 29, "fmpz_mpoly_print_pretti": 29, "fmpz_mpoly_set_str_pretti": 29, "fmpz_mpoly_gen": 29, "fmpz_mpoly_is_gen": 29, "fmpz_mpoly_set": 29, "fmpz_mpoly_equ": 29, "fmpz_mpoly_swap": 29, "_fmpz_mpoly_fits_smal": 29, "fmpz_mpoly_max_bit": 29, "fmpz_mpoly_is_fmpz": 29, "fmpz_mpoly_get_fmpz": 29, "fmpz_mpoly_set_fmpz": 29, "fmpz_mpoly_set_ui": 29, "fmpz_mpoly_set_si": 29, "fmpz_mpoly_zero": 29, "fmpz_mpoly_on": 29, "fmpz_mpoly_equal_fmpz": 29, "fmpz_mpoly_equal_ui": 29, "fmpz_mpoly_equal_si": 29, "fmpz_mpoly_is_zero": 29, "fmpz_mpoly_is_on": 29, "fmpz_mpoly_degrees_fit_si": 29, "fmpz_mpoly_degrees_fmpz": 29, "fmpz_mpoly_degrees_si": 29, "fmpz_mpoly_degree_fmpz": 29, "fmpz_mpoly_degree_si": 29, "fmpz_mpoly_total_degree_fits_si": 29, "fmpz_mpoly_total_degree_fmpz": 29, "fmpz_mpoly_total_degree_si": 29, "fmpz_mpoly_used_var": 29, "fmpz_mpoly_get_coeff_fmpz_monomi": 29, "fmpz_mpoly_set_coeff_fmpz_monomi": 29, "fmpz_mpoly_get_coeff_fmpz_fmpz": 29, "fmpz_mpoly_get_coeff_ui_fmpz": 29, "fmpz_mpoly_get_coeff_si_fmpz": 29, "fmpz_mpoly_get_coeff_fmpz_ui": 29, "fmpz_mpoly_get_coeff_ui_ui": 29, "fmpz_mpoly_get_coeff_si_ui": 29, "fmpz_mpoly_set_coeff_fmpz_fmpz": 29, "fmpz_mpoly_set_coeff_ui_fmpz": 29, "fmpz_mpoly_set_coeff_si_fmpz": 29, "fmpz_mpoly_set_coeff_fmpz_ui": 29, "fmpz_mpoly_set_coeff_ui_ui": 29, "fmpz_mpoly_set_coeff_si_ui": 29, "fmpz_mpoly_get_coeff_vars_ui": 29, "fmpz_mpoly_cmp": 29, "fmpz_mpoly_term_coeff_ref": 29, "fmpz_mpoly_is_canon": 29, "fmpz_mpoly_length": 29, "fmpz_mpoly_res": 29, "fmpz_mpoly_get_term_coeff_fmpz": 29, "fmpz_mpoly_get_term_coeff_ui": 29, "fmpz_mpoly_get_term_coeff_si": 29, "fmpz_mpoly_set_term_coeff_fmpz": 29, "fmpz_mpoly_set_term_coeff_ui": 29, "fmpz_mpoly_set_term_coeff_si": 29, "fmpz_mpoly_term_exp_fits_si": 29, "fmpz_mpoly_term_exp_fits_ui": 29, "fmpz_mpoly_get_term_exp_fmpz": 29, "fmpz_mpoly_get_term_exp_ui": 29, "fmpz_mpoly_get_term_exp_si": 29, "fmpz_mpoly_get_term_var_exp_ui": 29, "fmpz_mpoly_get_term_var_exp_si": 29, "fmpz_mpoly_set_term_exp_fmpz": 29, "fmpz_mpoly_set_term_exp_ui": 29, "fmpz_mpoly_get_term": 29, "fmpz_mpoly_get_term_monomi": 29, "fmpz_mpoly_push_term_fmpz_fmpz": 29, "fmpz_mpoly_push_term_ui_fmpz": 29, "fmpz_mpoly_push_term_si_fmpz": 29, "fmpz_mpoly_push_term_fmpz_ui": 29, "fmpz_mpoly_push_term_ui_ui": 29, "fmpz_mpoly_push_term_si_ui": 29, "fmpz_mpoly_sort_term": 29, "fmpz_mpoly_combine_like_term": 29, "fmpz_mpoly_revers": 29, "fmpz_mpoly_randtest_bound": 29, "fmpz_mpoly_randtest_bit": 29, "fmpz_mpoly_randtest_": 29, "fmpz_mpoly_add_fmpz": 29, "fmpz_mpoly_add_ui": 29, "fmpz_mpoly_add_si": 29, "fmpz_mpoly_sub_fmpz": 29, "fmpz_mpoly_sub_ui": 29, "fmpz_mpoly_sub_si": 29, "fmpz_mpoly_add": 29, "fmpz_mpoly_sub": 29, "fmpz_mpoly_neg": 29, "fmpz_mpoly_scalar_mul_fmpz": 29, "fmpz_mpoly_scalar_mul_ui": 29, "fmpz_mpoly_scalar_mul_si": 29, "fmpz_mpoly_scalar_fmma": 29, "fmpz_mpoly_scalar_divexact_fmpz": 29, "fmpz_mpoly_scalar_divexact_ui": 29, "fmpz_mpoly_scalar_divexact_si": 29, "fmpz_mpoly_scalar_divides_fmpz": 29, "fmpz_mpoly_scalar_divides_ui": 29, "fmpz_mpoly_scalar_divides_si": 29, "fmpz_mpoly_deriv": 29, "fmpz_mpoly_integr": 29, "fmpz_mpoly_evaluate_all_fmpz": 29, "fmpz_mpoly_evaluate_one_fmpz": 29, "fmpz_mpoly_compose_fmpz_poli": 29, "fmpz_mpoly_compose_fmpz_mpoly_geobucket": 29, "fmpz_mpoly_compose_fmpz_mpoly_horn": 29, "fmpz_mpoly_compose_fmpz_mpoli": 29, "fmpz_mpoly_compose_fmpz_mpoly_gen": 29, "fmpz_mpoly_mul": 29, "fmpz_mpoly_mul_thread": 29, "thread_limit": [29, 90], "fmpz_mpoly_mul_johnson": 29, "fmpz_mpoly_mul_heap_thread": 29, "fmpz_mpoly_mul_arrai": 29, "fmpz_mpoly_mul_array_thread": 29, "fmpz_mpoly_mul_dens": 29, "fmpz_mpoly_pow_fmpz": 29, "fmpz_mpoly_pow_ui": 29, "fmpz_mpoly_divid": 29, "fmpz_mpoly_divrem": 29, "fmpz_mpoly_quasidivrem": 29, "fmpz_mpoly_div": 29, "fmpz_mpoly_quasidiv": 29, "fmpz_mpoly_divrem_id": 29, "fmpz_mpoly_quasidivrem_id": 29, "fmpz_mpoly_term_cont": 29, "fmpz_mpoly_content_var": 29, "fmpz_mpoly_gcd": 29, "fmpz_mpoly_gcd_cofactor": 29, "fmpz_mpoly_gcd_brown": 29, "fmpz_mpoly_gcd_hensel": 29, "fmpz_mpoly_gcd_subresult": 29, "fmpz_mpoly_gcd_zippel": 29, "fmpz_mpoly_gcd_zippel2": 29, "fmpz_mpoly_result": 29, "fmpz_mpoly_discrimin": 29, "fmpz_mpoly_sqrt_heap": 29, "reliabl": [29, 91], "fmpz_mpoly_sqrt": 29, "fmpz_mpoly_is_squar": 29, "fmpz_mpoly_univar_t": 29, "fmpz_mpoly_univar_init": 29, "fmpz_mpoly_univar_clear": 29, "fmpz_mpoly_univar_swap": 29, "fmpz_mpoly_to_univar": 29, "fmpz_mpoly_from_univar": 29, "fmpz_mpoly_univar_degree_fits_si": 29, "fmpz_mpoly_univar_length": 29, "fmpz_mpoly_univar_get_term_exp_si": 29, "fmpz_mpoly_univar_get_term_coeff": 29, "fmpz_mpoly_univar_swap_term_coeff": 29, "fmpz_mpoly_infl": 29, "fmpz_mpoly_defl": 29, "fmpz_mpoly_pow_fp": 29, "monagan": [29, 74, 88], "pearc": [29, 74], "_fmpz_mpoly_divides_arrai": 29, "exp1": [29, 71], "exp2": [29, 71], "poly3": [29, 74], "exp3": [29, 71], "tightli": 29, "encod": [29, 31, 48, 51, 57], "indirect": 29, "fmpz_mpoly_divides_arrai": 29, "fmpz_mpoly_div_monagan_pearc": 29, "_fmpz_mpoly_divides_monagan_pearc": 29, "michael": [29, 74, 88], "roman": [29, 74], "fmpz_mpoly_divides_monagan_pearc": 29, "fmpz_mpoly_divides_heap_thread": 29, "_fmpz_mpoly_div_monagan_pearc": 29, "polyq": [29, 74], "expq": 29, "allocq": 29, "exception": [29, 74], "_fmpz_mpoly_divrem_monagan_pearc": 29, "polyr": [29, 74], "expr": 29, "allocr": 29, "fmpz_mpoly_divrem_monagan_pearc": 29, "_fmpz_mpoly_divrem_arrai": 29, "fmpz_mpoly_divrem_arrai": 29, "fmpz_mpoly_quasidivrem_heap": 29, "_fmpz_mpoly_divrem_ideal_monagan_pearc": 29, "repack": 29, "q_i": [29, 31, 74], "q_ib_i": [29, 74], "fmpz_mpoly_divrem_ideal_monagan_pearc": 29, "fmpz_mpoly_factor_t": 30, "fmpz_mpoly_factor_init": 30, "fmpz_mpoly_factor_clear": 30, "fmpz_mpoly_factor_swap": 30, "fmpz_mpoly_factor_length": 30, "fmpz_mpoly_factor_get_constant_fmpz": 30, "fmpz_mpoly_factor_get_constant_fmpq": 30, "fmpz_mpoly_factor_get_bas": 30, "fmpz_mpoly_factor_swap_bas": 30, "fmpz_mpoly_factor_get_exp_si": 30, "fmpz_mpoly_factor_sort": 30, "fmpz_mpoly_factor_squarefre": 30, "fmpz_poly_init": 31, "fmpz_poly_clear": 31, "fmpz_poly_init2": 31, "fmpz_poly_realloc": 31, "fmpz_poly_fit_length": 31, "_fmpz_poly_normalis": 31, "_fmpz_poly_set_length": 31, "newlen": [31, 39, 48, 51, 57], "fmpz_poly_attach_trunc": 31, "fmpz_poly_attach_shift": 31, "fmpz_poly_length": 31, "fmpz_poly_degre": 31, "fmpz_poly_set": 31, "fmpz_poly_set_si": 31, "fmpz_poly_set_ui": 31, "fmpz_poly_set_fmpz": 31, "fmpz_poly_set_mpz": 31, "_fmpz_poly_set_str": 31, "fmpz_poly_set_str": 31, "_fmpz_poly_get_str": 31, "plain": [31, 36, 37, 39, 43, 48, 51, 54, 57], "fmpz_poly_get_str": 31, "_fmpz_poly_get_str_pretti": 31, "fmpz_poly_get_str_pretti": [31, 34], "fmpz_poly_zero": 31, "fmpz_poly_on": 31, "fmpz_poly_zero_coeff": 31, "fmpz_poly_swap": 31, "_fmpz_poly_revers": 31, "overlap": [31, 76], "fmpz_poly_revers": 31, "fmpz_poly_trunc": 31, "fmpz_poly_set_trunc": 31, "fmpz_poly_randtest": [31, 33], "fmpz_poly_randtest_unsign": [31, 33], "fmpz_poly_randtest_not_zero": 31, "fmpz_poly_randtest_no_real_root": 31, "fmpz_poly_get_coeff_fmpz": 31, "fmpz_poly_get_coeff_si": 31, "fmpz_poly_get_coeff_ui": 31, "fmpz_poly_get_coeff_ptr": 31, "access": [31, 38, 42, 45, 56, 73, 80, 81, 85], "fmpz_poly_lead": 31, "fmpz_poly_set_coeff_fmpz": 31, "fmpz_poly_set_coeff_si": 31, "fmpz_poly_set_coeff_ui": 31, "fmpz_poly_equ": 31, "fmpz_poly_equal_trunc": 31, "fmpz_poly_is_zero": 31, "fmpz_poly_is_on": 31, "fmpz_poly_is_unit": 31, "fmpz_poly_is_gen": 31, "_fmpz_poly_add": 31, "fmpz_poly_add": [31, 61], "fmpz_poly_add_seri": 31, "_fmpz_poly_sub": 31, "fmpz_poly_sub": 31, "fmpz_poly_sub_seri": 31, "fmpz_poly_neg": 31, "fmpz_poly_scalar_ab": 31, "fmpz_poly_scalar_mul_fmpz": 31, "fmpz_poly_scalar_mul_mpz": 31, "fmpz_poly_scalar_mul_si": 31, "fmpz_poly_scalar_mul_ui": 31, "fmpz_poly_scalar_mul_2exp": 31, "fmpz_poly_scalar_addmul_si": 31, "fmpz_poly_scalar_addmul_ui": 31, "fmpz_poly_scalar_addmul_fmpz": 31, "fmpz_poly_scalar_submul_fmpz": 31, "fmpz_poly_scalar_fdiv_fmpz": 31, "fmpz_poly_scalar_fdiv_mpz": 31, "fmpz_poly_scalar_fdiv_si": 31, "fmpz_poly_scalar_fdiv_ui": 31, "fmpz_poly_scalar_fdiv_2exp": 31, "fmpz_poly_scalar_tdiv_fmpz": 31, "fmpz_poly_scalar_tdiv_si": 31, "fmpz_poly_scalar_tdiv_ui": 31, "fmpz_poly_scalar_tdiv_2exp": 31, "fmpz_poly_scalar_divexact_fmpz": 31, "fmpz_poly_scalar_divexact_mpz": 31, "id": [31, 35], "fmpz_poly_scalar_divexact_si": 31, "fmpz_poly_scalar_divexact_ui": 31, "fmpz_poly_scalar_mod_fmpz": 31, "fmpz_poly_scalar_smod_fmpz": 31, "_fmpz_poly_remove_content_2exp": 31, "_fmpz_poly_scale_2exp": 31, "kd": 31, "_fmpz_poly_bit_pack": 31, "bit_siz": [31, 36, 43, 54, 76], "bitfield": [31, 36, 43, 54, 76], "_fmpz_poly_bit_unpack": 31, "unpack": [31, 36, 43, 54], "_fmpz_poly_bit_unpack_unsign": 31, "mp_srcptr_t": 31, "fmpz_poly_bit_pack": 31, "fmpz_poly_bit_unpack": 31, "fmpz_poly_bit_unpack_unsign": 31, "_fmpz_poly_mul_class": 31, "fmpz_poly_mul_class": 31, "schoolbook": [31, 48, 51, 57], "_fmpz_poly_mullow_class": 31, "fmpz_poly_mullow_class": 31, "_fmpz_poly_mulhigh_class": 31, "fmpz_poly_mulhigh_class": 31, "_fmpz_poly_mulmid_class": 31, "middl": 31, "fmpz_poly_mulmid_class": 31, "_fmpz_poly_mul_karatsuba": 31, "fmpz_poly_mul_karatsuba": 31, "_fmpz_poly_mullow_karatsuba_n": 31, "fmpz_poly_mullow_karatsuba_n": 31, "_fmpz_poly_mulhigh_karatsuba_n": 31, "fmpz_poly_mulhigh_karatsuba_n": 31, "_fmpz_poly_mul_k": 31, "fmpz_poly_mul_k": 31, "_fmpz_poly_mullow_k": 31, "fmpz_poly_mullow_k": 31, "_fmpz_poly_mul_ss": 31, "input1": 31, "length1": 31, "input2": 31, "length2": 31, "fmpz_poly_mul_ss": 31, "sch": 31, "nhage": 31, "_fmpz_poly_mullow_ss": 31, "fmpz_poly_mullow_ss": 31, "_fmpz_poly_mul": 31, "fmpz_poly_mul": 31, "_fmpz_poly_mullow": 31, "fmpz_poly_mullow": 31, "fmpz_poly_mulhigh_n": 31, "_fmpz_poly_mulhigh": 31, "fmpz_poly_mul_ss_precache_init": 31, "fmpz_poly_mul_precache_t": 31, "bits1": [31, 34, 71], "fmpz_poly_max_bit": 31, "recomput": 31, "schoenhag": [31, 60, 76], "fmpz_poly_mul_precache_clear": 31, "_fmpz_poly_mullow_ss_precach": 31, "fmpz_poly_mullow_ss_precach": 31, "fmpz_poly_mul_ss_precach": 31, "fmpz_poly_precache_t": 31, "_fmpz_poly_sqr_k": 31, "fmpz_poly_sqr_k": 31, "_fmpz_poly_sqr_karatsuba": 31, "fmpz_poly_sqr_karatsuba": 31, "karatsuba": 31, "_fmpz_poly_sqr_class": 31, "fmpz_poly_sqr_class": 31, "_fmpz_poly_sqr": 31, "fmpz_poly_sqr": 31, "_fmpz_poly_sqrlow_k": 31, "fmpz_poly_sqrlow_k": 31, "_fmpz_poly_sqrlow_karatsuba_n": 31, "oad": 31, "fmpz_poly_sqrlow_karatsuba_n": 31, "_fmpz_poly_sqrlow_class": 31, "fmpz_poly_sqrlow_class": 31, "_fmpz_poly_sqrlow": 31, "fmpz_poly_sqrlow": 31, "_fmpz_poly_pow_multinomi": 31, "ell": [31, 86], "fmpz_poly_pow_multinomi": 31, "formal": [31, 63, 76, 88], "statement": 31, "p_0": [31, 91], "p_1": [31, 91], "p_m": 31, "knuth": [31, 83, 87], "art": 31, "vol": [31, 88], "seminumer": 31, "edit": 31, "massachusett": 31, "addison": 31, "weslei": 31, "1997": [31, 88], "zeilberg": 31, "analog": 31, "journal": [31, 88], "1995": 31, "57": 31, "60": 31, "_fmpz_poly_pow_binomi": 31, "fmpz_poly_pow_binomi": 31, "_fmpz_poly_pow_addchain": 31, "star": 31, "a_j": 31, "fmpz_poly_pow_addchain": 31, "148": 31, "_fmpz_poly_pow_binexp": 31, "461": 31, "knu1997": 31, "fmpz_poly_pow_binexp": 31, "_fmpz_poly_pow_smal": 31, "_fmpz_poly_pow": 31, "fmpz_poly_pow": 31, "_fmpz_poly_pow_trunc": 31, "fmpz_poly_pow_trunc": 31, "_fmpz_poly_shift_left": 31, "fmpz_poly_shift_left": 31, "_fmpz_poly_shift_right": 31, "fmpz_poly_shift_right": 31, "fmpz_poly_max_limb": 31, "fmpz_poly_height": 31, "_fmpz_poly_2norm": 31, "fmpz_poly_2norm": 31, "_fmpz_poly_2norm_normalised_bit": 31, "landau": [31, 88], "mignott": 31, "_fmpz_poly_gcd_subresult": 31, "fmpz_poly_gcd_subresult": 31, "subresult": 31, "_fmpz_poly_gcd_heurist": 31, "fmpz_poly_gcd_heurist": 31, "gcdheu": 31, "_fmpz_poly_gcd_modular": 31, "fmpz_poly_gcd_modular": 31, "_fmpz_poly_gcd": 31, "fmpz_poly_gcd": 31, "_fmpz_poly_xgcd_modular": 31, "fmpz_poly_xgcd_modular": 31, "_fmpz_poly_xgcd": 31, "fmpz_poly_xgcd": 31, "_fmpz_poly_lcm": 31, "fmpz_poly_lcm": 31, "lcm": 31, "_fmpz_poly_resultant_modular": 31, "fmpz_poly_resultant_modular": 31, "col1971": [31, 88], "fmpz_poly_resultant_modular_div": 31, "slight": 31, "bypass": 31, "_fmpz_poly_resultant_euclidean": 31, "fmpz_poly_resultant_euclidean": 31, "_fmpz_poly_result": 31, "fmpz_poly_result": 31, "_fmpz_poly_discrimin": 31, "fmpz_poly_discrimin": 31, "_fmpz_poly_cont": 31, "fmpz_poly_cont": 31, "_fmpz_poly_primitive_part": 31, "fmpz_poly_primitive_part": 31, "_fmpz_poly_is_squarefre": 31, "fmpz_poly_is_squarefre": 31, "_fmpz_poly_divrem_basecas": 31, "inexact": 31, "fmpz_poly_divrem_basecas": 31, "_fmpz_poly_divrem_divconquer_recurs": 31, "_fmpz_poly_divrem_divconqu": 31, "fmpz_poly_divrem_divconqu": 31, "_fmpz_poly_divrem": 31, "_fmpz_poly_div_basecas": 31, "fmpz_poly_div_basecas": 31, "_fmpz_poly_divremlow_divconquer_recurs": 31, "_fmpz_poly_div_divconquer_recurs": 31, "mul2000": [31, 88], "_fmpz_poly_div_divconqu": 31, "fmpz_poly_div_divconqu": 31, "_fmpz_poly_div": 31, "fmpz_poly_div": 31, "_fmpz_poly_rem_basecas": 31, "fmpz_poly_rem_basecas": 31, "_fmpz_poly_rem": 31, "fmpz_poly_rem": 31, "_fmpz_poly_div_root": 31, "fmpz_poly_div_root": 31, "_fmpz_poly_preinvert": 31, "fmpz_poly_preinvert": 31, "_fmpz_poly_div_preinv": 31, "fmpz_poly_div_preinv": 31, "_fmpz_poly_divrem_preinv": 31, "fmpz_poly_divrem_preinv": 31, "_fmpz_poly_powers_precomput": 31, "fmpz_poly_powers_precomput": 31, "fmpz_poly_powers_precomp_t": 31, "_fmpz_poly_powers_clear": 31, "fmpz_poly_powers_clear": 31, "_fmpz_poly_rem_powers_precomp": 31, "fmpz_poly_rem_powers_precomp": 31, "_fmpz_poly_divid": 31, "unoptimis": [31, 39, 48, 51, 57], "fmpz_poly_divid": 31, "fmpz_poly_remov": 31, "fmpz_poly_divlow_smodp": 31, "bespok": 31, "fmpz_poly_divhigh_smodp": 31, "_fmpz_poly_inv_series_basecas": 31, "qlen": [31, 76], "lenq": 31, "fmpz_poly_inv_series_basecas": 31, "_fmpz_poly_inv_series_newton": 31, "fmpz_poly_inv_series_newton": 31, "_fmpz_poly_inv_seri": 31, "fmpz_poly_inv_seri": 31, "_fmpz_poly_div_series_basecas": 31, "_fmpz_poly_div_series_divconqu": 31, "_fmpz_poly_div_seri": 31, "fmpz_poly_div_series_basecas": 31, "fmpz_poly_div_series_divconqu": 31, "fmpz_poly_div_seri": 31, "_fmpz_poly_pseudo_divrem_basecas": 31, "simul": 31, "But": [31, 63, 90, 91], "fmpz_poly_pseudo_divrem_basecas": 31, "_fmpz_poly_pseudo_divrem_divconqu": 31, "fmpz_poly_pseudo_divrem_divconqu": 31, "_fmpz_poly_pseudo_divrem_cohen": 31, "fmpz_poly_pseudo_divrem_cohen": 31, "fmpz_poly_pseudo_divrem": 31, "_fmpz_poly_pseudo_rem_cohen": 31, "fmpz_poly_pseudo_rem_cohen": 31, "fmpz_poly_pseudo_rem": 31, "_fmpz_poly_pseudo_divrem": 31, "_fmpz_poly_pseudo_div": 31, "fmpz_poly_pseudo_div": 31, "_fmpz_poly_pseudo_rem": 31, "_fmpz_poly_deriv": 31, "fmpz_poly_deriv": 31, "_fmpz_poly_nth_deriv": 31, "fmpz_poly_nth_deriv": 31, "_fmpz_poly_evaluate_divconquer_fmpz": 31, "fmpz_poly_evaluate_divconquer_fmpz": 31, "_fmpz_poly_evaluate_horner_fmpz": 31, "fmpz_poly_evaluate_horner_fmpz": 31, "_fmpz_poly_evaluate_fmpz": 31, "fmpz_poly_evaluate_fmpz": 31, "_fmpz_poly_evaluate_divconquer_fmpq": 31, "fmpz_poly_evaluate_divconquer_fmpq": 31, "_fmpz_poly_evaluate_horner_fmpq": 31, "fmpz_poly_evaluate_horner_fmpq": 31, "_fmpz_poly_evaluate_fmpq": 31, "fmpz_poly_evaluate_fmpq": 31, "fmpz_poly_evaluate_mpq": 31, "_fmpz_poly_evaluate_mod": 31, "ninv": [31, 76, 91], "n_preinvert_limb": [31, 76, 91], "fmpz_poly_evaluate_mod": 31, "fmpz_poly_evaluate_fmpz_vec": 31, "_fmpz_poly_evaluate_horner_d": 31, "quick": 31, "dirti": 31, "fmpz_poly_evaluate_horner_d": 31, "_fmpz_poly_evaluate_horner_d_2exp": 31, "fmpz_poly_evaluate_horner_d_2exp": 31, "_fmpz_poly_evaluate_horner_d_2exp2": 31, "dexp": 31, "_fmpz_poly_monomial_to_newton": 31, "_fmpz_poly_newton_to_monomi": 31, "fmpz_poly_interpolate_fmpz_vec": 31, "y_u": 31, "flint_inexact": 31, "thrown": [31, 91], "_fmpz_poly_compose_horn": 31, "fmpz_poly_compose_horn": 31, "_fmpz_poly_compose_divconqu": 31, "fmpz_poly_compose_divconqu": 31, "_fmpz_poly_compos": 31, "fmpz_poly_compos": 31, "fmpz_poly_infl": 31, "fmpz_poly_defl": 31, "_fmpz_poly_taylor_shift_horn": 31, "compos": [31, 63, 76], "fmpz_poly_taylor_shift_horn": 31, "_fmpz_poly_taylor_shift_divconqu": 31, "fmpz_poly_taylor_shift_divconqu": 31, "_fmpz_poly_taylor_shift_multi_mod": 31, "fmpz_poly_taylor_shift_multi_mod": [31, 90], "_fmpz_poly_taylor_shift": 31, "fmpz_poly_taylor_shift": 31, "_fmpz_poly_compose_series_horn": 31, "fmpz_poly_compose_series_horn": 31, "_fmpz_poly_compose_series_brent_kung": 31, "fmpz_poly_compose_series_brent_kung": 31, "_fmpz_poly_compose_seri": 31, "fmpz_poly_compose_seri": 31, "_fmpz_poly_revert_series_lagrang": 31, "q_0": [31, 63, 76], "q_1": [31, 63, 76], "fmpz_poly_revert_series_lagrang": 31, "_fmpz_poly_revert_series_lagrange_fast": 31, "fmpz_poly_revert_series_lagrange_fast": 31, "_fmpz_poly_revert_series_newton": 31, "fmpz_poly_revert_series_newton": 31, "_fmpz_poly_revert_seri": 31, "fmpz_poly_revert_seri": 31, "_fmpz_poly_sqrtrem_class": 31, "fmpz_poly_sqrtrem_class": 31, "_fmpz_poly_sqrtrem_divconqu": 31, "fmpz_poly_sqrtrem_divconqu": 31, "_fmpz_poly_sqrt_class": 31, "fmpz_poly_sqrt_class": 31, "_fmpz_poly_sqrt_k": 31, "succeed": 31, "fmpz_poly_sqrt_k": 31, "_fmpz_poly_sqrt_divconqu": 31, "fmpz_poly_sqrt_divconqu": 31, "_fmpz_poly_sqrt": 31, "fmpz_poly_sqrt": 31, "_fmpz_poly_sqrt_seri": 31, "valuat": [31, 80, 81, 82, 86], "fmpz_poly_sqrt_seri": 31, "_fmpz_poly_power_sums_na": 31, "fmpz_poly_power_sums_na": 31, "fmpz_poly_power_sum": 31, "_fmpz_poly_power_sums_to_poli": 31, "fmpz_poly_power_sums_to_poli": 31, "_fmpz_poly_signatur": 31, "fmpz_poly_signatur": 31, "fmpz_poly_hensel_build_tre": 31, "nmod_poly_factor_t": [31, 77], "2r": 31, "five": 31, "leaf": 31, "node": [31, 71], "align": [31, 73], "spot": 31, "plai": 31, "v_2": [31, 80, 82], "v_4": 31, "w_0": 31, "w_2": 31, "w_4": 31, "w_1": 31, "fmpz_poly_hensel_lift": 31, "gh": 31, "ag": 31, "bh": 31, "fmpz_poly_hensel_lift_without_invers": 31, "gout": 31, "hout": 31, "fmpz_poly_hensel_lift_only_invers": 31, "aout": 31, "bout": 31, "fmpz_poly_hensel_lift_tree_recurs": 31, "p0": 31, "restart": 31, "fmpz_poly_hensel_lift_tre": 31, "e0": 31, "e1": [31, 71], "aim": [31, 82], "notat": [31, 34], "_fmpz_poly_hensel_start_lift": 31, "fmpz_poly_factor_t": [31, 32], "lifted_fac": [31, 32], "local_fac": 31, "_fmpz_poly_hensel_continue_lift": 31, "prev_exp": 31, "resum": 31, "curr": 31, "fmpz_poly_hensel_lift_onc": 31, "aid": 31, "_pretti": [31, 34], "white": [31, 34], "prepend": 31, "caret": 31, "omit": 31, "_fmpz_poly_print": 31, "fmpz_poly_print": 31, "_fmpz_poly_print_pretti": 31, "fmpz_poly_print_pretti": 31, "_fmpz_poly_fprint": 31, "fmpz_poly_fprint": 31, "_fmpz_poly_fprint_pretti": 31, "fmpz_poly_fprint_pretti": 31, "fmpz_poly_read": 31, "fmpz_poly_read_pretti": 31, "fmpz_poly_fread_pretti": 31, "fmpz_poly_fread": 31, "malform": 31, "fmpz_poly_get_nmod_poli": 31, "fmpz_poly_set_nmod_poli": 31, "fmpz_poly_set_nmod_poly_unsign": 31, "_fmpz_poly_crt_ui_precomp": 31, "m2inv": 31, "m1m2": 31, "m_1m_2": 31, "_fmpz_poly_crt_ui": 31, "fmpz_poly_crt_ui": 31, "_fmpz_poly_product_roots_fmpz_vec": 31, "fmpz_poly_product_roots_fmpz_vec": 31, "_fmpz_poly_product_roots_fmpq_vec": 31, "q_": 31, "fmpz_poly_product_roots_fmpq_vec": 31, "_fmpz_poly_bound_root": 31, "fmpz_poly_bound_root": 31, "fujiwara": 31, "2a_n": 31, "_fmpz_poly_num_real_roots_sturm": 31, "n_neg": 31, "n_po": 31, "sturm": 31, "fmpz_poly_num_real_roots_sturm": 31, "_fmpz_poly_num_real_root": 31, "fmpz_poly_num_real_root": 31, "_fmpz_poly_cyclotom": 31, "num_factor": 31, "cyclotom": [31, 88], "phi_n": 31, "palindrom": 31, "arnoldmonagan2011": [31, 88], "risk": 31, "10163195": 31, "27": 31, "safe": [31, 64], "169828113": 31, "phi_m": 31, "fmpz_poly_cyclotom": 31, "omega": 31, "phi_q": 31, "_fmpz_poly_is_cyclotom": 31, "fmpz_poly_is_cyclotom": 31, "_fmpz_poly_cos_minpoli": 31, "fmpz_poly_cos_minpoli": 31, "sin": [31, 76], "varphi": 31, "_fmpz_poly_swinnerton_dy": 31, "fmpz_poly_swinnerton_dy": 31, "swinnerton": 31, "dyer": 31, "_fmpz_poly_chebyshev_t": 31, "fmpz_poly_chebyshev_t": 31, "chebyshev": [31, 91], "t_n": 31, "_fmpz_poly_chebyshev_u": 31, "fmpz_poly_chebyshev_u": 31, "_fmpz_poly_legendre_pt": 31, "tild": 31, "fmpz_poly_legendre_pt": 31, "_fmpz_poly_hermite_h": 31, "hermit": [31, 88], "2nh_": 31, "fmpz_poly_hermite_h": 31, "he_n": 31, "tfrac": 31, "_fmpz_poly_fibonacci": 31, "fmpz_poly_fibonacci": 31, "Not": 31, "confus": 31, "arith_eulerian_polynomi": 31, "_fmpz_poly_eta_qexp": 31, "fmpz_poly_eta_qexp": 31, "dedekind": 31, "_fmpz_poly_theta_qexp": 31, "fmpz_poly_theta_qexp": 31, "vartheta": 31, "fmpz_poly_cld_bound": 31, "fg": 31, "fmpz_poly_factor_struct": 32, "fmpz_poly_factor_init": 32, "fmpz_poly_factor_init2": 32, "fmpz_poly_factor_realloc": 32, "fmpz_poly_factor_fit_length": 32, "fmpz_poly_factor_clear": 32, "occupi": 32, "fmpz_poly_factor_set": 32, "fmpz_poly_factor_insert": 32, "fmpz_poly_factor_concat": 32, "fmpz_poly_factor_print": 32, "fmpz_poly_factor_squarefre": 32, "freshli": 32, "themselv": [32, 90], "g_i": 32, "fmpz_poly_factor_zassenhaus_recombin": 32, "final_fac": 32, "brute": 32, "forc": 32, "impact": 32, "_fmpz_poly_factor_zassenhau": 32, "use_van_hoeij": 32, "hensel": [32, 80], "gradual": 32, "feed": 32, "_fmpz_poly_factor_quadrat": 32, "_fmpz_poly_factor_cub": 32, "cubic": 32, "factorz": 32, "fmpz_poly_mat_struct": 33, "fmpz_poly_mat_t": 33, "fmpz_poly_mat_init": 33, "fmpz_poly_mat_init_set": 33, "fmpz_poly_mat_clear": 33, "fmpz_poly_mat_nrow": 33, "fmpz_poly_mat_ncol": 33, "fmpz_poly_mat_entri": 33, "fmpz_poly_mat_set": 33, "fmpz_poly_mat_swap": 33, "fmpz_poly_mat_swap_entrywis": 33, "fmpz_poly_mat_print": 33, "fmpz_poly_mat_randtest": 33, "fmpz_poly_mat_randtest_unsign": 33, "fmpz_poly_mat_randtest_spars": 33, "densiti": [33, 78], "fmpz_poly_mat_zero": 33, "fmpz_poly_mat_on": 33, "fmpz_poly_mat_equ": 33, "fmpz_poly_mat_is_zero": 33, "fmpz_poly_mat_is_on": 33, "fmpz_poly_mat_is_empti": 33, "fmpz_poly_mat_is_squar": 33, "fmpz_poly_mat_max_bit": 33, "fmpz_poly_mat_max_length": 33, "fmpz_poly_mat_transpos": 33, "fmpz_poly_mat_evaluate_fmpz": 33, "fmpz_poly_mat_scalar_mul_fmpz_poli": 33, "fmpz_poly_mat_scalar_mul_fmpz": 33, "fmpz_poly_mat_add": 33, "fmpz_poly_mat_sub": 33, "fmpz_poly_mat_neg": 33, "fmpz_poly_mat_mul": 33, "fmpz_poly_mat_mul_class": 33, "fmpz_poly_mat_mul_k": 33, "fmpz_poly_mat_mullow": 33, "fmpz_poly_mat_sqr": 33, "fmpz_poly_mat_sqr_class": 33, "fmpz_poly_mat_sqr_k": 33, "fmpz_poly_mat_sqrlow": 33, "fmpz_poly_mat_pow": 33, "fmpz_poly_mat_pow_trunc": 33, "fmpz_poly_mat_prod": 33, "fmpz_poly_mat_find_pivot_ani": 33, "fmpz_poly_mat_find_pivot_parti": 33, "fmpz_poly_mat_fflu": 33, "gaussian": [33, 42, 45, 56, 73, 78], "decomposit": [33, 78], "fmpz_poly_mat_rref": 33, "echelon": [33, 78], "fmpz_poly_mat_trac": 33, "fmpz_poly_mat_det": 33, "interpol": [33, 78], "fmpz_poly_mat_det_fflu": 33, "fmpz_poly_mat_det_interpol": 33, "fmpz_poly_mat_rank": 33, "fmpz_poly_mat_inv": 33, "adjug": [33, 78], "fmpz_poly_mat_nullspac": 33, "fmpz_poly_mat_solv": 33, "fmpz_poly_mat_solve_fflu": 33, "fmpz_poly_mat_solve_fflu_precomp": 33, "fmpz_poly_q_struct": 34, "fmpz_poly_q_t": 34, "enforc": 34, "fmpz_poly_q_init": 34, "fmpz_poly_q_clear": 34, "fmpz_poly_q_numref": 34, "fmpz_poly_q_denref": 34, "fmpz_poly_q_canonicalis": 34, "bring": [34, 80, 82, 90], "fmpz_poly_q_is_canon": 34, "fmpz_poly_q_randtest": 34, "fmpz_poly_q_randtest_not_zero": 34, "fmpz_poly_q_set": 34, "fmpz_poly_q_set_si": 34, "fmpz_poly_q_swap": 34, "fmpz_poly_q_zero": 34, "fmpz_poly_q_on": 34, "fmpz_poly_q_neg": 34, "fmpz_poly_q_inv": 34, "fmpz_poly_q_is_zero": 34, "fmpz_poly_q_is_on": 34, "fmpz_poly_q_equ": 34, "fmpz_poly_q_add": 34, "fmpz_poly_q_sub": 34, "fmpz_poly_q_addmul": 34, "fmpz_poly_q_submul": 34, "fmpz_poly_q_scalar_mul_si": 34, "fmpz_poly_q_scalar_mul_mpz": 34, "fmpz_poly_q_scalar_mul_mpq": 34, "fmpz_poly_q_scalar_div_si": 34, "fmpz_poly_q_scalar_div_mpz": 34, "fmpz_poly_q_scalar_div_mpq": 34, "fmpz_poly_q_mul": 34, "fmpz_poly_q_div": 34, "fmpz_poly_q_pow": 34, "fmpz_poly_q_deriv": 34, "fmpz_poly_q_evalu": 34, "recal": [34, 36, 37, 43, 48, 51, 54, 57, 86], "parenthes": 34, "parser": 34, "fmpz_poly_q_set_str": 34, "fmpz_poly_q_get_str": 34, "fmpz_poly_q_get_str_pretti": 34, "fmpz_poly_q_print": 34, "fmpz_poly_q_print_pretti": 34, "_fmpz_vec_clear": 35, "_fmpz_vec_randtest": 35, "_fmpz_vec_randtest_unsign": 35, "_fmpz_vec_max_bit": 35, "_fmpz_vec_max_bits_ref": 35, "_fmpz_vec_sum_max_bit": 35, "sumab": 35, "maxab": 35, "_fmpz_vec_max_limb": 35, "_fmpz_vec_height": 35, "_fmpz_vec_height_index": 35, "_fmpz_vec_fread": 35, "_fmpz_vec_fprint": 35, "_fmpz_vec_read": 35, "_fmpz_vec_print": 35, "_fmpz_vec_get_nmod_vec": 35, "_fmpz_vec_set_nmod_vec": 35, "_fmpz_vec_get_fft": 35, "coeffs_f": 35, "coeffs_m": 35, "_fmpz_vec_set_fft": 35, "fermat": [35, 91], "_fmpz_vec_get_d_vec_2exp": 35, "appv": 35, "export": 35, "_fmpz_vec_get_mpf_vec": 35, "_fmpz_vec_set": 35, "_fmpz_vec_swap": 35, "_fmpz_vec_zero": 35, "_fmpz_vec_neg": 35, "_fmpz_vec_scalar_ab": 35, "_fmpz_vec_equ": 35, "_fmpz_vec_is_zero": 35, "_fmpz_vec_max": 35, "vec3": 35, "_fmpz_vec_max_inplac": 35, "_fmpz_vec_sort": 35, "_fmpz_vec_add": 35, "_fmpz_vec_sub": 35, "_fmpz_vec_scalar_mul_fmpz": 35, "_fmpz_vec_scalar_mul_si": 35, "_fmpz_vec_scalar_mul_ui": 35, "_fmpz_vec_scalar_mul_2exp": 35, "_fmpz_vec_scalar_divexact_fmpz": 35, "_fmpz_vec_scalar_divexact_si": 35, "_fmpz_vec_scalar_divexact_ui": 35, "_fmpz_vec_scalar_fdiv_q_fmpz": 35, "_fmpz_vec_scalar_fdiv_q_si": 35, "_fmpz_vec_scalar_fdiv_q_ui": 35, "_fmpz_vec_scalar_fdiv_q_2exp": 35, "_fmpz_vec_scalar_fdiv_r_2exp": 35, "_fmpz_vec_scalar_tdiv_q_fmpz": 35, "_fmpz_vec_scalar_tdiv_q_si": 35, "_fmpz_vec_scalar_tdiv_q_ui": 35, "_fmpz_vec_scalar_tdiv_q_2exp": 35, "_fmpz_vec_scalar_addmul_si": 35, "_fmpz_vec_scalar_addmul_ui": 35, "_fmpz_vec_scalar_addmul_fmpz": 35, "_fmpz_vec_scalar_addmul_si_2exp": 35, "_fmpz_vec_scalar_submul_fmpz": 35, "_fmpz_vec_scalar_submul_si": 35, "_fmpz_vec_scalar_submul_si_2exp": 35, "_fmpz_vec_sum": 35, "_fmpz_vec_prod": 35, "_fmpz_vec_scalar_mod_fmpz": 35, "_fmpz_vec_scalar_smod_fmpz": 35, "_fmpz_vec_cont": 35, "_fmpz_vec_content_chain": 35, "_fmpz_vec_lcm": 35, "_fmpz_vec_dot_ptr": 35, "offset": [35, 71, 79, 87], "fq_ctx_struct": 36, "fq_ctx_t": [36, 41, 42, 45, 48, 51, 52, 53, 57], "fq_struct": [36, 42, 51, 52, 53], "fq_t": [36, 41, 42, 51, 52, 53], "fq_ctx_init": 36, "conwai": [36, 37, 43, 54, 86], "_fq_ctx_init_conwai": 36, "databas": [36, 43, 54], "fq_ctx_init_conwai": 36, "fq_ctx_init_modulu": 36, "ctxp": 36, "fq_ctx_clear": 36, "fq_ctx_modulu": 36, "fq_ctx_degre": 36, "log_": [36, 37, 43, 54], "fq_ctx_prime": 36, "fq_ctx_order": 36, "fq_ctx_fprint": 36, "fq_ctx_print": 36, "fq_ctx_randtest": 36, "fq_ctx_randtest_reduc": 36, "fq_init": 36, "fq_init2": 36, "fq_clear": 36, "_fq_sparse_reduc": 36, "_fq_dense_reduc": 36, "_fq_reduc": 36, "sparse_modulu": [36, 43, 54], "fq_reduc": 36, "fq_add": 36, "fq_sub": 36, "fq_sub_on": 36, "fq_neg": 36, "fq_mul": 36, "fq_mul_fmpz": 36, "fq_mul_si": 36, "fq_mul_ui": 36, "fq_sqr": 36, "fq_div": 36, "_fq_inv": 36, "fq_inv": 36, "fq_gcdinv": 36, "_fq_pow": 36, "2d": [36, 43, 54, 86], "fq_pow": 36, "fq_pow_ui": 36, "fq_sqrt": 36, "fq_pth_root": 36, "fq_is_squar": 36, "fq_fprint_pretti": 36, "fq_print_pretti": 36, "fq_fprint": 36, "fq_print": 36, "fq_get_str": 36, "fq_get_str_pretti": 36, "fq_randtest": 36, "_q": [36, 37, 39, 43, 46, 48, 51, 54, 57, 86], "fq_randtest_not_zero": 36, "fq_randtest_dens": 36, "fq_rand": 36, "fq_rand_not_zero": 36, "fq_set": 36, "fq_set_si": 36, "fq_set_ui": 36, "fq_set_fmpz": 36, "fq_swap": 36, "fq_zero": 36, "fq_one": 36, "fq_gen": 36, "fq_get_fmpz": 36, "fq_get_fmpz_poli": 36, "fq_get_fmpz_mod_poli": 36, "fq_set_fmpz_poli": 36, "fq_set_fmpz_mod_poli": 36, "fq_get_fmpz_mod_mat": 36, "fq_set_fmpz_mod_mat": 36, "fq_is_zero": 36, "fq_is_on": 36, "fq_equal": 36, "fq_is_invert": 36, "fq_is_invertible_f": 36, "_fq_trace": 36, "fq_trace": 36, "gal": [36, 37, 43, 54, 86], "_fq_norm": 36, "norm": [36, 37, 43, 54, 70, 72, 86, 91], "fq_norm": 36, "dim": [36, 37, 43, 54], "_fq_frobeniu": 36, "fq_frobeniu": 36, "homomorph": [36, 37, 43, 54, 86], "galoi": [36, 37, 43, 54, 86], "langl": [36, 37, 43, 54, 86], "rangl": [36, 37, 43, 54, 86], "isomorph": [36, 37, 43, 54, 60, 86], "mapsto": [36, 37, 43, 54, 86], "fq_multiplicative_ord": 36, "fq_is_primit": 36, "fq_bit_pack": 36, "fq_bit_unpack": 36, "fq_default_default_ctx_t": 37, "fq_default_default_t": 37, "fq_default_ctx_init": 37, "fq_default_ctx_t": [37, 38, 39, 40], "fq_default_ctx_init_typ": 37, "fq_zech": [37, 59, 60], "fq_nmod": [37, 50, 60], "fq": [37, 38, 42, 45, 53, 56, 60], "fq_default_ctx_init_modulu": 37, "mod_ctx": 37, "characterist": [37, 60, 76], "fq_default_ctx_init_modulus_typ": 37, "fq_default_ctx_init_modulus_nmod": 37, "fq_default_ctx_init_modulus_nmod_typ": 37, "fq_default_ctx_clear": 37, "fq_default_ctx_typ": 37, "fq_mod": 37, "fq_default_ctx_degre": 37, "fq_default_ctx_prim": 37, "fq_default_ctx_ord": 37, "fq_default_ctx_modulu": 37, "fq_default_ctx_fprint": 37, "fq_default_ctx_print": 37, "fq_default_ctx_randtest": 37, "fq_default_get_coeff_fmpz": 37, "fq_default_t": [37, 38, 39, 40], "fq_default_init": 37, "fq_default_init2": 37, "fq_default_clear": 37, "fq_default_is_invert": 37, "fq_default_add": 37, "fq_default_sub": 37, "fq_default_sub_on": 37, "fq_default_neg": 37, "fq_default_mul": 37, "fq_default_mul_fmpz": 37, "fq_default_mul_si": 37, "fq_default_mul_ui": 37, "fq_default_sqr": 37, "fq_default_div": 37, "fq_default_inv": 37, "fq_default_pow": 37, "fq_default_pow_ui": 37, "fq_default_sqrt": 37, "fq_default_pth_root": 37, "fq_default_is_squar": 37, "fq_default_fprint_pretti": 37, "fq_default_print_pretti": 37, "fq_default_fprint": 37, "fq_default_print": 37, "fq_default_get_str": 37, "fq_default_get_str_pretti": 37, "fq_default_randtest": 37, "fq_default_randtest_not_zero": 37, "fq_default_rand": 37, "fq_default_rand_not_zero": 37, "fq_default_set": 37, "fq_default_set_si": 37, "fq_default_set_ui": 37, "fq_default_set_fmpz": 37, "fq_default_swap": 37, "fq_default_zero": 37, "fq_default_on": 37, "fq_default_gen": 37, "fq_default_get_fmpz": 37, "fq_default_get_nmod_poli": 37, "fq_default_set_nmod_poli": 37, "fq_default_get_fmpz_mod_poli": 37, "fq_default_set_fmpz_mod_poli": 37, "fq_default_get_fmpz_poli": 37, "fq_default_set_fmpz_poli": 37, "fq_default": 37, "fq_default_is_zero": 37, "fq_default_is_on": 37, "fq_default_equ": 37, "fq_default_trac": 37, "fq_default_norm": 37, "fq_default_frobeniu": 37, "fq_default_mat_t": 38, "fq_default_mat_init": 38, "fq_default_mat_init_set": 38, "fq_default_mat_clear": 38, "fq_default_mat_set": 38, "fq_default_mat_entri": 38, "fq_default_mat_entry_set": 38, "fq_default_mat_entry_set_fmpz": 38, "fq_default_mat_nrow": 38, "fq_default_mat_ncol": 38, "fq_default_mat_swap": 38, "fq_default_mat_zero": 38, "fq_default_mat_on": 38, "fq_default_mat_swap_row": 38, "fq_default_mat_swap_col": 38, "fq_default_mat_invert_row": 38, "fq_default_mat_invert_col": 38, "fq_default_mat_set_nmod_mat": 38, "fq_default_mat_set_fmpz_mod_mat": 38, "fq_default_mat_set_fmpz_mat": 38, "fq_default_mat_concat_vert": 38, "fq_default_mat_concat_horizont": 38, "fq_default_mat_print_pretti": 38, "enclos": [38, 42, 45, 56, 73], "fq_default_mat_fprint_pretti": 38, "fq_default_mat_print": 38, "fq_default_mat_fprint": 38, "fq_default_mat_window_init": 38, "fq_default_mat_window_clear": 38, "fq_default_mat_randtest": 38, "fq_default_mat_randrank": 38, "uniformli": [38, 42, 45, 56, 73, 83, 90, 91], "fq_default_mat_randop": 38, "fq_default_mat_randtril": 38, "fq_default_mat_randtriu": 38, "fq_default_mat_equ": 38, "fq_default_mat_is_zero": 38, "fq_default_mat_is_on": 38, "fq_default_mat_is_empti": 38, "fq_default_mat_is_squar": 38, "fq_default_mat_add": 38, "fq_default_mat_sub": 38, "fq_default_mat_neg": 38, "fq_default_mat_mul": 38, "fq_default_mat_submul": 38, "fq_default_mat_inv": 38, "fq_default_mat_lu": 38, "fq_default_mat_lu_recurs": 38, "fq_default_mat_rref": 38, "fq_default_mat_solve_tril": 38, "fq_default_mat_solve_triu": 38, "fq_default_mat_solv": 38, "fq_default_mat_can_solv": 38, "fq_default_mat_similar": 38, "fq_default_mat_charpoli": 38, "fq_default_poly_t": [38, 39, 40], "fq_default_mat_minpoli": 38, "fq_default_poly_init": 39, "fq_default_poly_clear": 39, "fq_default_poly_init2": 39, "fq_default_poly_realloc": 39, "fq_default_poly_fit_length": 39, "_fq_default_poly_set_length": 39, "fq_default_poly_trunc": 39, "fq_default_poly_set_trunc": 39, "fq_default_poly_revers": 39, "fq_default_poly_degre": 39, "fq_default_poly_length": 39, "fq_default_poly_randtest": 39, "fq_default_poly_randtest_not_zero": 39, "fq_default_poly_randtest_mon": 39, "fq_default_poly_randtest_irreduc": 39, "fq_default_poly_set": 39, "fq_default_poly_set_fq_default": 39, "fq_default_poly_swap": 39, "fq_default_poly_zero": 39, "fq_default_poly_on": 39, "fq_default_poly_gen": 39, "fq_default_poly_make_mon": 39, "fq_default_poly_set_nmod_poli": 39, "fq_default_poly_set_fmpz_mod_poli": 39, "fq_default_poly_set_fmpz_poli": 39, "fq_default_poly_get_coeff": 39, "fq_default_poly_set_coeff": 39, "fq_default_poly_set_coeff_fmpz": 39, "fq_default_poly_equ": 39, "fq_default_poly_equal_trunc": 39, "fq_default_poly_is_zero": 39, "fq_default_poly_is_on": 39, "fq_default_poly_is_gen": 39, "fq_default_poly_is_unit": 39, "fq_default_poly_equal_fq_default": 39, "fq_default_poly_add": 39, "fq_default_poly_add_si": 39, "fq_default_poly_add_seri": 39, "fq_default_poly_sub": 39, "fq_default_poly_sub_seri": 39, "fq_default_poly_neg": 39, "fq_default_poly_scalar_mul_fq_default": 39, "fq_default_poly_scalar_addmul_fq_default": 39, "fq_default_poly_scalar_submul_fq_default": 39, "fq_default_poly_scalar_div_fq_default": 39, "fq_default_poly_mul": 39, "fq_default_poly_mullow": 39, "fq_default_poly_mulhigh": 39, "fq_default_poly_mulmod": 39, "fq_default_poly_sqr": 39, "fq_default_poly_pow": 39, "fq_default_poly_powmod_ui_binexp": 39, "fq_default_poly_powmod_fmpz_binexp": 39, "fq_default_poly_pow_trunc": 39, "fq_default_poly_shift_left": 39, "fq_default_poly_shift_right": 39, "fq_default_poly_hamming_weight": 39, "fq_default_poly_divrem": 39, "grant": [39, 48, 51, 57], "fq_default_poly_rem": 39, "fq_default_poly_inv_seri": 39, "fq_default_poly_div_seri": 39, "fq_default_poly_gcd": 39, "fq_default_poly_xgcd": 39, "fq_default_poly_divid": 39, "fq_default_poly_deriv": 39, "fq_default_poly_invsqrt_seri": 39, "fq_default_poly_sqrt_seri": 39, "fq_default_poly_sqrt": 39, "fq_default_poly_evaluate_fq_default": 39, "fq_default_poly_compos": 39, "fq_default_poly_compose_mod": 39, "fq_default_poly_fprint_pretti": 39, "fq_default_poly_print_pretti": 39, "fq_default_poly_fprint": 39, "fq_default_poly_print": 39, "fq_default_poly_get_str": 39, "fq_default_poly_get_str_pretti": 39, "fq_default_poly_infl": 39, "fq_default_poly_defl": 39, "fq_default_poly_factor_t": 40, "fq_default_poly_factor_init": 40, "fq_default_poly_factor_clear": 40, "fq_default_poly_factor_realloc": 40, "fq_default_poly_factor_fit_length": 40, "fq_default_poly_factor_set": 40, "fq_default_poly_factor_print_pretti": 40, "fq_default_poly_factor_print": 40, "fq_default_poly_factor_insert": 40, "fq_default_poly_factor_concat": 40, "fq_default_poly_factor_pow": 40, "fq_default_poly_remov": 40, "fq_default_poly_factor_length": 40, "fq_default_poly_factor_get_poli": 40, "fq_default_poly_factor_exp": 40, "fq_default_poly_is_irreduc": 40, "fq_default_poly_is_squarefre": 40, "fq_default_poly_factor_equal_deg": 40, "fq_default_poly_factor_split_singl": 40, "linfactor": [40, 49, 52, 58], "fq_default_poly_factor_distinct_deg": 40, "fq_default_poly_factor_squarefre": 40, "fq_default_poly_root": 40, "f_q": [40, 49, 52, 58], "fq_embed_gen": 41, "gen_sub": [41, 44, 55], "gen_sup": [41, 44, 55], "minpoli": [41, 44, 55], "sub_ctx": [41, 44, 55], "sup_ctx": [41, 44, 55], "_fq_embed_gens_na": 41, "fq_embed_matric": 41, "emb": [41, 44, 55], "gen_minpoli": [41, 44, 55], "fq_embed_trace_matrix": 41, "subfield": [41, 44, 55], "embed_dual_to_mono_matrix": [41, 44, 55], "embed_mono_to_dual_matrix": [41, 44, 55], "fq_embed_composition_matrix": 41, "gen": [41, 44, 55], "fq_embed_composition_matrix_sub": 41, "fq_embed_mul_matrix": 41, "fq_embed_mono_to_dual_matrix": 41, "dual": [41, 44, 55], "fq_embed_dual_to_mono_matrix": 41, "fq_modulus_pow_series_inv": 41, "texttt": [41, 44, 55], "fq_modulus_derivative_inv": 41, "m_prime": [41, 44, 55], "m_prime_inv": [41, 44, 55], "fq_mat_struct": 42, "fq_mat_t": [42, 51], "fq_mat_init": 42, "fq_mat_init_set": 42, "fq_mat_clear": 42, "fq_mat_set": 42, "fq_mat_entri": 42, "fq_mat_entry_set": 42, "fq_mat_nrow": 42, "fq_mat_ncol": 42, "fq_mat_swap": 42, "fq_mat_swap_entrywis": 42, "fq_mat_zero": 42, "fq_mat_on": 42, "fq_mat_swap_row": 42, "fq_mat_swap_col": 42, "fq_mat_invert_row": 42, "fq_mat_invert_col": 42, "fq_mat_set_nmod_mat": 42, "fq_mat_set_fmpz_mod_mat": 42, "fq_mat_concat_vert": 42, "fq_mat_concat_horizont": 42, "fq_mat_print_pretti": 42, "fq_mat_fprint_pretti": 42, "fq_mat_print": 42, "fq_mat_fprint": 42, "fq_mat_window_init": 42, "fq_mat_window_clear": 42, "fq_mat_randtest": 42, "fq_mat_randpermdiag": 42, "fq_mat_randrank": 42, "fq_mat_randop": 42, "fq_mat_randtril": 42, "fq_mat_randtriu": 42, "fq_mat_equ": 42, "fq_mat_is_zero": 42, "fq_mat_is_on": 42, "fq_mat_is_empti": 42, "fq_mat_is_squar": 42, "fq_mat_add": 42, "fq_mat_sub": 42, "fq_mat_neg": 42, "fq_mat_mul": 42, "fq_mat_mul_class": 42, "fq_mat_mul_k": 42, "fq_mat_submul": 42, "fq_mat_mul_vec": 42, "fq_mat_mul_vec_ptr": 42, "fq_mat_vec_mul": 42, "fq_mat_vec_mul_ptr": 42, "fq_mat_inv": 42, "fq_mat_lu": 42, "fq_mat_lu_recurs": 42, "fq_mat_lu_class": 42, "fq_mat_rref": 42, "fq_mat_reduce_row": 42, "prior": [42, 45, 56, 73], "chamber": [42, 45, 56, 73], "monoton": [42, 45, 56, 73, 90], "fq_mat_solve_tril": 42, "fq_mat_solve_tril_class": 42, "fq_mat_solve_tril_recurs": 42, "pmatrix": [42, 45, 56, 73], "fq_mat_solve_triu": 42, "fq_mat_solve_triu_class": 42, "fq_mat_solve_triu_recurs": 42, "fq_mat_solv": 42, "fq_mat_can_solv": 42, "fq_mat_similar": 42, "fq_mat_charpoly_danilevski": 42, "fq_poly_t": [42, 48, 51, 52, 57], "fq_mat_charpoli": 42, "fq_mat_minpoli": 42, "fq_nmod_ctx_struct": 43, "fq_nmod_ctx_t": [43, 44, 45, 46, 48, 49, 50, 54], "fq_nmod_struct": [43, 45, 46, 48, 49, 50], "fq_nmod_t": [43, 44, 45, 46, 47, 48, 49, 50, 54], "fq_nmod_ctx_init": 43, "_fq_nmod_ctx_init_conwai": 43, "fq_nmod_ctx_init_conwai": 43, "fq_nmod_ctx_init_modulu": 43, "fq_nmod_ctx_clear": 43, "nmod_poly_struct": [43, 54, 74, 76, 78], "fq_nmod_ctx_modulu": 43, "fq_nmod_ctx_degre": 43, "fq_nmod_ctx_prim": 43, "fq_nmod_ctx_ord": 43, "fq_nmod_ctx_fprint": 43, "fq_nmod_ctx_print": 43, "fq_nmod_ctx_randtest": 43, "fq_nmod_ctx_randtest_reduc": 43, "fq_nmod_init": 43, "fq_nmod_init2": 43, "fq_nmod_clear": 43, "_fq_nmod_sparse_reduc": 43, "_fq_nmod_dense_reduc": 43, "_fq_nmod_reduc": 43, "fq_nmod_reduc": 43, "fq_nmod_add": 43, "fq_nmod_sub": 43, "fq_nmod_sub_on": 43, "fq_nmod_neg": 43, "fq_nmod_mul": 43, "fq_nmod_mul_fmpz": 43, "fq_nmod_mul_si": 43, "fq_nmod_mul_ui": 43, "fq_nmod_sqr": 43, "_fq_nmod_inv": 43, "fq_nmod_inv": 43, "fq_nmod_gcdinv": 43, "_fq_nmod_pow": 43, "fq_nmod_pow": 43, "fq_nmod_pow_ui": 43, "fq_nmod_sqrt": 43, "fq_nmod_pth_root": 43, "fq_nmod_is_squar": 43, "fq_nmod_fprint_pretti": 43, "fq_nmod_print_pretti": 43, "fq_nmod_fprint": 43, "nmod_poly_fprint": [43, 76], "fq_nmod_print": 43, "nmod_poly_print": [43, 76], "fq_nmod_get_str": 43, "fq_nmod_get_str_pretti": 43, "fq_nmod_randtest": 43, "fq_nmod_randtest_not_zero": 43, "fq_nmod_randtest_dens": 43, "fq_nmod_rand": 43, "fq_nmod_rand_not_zero": 43, "fq_nmod_set": 43, "fq_nmod_set_si": 43, "fq_nmod_set_ui": 43, "fq_nmod_set_fmpz": 43, "fq_nmod_swap": 43, "fq_nmod_zero": 43, "fq_nmod_on": 43, "fq_nmod_gen": [43, 46], "fq_nmod_get_fmpz": 43, "fq_nmod_get_nmod_poli": 43, "fq_nmod_set_nmod_poli": 43, "fq_nmod_get_nmod_mat": 43, "fq_nmod_set_nmod_mat": 43, "fq_nmod_is_zero": 43, "fq_nmod_is_on": 43, "fq_nmod_equ": 43, "fq_nmod_is_invert": 43, "fq_nmod_is_invertible_f": 43, "fq_nmod_cmp": 43, "_fq_nmod_trac": 43, "fq_nmod_trac": 43, "_fq_nmod_norm": 43, "fq_nmod_norm": 43, "_fq_nmod_frobeniu": 43, "fq_nmod_frobeniu": 43, "fq_nmod_multiplicative_ord": 43, "fq_nmod_is_primit": 43, "fq_nmod_bit_pack": 43, "fq_nmod_bit_unpack": 43, "fq_nmod_embed_gen": 44, "_fq_nmod_embed_gens_na": 44, "fq_nmod_embed_matric": 44, "fq_nmod_embed_trace_matrix": 44, "fq_nmod_embed_composition_matrix": 44, "fq_nmod_embed_composition_matrix_sub": 44, "fq_nmod_embed_mul_matrix": 44, "fq_nmod_embed_mono_to_dual_matrix": 44, "fq_nmod_embed_dual_to_mono_matrix": 44, "fq_nmod_modulus_pow_series_inv": 44, "fq_nmod_modulus_derivative_inv": 44, "fq_nmod_mat_struct": 45, "fq_nmod_mat_t": [45, 48], "fq_nmod_mat_init": 45, "fq_nmod_mat_init_set": 45, "fq_nmod_mat_clear": 45, "fq_nmod_mat_set": 45, "fq_nmod_mat_entri": 45, "fq_nmod_mat_entry_set": 45, "fq_nmod_mat_nrow": 45, "fq_nmod_mat_ncol": 45, "fq_nmod_mat_swap": 45, "fq_nmod_mat_swap_entrywis": 45, "fq_nmod_mat_zero": 45, "fq_nmod_mat_on": 45, "fq_nmod_mat_swap_row": 45, "fq_nmod_mat_swap_col": 45, "fq_nmod_mat_invert_row": 45, "fq_nmod_mat_invert_col": 45, "fq_nmod_mat_set_nmod_mat": 45, "fq_nmod_mat_set_fmpz_mod_mat": 45, "fq_nmod_mat_concat_vert": 45, "fq_nmod_mat_concat_horizont": 45, "fq_nmod_mat_print_pretti": 45, "fq_nmod_mat_fprint_pretti": 45, "fq_nmod_mat_print": 45, "fq_nmod_mat_fprint": 45, "fq_nmod_mat_window_init": 45, "fq_nmod_mat_window_clear": 45, "fq_nmod_mat_randtest": 45, "fq_nmod_mat_randpermdiag": 45, "fq_nmod_mat_randrank": 45, "fq_nmod_mat_randop": 45, "fq_nmod_mat_randtril": 45, "fq_nmod_mat_randtriu": 45, "fq_nmod_mat_equ": 45, "fq_nmod_mat_is_zero": 45, "fq_nmod_mat_is_on": 45, "fq_nmod_mat_is_empti": 45, "fq_nmod_mat_is_squar": 45, "fq_nmod_mat_add": 45, "fq_nmod_mat_sub": 45, "fq_nmod_mat_neg": 45, "fq_nmod_mat_mul": 45, "fq_nmod_mat_mul_class": 45, "fq_nmod_mat_mul_k": 45, "fq_nmod_mat_submul": 45, "fq_nmod_mat_mul_vec": 45, "fq_nmod_mat_mul_vec_ptr": 45, "fq_nmod_mat_vec_mul": 45, "fq_nmod_mat_vec_mul_ptr": 45, "fq_nmod_mat_inv": 45, "fq_nmod_mat_lu": 45, "fq_nmod_mat_lu_recurs": 45, "fq_nmod_mat_lu_class": 45, "fq_nmod_mat_rref": 45, "fq_nmod_mat_reduce_row": 45, "fq_nmod_mat_solve_tril": 45, "fq_nmod_mat_solve_tril_class": 45, "fq_nmod_mat_solve_tril_recurs": 45, "fq_nmod_mat_solve_triu": 45, "fq_nmod_mat_solve_triu_class": 45, "fq_nmod_mat_solve_triu_recurs": 45, "fq_nmod_mat_solv": 45, "fq_nmod_mat_can_solv": 45, "fq_nmod_mat_similar": 45, "fq_nmod_mat_charpoly_danilevski": 45, "fq_nmod_poly_t": [45, 46, 48, 49], "fq_nmod_mat_charpoli": 45, "fq_nmod_mat_minpoli": 45, "fq_nmod_mpoly_struct": 46, "fq_nmod_mpoly_t": [46, 47], "fq_nmod_mpoly_ctx_struct": 46, "fq_nmod_mpoly_ctx_t": [46, 47], "fq_nmod_mpoly_ctx_init": 46, "fqctx": 46, "fq_nmod_mpoly_ctx_nvar": 46, "fq_nmod_mpoly_ctx_ord": 46, "fq_nmod_mpoly_ctx_clear": 46, "fq_nmod_mpoly_init": 46, "fq_nmod_mpoly_init2": 46, "fq_nmod_mpoly_init3": 46, "fq_nmod_mpoly_fit_length": 46, "fq_nmod_mpoly_realloc": 46, "fq_nmod_mpoly_clear": 46, "fq_nmod_mpoly_get_str_pretti": 46, "fq_nmod_mpoly_fprint_pretti": 46, "fq_nmod_mpoly_print_pretti": 46, "fq_nmod_mpoly_set_str_pretti": 46, "fq_nmod_mpoly_gen": 46, "fq_nmod_mpoly_is_gen": 46, "fq_nmod_mpoly_set": 46, "fq_nmod_mpoly_equ": 46, "fq_nmod_mpoly_swap": 46, "fq_nmod_mpoly_is_fq_nmod": 46, "fq_nmod_mpoly_get_fq_nmod": 46, "fq_nmod_mpoly_set_fq_nmod": 46, "fq_nmod_mpoly_set_ui": 46, "fq_nmod_mpoly_set_fq_nmod_gen": 46, "fq_nmod_mpoly_zero": 46, "fq_nmod_mpoly_on": 46, "fq_nmod_mpoly_equal_fq_nmod": 46, "fq_nmod_mpoly_is_zero": 46, "fq_nmod_mpoly_is_on": 46, "fq_nmod_mpoly_degrees_fit_si": 46, "fq_nmod_mpoly_degrees_fmpz": 46, "fq_nmod_mpoly_degrees_si": 46, "fq_nmod_mpoly_degree_fmpz": 46, "fq_nmod_mpoly_degree_si": 46, "fq_nmod_mpoly_total_degree_fits_si": 46, "fq_nmod_mpoly_total_degree_fmpz": 46, "fq_nmod_mpoly_total_degree_si": 46, "fq_nmod_mpoly_used_var": 46, "fq_nmod_mpoly_get_coeff_fq_nmod_monomi": 46, "fq_nmod_mpoly_set_coeff_fq_nmod_monomi": 46, "fq_nmod_mpoly_get_coeff_fq_nmod_fmpz": 46, "fq_nmod_mpoly_get_coeff_fq_nmod_ui": 46, "fq_nmod_mpoly_set_coeff_fq_nmod_fmpz": 46, "fq_nmod_mpoly_set_coeff_fq_nmod_ui": 46, "fq_nmod_mpoly_get_coeff_vars_ui": 46, "fq_nmod_mpoly_cmp": 46, "fq_nmod_mpoly_is_canon": 46, "fq_nmod_mpoly_length": 46, "fq_nmod_mpoly_res": 46, "fq_nmod_mpoly_get_term_coeff_fq_nmod": 46, "fq_nmod_mpoly_set_term_coeff_ui": 46, "fq_nmod_mpoly_term_exp_fits_si": 46, "fq_nmod_mpoly_term_exp_fits_ui": 46, "fq_nmod_mpoly_get_term_exp_fmpz": 46, "fq_nmod_mpoly_get_term_exp_ui": 46, "fq_nmod_mpoly_get_term_exp_si": 46, "fq_nmod_mpoly_get_term_var_exp_ui": 46, "fq_nmod_mpoly_get_term_var_exp_si": 46, "fq_nmod_mpoly_set_term_exp_fmpz": 46, "fq_nmod_mpoly_set_term_exp_ui": 46, "fq_nmod_mpoly_get_term": 46, "fq_nmod_mpoly_get_term_monomi": 46, "fq_nmod_mpoly_push_term_fq_nmod_fmpz": 46, "fq_nmod_mpoly_push_term_fq_nmod_ui": 46, "fq_nmod_mpoly_sort_term": 46, "fq_nmod_mpoly_combine_like_term": 46, "fq_nmod_mpoly_revers": 46, "fq_nmod_mpoly_randtest_bound": 46, "fq_nmod_mpoly_randtest_bit": 46, "fq_nmod_mpoly_add_fq_nmod": 46, "fq_nmod_mpoly_sub_fq_nmod": 46, "fq_nmod_mpoly_add": 46, "fq_nmod_mpoly_sub": 46, "fq_nmod_mpoly_neg": 46, "fq_nmod_mpoly_scalar_mul_fq_nmod": 46, "fq_nmod_mpoly_make_mon": 46, "fq_nmod_mpoly_deriv": 46, "fq_nmod_mpoly_evaluate_all_fq_nmod": 46, "fq_nmod_mpoly_evaluate_one_fq_nmod": 46, "fq_nmod_mpoly_compose_fq_nmod_poli": 46, "fq_nmod_poly_struct": [46, 48], "fq_nmod_mpoly_compose_fq_nmod_mpoli": 46, "fq_nmod_mpoly_compose_fq_nmod_mpoly_gen": 46, "fq_nmod_mpoly_mul": 46, "nmod_mpoly_t": [46, 74, 75], "fq_nmod_mpoly_pow_fmpz": 46, "fq_nmod_mpoly_pow_ui": 46, "fq_nmod_mpoly_divid": 46, "fq_nmod_mpoly_div": 46, "fq_nmod_mpoly_divrem": 46, "fq_nmod_mpoly_divrem_id": 46, "fq_nmod_mpoly_term_cont": 46, "fq_nmod_mpoly_content_var": 46, "fq_nmod_mpoly_gcd": 46, "fq_nmod_mpoly_gcd_cofactor": 46, "fq_nmod_mpoly_gcd_brown": 46, "fq_nmod_mpoly_gcd_hensel": 46, "fq_nmod_mpoly_gcd_zippel": 46, "fq_nmod_mpoly_result": 46, "fq_nmod_mpoly_discrimin": 46, "fq_nmod_mpoly_sqrt": 46, "fq_nmod_mpoly_is_squar": 46, "fq_nmod_mpoly_quadratic_root": 46, "fq_nmod_mpoly_univar_t": 46, "fq_nmod_mpoly_univar_init": 46, "fq_nmod_mpoly_univar_clear": 46, "fq_nmod_mpoly_univar_swap": 46, "fq_nmod_mpoly_to_univar": 46, "fq_nmod_mpoly_from_univar": 46, "fq_nmod_mpoly_univar_degree_fits_si": 46, "fq_nmod_mpoly_univar_length": 46, "fq_nmod_mpoly_univar_get_term_exp_si": 46, "fq_nmod_mpoly_univar_get_term_coeff": 46, "fq_nmod_mpoly_univar_swap_term_coeff": 46, "fq_nmod_mpoly_factor_struct": 47, "fq_nmod_mpoly_factor_t": 47, "fq_nmod_mpoly_factor_init": 47, "fq_nmod_mpoly_factor_clear": 47, "fq_nmod_mpoly_factor_swap": 47, "fq_nmod_mpoly_factor_length": 47, "fq_nmod_mpoly_factor_get_constant_fq_nmod": 47, "fq_nmod_mpoly_factor_get_bas": 47, "fq_nmod_mpoly_factor_swap_bas": 47, "fq_nmod_mpoly_factor_get_exp_si": 47, "fq_nmod_mpoly_factor_sort": 47, "fq_nmod_mpoly_factor_squarefre": 47, "fq_nmod_poly_init": 48, "fq_nmod_poly_clear": 48, "fq_nmod_poly_init2": 48, "fq_nmod_poly_realloc": 48, "fq_nmod_poly_fit_length": 48, "_fq_nmod_poly_set_length": 48, "_fq_nmod_poly_normalis": 48, "_fq_nmod_poly_normalise2": 48, "fq_nmod_poly_trunc": 48, "fq_nmod_poly_set_trunc": 48, "_fq_nmod_poly_revers": 48, "fq_nmod_poly_revers": 48, "fq_nmod_poly_degre": 48, "fq_nmod_poly_length": 48, "fq_nmod_poly_lead": 48, "fq_nmod_poly_randtest": 48, "fq_nmod_poly_randtest_not_zero": 48, "fq_nmod_poly_randtest_mon": 48, "fq_nmod_poly_randtest_irreduc": 48, "_fq_nmod_poly_set": 48, "fq_nmod_poly_set": 48, "fq_nmod_poly_set_fq_nmod": 48, "fq_nmod_poly_set_fmpz_mod_poli": 48, "fq_nmod_poly_set_nmod_poli": 48, "fq_nmod_poly_swap": 48, "_fq_nmod_poly_zero": 48, "fq_nmod_poly_zero": 48, "fq_nmod_poly_on": 48, "fq_nmod_poly_gen": 48, "fq_nmod_poly_make_mon": 48, "_fq_nmod_poly_make_mon": 48, "fq_nmod_poly_get_coeff": 48, "fq_nmod_poly_set_coeff": 48, "fq_nmod_poly_set_coeff_fmpz": 48, "fq_nmod_poly_equ": 48, "fq_nmod_poly_equal_trunc": 48, "fq_nmod_poly_is_zero": 48, "fq_nmod_poly_is_on": 48, "fq_nmod_poly_is_gen": 48, "fq_nmod_poly_is_unit": 48, "fq_nmod_poly_equal_fq_nmod": 48, "_fq_nmod_poly_add": 48, "fq_nmod_poly_add": 48, "fq_nmod_poly_add_si": 48, "fq_nmod_poly_add_seri": 48, "_fq_nmod_poly_sub": 48, "fq_nmod_poly_sub": 48, "fq_nmod_poly_sub_seri": 48, "_fq_nmod_poly_neg": 48, "fq_nmod_poly_neg": 48, "_fq_nmod_poly_scalar_mul_fq_nmod": 48, "fq_nmod_poly_scalar_mul_fq_nmod": 48, "_fq_nmod_poly_scalar_addmul_fq_nmod": 48, "fq_nmod_poly_scalar_addmul_fq_nmod": 48, "_fq_nmod_poly_scalar_submul_fq_nmod": 48, "fq_nmod_poly_scalar_submul_fq_nmod": 48, "_fq_nmod_poly_scalar_div_fq": 48, "fq_nmod_poly_scalar_div_fq": 48, "_fq_nmod_poly_mul_class": 48, "fq_nmod_poly_mul_class": 48, "_fq_nmod_poly_mul_reord": 48, "fq_nmod_poly_mul_reord": 48, "poor": [48, 51, 57], "leverag": [48, 51, 57], "_fq_nmod_poly_mul_univari": 48, "fq_nmod_poly_mul_univari": 48, "bivari": [48, 51], "_fq_nmod_poly_mul_k": 48, "fq_nmod_poly_mul_k": 48, "_fq_nmod_poly_mul": 48, "fq_nmod_poly_mul": 48, "_fq_nmod_poly_mullow_class": 48, "fq_nmod_poly_mullow_class": 48, "_fq_nmod_poly_mullow_univari": 48, "fq_nmod_poly_mullow_univari": 48, "_fq_nmod_poly_mullow_k": 48, "fq_nmod_poly_mullow_k": 48, "_fq_nmod_poly_mullow": 48, "fq_nmod_poly_mullow": 48, "_fq_nmod_poly_mulhigh_class": 48, "fq_nmod_poly_mulhigh_class": 48, "_fq_nmod_poly_mulhigh": 48, "fq_nmod_poly_mulhigh": 48, "_fq_nmod_poly_mulmod": 48, "fq_nmod_poly_mulmod": 48, "_fq_nmod_poly_mulmod_preinv": 48, "fq_nmod_poly_mulmod_preinv": 48, "_fq_nmod_poly_sqr_class": 48, "fq_nmod_poly_sqr_class": 48, "_fq_nmod_poly_sqr_k": 48, "fq_nmod_poly_sqr_k": 48, "_fq_nmod_poly_sqr": 48, "fq_nmod_poly_sqr": 48, "_fq_nmod_poly_pow": 48, "fq_nmod_poly_pow": 48, "_fq_nmod_poly_powmod_ui_binexp": 48, "fq_nmod_poly_powmod_ui_binexp": 48, "_fq_nmod_poly_powmod_ui_binexp_preinv": 48, "fq_nmod_poly_powmod_ui_binexp_preinv": 48, "_fq_nmod_poly_powmod_fmpz_binexp": 48, "fq_nmod_poly_powmod_fmpz_binexp": 48, "_fq_nmod_poly_powmod_fmpz_binexp_preinv": 48, "fq_nmod_poly_powmod_fmpz_binexp_preinv": 48, "_fq_nmod_poly_powmod_fmpz_sliding_preinv": 48, "optimum": [48, 51, 57], "fq_nmod_poly_powmod_fmpz_sliding_preinv": 48, "_fq_nmod_poly_powmod_x_fmpz_preinv": 48, "fq_nmod_poly_powmod_x_fmpz_preinv": 48, "_fq_nmod_poly_pow_trunc_binexp": 48, "fq_nmod_poly_pow_trunc_binexp": 48, "_fq_nmod_poly_pow_trunc": 48, "fq_nmod_poly_pow_trunc": 48, "_fq_nmod_poly_shift_left": 48, "fq_nmod_poly_shift_left": 48, "_fq_nmod_poly_shift_right": 48, "fq_nmod_poly_shift_right": 48, "_fq_nmod_poly_hamming_weight": 48, "fq_nmod_poly_hamming_weight": 48, "_fq_nmod_poly_divrem_basecas": 48, "fq_nmod_poly_divrem_basecas": 48, "_fq_nmod_poly_divrem": 48, "fq_nmod_poly_divrem": 48, "fq_nmod_poly_divrem_f": 48, "_fq_nmod_poly_rem": 48, "fq_nmod_poly_rem": 48, "_fq_nmod_poly_div_basecas": 48, "fq_nmod_poly_div_basecas": 48, "_fq_nmod_poly_divrem_divconquer_recurs": 48, "_fq_nmod_poly_divrem_divconqu": 48, "fq_nmod_poly_divrem_divconqu": 48, "_fq_nmod_poly_div_newton_n_preinv": 48, "ctx_t": [48, 51, 57], "fq_nmod_poly_div_newton_n_preinv": 48, "_fq_nmod_poly_divrem_newton_n_preinv": 48, "div_newton_preinv": [48, 57], "fq_nmod_poly_divrem_newton_n_preinv": 48, "div_newton": [48, 57, 76], "_fq_nmod_poly_inv_series_newton": 48, "fq_nmod_poly_inv_series_newton": 48, "_fq_nmod_poly_inv_seri": 48, "fq_nmod_poly_inv_seri": 48, "_fq_nmod_poly_div_seri": 48, "fq_nmod_poly_div_seri": 48, "fq_nmod_poly_gcd": 48, "_fq_nmod_poly_gcd": 48, "fq_nmod_poly_gcd_euclidean": 48, "_fq_nmod_poly_gcd_euclidean": 48, "_fq_nmod_poly_hgcd": 48, "fq_nmod_poly_gcd_hgcd": 48, "_fq_nmod_poly_gcd_hgcd": 48, "_fq_nmod_poly_gcd_euclidean_f": 48, "fq_nmod_poly_gcd_euclidean_f": 48, "_fq_nmod_poly_xgcd_euclidean": 48, "fq_nmod_poly_xgcd_euclidean": 48, "_fq_nmod_poly_xgcd": 48, "fq_nmod_poly_xgcd": 48, "_fq_nmod_poly_xgcd_euclidean_f": 48, "fq_nmod_poly_xgcd_euclidean_f": 48, "_fq_nmod_poly_divid": 48, "fq_nmod_poly_divid": 48, "_fq_nmod_poly_deriv": 48, "fq_nmod_poly_deriv": 48, "_fq_nmod_poly_invsqrt_seri": 48, "fq_nmod_poly_invsqrt_seri": 48, "_fq_nmod_poly_sqrt_seri": 48, "fq_nmod_poly_sqrt_seri": 48, "_fq_nmod_poly_sqrt": 48, "fq_nmod_poly_sqrt": 48, "_fq_nmod_poly_evaluate_fq_nmod": 48, "fq_nmod_poly_evaluate_fq_nmod": 48, "_fq_nmod_poly_compose_divconqu": 48, "fq_nmod_poly_compose_divconqu": 48, "_fq_nmod_poly_compose_horn": 48, "fq_nmod_poly_compose_horn": 48, "_fq_nmod_poly_compos": 48, "fq_nmod_poly_compos": 48, "_fq_nmod_poly_compose_mod_horn": 48, "fq_nmod_poly_compose_mod_horn": 48, "_fq_nmod_poly_compose_mod_horner_preinv": 48, "lenhiv": [48, 51, 57], "fq_nmod_poly_compose_mod_horner_preinv": 48, "_fq_nmod_poly_compose_mod_brent_kung": 48, "fq_nmod_poly_compose_mod_brent_kung": 48, "_fq_nmod_poly_compose_mod_brent_kung_preinv": 48, "fq_nmod_poly_compose_mod_brent_kung_preinv": 48, "_fq_nmod_poly_compose_mod": 48, "fq_nmod_poly_compose_mod": 48, "_fq_nmod_poly_compose_mod_preinv": 48, "fq_nmod_poly_compose_mod_preinv": 48, "_fq_nmod_poly_reduce_matrix_mod_poli": 48, "_fq_nmod_poly_precompute_matrix": 48, "fq_nmod_poly_precompute_matrix": 48, "_fq_nmod_poly_compose_mod_brent_kung_precomp_preinv": 48, "fq_nmod_poly_compose_mod_brent_kung_precomp_preinv": 48, "modular": [48, 51, 57, 73, 88], "_fq_nmod_poly_fprint_pretti": 48, "fq_nmod_poly_fprint_pretti": 48, "_fq_nmod_poly_print_pretti": 48, "fq_nmod_poly_print_pretti": 48, "_fq_nmod_poly_fprint": 48, "fq_nmod_poly_fprint": 48, "_fq_nmod_poly_print": 48, "fq_nmod_poly_print": 48, "_fq_nmod_poly_get_str": 48, "fq_nmod_poly_get_str": 48, "_fq_nmod_poly_get_str_pretti": 48, "fq_nmod_poly_get_str_pretti": 48, "fq_nmod_poly_infl": 48, "fq_nmod_poly_defl": 48, "fq_nmod_poly_factor_struct": 49, "fq_nmod_poly_factor_t": 49, "fq_nmod_poly_factor_init": 49, "fq_nmod_poly_factor_clear": 49, "fq_nmod_poly_factor_realloc": 49, "fq_nmod_poly_factor_fit_length": 49, "fq_nmod_poly_factor_set": 49, "fq_nmod_poly_factor_print_pretti": 49, "fq_nmod_poly_factor_print": 49, "fq_nmod_poly_factor_insert": 49, "fq_nmod_poly_factor_concat": 49, "fq_nmod_poly_factor_pow": 49, "fq_nmod_poly_remov": 49, "fq_nmod_poly_is_irreduc": 49, "fq_nmod_poly_is_irreducible_ddf": 49, "fq_nmod_poly_is_irreducible_ben_or": 49, "ben": [49, 52, 58], "Or": [49, 52, 58], "_fq_nmod_poly_is_squarefre": 49, "fq_nmod_poly_is_squarefre": 49, "fq_nmod_poly_factor_equal_deg_prob": 49, "fq_nmod_poly_factor_equal_deg": 49, "fq_nmod_poly_factor_split_singl": 49, "fq_nmod_poly_factor_distinct_deg": 49, "fq_nmod_poly_factor_squarefre": 49, "fq_nmod_poly_factor_cantor_zassenhau": 49, "fq_nmod_poly_factor_kaltofen_shoup": 49, "fq_nmod_poly_factor_berlekamp": 49, "fq_nmod_poly_factor_with_berlekamp": 49, "leading_coeff": [49, 52, 58], "deflat": [49, 52, 58, 77], "fq_nmod_poly_factor_with_cantor_zassenhau": 49, "fq_nmod_poly_factor_with_kaltofen_shoup": 49, "fq_nmod_poly_iterated_frobenius_preinv": 49, "vinv": [49, 52, 58], "lenv": [49, 52, 58], "fq_nmod_poly_root": 49, "_fq_nmod_vec_init": 50, "_fq_nmod_vec_clear": 50, "_fq_nmod_vec_randtest": 50, "_fq_nmod_vec_fprint": 50, "_fq_nmod_vec_print": 50, "_fq_nmod_vec_set": 50, "_fq_nmod_vec_swap": 50, "_fq_nmod_vec_zero": 50, "_fq_nmod_vec_neg": 50, "_fq_nmod_vec_equ": 50, "_fq_nmod_vec_is_zero": 50, "ctx_ctx": [50, 53, 59], "_fq_nmod_vec_add": 50, "_fq_nmod_vec_sub": 50, "_fq_nmod_vec_scalar_addmul_fq_nmod": 50, "_fq_nmod_vec_scalar_submul_fq_nmod": 50, "_fq_nmod_vec_dot": 50, "fq_poly_struct": 51, "fq_poly_init": 51, "fq_poly_clear": 51, "fq_poly_init2": 51, "fq_poly_realloc": 51, "fq_poly_fit_length": 51, "_fq_poly_set_length": 51, "_fq_poly_normalis": 51, "_fq_poly_normalise2": 51, "fq_poly_trunc": 51, "fq_poly_set_trunc": 51, "_fq_poly_revers": 51, "fq_poly_revers": 51, "fq_poly_degre": 51, "fq_poly_length": 51, "fq_poly_lead": 51, "fq_poly_randtest": 51, "fq_poly_randtest_not_zero": 51, "fq_poly_randtest_mon": 51, "fq_poly_randtest_irreduc": 51, "_fq_poly_set": 51, "fq_poly_set": 51, "fq_poly_set_fq": 51, "fq_poly_set_fmpz_mod_poli": 51, "fq_poly_set_nmod_poli": 51, "fq_poly_swap": 51, "_fq_poly_zero": 51, "fq_poly_zero": 51, "fq_poly_on": 51, "fq_poly_gen": 51, "fq_poly_make_mon": 51, "_fq_poly_make_mon": 51, "fq_poly_get_coeff": 51, "fq_poly_set_coeff": 51, "fq_poly_set_coeff_fmpz": 51, "fq_poly_equ": 51, "fq_poly_equal_trunc": 51, "fq_poly_is_zero": 51, "fq_poly_is_on": 51, "fq_poly_is_gen": 51, "fq_poly_is_unit": 51, "fq_poly_equal_fq": 51, "_fq_poly_add": 51, "fq_poly_add": 51, "fq_poly_add_si": 51, "fq_poly_add_seri": 51, "_fq_poly_sub": 51, "fq_poly_sub": 51, "fq_poly_sub_seri": 51, "_fq_poly_neg": 51, "fq_poly_neg": 51, "_fq_poly_scalar_mul_fq": 51, "fq_poly_scalar_mul_fq": 51, "_fq_poly_scalar_addmul_fq": 51, "fq_poly_scalar_addmul_fq": 51, "_fq_poly_scalar_submul_fq": 51, "fq_poly_scalar_submul_fq": 51, "_fq_poly_scalar_div_fq": 51, "fq_poly_scalar_div_fq": 51, "_fq_poly_mul_class": 51, "fq_poly_mul_class": 51, "_fq_poly_mul_reord": 51, "fq_poly_mul_reord": 51, "_fq_poly_mul_univari": 51, "fq_poly_mul_univari": 51, "_fq_poly_mul_k": 51, "fq_poly_mul_k": 51, "_fq_poly_mul": 51, "fq_poly_mul": 51, "_fq_poly_mullow_class": 51, "fq_poly_mullow_class": 51, "_fq_poly_mullow_univari": 51, "fq_poly_mullow_univari": 51, "_fq_poly_mullow_k": 51, "fq_poly_mullow_k": 51, "_fq_poly_mullow": 51, "fq_poly_mullow": 51, "_fq_poly_mulhigh_class": 51, "fq_poly_mulhigh_class": 51, "_fq_poly_mulhigh": 51, "fq_poly_mulhigh": 51, "_fq_poly_mulmod": 51, "fq_poly_mulmod": 51, "_fq_poly_mulmod_preinv": 51, "fq_poly_mulmod_preinv": 51, "_fq_poly_sqr_class": 51, "fq_poly_sqr_class": 51, "_fq_poly_sqr_reord": 51, "fq_poly_sqr_reord": 51, "_fq_poly_sqr_k": 51, "fq_poly_sqr_k": 51, "_fq_poly_sqr": 51, "fq_poly_sqr": 51, "_fq_poly_pow": 51, "fq_poly_pow": 51, "_fq_poly_powmod_ui_binexp": 51, "fq_poly_powmod_ui_binexp": 51, "_fq_poly_powmod_ui_binexp_preinv": 51, "fq_poly_powmod_ui_binexp_preinv": 51, "_fq_poly_powmod_fmpz_binexp": 51, "fq_poly_powmod_fmpz_binexp": 51, "_fq_poly_powmod_fmpz_binexp_preinv": 51, "fq_poly_powmod_fmpz_binexp_preinv": 51, "_fq_poly_powmod_fmpz_sliding_preinv": 51, "fq_poly_powmod_fmpz_sliding_preinv": 51, "_fq_poly_powmod_x_fmpz_preinv": 51, "fq_poly_powmod_x_fmpz_preinv": 51, "_fq_poly_pow_trunc_binexp": 51, "fq_poly_pow_trunc_binexp": 51, "_fq_poly_pow_trunc": 51, "fq_poly_pow_trunc": 51, "_fq_poly_shift_left": 51, "fq_poly_shift_left": 51, "_fq_poly_shift_right": 51, "fq_poly_shift_right": 51, "_fq_poly_hamming_weight": 51, "fq_poly_hamming_weight": 51, "_fq_poly_divrem_basecas": 51, "fq_poly_divrem_basecas": 51, "_fq_poly_divrem": 51, "fq_poly_divrem": 51, "fq_poly_divrem_f": 51, "_fq_poly_rem": 51, "fq_poly_rem": 51, "_fq_poly_div_basecas": 51, "fq_poly_div_basecas": 51, "_fq_poly_divrem_divconquer_recurs": 51, "_fq_poly_divrem_divconqu": 51, "fq_poly_divrem_divconqu": 51, "_fq_poly_div_newton_n_preinv": 51, "fq_poly_div_newton_n_preinv": 51, "_fq_poly_divrem_newton_n_preinv": 51, "fq_poly_divrem_newton_preinv": 51, "_fq_poly_inv_series_newton": 51, "fq_poly_inv_series_newton": 51, "_fq_poly_inv_seri": 51, "fq_poly_inv_seri": 51, "_fq_poly_div_seri": 51, "fq_poly_div_seri": 51, "fq_poly_gcd": 51, "_fq_poly_gcd": 51, "fq_poly_gcd_euclidean": 51, "_fq_poly_gcd_euclidean": 51, "_fq_poly_hgcd": 51, "fq_poly_gcd_hgcd": 51, "_fq_poly_gcd_hgcd": 51, "_fq_poly_gcd_euclidean_f": 51, "fq_poly_gcd_euclidean_f": 51, "_fq_poly_xgcd_euclidean": 51, "fq_poly_xgcd_euclidean": 51, "_fq_poly_xgcd": 51, "fq_poly_xgcd": 51, "_fq_poly_xgcd_euclidean_f": 51, "fq_poly_xgcd_euclidean_f": 51, "_fq_poly_divid": 51, "fq_poly_divid": 51, "_fq_poly_deriv": 51, "fq_poly_deriv": 51, "_fq_poly_invsqrt_seri": 51, "fq_poly_invsqrt_seri": 51, "_fq_poly_sqrt_seri": 51, "fq_poly_sqrt_seri": 51, "_fq_poly_sqrt": 51, "fq_poly_sqrt": 51, "_fq_poly_evaluate_fq": 51, "fq_poly_evaluate_fq": 51, "_fq_poly_compose_divconqu": 51, "fq_poly_compose_divconqu": 51, "_fq_poly_compose_horn": 51, "fq_poly_compose_horn": 51, "_fq_poly_compos": 51, "fq_poly_compos": 51, "_fq_poly_compose_mod_horn": 51, "fq_poly_compose_mod_horn": 51, "_fq_poly_compose_mod_horner_preinv": 51, "fq_poly_compose_mod_horner_preinv": 51, "_fq_poly_compose_mod_brent_kung": 51, "fq_poly_compose_mod_brent_kung": 51, "_fq_poly_compose_mod_brent_kung_preinv": 51, "fq_poly_compose_mod_brent_kung_preinv": 51, "_fq_poly_compose_mod": 51, "fq_poly_compose_mod": 51, "_fq_poly_compose_mod_preinv": 51, "fq_poly_compose_mod_preinv": 51, "_fq_poly_reduce_matrix_mod_poli": 51, "_fq_poly_precompute_matrix": 51, "fq_poly_precompute_matrix": 51, "_fq_poly_compose_mod_brent_kung_precomp_preinv": 51, "fq_poly_compose_mod_brent_kung_precomp_preinv": 51, "_fq_poly_fprint_pretti": 51, "fq_poly_fprint_pretti": 51, "_fq_poly_print_pretti": 51, "fq_poly_print_pretti": 51, "_fq_poly_fprint": 51, "fq_poly_fprint": 51, "_fq_poly_print": 51, "fq_poly_print": 51, "_fq_poly_get_str": 51, "fq_poly_get_str": 51, "_fq_poly_get_str_pretti": 51, "fq_poly_get_str_pretti": 51, "fq_poly_infl": 51, "fq_poly_defl": 51, "fq_poly_factor_struct": 52, "fq_poly_factor_t": 52, "fq_poly_factor_init": 52, "fq_poly_factor_clear": 52, "fq_poly_factor_realloc": 52, "fq_poly_factor_fit_length": 52, "fq_poly_factor_set": 52, "fq_poly_factor_print_pretti": 52, "fq_poly_factor_print": 52, "fq_poly_factor_insert": 52, "fq_poly_factor_concat": 52, "fq_poly_factor_pow": 52, "fq_poly_remov": 52, "fq_poly_is_irreduc": 52, "fq_poly_is_irreducible_ddf": 52, "fq_poly_is_irreducible_ben_or": 52, "_fq_poly_is_squarefre": 52, "fq_poly_is_squarefre": 52, "fq_poly_factor_equal_deg_prob": 52, "fq_poly_factor_equal_deg": 52, "fq_poly_factor_split_singl": 52, "fq_poly_factor_distinct_deg": 52, "fq_poly_factor_squarefre": 52, "fq_poly_factor_cantor_zassenhau": 52, "fq_poly_factor_kaltofen_shoup": 52, "fq_poly_factor_berlekamp": 52, "fq_poly_factor_with_berlekamp": 52, "fq_poly_factor_with_cantor_zassenhau": 52, "fq_poly_factor_with_kaltofen_shoup": 52, "fq_poly_iterated_frobenius_preinv": 52, "fq_poly_root": 52, "_fq_vec_init": 53, "_fq_vec_clear": 53, "_fq_vec_randtest": 53, "_fq_vec_fprint": 53, "_fq_vec_print": 53, "_fq_vec_set": 53, "_fq_vec_swap": 53, "_fq_vec_zero": 53, "_fq_vec_neg": 53, "_fq_vec_equ": 53, "_fq_vec_is_zero": 53, "_fq_vec_add": 53, "_fq_vec_sub": 53, "_fq_vec_scalar_addmul_fq": 53, "_fq_vec_scalar_submul_fq": 53, "_fq_vec_dot": 53, "fq_zech_ctx_struct": 54, "fq_zech_ctx_t": [54, 55, 56, 57, 58, 59], "fq_zech_struct": [54, 56, 57, 58, 59], "fq_zech_t": [54, 55, 56, 57, 58, 59], "fq_zech_ctx_init": 54, "mathtt": [54, 79, 91], "_fq_zech_ctx_init_conwai": 54, "fq_zech_ctx_init_conwai": 54, "fq_zech_ctx_init_random": 54, "fq_zech_ctx_init_modulu": 54, "fq_zech_ctx_init_modulus_check": 54, "successfulli": 54, "fq_zech_ctx_init_fq_nmod_ctx": 54, "ctxn": 54, "fq_zech_ctx_init_fq_nmod_ctx_check": 54, "fq_zech_ctx_clear": 54, "fq_zech_ctx_modulu": 54, "fq_zech_ctx_degre": 54, "fq_zech_ctx_prim": 54, "fq_zech_ctx_ord": 54, "fq_zech_ctx_order_ui": 54, "fq_zech_ctx_fprint": 54, "fq_zech_ctx_print": 54, "fq_zech_ctx_randtest": 54, "fq_zech_ctx_randtest_reduc": 54, "fq_zech_init": 54, "fq_zech_init2": 54, "fq_zech_clear": 54, "_fq_zech_sparse_reduc": 54, "_fq_zech_dense_reduc": 54, "_fq_zech_reduc": 54, "fq_zech_reduc": 54, "fq_zech_add": 54, "fq_zech_sub": 54, "fq_zech_sub_on": 54, "fq_zech_neg": 54, "fq_zech_mul": 54, "fq_zech_mul_fmpz": 54, "fq_zech_mul_si": 54, "fq_zech_mul_ui": 54, "fq_zech_sqr": 54, "fq_zech_div": 54, "_fq_zech_inv": 54, "fq_zech_inv": 54, "fq_zech_gcdinv": 54, "_fq_zech_pow": 54, "fq_zech_pow": 54, "fq_zech_pow_ui": 54, "fq_zech_sqrt": 54, "fq_zech_pth_root": 54, "fq_zech_is_squar": 54, "fq_zech_fprint_pretti": 54, "fq_zech_print_pretti": 54, "fq_zech_fprint": 54, "fq_zech_print": 54, "fq_zech_get_str": 54, "fq_zech_get_str_pretti": 54, "fq_zech_randtest": 54, "fq_zech_randtest_not_zero": 54, "fq_zech_randtest_dens": 54, "fq_zech_rand": 54, "fq_zech_rand_not_zero": 54, "fq_zech_set": 54, "fq_zech_set_si": 54, "fq_zech_set_ui": 54, "fq_zech_set_fmpz": 54, "fq_zech_swap": 54, "fq_zech_zero": 54, "fq_zech_on": 54, "fq_zech_gen": 54, "fq_zech_get_fmpz": 54, "fq_zech_get_fq_nmod": 54, "fq_zech_set_fq_nmod": 54, "fq_zech_get_nmod_poli": 54, "fq_zech_set_nmod_poli": 54, "fq_zech_get_nmod_mat": 54, "fq_zech_set_nmod_mat": 54, "fq_zech_is_zero": 54, "fq_zech_is_on": 54, "fq_zech_equ": 54, "fq_zech_is_invert": 54, "fq_zech_is_invertible_f": 54, "fq_zech_trac": 54, "fq_zech_norm": 54, "fq_zech_frobeniu": 54, "fq_zech_multiplicative_ord": 54, "fq_zech_is_primit": 54, "fq_zech_bit_pack": 54, "fq_zech_bit_unpack": 54, "fq_zech_embed_gen": 55, "_fq_zech_embed_gens_na": 55, "fq_zech_embed_matric": 55, "fq_zech_embed_trace_matrix": 55, "fq_zech_embed_composition_matrix": 55, "fq_zech_embed_composition_matrix_sub": 55, "fq_zech_embed_mul_matrix": 55, "fq_zech_embed_mono_to_dual_matrix": 55, "fq_zech_embed_dual_to_mono_matrix": 55, "fq_zech_modulus_pow_series_inv": 55, "fq_zech_modulus_derivative_inv": 55, "fq_zech_mat_struct": 56, "fq_zech_mat_t": [56, 57], "fq_zech_mat_init": 56, "fq_zech_mat_init_set": 56, "fq_zech_mat_clear": 56, "fq_zech_mat_set": 56, "fq_zech_mat_entri": 56, "fq_zech_mat_entry_set": 56, "fq_zech_mat_nrow": 56, "fq_zech_mat_ncol": 56, "fq_zech_mat_swap": 56, "fq_zech_mat_swap_entrywis": 56, "fq_zech_mat_zero": 56, "fq_zech_mat_on": 56, "fq_zech_mat_set_nmod_mat": 56, "fq_zech_mat_set_fmpz_mod_mat": 56, "fq_zech_mat_concat_vert": 56, "fq_zech_mat_concat_horizont": 56, "fq_zech_mat_print_pretti": 56, "fq_zech_mat_fprint_pretti": 56, "fq_zech_mat_print": 56, "fq_zech_mat_fprint": 56, "fq_zech_mat_window_init": 56, "fq_zech_mat_window_clear": 56, "fq_zech_mat_randtest": 56, "fq_zech_mat_randpermdiag": 56, "fq_zech_mat_randrank": 56, "fq_zech_mat_randop": 56, "fq_zech_mat_randtril": 56, "fq_zech_mat_randtriu": 56, "fq_zech_mat_equ": 56, "fq_zech_mat_is_zero": 56, "fq_zech_mat_is_on": 56, "fq_zech_mat_is_empti": 56, "fq_zech_mat_is_squar": 56, "fq_zech_mat_add": 56, "fq_zech_mat_sub": 56, "fq_zech_mat_neg": 56, "fq_zech_mat_mul": 56, "fq_zech_mat_mul_class": 56, "fq_zech_mat_mul_k": 56, "fq_zech_mat_submul": 56, "fq_zech_mat_mul_vec": 56, "fq_zech_mat_mul_vec_ptr": 56, "fq_zech_mat_vec_mul": 56, "fq_zech_mat_vec_mul_ptr": 56, "fq_zech_mat_lu": 56, "fq_zech_mat_lu_recurs": 56, "fq_zech_mat_lu_class": 56, "fq_zech_mat_rref": 56, "fq_zech_mat_reduce_row": 56, "fq_zech_mat_solve_tril": 56, "fq_zech_mat_solve_tril_class": 56, "fq_zech_mat_solve_tril_recurs": 56, "fq_zech_mat_solve_triu": 56, "fq_zech_mat_solve_triu_class": 56, "fq_zech_mat_solve_triu_recurs": 56, "fq_zech_mat_solv": 56, "fq_zech_mat_can_solv": 56, "fq_zech_mat_similar": 56, "fq_zech_mat_charpoly_danilevski": 56, "fq_zech_poly_t": [56, 57, 58], "fq_zech_mat_charpoli": 56, "fq_zech_mat_minpoli": 56, "fq_zech_poly_struct": 57, "fq_zech_poly_init": 57, "fq_zech_poly_clear": 57, "fq_zech_poly_init2": 57, "fq_zech_poly_realloc": 57, "fq_zech_poly_fit_length": 57, "_fq_zech_poly_set_length": 57, "_fq_zech_poly_normalis": 57, "_fq_zech_poly_normalise2": 57, "fq_zech_poly_trunc": 57, "fq_zech_poly_set_trunc": 57, "_fq_zech_poly_revers": 57, "fq_zech_poly_revers": 57, "fq_zech_poly_degre": 57, "fq_zech_poly_length": 57, "fq_zech_poly_lead": 57, "fq_zech_poly_randtest": 57, "fq_zech_poly_randtest_not_zero": 57, "fq_zech_poly_randtest_mon": 57, "fq_zech_poly_randtest_irreduc": 57, "_fq_zech_poly_set": 57, "fq_zech_poly_set": 57, "fq_zech_poly_set_fq_zech": 57, "fq_zech_poly_set_fmpz_mod_poli": 57, "fq_zech_poly_set_nmod_poli": 57, "fq_zech_poly_swap": 57, "_fq_zech_poly_zero": 57, "fq_zech_poly_zero": 57, "fq_zech_poly_on": 57, "fq_zech_poly_gen": 57, "fq_zech_poly_make_mon": 57, "_fq_zech_poly_make_mon": 57, "fq_zech_poly_get_coeff": 57, "fq_zech_poly_set_coeff": 57, "fq_zech_poly_set_coeff_fmpz": 57, "fq_zech_poly_equ": 57, "fq_zech_poly_equal_trunc": 57, "fq_zech_poly_is_zero": 57, "fq_zech_poly_is_on": 57, "fq_zech_poly_is_gen": 57, "fq_zech_poly_is_unit": 57, "fq_zech_poly_equal_fq_zech": 57, "_fq_zech_poly_add": 57, "fq_zech_poly_add": 57, "fq_zech_poly_add_si": 57, "fq_zech_poly_add_seri": 57, "_fq_zech_poly_sub": 57, "fq_zech_poly_sub": 57, "fq_zech_poly_sub_seri": 57, "_fq_zech_poly_neg": 57, "fq_zech_poly_neg": 57, "_fq_zech_poly_scalar_mul_fq_zech": 57, "fq_zech_poly_scalar_mul_fq_zech": 57, "_fq_zech_poly_scalar_addmul_fq_zech": 57, "fq_zech_poly_scalar_addmul_fq_zech": 57, "_fq_zech_poly_scalar_submul_fq_zech": 57, "fq_zech_poly_scalar_submul_fq_zech": 57, "_fq_zech_poly_scalar_div_fq": 57, "fq_zech_poly_scalar_div_fq": 57, "_fq_zech_poly_mul_class": 57, "fq_zech_poly_mul_class": 57, "_fq_zech_poly_mul_reord": 57, "fq_zech_poly_mul_reord": 57, "_fq_zech_poly_mul_k": 57, "fq_zech_poly_mul_k": 57, "_fq_zech_poly_mul": 57, "fq_zech_poly_mul": 57, "_fq_zech_poly_mullow_class": 57, "fq_zech_poly_mullow_class": 57, "_fq_zech_poly_mullow_k": 57, "fq_zech_poly_mullow_k": 57, "_fq_zech_poly_mullow": 57, "fq_zech_poly_mullow": 57, "_fq_zech_poly_mulhigh_class": 57, "fq_zech_poly_mulhigh_class": 57, "_fq_zech_poly_mulhigh": 57, "fq_zech_poly_mulhigh": 57, "_fq_zech_poly_mulmod": 57, "fq_zech_poly_mulmod": 57, "_fq_zech_poly_mulmod_preinv": 57, "fq_zech_poly_mulmod_preinv": 57, "_fq_zech_poly_sqr_class": 57, "fq_zech_poly_sqr_class": 57, "_fq_zech_poly_sqr_k": 57, "fq_zech_poly_sqr_k": 57, "_fq_zech_poly_sqr": 57, "fq_zech_poly_sqr": 57, "_fq_zech_poly_pow": 57, "fq_zech_poly_pow": 57, "_fq_zech_poly_powmod_ui_binexp": 57, "fq_zech_poly_powmod_ui_binexp": 57, "_fq_zech_poly_powmod_ui_binexp_preinv": 57, "fq_zech_poly_powmod_ui_binexp_preinv": 57, "_fq_zech_poly_powmod_fmpz_binexp": 57, "fq_zech_poly_powmod_fmpz_binexp": 57, "_fq_zech_poly_powmod_fmpz_binexp_preinv": 57, "fq_zech_poly_powmod_fmpz_binexp_preinv": 57, "_fq_zech_poly_powmod_fmpz_sliding_preinv": 57, "fq_zech_poly_powmod_fmpz_sliding_preinv": 57, "_fq_zech_poly_powmod_x_fmpz_preinv": 57, "fq_zech_poly_powmod_x_fmpz_preinv": 57, "_fq_zech_poly_pow_trunc_binexp": 57, "fq_zech_poly_pow_trunc_binexp": 57, "_fq_zech_poly_pow_trunc": 57, "fq_zech_poly_pow_trunc": 57, "_fq_zech_poly_shift_left": 57, "fq_zech_poly_shift_left": 57, "_fq_zech_poly_shift_right": 57, "fq_zech_poly_shift_right": 57, "_fq_zech_poly_hamming_weight": 57, "fq_zech_poly_hamming_weight": 57, "_fq_zech_poly_divrem_basecas": 57, "fq_zech_poly_divrem_basecas": 57, "_fq_zech_poly_divrem": 57, "fq_zech_poly_divrem": 57, "fq_zech_poly_divrem_f": 57, "_fq_zech_poly_rem": 57, "fq_zech_poly_rem": 57, "_fq_zech_poly_div_basecas": 57, "fq_zech_poly_div_basecas": 57, "_fq_zech_poly_divrem_divconquer_recurs": 57, "_fq_zech_poly_divrem_divconqu": 57, "fq_zech_poly_divrem_divconqu": 57, "_fq_zech_poly_div_newton_n_preinv": 57, "fq_zech_poly_div_newton_n_preinv": 57, "_fq_zech_poly_divrem_newton_n_preinv": 57, "fq_zech_poly_divrem_newton_n_preinv": 57, "_fq_zech_poly_inv_series_newton": 57, "fq_zech_poly_inv_series_newton": 57, "_fq_zech_poly_inv_seri": 57, "fq_zech_poly_inv_seri": 57, "_fq_zech_poly_div_seri": 57, "fq_zech_poly_div_seri": 57, "fq_zech_poly_gcd": 57, "_fq_zech_poly_gcd": 57, "fq_zech_poly_gcd_euclidean": 57, "_fq_zech_poly_gcd_euclidean": 57, "_fq_zech_poly_hgcd": 57, "fq_zech_poly_gcd_hgcd": 57, "_fq_zech_poly_gcd_hgcd": 57, "_fq_zech_poly_gcd_euclidean_f": 57, "fq_zech_poly_gcd_euclidean_f": 57, "_fq_zech_poly_xgcd_euclidean": 57, "fq_zech_poly_xgcd_euclidean": 57, "_fq_zech_poly_xgcd": 57, "fq_zech_poly_xgcd": 57, "_fq_zech_poly_xgcd_euclidean_f": 57, "fq_zech_poly_xgcd_euclidean_f": 57, "_fq_zech_poly_divid": 57, "fq_zech_poly_divid": 57, "_fq_zech_poly_deriv": 57, "fq_zech_poly_deriv": 57, "_fq_zech_poly_invsqrt_seri": 57, "fq_zech_poly_invsqrt_seri": 57, "_fq_zech_poly_sqrt_seri": 57, "fq_zech_poly_sqrt_seri": 57, "_fq_zech_poly_sqrt": 57, "fq_zech_poly_sqrt": 57, "_fq_zech_poly_evaluate_fq_zech": 57, "fq_zech_poly_evaluate_fq_zech": 57, "_fq_zech_poly_compose_divconqu": 57, "fq_zech_poly_compose_divconqu": 57, "_fq_zech_poly_compose_horn": 57, "fq_zech_poly_compose_horn": 57, "_fq_zech_poly_compos": 57, "fq_zech_poly_compos": 57, "_fq_zech_poly_compose_mod_horn": 57, "fq_zech_poly_compose_mod_horn": 57, "_fq_zech_poly_compose_mod_horner_preinv": 57, "fq_zech_poly_compose_mod_horner_preinv": 57, "_fq_zech_poly_compose_mod_brent_kung": 57, "fq_zech_poly_compose_mod_brent_kung": 57, "_fq_zech_poly_compose_mod_brent_kung_preinv": 57, "fq_zech_poly_compose_mod_brent_kung_preinv": 57, "_fq_zech_poly_compose_mod": 57, "fq_zech_poly_compose_mod": 57, "_fq_zech_poly_compose_mod_preinv": 57, "fq_zech_poly_compose_mod_preinv": 57, "_fq_zech_poly_reduce_matrix_mod_poli": 57, "_fq_zech_poly_precompute_matrix": 57, "fq_zech_poly_precompute_matrix": 57, "_fq_zech_poly_compose_mod_brent_kung_precomp_preinv": 57, "fq_zech_poly_compose_mod_brent_kung_precomp_preinv": 57, "_fq_zech_poly_fprint_pretti": 57, "fq_zech_poly_fprint_pretti": 57, "_fq_zech_poly_print_pretti": 57, "fq_zech_poly_print_pretti": 57, "_fq_zech_poly_fprint": 57, "fq_zech_poly_fprint": 57, "_fq_zech_poly_print": 57, "fq_zech_poly_print": 57, "_fq_zech_poly_get_str": 57, "fq_zech_poly_get_str": 57, "_fq_zech_poly_get_str_pretti": 57, "fq_zech_poly_get_str_pretti": 57, "fq_zech_poly_infl": 57, "fq_zech_poly_defl": 57, "fq_zech_poly_factor_struct": 58, "fq_zech_poly_factor_t": 58, "fq_zech_poly_factor_init": 58, "fq_zech_poly_factor_clear": 58, "fq_zech_poly_factor_realloc": 58, "fq_zech_poly_factor_fit_length": 58, "fq_zech_poly_factor_set": 58, "fq_zech_poly_factor_print_pretti": 58, "fq_zech_poly_factor_print": 58, "fq_zech_poly_factor_insert": 58, "fq_zech_poly_factor_concat": 58, "fq_zech_poly_factor_pow": 58, "fq_zech_poly_remov": 58, "fq_zech_poly_is_irreduc": 58, "fq_zech_poly_is_irreducible_ddf": 58, "fq_zech_poly_is_irreducible_ben_or": 58, "_fq_zech_poly_is_squarefre": 58, "fq_zech_poly_is_squarefre": 58, "fq_zech_poly_factor_equal_deg_prob": 58, "fq_zech_poly_factor_equal_deg": 58, "fq_zech_poly_factor_split_singl": 58, "fq_zech_poly_factor_distinct_deg": 58, "fq_zech_poly_factor_squarefre": 58, "fq_zech_poly_factor_cantor_zassenhau": 58, "fq_zech_poly_factor_kaltofen_shoup": 58, "fq_zech_poly_factor_berlekamp": 58, "fq_zech_poly_factor_with_berlekamp": 58, "fq_zech_poly_factor_with_cantor_zassenhau": 58, "fq_zech_poly_factor_with_kaltofen_shoup": 58, "fq_zech_poly_iterated_frobenius_preinv": 58, "fq_zech_poly_root": 58, "_fq_zech_vec_init": 59, "_fq_zech_vec_clear": 59, "_fq_zech_vec_randtest": 59, "_fq_zech_vec_fprint": 59, "_fq_zech_vec_print": 59, "_fq_zech_vec_set": 59, "_fq_zech_vec_swap": 59, "_fq_zech_vec_zero": 59, "_fq_zech_vec_neg": 59, "_fq_zech_vec_equ": 59, "_fq_zech_vec_is_zero": 59, "_fq_zech_vec_add": 59, "_fq_zech_vec_sub": 59, "_fq_zech_vec_scalar_addmul_fq_zech": 59, "_fq_zech_vec_scalar_submul_fq_zech": 59, "_fq_zech_vec_dot": 59, "welcom": 60, "hart": [60, 61, 88, 91], "fredrik": [60, 61], "johansson": [60, 61], "wbhart": 60, "flint2": 60, "issu": 60, "tracker": 60, "mail": 60, "softwar": 60, "lesser": 60, "public": 60, "licens": 60, "lgpl": [60, 61], "contributor": [60, 61], "global": [60, 70], "profil": [60, 61], "thread_pool": 60, "fmpz_factor": 60, "fmpz_lll": 60, "lll": [60, 88], "univari": [60, 61], "fmpz_poly_mat": 60, "fmpz_poly_factor": 60, "fmpz_mpoly_factor": 60, "long_extra": 60, "longlong": 60, "multi": 60, "mpn_extra": 60, "arith": 60, "qsiev": 60, "fmpq_vec": 60, "fmpq_mat": 60, "fmpq_mpoly_factor": 60, "fmpq_mpoli": 60, "nmod": 60, "nmod_vec": 60, "nmod_mat": 60, "nmod_poly_mat": 60, "nmod_poly_factor": 60, "nmod_mpoli": 60, "nmod_mpoly_factor": 60, "fmpz_mod_vec": 60, "fmpz_mod_mat": 60, "fmpz_mod_poli": 60, "fmpz_mod_poly_factor": 60, "fmpz_mod_mpoli": 60, "fmpz_mod_mpoly_factor": 60, "fq_default_default": 60, "unifi": [60, 88], "fq_mat": 60, "fq_default_mat": 60, "fq_poli": 60, "fq_default_poli": 60, "fq_poly_factor": 60, "fq_default_poly_factor": 60, "embed": 60, "fq_nmod_vec": 60, "fq_nmod_mat": 60, "fq_nmod_poli": 60, "fq_nmod_poly_factor": 60, "fq_nmod_mpoli": 60, "fq_nmod_mpoly_factor": 60, "zech": 60, "fq_zech_vec": 60, "fq_zech_mat": 60, "fq_zech_poli": 60, "fq_zech_poly_factor": 60, "padic_poli": 60, "padic_mat": 60, "qadic": 60, "unramifi": 60, "double_extra": 60, "d_vec": 60, "mpf_vec": 60, "mpf_mat": 60, "mpfr_vec": 60, "mpfr_mat": 60, "capabl": [61, 76], "threadsaf": [61, 65, 70], "kei": 61, "technisch": 61, "universitaet": 61, "kaiserslautern": 61, "inria": 61, "bordeaux": [61, 88], "david": 61, "harvei": 61, "rewritten": 61, "sebastian": 61, "pancratz": 61, "tom": [61, 88], "bachmann": 61, "mike": 61, "hanson": 61, "daniel": 61, "schultz": 61, "andi": 61, "novocin": 61, "great": 61, "toolchain": 61, "arm": 61, "uint64_t": 61, "c99": 61, "complianc": 61, "doc": 61, "rst": 61, "z_sizeinbas": 62, "z_mul_check": 62, "z_randtest": 62, "word_min": [62, 64], "z_randtest_not_zero": 62, "z_randint": 62, "z_kroneck": 62, "umul_ppmm": [63, 91], "high_prod": 63, "low_prod": 63, "multiplicand": 63, "smul_ppmm": 63, "udiv_qrnnd": 63, "high_numer": 63, "low_numer": 63, "sdiv_qrnnd": 63, "63": [63, 91], "count_leading_zero": 63, "msb": 63, "count_trailing_zero": 63, "add_ssaaaa": 63, "high_sum": 63, "low_sum": 63, "high_addend_1": 63, "low_addend_1": 63, "high_addend_2": 63, "low_addend_2": 63, "anywher": 63, "add_sssaaaaaa": 63, "mid_sum": 63, "mid_addend_1": 63, "mid_addend_2": 63, "sub_ddmmss": 63, "high_differ": 63, "low_differ": 63, "high_minuend": 63, "low_minuend": 63, "high_subtrahend": 63, "low_subtrahend": 63, "high_minuend_1": 63, "low_minuend_1": 63, "high_subtrahend_2": 63, "low_subtrahend_2": 63, "sub_dddmmmsss": 63, "high_diff": 63, "mid_diff": 63, "low_diff": 63, "mid_minuend_1": 63, "mid_subtrahend_2": 63, "byte_swap": 63, "invert_limb": 63, "invxl": 63, "xl": 63, "torbjorn": [63, 88], "granlund": [63, 88, 91], "peter": [63, 88], "lemma": 63, "gramon1994": 63, "n_2": 63, "n_1": 63, "n_0": 63, "udiv_qrnnd_preinv": [63, 91], "nh": 63, "nl": 63, "di": 63, "nadj": 63, "n0": 63, "xh": 63, "_q1": 63, "architectur": 64, "flint_d_bit": [64, 91], "whichev": 64, "53": [64, 91], "31": [64, 88, 91], "flint_ab": 64, "int_min": 64, "flint_min": 64, "flint_max": [64, 82], "flint_bit_count": 64, "flint_flog2": 64, "flint_clog2": 64, "__flint_vers": 64, "__flint_minor": 64, "__flint_patchlevel": 64, "__flint_releas": 64, "20400": 64, "flint_vers": 64, "mode": [65, 68, 80, 82, 86, 91], "kept": 65, "flint_cleanup": 65, "regist": 65, "cleanup": 65, "invok": 65, "cleanup_funct": 65, "flint_register_cleanup_funct": 65, "calloc": 65, "__flint_set_memory_funct": 65, "prototyp": 65, "manner": 65, "__flint_get_memory_funct": 65, "address": [65, 91], "alloca": 65, "myfun": 65, "tmp_init": 65, "tmp_start": 65, "tmp_alloc": 65, "tmp_end": 65, "caus": [65, 91], "mpf_mat_init": 66, "mpf_mat_clear": 66, "mpf_mat_set": 66, "mpf_mat_swap": 66, "mpf_mat_swap_entrywis": 66, "mpf_mat_entri": 66, "mpf_mat_zero": 66, "mpf_mat_on": 66, "mpf_mat_randtest": 66, "flint_ranmpf_t": 66, "mpf_mat_print": 66, "mpf_mat_equ": 66, "mpf_mat_approx_equ": 66, "mpf_mat_is_zero": 66, "mpf_mat_is_empti": 66, "mpf_mat_is_squar": 66, "mpf_mat_mul": 66, "mpf_mat_gso": 66, "mpf_mat_qr": 66, "_mpf_vec_init": 67, "_mpf_vec_clear": 67, "_mpf_vec_randtest": 67, "_mpf_vec_zero": 67, "_mpf_vec_set": 67, "_mpf_vec_equ": 67, "_mpf_vec_is_zero": 67, "_mpf_vec_approx_equ": 67, "_mpf_vec_add": 67, "_mpf_vec_sub": 67, "_mpf_vec_scalar_mul_mpf": 67, "_mpf_vec_scalar_mul_2exp": 67, "_mpf_vec_dot": 67, "_mpf_vec_norm": 67, "_mpf_vec_dot2": 67, "_mpf_vec_norm2": 67, "mpfr_mat_init": 68, "mpfr_mat_t": 68, "mpfr_prec_t": 68, "mpfr_mat_clear": 68, "__mpfr_struct": 68, "mpfr_mat_entri": 68, "mpfr_mat_swap": 68, "mpfr_mat_swap_entrywis": 68, "mpfr_mat_set": 68, "mpfr_mat_zero": 68, "mpfr_mat_equ": 68, "mpfr_mat_randtest": 68, "mpfr_mat_mul_class": 68, "flint_mpfr": 69, "_mpfr_vec_init": 69, "_mpfr_vec_clear": 69, "_mpfr_vec_zero": 69, "_mpfr_vec_set": 69, "_mpfr_vec_add": 69, "_mpfr_vec_scalar_mul_mpfr": 69, "_mpfr_vec_scalar_mul_2exp": 69, "_mpfr_vec_scalar_product": 69, "mpn_norm": 70, "mpn_swap": 70, "bn": 70, "flint_mpn_debug": 70, "xsize": 70, "flint_mpn_zero_p": 70, "flint_mpn_fmms1": 70, "a1": 70, "a2": 70, "flint_mpn_divisible_1_p": 70, "flint_mpn_divexact_1": 70, "flint_mpn_remove_2exp": 70, "flint_mpn_remove_power_ascend": 70, "psize": 70, "flint_mpn_factor_tri": 70, "flint_mpn_factor_trial_tre": 70, "flint_mpn_divid": 70, "array1": 70, "limbs1": 70, "arrayg": 70, "limbsg": 70, "flint_mpn_preinv1": 70, "d2": 70, "preinv1": 70, "flint_mpn_divrem_preinv1": 70, "flint_mpn_mulmod_preinv1": 70, "flint_mpn_preinvn": 70, "flint_mpn_mod_preinvn": 70, "flint_mpn_divrem_preinvn": 70, "flint_mpn_mulmod_preinvn": 70, "flint_mpn_gcd_full2": 70, "array2": 70, "limbs2": 70, "retvalu": 70, "flint_mpn_gcd_ful": 70, "flint_mpn_rrandom": 70, "rp": 70, "gmp_randstate_t": 70, "flint_mpn_urandomb": 70, "mpoly_ctx_struct": 71, "mpoly_ctx_t": 71, "mpoly_ctx_init": 71, "mpoly_ctx_clear": 71, "mctx": 71, "mpoly_ordering_randtest": 71, "mpoly_ctx_init_rand": 71, "max_nvar": 71, "mpoly_ordering_isdeg": 71, "deglex": 71, "degrevlex": 71, "mpoly_ordering_isrev": 71, "mpoly_ordering_print": 71, "lex": 71, "mpoly_monomial_add": 71, "exp_ptr": 71, "mpoly_monomial_add_mp": 71, "mpoly_monomial_sub": 71, "mpoly_monomial_sub_mp": 71, "mpoly_monomial_overflow": 71, "mask": 71, "mpoly_monomial_overflows_mp": 71, "mpoly_monomial_overflows1": 71, "mpoly_monomial_set": 71, "mpoly_monomial_swap": 71, "mpoly_monomial_mul_ui": 71, "mpoly_monomial_is_zero": 71, "mpoly_monomial_equ": 71, "mpoly_get_cmpmask": 71, "cmpmask": 71, "mpoly_monomial_lt": 71, "mpoly_monomial_gt": 71, "mpoly_monomial_cmp": 71, "mpoly_monomial_divid": 71, "mpoly_monomial_divides_mp": 71, "mpoly_monomial_divides1": 71, "mpoly_monomial_divides_tight": 71, "e2": 71, "mpoly_exp_bits_required_ui": 71, "user_exp": 71, "mpoly_exp_bits_required_ffmpz": 71, "mpoly_exp_bits_required_pfmpz": 71, "mpoly_max_fields_ui_sp": 71, "max_field": 71, "poly_exp": 71, "mpoly_max_fields_fmpz": 71, "mpoly_max_degrees_tight": 71, "max_exp": 71, "mpoly_monomial_exist": 71, "fals": [71, 91], "mpoly_search_monomi": 71, "e_ind": 71, "e_scor": 71, "t3": 71, "a_len": [71, 76], "b_len": [71, 76], "cross": 71, "e_stor": 71, "workspac": 71, "mpoly_term_exp_fits_ui": 71, "mpoly_term_exp_fits_si": 71, "mpoly_get_monomial_ui": 71, "perspect": [71, 88], "mpoly_get_monomial_ffmpz": 71, "mpoly_get_monomial_pfmpz": 71, "mpoly_set_monomial_ui": 71, "mpoly_set_monomial_ffmpz": 71, "mpoly_set_monomial_pfmpz": 71, "mpoly_pack_vec_ui": 71, "nfield": 71, "mpoly_pack_vec_fmpz": 71, "mpoly_unpack_vec_ui": 71, "mpoly_unpack_vec_fmpz": 71, "mpoly_repack_monomi": 71, "exps1": 71, "exps2": 71, "unsur": 71, "mpoly_pack_monomials_tight": 71, "obvious": 71, "mpoly_unpack_monomials_tight": 71, "mpoly_main_variable_terms1": 71, "l1": 71, "_mpoly_heap_insert": 71, "mpoly_heap_": 71, "heap_len": 71, "head": 71, "_mpoly_heap_insert1": 71, "mpoly_heap1_": 71, "maskhi": 71, "_mpoly_heap_pop": 71, "masklo": 71, "pop": 71, "cast": 71, "_mpoly_heap_pop1": 71, "nmod_init": 72, "nmod_bit": 72, "nmod_can_use_shoup": 72, "precondit": 72, "nmod_red2": 72, "a_hi": [72, 91], "a_lo": [72, 91], "nmod_r": 72, "nmod2_red2": 72, "nmod_red3": 72, "nmod_mul_prenorm": 72, "prenormalis": 72, "nmod_mul_fullword": 72, "nmod_addmul": 72, "_nmod_add": 72, "nmod_add": 72, "_nmod_sub": 72, "nmod_sub": 72, "nmod_neg": 72, "nmod_mul": 72, "_nmod_mul_fullword": 72, "nmod_inv": 72, "nmod_div": 72, "nmod_pow_ui": 72, "nmod_pow_fmpz": 72, "nmod_discrete_log_pohlig_hellman_init": 72, "nmod_discrete_log_pohlig_hellman_t": 72, "nmod_discrete_log_pohlig_hellman_clear": 72, "nmod_discrete_log_pohlig_hellman_precompute_prim": 72, "nmod_discrete_log_pohlig_hellman_primitive_root": 72, "nmod_discrete_log_pohlig_hellman_run": 72, "nmod_mat_struct": 73, "nmod_mat_init": 73, "nmod_mat_init_set": 73, "nmod_mat_clear": 73, "nmod_mat_set": 73, "nmod_mat_swap": 73, "exchang": 73, "nmod_mat_swap_entrywis": 73, "nmod_mat_entri": 73, "nmod_mat_get_entri": 73, "nmod_mat_entry_ptr": 73, "nmod_mat_set_entri": 73, "nmod_mat_nrow": 73, "nmod_mat_ncol": 73, "nmod_mat_zero": 73, "nmod_mat_is_zero": 73, "nmod_mat_window_init": 73, "nmod_mat_window_clear": 73, "nmod_mat_concat_vert": 73, "nmod_mat_concat_horizont": 73, "nmod_mat_print_pretti": 73, "width": [73, 74], "2903": 73, "2607": 73, "622": 73, "nmod_mat_randtest": 73, "nmod_mat_randful": 73, "nmod_mat_randpermdiag": 73, "nmod_mat_randrank": 73, "nmod_mat_randop": 73, "nmod_mat_randtril": 73, "nmod_mat_randtriu": 73, "nmod_mat_equ": 73, "nmod_mat_is_zero_row": 73, "nmod_mat_transpos": 73, "nmod_mat_swap_row": 73, "nmod_mat_swap_col": 73, "nmod_mat_invert_row": 73, "nmod_mat_invert_col": 73, "nmod_mat_add": 73, "nmod_mat_sub": 73, "nmod_mat_neg": 73, "nmod_mat_scalar_mul": 73, "nmod_mat_scalar_addmul_ui": 73, "bY": 73, "nmod_mat_scalar_mul_fmpz": 73, "nmod_mat_mul": 73, "_nmod_mat_mul_classical_op": 73, "nmod_mat_mul_class": 73, "_nmod_mat_mul_classical_threaded_pool_op": 73, "_nmod_mat_mul_class": 73, "_nmod_mat_mul_classical_threaded_op": 73, "nmod_mat_mul_classical_thread": 73, "nmod_mat_mul_strassen": 73, "nmod_mat_mul_bla": 73, "nmod_mat_addmul": 73, "nmod_mat_submul": 73, "nmod_mat_mul_nmod_vec": 73, "nmod_mat_mul_nmod_vec_ptr": 73, "nmod_mat_nmod_vec_mul": 73, "nmod_mat_nmod_vec_mul_ptr": 73, "_nmod_mat_pow": 73, "nmod_mat_pow": 73, "nmod_mat_trac": 73, "nmod_mat_det_howel": 73, "nmod_mat_det": 73, "nmod_mat_rank": 73, "nmod_mat_inv": 73, "nmod_mat_solve_tril": 73, "nmod_mat_solve_tril_class": 73, "nmod_mat_solve_tril_recurs": 73, "nmod_mat_solve_triu": 73, "nmod_mat_solve_triu_class": 73, "nmod_mat_solve_triu_recurs": 73, "nmod_mat_solv": 73, "nmod_mat_can_solve_inn": 73, "nmod_mat_can_solv": 73, "nmod_mat_solve_vec": 73, "nmod_mat_lu": 73, "nmod_mat_lu_class": 73, "nmod_mat_lu_classical_delai": 73, "nmod_mat_lu_recurs": 73, "classical_delai": 73, "nmod_mat_reduce_row": 73, "nmod_mat_nullspac": 73, "nmod_mat_similar": 73, "nmod_mat_charpoly_berkowitz": 73, "nmod_mat_charpoly_danilevski": 73, "nmod_mat_charpoli": 73, "danilevski": 73, "nmod_mat_minpoli": 73, "nmod_mat_strong_echelon_form": 73, "nmod_mat_howell_form": 73, "nmod_mpoly_struct": 74, "nmod_mpoly_ctx_struct": 74, "nmod_mpoly_ctx_t": [74, 75], "nmod_mpoly_ctx_init": 74, "nmod_mpoly_ctx_nvar": 74, "nmod_mpoly_ctx_ord": 74, "nmod_mpoly_ctx_modulu": 74, "nmod_mpoly_ctx_clear": 74, "nmod_mpoly_init": 74, "nmod_mpoly_init2": 74, "nmod_mpoly_init3": 74, "nmod_mpoly_fit_length": 74, "nmod_mpoly_realloc": 74, "nmod_mpoly_clear": 74, "nmod_mpoly_get_str_pretti": 74, "nmod_mpoly_fprint_pretti": 74, "nmod_mpoly_print_pretti": 74, "nmod_mpoly_set_str_pretti": 74, "nmod_mpoly_gen": 74, "nmod_mpoly_is_gen": 74, "nmod_mpoly_set": 74, "nmod_mpoly_equ": 74, "nmod_mpoly_swap": 74, "nmod_mpoly_is_ui": 74, "nmod_mpoly_get_ui": 74, "nmod_mpoly_set_ui": 74, "nmod_mpoly_zero": 74, "nmod_mpoly_on": 74, "nmod_mpoly_equal_ui": 74, "nmod_mpoly_is_zero": 74, "nmod_mpoly_is_on": 74, "nmod_mpoly_degrees_fit_si": 74, "nmod_mpoly_degrees_fmpz": 74, "nmod_mpoly_degrees_si": 74, "nmod_mpoly_degree_fmpz": 74, "nmod_mpoly_degree_si": 74, "nmod_mpoly_total_degree_fits_si": 74, "nmod_mpoly_total_degree_fmpz": 74, "nmod_mpoly_total_degree_si": 74, "nmod_mpoly_used_var": 74, "nmod_mpoly_get_coeff_ui_monomi": 74, "nmod_mpoly_set_coeff_ui_monomi": 74, "nmod_mpoly_get_coeff_ui_fmpz": 74, "nmod_mpoly_get_coeff_ui_ui": 74, "nmod_mpoly_set_coeff_ui_fmpz": 74, "nmod_mpoly_set_coeff_ui_ui": 74, "nmod_mpoly_get_coeff_vars_ui": 74, "nmod_mpoly_cmp": 74, "nmod_mpoly_term_coeff_ref": 74, "nmod_mpoly_is_canon": 74, "nmod_mpoly_length": 74, "nmod_mpoly_res": 74, "nmod_mpoly_get_term_coeff_ui": 74, "nmod_mpoly_set_term_coeff_ui": 74, "nmod_mpoly_term_exp_fits_si": 74, "nmod_mpoly_term_exp_fits_ui": 74, "nmod_mpoly_get_term_exp_fmpz": 74, "nmod_mpoly_get_term_exp_ui": 74, "nmod_mpoly_get_term_exp_si": 74, "nmod_mpoly_get_term_var_exp_ui": 74, "nmod_mpoly_get_term_var_exp_si": 74, "nmod_mpoly_set_term_exp_fmpz": 74, "nmod_mpoly_set_term_exp_ui": 74, "nmod_mpoly_get_term": 74, "nmod_mpoly_get_term_monomi": 74, "nmod_mpoly_push_term_ui_fmpz": 74, "nmod_mpoly_push_term_ui_ui": 74, "nmod_mpoly_sort_term": 74, "nmod_mpoly_combine_like_term": 74, "nmod_mpoly_revers": 74, "nmod_mpoly_randtest_bound": 74, "nmod_mpoly_randtest_bit": 74, "nmod_mpoly_add_ui": 74, "nmod_mpoly_sub_ui": 74, "nmod_mpoly_add": 74, "nmod_mpoly_sub": 74, "nmod_mpoly_neg": 74, "nmod_mpoly_scalar_mul_ui": 74, "nmod_mpoly_make_mon": 74, "nmod_mpoly_deriv": 74, "nmod_mpoly_evaluate_all_ui": 74, "nmod_mpoly_evaluate_one_ui": 74, "nmod_mpoly_compose_nmod_poli": 74, "nmod_mpoly_compose_nmod_mpoly_geobucket": 74, "nmod_mpoly_compose_nmod_mpoly_horn": 74, "nmod_mpoly_compose_nmod_mpoli": 74, "nmod_mpoly_compose_nmod_mpoly_gen": 74, "nmod_mpoly_mul": 74, "nmod_mpoly_mul_johnson": 74, "nmod_mpoly_mul_heap_thread": 74, "nmod_mpoly_mul_arrai": 74, "nmod_mpoly_mul_array_thread": 74, "nmod_mpoly_mul_dens": 74, "nmod_mpoly_pow_fmpz": 74, "nmod_mpoly_pow_ui": 74, "nmod_mpoly_divid": 74, "nmod_mpoly_div": 74, "nmod_mpoly_divrem": 74, "nmod_mpoly_divrem_id": 74, "nmod_mpoly_divides_dens": 74, "nmod_mpoly_divides_monagan_pearc": 74, "nmod_mpoly_divides_heap_thread": 74, "global_thread_pool": 74, "nmod_mpoly_term_cont": 74, "nmod_mpoly_content_var": 74, "nmod_mpoly_gcd": 74, "nmod_mpoly_gcd_cofactor": 74, "nmod_mpoly_gcd_brown": 74, "nmod_mpoly_gcd_hensel": 74, "nmod_mpoly_gcd_zippel": 74, "nmod_mpoly_result": 74, "nmod_mpoly_discrimin": 74, "nmod_mpoly_sqrt": 74, "nmod_mpoly_is_squar": 74, "nmod_mpoly_quadratic_root": 74, "nmod_mpoly_univar_t": 74, "nmod_mpoly_univar_init": 74, "nmod_mpoly_univar_clear": 74, "nmod_mpoly_univar_swap": 74, "nmod_mpoly_to_univar": 74, "nmod_mpoly_from_univar": 74, "nmod_mpoly_univar_degree_fits_si": 74, "nmod_mpoly_univar_length": 74, "nmod_mpoly_univar_get_term_exp_si": 74, "nmod_mpoly_univar_get_term_coeff": 74, "nmod_mpoly_univar_swap_term_coeff": 74, "nmod_mpoly_pow_rmul": 74, "nmod_mpoly_div_monagan_pearc": 74, "nmod_mpoly_divrem_monagan_pearc": 74, "nmod_mpoly_divrem_ideal_monagan_pearc": 74, "nmod_mpoly_factor_struct": 75, "nmod_mpoly_factor_t": 75, "nmod_mpoly_factor_init": 75, "nmod_mpoly_factor_clear": 75, "nmod_mpoly_factor_swap": 75, "nmod_mpoly_factor_length": 75, "nmod_mpoly_factor_get_constant_ui": 75, "nmod_mpoly_factor_get_bas": 75, "nmod_mpoly_factor_swap_bas": 75, "nmod_mpoly_factor_get_exp_si": 75, "nmod_mpoly_factor_sort": 75, "nmod_mpoly_factor_squarefre": 75, "signed_mpn_sub_n": 76, "nmod_poly_init": 76, "nmod_poly_init_preinv": 76, "nmod_poly_init_mod": 76, "nmod_poly_init2": 76, "nmod_poly_init2_preinv": 76, "nmod_poly_realloc": 76, "nmod_poly_clear": 76, "nmod_poly_fit_length": 76, "loss": [76, 80, 82], "_nmod_poly_normalis": 76, "nmod_poly_length": 76, "nmod_poly_degre": 76, "deem": 76, "nmod_poly_modulu": 76, "nmod_poly_max_bit": 76, "nmod_poly_set": 76, "nmod_poly_swap": 76, "nmod_poly_zero": 76, "nmod_poly_trunc": 76, "nmod_poly_set_trunc": 76, "_nmod_poly_revers": 76, "nmod_poly_revers": 76, "nmod_poly_randtest": [76, 78], "nmod_poly_randtest_irreduc": 76, "nmod_poly_randtest_mon": 76, "nmod_poly_randtest_monic_irreduc": 76, "nmod_poly_randtest_monic_primit": 76, "nmod_poly_randtest_trinomi": 76, "nmod_poly_randtest_trinomial_irreduc": 76, "nmod_poly_randtest_pentomi": 76, "nmod_poly_randtest_pentomial_irreduc": 76, "nmod_poly_randtest_sparse_irreduc": 76, "nmod_poly_get_coeff_ui": 76, "nmod_poly_set_coeff_ui": 76, "resiz": [76, 89], "interven": 76, "nmod_poly_get_str": 76, "nmod_poly_get_str_pretti": 76, "nmod_poly_print_pretti": 76, "nmod_poly_set_str": 76, "nmod_poly_fread": 76, "reopen": 76, "nmod_poly_fprint_pretti": 76, "nmod_poly_read": 76, "nmod_poly_equ": 76, "nmod_poly_equal_trunc": 76, "nmod_poly_is_zero": 76, "nmod_poly_is_on": 76, "_nmod_poly_shift_left": 76, "nmod_poly_shift_left": 76, "_nmod_poly_shift_right": 76, "nmod_poly_shift_right": 76, "_nmod_poly_add": 76, "nmod_poly_add": 76, "nmod_poly_add_seri": 76, "_nmod_poly_sub": 76, "nmod_poly_sub": 76, "nmod_poly_sub_seri": 76, "nmod_poly_neg": 76, "nmod_poly_scalar_mul_nmod": 76, "_nmod_poly_make_mon": 76, "nmod_poly_make_mon": 76, "_nmod_poly_bit_pack": 76, "_nmod_poly_bit_unpack": 76, "mpn": 76, "nmod_poly_bit_pack": 76, "nmod_poly_bit_unpack": 76, "_nmod_poly_ks2_pack1": 76, "_nmod_poly_ks2_pack": 76, "_nmod_poly_ks2_unpack1": 76, "_nmod_poly_ks2_unpack": 76, "_nmod_poly_ks2_unpack2": 76, "_nmod_poly_ks2_unpack3": 76, "_nmod_poly_ks2_reduc": 76, "_nmod_poly_ks2_recover_reduce1": 76, "_nmod_poly_ks2_recover_reduc": 76, "_nmod_poly_ks2_recover_reduce2": 76, "_nmod_poly_ks2_recover_reduce2b": 76, "_nmod_poly_ks2_recover_reduce3": 76, "_nmod_poly_mul_class": 76, "nmod_poly_mul_class": 76, "_nmod_poly_mullow_class": 76, "nmod_poly_mullow_class": 76, "_nmod_poly_mulhigh_class": 76, "nmod_poly_mulhigh_class": 76, "_nmod_poly_mul_k": 76, "in1": 76, "in2": 76, "wide": 76, "nmod_poly_mul_k": 76, "_nmod_poly_mul_ks2": 76, "nmod_poly_mul_ks2": 76, "_nmod_poly_mul_ks4": 76, "nmod_poly_mul_ks4": 76, "_nmod_poly_mullow_k": 76, "nmod_poly_mullow_k": 76, "_nmod_poly_mul": 76, "nmod_poly_mul": 76, "_nmod_poly_mullow": 76, "nmod_poly_mullow": 76, "_nmod_poly_mulhigh": 76, "nmod_poly_mulhigh": 76, "_nmod_poly_mulmod": 76, "nmod_poly_mulmod": 76, "_nmod_poly_mulmod_preinv": 76, "nmod_poly_mulmod_preinv": 76, "_nmod_poly_pow_binexp": 76, "nmod_poly_pow_binexp": 76, "_nmod_poly_pow": 76, "nmod_poly_pow": 76, "_nmod_poly_pow_trunc_binexp": 76, "nmod_poly_pow_trunc_binexp": 76, "_nmod_poly_pow_trunc": 76, "nmod_poly_pow_trunc": 76, "_nmod_poly_powmod_ui_binexp": 76, "nmod_poly_powmod_ui_binexp": 76, "_nmod_poly_powmod_mpz_binexp": 76, "mpz_srcptr": 76, "nmod_poly_powmod_mpz_binexp": 76, "_nmod_poly_powmod_fmpz_binexp": 76, "nmod_poly_powmod_fmpz_binexp": 76, "_nmod_poly_powmod_ui_binexp_preinv": 76, "nmod_poly_powmod_ui_binexp_preinv": 76, "_nmod_poly_powmod_mpz_binexp_preinv": 76, "nmod_poly_powmod_mpz_binexp_preinv": 76, "_nmod_poly_powmod_fmpz_binexp_preinv": 76, "nmod_poly_powmod_fmpz_binexp_preinv": 76, "_nmod_poly_powmod_x_ui_preinv": 76, "nmod_poly_powmod_x_ui_preinv": 76, "_nmod_poly_powmod_x_fmpz_preinv": 76, "nmod_poly_powmod_x_fmpz_preinv": 76, "_nmod_poly_powers_mod_preinv_na": 76, "nmod_poly_powers_mod_na": 76, "_nmod_poly_powers_mod_preinv_threaded_pool": 76, "_nmod_poly_powers_mod_preinv_thread": 76, "nmod_poly_powers_mod_bsg": 76, "_nmod_poly_divrem_basecas": 76, "nmod_divrem_bc_itch": 76, "nmod_poly_divrem_basecas": 76, "_nmod_poly_div_basecas": 76, "nmod_div_bc_itch": 76, "nmod_poly_div_basecas": 76, "_nmod_poly_divrem_divconquer_recurs": 76, "nmod_divrem_dc_itch": 76, "_nmod_poly_divrem_divconqu": 76, "nmod_poly_divrem_divconqu": 76, "_nmod_poly_divrem_q0": 76, "_nmod_poly_divrem_q1": 76, "_nmod_poly_divrem": 76, "nmod_poly_divrem": 76, "_nmod_poly_div_divconquer_recurs": 76, "nmod_div_dc_itch": 76, "_nmod_poly_div_divconqu": 76, "nmod_poly_div_divconqu": 76, "_nmod_poly_div": 76, "nmod_poly_div": 76, "_nmod_poly_rem_basecas": 76, "nmod_poly_rem_basecas": 76, "_nmod_poly_rem_q1": 76, "_nmod_poly_rem": 76, "nmod_poly_rem": 76, "_nmod_poly_inv_series_basecas": 76, "nmod_poly_inv_series_basecas": 76, "_nmod_poly_inv_series_newton": 76, "nmod_poly_inv_series_newton": 76, "_nmod_poly_inv_seri": 76, "qlenn": 76, "nmod_poly_inv_seri": 76, "_nmod_poly_div_series_basecas": 76, "nmod_poly_div_series_basecas": 76, "_nmod_poly_div_seri": 76, "nmod_poly_div_seri": 76, "_nmod_poly_div_newton": 76, "nmod_poly_div_newton": 76, "_nmod_poly_div_newton_n_preinv": 76, "nmod_poly_div_newton_n_preinv": 76, "_nmod_poly_divrem_newton": 76, "nmod_poly_divrem_newton": 76, "_nmod_poly_divrem_newton_n_preinv": 76, "nmod_poly_divrem_newton_n_preinv": 76, "_nmod_poly_div_root": 76, "nmod_poly_div_root": 76, "_nmod_poly_divides_class": 76, "nmod_poly_divides_class": 76, "_nmod_poly_divid": 76, "nmod_poly_divid": 76, "_nmod_poly_deriv": 76, "x_prime": 76, "nmod_poly_deriv": 76, "_nmod_poly_integr": 76, "x_int": 76, "nmod_poly_integr": 76, "indefinit": 76, "_nmod_poly_evaluate_nmod": 76, "nmod_poly_evaluate_nmod": 76, "nmod_poly_evaluate_mat_horn": 76, "nmod_poly_evaluate_mat_paterson_stockmey": 76, "paterson": [76, 88], "stockmey": [76, 88], "paterson1973": [76, 88], "nmod_poly_evaluate_mat": 76, "_nmod_poly_evaluate_nmod_vec_it": 76, "nmod_poly_evaluate_nmod_vec_it": 76, "_nmod_poly_evaluate_nmod_vec_fast_precomp": 76, "_nmod_poly_evaluate_nmod_vec_fast": 76, "nmod_poly_evaluate_nmod_vec_fast": 76, "_nmod_poly_evaluate_nmod_vec": 76, "nmod_poly_evaluate_nmod_vec": 76, "_nmod_poly_interpolate_nmod_vec": 76, "nmod_poly_interpolate_nmod_vec": 76, "_nmod_poly_interpolation_weight": 76, "barycentr": 76, "_nmod_poly_interpolate_nmod_vec_fast_precomp": 76, "_nmod_poly_interpolate_nmod_vec_fast": 76, "nmod_poly_interpolate_nmod_vec_fast": 76, "_nmod_poly_interpolate_nmod_vec_newton": 76, "nmod_poly_interpolate_nmod_vec_newton": 76, "_nmod_poly_interpolate_nmod_vec_barycentr": 76, "nmod_poly_interpolate_nmod_vec_barycentr": 76, "_nmod_poly_compose_horn": 76, "nmod_poly_compose_horn": 76, "_nmod_poly_compose_divconqu": 76, "nmod_poly_compose_divconqu": 76, "_nmod_poly_compos": 76, "nmod_poly_compos": 76, "_nmod_poly_taylor_shift_horn": 76, "nmod_poly_taylor_shift_horn": 76, "_nmod_poly_taylor_shift_convolut": 76, "convolut": 76, "nmod_poly_taylor_shift_convolut": 76, "_nmod_poly_taylor_shift": 76, "nmod_poly_taylor_shift": 76, "_nmod_poly_compose_mod_horn": 76, "nmod_poly_compose_mod_horn": 76, "_nmod_poly_compose_mod_brent_kung": 76, "nmod_poly_compose_mod_brent_kung": 76, "_nmod_poly_compose_mod_brent_kung_preinv": 76, "nmod_poly_compose_mod_brent_kung_preinv": 76, "_nmod_poly_reduce_matrix_mod_poli": 76, "_nmod_poly_precompute_matrix_work": 76, "_nmod_poly_precompute_matrix": 76, "nmod_poly_matrix_precompute_arg_t": 76, "nmod_poly_precompute_matrix": 76, "_nmod_poly_compose_mod_brent_kung_precomp_preinv_work": 76, "_nmod_poly_compose_mod_brent_kung_precomp_preinv": 76, "nmod_poly_compose_mod_precomp_preinv_arg_t": 76, "nmod_poly_compose_mod_brent_kung_precomp_preinv": 76, "_nmod_poly_compose_mod_brent_kung_vec_preinv": 76, "nmod_poly_compose_mod_brent_kung_vec_preinv": 76, "_nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool": 76, "nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool": 76, "nmod_poly_compose_mod_brent_kung_vec_preinv_thread": 76, "_nmod_poly_compose_mod": 76, "nmod_poly_compose_mod": 76, "_nmod_poly_gcd_euclidean": 76, "nmod_poly_gcd_euclidean": 76, "_nmod_poly_hgcd": 76, "_nmod_poly_gcd_hgcd": 76, "nmod_poly_gcd_hgcd": 76, "_nmod_poly_gcd": 76, "nmod_poly_gcd": 76, "_nmod_poly_xgcd_euclidean": 76, "nmod_poly_xgcd_euclidean": 76, "_nmod_poly_xgcd_hgcd": 76, "nmod_poly_xgcd_hgcd": 76, "_nmod_poly_xgcd": 76, "nmod_poly_xgcd": 76, "_nmod_poly_resultant_euclidean": 76, "nmod_poly_resultant_euclidean": 76, "_nmod_poly_resultant_hgcd": 76, "nmod_poly_resultant_hgcd": 76, "_nmod_poly_result": 76, "nmod_poly_result": 76, "_nmod_poly_gcdinv": 76, "nmod_poly_gcdinv": 76, "_nmod_poly_invmod": 76, "nmod_poly_invmod": 76, "_nmod_poly_discrimin": 76, "nmod_poly_discrimin": 76, "_nmod_poly_compose_series_horn": 76, "nmod_poly_compose_series_horn": 76, "_nmod_poly_compose_series_brent_kung": 76, "nmod_poly_compose_series_brent_kung": 76, "_nmod_poly_compose_series_divconqu": 76, "ell_1": 76, "ell_2": 76, "nmod_poly_compose_series_divconqu": 76, "_nmod_poly_compose_seri": 76, "nmod_poly_compose_seri": 76, "_nmod_poly_revert_series_lagrang": 76, "nmod_poly_revert_series_lagrang": 76, "_nmod_poly_revert_series_lagrange_fast": 76, "nmod_poly_revert_series_lagrange_fast": 76, "_nmod_poly_revert_series_newton": 76, "nmod_poly_revert_series_newton": 76, "_nmod_poly_revert_seri": 76, "nmod_poly_revert_seri": 76, "_nmod_poly_invsqrt_seri": 76, "nmod_poly_invsqrt_seri": 76, "_nmod_poly_sqrt_seri": 76, "nmod_poly_sqrt_seri": 76, "_nmod_poly_sqrt": 76, "nmod_poly_sqrt": 76, "_nmod_poly_power_sums_na": 76, "nmod_poly_power_sums_na": 76, "_nmod_poly_power_sums_schoenhag": 76, "nmod_poly_power_sums_schoenhag": 76, "_nmod_poly_power_sum": 76, "nmod_poly_power_sum": 76, "_nmod_poly_power_sums_to_poly_na": 76, "nmod_poly_power_sums_to_poly_na": 76, "_nmod_poly_power_sums_to_poly_schoenhag": 76, "nmod_poly_power_sums_to_poly_schoenhag": 76, "_nmod_poly_power_sums_to_poli": 76, "nmod_poly_power_sums_to_poli": 76, "int_0": 76, "dt": 76, "atan": 76, "atanh": 76, "asin": 76, "asinh": 76, "tan": 76, "_nmod_poly_log_series_monomial_ui": 76, "cx": 76, "nmod_poly_log_series_monomial_ui": 76, "_nmod_poly_log_seri": 76, "nmod_poly_log_seri": 76, "_nmod_poly_exp_series_monomial_ui": 76, "nmod_poly_exp_series_monomial_ui": 76, "_nmod_poly_exp_series_basecas": 76, "nmod_poly_exp_series_basecas": 76, "_nmod_poly_exp_seri": 76, "hanzim2004": [76, 88], "basecas": [76, 90], "_nmod_poly_exp_expinv_seri": 76, "nmod_poly_exp_seri": 76, "_nmod_poly_atan_seri": 76, "nmod_poly_atan_seri": 76, "_nmod_poly_atanh_seri": 76, "nmod_poly_atanh_seri": 76, "_nmod_poly_asin_seri": 76, "nmod_poly_asin_seri": 76, "_nmod_poly_asinh_seri": 76, "nmod_poly_asinh_seri": 76, "_nmod_poly_sin_seri": 76, "nmod_poly_sin_seri": 76, "_nmod_poly_cos_seri": 76, "nmod_poly_cos_seri": 76, "_nmod_poly_tan_seri": 76, "nmod_poly_tan_seri": 76, "_nmod_poly_sinh_seri": 76, "nmod_poly_sinh_seri": 76, "_nmod_poly_cosh_seri": 76, "nmod_poly_cosh_seri": 76, "_nmod_poly_tanh_seri": 76, "tanh": 76, "nmod_poly_tanh_seri": 76, "_nmod_poly_product_roots_nmod_vec": 76, "nmod_poly_product_roots_nmod_vec": 76, "nmod_poly_find_distinct_nonzero_root": 76, "_nmod_poly_tree_alloc": 76, "illustr": 76, "xx1": 76, "xxxx1": 76, "xxxxxxx1": 76, "_nmod_poly_tree_fre": 76, "_nmod_poly_tree_build": 76, "nmod_poly_infl": 76, "nmod_poly_defl": 76, "nmod_poly_multi_crt_init": 76, "nmod_poly_multi_crt_t": 76, "nmod_poly_multi_crt_precomput": 76, "nmod_poly_multi_crt_precompute_p": 76, "nmod_poly_multi_crt_precomp": 76, "nmod_poly_multi_crt_precomp_p": 76, "nmod_poly_multi_crt": 76, "nmod_poly_multi_crt_clear": 76, "_nmod_poly_multi_crt_local_s": 76, "_nmod_poly_multi_crt_run": 76, "_nmod_poly_multi_crt_run_p": 76, "nmod_berlekamp_massey_t": 76, "nmod_berlekamp_massey_reduc": 76, "nmod_berlekamp_massey_v_poli": 76, "nmod_berlekamp_massey_r_poli": 76, "nmod_berlekamp_massey_init": 76, "nmod_berlekamp_massey_clear": 76, "nmod_berlekamp_massey_start_ov": 76, "nmod_berlekamp_massey_set_prim": 76, "nmod_berlekamp_massey_add_point": 76, "nmod_berlekamp_massey_add_zero": 76, "nmod_berlekamp_massey_point_count": 76, "nmod_berlekamp_massey_point": 76, "nmod_poly_factor_struct": 77, "nmod_poly_factor_init": 77, "nmod_poly_factor_clear": 77, "nmod_poly_factor_realloc": 77, "nmod_poly_factor_fit_length": 77, "nmod_poly_factor_set": 77, "nmod_poly_factor_print": 77, "nmod_poly_factor_insert": 77, "nmod_poly_factor_concat": 77, "nmod_poly_factor_pow": 77, "nmod_poly_remov": 77, "nmod_poly_is_irreduc": 77, "nmod_poly_is_irreducible_ddf": 77, "nmod_poly_is_irreducible_rabin": 77, "_nmod_poly_is_squarefre": 77, "nmod_poly_is_squarefre": 77, "nmod_poly_factor_squarefre": 77, "nmod_poly_factor_equal_deg_prob": 77, "nmod_poly_factor_equal_deg": 77, "nmod_poly_factor_distinct_deg": 77, "nmod_poly_factor_distinct_deg_thread": 77, "nmod_poly_factor_cantor_zassenhau": 77, "nmod_poly_factor_berlekamp": 77, "nmod_poly_factor_kaltofen_shoup": 77, "nmod_poly_factor_with_berlekamp": 77, "nmod_poly_factor_with_cantor_zassenhau": 77, "nmod_poly_factor_with_kaltofen_shoup": 77, "_nmod_poly_interval_poly_work": 77, "nmod_poly_interval_poly_arg_t": 77, "nmod_poly_mat_struct": 78, "nmod_poly_mat_t": 78, "nmod_poly_mat_init": 78, "nmod_poly_mat_init_set": 78, "nmod_poly_mat_clear": 78, "nmod_poly_mat_nrow": 78, "nmod_poly_mat_ncol": 78, "nmod_poly_mat_modulu": 78, "nmod_poly_mat_entri": 78, "nmod_poly_mat_set": 78, "nmod_poly_mat_swap": 78, "nmod_poly_mat_swap_entrywis": 78, "nmod_poly_mat_print": 78, "nmod_poly_mat_randtest": 78, "nmod_poly_mat_randtest_spars": 78, "nmod_poly_mat_zero": 78, "nmod_poly_mat_on": 78, "nmod_poly_mat_equ": 78, "nmod_poly_mat_is_zero": 78, "nmod_poly_mat_is_on": 78, "nmod_poly_mat_is_empti": 78, "nmod_poly_mat_is_squar": 78, "nmod_poly_mat_max_length": 78, "nmod_poly_mat_evaluate_nmod": 78, "nmod_poly_mat_scalar_mul_nmod_poli": 78, "nmod_poly_mat_scalar_mul_nmod": 78, "nmod_poly_mat_add": 78, "nmod_poly_mat_sub": 78, "nmod_poly_mat_neg": 78, "nmod_poly_mat_mul": 78, "nmod_poly_mat_mul_class": 78, "nmod_poly_mat_mul_k": 78, "nmod_poly_mat_mul_interpol": 78, "nmod_poly_mat_sqr": 78, "nmod_poly_mat_sqr_class": 78, "nmod_poly_mat_sqr_k": 78, "nmod_poly_mat_sqr_interpol": 78, "nmod_poly_mat_pow": 78, "nmod_poly_mat_find_pivot_ani": 78, "nmod_poly_mat_find_pivot_parti": 78, "nmod_poly_mat_fflu": 78, "nmod_poly_mat_rref": 78, "nmod_poly_mat_trac": 78, "nmod_poly_mat_det": 78, "nmod_poly_mat_det_fflu": 78, "nmod_poly_mat_det_interpol": 78, "nmod_poly_mat_rank": 78, "nmod_poly_mat_inv": 78, "nmod_poly_mat_nullspac": 78, "nmod_poly_mat_solv": 78, "nmod_poly_mat_solve_fflu": 78, "nmod_poly_mat_solve_fflu_precomp": 78, "_nmod_vec_init": 79, "_nmod_vec_clear": 79, "_nmod_vec_randtest": 79, "_nmod_vec_set": 79, "_nmod_vec_zero": 79, "_nmod_vec_swap": 79, "_nmod_vec_reduc": 79, "_nmod_vec_max_bit": 79, "_nmod_vec_equ": 79, "_nmod_vec_add": 79, "_nmod_vec_sub": 79, "_nmod_vec_neg": 79, "_nmod_vec_scalar_mul_nmod": 79, "_nmod_vec_scalar_mul_nmod_shoup": 79, "n_mulmod_shoup": [79, 91], "_nmod_vec_scalar_addmul_nmod": 79, "_nmod_vec_dot_bound_limb": 79, "nmod_vec_dot": 79, "expr1": 79, "expr2": 79, "nlimb": 79, "_nmod_vec_dot": 79, "_nmod_vec_dot_rev": 79, "_nmod_vec_dot_ptr": 79, "padic_t": [80, 81, 82, 86], "piec": 80, "nmid": 80, "semant": 80, "padic_unit": 80, "padic_v": 80, "lvalu": [80, 82], "rvalu": [80, 82], "padic_get_v": 80, "padic_prec": 80, "padic_get_prec": 80, "pertin": 80, "padic_ctx_init": 80, "padic_ctx_t": [80, 81, 82, 86], "enum": [80, 86], "padic_print_mod": [80, 86], "verifi": 80, "padic_ters": [80, 82, 86], "padic_seri": [80, 82, 86], "padic_val_unit": [80, 82, 86], "_7": 80, "padic_ctx_clear": 80, "_padic_ctx_pow_ui": 80, "padic_init": 80, "padic_default_prec": [80, 81, 82], "padic_init2": 80, "padic_clear": 80, "_padic_canonicalis": 80, "_padic_reduc": 80, "padic_reduc": 80, "padic_randtest": 80, "padic_randtest_not_zero": 80, "padic_randtest_int": 80, "padic_set": 80, "padic_set_si": 80, "padic_set_ui": 80, "padic_set_fmpz": 80, "padic_set_fmpq": 80, "padic_set_mpz": 80, "padic_set_mpq": 80, "padic_get_fmpz": 80, "padic_get_fmpq": 80, "padic_get_mpz": 80, "padic_get_mpq": 80, "padic_swap": 80, "padic_zero": 80, "padic_on": 80, "padic_is_zero": 80, "padic_is_on": 80, "padic_equ": 80, "u_1": 80, "u_2": 80, "_padic_lifts_exp": 80, "_padic_lifts_pow": 80, "padic_add": 80, "padic_sub": 80, "padic_neg": 80, "padic_mul": 80, "padic_shift": 80, "padic_div": 80, "_padic_inv_precomput": 80, "padic_inv_t": 80, "_padic_inv_clear": 80, "_padic_inv_precomp": 80, "padic_log": 80, "_padic_inv": 80, "padic_inv": 80, "padic_sqrt": 80, "padic_rop": 80, "padic_pow_si": 80, "_padic_exp_bound": 80, "_padic_exp_rectangular": 80, "_padic_exp_balanc": 80, "_padic_exp": 80, "padic_exp": 80, "exp_p": 80, "padic_exp_rectangular": 80, "rectangular": 80, "padic_exp_balanc": 80, "rate": 80, "quasi": [80, 86], "_padic_log_bound": 80, "_padic_log": 80, "_padic_log_rectangular": 80, "_padic_log_satoh": 80, "_padic_log_balanc": 80, "log_p": [80, 86], "padic_log_rectangular": 80, "padic_log_satoh": 80, "satoh": 80, "skjernaa": 80, "taguchi": 80, "padic_log_balanc": 80, "_padic_teichmul": 80, "teichm": [80, 86], "uller": [80, 86], "padic_teichmul": 80, "clearli": 80, "st": 80, "padic_val_fac_ui_2": 80, "padic_val_fac_ui": 80, "padic_val_fac": 80, "padic_get_str": 80, "_padic_fprint": 80, "padic_fprint": 80, "_padic_print": 80, "padic_print": 80, "padic_debug": 80, "padic_mat_t": 81, "padic_mat_entri": 81, "padic_mat_v": 81, "padic_mat_prec": 81, "padic_mat_get_v": 81, "padic_mat_get_prec": 81, "padic_mat_nrow": 81, "padic_mat_ncol": 81, "padic_mat_init": 81, "padic_mat_init2": 81, "padic_mat_clear": 81, "_padic_mat_canonicalis": 81, "_padic_mat_reduc": 81, "padic_mat_reduc": 81, "padic_mat_is_empti": 81, "padic_mat_is_squar": 81, "padic_mat_is_canon": 81, "padic_mat_set": 81, "padic_mat_swap": 81, "padic_mat_swap_entrywis": 81, "padic_mat_zero": 81, "padic_mat_on": 81, "padic_mat_set_fmpq_mat": 81, "padic_mat_get_fmpq_mat": 81, "specif": [81, 82, 90], "readili": 81, "padic_mat_get_entry_pad": 81, "padic_mat_set_entry_pad": 81, "padic_mat_equ": 81, "padic_mat_is_zero": 81, "padic_mat_fprint": 81, "padic_mat_fprint_pretti": 81, "padic_mat_print": 81, "padic_mat_print_pretti": 81, "padic_mat_randtest": 81, "padic_mat_transpos": 81, "_padic_mat_add": 81, "padic_mat_add": 81, "_padic_mat_sub": 81, "padic_mat_sub": 81, "_padic_mat_neg": 81, "padic_mat_neg": 81, "_padic_mat_scalar_mul_pad": 81, "padic_mat_scalar_mul_pad": 81, "_padic_mat_scalar_mul_fmpz": 81, "padic_mat_scalar_mul_fmpz": 81, "padic_mat_scalar_div_fmpz": 81, "_padic_mat_mul": 81, "padic_mat_mul": 81, "padic_poly_init": 82, "padic_poly_t": [82, 86], "padic_poly_clear": 82, "padic_poly_init2": 82, "padic_poly_realloc": 82, "padic_poly_fit_length": 82, "_padic_poly_set_length": 82, "slonger": 82, "_padic_poly_normalis": 82, "_padic_poly_canonicalis": 82, "padic_poly_canonicalis": 82, "padic_poly_reduc": 82, "padic_poly_trunc": 82, "padic_poly_degre": 82, "padic_poly_length": 82, "padic_poly_v": 82, "padic_poly_prec": 82, "padic_poly_randtest": 82, "padic_poly_randtest_not_zero": 82, "padic_poly_randtest_v": 82, "prescrib": [82, 86], "padic_poly_set_pad": 82, "padic_poly_set": 82, "padic_poly_set_si": 82, "padic_poly_set_ui": 82, "padic_poly_set_fmpz": 82, "padic_poly_set_fmpq": 82, "padic_poly_set_fmpz_poli": 82, "padic_poly_set_fmpq_poli": 82, "padic_poly_get_fmpz_poli": 82, "padic_poly_get_fmpq_poli": 82, "padic_poly_zero": 82, "padic_poly_on": 82, "padic_poly_swap": 82, "padic_poly_get_coeff_pad": 82, "padic_poly_set_coeff_pad": 82, "padic_poly_equ": 82, "padic_poly_is_zero": 82, "padic_poly_is_on": 82, "account": 82, "_padic_poly_add": 82, "rval": 82, "val1": 82, "val2": 82, "padic_poly_add": 82, "_padic_poly_sub": 82, "padic_poly_sub": 82, "padic_poly_neg": 82, "_padic_poly_scalar_mul_pad": 82, "padic_poly_scalar_mul_pad": 82, "_padic_poly_mul": 82, "padic_poly_mul": 82, "_padic_poly_pow": 82, "padic_poly_pow": 82, "padic_poly_inv_seri": 82, "_padic_poly_deriv": 82, "padic_poly_deriv": 82, "padic_poly_shift_left": 82, "padic_poly_shift_right": 82, "_padic_poly_evaluate_pad": 82, "padic_poly_evaluate_pad": 82, "_padic_poly_compos": 82, "padic_poly_compos": 82, "_padic_poly_compose_pow": 82, "padic_poly_compose_pow": 82, "padic_poly_debug": 82, "_padic_poly_fprint": 82, "padic_poly_fprint": 82, "_padic_poly_print": 82, "padic_poly_print": 82, "_padic_poly_fprint_pretti": 82, "padic_poly_fprint_pretti": 82, "_padic_poly_print_pretti": 82, "padic_poly_print_pretti": 82, "_padic_poly_is_canon": 82, "padic_poly_is_canon": 82, "_padic_poly_is_reduc": 82, "padic_poly_is_reduc": 82, "_perm_init": 83, "_perm_clear": 83, "_perm_set": 83, "_perm_set_on": 83, "_perm_inv": 83, "_perm_compos": 83, "pi_1": 83, "circ": [83, 90], "pi_2": 83, "_perm_par": 83, "_perm_randtest": 83, "shuffl": 83, "retri": 83, "_perm_print": 83, "code_convent": 84, "ld": 84, "wu": 84, "wd": [84, 85], "123ul": 84, "123l": 84, "uword": 84, "123": 84, "uword_max": 84, "timeit_start": 85, "timeit_t": 85, "timeit_stop": 85, "wall": 85, "stuff": 85, "start_clock": 85, "stop_clock": 85, "get_clock": 85, "processor": [85, 91], "flint_clockspe": 85, "get_cycle_count": 85, "clock": 85, "init_all_clock": 85, "alter": [85, 90], "flint_num_clock": 85, "init_clock": 85, "prof_repeat": 85, "profile_target_t": 85, "arg": [85, 90], "myfunc": 85, "typedef": [85, 86, 90], "myfunc_t": 85, "sample_myfunc": 85, "param": 85, "prof_start": 85, "prof_stop": 85, "lf": 85, "microsecond": 85, "duration_threshold": 85, "durat": 85, "duration_target": 85, "get_memory_usag": 85, "meminfo_t": 85, "meminfo": 85, "slot": 85, "peak": 85, "rss": 85, "hwm": 85, "kilobyt": 85, "1024": 85, "timeit_repeat": 85, "rep": 85, "timeit_end_repeat": 85, "marker": 85, "repetit": 85, "elaps": 85, "resolut": 85, "predefin": 85, "timeit_once_start": 85, "timeit_once_stop": 85, "show_memory_usag": 85, "qadic_struct": 86, "qadic_t": 86, "ed": [86, 91], "padic_poly_struct": 86, "pctx": 86, "j_": 86, "qadic_ctx_init": 86, "qadic_ctx_t": 86, "qadic_ctx_init_conwai": 86, "qadic_ctx_clear": 86, "qadic_ctx_degre": 86, "qadic_ctx_print": 86, "qadic_init": 86, "qadic_init2": 86, "qadic_clear": 86, "_fmpz_poly_reduc": 86, "_fmpz_mod_poly_reduc": 86, "qadic_reduc": 86, "qadic_v": 86, "qadic_prec": 86, "qadic_randtest": 86, "qadic_randtest_not_zero": 86, "qadic_randtest_v": 86, "qadic_randtest_int": 86, "qadic_set": 86, "qadic_zero": 86, "qadic_on": 86, "qadic_gen": 86, "qadic_set_ui": 86, "qadic_get_pad": 86, "li": 86, "qadic_is_zero": 86, "qadic_is_on": 86, "qadic_equ": 86, "qadic_add": 86, "qadic_sub": 86, "qadic_neg": 86, "qadic_mul": 86, "_qadic_inv": 86, "qadic_inv": 86, "_qadic_pow": 86, "qadic_pow": 86, "qadic_sqrt": 86, "_qadic_exp_rectangular": 86, "pn": 86, "qadic_exp_rectangular": 86, "_qadic_exp_balanc": 86, "qadic_exp_balanc": 86, "_qadic_exp": 86, "qadic_exp": 86, "_qadic_log_rectangular": 86, "qadic_log_rectangular": 86, "_qadic_log_balanc": 86, "qadic_log_balanc": 86, "_qadic_log": 86, "qadic_log": 86, "_qadic_frobenius_a": 86, "_qadic_frobeniu": 86, "qadic_frobeniu": 86, "galoisimag": 86, "magma": 86, "_qadic_teichmul": 86, "qadic_teichmul": 86, "_qadic_trac": 86, "qadic_trac": 86, "_qadic_norm": 86, "qadic_norm": 86, "qadic_norm_analyt": 86, "qadic_norm_result": 86, "qadic_fprint_pretti": 86, "qadic_print_pretti": 86, "qsieve_knuth_schroeppel": 87, "qs_t": 87, "qs_inf": 87, "schroeppel": 87, "qsieve_primes_init": 87, "kn": 87, "qsieve_primes_incr": 87, "qsieve_init_a0": 87, "_0": 87, "plenti": 87, "130": [87, 88], "qsieve_next_a0": 87, "candid": 87, "lexicograph": 87, "qsieve_compute_pre_data": 87, "go": [87, 89, 91], "qsieve_init_poly_first": 87, "grei": 87, "qsieve_init_poly_next": 87, "qsieve_compute_c": 87, "qsieve_do_siev": 87, "soln1": 87, "soln2": 87, "qsieve_do_sieving2": 87, "task": 87, "qsieve_evaluate_candid": 87, "threshold": 87, "qsieve_evaluate_siev": 87, "scan": 87, "qsieve_collect_rel": 87, "hypercub": 87, "qsieve_write_to_fil": 87, "hash_t": 87, "qsieve_get_table_entri": 87, "hash": 87, "qsieve_add_to_hasht": 87, "hast": 87, "relation_t": 87, "qsieve_parse_rel": 87, "qsieve_merge_rel": 87, "merg": [87, 90], "qsieve_compare_rel": 87, "qsieve_remove_dupl": 87, "rel_list": 87, "num_rel": 87, "duplic": 87, "qsieve_insert_relation2": 87, "qsieve_process_rel": 87, "singleton": 87, "qsieve_factor": 87, "determinist": 88, "acm": 88, "symposium": 88, "1999": 88, "springer": 88, "arnold": 88, "andrew": 88, "80": 88, "276": 88, "2011": 88, "2359": 88, "2379": 88, "robert": 88, "samuel": 88, "wagstaff": [88, 91], "jr": 88, "octob": 88, "1980": 88, "pseudoprim": [88, 91], "35": 88, "152": 88, "1391": 88, "1417": 88, "berend": 88, "tassa": 88, "bell": 88, "moment": 88, "statist": 88, "2010": 88, "185": 88, "205": 88, "marco": 88, "suit": 88, "proceed": 88, "issac": 88, "m\u00fcnchen": 88, "germani": 88, "28": 88, "1978": 88, "581": 88, "595": 88, "buhler": 88, "crandal": 88, "sompolski": 88, "irregular": 88, "comp": 88, "59": 88, "2000": 88, "1992": 88, "717": 88, "722": 88, "chen2003": [88, 91], "zhuo": 88, "chen": 88, "john": 88, "green": 88, "comment": [88, 91], "quaterli": 88, "41": 88, "2003": 88, "334": 88, "344": 88, "henri": 88, "collin": 88, "georg": 88, "symsac": 88, "71": 88, "1971": 88, "212": 88, "222": 88, "crapom2005": [88, 91], "carl": 88, "pomer": [88, 91], "2005": 88, "deleglis": 88, "marc": 88, "nicla": 88, "jean": 88, "loui": 88, "zimmermann": 88, "paul": 88, "billion": 88, "eor": 88, "nombr": 88, "2009": 88, "625": 88, "671": 88, "1987": 88, "50": 88, "dus1999": [88, 91], "dusart": [88, 91], "kth": 88, "ln": [88, 91], "68": 88, "januari": 88, "411": 88, "415": 88, "fieker": 88, "hofmann": 88, "lm": 88, "17": [88, 91], "349": 88, "365": 88, "gramol2010": [88, 91], "niel": 88, "moller": 88, "invari": [88, 91], "gmplib": 88, "tege": 88, "gowwag2008": [88, 91], "jason": 88, "gower": [88, 91], "sam": 88, "77": 88, "2008": 88, "551": 88, "588": 88, "doi": 88, "1090": 88, "s0025": 88, "5718": 88, "07": 88, "02010": 88, "guillaum": 88, "hanrot": 88, "revisit": 88, "2004": 88, "loria": 88, "fr": 88, "zimmerma": 88, "fastnewton": 88, "gz": 88, "har2012": [88, 91], "2012": 88, "australian": 88, "societi": 88, "volum": 88, "69": 88, "abelian": 88, "smith": 88, "siam": 88, "18": 88, "1989": 88, "658": 88, "1979": 88, "499": 88, "507": 88, "kahan1991": [88, 91], "kahan": [88, 91], "cube": [88, 91], "csclub": 88, "uwaterloo": 88, "pbarfuss": 88, "qbrt": 88, "luke": 88, "patterson": 88, "65": [88, 91], "361": 88, "372": 88, "masrob1996": [88, 91], "massia": [88, 91], "robin": [88, 91], "born": 88, "pour": 88, "fonction": 88, "premier": 88, "215": 88, "242": 88, "nako": 88, "turner": 88, "sigsam": 88, "bull": 88, "thom": 88, "mulder": 88, "aaecc": 88, "88": 88, "larri": 88, "nonscalar": 88, "1973": 88, "1675": 88, "1683": 88, "han": 88, "proc": 88, "london": 88, "soc": 88, "43": 88, "1937": 88, "241": 88, "254": 88, "rossch1962": [88, 91], "rosser": [88, 91], "barklei": 88, "schoenfeld": [88, 91], "lowel": 88, "illinoi": 88, "1962": 88, "sorenson": 88, "jonathan": 88, "webster": 88, "twelv": 88, "86": 88, "2017": 88, "985": 88, "1003": 88, "mcom": 88, "3134": 88, "stehl": 88, "damien": 88, "aspect": 88, "nguyen": 88, "phong": 88, "vall": 88, "ee": 88, "brigitt": 88, "survei": 88, "179": 88, "213": 88, "american": 88, "2007": 88, "arn": 88, "esa": 88, "98": 88, "venic": 88, "lectur": 88, "sci": 88, "1461": 88, "139": 88, "thull": 88, "yap": 88, "1990": 88, "gill": 88, "certif": [88, 91], "reduced": 88, "368": 88, "press": 88, "watkin": 88, "zeitlin": 88, "2pi": 88, "monthli": 88, "1993": 88, "471": 88, "474": 88, "whiteman": 88, "connect": 88, "pacif": 88, "1956": 88, "159": 88, "176": 88, "thread_pool_t": 89, "thread_pool_init": 89, "sleep": 89, "thread_pool_request": 89, "thread_pool_set_s": 89, "thread_pool_get_s": 89, "unavail": 89, "thread_pool_give_back": 89, "max_work": 89, "wake": [89, 90], "thread_pool_wait": 89, "thread_pool_clear": 89, "queri": 90, "core": 90, "specialis": 90, "face": 90, "_thread": 90, "breed": 90, "difficult": 90, "accept": 90, "_threaded_pool": 90, "thread_support": 90, "do_func_t": 90, "flint_parallel_do": 90, "nonposit": 90, "flint_parallel_uniform": 90, "schedul": 90, "flint_parallel_strid": 90, "flint_parallel_dynam": 90, "flint_parallel_verbos": 90, "bsplit_merge_func_t": 90, "bsplit_basecase_func_t": 90, "bsplit_init_func_t": 90, "bsplit_clear_func_t": 90, "flint_parallel_binary_split": 90, "sizeof_r": 90, "init": 90, "basecase_cutoff": 90, "flint_parallel_bsplit_left_inplac": 90, "n_randlimb": 91, "p_j": 91, "seed": 91, "4294967311": 91, "nextprim": 91, "n_randbit": 91, "n_randtest_bit": 91, "n_urandint": 91, "especi": 91, "n_randtest": 91, "n_randtest_not_zero": 91, "n_randprim": 91, "n_randtest_prim": 91, "n_pow": 91, "n_flog": 91, "n_clog": 91, "n_clog_2exp": 91, "n_revbin": 91, "10110": 91, "110100": 91, "n_sizeinbas": 91, "suffix": 91, "_preinv": 91, "n_precompute_invers": 91, "_precomp": 91, "n_mod_precomp": 91, "shall": 91, "didn": 91, "54": 91, "n_mod2_precomp": 91, "sure": 91, "mod_precomp": 91, "n_divrem2_preinv": 91, "oller": 91, "compens": 91, "n_div2_preinv": 91, "n_mod2_preinv": 91, "n_divrem2_precomp": 91, "npre": 91, "retain": 91, "n_ll_mod_preinv": 91, "n_lll_mod_preinv": 91, "a_mi": 91, "n_mulmod_precomp": 91, "n_mulmod2_preinv": 91, "n_mulmod2": 91, "n_mulmod_preinv": 91, "Their": 91, "n_gcd": 91, "mpn_gcd_1": 91, "n_gcdinv": 91, "n_xgcd": 91, "claim": 91, "degener": 91, "induct": 91, "x_n": 91, "y_n": 91, "hypothesi": 91, "suffic": 91, "backsubstitut": 91, "n_jacobi": 91, "n_jacobi_unsign": 91, "n_addmod": 91, "n_submod": 91, "n_invmod": 91, "n_powmod_precomp": 91, "n_powmod_ui_precomp": 91, "n_powmod": 91, "precomp": 91, "n_powmod2_preinv": 91, "n_powmod2": 91, "preinv": 91, "n_powmod2_ui_preinv": 91, "n_powmod2_fmpz_preinv": 91, "n_sqrtmod": 91, "n_sqrtmod_2pow": 91, "n_sqrtmod_primepow": 91, "n_sqrtmodn": 91, "n_factor_t": 91, "w_precomp": 91, "n_mulmod_precomp_shoup": 91, "n_divid": 91, "n_primes_init": 91, "n_primes_t": 91, "n_primes_clear": 91, "n_primes_next": 91, "flint_small_prim": 91, "n_primes_sieve_rang": 91, "n_primes_jump_aft": 91, "n_primes_extend_smal": 91, "n_compute_prim": 91, "n_primes_arr_readonli": 91, "n_cleanup_prim": 91, "n_prime_inverses_arr_readonli": 91, "invalid": 91, "n_prime_pi": 91, "n_nth_prime": 91, "n_prime_pi_bound": 91, "25506": 91, "p_2": 91, "n_nth_prime_bound": 91, "9427": 91, "15985": 91, "overview": 91, "utm": 91, "howmani": 91, "shtml": 91, "n_is_oddprime_smal": 91, "flint_oddprime_small_cutoff": 91, "n_is_oddprime_binari": 91, "n_is_prime_pocklington": 91, "n_factor_parti": 91, "affect": 91, "pocklingtonstheorem": 91, "n_is_prime_pseudosquar": 91, "n_is_probabprim": 91, "feitsma": 91, "galwai": 91, "cecm": 91, "sfu": 91, "constitut": 91, "n_is_strong_probabprime_precomp": 91, "sprp": 91, "strongpseudoprim": 91, "n_is_strong_probabprime2_preinv": 91, "n_is_probabprime_fermat": 91, "littl": 91, "n_is_probabprime_fibonacci": 91, "142": 91, "n_is_probabprime_bpsw": 91, "weaken": 91, "page": 91, "143": 91, "n_is_probabprime_luca": 91, "1050535501": 91, "n_is_strong_probabprime_preinv": 91, "uucod": 91, "obf": 91, "dalbec": 91, "alg": 91, "n_crt": 91, "n_sqrt": 91, "ieee": 91, "281474976710656": 91, "46": 91, "n_sqrtrem": 91, "n_is_squar": 91, "n_is_perfect_power235": 91, "fifth": 91, "235": 91, "logic": 91, "AND": 91, "n_is_perfect_pow": 91, "n_rootrem": 91, "mention": 91, "articl": 91, "wiki": 91, "fast_inverse_square_root": 91, "n_cbrt": 91, "sqare": 91, "n_cbrt_chebyshev_approx": 91, "leftarrow": 91, "good": 91, "n_cbrt_newton_iter": 91, "n_cbrt_binary_search": 91, "mpmath": 91, "chebyfit": 91, "n_cbrtrem": 91, "n_remov": 91, "n_remove2_precomp": 91, "ppre": 91, "n_factor_insert": 91, "n_factor_tri": 91, "n_factor_trial_rang": 91, "n_factor_init": 91, "unfactor": 91, "utilis": 91, "newli": 91, "n_factor_power235": 91, "n_factor_one_lin": 91, "bill": 91, "squfof": 91, "40": 91, "n_factor_lehman": 91, "lehman": 91, "n_factor_squfof": 91, "persist": 91, "flint_primes_smal": 91, "flint_factor_trial_prim": 91, "factor_arr": 91, "continu": 91, "flint_factor_one_line_max": 91, "flint_factor_one_line_it": 91, "flint_factor_squfof_it": 91, "n_factor_trial_parti": 91, "n_factor_pp1": 91, "n_factor_pp1_wrapp": 91, "minimis": 91, "n_factor_pollard_brent_singl": 91, "xi": 91, "normbit": 91, "n_factor_pollard_br": 91, "discov": 91, "n_moebius_mu": 91, "n_moebius_mu_vec": 91, "flip": 91, "n_is_squarefre": 91, "n_euler_phi": 91, "n_factorial_fast_mod2_preinv": 91, "multipoint": 91, "n_factorial_mod2_preinv": 91, "extrem": 91, "n_primitive_root_prime_prefactor": 91, "subgroup": 91, "n_primitive_root_prim": 91, "n_discrete_log_bsg": 91, "2p": 91, "n_factor_ecm_doubl": 91, "n_ecm_t": 91, "n_ecm_inf": 91, "n_factor_ecm_add": 91, "n_factor_ecm_mul_montgomery_ladd": 91, "n_factor_ecm_select_curv": 91, "n_factor_ecm_stage_i": 91, "stagei": 91, "ecm": 91, "n_factor_ecm_stage_ii": 91, "stageii": 91, "andii": 91}, "objects": {"": [[18, 0, 1, "c.COEFF_IS_MPZ", "COEFF_IS_MPZ"], [18, 2, 1, "c.COEFF_MAX", "COEFF_MAX"], [18, 2, 1, "c.COEFF_MIN", "COEFF_MIN"], [18, 0, 1, "c.COEFF_TO_PTR", "COEFF_TO_PTR"], [70, 2, 1, "c.MPN_NORM", "MPN_NORM"], [70, 2, 1, "c.MPN_SWAP", "MPN_SWAP"], [72, 2, 1, "c.NMOD2_RED2", "NMOD2_RED2"], [72, 2, 1, "c.NMOD_ADDMUL", "NMOD_ADDMUL"], [72, 2, 1, "c.NMOD_BITS", "NMOD_BITS"], [72, 2, 1, "c.NMOD_CAN_USE_SHOUP", "NMOD_CAN_USE_SHOUP"], [72, 2, 1, "c.NMOD_MUL_FULLWORD", "NMOD_MUL_FULLWORD"], [72, 2, 1, "c.NMOD_MUL_PRENORM", "NMOD_MUL_PRENORM"], [72, 2, 1, "c.NMOD_RED", "NMOD_RED"], [72, 2, 1, "c.NMOD_RED2", "NMOD_RED2"], [72, 2, 1, "c.NMOD_RED3", "NMOD_RED3"], [79, 0, 1, "c.NMOD_VEC_DOT", "NMOD_VEC_DOT"], [18, 0, 1, "c.PTR_TO_COEFF", "PTR_TO_COEFF"], [85, 2, 1, "c.SHOW_MEMORY_USAGE", "SHOW_MEMORY_USAGE"], [85, 2, 1, "c.TIMEIT_END_REPEAT", "TIMEIT_END_REPEAT"], [85, 2, 1, "c.TIMEIT_ONCE_START", "TIMEIT_ONCE_START"], [85, 2, 1, "c.TIMEIT_ONCE_STOP", "TIMEIT_ONCE_STOP"], [85, 2, 1, "c.TIMEIT_REPEAT", "TIMEIT_REPEAT"], [85, 2, 1, "c.TIMEIT_START", "TIMEIT_START"], [85, 2, 1, "c.TIMEIT_STOP", "TIMEIT_STOP"], [0, 3, 1, "c._aprcl_config", "_aprcl_config"], [0, 0, 1, "c._aprcl_is_prime_gauss", "_aprcl_is_prime_gauss"], [0, 0, 1, "c._aprcl_is_prime_jacobi", "_aprcl_is_prime_jacobi"], [1, 0, 1, "c._arith_bernoulli_number", "_arith_bernoulli_number"], [1, 0, 1, "c._arith_bernoulli_number_vec", "_arith_bernoulli_number_vec"], [1, 0, 1, "c._arith_bernoulli_number_vec_multi_mod", "_arith_bernoulli_number_vec_multi_mod"], [1, 0, 1, "c._arith_bernoulli_number_vec_recursive", "_arith_bernoulli_number_vec_recursive"], [1, 0, 1, "c._arith_bernoulli_number_vec_zeta", "_arith_bernoulli_number_vec_zeta"], [1, 0, 1, "c._arith_bernoulli_number_zeta", "_arith_bernoulli_number_zeta"], [1, 0, 1, "c._arith_cos_minpoly", "_arith_cos_minpoly"], [1, 0, 1, "c._arith_euler_number_zeta", "_arith_euler_number_zeta"], [1, 0, 1, "c._arith_harmonic_number", "_arith_harmonic_number"], [6, 0, 1, "c._d_vec_add", "_d_vec_add"], [6, 0, 1, "c._d_vec_approx_equal", "_d_vec_approx_equal"], [6, 0, 1, "c._d_vec_clear", "_d_vec_clear"], [6, 0, 1, "c._d_vec_dot", "_d_vec_dot"], [6, 0, 1, "c._d_vec_dot_heuristic", "_d_vec_dot_heuristic"], [6, 0, 1, "c._d_vec_dot_thrice", "_d_vec_dot_thrice"], [6, 0, 1, "c._d_vec_equal", "_d_vec_equal"], [6, 0, 1, "c._d_vec_init", "_d_vec_init"], [6, 0, 1, "c._d_vec_is_approx_zero", "_d_vec_is_approx_zero"], [6, 0, 1, "c._d_vec_is_zero", "_d_vec_is_zero"], [6, 0, 1, "c._d_vec_norm", "_d_vec_norm"], [6, 0, 1, "c._d_vec_randtest", "_d_vec_randtest"], [6, 0, 1, "c._d_vec_set", "_d_vec_set"], [6, 0, 1, "c._d_vec_sub", "_d_vec_sub"], [6, 0, 1, "c._d_vec_zero", "_d_vec_zero"], [9, 0, 1, "c._fft_mulmod_2expp1", "_fft_mulmod_2expp1"], [12, 0, 1, "c._fmpq_add", "_fmpq_add"], [12, 0, 1, "c._fmpq_add_fmpz", "_fmpq_add_fmpz"], [12, 0, 1, "c._fmpq_add_si", "_fmpq_add_si"], [12, 0, 1, "c._fmpq_add_small", "_fmpq_add_small"], [12, 0, 1, "c._fmpq_add_ui", "_fmpq_add_ui"], [12, 0, 1, "c._fmpq_addmul", "_fmpq_addmul"], [12, 0, 1, "c._fmpq_canonicalise", "_fmpq_canonicalise"], [12, 0, 1, "c._fmpq_div", "_fmpq_div"], [12, 0, 1, "c._fmpq_fprint", "_fmpq_fprint"], [12, 0, 1, "c._fmpq_gcd", "_fmpq_gcd"], [12, 0, 1, "c._fmpq_gcd_cofactors", "_fmpq_gcd_cofactors"], [12, 0, 1, "c._fmpq_get_str", "_fmpq_get_str"], [12, 0, 1, "c._fmpq_harmonic_ui", "_fmpq_harmonic_ui"], [12, 0, 1, "c._fmpq_is_canonical", "_fmpq_is_canonical"], [13, 0, 1, "c._fmpq_mat_charpoly", "_fmpq_mat_charpoly"], [13, 0, 1, "c._fmpq_mat_minpoly", "_fmpq_mat_minpoly"], [12, 0, 1, "c._fmpq_mod_fmpz", "_fmpq_mod_fmpz"], [12, 0, 1, "c._fmpq_mul", "_fmpq_mul"], [12, 0, 1, "c._fmpq_mul_si", "_fmpq_mul_si"], [12, 0, 1, "c._fmpq_mul_small", "_fmpq_mul_small"], [12, 0, 1, "c._fmpq_mul_ui", "_fmpq_mul_ui"], [12, 0, 1, "c._fmpq_next_calkin_wilf", "_fmpq_next_calkin_wilf"], [12, 0, 1, "c._fmpq_next_minimal", "_fmpq_next_minimal"], [12, 0, 1, "c._fmpq_next_signed_calkin_wilf", "_fmpq_next_signed_calkin_wilf"], [12, 0, 1, "c._fmpq_next_signed_minimal", "_fmpq_next_signed_minimal"], [16, 0, 1, "c._fmpq_poly_add", "_fmpq_poly_add"], [16, 0, 1, "c._fmpq_poly_add_can", "_fmpq_poly_add_can"], [16, 0, 1, "c._fmpq_poly_add_series", "_fmpq_poly_add_series"], [16, 0, 1, "c._fmpq_poly_add_series_can", "_fmpq_poly_add_series_can"], [16, 0, 1, "c._fmpq_poly_asin_series", "_fmpq_poly_asin_series"], [16, 0, 1, "c._fmpq_poly_asinh_series", "_fmpq_poly_asinh_series"], [16, 0, 1, "c._fmpq_poly_atan_series", "_fmpq_poly_atan_series"], [16, 0, 1, "c._fmpq_poly_atanh_series", "_fmpq_poly_atanh_series"], [16, 0, 1, "c._fmpq_poly_canonicalise", "_fmpq_poly_canonicalise"], [16, 0, 1, "c._fmpq_poly_cmp", "_fmpq_poly_cmp"], [16, 0, 1, "c._fmpq_poly_compose", "_fmpq_poly_compose"], [16, 0, 1, "c._fmpq_poly_compose_series", "_fmpq_poly_compose_series"], [16, 0, 1, "c._fmpq_poly_compose_series_brent_kung", "_fmpq_poly_compose_series_brent_kung"], [16, 0, 1, "c._fmpq_poly_compose_series_horner", "_fmpq_poly_compose_series_horner"], [16, 0, 1, "c._fmpq_poly_content", "_fmpq_poly_content"], [16, 0, 1, "c._fmpq_poly_cos_series", "_fmpq_poly_cos_series"], [16, 0, 1, "c._fmpq_poly_cosh_series", "_fmpq_poly_cosh_series"], [16, 0, 1, "c._fmpq_poly_derivative", "_fmpq_poly_derivative"], [16, 0, 1, "c._fmpq_poly_div", "_fmpq_poly_div"], [16, 0, 1, "c._fmpq_poly_div_series", "_fmpq_poly_div_series"], [16, 0, 1, "c._fmpq_poly_divides", "_fmpq_poly_divides"], [16, 0, 1, "c._fmpq_poly_divrem", "_fmpq_poly_divrem"], [16, 0, 1, "c._fmpq_poly_equal_trunc", "_fmpq_poly_equal_trunc"], [16, 0, 1, "c._fmpq_poly_evaluate_fmpq", "_fmpq_poly_evaluate_fmpq"], [16, 0, 1, "c._fmpq_poly_evaluate_fmpz", "_fmpq_poly_evaluate_fmpz"], [16, 0, 1, "c._fmpq_poly_exp_expinv_series", "_fmpq_poly_exp_expinv_series"], [16, 0, 1, "c._fmpq_poly_exp_series", "_fmpq_poly_exp_series"], [16, 0, 1, "c._fmpq_poly_fprint", "_fmpq_poly_fprint"], [16, 0, 1, "c._fmpq_poly_fprint_pretty", "_fmpq_poly_fprint_pretty"], [16, 0, 1, "c._fmpq_poly_gcd", "_fmpq_poly_gcd"], [16, 0, 1, "c._fmpq_poly_gegenbauer_c", "_fmpq_poly_gegenbauer_c"], [16, 0, 1, "c._fmpq_poly_integral", "_fmpq_poly_integral"], [16, 0, 1, "c._fmpq_poly_interpolate_fmpz_vec", "_fmpq_poly_interpolate_fmpz_vec"], [16, 0, 1, "c._fmpq_poly_inv_series", "_fmpq_poly_inv_series"], [16, 0, 1, "c._fmpq_poly_inv_series_newton", "_fmpq_poly_inv_series_newton"], [16, 0, 1, "c._fmpq_poly_invsqrt_series", "_fmpq_poly_invsqrt_series"], [16, 0, 1, "c._fmpq_poly_is_canonical", "_fmpq_poly_is_canonical"], [16, 0, 1, "c._fmpq_poly_is_monic", "_fmpq_poly_is_monic"], [16, 0, 1, "c._fmpq_poly_laguerre_l", "_fmpq_poly_laguerre_l"], [16, 0, 1, "c._fmpq_poly_lcm", "_fmpq_poly_lcm"], [16, 0, 1, "c._fmpq_poly_legendre_p", "_fmpq_poly_legendre_p"], [16, 0, 1, "c._fmpq_poly_log_series", "_fmpq_poly_log_series"], [16, 0, 1, "c._fmpq_poly_make_monic", "_fmpq_poly_make_monic"], [16, 0, 1, "c._fmpq_poly_mul", "_fmpq_poly_mul"], [16, 0, 1, "c._fmpq_poly_mullow", "_fmpq_poly_mullow"], [16, 0, 1, "c._fmpq_poly_normalise", "_fmpq_poly_normalise"], [16, 0, 1, "c._fmpq_poly_nth_derivative", "_fmpq_poly_nth_derivative"], [16, 0, 1, "c._fmpq_poly_pow", "_fmpq_poly_pow"], [16, 0, 1, "c._fmpq_poly_pow_trunc", "_fmpq_poly_pow_trunc"], [16, 0, 1, "c._fmpq_poly_power_sums", "_fmpq_poly_power_sums"], [16, 0, 1, "c._fmpq_poly_power_sums_to_poly", "_fmpq_poly_power_sums_to_poly"], [16, 0, 1, "c._fmpq_poly_powers_clear", "_fmpq_poly_powers_clear"], [16, 0, 1, "c._fmpq_poly_powers_precompute", "_fmpq_poly_powers_precompute"], [16, 0, 1, "c._fmpq_poly_primitive_part", "_fmpq_poly_primitive_part"], [16, 0, 1, "c._fmpq_poly_print", "_fmpq_poly_print"], [16, 0, 1, "c._fmpq_poly_print_pretty", "_fmpq_poly_print_pretty"], [16, 0, 1, "c._fmpq_poly_rem", "_fmpq_poly_rem"], [16, 0, 1, "c._fmpq_poly_rem_powers_precomp", "_fmpq_poly_rem_powers_precomp"], [16, 0, 1, "c._fmpq_poly_rescale", "_fmpq_poly_rescale"], [16, 0, 1, "c._fmpq_poly_resultant", "_fmpq_poly_resultant"], [16, 0, 1, "c._fmpq_poly_revert_series", "_fmpq_poly_revert_series"], [16, 0, 1, "c._fmpq_poly_revert_series_lagrange", "_fmpq_poly_revert_series_lagrange"], [16, 0, 1, "c._fmpq_poly_revert_series_lagrange_fast", "_fmpq_poly_revert_series_lagrange_fast"], [16, 0, 1, "c._fmpq_poly_revert_series_newton", "_fmpq_poly_revert_series_newton"], [16, 0, 1, "c._fmpq_poly_scalar_div_fmpq", "_fmpq_poly_scalar_div_fmpq"], [16, 0, 1, "c._fmpq_poly_scalar_div_fmpz", "_fmpq_poly_scalar_div_fmpz"], [16, 0, 1, "c._fmpq_poly_scalar_div_si", "_fmpq_poly_scalar_div_si"], [16, 0, 1, "c._fmpq_poly_scalar_div_ui", "_fmpq_poly_scalar_div_ui"], [16, 0, 1, "c._fmpq_poly_scalar_mul_fmpq", "_fmpq_poly_scalar_mul_fmpq"], [16, 0, 1, "c._fmpq_poly_scalar_mul_fmpz", "_fmpq_poly_scalar_mul_fmpz"], [16, 0, 1, "c._fmpq_poly_scalar_mul_si", "_fmpq_poly_scalar_mul_si"], [16, 0, 1, "c._fmpq_poly_scalar_mul_ui", "_fmpq_poly_scalar_mul_ui"], [16, 0, 1, "c._fmpq_poly_set_array_mpq", "_fmpq_poly_set_array_mpq"], [16, 0, 1, "c._fmpq_poly_set_length", "_fmpq_poly_set_length"], [16, 0, 1, "c._fmpq_poly_set_str", "_fmpq_poly_set_str"], [16, 0, 1, "c._fmpq_poly_sin_cos_series", "_fmpq_poly_sin_cos_series"], [16, 0, 1, "c._fmpq_poly_sin_series", "_fmpq_poly_sin_series"], [16, 0, 1, "c._fmpq_poly_sinh_cosh_series", "_fmpq_poly_sinh_cosh_series"], [16, 0, 1, "c._fmpq_poly_sinh_series", "_fmpq_poly_sinh_series"], [16, 0, 1, "c._fmpq_poly_sqrt_series", "_fmpq_poly_sqrt_series"], [16, 0, 1, "c._fmpq_poly_sub", "_fmpq_poly_sub"], [16, 0, 1, "c._fmpq_poly_sub_can", "_fmpq_poly_sub_can"], [16, 0, 1, "c._fmpq_poly_sub_series", "_fmpq_poly_sub_series"], [16, 0, 1, "c._fmpq_poly_sub_series_can", "_fmpq_poly_sub_series_can"], [16, 0, 1, "c._fmpq_poly_tan_series", "_fmpq_poly_tan_series"], [16, 0, 1, "c._fmpq_poly_tanh_series", "_fmpq_poly_tanh_series"], [16, 0, 1, "c._fmpq_poly_xgcd", "_fmpq_poly_xgcd"], [12, 0, 1, "c._fmpq_pow_si", "_fmpq_pow_si"], [12, 0, 1, "c._fmpq_print", "_fmpq_print"], [12, 0, 1, "c._fmpq_randbits", "_fmpq_randbits"], [12, 0, 1, "c._fmpq_randtest", "_fmpq_randtest"], [12, 0, 1, "c._fmpq_reconstruct_fmpz", "_fmpq_reconstruct_fmpz"], [12, 0, 1, "c._fmpq_reconstruct_fmpz_2", "_fmpq_reconstruct_fmpz_2"], [12, 0, 1, "c._fmpq_reconstruct_fmpz_2_naive", "_fmpq_reconstruct_fmpz_2_naive"], [12, 0, 1, "c._fmpq_set_si", "_fmpq_set_si"], [12, 0, 1, "c._fmpq_set_ui", "_fmpq_set_ui"], [12, 0, 1, "c._fmpq_simplest_between", "_fmpq_simplest_between"], [12, 0, 1, "c._fmpq_sub", "_fmpq_sub"], [12, 0, 1, "c._fmpq_sub_fmpz", "_fmpq_sub_fmpz"], [12, 0, 1, "c._fmpq_sub_si", "_fmpq_sub_si"], [12, 0, 1, "c._fmpq_sub_ui", "_fmpq_sub_ui"], [12, 0, 1, "c._fmpq_submul", "_fmpq_submul"], [17, 0, 1, "c._fmpq_vec_clear", "_fmpq_vec_clear"], [17, 0, 1, "c._fmpq_vec_dot", "_fmpq_vec_dot"], [17, 0, 1, "c._fmpq_vec_fprint", "_fmpq_vec_fprint"], [17, 0, 1, "c._fmpq_vec_get_fmpz_vec_fmpz", "_fmpq_vec_get_fmpz_vec_fmpz"], [17, 0, 1, "c._fmpq_vec_init", "_fmpq_vec_init"], [17, 0, 1, "c._fmpq_vec_print", "_fmpq_vec_print"], [17, 0, 1, "c._fmpq_vec_randtest", "_fmpq_vec_randtest"], [17, 0, 1, "c._fmpq_vec_randtest_uniq_sorted", "_fmpq_vec_randtest_uniq_sorted"], [17, 0, 1, "c._fmpq_vec_set_fmpz_vec", "_fmpq_vec_set_fmpz_vec"], [17, 0, 1, "c._fmpq_vec_sort", "_fmpq_vec_sort"], [18, 0, 1, "c._fmpz_cleanup", "_fmpz_cleanup"], [18, 0, 1, "c._fmpz_cleanup_mpz_content", "_fmpz_cleanup_mpz_content"], [18, 0, 1, "c._fmpz_clear_mpz", "_fmpz_clear_mpz"], [18, 0, 1, "c._fmpz_demote", "_fmpz_demote"], [18, 0, 1, "c._fmpz_demote_val", "_fmpz_demote_val"], [19, 0, 1, "c._fmpz_factor_append", "_fmpz_factor_append"], [19, 0, 1, "c._fmpz_factor_append_ui", "_fmpz_factor_append_ui"], [21, 0, 1, "c._fmpz_mat_charpoly", "_fmpz_mat_charpoly"], [21, 0, 1, "c._fmpz_mat_charpoly_berkowitz", "_fmpz_mat_charpoly_berkowitz"], [21, 0, 1, "c._fmpz_mat_charpoly_modular", "_fmpz_mat_charpoly_modular"], [21, 0, 1, "c._fmpz_mat_minpoly", "_fmpz_mat_minpoly"], [21, 0, 1, "c._fmpz_mat_minpoly_modular", "_fmpz_mat_minpoly_modular"], [21, 0, 1, "c._fmpz_mat_mul_double_word", "_fmpz_mat_mul_double_word"], [21, 0, 1, "c._fmpz_mat_mul_multi_mod", "_fmpz_mat_mul_multi_mod"], [21, 0, 1, "c._fmpz_mat_mul_small", "_fmpz_mat_mul_small"], [21, 0, 1, "c._fmpz_mat_solve_dixon_den", "_fmpz_mat_solve_dixon_den"], [23, 0, 1, "c._fmpz_mod_mat_mul_classical_threaded_op", "_fmpz_mod_mat_mul_classical_threaded_op"], [23, 0, 1, "c._fmpz_mod_mat_mul_classical_threaded_pool_op", "_fmpz_mod_mat_mul_classical_threaded_pool_op"], [23, 0, 1, "c._fmpz_mod_mat_reduce", "_fmpz_mod_mat_reduce"], [23, 0, 1, "c._fmpz_mod_mat_set_mod", "_fmpz_mod_mat_set_mod"], [26, 0, 1, "c._fmpz_mod_poly_add", "_fmpz_mod_poly_add"], [26, 0, 1, "c._fmpz_mod_poly_compose", "_fmpz_mod_poly_compose"], [26, 0, 1, "c._fmpz_mod_poly_compose_divconquer", "_fmpz_mod_poly_compose_divconquer"], [26, 0, 1, "c._fmpz_mod_poly_compose_horner", "_fmpz_mod_poly_compose_horner"], [26, 0, 1, "c._fmpz_mod_poly_compose_mod", "_fmpz_mod_poly_compose_mod"], [26, 0, 1, "c._fmpz_mod_poly_compose_mod_brent_kung", "_fmpz_mod_poly_compose_mod_brent_kung"], [26, 0, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv", "_fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv"], [26, 0, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv_worker", "_fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv_worker"], [26, 0, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_preinv", "_fmpz_mod_poly_compose_mod_brent_kung_preinv"], [26, 0, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_vec_preinv", "_fmpz_mod_poly_compose_mod_brent_kung_vec_preinv"], [26, 0, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "_fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool"], [26, 0, 1, "c._fmpz_mod_poly_compose_mod_horner", "_fmpz_mod_poly_compose_mod_horner"], [26, 0, 1, "c._fmpz_mod_poly_derivative", "_fmpz_mod_poly_derivative"], [26, 0, 1, "c._fmpz_mod_poly_discriminant", "_fmpz_mod_poly_discriminant"], [26, 0, 1, "c._fmpz_mod_poly_div", "_fmpz_mod_poly_div"], [26, 0, 1, "c._fmpz_mod_poly_div_basecase", "_fmpz_mod_poly_div_basecase"], [26, 0, 1, "c._fmpz_mod_poly_div_divconquer", "_fmpz_mod_poly_div_divconquer"], [26, 0, 1, "c._fmpz_mod_poly_div_divconquer_recursive", "_fmpz_mod_poly_div_divconquer_recursive"], [26, 0, 1, "c._fmpz_mod_poly_div_newton", "_fmpz_mod_poly_div_newton"], [26, 0, 1, "c._fmpz_mod_poly_div_newton_n_preinv", "_fmpz_mod_poly_div_newton_n_preinv"], [26, 0, 1, "c._fmpz_mod_poly_div_series", "_fmpz_mod_poly_div_series"], [26, 0, 1, "c._fmpz_mod_poly_divides", "_fmpz_mod_poly_divides"], [26, 0, 1, "c._fmpz_mod_poly_divides_classical", "_fmpz_mod_poly_divides_classical"], [26, 0, 1, "c._fmpz_mod_poly_divrem", "_fmpz_mod_poly_divrem"], [26, 0, 1, "c._fmpz_mod_poly_divrem_basecase", "_fmpz_mod_poly_divrem_basecase"], [26, 0, 1, "c._fmpz_mod_poly_divrem_divconquer", "_fmpz_mod_poly_divrem_divconquer"], [26, 0, 1, "c._fmpz_mod_poly_divrem_divconquer_recursive", "_fmpz_mod_poly_divrem_divconquer_recursive"], [26, 0, 1, "c._fmpz_mod_poly_divrem_newton_n_preinv", "_fmpz_mod_poly_divrem_newton_n_preinv"], [26, 0, 1, "c._fmpz_mod_poly_evaluate_fmpz", "_fmpz_mod_poly_evaluate_fmpz"], [26, 0, 1, "c._fmpz_mod_poly_evaluate_fmpz_vec", "_fmpz_mod_poly_evaluate_fmpz_vec"], [26, 0, 1, "c._fmpz_mod_poly_evaluate_fmpz_vec_fast", "_fmpz_mod_poly_evaluate_fmpz_vec_fast"], [26, 0, 1, "c._fmpz_mod_poly_evaluate_fmpz_vec_fast_precomp", "_fmpz_mod_poly_evaluate_fmpz_vec_fast_precomp"], [26, 0, 1, "c._fmpz_mod_poly_evaluate_fmpz_vec_iter", "_fmpz_mod_poly_evaluate_fmpz_vec_iter"], [26, 0, 1, "c._fmpz_mod_poly_fprint", "_fmpz_mod_poly_fprint"], [26, 0, 1, "c._fmpz_mod_poly_gcd", "_fmpz_mod_poly_gcd"], [26, 0, 1, "c._fmpz_mod_poly_gcd_euclidean", "_fmpz_mod_poly_gcd_euclidean"], [26, 0, 1, "c._fmpz_mod_poly_gcd_euclidean_f", "_fmpz_mod_poly_gcd_euclidean_f"], [26, 0, 1, "c._fmpz_mod_poly_gcd_f", "_fmpz_mod_poly_gcd_f"], [26, 0, 1, "c._fmpz_mod_poly_gcd_hgcd", "_fmpz_mod_poly_gcd_hgcd"], [26, 0, 1, "c._fmpz_mod_poly_gcdinv", "_fmpz_mod_poly_gcdinv"], [26, 0, 1, "c._fmpz_mod_poly_gcdinv_euclidean", "_fmpz_mod_poly_gcdinv_euclidean"], [26, 0, 1, "c._fmpz_mod_poly_gcdinv_euclidean_f", "_fmpz_mod_poly_gcdinv_euclidean_f"], [26, 0, 1, "c._fmpz_mod_poly_gcdinv_f", "_fmpz_mod_poly_gcdinv_f"], [26, 0, 1, "c._fmpz_mod_poly_hgcd", "_fmpz_mod_poly_hgcd"], [27, 0, 1, "c._fmpz_mod_poly_interval_poly_worker", "_fmpz_mod_poly_interval_poly_worker"], [26, 0, 1, "c._fmpz_mod_poly_inv_series", "_fmpz_mod_poly_inv_series"], [26, 0, 1, "c._fmpz_mod_poly_inv_series_newton", "_fmpz_mod_poly_inv_series_newton"], [26, 0, 1, "c._fmpz_mod_poly_invmod", "_fmpz_mod_poly_invmod"], [26, 0, 1, "c._fmpz_mod_poly_invmod_f", "_fmpz_mod_poly_invmod_f"], [26, 0, 1, "c._fmpz_mod_poly_invsqrt_series", "_fmpz_mod_poly_invsqrt_series"], [27, 0, 1, "c._fmpz_mod_poly_is_squarefree", "_fmpz_mod_poly_is_squarefree"], [27, 0, 1, "c._fmpz_mod_poly_is_squarefree_f", "_fmpz_mod_poly_is_squarefree_f"], [26, 0, 1, "c._fmpz_mod_poly_minpoly", "_fmpz_mod_poly_minpoly"], [26, 0, 1, "c._fmpz_mod_poly_minpoly_bm", "_fmpz_mod_poly_minpoly_bm"], [26, 0, 1, "c._fmpz_mod_poly_minpoly_hgcd", "_fmpz_mod_poly_minpoly_hgcd"], [26, 0, 1, "c._fmpz_mod_poly_mul", "_fmpz_mod_poly_mul"], [26, 0, 1, "c._fmpz_mod_poly_mullow", "_fmpz_mod_poly_mullow"], [26, 0, 1, "c._fmpz_mod_poly_mulmod", "_fmpz_mod_poly_mulmod"], [26, 0, 1, "c._fmpz_mod_poly_mulmod_preinv", "_fmpz_mod_poly_mulmod_preinv"], [26, 0, 1, "c._fmpz_mod_poly_neg", "_fmpz_mod_poly_neg"], [26, 0, 1, "c._fmpz_mod_poly_normalise", "_fmpz_mod_poly_normalise"], [26, 0, 1, "c._fmpz_mod_poly_pow", "_fmpz_mod_poly_pow"], [26, 0, 1, "c._fmpz_mod_poly_pow_trunc", "_fmpz_mod_poly_pow_trunc"], [26, 0, 1, "c._fmpz_mod_poly_pow_trunc_binexp", "_fmpz_mod_poly_pow_trunc_binexp"], [26, 0, 1, "c._fmpz_mod_poly_powers_mod_preinv_naive", "_fmpz_mod_poly_powers_mod_preinv_naive"], [26, 0, 1, "c._fmpz_mod_poly_powers_mod_preinv_threaded_pool", "_fmpz_mod_poly_powers_mod_preinv_threaded_pool"], [26, 0, 1, "c._fmpz_mod_poly_powmod_fmpz_binexp", "_fmpz_mod_poly_powmod_fmpz_binexp"], [26, 0, 1, "c._fmpz_mod_poly_powmod_fmpz_binexp_preinv", "_fmpz_mod_poly_powmod_fmpz_binexp_preinv"], [26, 0, 1, "c._fmpz_mod_poly_powmod_ui_binexp", "_fmpz_mod_poly_powmod_ui_binexp"], [26, 0, 1, "c._fmpz_mod_poly_powmod_ui_binexp_preinv", "_fmpz_mod_poly_powmod_ui_binexp_preinv"], [26, 0, 1, "c._fmpz_mod_poly_powmod_x_fmpz_preinv", "_fmpz_mod_poly_powmod_x_fmpz_preinv"], [26, 0, 1, "c._fmpz_mod_poly_precompute_matrix", "_fmpz_mod_poly_precompute_matrix"], [26, 0, 1, "c._fmpz_mod_poly_precompute_matrix_worker", "_fmpz_mod_poly_precompute_matrix_worker"], [26, 0, 1, "c._fmpz_mod_poly_product_roots_fmpz_vec", "_fmpz_mod_poly_product_roots_fmpz_vec"], [26, 0, 1, "c._fmpz_mod_poly_radix", "_fmpz_mod_poly_radix"], [26, 0, 1, "c._fmpz_mod_poly_radix_init", "_fmpz_mod_poly_radix_init"], [86, 0, 1, "c._fmpz_mod_poly_reduce", "_fmpz_mod_poly_reduce"], [26, 0, 1, "c._fmpz_mod_poly_reduce_matrix_mod_poly", "_fmpz_mod_poly_reduce_matrix_mod_poly"], [26, 0, 1, "c._fmpz_mod_poly_rem", "_fmpz_mod_poly_rem"], [26, 0, 1, "c._fmpz_mod_poly_rem_basecase", "_fmpz_mod_poly_rem_basecase"], [26, 0, 1, "c._fmpz_mod_poly_rem_f", "_fmpz_mod_poly_rem_f"], [26, 0, 1, "c._fmpz_mod_poly_resultant", "_fmpz_mod_poly_resultant"], [26, 0, 1, "c._fmpz_mod_poly_resultant_euclidean", "_fmpz_mod_poly_resultant_euclidean"], [26, 0, 1, "c._fmpz_mod_poly_resultant_hgcd", "_fmpz_mod_poly_resultant_hgcd"], [26, 0, 1, "c._fmpz_mod_poly_scalar_div_fmpz", "_fmpz_mod_poly_scalar_div_fmpz"], [26, 0, 1, "c._fmpz_mod_poly_scalar_mul_fmpz", "_fmpz_mod_poly_scalar_mul_fmpz"], [26, 0, 1, "c._fmpz_mod_poly_set_length", "_fmpz_mod_poly_set_length"], [26, 0, 1, "c._fmpz_mod_poly_shift_left", "_fmpz_mod_poly_shift_left"], [26, 0, 1, "c._fmpz_mod_poly_shift_right", "_fmpz_mod_poly_shift_right"], [26, 0, 1, "c._fmpz_mod_poly_sqr", "_fmpz_mod_poly_sqr"], [26, 0, 1, "c._fmpz_mod_poly_sqrt", "_fmpz_mod_poly_sqrt"], [26, 0, 1, "c._fmpz_mod_poly_sqrt_series", "_fmpz_mod_poly_sqrt_series"], [26, 0, 1, "c._fmpz_mod_poly_sub", "_fmpz_mod_poly_sub"], [26, 0, 1, "c._fmpz_mod_poly_tree_alloc", "_fmpz_mod_poly_tree_alloc"], [26, 0, 1, "c._fmpz_mod_poly_tree_build", "_fmpz_mod_poly_tree_build"], [26, 0, 1, "c._fmpz_mod_poly_tree_free", "_fmpz_mod_poly_tree_free"], [26, 0, 1, "c._fmpz_mod_poly_xgcd", "_fmpz_mod_poly_xgcd"], [26, 0, 1, "c._fmpz_mod_poly_xgcd_euclidean", "_fmpz_mod_poly_xgcd_euclidean"], [26, 0, 1, "c._fmpz_mod_poly_xgcd_euclidean_f", "_fmpz_mod_poly_xgcd_euclidean_f"], [26, 0, 1, "c._fmpz_mod_poly_xgcd_hgcd", "_fmpz_mod_poly_xgcd_hgcd"], [28, 0, 1, "c._fmpz_mod_vec_add", "_fmpz_mod_vec_add"], [28, 0, 1, "c._fmpz_mod_vec_mul", "_fmpz_mod_vec_mul"], [28, 0, 1, "c._fmpz_mod_vec_neg", "_fmpz_mod_vec_neg"], [28, 0, 1, "c._fmpz_mod_vec_scalar_addmul_fmpz_mod", "_fmpz_mod_vec_scalar_addmul_fmpz_mod"], [28, 0, 1, "c._fmpz_mod_vec_scalar_mul_fmpz_mod", "_fmpz_mod_vec_scalar_mul_fmpz_mod"], [28, 0, 1, "c._fmpz_mod_vec_scalar_mul_fmpz_mod", "_fmpz_mod_vec_scalar_mul_fmpz_mod"], [28, 0, 1, "c._fmpz_mod_vec_set_fmpz_vec", "_fmpz_mod_vec_set_fmpz_vec"], [28, 0, 1, "c._fmpz_mod_vec_sub", "_fmpz_mod_vec_sub"], [29, 0, 1, "c._fmpz_mpoly_div_monagan_pearce", "_fmpz_mpoly_div_monagan_pearce"], [29, 0, 1, "c._fmpz_mpoly_divides_array", "_fmpz_mpoly_divides_array"], [29, 0, 1, "c._fmpz_mpoly_divides_monagan_pearce", "_fmpz_mpoly_divides_monagan_pearce"], [29, 0, 1, "c._fmpz_mpoly_divrem_array", "_fmpz_mpoly_divrem_array"], [29, 0, 1, "c._fmpz_mpoly_divrem_ideal_monagan_pearce", "_fmpz_mpoly_divrem_ideal_monagan_pearce"], [29, 0, 1, "c._fmpz_mpoly_divrem_monagan_pearce", "_fmpz_mpoly_divrem_monagan_pearce"], [29, 0, 1, "c._fmpz_mpoly_fits_small", "_fmpz_mpoly_fits_small"], [18, 0, 1, "c._fmpz_multi_crt_run", "_fmpz_multi_crt_run"], [18, 0, 1, "c._fmpz_multi_crt_run_p", "_fmpz_multi_crt_run_p"], [18, 0, 1, "c._fmpz_new_mpz", "_fmpz_new_mpz"], [18, 0, 1, "c._fmpz_nm1_trial_factors", "_fmpz_nm1_trial_factors"], [18, 0, 1, "c._fmpz_np1_trial_factors", "_fmpz_np1_trial_factors"], [31, 0, 1, "c._fmpz_poly_2norm", "_fmpz_poly_2norm"], [31, 0, 1, "c._fmpz_poly_2norm_normalised_bits", "_fmpz_poly_2norm_normalised_bits"], [31, 0, 1, "c._fmpz_poly_CRT_ui", "_fmpz_poly_CRT_ui"], [31, 0, 1, "c._fmpz_poly_CRT_ui_precomp", "_fmpz_poly_CRT_ui_precomp"], [31, 0, 1, "c._fmpz_poly_add", "_fmpz_poly_add"], [31, 0, 1, "c._fmpz_poly_bit_pack", "_fmpz_poly_bit_pack"], [31, 0, 1, "c._fmpz_poly_bit_unpack", "_fmpz_poly_bit_unpack"], [31, 0, 1, "c._fmpz_poly_bit_unpack_unsigned", "_fmpz_poly_bit_unpack_unsigned"], [31, 0, 1, "c._fmpz_poly_bound_roots", "_fmpz_poly_bound_roots"], [31, 0, 1, "c._fmpz_poly_chebyshev_t", "_fmpz_poly_chebyshev_t"], [31, 0, 1, "c._fmpz_poly_chebyshev_u", "_fmpz_poly_chebyshev_u"], [31, 0, 1, "c._fmpz_poly_compose", "_fmpz_poly_compose"], [31, 0, 1, "c._fmpz_poly_compose_divconquer", "_fmpz_poly_compose_divconquer"], [31, 0, 1, "c._fmpz_poly_compose_horner", "_fmpz_poly_compose_horner"], [31, 0, 1, "c._fmpz_poly_compose_series", "_fmpz_poly_compose_series"], [31, 0, 1, "c._fmpz_poly_compose_series_brent_kung", "_fmpz_poly_compose_series_brent_kung"], [31, 0, 1, "c._fmpz_poly_compose_series_horner", "_fmpz_poly_compose_series_horner"], [31, 0, 1, "c._fmpz_poly_content", "_fmpz_poly_content"], [31, 0, 1, "c._fmpz_poly_cos_minpoly", "_fmpz_poly_cos_minpoly"], [31, 0, 1, "c._fmpz_poly_cyclotomic", "_fmpz_poly_cyclotomic"], [31, 0, 1, "c._fmpz_poly_derivative", "_fmpz_poly_derivative"], [31, 0, 1, "c._fmpz_poly_discriminant", "_fmpz_poly_discriminant"], [31, 0, 1, "c._fmpz_poly_div", "_fmpz_poly_div"], [31, 0, 1, "c._fmpz_poly_div_basecase", "_fmpz_poly_div_basecase"], [31, 0, 1, "c._fmpz_poly_div_divconquer", "_fmpz_poly_div_divconquer"], [31, 0, 1, "c._fmpz_poly_div_divconquer_recursive", "_fmpz_poly_div_divconquer_recursive"], [31, 0, 1, "c._fmpz_poly_div_preinv", "_fmpz_poly_div_preinv"], [31, 0, 1, "c._fmpz_poly_div_root", "_fmpz_poly_div_root"], [31, 0, 1, "c._fmpz_poly_div_series", "_fmpz_poly_div_series"], [31, 0, 1, "c._fmpz_poly_div_series_basecase", "_fmpz_poly_div_series_basecase"], [31, 0, 1, "c._fmpz_poly_div_series_divconquer", "_fmpz_poly_div_series_divconquer"], [31, 0, 1, "c._fmpz_poly_divides", "_fmpz_poly_divides"], [31, 0, 1, "c._fmpz_poly_divrem", "_fmpz_poly_divrem"], [31, 0, 1, "c._fmpz_poly_divrem_basecase", "_fmpz_poly_divrem_basecase"], [31, 0, 1, "c._fmpz_poly_divrem_divconquer", "_fmpz_poly_divrem_divconquer"], [31, 0, 1, "c._fmpz_poly_divrem_divconquer_recursive", "_fmpz_poly_divrem_divconquer_recursive"], [31, 0, 1, "c._fmpz_poly_divrem_preinv", "_fmpz_poly_divrem_preinv"], [31, 0, 1, "c._fmpz_poly_divremlow_divconquer_recursive", "_fmpz_poly_divremlow_divconquer_recursive"], [31, 0, 1, "c._fmpz_poly_eta_qexp", "_fmpz_poly_eta_qexp"], [31, 0, 1, "c._fmpz_poly_evaluate_divconquer_fmpq", "_fmpz_poly_evaluate_divconquer_fmpq"], [31, 0, 1, "c._fmpz_poly_evaluate_divconquer_fmpz", "_fmpz_poly_evaluate_divconquer_fmpz"], [31, 0, 1, "c._fmpz_poly_evaluate_fmpq", "_fmpz_poly_evaluate_fmpq"], [31, 0, 1, "c._fmpz_poly_evaluate_fmpz", "_fmpz_poly_evaluate_fmpz"], [31, 0, 1, "c._fmpz_poly_evaluate_horner_d", "_fmpz_poly_evaluate_horner_d"], [31, 0, 1, "c._fmpz_poly_evaluate_horner_d_2exp", "_fmpz_poly_evaluate_horner_d_2exp"], [31, 0, 1, "c._fmpz_poly_evaluate_horner_d_2exp2", "_fmpz_poly_evaluate_horner_d_2exp2"], [31, 0, 1, "c._fmpz_poly_evaluate_horner_fmpq", "_fmpz_poly_evaluate_horner_fmpq"], [31, 0, 1, "c._fmpz_poly_evaluate_horner_fmpz", "_fmpz_poly_evaluate_horner_fmpz"], [31, 0, 1, "c._fmpz_poly_evaluate_mod", "_fmpz_poly_evaluate_mod"], [32, 0, 1, "c._fmpz_poly_factor_cubic", "_fmpz_poly_factor_cubic"], [32, 0, 1, "c._fmpz_poly_factor_quadratic", "_fmpz_poly_factor_quadratic"], [32, 0, 1, "c._fmpz_poly_factor_zassenhaus", "_fmpz_poly_factor_zassenhaus"], [31, 0, 1, "c._fmpz_poly_fibonacci", "_fmpz_poly_fibonacci"], [31, 0, 1, "c._fmpz_poly_fprint", "_fmpz_poly_fprint"], [31, 0, 1, "c._fmpz_poly_fprint_pretty", "_fmpz_poly_fprint_pretty"], [31, 0, 1, "c._fmpz_poly_gcd", "_fmpz_poly_gcd"], [31, 0, 1, "c._fmpz_poly_gcd_heuristic", "_fmpz_poly_gcd_heuristic"], [31, 0, 1, "c._fmpz_poly_gcd_modular", "_fmpz_poly_gcd_modular"], [31, 0, 1, "c._fmpz_poly_gcd_subresultant", "_fmpz_poly_gcd_subresultant"], [31, 0, 1, "c._fmpz_poly_get_str", "_fmpz_poly_get_str"], [31, 0, 1, "c._fmpz_poly_get_str_pretty", "_fmpz_poly_get_str_pretty"], [31, 0, 1, "c._fmpz_poly_hensel_continue_lift", "_fmpz_poly_hensel_continue_lift"], [31, 0, 1, "c._fmpz_poly_hensel_start_lift", "_fmpz_poly_hensel_start_lift"], [31, 0, 1, "c._fmpz_poly_hermite_h", "_fmpz_poly_hermite_h"], [31, 0, 1, "c._fmpz_poly_hermite_he", "_fmpz_poly_hermite_he"], [31, 0, 1, "c._fmpz_poly_inv_series", "_fmpz_poly_inv_series"], [31, 0, 1, "c._fmpz_poly_inv_series_basecase", "_fmpz_poly_inv_series_basecase"], [31, 0, 1, "c._fmpz_poly_inv_series_newton", "_fmpz_poly_inv_series_newton"], [31, 0, 1, "c._fmpz_poly_is_cyclotomic", "_fmpz_poly_is_cyclotomic"], [31, 0, 1, "c._fmpz_poly_is_squarefree", "_fmpz_poly_is_squarefree"], [31, 0, 1, "c._fmpz_poly_lcm", "_fmpz_poly_lcm"], [31, 0, 1, "c._fmpz_poly_legendre_pt", "_fmpz_poly_legendre_pt"], [31, 0, 1, "c._fmpz_poly_monomial_to_newton", "_fmpz_poly_monomial_to_newton"], [31, 0, 1, "c._fmpz_poly_mul", "_fmpz_poly_mul"], [31, 0, 1, "c._fmpz_poly_mul_KS", "_fmpz_poly_mul_KS"], [31, 0, 1, "c._fmpz_poly_mul_SS", "_fmpz_poly_mul_SS"], [31, 0, 1, "c._fmpz_poly_mul_classical", "_fmpz_poly_mul_classical"], [31, 0, 1, "c._fmpz_poly_mul_karatsuba", "_fmpz_poly_mul_karatsuba"], [31, 0, 1, "c._fmpz_poly_mulhigh", "_fmpz_poly_mulhigh"], [31, 0, 1, "c._fmpz_poly_mulhigh_classical", "_fmpz_poly_mulhigh_classical"], [31, 0, 1, "c._fmpz_poly_mulhigh_karatsuba_n", "_fmpz_poly_mulhigh_karatsuba_n"], [31, 0, 1, "c._fmpz_poly_mullow", "_fmpz_poly_mullow"], [31, 0, 1, "c._fmpz_poly_mullow_KS", "_fmpz_poly_mullow_KS"], [31, 0, 1, "c._fmpz_poly_mullow_SS", "_fmpz_poly_mullow_SS"], [31, 0, 1, "c._fmpz_poly_mullow_SS_precache", "_fmpz_poly_mullow_SS_precache"], [31, 0, 1, "c._fmpz_poly_mullow_classical", "_fmpz_poly_mullow_classical"], [31, 0, 1, "c._fmpz_poly_mullow_karatsuba_n", "_fmpz_poly_mullow_karatsuba_n"], [31, 0, 1, "c._fmpz_poly_mulmid_classical", "_fmpz_poly_mulmid_classical"], [31, 0, 1, "c._fmpz_poly_newton_to_monomial", "_fmpz_poly_newton_to_monomial"], [31, 0, 1, "c._fmpz_poly_normalise", "_fmpz_poly_normalise"], [31, 0, 1, "c._fmpz_poly_nth_derivative", "_fmpz_poly_nth_derivative"], [31, 0, 1, "c._fmpz_poly_num_real_roots", "_fmpz_poly_num_real_roots"], [31, 0, 1, "c._fmpz_poly_num_real_roots_sturm", "_fmpz_poly_num_real_roots_sturm"], [31, 0, 1, "c._fmpz_poly_pow", "_fmpz_poly_pow"], [31, 0, 1, "c._fmpz_poly_pow_addchains", "_fmpz_poly_pow_addchains"], [31, 0, 1, "c._fmpz_poly_pow_binexp", "_fmpz_poly_pow_binexp"], [31, 0, 1, "c._fmpz_poly_pow_binomial", "_fmpz_poly_pow_binomial"], [31, 0, 1, "c._fmpz_poly_pow_multinomial", "_fmpz_poly_pow_multinomial"], [31, 0, 1, "c._fmpz_poly_pow_small", "_fmpz_poly_pow_small"], [31, 0, 1, "c._fmpz_poly_pow_trunc", "_fmpz_poly_pow_trunc"], [31, 0, 1, "c._fmpz_poly_power_sums_naive", "_fmpz_poly_power_sums_naive"], [31, 0, 1, "c._fmpz_poly_power_sums_to_poly", "_fmpz_poly_power_sums_to_poly"], [31, 0, 1, "c._fmpz_poly_powers_clear", "_fmpz_poly_powers_clear"], [31, 0, 1, "c._fmpz_poly_powers_precompute", "_fmpz_poly_powers_precompute"], [31, 0, 1, "c._fmpz_poly_preinvert", "_fmpz_poly_preinvert"], [31, 0, 1, "c._fmpz_poly_primitive_part", "_fmpz_poly_primitive_part"], [31, 0, 1, "c._fmpz_poly_print", "_fmpz_poly_print"], [31, 0, 1, "c._fmpz_poly_print_pretty", "_fmpz_poly_print_pretty"], [31, 0, 1, "c._fmpz_poly_product_roots_fmpq_vec", "_fmpz_poly_product_roots_fmpq_vec"], [31, 0, 1, "c._fmpz_poly_product_roots_fmpz_vec", "_fmpz_poly_product_roots_fmpz_vec"], [31, 0, 1, "c._fmpz_poly_pseudo_div", "_fmpz_poly_pseudo_div"], [31, 0, 1, "c._fmpz_poly_pseudo_divrem", "_fmpz_poly_pseudo_divrem"], [31, 0, 1, "c._fmpz_poly_pseudo_divrem_basecase", "_fmpz_poly_pseudo_divrem_basecase"], [31, 0, 1, "c._fmpz_poly_pseudo_divrem_cohen", "_fmpz_poly_pseudo_divrem_cohen"], [31, 0, 1, "c._fmpz_poly_pseudo_divrem_divconquer", "_fmpz_poly_pseudo_divrem_divconquer"], [31, 0, 1, "c._fmpz_poly_pseudo_rem", "_fmpz_poly_pseudo_rem"], [31, 0, 1, "c._fmpz_poly_pseudo_rem_cohen", "_fmpz_poly_pseudo_rem_cohen"], [86, 0, 1, "c._fmpz_poly_reduce", "_fmpz_poly_reduce"], [31, 0, 1, "c._fmpz_poly_rem", "_fmpz_poly_rem"], [31, 0, 1, "c._fmpz_poly_rem_basecase", "_fmpz_poly_rem_basecase"], [31, 0, 1, "c._fmpz_poly_rem_powers_precomp", "_fmpz_poly_rem_powers_precomp"], [31, 0, 1, "c._fmpz_poly_remove_content_2exp", "_fmpz_poly_remove_content_2exp"], [31, 0, 1, "c._fmpz_poly_resultant", "_fmpz_poly_resultant"], [31, 0, 1, "c._fmpz_poly_resultant_euclidean", "_fmpz_poly_resultant_euclidean"], [31, 0, 1, "c._fmpz_poly_resultant_modular", "_fmpz_poly_resultant_modular"], [31, 0, 1, "c._fmpz_poly_reverse", "_fmpz_poly_reverse"], [31, 0, 1, "c._fmpz_poly_revert_series", "_fmpz_poly_revert_series"], [31, 0, 1, "c._fmpz_poly_revert_series_lagrange", "_fmpz_poly_revert_series_lagrange"], [31, 0, 1, "c._fmpz_poly_revert_series_lagrange_fast", "_fmpz_poly_revert_series_lagrange_fast"], [31, 0, 1, "c._fmpz_poly_revert_series_newton", "_fmpz_poly_revert_series_newton"], [31, 0, 1, "c._fmpz_poly_scale_2exp", "_fmpz_poly_scale_2exp"], [31, 0, 1, "c._fmpz_poly_set_length", "_fmpz_poly_set_length"], [31, 0, 1, "c._fmpz_poly_set_str", "_fmpz_poly_set_str"], [31, 0, 1, "c._fmpz_poly_shift_left", "_fmpz_poly_shift_left"], [31, 0, 1, "c._fmpz_poly_shift_right", "_fmpz_poly_shift_right"], [31, 0, 1, "c._fmpz_poly_signature", "_fmpz_poly_signature"], [31, 0, 1, "c._fmpz_poly_sqr", "_fmpz_poly_sqr"], [31, 0, 1, "c._fmpz_poly_sqr_KS", "_fmpz_poly_sqr_KS"], [31, 0, 1, "c._fmpz_poly_sqr_classical", "_fmpz_poly_sqr_classical"], [31, 0, 1, "c._fmpz_poly_sqr_karatsuba", "_fmpz_poly_sqr_karatsuba"], [31, 0, 1, "c._fmpz_poly_sqrlow", "_fmpz_poly_sqrlow"], [31, 0, 1, "c._fmpz_poly_sqrlow_KS", "_fmpz_poly_sqrlow_KS"], [31, 0, 1, "c._fmpz_poly_sqrlow_classical", "_fmpz_poly_sqrlow_classical"], [31, 0, 1, "c._fmpz_poly_sqrlow_karatsuba_n", "_fmpz_poly_sqrlow_karatsuba_n"], [31, 0, 1, "c._fmpz_poly_sqrt", "_fmpz_poly_sqrt"], [31, 0, 1, "c._fmpz_poly_sqrt_KS", "_fmpz_poly_sqrt_KS"], [31, 0, 1, "c._fmpz_poly_sqrt_classical", "_fmpz_poly_sqrt_classical"], [31, 0, 1, "c._fmpz_poly_sqrt_divconquer", "_fmpz_poly_sqrt_divconquer"], [31, 0, 1, "c._fmpz_poly_sqrt_series", "_fmpz_poly_sqrt_series"], [31, 0, 1, "c._fmpz_poly_sqrtrem_classical", "_fmpz_poly_sqrtrem_classical"], [31, 0, 1, "c._fmpz_poly_sqrtrem_divconquer", "_fmpz_poly_sqrtrem_divconquer"], [31, 0, 1, "c._fmpz_poly_sub", "_fmpz_poly_sub"], [31, 0, 1, "c._fmpz_poly_swinnerton_dyer", "_fmpz_poly_swinnerton_dyer"], [31, 0, 1, "c._fmpz_poly_taylor_shift", "_fmpz_poly_taylor_shift"], [31, 0, 1, "c._fmpz_poly_taylor_shift_divconquer", "_fmpz_poly_taylor_shift_divconquer"], [31, 0, 1, "c._fmpz_poly_taylor_shift_horner", "_fmpz_poly_taylor_shift_horner"], [31, 0, 1, "c._fmpz_poly_taylor_shift_multi_mod", "_fmpz_poly_taylor_shift_multi_mod"], [31, 0, 1, "c._fmpz_poly_theta_qexp", "_fmpz_poly_theta_qexp"], [31, 0, 1, "c._fmpz_poly_xgcd", "_fmpz_poly_xgcd"], [31, 0, 1, "c._fmpz_poly_xgcd_modular", "_fmpz_poly_xgcd_modular"], [18, 0, 1, "c._fmpz_promote", "_fmpz_promote"], [18, 0, 1, "c._fmpz_promote_val", "_fmpz_promote_val"], [18, 0, 1, "c._fmpz_remove", "_fmpz_remove"], [18, 0, 1, "c._fmpz_rfac_ui", "_fmpz_rfac_ui"], [35, 0, 1, "c._fmpz_vec_add", "_fmpz_vec_add"], [35, 0, 1, "c._fmpz_vec_clear", "_fmpz_vec_clear"], [35, 0, 1, "c._fmpz_vec_content", "_fmpz_vec_content"], [35, 0, 1, "c._fmpz_vec_content_chained", "_fmpz_vec_content_chained"], [28, 0, 1, "c._fmpz_vec_dot", "_fmpz_vec_dot"], [35, 0, 1, "c._fmpz_vec_dot", "_fmpz_vec_dot"], [35, 0, 1, "c._fmpz_vec_dot_ptr", "_fmpz_vec_dot_ptr"], [28, 0, 1, "c._fmpz_vec_dot_rev", "_fmpz_vec_dot_rev"], [35, 0, 1, "c._fmpz_vec_equal", "_fmpz_vec_equal"], [35, 0, 1, "c._fmpz_vec_fprint", "_fmpz_vec_fprint"], [35, 0, 1, "c._fmpz_vec_fread", "_fmpz_vec_fread"], [35, 0, 1, "c._fmpz_vec_get_d_vec_2exp", "_fmpz_vec_get_d_vec_2exp"], [35, 0, 1, "c._fmpz_vec_get_fft", "_fmpz_vec_get_fft"], [35, 0, 1, "c._fmpz_vec_get_mpf_vec", "_fmpz_vec_get_mpf_vec"], [35, 0, 1, "c._fmpz_vec_get_nmod_vec", "_fmpz_vec_get_nmod_vec"], [35, 0, 1, "c._fmpz_vec_height", "_fmpz_vec_height"], [35, 0, 1, "c._fmpz_vec_height_index", "_fmpz_vec_height_index"], [35, 0, 1, "c._fmpz_vec_init", "_fmpz_vec_init"], [35, 0, 1, "c._fmpz_vec_is_zero", "_fmpz_vec_is_zero"], [35, 0, 1, "c._fmpz_vec_lcm", "_fmpz_vec_lcm"], [35, 0, 1, "c._fmpz_vec_max", "_fmpz_vec_max"], [35, 0, 1, "c._fmpz_vec_max_bits", "_fmpz_vec_max_bits"], [35, 0, 1, "c._fmpz_vec_max_bits_ref", "_fmpz_vec_max_bits_ref"], [35, 0, 1, "c._fmpz_vec_max_inplace", "_fmpz_vec_max_inplace"], [35, 0, 1, "c._fmpz_vec_max_limbs", "_fmpz_vec_max_limbs"], [35, 0, 1, "c._fmpz_vec_neg", "_fmpz_vec_neg"], [35, 0, 1, "c._fmpz_vec_print", "_fmpz_vec_print"], [35, 0, 1, "c._fmpz_vec_prod", "_fmpz_vec_prod"], [35, 0, 1, "c._fmpz_vec_randtest", "_fmpz_vec_randtest"], [35, 0, 1, "c._fmpz_vec_randtest_unsigned", "_fmpz_vec_randtest_unsigned"], [35, 0, 1, "c._fmpz_vec_read", "_fmpz_vec_read"], [35, 0, 1, "c._fmpz_vec_scalar_abs", "_fmpz_vec_scalar_abs"], [35, 0, 1, "c._fmpz_vec_scalar_addmul_fmpz", "_fmpz_vec_scalar_addmul_fmpz"], [35, 0, 1, "c._fmpz_vec_scalar_addmul_si", "_fmpz_vec_scalar_addmul_si"], [35, 0, 1, "c._fmpz_vec_scalar_addmul_si_2exp", "_fmpz_vec_scalar_addmul_si_2exp"], [35, 0, 1, "c._fmpz_vec_scalar_addmul_ui", "_fmpz_vec_scalar_addmul_ui"], [35, 0, 1, "c._fmpz_vec_scalar_divexact_fmpz", "_fmpz_vec_scalar_divexact_fmpz"], [35, 0, 1, "c._fmpz_vec_scalar_divexact_si", "_fmpz_vec_scalar_divexact_si"], [35, 0, 1, "c._fmpz_vec_scalar_divexact_ui", "_fmpz_vec_scalar_divexact_ui"], [35, 0, 1, "c._fmpz_vec_scalar_fdiv_q_2exp", "_fmpz_vec_scalar_fdiv_q_2exp"], [35, 0, 1, "c._fmpz_vec_scalar_fdiv_q_fmpz", "_fmpz_vec_scalar_fdiv_q_fmpz"], [35, 0, 1, "c._fmpz_vec_scalar_fdiv_q_si", "_fmpz_vec_scalar_fdiv_q_si"], [35, 0, 1, "c._fmpz_vec_scalar_fdiv_q_ui", "_fmpz_vec_scalar_fdiv_q_ui"], [35, 0, 1, "c._fmpz_vec_scalar_fdiv_r_2exp", "_fmpz_vec_scalar_fdiv_r_2exp"], [35, 0, 1, "c._fmpz_vec_scalar_mod_fmpz", "_fmpz_vec_scalar_mod_fmpz"], [35, 0, 1, "c._fmpz_vec_scalar_mul_2exp", "_fmpz_vec_scalar_mul_2exp"], [35, 0, 1, "c._fmpz_vec_scalar_mul_fmpz", "_fmpz_vec_scalar_mul_fmpz"], [35, 0, 1, "c._fmpz_vec_scalar_mul_si", "_fmpz_vec_scalar_mul_si"], [35, 0, 1, "c._fmpz_vec_scalar_mul_ui", "_fmpz_vec_scalar_mul_ui"], [35, 0, 1, "c._fmpz_vec_scalar_smod_fmpz", "_fmpz_vec_scalar_smod_fmpz"], [35, 0, 1, "c._fmpz_vec_scalar_submul_fmpz", "_fmpz_vec_scalar_submul_fmpz"], [35, 0, 1, "c._fmpz_vec_scalar_submul_si", "_fmpz_vec_scalar_submul_si"], [35, 0, 1, "c._fmpz_vec_scalar_submul_si_2exp", "_fmpz_vec_scalar_submul_si_2exp"], [35, 0, 1, "c._fmpz_vec_scalar_tdiv_q_2exp", "_fmpz_vec_scalar_tdiv_q_2exp"], [35, 0, 1, "c._fmpz_vec_scalar_tdiv_q_fmpz", "_fmpz_vec_scalar_tdiv_q_fmpz"], [35, 0, 1, "c._fmpz_vec_scalar_tdiv_q_si", "_fmpz_vec_scalar_tdiv_q_si"], [35, 0, 1, "c._fmpz_vec_scalar_tdiv_q_ui", "_fmpz_vec_scalar_tdiv_q_ui"], [35, 0, 1, "c._fmpz_vec_set", "_fmpz_vec_set"], [35, 0, 1, "c._fmpz_vec_set_fft", "_fmpz_vec_set_fft"], [35, 0, 1, "c._fmpz_vec_set_nmod_vec", "_fmpz_vec_set_nmod_vec"], [35, 0, 1, "c._fmpz_vec_sort", "_fmpz_vec_sort"], [35, 0, 1, "c._fmpz_vec_sub", "_fmpz_vec_sub"], [35, 0, 1, "c._fmpz_vec_sum", "_fmpz_vec_sum"], [35, 0, 1, "c._fmpz_vec_sum_max_bits", "_fmpz_vec_sum_max_bits"], [35, 0, 1, "c._fmpz_vec_swap", "_fmpz_vec_swap"], [35, 0, 1, "c._fmpz_vec_zero", "_fmpz_vec_zero"], [36, 0, 1, "c._fq_ctx_init_conway", "_fq_ctx_init_conway"], [39, 0, 1, "c._fq_default_poly_set_length", "_fq_default_poly_set_length"], [36, 0, 1, "c._fq_dense_reduce", "_fq_dense_reduce"], [41, 0, 1, "c._fq_embed_gens_naive", "_fq_embed_gens_naive"], [36, 0, 1, "c._fq_frobenius", "_fq_frobenius"], [36, 0, 1, "c._fq_inv", "_fq_inv"], [43, 0, 1, "c._fq_nmod_ctx_init_conway", "_fq_nmod_ctx_init_conway"], [43, 0, 1, "c._fq_nmod_dense_reduce", "_fq_nmod_dense_reduce"], [44, 0, 1, "c._fq_nmod_embed_gens_naive", "_fq_nmod_embed_gens_naive"], [43, 0, 1, "c._fq_nmod_frobenius", "_fq_nmod_frobenius"], [43, 0, 1, "c._fq_nmod_inv", "_fq_nmod_inv"], [43, 0, 1, "c._fq_nmod_norm", "_fq_nmod_norm"], [48, 0, 1, "c._fq_nmod_poly_add", "_fq_nmod_poly_add"], [48, 0, 1, "c._fq_nmod_poly_compose", "_fq_nmod_poly_compose"], [48, 0, 1, "c._fq_nmod_poly_compose_divconquer", "_fq_nmod_poly_compose_divconquer"], [48, 0, 1, "c._fq_nmod_poly_compose_horner", "_fq_nmod_poly_compose_horner"], [48, 0, 1, "c._fq_nmod_poly_compose_mod", "_fq_nmod_poly_compose_mod"], [48, 0, 1, "c._fq_nmod_poly_compose_mod_brent_kung", "_fq_nmod_poly_compose_mod_brent_kung"], [48, 0, 1, "c._fq_nmod_poly_compose_mod_brent_kung_precomp_preinv", "_fq_nmod_poly_compose_mod_brent_kung_precomp_preinv"], [48, 0, 1, "c._fq_nmod_poly_compose_mod_brent_kung_preinv", "_fq_nmod_poly_compose_mod_brent_kung_preinv"], [48, 0, 1, "c._fq_nmod_poly_compose_mod_horner", "_fq_nmod_poly_compose_mod_horner"], [48, 0, 1, "c._fq_nmod_poly_compose_mod_horner_preinv", "_fq_nmod_poly_compose_mod_horner_preinv"], [48, 0, 1, "c._fq_nmod_poly_compose_mod_preinv", "_fq_nmod_poly_compose_mod_preinv"], [48, 0, 1, "c._fq_nmod_poly_derivative", "_fq_nmod_poly_derivative"], [48, 0, 1, "c._fq_nmod_poly_div_basecase", "_fq_nmod_poly_div_basecase"], [48, 0, 1, "c._fq_nmod_poly_div_newton_n_preinv", "_fq_nmod_poly_div_newton_n_preinv"], [48, 0, 1, "c._fq_nmod_poly_div_series", "_fq_nmod_poly_div_series"], [48, 0, 1, "c._fq_nmod_poly_divides", "_fq_nmod_poly_divides"], [48, 0, 1, "c._fq_nmod_poly_divrem", "_fq_nmod_poly_divrem"], [48, 0, 1, "c._fq_nmod_poly_divrem_basecase", "_fq_nmod_poly_divrem_basecase"], [48, 0, 1, "c._fq_nmod_poly_divrem_divconquer", "_fq_nmod_poly_divrem_divconquer"], [48, 0, 1, "c._fq_nmod_poly_divrem_divconquer_recursive", "_fq_nmod_poly_divrem_divconquer_recursive"], [48, 0, 1, "c._fq_nmod_poly_divrem_newton_n_preinv", "_fq_nmod_poly_divrem_newton_n_preinv"], [48, 0, 1, "c._fq_nmod_poly_evaluate_fq_nmod", "_fq_nmod_poly_evaluate_fq_nmod"], [48, 0, 1, "c._fq_nmod_poly_fprint", "_fq_nmod_poly_fprint"], [48, 0, 1, "c._fq_nmod_poly_fprint_pretty", "_fq_nmod_poly_fprint_pretty"], [48, 0, 1, "c._fq_nmod_poly_gcd", "_fq_nmod_poly_gcd"], [48, 0, 1, "c._fq_nmod_poly_gcd_euclidean", "_fq_nmod_poly_gcd_euclidean"], [48, 0, 1, "c._fq_nmod_poly_gcd_euclidean_f", "_fq_nmod_poly_gcd_euclidean_f"], [48, 0, 1, "c._fq_nmod_poly_gcd_hgcd", "_fq_nmod_poly_gcd_hgcd"], [48, 0, 1, "c._fq_nmod_poly_get_str", "_fq_nmod_poly_get_str"], [48, 0, 1, "c._fq_nmod_poly_get_str_pretty", "_fq_nmod_poly_get_str_pretty"], [48, 0, 1, "c._fq_nmod_poly_hamming_weight", "_fq_nmod_poly_hamming_weight"], [48, 0, 1, "c._fq_nmod_poly_hgcd", "_fq_nmod_poly_hgcd"], [48, 0, 1, "c._fq_nmod_poly_inv_series", "_fq_nmod_poly_inv_series"], [48, 0, 1, "c._fq_nmod_poly_inv_series_newton", "_fq_nmod_poly_inv_series_newton"], [48, 0, 1, "c._fq_nmod_poly_invsqrt_series", "_fq_nmod_poly_invsqrt_series"], [49, 0, 1, "c._fq_nmod_poly_is_squarefree", "_fq_nmod_poly_is_squarefree"], [48, 0, 1, "c._fq_nmod_poly_make_monic", "_fq_nmod_poly_make_monic"], [48, 0, 1, "c._fq_nmod_poly_mul", "_fq_nmod_poly_mul"], [48, 0, 1, "c._fq_nmod_poly_mul_KS", "_fq_nmod_poly_mul_KS"], [48, 0, 1, "c._fq_nmod_poly_mul_classical", "_fq_nmod_poly_mul_classical"], [48, 0, 1, "c._fq_nmod_poly_mul_reorder", "_fq_nmod_poly_mul_reorder"], [48, 0, 1, "c._fq_nmod_poly_mul_univariate", "_fq_nmod_poly_mul_univariate"], [48, 0, 1, "c._fq_nmod_poly_mulhigh", "_fq_nmod_poly_mulhigh"], [48, 0, 1, "c._fq_nmod_poly_mulhigh_classical", "_fq_nmod_poly_mulhigh_classical"], [48, 0, 1, "c._fq_nmod_poly_mullow", "_fq_nmod_poly_mullow"], [48, 0, 1, "c._fq_nmod_poly_mullow_KS", "_fq_nmod_poly_mullow_KS"], [48, 0, 1, "c._fq_nmod_poly_mullow_classical", "_fq_nmod_poly_mullow_classical"], [48, 0, 1, "c._fq_nmod_poly_mullow_univariate", "_fq_nmod_poly_mullow_univariate"], [48, 0, 1, "c._fq_nmod_poly_mulmod", "_fq_nmod_poly_mulmod"], [48, 0, 1, "c._fq_nmod_poly_mulmod_preinv", "_fq_nmod_poly_mulmod_preinv"], [48, 0, 1, "c._fq_nmod_poly_neg", "_fq_nmod_poly_neg"], [48, 0, 1, "c._fq_nmod_poly_normalise", "_fq_nmod_poly_normalise"], [48, 0, 1, "c._fq_nmod_poly_normalise2", "_fq_nmod_poly_normalise2"], [48, 0, 1, "c._fq_nmod_poly_pow", "_fq_nmod_poly_pow"], [48, 0, 1, "c._fq_nmod_poly_pow_trunc", "_fq_nmod_poly_pow_trunc"], [48, 0, 1, "c._fq_nmod_poly_pow_trunc_binexp", "_fq_nmod_poly_pow_trunc_binexp"], [48, 0, 1, "c._fq_nmod_poly_powmod_fmpz_binexp", "_fq_nmod_poly_powmod_fmpz_binexp"], [48, 0, 1, "c._fq_nmod_poly_powmod_fmpz_binexp_preinv", "_fq_nmod_poly_powmod_fmpz_binexp_preinv"], [48, 0, 1, "c._fq_nmod_poly_powmod_fmpz_sliding_preinv", "_fq_nmod_poly_powmod_fmpz_sliding_preinv"], [48, 0, 1, "c._fq_nmod_poly_powmod_ui_binexp", "_fq_nmod_poly_powmod_ui_binexp"], [48, 0, 1, "c._fq_nmod_poly_powmod_ui_binexp_preinv", "_fq_nmod_poly_powmod_ui_binexp_preinv"], [48, 0, 1, "c._fq_nmod_poly_powmod_x_fmpz_preinv", "_fq_nmod_poly_powmod_x_fmpz_preinv"], [48, 0, 1, "c._fq_nmod_poly_precompute_matrix", "_fq_nmod_poly_precompute_matrix"], [48, 0, 1, "c._fq_nmod_poly_print", "_fq_nmod_poly_print"], [48, 0, 1, "c._fq_nmod_poly_print_pretty", "_fq_nmod_poly_print_pretty"], [48, 0, 1, "c._fq_nmod_poly_reduce_matrix_mod_poly", "_fq_nmod_poly_reduce_matrix_mod_poly"], [48, 0, 1, "c._fq_nmod_poly_rem", "_fq_nmod_poly_rem"], [48, 0, 1, "c._fq_nmod_poly_reverse", "_fq_nmod_poly_reverse"], [48, 0, 1, "c._fq_nmod_poly_scalar_addmul_fq_nmod", "_fq_nmod_poly_scalar_addmul_fq_nmod"], [48, 0, 1, "c._fq_nmod_poly_scalar_div_fq", "_fq_nmod_poly_scalar_div_fq"], [48, 0, 1, "c._fq_nmod_poly_scalar_mul_fq_nmod", "_fq_nmod_poly_scalar_mul_fq_nmod"], [48, 0, 1, "c._fq_nmod_poly_scalar_submul_fq_nmod", "_fq_nmod_poly_scalar_submul_fq_nmod"], [48, 0, 1, "c._fq_nmod_poly_set", "_fq_nmod_poly_set"], [48, 0, 1, "c._fq_nmod_poly_set_length", "_fq_nmod_poly_set_length"], [48, 0, 1, "c._fq_nmod_poly_shift_left", "_fq_nmod_poly_shift_left"], [48, 0, 1, "c._fq_nmod_poly_shift_right", "_fq_nmod_poly_shift_right"], [48, 0, 1, "c._fq_nmod_poly_sqr", "_fq_nmod_poly_sqr"], [48, 0, 1, "c._fq_nmod_poly_sqr_KS", "_fq_nmod_poly_sqr_KS"], [48, 0, 1, "c._fq_nmod_poly_sqr_classical", "_fq_nmod_poly_sqr_classical"], [48, 0, 1, "c._fq_nmod_poly_sqrt", "_fq_nmod_poly_sqrt"], [48, 0, 1, "c._fq_nmod_poly_sqrt_series", "_fq_nmod_poly_sqrt_series"], [48, 0, 1, "c._fq_nmod_poly_sub", "_fq_nmod_poly_sub"], [48, 0, 1, "c._fq_nmod_poly_xgcd", "_fq_nmod_poly_xgcd"], [48, 0, 1, "c._fq_nmod_poly_xgcd_euclidean", "_fq_nmod_poly_xgcd_euclidean"], [48, 0, 1, "c._fq_nmod_poly_xgcd_euclidean_f", "_fq_nmod_poly_xgcd_euclidean_f"], [48, 0, 1, "c._fq_nmod_poly_zero", "_fq_nmod_poly_zero"], [43, 0, 1, "c._fq_nmod_pow", "_fq_nmod_pow"], [43, 0, 1, "c._fq_nmod_reduce", "_fq_nmod_reduce"], [43, 0, 1, "c._fq_nmod_sparse_reduce", "_fq_nmod_sparse_reduce"], [43, 0, 1, "c._fq_nmod_trace", "_fq_nmod_trace"], [50, 0, 1, "c._fq_nmod_vec_add", "_fq_nmod_vec_add"], [50, 0, 1, "c._fq_nmod_vec_clear", "_fq_nmod_vec_clear"], [50, 0, 1, "c._fq_nmod_vec_dot", "_fq_nmod_vec_dot"], [50, 0, 1, "c._fq_nmod_vec_equal", "_fq_nmod_vec_equal"], [50, 0, 1, "c._fq_nmod_vec_fprint", "_fq_nmod_vec_fprint"], [50, 0, 1, "c._fq_nmod_vec_init", "_fq_nmod_vec_init"], [50, 0, 1, "c._fq_nmod_vec_is_zero", "_fq_nmod_vec_is_zero"], [50, 0, 1, "c._fq_nmod_vec_neg", "_fq_nmod_vec_neg"], [50, 0, 1, "c._fq_nmod_vec_print", "_fq_nmod_vec_print"], [50, 0, 1, "c._fq_nmod_vec_randtest", "_fq_nmod_vec_randtest"], [50, 0, 1, "c._fq_nmod_vec_scalar_addmul_fq_nmod", "_fq_nmod_vec_scalar_addmul_fq_nmod"], [50, 0, 1, "c._fq_nmod_vec_scalar_submul_fq_nmod", "_fq_nmod_vec_scalar_submul_fq_nmod"], [50, 0, 1, "c._fq_nmod_vec_set", "_fq_nmod_vec_set"], [50, 0, 1, "c._fq_nmod_vec_sub", "_fq_nmod_vec_sub"], [50, 0, 1, "c._fq_nmod_vec_swap", "_fq_nmod_vec_swap"], [50, 0, 1, "c._fq_nmod_vec_zero", "_fq_nmod_vec_zero"], [36, 0, 1, "c._fq_norm", "_fq_norm"], [51, 0, 1, "c._fq_poly_add", "_fq_poly_add"], [51, 0, 1, "c._fq_poly_compose", "_fq_poly_compose"], [51, 0, 1, "c._fq_poly_compose_divconquer", "_fq_poly_compose_divconquer"], [51, 0, 1, "c._fq_poly_compose_horner", "_fq_poly_compose_horner"], [51, 0, 1, "c._fq_poly_compose_mod", "_fq_poly_compose_mod"], [51, 0, 1, "c._fq_poly_compose_mod_brent_kung", "_fq_poly_compose_mod_brent_kung"], [51, 0, 1, "c._fq_poly_compose_mod_brent_kung_precomp_preinv", "_fq_poly_compose_mod_brent_kung_precomp_preinv"], [51, 0, 1, "c._fq_poly_compose_mod_brent_kung_preinv", "_fq_poly_compose_mod_brent_kung_preinv"], [51, 0, 1, "c._fq_poly_compose_mod_horner", "_fq_poly_compose_mod_horner"], [51, 0, 1, "c._fq_poly_compose_mod_horner_preinv", "_fq_poly_compose_mod_horner_preinv"], [51, 0, 1, "c._fq_poly_compose_mod_preinv", "_fq_poly_compose_mod_preinv"], [51, 0, 1, "c._fq_poly_derivative", "_fq_poly_derivative"], [51, 0, 1, "c._fq_poly_div_basecase", "_fq_poly_div_basecase"], [51, 0, 1, "c._fq_poly_div_newton_n_preinv", "_fq_poly_div_newton_n_preinv"], [51, 0, 1, "c._fq_poly_div_series", "_fq_poly_div_series"], [51, 0, 1, "c._fq_poly_divides", "_fq_poly_divides"], [51, 0, 1, "c._fq_poly_divrem", "_fq_poly_divrem"], [51, 0, 1, "c._fq_poly_divrem_basecase", "_fq_poly_divrem_basecase"], [51, 0, 1, "c._fq_poly_divrem_divconquer", "_fq_poly_divrem_divconquer"], [51, 0, 1, "c._fq_poly_divrem_divconquer_recursive", "_fq_poly_divrem_divconquer_recursive"], [51, 0, 1, "c._fq_poly_divrem_newton_n_preinv", "_fq_poly_divrem_newton_n_preinv"], [51, 0, 1, "c._fq_poly_evaluate_fq", "_fq_poly_evaluate_fq"], [51, 0, 1, "c._fq_poly_fprint", "_fq_poly_fprint"], [51, 0, 1, "c._fq_poly_fprint_pretty", "_fq_poly_fprint_pretty"], [51, 0, 1, "c._fq_poly_gcd", "_fq_poly_gcd"], [51, 0, 1, "c._fq_poly_gcd_euclidean", "_fq_poly_gcd_euclidean"], [51, 0, 1, "c._fq_poly_gcd_euclidean_f", "_fq_poly_gcd_euclidean_f"], [51, 0, 1, "c._fq_poly_gcd_hgcd", "_fq_poly_gcd_hgcd"], [51, 0, 1, "c._fq_poly_get_str", "_fq_poly_get_str"], [51, 0, 1, "c._fq_poly_get_str_pretty", "_fq_poly_get_str_pretty"], [51, 0, 1, "c._fq_poly_hamming_weight", "_fq_poly_hamming_weight"], [51, 0, 1, "c._fq_poly_hgcd", "_fq_poly_hgcd"], [51, 0, 1, "c._fq_poly_inv_series", "_fq_poly_inv_series"], [51, 0, 1, "c._fq_poly_inv_series_newton", "_fq_poly_inv_series_newton"], [51, 0, 1, "c._fq_poly_invsqrt_series", "_fq_poly_invsqrt_series"], [52, 0, 1, "c._fq_poly_is_squarefree", "_fq_poly_is_squarefree"], [51, 0, 1, "c._fq_poly_make_monic", "_fq_poly_make_monic"], [51, 0, 1, "c._fq_poly_mul", "_fq_poly_mul"], [51, 0, 1, "c._fq_poly_mul_KS", "_fq_poly_mul_KS"], [51, 0, 1, "c._fq_poly_mul_classical", "_fq_poly_mul_classical"], [51, 0, 1, "c._fq_poly_mul_reorder", "_fq_poly_mul_reorder"], [51, 0, 1, "c._fq_poly_mul_univariate", "_fq_poly_mul_univariate"], [51, 0, 1, "c._fq_poly_mulhigh", "_fq_poly_mulhigh"], [51, 0, 1, "c._fq_poly_mulhigh_classical", "_fq_poly_mulhigh_classical"], [51, 0, 1, "c._fq_poly_mullow", "_fq_poly_mullow"], [51, 0, 1, "c._fq_poly_mullow_KS", "_fq_poly_mullow_KS"], [51, 0, 1, "c._fq_poly_mullow_classical", "_fq_poly_mullow_classical"], [51, 0, 1, "c._fq_poly_mullow_univariate", "_fq_poly_mullow_univariate"], [51, 0, 1, "c._fq_poly_mulmod", "_fq_poly_mulmod"], [51, 0, 1, "c._fq_poly_mulmod_preinv", "_fq_poly_mulmod_preinv"], [51, 0, 1, "c._fq_poly_neg", "_fq_poly_neg"], [51, 0, 1, "c._fq_poly_normalise", "_fq_poly_normalise"], [51, 0, 1, "c._fq_poly_normalise2", "_fq_poly_normalise2"], [51, 0, 1, "c._fq_poly_pow", "_fq_poly_pow"], [51, 0, 1, "c._fq_poly_pow_trunc", "_fq_poly_pow_trunc"], [51, 0, 1, "c._fq_poly_pow_trunc_binexp", "_fq_poly_pow_trunc_binexp"], [51, 0, 1, "c._fq_poly_powmod_fmpz_binexp", "_fq_poly_powmod_fmpz_binexp"], [51, 0, 1, "c._fq_poly_powmod_fmpz_binexp_preinv", "_fq_poly_powmod_fmpz_binexp_preinv"], [51, 0, 1, "c._fq_poly_powmod_fmpz_sliding_preinv", "_fq_poly_powmod_fmpz_sliding_preinv"], [51, 0, 1, "c._fq_poly_powmod_ui_binexp", "_fq_poly_powmod_ui_binexp"], [51, 0, 1, "c._fq_poly_powmod_ui_binexp_preinv", "_fq_poly_powmod_ui_binexp_preinv"], [51, 0, 1, "c._fq_poly_powmod_x_fmpz_preinv", "_fq_poly_powmod_x_fmpz_preinv"], [51, 0, 1, "c._fq_poly_precompute_matrix", "_fq_poly_precompute_matrix"], [51, 0, 1, "c._fq_poly_print", "_fq_poly_print"], [51, 0, 1, "c._fq_poly_print_pretty", "_fq_poly_print_pretty"], [51, 0, 1, "c._fq_poly_reduce_matrix_mod_poly", "_fq_poly_reduce_matrix_mod_poly"], [51, 0, 1, "c._fq_poly_rem", "_fq_poly_rem"], [51, 0, 1, "c._fq_poly_reverse", "_fq_poly_reverse"], [51, 0, 1, "c._fq_poly_scalar_addmul_fq", "_fq_poly_scalar_addmul_fq"], [51, 0, 1, "c._fq_poly_scalar_div_fq", "_fq_poly_scalar_div_fq"], [51, 0, 1, "c._fq_poly_scalar_mul_fq", "_fq_poly_scalar_mul_fq"], [51, 0, 1, "c._fq_poly_scalar_submul_fq", "_fq_poly_scalar_submul_fq"], [51, 0, 1, "c._fq_poly_set", "_fq_poly_set"], [51, 0, 1, "c._fq_poly_set_length", "_fq_poly_set_length"], [51, 0, 1, "c._fq_poly_shift_left", "_fq_poly_shift_left"], [51, 0, 1, "c._fq_poly_shift_right", "_fq_poly_shift_right"], [51, 0, 1, "c._fq_poly_sqr", "_fq_poly_sqr"], [51, 0, 1, "c._fq_poly_sqr_KS", "_fq_poly_sqr_KS"], [51, 0, 1, "c._fq_poly_sqr_classical", "_fq_poly_sqr_classical"], [51, 0, 1, "c._fq_poly_sqr_reorder", "_fq_poly_sqr_reorder"], [51, 0, 1, "c._fq_poly_sqrt", "_fq_poly_sqrt"], [51, 0, 1, "c._fq_poly_sqrt_series", "_fq_poly_sqrt_series"], [51, 0, 1, "c._fq_poly_sub", "_fq_poly_sub"], [51, 0, 1, "c._fq_poly_xgcd", "_fq_poly_xgcd"], [51, 0, 1, "c._fq_poly_xgcd_euclidean", "_fq_poly_xgcd_euclidean"], [51, 0, 1, "c._fq_poly_xgcd_euclidean_f", "_fq_poly_xgcd_euclidean_f"], [51, 0, 1, "c._fq_poly_zero", "_fq_poly_zero"], [36, 0, 1, "c._fq_pow", "_fq_pow"], [36, 0, 1, "c._fq_reduce", "_fq_reduce"], [36, 0, 1, "c._fq_sparse_reduce", "_fq_sparse_reduce"], [36, 0, 1, "c._fq_trace", "_fq_trace"], [53, 0, 1, "c._fq_vec_add", "_fq_vec_add"], [53, 0, 1, "c._fq_vec_clear", "_fq_vec_clear"], [53, 0, 1, "c._fq_vec_dot", "_fq_vec_dot"], [53, 0, 1, "c._fq_vec_equal", "_fq_vec_equal"], [53, 0, 1, "c._fq_vec_fprint", "_fq_vec_fprint"], [53, 0, 1, "c._fq_vec_init", "_fq_vec_init"], [53, 0, 1, "c._fq_vec_is_zero", "_fq_vec_is_zero"], [53, 0, 1, "c._fq_vec_neg", "_fq_vec_neg"], [53, 0, 1, "c._fq_vec_print", "_fq_vec_print"], [53, 0, 1, "c._fq_vec_randtest", "_fq_vec_randtest"], [53, 0, 1, "c._fq_vec_scalar_addmul_fq", "_fq_vec_scalar_addmul_fq"], [53, 0, 1, "c._fq_vec_scalar_submul_fq", "_fq_vec_scalar_submul_fq"], [53, 0, 1, "c._fq_vec_set", "_fq_vec_set"], [53, 0, 1, "c._fq_vec_sub", "_fq_vec_sub"], [53, 0, 1, "c._fq_vec_swap", "_fq_vec_swap"], [53, 0, 1, "c._fq_vec_zero", "_fq_vec_zero"], [54, 0, 1, "c._fq_zech_ctx_init_conway", "_fq_zech_ctx_init_conway"], [54, 0, 1, "c._fq_zech_dense_reduce", "_fq_zech_dense_reduce"], [55, 0, 1, "c._fq_zech_embed_gens_naive", "_fq_zech_embed_gens_naive"], [54, 0, 1, "c._fq_zech_inv", "_fq_zech_inv"], [57, 0, 1, "c._fq_zech_poly_add", "_fq_zech_poly_add"], [57, 0, 1, "c._fq_zech_poly_compose", "_fq_zech_poly_compose"], [57, 0, 1, "c._fq_zech_poly_compose_divconquer", "_fq_zech_poly_compose_divconquer"], [57, 0, 1, "c._fq_zech_poly_compose_horner", "_fq_zech_poly_compose_horner"], [57, 0, 1, "c._fq_zech_poly_compose_mod", "_fq_zech_poly_compose_mod"], [57, 0, 1, "c._fq_zech_poly_compose_mod_brent_kung", "_fq_zech_poly_compose_mod_brent_kung"], [57, 0, 1, "c._fq_zech_poly_compose_mod_brent_kung_precomp_preinv", "_fq_zech_poly_compose_mod_brent_kung_precomp_preinv"], [57, 0, 1, "c._fq_zech_poly_compose_mod_brent_kung_preinv", "_fq_zech_poly_compose_mod_brent_kung_preinv"], [57, 0, 1, "c._fq_zech_poly_compose_mod_horner", "_fq_zech_poly_compose_mod_horner"], [57, 0, 1, "c._fq_zech_poly_compose_mod_horner_preinv", "_fq_zech_poly_compose_mod_horner_preinv"], [57, 0, 1, "c._fq_zech_poly_compose_mod_preinv", "_fq_zech_poly_compose_mod_preinv"], [57, 0, 1, "c._fq_zech_poly_derivative", "_fq_zech_poly_derivative"], [57, 0, 1, "c._fq_zech_poly_div_basecase", "_fq_zech_poly_div_basecase"], [57, 0, 1, "c._fq_zech_poly_div_newton_n_preinv", "_fq_zech_poly_div_newton_n_preinv"], [57, 0, 1, "c._fq_zech_poly_div_series", "_fq_zech_poly_div_series"], [57, 0, 1, "c._fq_zech_poly_divides", "_fq_zech_poly_divides"], [57, 0, 1, "c._fq_zech_poly_divrem", "_fq_zech_poly_divrem"], [57, 0, 1, "c._fq_zech_poly_divrem_basecase", "_fq_zech_poly_divrem_basecase"], [57, 0, 1, "c._fq_zech_poly_divrem_divconquer", "_fq_zech_poly_divrem_divconquer"], [57, 0, 1, "c._fq_zech_poly_divrem_divconquer_recursive", "_fq_zech_poly_divrem_divconquer_recursive"], [57, 0, 1, "c._fq_zech_poly_divrem_newton_n_preinv", "_fq_zech_poly_divrem_newton_n_preinv"], [57, 0, 1, "c._fq_zech_poly_evaluate_fq_zech", "_fq_zech_poly_evaluate_fq_zech"], [57, 0, 1, "c._fq_zech_poly_fprint", "_fq_zech_poly_fprint"], [57, 0, 1, "c._fq_zech_poly_fprint_pretty", "_fq_zech_poly_fprint_pretty"], [57, 0, 1, "c._fq_zech_poly_gcd", "_fq_zech_poly_gcd"], [57, 0, 1, "c._fq_zech_poly_gcd_euclidean", "_fq_zech_poly_gcd_euclidean"], [57, 0, 1, "c._fq_zech_poly_gcd_euclidean_f", "_fq_zech_poly_gcd_euclidean_f"], [57, 0, 1, "c._fq_zech_poly_gcd_hgcd", "_fq_zech_poly_gcd_hgcd"], [57, 0, 1, "c._fq_zech_poly_get_str", "_fq_zech_poly_get_str"], [57, 0, 1, "c._fq_zech_poly_get_str_pretty", "_fq_zech_poly_get_str_pretty"], [57, 0, 1, "c._fq_zech_poly_hamming_weight", "_fq_zech_poly_hamming_weight"], [57, 0, 1, "c._fq_zech_poly_hgcd", "_fq_zech_poly_hgcd"], [57, 0, 1, "c._fq_zech_poly_inv_series", "_fq_zech_poly_inv_series"], [57, 0, 1, "c._fq_zech_poly_inv_series_newton", "_fq_zech_poly_inv_series_newton"], [57, 0, 1, "c._fq_zech_poly_invsqrt_series", "_fq_zech_poly_invsqrt_series"], [58, 0, 1, "c._fq_zech_poly_is_squarefree", "_fq_zech_poly_is_squarefree"], [57, 0, 1, "c._fq_zech_poly_make_monic", "_fq_zech_poly_make_monic"], [57, 0, 1, "c._fq_zech_poly_mul", "_fq_zech_poly_mul"], [57, 0, 1, "c._fq_zech_poly_mul_KS", "_fq_zech_poly_mul_KS"], [57, 0, 1, "c._fq_zech_poly_mul_classical", "_fq_zech_poly_mul_classical"], [57, 0, 1, "c._fq_zech_poly_mul_reorder", "_fq_zech_poly_mul_reorder"], [57, 0, 1, "c._fq_zech_poly_mulhigh", "_fq_zech_poly_mulhigh"], [57, 0, 1, "c._fq_zech_poly_mulhigh_classical", "_fq_zech_poly_mulhigh_classical"], [57, 0, 1, "c._fq_zech_poly_mullow", "_fq_zech_poly_mullow"], [57, 0, 1, "c._fq_zech_poly_mullow_KS", "_fq_zech_poly_mullow_KS"], [57, 0, 1, "c._fq_zech_poly_mullow_classical", "_fq_zech_poly_mullow_classical"], [57, 0, 1, "c._fq_zech_poly_mulmod", "_fq_zech_poly_mulmod"], [57, 0, 1, "c._fq_zech_poly_mulmod_preinv", "_fq_zech_poly_mulmod_preinv"], [57, 0, 1, "c._fq_zech_poly_neg", "_fq_zech_poly_neg"], [57, 0, 1, "c._fq_zech_poly_normalise", "_fq_zech_poly_normalise"], [57, 0, 1, "c._fq_zech_poly_normalise2", "_fq_zech_poly_normalise2"], [57, 0, 1, "c._fq_zech_poly_pow", "_fq_zech_poly_pow"], [57, 0, 1, "c._fq_zech_poly_pow_trunc", "_fq_zech_poly_pow_trunc"], [57, 0, 1, "c._fq_zech_poly_pow_trunc_binexp", "_fq_zech_poly_pow_trunc_binexp"], [57, 0, 1, "c._fq_zech_poly_powmod_fmpz_binexp", "_fq_zech_poly_powmod_fmpz_binexp"], [57, 0, 1, "c._fq_zech_poly_powmod_fmpz_binexp_preinv", "_fq_zech_poly_powmod_fmpz_binexp_preinv"], [57, 0, 1, "c._fq_zech_poly_powmod_fmpz_sliding_preinv", "_fq_zech_poly_powmod_fmpz_sliding_preinv"], [57, 0, 1, "c._fq_zech_poly_powmod_ui_binexp", "_fq_zech_poly_powmod_ui_binexp"], [57, 0, 1, "c._fq_zech_poly_powmod_ui_binexp_preinv", "_fq_zech_poly_powmod_ui_binexp_preinv"], [57, 0, 1, "c._fq_zech_poly_powmod_x_fmpz_preinv", "_fq_zech_poly_powmod_x_fmpz_preinv"], [57, 0, 1, "c._fq_zech_poly_precompute_matrix", "_fq_zech_poly_precompute_matrix"], [57, 0, 1, "c._fq_zech_poly_print", "_fq_zech_poly_print"], [57, 0, 1, "c._fq_zech_poly_print_pretty", "_fq_zech_poly_print_pretty"], [57, 0, 1, "c._fq_zech_poly_reduce_matrix_mod_poly", "_fq_zech_poly_reduce_matrix_mod_poly"], [57, 0, 1, "c._fq_zech_poly_rem", "_fq_zech_poly_rem"], [57, 0, 1, "c._fq_zech_poly_reverse", "_fq_zech_poly_reverse"], [57, 0, 1, "c._fq_zech_poly_scalar_addmul_fq_zech", "_fq_zech_poly_scalar_addmul_fq_zech"], [57, 0, 1, "c._fq_zech_poly_scalar_div_fq", "_fq_zech_poly_scalar_div_fq"], [57, 0, 1, "c._fq_zech_poly_scalar_mul_fq_zech", "_fq_zech_poly_scalar_mul_fq_zech"], [57, 0, 1, "c._fq_zech_poly_scalar_submul_fq_zech", "_fq_zech_poly_scalar_submul_fq_zech"], [57, 0, 1, "c._fq_zech_poly_set", "_fq_zech_poly_set"], [57, 0, 1, "c._fq_zech_poly_set_length", "_fq_zech_poly_set_length"], [57, 0, 1, "c._fq_zech_poly_shift_left", "_fq_zech_poly_shift_left"], [57, 0, 1, "c._fq_zech_poly_shift_right", "_fq_zech_poly_shift_right"], [57, 0, 1, "c._fq_zech_poly_sqr", "_fq_zech_poly_sqr"], [57, 0, 1, "c._fq_zech_poly_sqr_KS", "_fq_zech_poly_sqr_KS"], [57, 0, 1, "c._fq_zech_poly_sqr_classical", "_fq_zech_poly_sqr_classical"], [57, 0, 1, "c._fq_zech_poly_sqrt", "_fq_zech_poly_sqrt"], [57, 0, 1, "c._fq_zech_poly_sqrt_series", "_fq_zech_poly_sqrt_series"], [57, 0, 1, "c._fq_zech_poly_sub", "_fq_zech_poly_sub"], [57, 0, 1, "c._fq_zech_poly_xgcd", "_fq_zech_poly_xgcd"], [57, 0, 1, "c._fq_zech_poly_xgcd_euclidean", "_fq_zech_poly_xgcd_euclidean"], [57, 0, 1, "c._fq_zech_poly_xgcd_euclidean_f", "_fq_zech_poly_xgcd_euclidean_f"], [57, 0, 1, "c._fq_zech_poly_zero", "_fq_zech_poly_zero"], [54, 0, 1, "c._fq_zech_pow", "_fq_zech_pow"], [54, 0, 1, "c._fq_zech_reduce", "_fq_zech_reduce"], [54, 0, 1, "c._fq_zech_sparse_reduce", "_fq_zech_sparse_reduce"], [59, 0, 1, "c._fq_zech_vec_add", "_fq_zech_vec_add"], [59, 0, 1, "c._fq_zech_vec_clear", "_fq_zech_vec_clear"], [59, 0, 1, "c._fq_zech_vec_dot", "_fq_zech_vec_dot"], [59, 0, 1, "c._fq_zech_vec_equal", "_fq_zech_vec_equal"], [59, 0, 1, "c._fq_zech_vec_fprint", "_fq_zech_vec_fprint"], [59, 0, 1, "c._fq_zech_vec_init", "_fq_zech_vec_init"], [59, 0, 1, "c._fq_zech_vec_is_zero", "_fq_zech_vec_is_zero"], [59, 0, 1, "c._fq_zech_vec_neg", "_fq_zech_vec_neg"], [59, 0, 1, "c._fq_zech_vec_print", "_fq_zech_vec_print"], [59, 0, 1, "c._fq_zech_vec_randtest", "_fq_zech_vec_randtest"], [59, 0, 1, "c._fq_zech_vec_scalar_addmul_fq_zech", "_fq_zech_vec_scalar_addmul_fq_zech"], [59, 0, 1, "c._fq_zech_vec_scalar_submul_fq_zech", "_fq_zech_vec_scalar_submul_fq_zech"], [59, 0, 1, "c._fq_zech_vec_set", "_fq_zech_vec_set"], [59, 0, 1, "c._fq_zech_vec_sub", "_fq_zech_vec_sub"], [59, 0, 1, "c._fq_zech_vec_swap", "_fq_zech_vec_swap"], [59, 0, 1, "c._fq_zech_vec_zero", "_fq_zech_vec_zero"], [67, 0, 1, "c._mpf_vec_add", "_mpf_vec_add"], [67, 0, 1, "c._mpf_vec_approx_equal", "_mpf_vec_approx_equal"], [67, 0, 1, "c._mpf_vec_clear", "_mpf_vec_clear"], [67, 0, 1, "c._mpf_vec_dot", "_mpf_vec_dot"], [67, 0, 1, "c._mpf_vec_dot2", "_mpf_vec_dot2"], [67, 0, 1, "c._mpf_vec_equal", "_mpf_vec_equal"], [67, 0, 1, "c._mpf_vec_init", "_mpf_vec_init"], [67, 0, 1, "c._mpf_vec_is_zero", "_mpf_vec_is_zero"], [67, 0, 1, "c._mpf_vec_norm", "_mpf_vec_norm"], [67, 0, 1, "c._mpf_vec_norm2", "_mpf_vec_norm2"], [67, 0, 1, "c._mpf_vec_randtest", "_mpf_vec_randtest"], [67, 0, 1, "c._mpf_vec_scalar_mul_2exp", "_mpf_vec_scalar_mul_2exp"], [67, 0, 1, "c._mpf_vec_scalar_mul_mpf", "_mpf_vec_scalar_mul_mpf"], [67, 0, 1, "c._mpf_vec_set", "_mpf_vec_set"], [67, 0, 1, "c._mpf_vec_sub", "_mpf_vec_sub"], [67, 0, 1, "c._mpf_vec_zero", "_mpf_vec_zero"], [69, 0, 1, "c._mpfr_vec_add", "_mpfr_vec_add"], [69, 0, 1, "c._mpfr_vec_clear", "_mpfr_vec_clear"], [69, 0, 1, "c._mpfr_vec_init", "_mpfr_vec_init"], [69, 0, 1, "c._mpfr_vec_scalar_mul_2exp", "_mpfr_vec_scalar_mul_2exp"], [69, 0, 1, "c._mpfr_vec_scalar_mul_mpfr", "_mpfr_vec_scalar_mul_mpfr"], [69, 0, 1, "c._mpfr_vec_scalar_product", "_mpfr_vec_scalar_product"], [69, 0, 1, "c._mpfr_vec_set", "_mpfr_vec_set"], [69, 0, 1, "c._mpfr_vec_zero", "_mpfr_vec_zero"], [71, 0, 1, "c._mpoly_heap_insert", "_mpoly_heap_insert"], [71, 0, 1, "c._mpoly_heap_insert1", "_mpoly_heap_insert1"], [71, 0, 1, "c._mpoly_heap_pop", "_mpoly_heap_pop"], [71, 0, 1, "c._mpoly_heap_pop1", "_mpoly_heap_pop1"], [72, 0, 1, "c._nmod_add", "_nmod_add"], [73, 0, 1, "c._nmod_mat_mul_classical_op", "_nmod_mat_mul_classical_op"], [73, 0, 1, "c._nmod_mat_mul_classical_threaded_op", "_nmod_mat_mul_classical_threaded_op"], [73, 0, 1, "c._nmod_mat_mul_classical_threaded_pool_op", "_nmod_mat_mul_classical_threaded_pool_op"], [73, 0, 1, "c._nmod_mat_pow", "_nmod_mat_pow"], [72, 0, 1, "c._nmod_mul_fullword", "_nmod_mul_fullword"], [76, 0, 1, "c._nmod_poly_KS2_pack", "_nmod_poly_KS2_pack"], [76, 0, 1, "c._nmod_poly_KS2_pack1", "_nmod_poly_KS2_pack1"], [76, 0, 1, "c._nmod_poly_KS2_recover_reduce", "_nmod_poly_KS2_recover_reduce"], [76, 0, 1, "c._nmod_poly_KS2_recover_reduce1", "_nmod_poly_KS2_recover_reduce1"], [76, 0, 1, "c._nmod_poly_KS2_recover_reduce2", "_nmod_poly_KS2_recover_reduce2"], [76, 0, 1, "c._nmod_poly_KS2_recover_reduce2b", "_nmod_poly_KS2_recover_reduce2b"], [76, 0, 1, "c._nmod_poly_KS2_recover_reduce3", "_nmod_poly_KS2_recover_reduce3"], [76, 0, 1, "c._nmod_poly_KS2_reduce", "_nmod_poly_KS2_reduce"], [76, 0, 1, "c._nmod_poly_KS2_unpack", "_nmod_poly_KS2_unpack"], [76, 0, 1, "c._nmod_poly_KS2_unpack1", "_nmod_poly_KS2_unpack1"], [76, 0, 1, "c._nmod_poly_KS2_unpack2", "_nmod_poly_KS2_unpack2"], [76, 0, 1, "c._nmod_poly_KS2_unpack3", "_nmod_poly_KS2_unpack3"], [76, 0, 1, "c._nmod_poly_add", "_nmod_poly_add"], [76, 0, 1, "c._nmod_poly_asin_series", "_nmod_poly_asin_series"], [76, 0, 1, "c._nmod_poly_asinh_series", "_nmod_poly_asinh_series"], [76, 0, 1, "c._nmod_poly_atan_series", "_nmod_poly_atan_series"], [76, 0, 1, "c._nmod_poly_atanh_series", "_nmod_poly_atanh_series"], [76, 0, 1, "c._nmod_poly_bit_pack", "_nmod_poly_bit_pack"], [76, 0, 1, "c._nmod_poly_bit_unpack", "_nmod_poly_bit_unpack"], [76, 0, 1, "c._nmod_poly_compose", "_nmod_poly_compose"], [76, 0, 1, "c._nmod_poly_compose_divconquer", "_nmod_poly_compose_divconquer"], [76, 0, 1, "c._nmod_poly_compose_horner", "_nmod_poly_compose_horner"], [76, 0, 1, "c._nmod_poly_compose_mod", "_nmod_poly_compose_mod"], [76, 0, 1, "c._nmod_poly_compose_mod_brent_kung", "_nmod_poly_compose_mod_brent_kung"], [76, 0, 1, "c._nmod_poly_compose_mod_brent_kung_precomp_preinv", "_nmod_poly_compose_mod_brent_kung_precomp_preinv"], [76, 0, 1, "c._nmod_poly_compose_mod_brent_kung_precomp_preinv_worker", "_nmod_poly_compose_mod_brent_kung_precomp_preinv_worker"], [76, 0, 1, "c._nmod_poly_compose_mod_brent_kung_preinv", "_nmod_poly_compose_mod_brent_kung_preinv"], [76, 0, 1, "c._nmod_poly_compose_mod_brent_kung_vec_preinv", "_nmod_poly_compose_mod_brent_kung_vec_preinv"], [76, 0, 1, "c._nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "_nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool"], [76, 0, 1, "c._nmod_poly_compose_mod_horner", "_nmod_poly_compose_mod_horner"], [76, 0, 1, "c._nmod_poly_compose_series", "_nmod_poly_compose_series"], [76, 0, 1, "c._nmod_poly_compose_series_brent_kung", "_nmod_poly_compose_series_brent_kung"], [76, 0, 1, "c._nmod_poly_compose_series_divconquer", "_nmod_poly_compose_series_divconquer"], [76, 0, 1, "c._nmod_poly_compose_series_horner", "_nmod_poly_compose_series_horner"], [76, 0, 1, "c._nmod_poly_cos_series", "_nmod_poly_cos_series"], [76, 0, 1, "c._nmod_poly_cosh_series", "_nmod_poly_cosh_series"], [18, 0, 1, "c._nmod_poly_crt_local_size", "_nmod_poly_crt_local_size"], [76, 0, 1, "c._nmod_poly_derivative", "_nmod_poly_derivative"], [76, 0, 1, "c._nmod_poly_discriminant", "_nmod_poly_discriminant"], [76, 0, 1, "c._nmod_poly_div", "_nmod_poly_div"], [76, 0, 1, "c._nmod_poly_div_basecase", "_nmod_poly_div_basecase"], [76, 0, 1, "c._nmod_poly_div_divconquer", "_nmod_poly_div_divconquer"], [76, 0, 1, "c._nmod_poly_div_divconquer_recursive", "_nmod_poly_div_divconquer_recursive"], [76, 0, 1, "c._nmod_poly_div_newton", "_nmod_poly_div_newton"], [76, 0, 1, "c._nmod_poly_div_newton_n_preinv", "_nmod_poly_div_newton_n_preinv"], [76, 0, 1, "c._nmod_poly_div_root", "_nmod_poly_div_root"], [76, 0, 1, "c._nmod_poly_div_series", "_nmod_poly_div_series"], [76, 0, 1, "c._nmod_poly_div_series_basecase", "_nmod_poly_div_series_basecase"], [76, 0, 1, "c._nmod_poly_divides", "_nmod_poly_divides"], [76, 0, 1, "c._nmod_poly_divides_classical", "_nmod_poly_divides_classical"], [76, 0, 1, "c._nmod_poly_divrem", "_nmod_poly_divrem"], [76, 0, 1, "c._nmod_poly_divrem_basecase", "_nmod_poly_divrem_basecase"], [76, 0, 1, "c._nmod_poly_divrem_divconquer", "_nmod_poly_divrem_divconquer"], [76, 0, 1, "c._nmod_poly_divrem_divconquer_recursive", "_nmod_poly_divrem_divconquer_recursive"], [76, 0, 1, "c._nmod_poly_divrem_newton", "_nmod_poly_divrem_newton"], [76, 0, 1, "c._nmod_poly_divrem_newton_n_preinv", "_nmod_poly_divrem_newton_n_preinv"], [76, 0, 1, "c._nmod_poly_divrem_q0", "_nmod_poly_divrem_q0"], [76, 0, 1, "c._nmod_poly_divrem_q1", "_nmod_poly_divrem_q1"], [76, 0, 1, "c._nmod_poly_evaluate_nmod", "_nmod_poly_evaluate_nmod"], [76, 0, 1, "c._nmod_poly_evaluate_nmod_vec", "_nmod_poly_evaluate_nmod_vec"], [76, 0, 1, "c._nmod_poly_evaluate_nmod_vec_fast", "_nmod_poly_evaluate_nmod_vec_fast"], [76, 0, 1, "c._nmod_poly_evaluate_nmod_vec_fast_precomp", "_nmod_poly_evaluate_nmod_vec_fast_precomp"], [76, 0, 1, "c._nmod_poly_evaluate_nmod_vec_iter", "_nmod_poly_evaluate_nmod_vec_iter"], [76, 0, 1, "c._nmod_poly_exp_expinv_series", "_nmod_poly_exp_expinv_series"], [76, 0, 1, "c._nmod_poly_exp_series", "_nmod_poly_exp_series"], [76, 0, 1, "c._nmod_poly_exp_series_basecase", "_nmod_poly_exp_series_basecase"], [76, 0, 1, "c._nmod_poly_exp_series_monomial_ui", "_nmod_poly_exp_series_monomial_ui"], [76, 0, 1, "c._nmod_poly_gcd", "_nmod_poly_gcd"], [76, 0, 1, "c._nmod_poly_gcd_euclidean", "_nmod_poly_gcd_euclidean"], [76, 0, 1, "c._nmod_poly_gcd_hgcd", "_nmod_poly_gcd_hgcd"], [76, 0, 1, "c._nmod_poly_gcdinv", "_nmod_poly_gcdinv"], [76, 0, 1, "c._nmod_poly_hgcd", "_nmod_poly_hgcd"], [76, 0, 1, "c._nmod_poly_integral", "_nmod_poly_integral"], [76, 0, 1, "c._nmod_poly_interpolate_nmod_vec", "_nmod_poly_interpolate_nmod_vec"], [76, 0, 1, "c._nmod_poly_interpolate_nmod_vec_barycentric", "_nmod_poly_interpolate_nmod_vec_barycentric"], [76, 0, 1, "c._nmod_poly_interpolate_nmod_vec_fast", "_nmod_poly_interpolate_nmod_vec_fast"], [76, 0, 1, "c._nmod_poly_interpolate_nmod_vec_fast_precomp", "_nmod_poly_interpolate_nmod_vec_fast_precomp"], [76, 0, 1, "c._nmod_poly_interpolate_nmod_vec_newton", "_nmod_poly_interpolate_nmod_vec_newton"], [76, 0, 1, "c._nmod_poly_interpolation_weights", "_nmod_poly_interpolation_weights"], [77, 0, 1, "c._nmod_poly_interval_poly_worker", "_nmod_poly_interval_poly_worker"], [76, 0, 1, "c._nmod_poly_inv_series", "_nmod_poly_inv_series"], [76, 0, 1, "c._nmod_poly_inv_series_basecase", "_nmod_poly_inv_series_basecase"], [76, 0, 1, "c._nmod_poly_inv_series_newton", "_nmod_poly_inv_series_newton"], [76, 0, 1, "c._nmod_poly_invmod", "_nmod_poly_invmod"], [76, 0, 1, "c._nmod_poly_invsqrt_series", "_nmod_poly_invsqrt_series"], [77, 0, 1, "c._nmod_poly_is_squarefree", "_nmod_poly_is_squarefree"], [76, 0, 1, "c._nmod_poly_log_series", "_nmod_poly_log_series"], [76, 0, 1, "c._nmod_poly_log_series_monomial_ui", "_nmod_poly_log_series_monomial_ui"], [76, 0, 1, "c._nmod_poly_make_monic", "_nmod_poly_make_monic"], [76, 0, 1, "c._nmod_poly_mul", "_nmod_poly_mul"], [76, 0, 1, "c._nmod_poly_mul_KS", "_nmod_poly_mul_KS"], [76, 0, 1, "c._nmod_poly_mul_KS2", "_nmod_poly_mul_KS2"], [76, 0, 1, "c._nmod_poly_mul_KS4", "_nmod_poly_mul_KS4"], [76, 0, 1, "c._nmod_poly_mul_classical", "_nmod_poly_mul_classical"], [76, 0, 1, "c._nmod_poly_mulhigh", "_nmod_poly_mulhigh"], [76, 0, 1, "c._nmod_poly_mulhigh_classical", "_nmod_poly_mulhigh_classical"], [76, 0, 1, "c._nmod_poly_mullow", "_nmod_poly_mullow"], [76, 0, 1, "c._nmod_poly_mullow_KS", "_nmod_poly_mullow_KS"], [76, 0, 1, "c._nmod_poly_mullow_classical", "_nmod_poly_mullow_classical"], [76, 0, 1, "c._nmod_poly_mulmod", "_nmod_poly_mulmod"], [76, 0, 1, "c._nmod_poly_mulmod_preinv", "_nmod_poly_mulmod_preinv"], [76, 0, 1, "c._nmod_poly_multi_crt_local_size", "_nmod_poly_multi_crt_local_size"], [76, 0, 1, "c._nmod_poly_multi_crt_run", "_nmod_poly_multi_crt_run"], [76, 0, 1, "c._nmod_poly_multi_crt_run_p", "_nmod_poly_multi_crt_run_p"], [76, 0, 1, "c._nmod_poly_normalise", "_nmod_poly_normalise"], [76, 0, 1, "c._nmod_poly_pow", "_nmod_poly_pow"], [76, 0, 1, "c._nmod_poly_pow_binexp", "_nmod_poly_pow_binexp"], [76, 0, 1, "c._nmod_poly_pow_trunc", "_nmod_poly_pow_trunc"], [76, 0, 1, "c._nmod_poly_pow_trunc_binexp", "_nmod_poly_pow_trunc_binexp"], [76, 0, 1, "c._nmod_poly_power_sums", "_nmod_poly_power_sums"], [76, 0, 1, "c._nmod_poly_power_sums_naive", "_nmod_poly_power_sums_naive"], [76, 0, 1, "c._nmod_poly_power_sums_schoenhage", "_nmod_poly_power_sums_schoenhage"], [76, 0, 1, "c._nmod_poly_power_sums_to_poly", "_nmod_poly_power_sums_to_poly"], [76, 0, 1, "c._nmod_poly_power_sums_to_poly_naive", "_nmod_poly_power_sums_to_poly_naive"], [76, 0, 1, "c._nmod_poly_power_sums_to_poly_schoenhage", "_nmod_poly_power_sums_to_poly_schoenhage"], [76, 0, 1, "c._nmod_poly_powers_mod_preinv_naive", "_nmod_poly_powers_mod_preinv_naive"], [76, 0, 1, "c._nmod_poly_powers_mod_preinv_threaded", "_nmod_poly_powers_mod_preinv_threaded"], [76, 0, 1, "c._nmod_poly_powers_mod_preinv_threaded_pool", "_nmod_poly_powers_mod_preinv_threaded_pool"], [76, 0, 1, "c._nmod_poly_powmod_fmpz_binexp", "_nmod_poly_powmod_fmpz_binexp"], [76, 0, 1, "c._nmod_poly_powmod_fmpz_binexp_preinv", "_nmod_poly_powmod_fmpz_binexp_preinv"], [76, 0, 1, "c._nmod_poly_powmod_mpz_binexp", "_nmod_poly_powmod_mpz_binexp"], [76, 0, 1, "c._nmod_poly_powmod_mpz_binexp_preinv", "_nmod_poly_powmod_mpz_binexp_preinv"], [76, 0, 1, "c._nmod_poly_powmod_ui_binexp", "_nmod_poly_powmod_ui_binexp"], [76, 0, 1, "c._nmod_poly_powmod_ui_binexp_preinv", "_nmod_poly_powmod_ui_binexp_preinv"], [76, 0, 1, "c._nmod_poly_powmod_x_fmpz_preinv", "_nmod_poly_powmod_x_fmpz_preinv"], [76, 0, 1, "c._nmod_poly_powmod_x_ui_preinv", "_nmod_poly_powmod_x_ui_preinv"], [76, 0, 1, "c._nmod_poly_precompute_matrix", "_nmod_poly_precompute_matrix"], [76, 0, 1, "c._nmod_poly_precompute_matrix_worker", "_nmod_poly_precompute_matrix_worker"], [76, 0, 1, "c._nmod_poly_product_roots_nmod_vec", "_nmod_poly_product_roots_nmod_vec"], [76, 0, 1, "c._nmod_poly_reduce_matrix_mod_poly", "_nmod_poly_reduce_matrix_mod_poly"], [76, 0, 1, "c._nmod_poly_rem", "_nmod_poly_rem"], [76, 0, 1, "c._nmod_poly_rem_basecase", "_nmod_poly_rem_basecase"], [76, 0, 1, "c._nmod_poly_rem_q1", "_nmod_poly_rem_q1"], [76, 0, 1, "c._nmod_poly_resultant", "_nmod_poly_resultant"], [76, 0, 1, "c._nmod_poly_resultant_euclidean", "_nmod_poly_resultant_euclidean"], [76, 0, 1, "c._nmod_poly_resultant_hgcd", "_nmod_poly_resultant_hgcd"], [76, 0, 1, "c._nmod_poly_reverse", "_nmod_poly_reverse"], [76, 0, 1, "c._nmod_poly_revert_series", "_nmod_poly_revert_series"], [76, 0, 1, "c._nmod_poly_revert_series_lagrange", "_nmod_poly_revert_series_lagrange"], [76, 0, 1, "c._nmod_poly_revert_series_lagrange_fast", "_nmod_poly_revert_series_lagrange_fast"], [76, 0, 1, "c._nmod_poly_revert_series_newton", "_nmod_poly_revert_series_newton"], [76, 0, 1, "c._nmod_poly_shift_left", "_nmod_poly_shift_left"], [76, 0, 1, "c._nmod_poly_shift_right", "_nmod_poly_shift_right"], [76, 0, 1, "c._nmod_poly_sin_series", "_nmod_poly_sin_series"], [76, 0, 1, "c._nmod_poly_sinh_series", "_nmod_poly_sinh_series"], [76, 0, 1, "c._nmod_poly_sqrt", "_nmod_poly_sqrt"], [76, 0, 1, "c._nmod_poly_sqrt_series", "_nmod_poly_sqrt_series"], [76, 0, 1, "c._nmod_poly_sub", "_nmod_poly_sub"], [76, 0, 1, "c._nmod_poly_tan_series", "_nmod_poly_tan_series"], [76, 0, 1, "c._nmod_poly_tanh_series", "_nmod_poly_tanh_series"], [76, 0, 1, "c._nmod_poly_taylor_shift", "_nmod_poly_taylor_shift"], [76, 0, 1, "c._nmod_poly_taylor_shift_convolution", "_nmod_poly_taylor_shift_convolution"], [76, 0, 1, "c._nmod_poly_taylor_shift_horner", "_nmod_poly_taylor_shift_horner"], [76, 0, 1, "c._nmod_poly_tree_alloc", "_nmod_poly_tree_alloc"], [76, 0, 1, "c._nmod_poly_tree_build", "_nmod_poly_tree_build"], [76, 0, 1, "c._nmod_poly_tree_free", "_nmod_poly_tree_free"], [76, 0, 1, "c._nmod_poly_xgcd", "_nmod_poly_xgcd"], [76, 0, 1, "c._nmod_poly_xgcd_euclidean", "_nmod_poly_xgcd_euclidean"], [76, 0, 1, "c._nmod_poly_xgcd_hgcd", "_nmod_poly_xgcd_hgcd"], [72, 0, 1, "c._nmod_sub", "_nmod_sub"], [79, 0, 1, "c._nmod_vec_add", "_nmod_vec_add"], [79, 0, 1, "c._nmod_vec_clear", "_nmod_vec_clear"], [79, 0, 1, "c._nmod_vec_dot", "_nmod_vec_dot"], [79, 0, 1, "c._nmod_vec_dot_bound_limbs", "_nmod_vec_dot_bound_limbs"], [79, 0, 1, "c._nmod_vec_dot_ptr", "_nmod_vec_dot_ptr"], [79, 0, 1, "c._nmod_vec_dot_rev", "_nmod_vec_dot_rev"], [79, 0, 1, "c._nmod_vec_equal", "_nmod_vec_equal"], [79, 0, 1, "c._nmod_vec_init", "_nmod_vec_init"], [79, 0, 1, "c._nmod_vec_max_bits", "_nmod_vec_max_bits"], [79, 0, 1, "c._nmod_vec_neg", "_nmod_vec_neg"], [79, 0, 1, "c._nmod_vec_randtest", "_nmod_vec_randtest"], [79, 0, 1, "c._nmod_vec_reduce", "_nmod_vec_reduce"], [79, 0, 1, "c._nmod_vec_scalar_addmul_nmod", "_nmod_vec_scalar_addmul_nmod"], [79, 0, 1, "c._nmod_vec_scalar_mul_nmod", "_nmod_vec_scalar_mul_nmod"], [79, 0, 1, "c._nmod_vec_scalar_mul_nmod_shoup", "_nmod_vec_scalar_mul_nmod_shoup"], [79, 0, 1, "c._nmod_vec_set", "_nmod_vec_set"], [79, 0, 1, "c._nmod_vec_sub", "_nmod_vec_sub"], [79, 0, 1, "c._nmod_vec_swap", "_nmod_vec_swap"], [79, 0, 1, "c._nmod_vec_zero", "_nmod_vec_zero"], [80, 0, 1, "c._padic_canonicalise", "_padic_canonicalise"], [80, 0, 1, "c._padic_ctx_pow_ui", "_padic_ctx_pow_ui"], [80, 0, 1, "c._padic_exp", "_padic_exp"], [80, 0, 1, "c._padic_exp_balanced", "_padic_exp_balanced"], [80, 0, 1, "c._padic_exp_bound", "_padic_exp_bound"], [80, 0, 1, "c._padic_exp_rectangular", "_padic_exp_rectangular"], [80, 0, 1, "c._padic_fprint", "_padic_fprint"], [80, 0, 1, "c._padic_inv", "_padic_inv"], [80, 0, 1, "c._padic_inv_clear", "_padic_inv_clear"], [80, 0, 1, "c._padic_inv_precomp", "_padic_inv_precomp"], [80, 0, 1, "c._padic_inv_precompute", "_padic_inv_precompute"], [80, 0, 1, "c._padic_lifts_exps", "_padic_lifts_exps"], [80, 0, 1, "c._padic_lifts_pows", "_padic_lifts_pows"], [80, 0, 1, "c._padic_log", "_padic_log"], [80, 0, 1, "c._padic_log_balanced", "_padic_log_balanced"], [80, 0, 1, "c._padic_log_bound", "_padic_log_bound"], [80, 0, 1, "c._padic_log_rectangular", "_padic_log_rectangular"], [80, 0, 1, "c._padic_log_satoh", "_padic_log_satoh"], [81, 0, 1, "c._padic_mat_add", "_padic_mat_add"], [81, 0, 1, "c._padic_mat_canonicalise", "_padic_mat_canonicalise"], [81, 0, 1, "c._padic_mat_mul", "_padic_mat_mul"], [81, 0, 1, "c._padic_mat_neg", "_padic_mat_neg"], [81, 0, 1, "c._padic_mat_reduce", "_padic_mat_reduce"], [81, 0, 1, "c._padic_mat_scalar_mul_fmpz", "_padic_mat_scalar_mul_fmpz"], [81, 0, 1, "c._padic_mat_scalar_mul_padic", "_padic_mat_scalar_mul_padic"], [81, 0, 1, "c._padic_mat_sub", "_padic_mat_sub"], [82, 0, 1, "c._padic_poly_add", "_padic_poly_add"], [82, 0, 1, "c._padic_poly_canonicalise", "_padic_poly_canonicalise"], [82, 0, 1, "c._padic_poly_compose", "_padic_poly_compose"], [82, 0, 1, "c._padic_poly_compose_pow", "_padic_poly_compose_pow"], [82, 0, 1, "c._padic_poly_derivative", "_padic_poly_derivative"], [82, 0, 1, "c._padic_poly_evaluate_padic", "_padic_poly_evaluate_padic"], [82, 0, 1, "c._padic_poly_fprint", "_padic_poly_fprint"], [82, 0, 1, "c._padic_poly_fprint_pretty", "_padic_poly_fprint_pretty"], [82, 0, 1, "c._padic_poly_is_canonical", "_padic_poly_is_canonical"], [82, 0, 1, "c._padic_poly_is_reduced", "_padic_poly_is_reduced"], [82, 0, 1, "c._padic_poly_mul", "_padic_poly_mul"], [82, 0, 1, "c._padic_poly_normalise", "_padic_poly_normalise"], [82, 0, 1, "c._padic_poly_pow", "_padic_poly_pow"], [82, 0, 1, "c._padic_poly_print", "_padic_poly_print"], [82, 0, 1, "c._padic_poly_print_pretty", "_padic_poly_print_pretty"], [82, 0, 1, "c._padic_poly_scalar_mul_padic", "_padic_poly_scalar_mul_padic"], [82, 0, 1, "c._padic_poly_set_length", "_padic_poly_set_length"], [82, 0, 1, "c._padic_poly_sub", "_padic_poly_sub"], [80, 0, 1, "c._padic_print", "_padic_print"], [80, 0, 1, "c._padic_reduce", "_padic_reduce"], [80, 0, 1, "c._padic_teichmuller", "_padic_teichmuller"], [83, 0, 1, "c._perm_clear", "_perm_clear"], [83, 0, 1, "c._perm_compose", "_perm_compose"], [83, 0, 1, "c._perm_init", "_perm_init"], [83, 0, 1, "c._perm_inv", "_perm_inv"], [83, 0, 1, "c._perm_parity", "_perm_parity"], [83, 0, 1, "c._perm_print", "_perm_print"], [83, 0, 1, "c._perm_randtest", "_perm_randtest"], [83, 0, 1, "c._perm_set", "_perm_set"], [83, 0, 1, "c._perm_set_one", "_perm_set_one"], [86, 0, 1, "c._qadic_exp", "_qadic_exp"], [86, 0, 1, "c._qadic_exp_balanced", "_qadic_exp_balanced"], [86, 0, 1, "c._qadic_exp_rectangular", "_qadic_exp_rectangular"], [86, 0, 1, "c._qadic_frobenius", "_qadic_frobenius"], [86, 0, 1, "c._qadic_frobenius_a", "_qadic_frobenius_a"], [86, 0, 1, "c._qadic_inv", "_qadic_inv"], [86, 0, 1, "c._qadic_log", "_qadic_log"], [86, 0, 1, "c._qadic_log_balanced", "_qadic_log_balanced"], [86, 0, 1, "c._qadic_log_rectangular", "_qadic_log_rectangular"], [86, 0, 1, "c._qadic_norm", "_qadic_norm"], [86, 0, 1, "c._qadic_pow", "_qadic_pow"], [86, 0, 1, "c._qadic_teichmuller", "_qadic_teichmuller"], [86, 0, 1, "c._qadic_trace", "_qadic_trace"], [0, 3, 1, "c._unity_zp", "_unity_zp"], [0, 0, 1, "c._unity_zp_pow_select_k", "_unity_zp_pow_select_k"], [0, 0, 1, "c._unity_zp_reduce_cyclotomic", "_unity_zp_reduce_cyclotomic"], [0, 0, 1, "c._unity_zp_reduce_cyclotomic_divmod", "_unity_zp_reduce_cyclotomic_divmod"], [0, 3, 1, "c._unity_zpq", "_unity_zpq"], [0, 0, 1, "c._unity_zpq_mul_unity_p", "_unity_zpq_mul_unity_p"], [63, 2, 1, "c.add_ssaaaa", "add_ssaaaa"], [63, 2, 1, "c.add_sssaaaaaa", "add_sssaaaaaa"], [0, 0, 1, "c.aprcl_R_value", "aprcl_R_value"], [0, 3, 1, "c.aprcl_config", "aprcl_config"], [0, 0, 1, "c.aprcl_config_gauss_clear", "aprcl_config_gauss_clear"], [0, 0, 1, "c.aprcl_config_gauss_init", "aprcl_config_gauss_init"], [0, 0, 1, "c.aprcl_config_gauss_init_min_R", "aprcl_config_gauss_init_min_R"], [0, 0, 1, "c.aprcl_config_jacobi_clear", "aprcl_config_jacobi_clear"], [0, 0, 1, "c.aprcl_config_jacobi_init", "aprcl_config_jacobi_init"], [0, 0, 1, "c.aprcl_is_prime", "aprcl_is_prime"], [0, 0, 1, "c.aprcl_is_prime_final_division", "aprcl_is_prime_final_division"], [0, 0, 1, "c.aprcl_is_prime_gauss", "aprcl_is_prime_gauss"], [0, 0, 1, "c.aprcl_is_prime_gauss_min_R", "aprcl_is_prime_gauss_min_R"], [0, 0, 1, "c.aprcl_is_prime_jacobi", "aprcl_is_prime_jacobi"], [1, 0, 1, "c.arith_bell_number", "arith_bell_number"], [1, 0, 1, "c.arith_bell_number_dobinski", "arith_bell_number_dobinski"], [1, 0, 1, "c.arith_bell_number_multi_mod", "arith_bell_number_multi_mod"], [1, 0, 1, "c.arith_bell_number_nmod", "arith_bell_number_nmod"], [1, 0, 1, "c.arith_bell_number_nmod_vec", "arith_bell_number_nmod_vec"], [1, 0, 1, "c.arith_bell_number_nmod_vec_ogf", "arith_bell_number_nmod_vec_ogf"], [1, 0, 1, "c.arith_bell_number_nmod_vec_recursive", "arith_bell_number_nmod_vec_recursive"], [1, 0, 1, "c.arith_bell_number_nmod_vec_series", "arith_bell_number_nmod_vec_series"], [1, 0, 1, "c.arith_bell_number_size", "arith_bell_number_size"], [1, 0, 1, "c.arith_bell_number_vec", "arith_bell_number_vec"], [1, 0, 1, "c.arith_bell_number_vec_multi_mod", "arith_bell_number_vec_multi_mod"], [1, 0, 1, "c.arith_bell_number_vec_recursive", "arith_bell_number_vec_recursive"], [1, 0, 1, "c.arith_bernoulli_number", "arith_bernoulli_number"], [1, 0, 1, "c.arith_bernoulli_number_denom", "arith_bernoulli_number_denom"], [1, 0, 1, "c.arith_bernoulli_number_size", "arith_bernoulli_number_size"], [1, 0, 1, "c.arith_bernoulli_number_vec", "arith_bernoulli_number_vec"], [1, 0, 1, "c.arith_bernoulli_polynomial", "arith_bernoulli_polynomial"], [1, 0, 1, "c.arith_cos_minpoly", "arith_cos_minpoly"], [1, 0, 1, "c.arith_dedekind_sum", "arith_dedekind_sum"], [1, 0, 1, "c.arith_dedekind_sum_coprime", "arith_dedekind_sum_coprime"], [1, 0, 1, "c.arith_dedekind_sum_coprime_d", "arith_dedekind_sum_coprime_d"], [1, 0, 1, "c.arith_dedekind_sum_coprime_large", "arith_dedekind_sum_coprime_large"], [1, 0, 1, "c.arith_dedekind_sum_naive", "arith_dedekind_sum_naive"], [1, 0, 1, "c.arith_divisor_sigma", "arith_divisor_sigma"], [1, 0, 1, "c.arith_divisors", "arith_divisors"], [1, 0, 1, "c.arith_euler_number", "arith_euler_number"], [1, 0, 1, "c.arith_euler_number_size", "arith_euler_number_size"], [1, 0, 1, "c.arith_euler_number_vec", "arith_euler_number_vec"], [1, 0, 1, "c.arith_euler_phi", "arith_euler_phi"], [1, 0, 1, "c.arith_euler_polynomial", "arith_euler_polynomial"], [31, 0, 1, "c.arith_eulerian_polynomial", "arith_eulerian_polynomial"], [1, 0, 1, "c.arith_harmonic_number", "arith_harmonic_number"], [1, 0, 1, "c.arith_hrr_expsum_factored", "arith_hrr_expsum_factored"], [1, 0, 1, "c.arith_landau_function_vec", "arith_landau_function_vec"], [1, 0, 1, "c.arith_moebius_mu", "arith_moebius_mu"], [1, 0, 1, "c.arith_number_of_partitions", "arith_number_of_partitions"], [1, 0, 1, "c.arith_number_of_partitions_mpfr", "arith_number_of_partitions_mpfr"], [1, 0, 1, "c.arith_number_of_partitions_nmod_vec", "arith_number_of_partitions_nmod_vec"], [1, 0, 1, "c.arith_number_of_partitions_vec", "arith_number_of_partitions_vec"], [1, 0, 1, "c.arith_primorial", "arith_primorial"], [1, 0, 1, "c.arith_ramanujan_tau", "arith_ramanujan_tau"], [1, 0, 1, "c.arith_ramanujan_tau_series", "arith_ramanujan_tau_series"], [1, 0, 1, "c.arith_stirling_matrix_1", "arith_stirling_matrix_1"], [1, 0, 1, "c.arith_stirling_matrix_1u", "arith_stirling_matrix_1u"], [1, 0, 1, "c.arith_stirling_matrix_2", "arith_stirling_matrix_2"], [1, 0, 1, "c.arith_stirling_number_1", "arith_stirling_number_1"], [1, 0, 1, "c.arith_stirling_number_1_vec", "arith_stirling_number_1_vec"], [1, 0, 1, "c.arith_stirling_number_1_vec_next", "arith_stirling_number_1_vec_next"], [1, 0, 1, "c.arith_stirling_number_1u", "arith_stirling_number_1u"], [1, 0, 1, "c.arith_stirling_number_1u_vec", "arith_stirling_number_1u_vec"], [1, 0, 1, "c.arith_stirling_number_1u_vec_next", "arith_stirling_number_1u_vec_next"], [1, 0, 1, "c.arith_stirling_number_2", "arith_stirling_number_2"], [1, 0, 1, "c.arith_stirling_number_2_vec", "arith_stirling_number_2_vec"], [1, 0, 1, "c.arith_stirling_number_2_vec_next", "arith_stirling_number_2_vec_next"], [1, 0, 1, "c.arith_sum_of_squares", "arith_sum_of_squares"], [1, 0, 1, "c.arith_sum_of_squares_vec", "arith_sum_of_squares_vec"], [90, 3, 1, "c.bsplit_basecase_func_t", "bsplit_basecase_func_t"], [90, 3, 1, "c.bsplit_clear_func_t", "bsplit_clear_func_t"], [90, 3, 1, "c.bsplit_init_func_t", "bsplit_init_func_t"], [90, 3, 1, "c.bsplit_merge_func_t", "bsplit_merge_func_t"], [9, 0, 1, "c.butterfly_lshB", "butterfly_lshB"], [9, 0, 1, "c.butterfly_rshB", "butterfly_rshB"], [63, 2, 1, "c.byte_swap", "byte_swap"], [63, 2, 1, "c.count_leading_zeros", "count_leading_zeros"], [63, 2, 1, "c.count_trailing_zeros", "count_trailing_zeros"], [7, 0, 1, "c.d_is_nan", "d_is_nan"], [7, 0, 1, "c.d_lambertw", "d_lambertw"], [7, 0, 1, "c.d_log2", "d_log2"], [5, 0, 1, "c.d_mat_approx_equal", "d_mat_approx_equal"], [5, 0, 1, "c.d_mat_clear", "d_mat_clear"], [5, 0, 1, "c.d_mat_entry", "d_mat_entry"], [5, 0, 1, "c.d_mat_entry_ptr", "d_mat_entry_ptr"], [5, 0, 1, "c.d_mat_equal", "d_mat_equal"], [5, 0, 1, "c.d_mat_get_entry", "d_mat_get_entry"], [5, 0, 1, "c.d_mat_gso", "d_mat_gso"], [5, 0, 1, "c.d_mat_init", "d_mat_init"], [5, 0, 1, "c.d_mat_is_approx_zero", "d_mat_is_approx_zero"], [5, 0, 1, "c.d_mat_is_empty", "d_mat_is_empty"], [5, 0, 1, "c.d_mat_is_square", "d_mat_is_square"], [5, 0, 1, "c.d_mat_is_zero", "d_mat_is_zero"], [5, 0, 1, "c.d_mat_mul_classical", "d_mat_mul_classical"], [5, 0, 1, "c.d_mat_one", "d_mat_one"], [5, 0, 1, "c.d_mat_print", "d_mat_print"], [5, 0, 1, "c.d_mat_qr", "d_mat_qr"], [5, 0, 1, "c.d_mat_randtest", "d_mat_randtest"], [5, 0, 1, "c.d_mat_set", "d_mat_set"], [5, 0, 1, "c.d_mat_swap", "d_mat_swap"], [5, 0, 1, "c.d_mat_swap_entrywise", "d_mat_swap_entrywise"], [5, 0, 1, "c.d_mat_transpose", "d_mat_transpose"], [5, 0, 1, "c.d_mat_zero", "d_mat_zero"], [7, 0, 1, "c.d_polyval", "d_polyval"], [7, 0, 1, "c.d_randtest", "d_randtest"], [7, 0, 1, "c.d_randtest_signed", "d_randtest_signed"], [7, 0, 1, "c.d_randtest_special", "d_randtest_special"], [90, 3, 1, "c.do_func_t", "do_func_t"], [9, 0, 1, "c.fermat_to_mpz", "fermat_to_mpz"], [9, 0, 1, "c.fft_adjust", "fft_adjust"], [9, 0, 1, "c.fft_adjust_limbs", "fft_adjust_limbs"], [9, 0, 1, "c.fft_adjust_sqrt2", "fft_adjust_sqrt2"], [9, 0, 1, "c.fft_butterfly", "fft_butterfly"], [9, 0, 1, "c.fft_butterfly_sqrt2", "fft_butterfly_sqrt2"], [9, 0, 1, "c.fft_butterfly_twiddle", "fft_butterfly_twiddle"], [9, 0, 1, "c.fft_combine_bits", "fft_combine_bits"], [9, 0, 1, "c.fft_combine_limbs", "fft_combine_limbs"], [9, 0, 1, "c.fft_convolution", "fft_convolution"], [9, 0, 1, "c.fft_convolution_precache", "fft_convolution_precache"], [9, 0, 1, "c.fft_mfa_truncate_sqrt2", "fft_mfa_truncate_sqrt2"], [9, 0, 1, "c.fft_mfa_truncate_sqrt2_inner", "fft_mfa_truncate_sqrt2_inner"], [9, 0, 1, "c.fft_mfa_truncate_sqrt2_outer", "fft_mfa_truncate_sqrt2_outer"], [9, 0, 1, "c.fft_mulmod_2expp1", "fft_mulmod_2expp1"], [9, 0, 1, "c.fft_naive_convolution_1", "fft_naive_convolution_1"], [9, 0, 1, "c.fft_negacyclic", "fft_negacyclic"], [9, 0, 1, "c.fft_precache", "fft_precache"], [9, 0, 1, "c.fft_radix2", "fft_radix2"], [9, 0, 1, "c.fft_radix2_twiddle", "fft_radix2_twiddle"], [9, 0, 1, "c.fft_split_bits", "fft_split_bits"], [9, 0, 1, "c.fft_split_limbs", "fft_split_limbs"], [9, 0, 1, "c.fft_truncate", "fft_truncate"], [9, 0, 1, "c.fft_truncate1", "fft_truncate1"], [9, 0, 1, "c.fft_truncate1_twiddle", "fft_truncate1_twiddle"], [9, 0, 1, "c.fft_truncate_sqrt2", "fft_truncate_sqrt2"], [10, 0, 1, "c.flint_calloc", "flint_calloc"], [10, 0, 1, "c.flint_fprintf", "flint_fprintf"], [10, 0, 1, "c.flint_free", "flint_free"], [10, 0, 1, "c.flint_fscanf", "flint_fscanf"], [10, 0, 1, "c.flint_get_num_threads", "flint_get_num_threads"], [10, 0, 1, "c.flint_malloc", "flint_malloc"], [70, 0, 1, "c.flint_mpn_debug", "flint_mpn_debug"], [70, 0, 1, "c.flint_mpn_divexact_1", "flint_mpn_divexact_1"], [70, 0, 1, "c.flint_mpn_divides", "flint_mpn_divides"], [70, 0, 1, "c.flint_mpn_divisible_1_p", "flint_mpn_divisible_1_p"], [70, 0, 1, "c.flint_mpn_divrem_preinv1", "flint_mpn_divrem_preinv1"], [70, 0, 1, "c.flint_mpn_divrem_preinvn", "flint_mpn_divrem_preinvn"], [70, 0, 1, "c.flint_mpn_factor_trial", "flint_mpn_factor_trial"], [70, 0, 1, "c.flint_mpn_factor_trial_tree", "flint_mpn_factor_trial_tree"], [70, 0, 1, "c.flint_mpn_fmms1", "flint_mpn_fmms1"], [70, 0, 1, "c.flint_mpn_gcd_full", "flint_mpn_gcd_full"], [70, 0, 1, "c.flint_mpn_gcd_full2", "flint_mpn_gcd_full2"], [70, 0, 1, "c.flint_mpn_mod_preinvn", "flint_mpn_mod_preinvn"], [9, 0, 1, "c.flint_mpn_mul_fft_main", "flint_mpn_mul_fft_main"], [70, 0, 1, "c.flint_mpn_mulmod_preinv1", "flint_mpn_mulmod_preinv1"], [70, 0, 1, "c.flint_mpn_mulmod_preinvn", "flint_mpn_mulmod_preinvn"], [70, 0, 1, "c.flint_mpn_preinv1", "flint_mpn_preinv1"], [70, 0, 1, "c.flint_mpn_preinvn", "flint_mpn_preinvn"], [70, 0, 1, "c.flint_mpn_remove_2exp", "flint_mpn_remove_2exp"], [70, 0, 1, "c.flint_mpn_remove_power_ascending", "flint_mpn_remove_power_ascending"], [70, 0, 1, "c.flint_mpn_rrandom", "flint_mpn_rrandom"], [70, 0, 1, "c.flint_mpn_urandomb", "flint_mpn_urandomb"], [70, 0, 1, "c.flint_mpn_zero_p", "flint_mpn_zero_p"], [12, 0, 1, "c.flint_mpq_clear_readonly", "flint_mpq_clear_readonly"], [12, 0, 1, "c.flint_mpq_init_set_readonly", "flint_mpq_init_set_readonly"], [18, 0, 1, "c.flint_mpz_clear_readonly", "flint_mpz_clear_readonly"], [18, 0, 1, "c.flint_mpz_init_set_readonly", "flint_mpz_init_set_readonly"], [90, 0, 1, "c.flint_parallel_binary_splitting", "flint_parallel_binary_splitting"], [90, 0, 1, "c.flint_parallel_do", "flint_parallel_do"], [10, 0, 1, "c.flint_printf", "flint_printf"], [10, 0, 1, "c.flint_rand_alloc", "flint_rand_alloc"], [10, 0, 1, "c.flint_rand_free", "flint_rand_free"], [10, 3, 1, "c.flint_rand_s", "flint_rand_s"], [10, 3, 1, "c.flint_rand_t", "flint_rand_t"], [10, 0, 1, "c.flint_randclear", "flint_randclear"], [10, 0, 1, "c.flint_randinit", "flint_randinit"], [10, 0, 1, "c.flint_realloc", "flint_realloc"], [10, 0, 1, "c.flint_reset_num_workers", "flint_reset_num_workers"], [10, 0, 1, "c.flint_scanf", "flint_scanf"], [10, 0, 1, "c.flint_set_num_threads", "flint_set_num_threads"], [10, 0, 1, "c.flint_set_num_workers", "flint_set_num_workers"], [10, 0, 1, "c.flint_sprintf", "flint_sprintf"], [10, 0, 1, "c.flint_sscanf", "flint_sscanf"], [10, 0, 1, "c.flint_vprintf", "flint_vprintf"], [12, 3, 1, "c.fmpq", "fmpq"], [12, 0, 1, "c.fmpq_abs", "fmpq_abs"], [12, 0, 1, "c.fmpq_add", "fmpq_add"], [12, 0, 1, "c.fmpq_add_fmpz", "fmpq_add_fmpz"], [12, 0, 1, "c.fmpq_add_si", "fmpq_add_si"], [12, 0, 1, "c.fmpq_add_ui", "fmpq_add_ui"], [12, 0, 1, "c.fmpq_addmul", "fmpq_addmul"], [12, 0, 1, "c.fmpq_canonicalise", "fmpq_canonicalise"], [12, 0, 1, "c.fmpq_cfrac_bound", "fmpq_cfrac_bound"], [12, 0, 1, "c.fmpq_clear", "fmpq_clear"], [12, 0, 1, "c.fmpq_clear_readonly", "fmpq_clear_readonly"], [12, 0, 1, "c.fmpq_cmp", "fmpq_cmp"], [12, 0, 1, "c.fmpq_cmp_fmpz", "fmpq_cmp_fmpz"], [12, 0, 1, "c.fmpq_cmp_si", "fmpq_cmp_si"], [12, 0, 1, "c.fmpq_cmp_ui", "fmpq_cmp_ui"], [12, 0, 1, "c.fmpq_dedekind_sum", "fmpq_dedekind_sum"], [12, 0, 1, "c.fmpq_dedekind_sum_naive", "fmpq_dedekind_sum_naive"], [12, 0, 1, "c.fmpq_div", "fmpq_div"], [12, 0, 1, "c.fmpq_div_2exp", "fmpq_div_2exp"], [12, 0, 1, "c.fmpq_div_fmpz", "fmpq_div_fmpz"], [12, 0, 1, "c.fmpq_equal", "fmpq_equal"], [12, 0, 1, "c.fmpq_equal_si", "fmpq_equal_si"], [12, 0, 1, "c.fmpq_equal_ui", "fmpq_equal_ui"], [12, 0, 1, "c.fmpq_farey_neighbors", "fmpq_farey_neighbors"], [12, 0, 1, "c.fmpq_fprint", "fmpq_fprint"], [12, 0, 1, "c.fmpq_gcd", "fmpq_gcd"], [12, 0, 1, "c.fmpq_gcd_cofactors", "fmpq_gcd_cofactors"], [12, 0, 1, "c.fmpq_get_cfrac", "fmpq_get_cfrac"], [12, 0, 1, "c.fmpq_get_cfrac_naive", "fmpq_get_cfrac_naive"], [12, 0, 1, "c.fmpq_get_d", "fmpq_get_d"], [12, 0, 1, "c.fmpq_get_mpfr", "fmpq_get_mpfr"], [12, 0, 1, "c.fmpq_get_mpq", "fmpq_get_mpq"], [12, 0, 1, "c.fmpq_get_mpz_frac", "fmpq_get_mpz_frac"], [12, 0, 1, "c.fmpq_get_str", "fmpq_get_str"], [12, 0, 1, "c.fmpq_harmonic_ui", "fmpq_harmonic_ui"], [12, 0, 1, "c.fmpq_height", "fmpq_height"], [12, 0, 1, "c.fmpq_height_bits", "fmpq_height_bits"], [12, 0, 1, "c.fmpq_init", "fmpq_init"], [12, 0, 1, "c.fmpq_init_set_mpz_frac_readonly", "fmpq_init_set_mpz_frac_readonly"], [12, 0, 1, "c.fmpq_init_set_readonly", "fmpq_init_set_readonly"], [12, 0, 1, "c.fmpq_inv", "fmpq_inv"], [12, 0, 1, "c.fmpq_is_canonical", "fmpq_is_canonical"], [12, 0, 1, "c.fmpq_is_one", "fmpq_is_one"], [12, 0, 1, "c.fmpq_is_pm1", "fmpq_is_pm1"], [12, 0, 1, "c.fmpq_is_zero", "fmpq_is_zero"], [13, 0, 1, "c.fmpq_mat_add", "fmpq_mat_add"], [13, 0, 1, "c.fmpq_mat_can_solve", "fmpq_mat_can_solve"], [13, 0, 1, "c.fmpq_mat_can_solve_fraction_free", "fmpq_mat_can_solve_fraction_free"], [13, 0, 1, "c.fmpq_mat_can_solve_multi_mod", "fmpq_mat_can_solve_multi_mod"], [13, 0, 1, "c.fmpq_mat_charpoly", "fmpq_mat_charpoly"], [13, 0, 1, "c.fmpq_mat_clear", "fmpq_mat_clear"], [13, 0, 1, "c.fmpq_mat_concat_horizontal", "fmpq_mat_concat_horizontal"], [13, 0, 1, "c.fmpq_mat_concat_vertical", "fmpq_mat_concat_vertical"], [13, 0, 1, "c.fmpq_mat_det", "fmpq_mat_det"], [13, 0, 1, "c.fmpq_mat_entry", "fmpq_mat_entry"], [13, 0, 1, "c.fmpq_mat_entry_den", "fmpq_mat_entry_den"], [13, 0, 1, "c.fmpq_mat_entry_num", "fmpq_mat_entry_num"], [13, 0, 1, "c.fmpq_mat_equal", "fmpq_mat_equal"], [13, 0, 1, "c.fmpq_mat_fmpq_vec_mul", "fmpq_mat_fmpq_vec_mul"], [13, 0, 1, "c.fmpq_mat_fmpq_vec_mul_ptr", "fmpq_mat_fmpq_vec_mul_ptr"], [13, 0, 1, "c.fmpq_mat_fmpz_vec_mul", "fmpq_mat_fmpz_vec_mul"], [13, 0, 1, "c.fmpq_mat_fmpz_vec_mul_ptr", "fmpq_mat_fmpz_vec_mul_ptr"], [13, 0, 1, "c.fmpq_mat_get_fmpz_mat", "fmpq_mat_get_fmpz_mat"], [13, 0, 1, "c.fmpq_mat_get_fmpz_mat_colwise", "fmpq_mat_get_fmpz_mat_colwise"], [13, 0, 1, "c.fmpq_mat_get_fmpz_mat_entrywise", "fmpq_mat_get_fmpz_mat_entrywise"], [13, 0, 1, "c.fmpq_mat_get_fmpz_mat_matwise", "fmpq_mat_get_fmpz_mat_matwise"], [13, 0, 1, "c.fmpq_mat_get_fmpz_mat_mod_fmpz", "fmpq_mat_get_fmpz_mat_mod_fmpz"], [13, 0, 1, "c.fmpq_mat_get_fmpz_mat_rowwise", "fmpq_mat_get_fmpz_mat_rowwise"], [13, 0, 1, "c.fmpq_mat_get_fmpz_mat_rowwise_2", "fmpq_mat_get_fmpz_mat_rowwise_2"], [13, 0, 1, "c.fmpq_mat_gso", "fmpq_mat_gso"], [13, 0, 1, "c.fmpq_mat_hilbert_matrix", "fmpq_mat_hilbert_matrix"], [13, 0, 1, "c.fmpq_mat_init", "fmpq_mat_init"], [13, 0, 1, "c.fmpq_mat_init_set", "fmpq_mat_init_set"], [13, 0, 1, "c.fmpq_mat_inv", "fmpq_mat_inv"], [13, 0, 1, "c.fmpq_mat_invert_cols", "fmpq_mat_invert_cols"], [13, 0, 1, "c.fmpq_mat_invert_rows", "fmpq_mat_invert_rows"], [13, 0, 1, "c.fmpq_mat_is_empty", "fmpq_mat_is_empty"], [13, 0, 1, "c.fmpq_mat_is_integral", "fmpq_mat_is_integral"], [13, 0, 1, "c.fmpq_mat_is_one", "fmpq_mat_is_one"], [13, 0, 1, "c.fmpq_mat_is_square", "fmpq_mat_is_square"], [13, 0, 1, "c.fmpq_mat_is_zero", "fmpq_mat_is_zero"], [13, 0, 1, "c.fmpq_mat_kronecker_product", "fmpq_mat_kronecker_product"], [13, 0, 1, "c.fmpq_mat_minpoly", "fmpq_mat_minpoly"], [13, 0, 1, "c.fmpq_mat_mul", "fmpq_mat_mul"], [13, 0, 1, "c.fmpq_mat_mul_cleared", "fmpq_mat_mul_cleared"], [13, 0, 1, "c.fmpq_mat_mul_direct", "fmpq_mat_mul_direct"], [13, 0, 1, "c.fmpq_mat_mul_fmpq_vec", "fmpq_mat_mul_fmpq_vec"], [13, 0, 1, "c.fmpq_mat_mul_fmpq_vec_ptr", "fmpq_mat_mul_fmpq_vec_ptr"], [13, 0, 1, "c.fmpq_mat_mul_fmpz_mat", "fmpq_mat_mul_fmpz_mat"], [13, 0, 1, "c.fmpq_mat_mul_fmpz_vec", "fmpq_mat_mul_fmpz_vec"], [13, 0, 1, "c.fmpq_mat_mul_fmpz_vec_ptr", "fmpq_mat_mul_fmpz_vec_ptr"], [13, 0, 1, "c.fmpq_mat_mul_r_fmpz_mat", "fmpq_mat_mul_r_fmpz_mat"], [13, 0, 1, "c.fmpq_mat_ncols", "fmpq_mat_ncols"], [13, 0, 1, "c.fmpq_mat_neg", "fmpq_mat_neg"], [13, 0, 1, "c.fmpq_mat_nrows", "fmpq_mat_nrows"], [13, 0, 1, "c.fmpq_mat_one", "fmpq_mat_one"], [13, 0, 1, "c.fmpq_mat_pivot", "fmpq_mat_pivot"], [13, 0, 1, "c.fmpq_mat_print", "fmpq_mat_print"], [13, 0, 1, "c.fmpq_mat_randbits", "fmpq_mat_randbits"], [13, 0, 1, "c.fmpq_mat_randtest", "fmpq_mat_randtest"], [13, 0, 1, "c.fmpq_mat_rref", "fmpq_mat_rref"], [13, 0, 1, "c.fmpq_mat_rref_classical", "fmpq_mat_rref_classical"], [13, 0, 1, "c.fmpq_mat_rref_fraction_free", "fmpq_mat_rref_fraction_free"], [13, 0, 1, "c.fmpq_mat_scalar_div_fmpz", "fmpq_mat_scalar_div_fmpz"], [13, 0, 1, "c.fmpq_mat_scalar_mul_fmpq", "fmpq_mat_scalar_mul_fmpq"], [13, 0, 1, "c.fmpq_mat_scalar_mul_fmpz", "fmpq_mat_scalar_mul_fmpz"], [13, 0, 1, "c.fmpq_mat_set", "fmpq_mat_set"], [13, 0, 1, "c.fmpq_mat_set_fmpz_mat", "fmpq_mat_set_fmpz_mat"], [13, 0, 1, "c.fmpq_mat_set_fmpz_mat_div_fmpz", "fmpq_mat_set_fmpz_mat_div_fmpz"], [13, 0, 1, "c.fmpq_mat_set_fmpz_mat_mod_fmpz", "fmpq_mat_set_fmpz_mat_mod_fmpz"], [13, 0, 1, "c.fmpq_mat_similarity", "fmpq_mat_similarity"], [13, 0, 1, "c.fmpq_mat_solve", "fmpq_mat_solve"], [13, 0, 1, "c.fmpq_mat_solve_dixon", "fmpq_mat_solve_dixon"], [13, 0, 1, "c.fmpq_mat_solve_fmpz_mat", "fmpq_mat_solve_fmpz_mat"], [13, 0, 1, "c.fmpq_mat_solve_fmpz_mat_dixon", "fmpq_mat_solve_fmpz_mat_dixon"], [13, 0, 1, "c.fmpq_mat_solve_fmpz_mat_fraction_free", "fmpq_mat_solve_fmpz_mat_fraction_free"], [13, 0, 1, "c.fmpq_mat_solve_fmpz_mat_multi_mod", "fmpq_mat_solve_fmpz_mat_multi_mod"], [13, 0, 1, "c.fmpq_mat_solve_fraction_free", "fmpq_mat_solve_fraction_free"], [13, 0, 1, "c.fmpq_mat_solve_multi_mod", "fmpq_mat_solve_multi_mod"], [13, 3, 1, "c.fmpq_mat_struct", "fmpq_mat_struct"], [13, 0, 1, "c.fmpq_mat_sub", "fmpq_mat_sub"], [13, 0, 1, "c.fmpq_mat_swap", "fmpq_mat_swap"], [13, 0, 1, "c.fmpq_mat_swap_cols", "fmpq_mat_swap_cols"], [13, 0, 1, "c.fmpq_mat_swap_entrywise", "fmpq_mat_swap_entrywise"], [13, 0, 1, "c.fmpq_mat_swap_rows", "fmpq_mat_swap_rows"], [13, 3, 1, "c.fmpq_mat_t", "fmpq_mat_t"], [13, 0, 1, "c.fmpq_mat_trace", "fmpq_mat_trace"], [13, 0, 1, "c.fmpq_mat_transpose", "fmpq_mat_transpose"], [13, 0, 1, "c.fmpq_mat_window_clear", "fmpq_mat_window_clear"], [13, 0, 1, "c.fmpq_mat_window_init", "fmpq_mat_window_init"], [13, 0, 1, "c.fmpq_mat_zero", "fmpq_mat_zero"], [12, 0, 1, "c.fmpq_mod_fmpz", "fmpq_mod_fmpz"], [14, 0, 1, "c.fmpq_mpoly_add", "fmpq_mpoly_add"], [14, 0, 1, "c.fmpq_mpoly_add_fmpq", "fmpq_mpoly_add_fmpq"], [14, 0, 1, "c.fmpq_mpoly_add_fmpz", "fmpq_mpoly_add_fmpz"], [14, 0, 1, "c.fmpq_mpoly_add_si", "fmpq_mpoly_add_si"], [14, 0, 1, "c.fmpq_mpoly_add_ui", "fmpq_mpoly_add_ui"], [14, 0, 1, "c.fmpq_mpoly_clear", "fmpq_mpoly_clear"], [14, 0, 1, "c.fmpq_mpoly_cmp", "fmpq_mpoly_cmp"], [14, 0, 1, "c.fmpq_mpoly_combine_like_terms", "fmpq_mpoly_combine_like_terms"], [14, 0, 1, "c.fmpq_mpoly_compose_fmpq_mpoly", "fmpq_mpoly_compose_fmpq_mpoly"], [14, 0, 1, "c.fmpq_mpoly_compose_fmpq_mpoly_gen", "fmpq_mpoly_compose_fmpq_mpoly_gen"], [14, 0, 1, "c.fmpq_mpoly_compose_fmpq_poly", "fmpq_mpoly_compose_fmpq_poly"], [14, 0, 1, "c.fmpq_mpoly_content", "fmpq_mpoly_content"], [14, 0, 1, "c.fmpq_mpoly_content_ref", "fmpq_mpoly_content_ref"], [14, 0, 1, "c.fmpq_mpoly_content_vars", "fmpq_mpoly_content_vars"], [14, 0, 1, "c.fmpq_mpoly_ctx_clear", "fmpq_mpoly_ctx_clear"], [14, 0, 1, "c.fmpq_mpoly_ctx_init", "fmpq_mpoly_ctx_init"], [14, 0, 1, "c.fmpq_mpoly_ctx_nvars", "fmpq_mpoly_ctx_nvars"], [14, 0, 1, "c.fmpq_mpoly_ctx_ord", "fmpq_mpoly_ctx_ord"], [14, 3, 1, "c.fmpq_mpoly_ctx_struct", "fmpq_mpoly_ctx_struct"], [14, 3, 1, "c.fmpq_mpoly_ctx_t", "fmpq_mpoly_ctx_t"], [14, 0, 1, "c.fmpq_mpoly_degree_fmpz", "fmpq_mpoly_degree_fmpz"], [14, 0, 1, "c.fmpq_mpoly_degree_si", "fmpq_mpoly_degree_si"], [14, 0, 1, "c.fmpq_mpoly_degrees_fit_si", "fmpq_mpoly_degrees_fit_si"], [14, 0, 1, "c.fmpq_mpoly_degrees_fmpz", "fmpq_mpoly_degrees_fmpz"], [14, 0, 1, "c.fmpq_mpoly_degrees_si", "fmpq_mpoly_degrees_si"], [14, 0, 1, "c.fmpq_mpoly_derivative", "fmpq_mpoly_derivative"], [14, 0, 1, "c.fmpq_mpoly_discriminant", "fmpq_mpoly_discriminant"], [14, 0, 1, "c.fmpq_mpoly_div", "fmpq_mpoly_div"], [14, 0, 1, "c.fmpq_mpoly_divides", "fmpq_mpoly_divides"], [14, 0, 1, "c.fmpq_mpoly_divrem", "fmpq_mpoly_divrem"], [14, 0, 1, "c.fmpq_mpoly_divrem_ideal", "fmpq_mpoly_divrem_ideal"], [14, 0, 1, "c.fmpq_mpoly_equal", "fmpq_mpoly_equal"], [14, 0, 1, "c.fmpq_mpoly_equal_fmpq", "fmpq_mpoly_equal_fmpq"], [14, 0, 1, "c.fmpq_mpoly_equal_fmpz", "fmpq_mpoly_equal_fmpz"], [14, 0, 1, "c.fmpq_mpoly_equal_si", "fmpq_mpoly_equal_si"], [14, 0, 1, "c.fmpq_mpoly_equal_ui", "fmpq_mpoly_equal_ui"], [14, 0, 1, "c.fmpq_mpoly_evaluate_all_fmpq", "fmpq_mpoly_evaluate_all_fmpq"], [14, 0, 1, "c.fmpq_mpoly_evaluate_one_fmpq", "fmpq_mpoly_evaluate_one_fmpq"], [15, 0, 1, "c.fmpq_mpoly_factor", "fmpq_mpoly_factor"], [15, 0, 1, "c.fmpq_mpoly_factor_clear", "fmpq_mpoly_factor_clear"], [15, 0, 1, "c.fmpq_mpoly_factor_get_base", "fmpq_mpoly_factor_get_base"], [15, 0, 1, "c.fmpq_mpoly_factor_get_constant_fmpq", "fmpq_mpoly_factor_get_constant_fmpq"], [15, 0, 1, "c.fmpq_mpoly_factor_get_exp_si", "fmpq_mpoly_factor_get_exp_si"], [15, 0, 1, "c.fmpq_mpoly_factor_init", "fmpq_mpoly_factor_init"], [15, 0, 1, "c.fmpq_mpoly_factor_length", "fmpq_mpoly_factor_length"], [15, 0, 1, "c.fmpq_mpoly_factor_make_integral", "fmpq_mpoly_factor_make_integral"], [15, 0, 1, "c.fmpq_mpoly_factor_make_monic", "fmpq_mpoly_factor_make_monic"], [15, 0, 1, "c.fmpq_mpoly_factor_sort", "fmpq_mpoly_factor_sort"], [15, 0, 1, "c.fmpq_mpoly_factor_squarefree", "fmpq_mpoly_factor_squarefree"], [15, 3, 1, "c.fmpq_mpoly_factor_struct", "fmpq_mpoly_factor_struct"], [15, 0, 1, "c.fmpq_mpoly_factor_swap", "fmpq_mpoly_factor_swap"], [15, 0, 1, "c.fmpq_mpoly_factor_swap_base", "fmpq_mpoly_factor_swap_base"], [15, 3, 1, "c.fmpq_mpoly_factor_t", "fmpq_mpoly_factor_t"], [14, 0, 1, "c.fmpq_mpoly_fit_bits", "fmpq_mpoly_fit_bits"], [14, 0, 1, "c.fmpq_mpoly_fit_length", "fmpq_mpoly_fit_length"], [14, 0, 1, "c.fmpq_mpoly_fprint_pretty", "fmpq_mpoly_fprint_pretty"], [14, 0, 1, "c.fmpq_mpoly_from_univar", "fmpq_mpoly_from_univar"], [14, 0, 1, "c.fmpq_mpoly_gcd", "fmpq_mpoly_gcd"], [14, 0, 1, "c.fmpq_mpoly_gcd_brown", "fmpq_mpoly_gcd_brown"], [14, 0, 1, "c.fmpq_mpoly_gcd_cofactors", "fmpq_mpoly_gcd_cofactors"], [14, 0, 1, "c.fmpq_mpoly_gcd_hensel", "fmpq_mpoly_gcd_hensel"], [14, 0, 1, "c.fmpq_mpoly_gcd_subresultant", "fmpq_mpoly_gcd_subresultant"], [14, 0, 1, "c.fmpq_mpoly_gcd_zippel", "fmpq_mpoly_gcd_zippel"], [14, 0, 1, "c.fmpq_mpoly_gcd_zippel2", "fmpq_mpoly_gcd_zippel2"], [14, 0, 1, "c.fmpq_mpoly_gen", "fmpq_mpoly_gen"], [14, 0, 1, "c.fmpq_mpoly_get_coeff_fmpq_fmpz", "fmpq_mpoly_get_coeff_fmpq_fmpz"], [14, 0, 1, "c.fmpq_mpoly_get_coeff_fmpq_monomial", "fmpq_mpoly_get_coeff_fmpq_monomial"], [14, 0, 1, "c.fmpq_mpoly_get_coeff_fmpq_ui", "fmpq_mpoly_get_coeff_fmpq_ui"], [14, 0, 1, "c.fmpq_mpoly_get_coeff_vars_ui", "fmpq_mpoly_get_coeff_vars_ui"], [14, 0, 1, "c.fmpq_mpoly_get_denominator", "fmpq_mpoly_get_denominator"], [14, 0, 1, "c.fmpq_mpoly_get_fmpq", "fmpq_mpoly_get_fmpq"], [14, 0, 1, "c.fmpq_mpoly_get_str_pretty", "fmpq_mpoly_get_str_pretty"], [14, 0, 1, "c.fmpq_mpoly_get_term", "fmpq_mpoly_get_term"], [14, 0, 1, "c.fmpq_mpoly_get_term_coeff_fmpq", "fmpq_mpoly_get_term_coeff_fmpq"], [14, 0, 1, "c.fmpq_mpoly_get_term_exp_fmpz", "fmpq_mpoly_get_term_exp_fmpz"], [14, 0, 1, "c.fmpq_mpoly_get_term_exp_si", "fmpq_mpoly_get_term_exp_si"], [14, 0, 1, "c.fmpq_mpoly_get_term_exp_ui", "fmpq_mpoly_get_term_exp_ui"], [14, 0, 1, "c.fmpq_mpoly_get_term_monomial", "fmpq_mpoly_get_term_monomial"], [14, 0, 1, "c.fmpq_mpoly_get_term_var_exp_si", "fmpq_mpoly_get_term_var_exp_si"], [14, 0, 1, "c.fmpq_mpoly_get_term_var_exp_ui", "fmpq_mpoly_get_term_var_exp_ui"], [14, 0, 1, "c.fmpq_mpoly_init", "fmpq_mpoly_init"], [14, 0, 1, "c.fmpq_mpoly_init2", "fmpq_mpoly_init2"], [14, 0, 1, "c.fmpq_mpoly_init3", "fmpq_mpoly_init3"], [14, 0, 1, "c.fmpq_mpoly_integral", "fmpq_mpoly_integral"], [14, 0, 1, "c.fmpq_mpoly_is_canonical", "fmpq_mpoly_is_canonical"], [14, 0, 1, "c.fmpq_mpoly_is_fmpq", "fmpq_mpoly_is_fmpq"], [14, 0, 1, "c.fmpq_mpoly_is_gen", "fmpq_mpoly_is_gen"], [14, 0, 1, "c.fmpq_mpoly_is_one", "fmpq_mpoly_is_one"], [14, 0, 1, "c.fmpq_mpoly_is_square", "fmpq_mpoly_is_square"], [14, 0, 1, "c.fmpq_mpoly_is_zero", "fmpq_mpoly_is_zero"], [14, 0, 1, "c.fmpq_mpoly_length", "fmpq_mpoly_length"], [14, 0, 1, "c.fmpq_mpoly_make_monic", "fmpq_mpoly_make_monic"], [14, 0, 1, "c.fmpq_mpoly_mul", "fmpq_mpoly_mul"], [14, 0, 1, "c.fmpq_mpoly_neg", "fmpq_mpoly_neg"], [14, 0, 1, "c.fmpq_mpoly_one", "fmpq_mpoly_one"], [14, 0, 1, "c.fmpq_mpoly_pow_fmpz", "fmpq_mpoly_pow_fmpz"], [14, 0, 1, "c.fmpq_mpoly_pow_ui", "fmpq_mpoly_pow_ui"], [14, 0, 1, "c.fmpq_mpoly_print_pretty", "fmpq_mpoly_print_pretty"], [14, 0, 1, "c.fmpq_mpoly_push_term_fmpq_fmpz", "fmpq_mpoly_push_term_fmpq_fmpz"], [14, 0, 1, "c.fmpq_mpoly_push_term_fmpq_ui", "fmpq_mpoly_push_term_fmpq_ui"], [14, 0, 1, "c.fmpq_mpoly_push_term_fmpz_fmpz", "fmpq_mpoly_push_term_fmpz_fmpz"], [14, 0, 1, "c.fmpq_mpoly_push_term_fmpz_ui", "fmpq_mpoly_push_term_fmpz_ui"], [14, 0, 1, "c.fmpq_mpoly_push_term_si_fmpz", "fmpq_mpoly_push_term_si_fmpz"], [14, 0, 1, "c.fmpq_mpoly_push_term_si_ui", "fmpq_mpoly_push_term_si_ui"], [14, 0, 1, "c.fmpq_mpoly_push_term_ui_fmpz", "fmpq_mpoly_push_term_ui_fmpz"], [14, 0, 1, "c.fmpq_mpoly_push_term_ui_ui", "fmpq_mpoly_push_term_ui_ui"], [14, 0, 1, "c.fmpq_mpoly_randtest_bits", "fmpq_mpoly_randtest_bits"], [14, 0, 1, "c.fmpq_mpoly_randtest_bound", "fmpq_mpoly_randtest_bound"], [14, 0, 1, "c.fmpq_mpoly_randtest_bounds", "fmpq_mpoly_randtest_bounds"], [14, 0, 1, "c.fmpq_mpoly_realloc", "fmpq_mpoly_realloc"], [14, 0, 1, "c.fmpq_mpoly_reduce", "fmpq_mpoly_reduce"], [14, 0, 1, "c.fmpq_mpoly_resize", "fmpq_mpoly_resize"], [14, 0, 1, "c.fmpq_mpoly_resultant", "fmpq_mpoly_resultant"], [14, 0, 1, "c.fmpq_mpoly_reverse", "fmpq_mpoly_reverse"], [14, 0, 1, "c.fmpq_mpoly_scalar_div_fmpq", "fmpq_mpoly_scalar_div_fmpq"], [14, 0, 1, "c.fmpq_mpoly_scalar_div_fmpz", "fmpq_mpoly_scalar_div_fmpz"], [14, 0, 1, "c.fmpq_mpoly_scalar_div_si", "fmpq_mpoly_scalar_div_si"], [14, 0, 1, "c.fmpq_mpoly_scalar_div_ui", "fmpq_mpoly_scalar_div_ui"], [14, 0, 1, "c.fmpq_mpoly_scalar_mul_fmpq", "fmpq_mpoly_scalar_mul_fmpq"], [14, 0, 1, "c.fmpq_mpoly_scalar_mul_fmpz", "fmpq_mpoly_scalar_mul_fmpz"], [14, 0, 1, "c.fmpq_mpoly_scalar_mul_si", "fmpq_mpoly_scalar_mul_si"], [14, 0, 1, "c.fmpq_mpoly_scalar_mul_ui", "fmpq_mpoly_scalar_mul_ui"], [14, 0, 1, "c.fmpq_mpoly_set", "fmpq_mpoly_set"], [14, 0, 1, "c.fmpq_mpoly_set_coeff_fmpq_fmpz", "fmpq_mpoly_set_coeff_fmpq_fmpz"], [14, 0, 1, "c.fmpq_mpoly_set_coeff_fmpq_monomial", "fmpq_mpoly_set_coeff_fmpq_monomial"], [14, 0, 1, "c.fmpq_mpoly_set_coeff_fmpq_ui", "fmpq_mpoly_set_coeff_fmpq_ui"], [14, 0, 1, "c.fmpq_mpoly_set_fmpq", "fmpq_mpoly_set_fmpq"], [14, 0, 1, "c.fmpq_mpoly_set_fmpz", "fmpq_mpoly_set_fmpz"], [14, 0, 1, "c.fmpq_mpoly_set_si", "fmpq_mpoly_set_si"], [14, 0, 1, "c.fmpq_mpoly_set_str_pretty", "fmpq_mpoly_set_str_pretty"], [14, 0, 1, "c.fmpq_mpoly_set_term_coeff_fmpq", "fmpq_mpoly_set_term_coeff_fmpq"], [14, 0, 1, "c.fmpq_mpoly_set_term_exp_fmpz", "fmpq_mpoly_set_term_exp_fmpz"], [14, 0, 1, "c.fmpq_mpoly_set_term_exp_ui", "fmpq_mpoly_set_term_exp_ui"], [14, 0, 1, "c.fmpq_mpoly_set_ui", "fmpq_mpoly_set_ui"], [14, 0, 1, "c.fmpq_mpoly_sort_terms", "fmpq_mpoly_sort_terms"], [14, 0, 1, "c.fmpq_mpoly_sqrt", "fmpq_mpoly_sqrt"], [14, 3, 1, "c.fmpq_mpoly_struct", "fmpq_mpoly_struct"], [14, 0, 1, "c.fmpq_mpoly_sub", "fmpq_mpoly_sub"], [14, 0, 1, "c.fmpq_mpoly_sub_fmpq", "fmpq_mpoly_sub_fmpq"], [14, 0, 1, "c.fmpq_mpoly_sub_fmpz", "fmpq_mpoly_sub_fmpz"], [14, 0, 1, "c.fmpq_mpoly_sub_si", "fmpq_mpoly_sub_si"], [14, 0, 1, "c.fmpq_mpoly_sub_ui", "fmpq_mpoly_sub_ui"], [14, 0, 1, "c.fmpq_mpoly_swap", "fmpq_mpoly_swap"], [14, 3, 1, "c.fmpq_mpoly_t", "fmpq_mpoly_t"], [14, 0, 1, "c.fmpq_mpoly_term_content", "fmpq_mpoly_term_content"], [14, 0, 1, "c.fmpq_mpoly_term_exp_fits_si", "fmpq_mpoly_term_exp_fits_si"], [14, 0, 1, "c.fmpq_mpoly_term_exp_fits_ui", "fmpq_mpoly_term_exp_fits_ui"], [14, 0, 1, "c.fmpq_mpoly_to_univar", "fmpq_mpoly_to_univar"], [14, 0, 1, "c.fmpq_mpoly_total_degree_fits_si", "fmpq_mpoly_total_degree_fits_si"], [14, 0, 1, "c.fmpq_mpoly_total_degree_fmpz", "fmpq_mpoly_total_degree_fmpz"], [14, 0, 1, "c.fmpq_mpoly_total_degree_si", "fmpq_mpoly_total_degree_si"], [14, 0, 1, "c.fmpq_mpoly_univar_clear", "fmpq_mpoly_univar_clear"], [14, 0, 1, "c.fmpq_mpoly_univar_degree_fits_si", "fmpq_mpoly_univar_degree_fits_si"], [14, 0, 1, "c.fmpq_mpoly_univar_get_term_coeff", "fmpq_mpoly_univar_get_term_coeff"], [14, 0, 1, "c.fmpq_mpoly_univar_get_term_exp_si", "fmpq_mpoly_univar_get_term_exp_si"], [14, 0, 1, "c.fmpq_mpoly_univar_init", "fmpq_mpoly_univar_init"], [14, 0, 1, "c.fmpq_mpoly_univar_length", "fmpq_mpoly_univar_length"], [14, 0, 1, "c.fmpq_mpoly_univar_swap", "fmpq_mpoly_univar_swap"], [14, 0, 1, "c.fmpq_mpoly_univar_swap_term_coeff", "fmpq_mpoly_univar_swap_term_coeff"], [14, 0, 1, "c.fmpq_mpoly_used_vars", "fmpq_mpoly_used_vars"], [14, 0, 1, "c.fmpq_mpoly_zero", "fmpq_mpoly_zero"], [14, 0, 1, "c.fmpq_mpoly_zpoly_ref", "fmpq_mpoly_zpoly_ref"], [14, 0, 1, "c.fmpq_mpoly_zpoly_term_coeff_ref", "fmpq_mpoly_zpoly_term_coeff_ref"], [12, 0, 1, "c.fmpq_mul", "fmpq_mul"], [12, 0, 1, "c.fmpq_mul_2exp", "fmpq_mul_2exp"], [12, 0, 1, "c.fmpq_mul_fmpz", "fmpq_mul_fmpz"], [12, 0, 1, "c.fmpq_mul_si", "fmpq_mul_si"], [12, 0, 1, "c.fmpq_mul_ui", "fmpq_mul_ui"], [12, 0, 1, "c.fmpq_neg", "fmpq_neg"], [12, 0, 1, "c.fmpq_next_calkin_wilf", "fmpq_next_calkin_wilf"], [12, 0, 1, "c.fmpq_next_minimal", "fmpq_next_minimal"], [12, 0, 1, "c.fmpq_next_signed_calkin_wilf", "fmpq_next_signed_calkin_wilf"], [12, 0, 1, "c.fmpq_next_signed_minimal", "fmpq_next_signed_minimal"], [12, 0, 1, "c.fmpq_one", "fmpq_one"], [16, 0, 1, "c.fmpq_poly_add", "fmpq_poly_add"], [16, 0, 1, "c.fmpq_poly_add_can", "fmpq_poly_add_can"], [16, 0, 1, "c.fmpq_poly_add_series", "fmpq_poly_add_series"], [16, 0, 1, "c.fmpq_poly_add_series_can", "fmpq_poly_add_series_can"], [16, 0, 1, "c.fmpq_poly_addmul", "fmpq_poly_addmul"], [16, 0, 1, "c.fmpq_poly_asin_series", "fmpq_poly_asin_series"], [16, 0, 1, "c.fmpq_poly_asinh_series", "fmpq_poly_asinh_series"], [16, 0, 1, "c.fmpq_poly_atan_series", "fmpq_poly_atan_series"], [16, 0, 1, "c.fmpq_poly_atanh_series", "fmpq_poly_atanh_series"], [16, 0, 1, "c.fmpq_poly_canonicalise", "fmpq_poly_canonicalise"], [16, 0, 1, "c.fmpq_poly_clear", "fmpq_poly_clear"], [16, 0, 1, "c.fmpq_poly_cmp", "fmpq_poly_cmp"], [16, 0, 1, "c.fmpq_poly_compose", "fmpq_poly_compose"], [16, 0, 1, "c.fmpq_poly_compose_series", "fmpq_poly_compose_series"], [16, 0, 1, "c.fmpq_poly_compose_series_brent_kung", "fmpq_poly_compose_series_brent_kung"], [16, 0, 1, "c.fmpq_poly_compose_series_horner", "fmpq_poly_compose_series_horner"], [16, 0, 1, "c.fmpq_poly_content", "fmpq_poly_content"], [16, 0, 1, "c.fmpq_poly_cos_series", "fmpq_poly_cos_series"], [16, 0, 1, "c.fmpq_poly_cosh_series", "fmpq_poly_cosh_series"], [16, 0, 1, "c.fmpq_poly_degree", "fmpq_poly_degree"], [16, 0, 1, "c.fmpq_poly_denref", "fmpq_poly_denref"], [16, 0, 1, "c.fmpq_poly_derivative", "fmpq_poly_derivative"], [16, 0, 1, "c.fmpq_poly_div", "fmpq_poly_div"], [16, 0, 1, "c.fmpq_poly_div_series", "fmpq_poly_div_series"], [16, 0, 1, "c.fmpq_poly_divides", "fmpq_poly_divides"], [16, 0, 1, "c.fmpq_poly_divrem", "fmpq_poly_divrem"], [16, 0, 1, "c.fmpq_poly_equal", "fmpq_poly_equal"], [16, 0, 1, "c.fmpq_poly_equal_trunc", "fmpq_poly_equal_trunc"], [16, 0, 1, "c.fmpq_poly_evaluate_fmpq", "fmpq_poly_evaluate_fmpq"], [16, 0, 1, "c.fmpq_poly_evaluate_fmpz", "fmpq_poly_evaluate_fmpz"], [16, 0, 1, "c.fmpq_poly_evaluate_mpq", "fmpq_poly_evaluate_mpq"], [16, 0, 1, "c.fmpq_poly_evaluate_mpz", "fmpq_poly_evaluate_mpz"], [16, 0, 1, "c.fmpq_poly_exp_expinv_series", "fmpq_poly_exp_expinv_series"], [16, 0, 1, "c.fmpq_poly_exp_series", "fmpq_poly_exp_series"], [16, 0, 1, "c.fmpq_poly_fit_length", "fmpq_poly_fit_length"], [16, 0, 1, "c.fmpq_poly_fprint", "fmpq_poly_fprint"], [16, 0, 1, "c.fmpq_poly_fprint_pretty", "fmpq_poly_fprint_pretty"], [16, 0, 1, "c.fmpq_poly_fread", "fmpq_poly_fread"], [16, 0, 1, "c.fmpq_poly_gcd", "fmpq_poly_gcd"], [16, 0, 1, "c.fmpq_poly_gegenbauer_c", "fmpq_poly_gegenbauer_c"], [16, 0, 1, "c.fmpq_poly_get_coeff_fmpq", "fmpq_poly_get_coeff_fmpq"], [16, 0, 1, "c.fmpq_poly_get_coeff_fmpz", "fmpq_poly_get_coeff_fmpz"], [16, 0, 1, "c.fmpq_poly_get_coeff_mpq", "fmpq_poly_get_coeff_mpq"], [16, 0, 1, "c.fmpq_poly_get_denominator", "fmpq_poly_get_denominator"], [16, 0, 1, "c.fmpq_poly_get_nmod_poly", "fmpq_poly_get_nmod_poly"], [16, 0, 1, "c.fmpq_poly_get_nmod_poly_den", "fmpq_poly_get_nmod_poly_den"], [16, 0, 1, "c.fmpq_poly_get_numerator", "fmpq_poly_get_numerator"], [16, 0, 1, "c.fmpq_poly_get_slice", "fmpq_poly_get_slice"], [16, 0, 1, "c.fmpq_poly_get_str", "fmpq_poly_get_str"], [16, 0, 1, "c.fmpq_poly_get_str_pretty", "fmpq_poly_get_str_pretty"], [16, 0, 1, "c.fmpq_poly_init", "fmpq_poly_init"], [16, 0, 1, "c.fmpq_poly_init2", "fmpq_poly_init2"], [16, 0, 1, "c.fmpq_poly_integral", "fmpq_poly_integral"], [16, 0, 1, "c.fmpq_poly_interpolate_fmpz_vec", "fmpq_poly_interpolate_fmpz_vec"], [16, 0, 1, "c.fmpq_poly_inv", "fmpq_poly_inv"], [16, 0, 1, "c.fmpq_poly_inv_series", "fmpq_poly_inv_series"], [16, 0, 1, "c.fmpq_poly_inv_series_newton", "fmpq_poly_inv_series_newton"], [16, 0, 1, "c.fmpq_poly_invsqrt_series", "fmpq_poly_invsqrt_series"], [16, 0, 1, "c.fmpq_poly_is_canonical", "fmpq_poly_is_canonical"], [16, 0, 1, "c.fmpq_poly_is_gen", "fmpq_poly_is_gen"], [16, 0, 1, "c.fmpq_poly_is_monic", "fmpq_poly_is_monic"], [16, 0, 1, "c.fmpq_poly_is_one", "fmpq_poly_is_one"], [16, 0, 1, "c.fmpq_poly_is_squarefree", "fmpq_poly_is_squarefree"], [16, 0, 1, "c.fmpq_poly_is_zero", "fmpq_poly_is_zero"], [16, 0, 1, "c.fmpq_poly_laguerre_l", "fmpq_poly_laguerre_l"], [16, 0, 1, "c.fmpq_poly_lcm", "fmpq_poly_lcm"], [16, 0, 1, "c.fmpq_poly_legendre_p", "fmpq_poly_legendre_p"], [16, 0, 1, "c.fmpq_poly_length", "fmpq_poly_length"], [16, 0, 1, "c.fmpq_poly_log_series", "fmpq_poly_log_series"], [16, 0, 1, "c.fmpq_poly_make_monic", "fmpq_poly_make_monic"], [16, 0, 1, "c.fmpq_poly_mul", "fmpq_poly_mul"], [16, 0, 1, "c.fmpq_poly_mullow", "fmpq_poly_mullow"], [16, 0, 1, "c.fmpq_poly_neg", "fmpq_poly_neg"], [16, 0, 1, "c.fmpq_poly_nth_derivative", "fmpq_poly_nth_derivative"], [16, 0, 1, "c.fmpq_poly_numref", "fmpq_poly_numref"], [16, 0, 1, "c.fmpq_poly_one", "fmpq_poly_one"], [16, 0, 1, "c.fmpq_poly_pow", "fmpq_poly_pow"], [16, 0, 1, "c.fmpq_poly_pow_trunc", "fmpq_poly_pow_trunc"], [16, 0, 1, "c.fmpq_poly_power_sums", "fmpq_poly_power_sums"], [16, 0, 1, "c.fmpq_poly_power_sums_to_fmpz_poly", "fmpq_poly_power_sums_to_fmpz_poly"], [16, 0, 1, "c.fmpq_poly_power_sums_to_poly", "fmpq_poly_power_sums_to_poly"], [16, 0, 1, "c.fmpq_poly_powers_clear", "fmpq_poly_powers_clear"], [16, 0, 1, "c.fmpq_poly_powers_precompute", "fmpq_poly_powers_precompute"], [16, 0, 1, "c.fmpq_poly_primitive_part", "fmpq_poly_primitive_part"], [16, 0, 1, "c.fmpq_poly_print", "fmpq_poly_print"], [16, 0, 1, "c.fmpq_poly_print_pretty", "fmpq_poly_print_pretty"], [16, 0, 1, "c.fmpq_poly_randtest", "fmpq_poly_randtest"], [16, 0, 1, "c.fmpq_poly_randtest_not_zero", "fmpq_poly_randtest_not_zero"], [16, 0, 1, "c.fmpq_poly_randtest_unsigned", "fmpq_poly_randtest_unsigned"], [16, 0, 1, "c.fmpq_poly_read", "fmpq_poly_read"], [16, 0, 1, "c.fmpq_poly_realloc", "fmpq_poly_realloc"], [16, 0, 1, "c.fmpq_poly_rem", "fmpq_poly_rem"], [16, 0, 1, "c.fmpq_poly_rem_powers_precomp", "fmpq_poly_rem_powers_precomp"], [16, 0, 1, "c.fmpq_poly_remove", "fmpq_poly_remove"], [16, 0, 1, "c.fmpq_poly_rescale", "fmpq_poly_rescale"], [16, 0, 1, "c.fmpq_poly_resultant", "fmpq_poly_resultant"], [16, 0, 1, "c.fmpq_poly_resultant_div", "fmpq_poly_resultant_div"], [16, 0, 1, "c.fmpq_poly_reverse", "fmpq_poly_reverse"], [16, 0, 1, "c.fmpq_poly_revert_series", "fmpq_poly_revert_series"], [16, 0, 1, "c.fmpq_poly_revert_series_lagrange", "fmpq_poly_revert_series_lagrange"], [16, 0, 1, "c.fmpq_poly_revert_series_lagrange_fast", "fmpq_poly_revert_series_lagrange_fast"], [16, 0, 1, "c.fmpq_poly_revert_series_newton", "fmpq_poly_revert_series_newton"], [16, 0, 1, "c.fmpq_poly_scalar_div_fmpq", "fmpq_poly_scalar_div_fmpq"], [16, 0, 1, "c.fmpq_poly_scalar_div_fmpz", "fmpq_poly_scalar_div_fmpz"], [16, 0, 1, "c.fmpq_poly_scalar_div_mpq", "fmpq_poly_scalar_div_mpq"], [16, 0, 1, "c.fmpq_poly_scalar_div_mpz", "fmpq_poly_scalar_div_mpz"], [16, 0, 1, "c.fmpq_poly_scalar_div_si", "fmpq_poly_scalar_div_si"], [16, 0, 1, "c.fmpq_poly_scalar_div_ui", "fmpq_poly_scalar_div_ui"], [16, 0, 1, "c.fmpq_poly_scalar_mul_fmpq", "fmpq_poly_scalar_mul_fmpq"], [16, 0, 1, "c.fmpq_poly_scalar_mul_fmpz", "fmpq_poly_scalar_mul_fmpz"], [16, 0, 1, "c.fmpq_poly_scalar_mul_mpq", "fmpq_poly_scalar_mul_mpq"], [16, 0, 1, "c.fmpq_poly_scalar_mul_mpz", "fmpq_poly_scalar_mul_mpz"], [16, 0, 1, "c.fmpq_poly_scalar_mul_si", "fmpq_poly_scalar_mul_si"], [16, 0, 1, "c.fmpq_poly_scalar_mul_ui", "fmpq_poly_scalar_mul_ui"], [16, 0, 1, "c.fmpq_poly_set", "fmpq_poly_set"], [16, 0, 1, "c.fmpq_poly_set_array_mpq", "fmpq_poly_set_array_mpq"], [16, 0, 1, "c.fmpq_poly_set_coeff_fmpq", "fmpq_poly_set_coeff_fmpq"], [16, 0, 1, "c.fmpq_poly_set_coeff_fmpz", "fmpq_poly_set_coeff_fmpz"], [16, 0, 1, "c.fmpq_poly_set_coeff_mpq", "fmpq_poly_set_coeff_mpq"], [16, 0, 1, "c.fmpq_poly_set_coeff_mpz", "fmpq_poly_set_coeff_mpz"], [16, 0, 1, "c.fmpq_poly_set_coeff_si", "fmpq_poly_set_coeff_si"], [16, 0, 1, "c.fmpq_poly_set_coeff_ui", "fmpq_poly_set_coeff_ui"], [16, 0, 1, "c.fmpq_poly_set_fmpq", "fmpq_poly_set_fmpq"], [16, 0, 1, "c.fmpq_poly_set_fmpz", "fmpq_poly_set_fmpz"], [16, 0, 1, "c.fmpq_poly_set_fmpz_poly", "fmpq_poly_set_fmpz_poly"], [16, 0, 1, "c.fmpq_poly_set_mpq", "fmpq_poly_set_mpq"], [16, 0, 1, "c.fmpq_poly_set_mpz", "fmpq_poly_set_mpz"], [16, 0, 1, "c.fmpq_poly_set_nmod_poly", "fmpq_poly_set_nmod_poly"], [16, 0, 1, "c.fmpq_poly_set_si", "fmpq_poly_set_si"], [16, 0, 1, "c.fmpq_poly_set_str", "fmpq_poly_set_str"], [16, 0, 1, "c.fmpq_poly_set_trunc", "fmpq_poly_set_trunc"], [16, 0, 1, "c.fmpq_poly_set_ui", "fmpq_poly_set_ui"], [16, 0, 1, "c.fmpq_poly_shift_left", "fmpq_poly_shift_left"], [16, 0, 1, "c.fmpq_poly_shift_right", "fmpq_poly_shift_right"], [16, 0, 1, "c.fmpq_poly_sin_cos_series", "fmpq_poly_sin_cos_series"], [16, 0, 1, "c.fmpq_poly_sin_series", "fmpq_poly_sin_series"], [16, 0, 1, "c.fmpq_poly_sinh_cosh_series", "fmpq_poly_sinh_cosh_series"], [16, 0, 1, "c.fmpq_poly_sinh_series", "fmpq_poly_sinh_series"], [16, 0, 1, "c.fmpq_poly_sqrt_series", "fmpq_poly_sqrt_series"], [16, 3, 1, "c.fmpq_poly_struct", "fmpq_poly_struct"], [16, 0, 1, "c.fmpq_poly_sub", "fmpq_poly_sub"], [16, 0, 1, "c.fmpq_poly_sub_can", "fmpq_poly_sub_can"], [16, 0, 1, "c.fmpq_poly_sub_series", "fmpq_poly_sub_series"], [16, 0, 1, "c.fmpq_poly_sub_series_can", "fmpq_poly_sub_series_can"], [16, 0, 1, "c.fmpq_poly_submul", "fmpq_poly_submul"], [16, 0, 1, "c.fmpq_poly_swap", "fmpq_poly_swap"], [16, 3, 1, "c.fmpq_poly_t", "fmpq_poly_t"], [16, 0, 1, "c.fmpq_poly_tan_series", "fmpq_poly_tan_series"], [16, 0, 1, "c.fmpq_poly_tanh_series", "fmpq_poly_tanh_series"], [16, 0, 1, "c.fmpq_poly_truncate", "fmpq_poly_truncate"], [16, 0, 1, "c.fmpq_poly_xgcd", "fmpq_poly_xgcd"], [16, 0, 1, "c.fmpq_poly_zero", "fmpq_poly_zero"], [12, 0, 1, "c.fmpq_pow_fmpz", "fmpq_pow_fmpz"], [12, 0, 1, "c.fmpq_pow_si", "fmpq_pow_si"], [12, 0, 1, "c.fmpq_print", "fmpq_print"], [12, 0, 1, "c.fmpq_randbits", "fmpq_randbits"], [12, 0, 1, "c.fmpq_randtest", "fmpq_randtest"], [12, 0, 1, "c.fmpq_randtest_not_zero", "fmpq_randtest_not_zero"], [12, 0, 1, "c.fmpq_reconstruct_fmpz", "fmpq_reconstruct_fmpz"], [12, 0, 1, "c.fmpq_reconstruct_fmpz_2", "fmpq_reconstruct_fmpz_2"], [12, 0, 1, "c.fmpq_set", "fmpq_set"], [12, 0, 1, "c.fmpq_set_cfrac", "fmpq_set_cfrac"], [12, 0, 1, "c.fmpq_set_fmpz_frac", "fmpq_set_fmpz_frac"], [12, 0, 1, "c.fmpq_set_mpq", "fmpq_set_mpq"], [12, 0, 1, "c.fmpq_set_si", "fmpq_set_si"], [12, 0, 1, "c.fmpq_set_str", "fmpq_set_str"], [12, 0, 1, "c.fmpq_set_ui", "fmpq_set_ui"], [12, 0, 1, "c.fmpq_sgn", "fmpq_sgn"], [12, 0, 1, "c.fmpq_simplest_between", "fmpq_simplest_between"], [12, 0, 1, "c.fmpq_sub", "fmpq_sub"], [12, 0, 1, "c.fmpq_sub_fmpz", "fmpq_sub_fmpz"], [12, 0, 1, "c.fmpq_sub_si", "fmpq_sub_si"], [12, 0, 1, "c.fmpq_sub_ui", "fmpq_sub_ui"], [12, 0, 1, "c.fmpq_submul", "fmpq_submul"], [12, 0, 1, "c.fmpq_swap", "fmpq_swap"], [12, 3, 1, "c.fmpq_t", "fmpq_t"], [12, 0, 1, "c.fmpq_zero", "fmpq_zero"], [18, 3, 1, "c.fmpz", "fmpz"], [18, 0, 1, "c.fmpz_CRT", "fmpz_CRT"], [18, 0, 1, "c.fmpz_CRT_ui", "fmpz_CRT_ui"], [18, 0, 1, "c.fmpz_abs", "fmpz_abs"], [18, 0, 1, "c.fmpz_abs_fits_ui", "fmpz_abs_fits_ui"], [18, 0, 1, "c.fmpz_abs_lbound_ui_2exp", "fmpz_abs_lbound_ui_2exp"], [18, 0, 1, "c.fmpz_abs_ubound_ui_2exp", "fmpz_abs_ubound_ui_2exp"], [18, 0, 1, "c.fmpz_add", "fmpz_add"], [18, 0, 1, "c.fmpz_add_si", "fmpz_add_si"], [18, 0, 1, "c.fmpz_add_ui", "fmpz_add_ui"], [18, 0, 1, "c.fmpz_addmul", "fmpz_addmul"], [18, 0, 1, "c.fmpz_addmul_si", "fmpz_addmul_si"], [18, 0, 1, "c.fmpz_addmul_ui", "fmpz_addmul_ui"], [18, 0, 1, "c.fmpz_and", "fmpz_and"], [18, 0, 1, "c.fmpz_bin_uiui", "fmpz_bin_uiui"], [18, 0, 1, "c.fmpz_bit_pack", "fmpz_bit_pack"], [18, 0, 1, "c.fmpz_bit_unpack", "fmpz_bit_unpack"], [18, 0, 1, "c.fmpz_bit_unpack_unsigned", "fmpz_bit_unpack_unsigned"], [18, 0, 1, "c.fmpz_bits", "fmpz_bits"], [18, 0, 1, "c.fmpz_cdiv_q", "fmpz_cdiv_q"], [18, 0, 1, "c.fmpz_cdiv_q_2exp", "fmpz_cdiv_q_2exp"], [18, 0, 1, "c.fmpz_cdiv_q_si", "fmpz_cdiv_q_si"], [18, 0, 1, "c.fmpz_cdiv_q_ui", "fmpz_cdiv_q_ui"], [18, 0, 1, "c.fmpz_cdiv_qr", "fmpz_cdiv_qr"], [18, 0, 1, "c.fmpz_cdiv_r_2exp", "fmpz_cdiv_r_2exp"], [18, 0, 1, "c.fmpz_cdiv_ui", "fmpz_cdiv_ui"], [18, 0, 1, "c.fmpz_clear", "fmpz_clear"], [18, 0, 1, "c.fmpz_clear_readonly", "fmpz_clear_readonly"], [18, 0, 1, "c.fmpz_clog", "fmpz_clog"], [18, 0, 1, "c.fmpz_clog_ui", "fmpz_clog_ui"], [18, 0, 1, "c.fmpz_clrbit", "fmpz_clrbit"], [18, 0, 1, "c.fmpz_cmp", "fmpz_cmp"], [18, 0, 1, "c.fmpz_cmp2abs", "fmpz_cmp2abs"], [18, 0, 1, "c.fmpz_cmp_si", "fmpz_cmp_si"], [18, 0, 1, "c.fmpz_cmp_ui", "fmpz_cmp_ui"], [18, 0, 1, "c.fmpz_cmpabs", "fmpz_cmpabs"], [18, 0, 1, "c.fmpz_comb_clear", "fmpz_comb_clear"], [18, 0, 1, "c.fmpz_comb_init", "fmpz_comb_init"], [18, 0, 1, "c.fmpz_comb_temp_clear", "fmpz_comb_temp_clear"], [18, 0, 1, "c.fmpz_comb_temp_init", "fmpz_comb_temp_init"], [18, 0, 1, "c.fmpz_combit", "fmpz_combit"], [18, 0, 1, "c.fmpz_complement", "fmpz_complement"], [18, 0, 1, "c.fmpz_divexact", "fmpz_divexact"], [18, 0, 1, "c.fmpz_divexact2_uiui", "fmpz_divexact2_uiui"], [18, 0, 1, "c.fmpz_divexact_si", "fmpz_divexact_si"], [18, 0, 1, "c.fmpz_divexact_ui", "fmpz_divexact_ui"], [18, 0, 1, "c.fmpz_divides", "fmpz_divides"], [18, 0, 1, "c.fmpz_divides_mod_list", "fmpz_divides_mod_list"], [18, 0, 1, "c.fmpz_divisible", "fmpz_divisible"], [18, 0, 1, "c.fmpz_divisible_si", "fmpz_divisible_si"], [18, 0, 1, "c.fmpz_divisor_in_residue_class_lenstra", "fmpz_divisor_in_residue_class_lenstra"], [18, 0, 1, "c.fmpz_divisor_sigma", "fmpz_divisor_sigma"], [18, 0, 1, "c.fmpz_dlog", "fmpz_dlog"], [18, 0, 1, "c.fmpz_equal", "fmpz_equal"], [18, 0, 1, "c.fmpz_equal_si", "fmpz_equal_si"], [18, 0, 1, "c.fmpz_equal_ui", "fmpz_equal_ui"], [18, 0, 1, "c.fmpz_euler_phi", "fmpz_euler_phi"], [18, 0, 1, "c.fmpz_fac_ui", "fmpz_fac_ui"], [19, 0, 1, "c.fmpz_factor", "fmpz_factor"], [19, 0, 1, "c.fmpz_factor_clear", "fmpz_factor_clear"], [18, 0, 1, "c.fmpz_factor_divisor_sigma", "fmpz_factor_divisor_sigma"], [19, 0, 1, "c.fmpz_factor_ecm", "fmpz_factor_ecm"], [19, 0, 1, "c.fmpz_factor_ecm_add", "fmpz_factor_ecm_add"], [19, 0, 1, "c.fmpz_factor_ecm_addmod", "fmpz_factor_ecm_addmod"], [19, 0, 1, "c.fmpz_factor_ecm_clear", "fmpz_factor_ecm_clear"], [19, 0, 1, "c.fmpz_factor_ecm_double", "fmpz_factor_ecm_double"], [19, 0, 1, "c.fmpz_factor_ecm_init", "fmpz_factor_ecm_init"], [19, 0, 1, "c.fmpz_factor_ecm_mul_montgomery_ladder", "fmpz_factor_ecm_mul_montgomery_ladder"], [19, 0, 1, "c.fmpz_factor_ecm_select_curve", "fmpz_factor_ecm_select_curve"], [19, 0, 1, "c.fmpz_factor_ecm_stage_I", "fmpz_factor_ecm_stage_I"], [19, 0, 1, "c.fmpz_factor_ecm_stage_II", "fmpz_factor_ecm_stage_II"], [19, 0, 1, "c.fmpz_factor_ecm_submod", "fmpz_factor_ecm_submod"], [18, 0, 1, "c.fmpz_factor_euler_phi", "fmpz_factor_euler_phi"], [19, 0, 1, "c.fmpz_factor_expand_iterative", "fmpz_factor_expand_iterative"], [19, 0, 1, "c.fmpz_factor_init", "fmpz_factor_init"], [18, 0, 1, "c.fmpz_factor_moebius_mu", "fmpz_factor_moebius_mu"], [19, 0, 1, "c.fmpz_factor_pollard_brent", "fmpz_factor_pollard_brent"], [19, 0, 1, "c.fmpz_factor_pollard_brent_single", "fmpz_factor_pollard_brent_single"], [19, 0, 1, "c.fmpz_factor_pp1", "fmpz_factor_pp1"], [19, 0, 1, "c.fmpz_factor_refine", "fmpz_factor_refine"], [19, 0, 1, "c.fmpz_factor_si", "fmpz_factor_si"], [19, 0, 1, "c.fmpz_factor_smooth", "fmpz_factor_smooth"], [19, 3, 1, "c.fmpz_factor_struct", "fmpz_factor_struct"], [19, 3, 1, "c.fmpz_factor_t", "fmpz_factor_t"], [19, 0, 1, "c.fmpz_factor_trial", "fmpz_factor_trial"], [19, 0, 1, "c.fmpz_factor_trial_range", "fmpz_factor_trial_range"], [18, 0, 1, "c.fmpz_fdiv_q", "fmpz_fdiv_q"], [18, 0, 1, "c.fmpz_fdiv_q_2exp", "fmpz_fdiv_q_2exp"], [18, 0, 1, "c.fmpz_fdiv_q_si", "fmpz_fdiv_q_si"], [18, 0, 1, "c.fmpz_fdiv_q_ui", "fmpz_fdiv_q_ui"], [18, 0, 1, "c.fmpz_fdiv_qr", "fmpz_fdiv_qr"], [18, 0, 1, "c.fmpz_fdiv_qr_preinvn", "fmpz_fdiv_qr_preinvn"], [18, 0, 1, "c.fmpz_fdiv_r", "fmpz_fdiv_r"], [18, 0, 1, "c.fmpz_fdiv_r_2exp", "fmpz_fdiv_r_2exp"], [18, 0, 1, "c.fmpz_fdiv_ui", "fmpz_fdiv_ui"], [18, 0, 1, "c.fmpz_fib_ui", "fmpz_fib_ui"], [18, 0, 1, "c.fmpz_fits_si", "fmpz_fits_si"], [18, 0, 1, "c.fmpz_flog", "fmpz_flog"], [18, 0, 1, "c.fmpz_flog_ui", "fmpz_flog_ui"], [18, 0, 1, "c.fmpz_fmma", "fmpz_fmma"], [18, 0, 1, "c.fmpz_fmms", "fmpz_fmms"], [18, 0, 1, "c.fmpz_fprint", "fmpz_fprint"], [18, 0, 1, "c.fmpz_fread", "fmpz_fread"], [18, 0, 1, "c.fmpz_gcd", "fmpz_gcd"], [18, 0, 1, "c.fmpz_gcd3", "fmpz_gcd3"], [18, 0, 1, "c.fmpz_gcd_ui", "fmpz_gcd_ui"], [18, 0, 1, "c.fmpz_gcdinv", "fmpz_gcdinv"], [18, 0, 1, "c.fmpz_get_d", "fmpz_get_d"], [18, 0, 1, "c.fmpz_get_d_2exp", "fmpz_get_d_2exp"], [18, 0, 1, "c.fmpz_get_mpf", "fmpz_get_mpf"], [18, 0, 1, "c.fmpz_get_mpfr", "fmpz_get_mpfr"], [18, 0, 1, "c.fmpz_get_mpn", "fmpz_get_mpn"], [18, 0, 1, "c.fmpz_get_mpz", "fmpz_get_mpz"], [18, 0, 1, "c.fmpz_get_nmod", "fmpz_get_nmod"], [18, 0, 1, "c.fmpz_get_si", "fmpz_get_si"], [18, 0, 1, "c.fmpz_get_str", "fmpz_get_str"], [18, 0, 1, "c.fmpz_get_ui", "fmpz_get_ui"], [18, 0, 1, "c.fmpz_get_ui_array", "fmpz_get_ui_array"], [18, 0, 1, "c.fmpz_get_uiui", "fmpz_get_uiui"], [18, 0, 1, "c.fmpz_init", "fmpz_init"], [18, 0, 1, "c.fmpz_init2", "fmpz_init2"], [18, 0, 1, "c.fmpz_init_set", "fmpz_init_set"], [18, 0, 1, "c.fmpz_init_set_readonly", "fmpz_init_set_readonly"], [18, 0, 1, "c.fmpz_init_set_si", "fmpz_init_set_si"], [18, 0, 1, "c.fmpz_init_set_ui", "fmpz_init_set_ui"], [18, 0, 1, "c.fmpz_inp_raw", "fmpz_inp_raw"], [18, 0, 1, "c.fmpz_invmod", "fmpz_invmod"], [18, 0, 1, "c.fmpz_is_even", "fmpz_is_even"], [18, 0, 1, "c.fmpz_is_odd", "fmpz_is_odd"], [18, 0, 1, "c.fmpz_is_one", "fmpz_is_one"], [18, 0, 1, "c.fmpz_is_perfect_power", "fmpz_is_perfect_power"], [18, 0, 1, "c.fmpz_is_pm1", "fmpz_is_pm1"], [18, 0, 1, "c.fmpz_is_prime", "fmpz_is_prime"], [18, 0, 1, "c.fmpz_is_prime_morrison", "fmpz_is_prime_morrison"], [18, 0, 1, "c.fmpz_is_prime_pocklington", "fmpz_is_prime_pocklington"], [18, 0, 1, "c.fmpz_is_prime_pseudosquare", "fmpz_is_prime_pseudosquare"], [18, 0, 1, "c.fmpz_is_probabprime", "fmpz_is_probabprime"], [18, 0, 1, "c.fmpz_is_probabprime_BPSW", "fmpz_is_probabprime_BPSW"], [18, 0, 1, "c.fmpz_is_probabprime_lucas", "fmpz_is_probabprime_lucas"], [18, 0, 1, "c.fmpz_is_square", "fmpz_is_square"], [18, 0, 1, "c.fmpz_is_strong_probabprime", "fmpz_is_strong_probabprime"], [18, 0, 1, "c.fmpz_is_zero", "fmpz_is_zero"], [18, 0, 1, "c.fmpz_jacobi", "fmpz_jacobi"], [18, 0, 1, "c.fmpz_kronecker", "fmpz_kronecker"], [18, 0, 1, "c.fmpz_lcm", "fmpz_lcm"], [20, 0, 1, "c.fmpz_lll", "fmpz_lll"], [20, 0, 1, "c.fmpz_lll_advance_check_babai", "fmpz_lll_advance_check_babai"], [20, 0, 1, "c.fmpz_lll_advance_check_babai_heuristic_d", "fmpz_lll_advance_check_babai_heuristic_d"], [20, 0, 1, "c.fmpz_lll_check_babai", "fmpz_lll_check_babai"], [20, 0, 1, "c.fmpz_lll_check_babai_heuristic", "fmpz_lll_check_babai_heuristic"], [20, 0, 1, "c.fmpz_lll_check_babai_heuristic_d", "fmpz_lll_check_babai_heuristic_d"], [20, 0, 1, "c.fmpz_lll_context_init", "fmpz_lll_context_init"], [20, 0, 1, "c.fmpz_lll_context_init_default", "fmpz_lll_context_init_default"], [20, 0, 1, "c.fmpz_lll_d", "fmpz_lll_d"], [20, 0, 1, "c.fmpz_lll_d_heuristic", "fmpz_lll_d_heuristic"], [20, 0, 1, "c.fmpz_lll_d_heuristic_with_removal", "fmpz_lll_d_heuristic_with_removal"], [20, 0, 1, "c.fmpz_lll_d_with_removal", "fmpz_lll_d_with_removal"], [20, 0, 1, "c.fmpz_lll_d_with_removal_knapsack", "fmpz_lll_d_with_removal_knapsack"], [20, 0, 1, "c.fmpz_lll_heuristic_dot", "fmpz_lll_heuristic_dot"], [20, 0, 1, "c.fmpz_lll_is_reduced", "fmpz_lll_is_reduced"], [20, 0, 1, "c.fmpz_lll_is_reduced_d", "fmpz_lll_is_reduced_d"], [20, 0, 1, "c.fmpz_lll_is_reduced_d_with_removal", "fmpz_lll_is_reduced_d_with_removal"], [20, 0, 1, "c.fmpz_lll_is_reduced_mpfr", "fmpz_lll_is_reduced_mpfr"], [20, 0, 1, "c.fmpz_lll_is_reduced_mpfr_with_removal", "fmpz_lll_is_reduced_mpfr_with_removal"], [20, 0, 1, "c.fmpz_lll_is_reduced_with_removal", "fmpz_lll_is_reduced_with_removal"], [20, 0, 1, "c.fmpz_lll_mpf", "fmpz_lll_mpf"], [20, 0, 1, "c.fmpz_lll_mpf2", "fmpz_lll_mpf2"], [20, 0, 1, "c.fmpz_lll_mpf2_with_removal", "fmpz_lll_mpf2_with_removal"], [20, 0, 1, "c.fmpz_lll_mpf_with_removal", "fmpz_lll_mpf_with_removal"], [20, 0, 1, "c.fmpz_lll_randtest", "fmpz_lll_randtest"], [20, 0, 1, "c.fmpz_lll_shift", "fmpz_lll_shift"], [20, 0, 1, "c.fmpz_lll_storjohann_ulll", "fmpz_lll_storjohann_ulll"], [20, 0, 1, "c.fmpz_lll_with_removal", "fmpz_lll_with_removal"], [20, 0, 1, "c.fmpz_lll_with_removal_ulll", "fmpz_lll_with_removal_ulll"], [20, 0, 1, "c.fmpz_lll_wrapper", "fmpz_lll_wrapper"], [20, 0, 1, "c.fmpz_lll_wrapper_with_removal", "fmpz_lll_wrapper_with_removal"], [20, 0, 1, "c.fmpz_lll_wrapper_with_removal_knapsack", "fmpz_lll_wrapper_with_removal_knapsack"], [18, 0, 1, "c.fmpz_lucas_chain", "fmpz_lucas_chain"], [18, 0, 1, "c.fmpz_lucas_chain_VtoU", "fmpz_lucas_chain_VtoU"], [18, 0, 1, "c.fmpz_lucas_chain_add", "fmpz_lucas_chain_add"], [18, 0, 1, "c.fmpz_lucas_chain_double", "fmpz_lucas_chain_double"], [18, 0, 1, "c.fmpz_lucas_chain_full", "fmpz_lucas_chain_full"], [18, 0, 1, "c.fmpz_lucas_chain_mul", "fmpz_lucas_chain_mul"], [21, 0, 1, "c.fmpz_mat_CRT_ui", "fmpz_mat_CRT_ui"], [21, 0, 1, "c.fmpz_mat_add", "fmpz_mat_add"], [21, 0, 1, "c.fmpz_mat_can_solve", "fmpz_mat_can_solve"], [21, 0, 1, "c.fmpz_mat_can_solve_fflu", "fmpz_mat_can_solve_fflu"], [21, 0, 1, "c.fmpz_mat_can_solve_multi_mod_den", "fmpz_mat_can_solve_multi_mod_den"], [21, 0, 1, "c.fmpz_mat_charpoly", "fmpz_mat_charpoly"], [21, 0, 1, "c.fmpz_mat_charpoly_berkowitz", "fmpz_mat_charpoly_berkowitz"], [21, 0, 1, "c.fmpz_mat_charpoly_modular", "fmpz_mat_charpoly_modular"], [21, 0, 1, "c.fmpz_mat_chol_d", "fmpz_mat_chol_d"], [21, 0, 1, "c.fmpz_mat_clear", "fmpz_mat_clear"], [21, 0, 1, "c.fmpz_mat_col_equal", "fmpz_mat_col_equal"], [21, 0, 1, "c.fmpz_mat_col_partition", "fmpz_mat_col_partition"], [21, 0, 1, "c.fmpz_mat_concat_horizontal", "fmpz_mat_concat_horizontal"], [21, 0, 1, "c.fmpz_mat_concat_vertical", "fmpz_mat_concat_vertical"], [21, 0, 1, "c.fmpz_mat_content", "fmpz_mat_content"], [21, 0, 1, "c.fmpz_mat_det", "fmpz_mat_det"], [21, 0, 1, "c.fmpz_mat_det_bareiss", "fmpz_mat_det_bareiss"], [21, 0, 1, "c.fmpz_mat_det_bound", "fmpz_mat_det_bound"], [21, 0, 1, "c.fmpz_mat_det_cofactor", "fmpz_mat_det_cofactor"], [21, 0, 1, "c.fmpz_mat_det_divisor", "fmpz_mat_det_divisor"], [21, 0, 1, "c.fmpz_mat_det_modular", "fmpz_mat_det_modular"], [21, 0, 1, "c.fmpz_mat_det_modular_accelerated", "fmpz_mat_det_modular_accelerated"], [21, 0, 1, "c.fmpz_mat_det_modular_given_divisor", "fmpz_mat_det_modular_given_divisor"], [21, 0, 1, "c.fmpz_mat_entry", "fmpz_mat_entry"], [21, 0, 1, "c.fmpz_mat_equal", "fmpz_mat_equal"], [21, 0, 1, "c.fmpz_mat_fflu", "fmpz_mat_fflu"], [21, 0, 1, "c.fmpz_mat_find_pivot_any", "fmpz_mat_find_pivot_any"], [21, 0, 1, "c.fmpz_mat_fmpz_vec_mul", "fmpz_mat_fmpz_vec_mul"], [21, 0, 1, "c.fmpz_mat_fmpz_vec_mul_ptr", "fmpz_mat_fmpz_vec_mul_ptr"], [21, 0, 1, "c.fmpz_mat_fprint", "fmpz_mat_fprint"], [21, 0, 1, "c.fmpz_mat_fprint_pretty", "fmpz_mat_fprint_pretty"], [21, 0, 1, "c.fmpz_mat_fread", "fmpz_mat_fread"], [21, 0, 1, "c.fmpz_mat_get_d_mat", "fmpz_mat_get_d_mat"], [21, 0, 1, "c.fmpz_mat_get_d_mat_transpose", "fmpz_mat_get_d_mat_transpose"], [21, 0, 1, "c.fmpz_mat_get_mpf_mat", "fmpz_mat_get_mpf_mat"], [21, 0, 1, "c.fmpz_mat_get_nmod_mat", "fmpz_mat_get_nmod_mat"], [21, 0, 1, "c.fmpz_mat_gram", "fmpz_mat_gram"], [21, 0, 1, "c.fmpz_mat_hadamard", "fmpz_mat_hadamard"], [21, 0, 1, "c.fmpz_mat_hnf", "fmpz_mat_hnf"], [21, 0, 1, "c.fmpz_mat_hnf_classical", "fmpz_mat_hnf_classical"], [21, 0, 1, "c.fmpz_mat_hnf_minors", "fmpz_mat_hnf_minors"], [21, 0, 1, "c.fmpz_mat_hnf_modular", "fmpz_mat_hnf_modular"], [21, 0, 1, "c.fmpz_mat_hnf_modular_eldiv", "fmpz_mat_hnf_modular_eldiv"], [21, 0, 1, "c.fmpz_mat_hnf_pernet_stein", "fmpz_mat_hnf_pernet_stein"], [21, 0, 1, "c.fmpz_mat_hnf_transform", "fmpz_mat_hnf_transform"], [21, 0, 1, "c.fmpz_mat_hnf_xgcd", "fmpz_mat_hnf_xgcd"], [21, 0, 1, "c.fmpz_mat_howell_form_mod", "fmpz_mat_howell_form_mod"], [21, 0, 1, "c.fmpz_mat_init", "fmpz_mat_init"], [21, 0, 1, "c.fmpz_mat_init_set", "fmpz_mat_init_set"], [21, 0, 1, "c.fmpz_mat_inv", "fmpz_mat_inv"], [21, 0, 1, "c.fmpz_mat_invert_cols", "fmpz_mat_invert_cols"], [21, 0, 1, "c.fmpz_mat_invert_rows", "fmpz_mat_invert_rows"], [21, 0, 1, "c.fmpz_mat_is_empty", "fmpz_mat_is_empty"], [21, 0, 1, "c.fmpz_mat_is_hadamard", "fmpz_mat_is_hadamard"], [21, 0, 1, "c.fmpz_mat_is_in_hnf", "fmpz_mat_is_in_hnf"], [21, 0, 1, "c.fmpz_mat_is_in_rref_with_rank", "fmpz_mat_is_in_rref_with_rank"], [21, 0, 1, "c.fmpz_mat_is_in_snf", "fmpz_mat_is_in_snf"], [21, 0, 1, "c.fmpz_mat_is_one", "fmpz_mat_is_one"], [21, 0, 1, "c.fmpz_mat_is_reduced", "fmpz_mat_is_reduced"], [21, 0, 1, "c.fmpz_mat_is_reduced_gram", "fmpz_mat_is_reduced_gram"], [21, 0, 1, "c.fmpz_mat_is_reduced_gram_with_removal", "fmpz_mat_is_reduced_gram_with_removal"], [21, 0, 1, "c.fmpz_mat_is_reduced_with_removal", "fmpz_mat_is_reduced_with_removal"], [21, 0, 1, "c.fmpz_mat_is_square", "fmpz_mat_is_square"], [21, 0, 1, "c.fmpz_mat_is_zero", "fmpz_mat_is_zero"], [21, 0, 1, "c.fmpz_mat_is_zero_row", "fmpz_mat_is_zero_row"], [21, 0, 1, "c.fmpz_mat_kronecker_product", "fmpz_mat_kronecker_product"], [21, 0, 1, "c.fmpz_mat_lll_original", "fmpz_mat_lll_original"], [21, 0, 1, "c.fmpz_mat_lll_storjohann", "fmpz_mat_lll_storjohann"], [21, 0, 1, "c.fmpz_mat_minpoly", "fmpz_mat_minpoly"], [21, 0, 1, "c.fmpz_mat_minpoly_modular", "fmpz_mat_minpoly_modular"], [21, 0, 1, "c.fmpz_mat_mul", "fmpz_mat_mul"], [21, 0, 1, "c.fmpz_mat_mul_blas", "fmpz_mat_mul_blas"], [21, 0, 1, "c.fmpz_mat_mul_classical", "fmpz_mat_mul_classical"], [21, 0, 1, "c.fmpz_mat_mul_fft", "fmpz_mat_mul_fft"], [21, 0, 1, "c.fmpz_mat_mul_fmpz_vec", "fmpz_mat_mul_fmpz_vec"], [21, 0, 1, "c.fmpz_mat_mul_fmpz_vec_ptr", "fmpz_mat_mul_fmpz_vec_ptr"], [21, 0, 1, "c.fmpz_mat_mul_multi_mod", "fmpz_mat_mul_multi_mod"], [21, 0, 1, "c.fmpz_mat_mul_strassen", "fmpz_mat_mul_strassen"], [21, 0, 1, "c.fmpz_mat_multi_CRT_ui", "fmpz_mat_multi_CRT_ui"], [21, 0, 1, "c.fmpz_mat_multi_CRT_ui_precomp", "fmpz_mat_multi_CRT_ui_precomp"], [21, 0, 1, "c.fmpz_mat_multi_mod_ui", "fmpz_mat_multi_mod_ui"], [21, 0, 1, "c.fmpz_mat_multi_mod_ui_precomp", "fmpz_mat_multi_mod_ui_precomp"], [21, 0, 1, "c.fmpz_mat_neg", "fmpz_mat_neg"], [21, 0, 1, "c.fmpz_mat_nullspace", "fmpz_mat_nullspace"], [21, 0, 1, "c.fmpz_mat_one", "fmpz_mat_one"], [21, 0, 1, "c.fmpz_mat_pow", "fmpz_mat_pow"], [21, 0, 1, "c.fmpz_mat_print", "fmpz_mat_print"], [21, 0, 1, "c.fmpz_mat_print_pretty", "fmpz_mat_print_pretty"], [21, 0, 1, "c.fmpz_mat_randajtai", "fmpz_mat_randajtai"], [21, 0, 1, "c.fmpz_mat_randbits", "fmpz_mat_randbits"], [21, 0, 1, "c.fmpz_mat_randdet", "fmpz_mat_randdet"], [21, 0, 1, "c.fmpz_mat_randintrel", "fmpz_mat_randintrel"], [21, 0, 1, "c.fmpz_mat_randntrulike", "fmpz_mat_randntrulike"], [21, 0, 1, "c.fmpz_mat_randntrulike2", "fmpz_mat_randntrulike2"], [21, 0, 1, "c.fmpz_mat_randops", "fmpz_mat_randops"], [21, 0, 1, "c.fmpz_mat_randpermdiag", "fmpz_mat_randpermdiag"], [21, 0, 1, "c.fmpz_mat_randrank", "fmpz_mat_randrank"], [21, 0, 1, "c.fmpz_mat_randsimdioph", "fmpz_mat_randsimdioph"], [21, 0, 1, "c.fmpz_mat_randtest", "fmpz_mat_randtest"], [21, 0, 1, "c.fmpz_mat_rank", "fmpz_mat_rank"], [21, 0, 1, "c.fmpz_mat_read", "fmpz_mat_read"], [21, 0, 1, "c.fmpz_mat_row_equal", "fmpz_mat_row_equal"], [21, 0, 1, "c.fmpz_mat_rref", "fmpz_mat_rref"], [21, 0, 1, "c.fmpz_mat_rref_fflu", "fmpz_mat_rref_fflu"], [21, 0, 1, "c.fmpz_mat_rref_fraction_free", "fmpz_mat_rref_fraction_free"], [21, 0, 1, "c.fmpz_mat_rref_mod", "fmpz_mat_rref_mod"], [21, 0, 1, "c.fmpz_mat_rref_mul", "fmpz_mat_rref_mul"], [21, 0, 1, "c.fmpz_mat_scalar_addmul_fmpz", "fmpz_mat_scalar_addmul_fmpz"], [21, 0, 1, "c.fmpz_mat_scalar_addmul_nmod_mat_fmpz", "fmpz_mat_scalar_addmul_nmod_mat_fmpz"], [21, 0, 1, "c.fmpz_mat_scalar_addmul_nmod_mat_ui", "fmpz_mat_scalar_addmul_nmod_mat_ui"], [21, 0, 1, "c.fmpz_mat_scalar_addmul_si", "fmpz_mat_scalar_addmul_si"], [21, 0, 1, "c.fmpz_mat_scalar_addmul_ui", "fmpz_mat_scalar_addmul_ui"], [21, 0, 1, "c.fmpz_mat_scalar_divexact_fmpz", "fmpz_mat_scalar_divexact_fmpz"], [21, 0, 1, "c.fmpz_mat_scalar_divexact_si", "fmpz_mat_scalar_divexact_si"], [21, 0, 1, "c.fmpz_mat_scalar_divexact_ui", "fmpz_mat_scalar_divexact_ui"], [21, 0, 1, "c.fmpz_mat_scalar_mul_2exp", "fmpz_mat_scalar_mul_2exp"], [21, 0, 1, "c.fmpz_mat_scalar_mul_fmpz", "fmpz_mat_scalar_mul_fmpz"], [21, 0, 1, "c.fmpz_mat_scalar_mul_si", "fmpz_mat_scalar_mul_si"], [21, 0, 1, "c.fmpz_mat_scalar_mul_ui", "fmpz_mat_scalar_mul_ui"], [21, 0, 1, "c.fmpz_mat_scalar_smod", "fmpz_mat_scalar_smod"], [21, 0, 1, "c.fmpz_mat_scalar_submul_fmpz", "fmpz_mat_scalar_submul_fmpz"], [21, 0, 1, "c.fmpz_mat_scalar_submul_si", "fmpz_mat_scalar_submul_si"], [21, 0, 1, "c.fmpz_mat_scalar_submul_ui", "fmpz_mat_scalar_submul_ui"], [21, 0, 1, "c.fmpz_mat_scalar_tdiv_q_2exp", "fmpz_mat_scalar_tdiv_q_2exp"], [21, 0, 1, "c.fmpz_mat_set", "fmpz_mat_set"], [21, 0, 1, "c.fmpz_mat_set_nmod_mat", "fmpz_mat_set_nmod_mat"], [21, 0, 1, "c.fmpz_mat_set_nmod_mat_unsigned", "fmpz_mat_set_nmod_mat_unsigned"], [21, 0, 1, "c.fmpz_mat_similarity", "fmpz_mat_similarity"], [21, 0, 1, "c.fmpz_mat_snf", "fmpz_mat_snf"], [21, 0, 1, "c.fmpz_mat_snf_diagonal", "fmpz_mat_snf_diagonal"], [21, 0, 1, "c.fmpz_mat_snf_iliopoulos", "fmpz_mat_snf_iliopoulos"], [21, 0, 1, "c.fmpz_mat_snf_kannan_bachem", "fmpz_mat_snf_kannan_bachem"], [21, 0, 1, "c.fmpz_mat_solve", "fmpz_mat_solve"], [21, 0, 1, "c.fmpz_mat_solve_bound", "fmpz_mat_solve_bound"], [21, 0, 1, "c.fmpz_mat_solve_cramer", "fmpz_mat_solve_cramer"], [21, 0, 1, "c.fmpz_mat_solve_dixon", "fmpz_mat_solve_dixon"], [21, 0, 1, "c.fmpz_mat_solve_dixon_den", "fmpz_mat_solve_dixon_den"], [21, 0, 1, "c.fmpz_mat_solve_fflu", "fmpz_mat_solve_fflu"], [21, 0, 1, "c.fmpz_mat_solve_fflu_precomp", "fmpz_mat_solve_fflu_precomp"], [21, 0, 1, "c.fmpz_mat_solve_multi_mod_den", "fmpz_mat_solve_multi_mod_den"], [21, 0, 1, "c.fmpz_mat_sqr", "fmpz_mat_sqr"], [21, 0, 1, "c.fmpz_mat_sqr_bodrato", "fmpz_mat_sqr_bodrato"], [21, 0, 1, "c.fmpz_mat_strong_echelon_form_mod", "fmpz_mat_strong_echelon_form_mod"], [21, 3, 1, "c.fmpz_mat_struct", "fmpz_mat_struct"], [21, 0, 1, "c.fmpz_mat_sub", "fmpz_mat_sub"], [21, 0, 1, "c.fmpz_mat_swap", "fmpz_mat_swap"], [21, 0, 1, "c.fmpz_mat_swap_cols", "fmpz_mat_swap_cols"], [21, 0, 1, "c.fmpz_mat_swap_entrywise", "fmpz_mat_swap_entrywise"], [21, 0, 1, "c.fmpz_mat_swap_rows", "fmpz_mat_swap_rows"], [21, 3, 1, "c.fmpz_mat_t", "fmpz_mat_t"], [21, 0, 1, "c.fmpz_mat_trace", "fmpz_mat_trace"], [21, 0, 1, "c.fmpz_mat_transpose", "fmpz_mat_transpose"], [21, 0, 1, "c.fmpz_mat_window_clear", "fmpz_mat_window_clear"], [21, 0, 1, "c.fmpz_mat_window_init", "fmpz_mat_window_init"], [21, 0, 1, "c.fmpz_mat_zero", "fmpz_mat_zero"], [18, 0, 1, "c.fmpz_mod", "fmpz_mod"], [22, 0, 1, "c.fmpz_mod_add", "fmpz_mod_add"], [22, 0, 1, "c.fmpz_mod_add_fmpz", "fmpz_mod_add_fmpz"], [22, 0, 1, "c.fmpz_mod_add_si", "fmpz_mod_add_si"], [22, 0, 1, "c.fmpz_mod_add_ui", "fmpz_mod_add_ui"], [26, 0, 1, "c.fmpz_mod_berlekamp_massey_R_poly", "fmpz_mod_berlekamp_massey_R_poly"], [26, 0, 1, "c.fmpz_mod_berlekamp_massey_V_poly", "fmpz_mod_berlekamp_massey_V_poly"], [26, 0, 1, "c.fmpz_mod_berlekamp_massey_add_point", "fmpz_mod_berlekamp_massey_add_point"], [26, 0, 1, "c.fmpz_mod_berlekamp_massey_add_points", "fmpz_mod_berlekamp_massey_add_points"], [26, 0, 1, "c.fmpz_mod_berlekamp_massey_add_zeros", "fmpz_mod_berlekamp_massey_add_zeros"], [26, 0, 1, "c.fmpz_mod_berlekamp_massey_clear", "fmpz_mod_berlekamp_massey_clear"], [26, 0, 1, "c.fmpz_mod_berlekamp_massey_init", "fmpz_mod_berlekamp_massey_init"], [26, 0, 1, "c.fmpz_mod_berlekamp_massey_point_count", "fmpz_mod_berlekamp_massey_point_count"], [26, 0, 1, "c.fmpz_mod_berlekamp_massey_points", "fmpz_mod_berlekamp_massey_points"], [26, 0, 1, "c.fmpz_mod_berlekamp_massey_reduce", "fmpz_mod_berlekamp_massey_reduce"], [26, 0, 1, "c.fmpz_mod_berlekamp_massey_start_over", "fmpz_mod_berlekamp_massey_start_over"], [22, 0, 1, "c.fmpz_mod_ctx_clear", "fmpz_mod_ctx_clear"], [22, 0, 1, "c.fmpz_mod_ctx_init", "fmpz_mod_ctx_init"], [22, 0, 1, "c.fmpz_mod_ctx_set_modulus", "fmpz_mod_ctx_set_modulus"], [22, 3, 1, "c.fmpz_mod_ctx_struct", "fmpz_mod_ctx_struct"], [22, 3, 1, "c.fmpz_mod_ctx_t", "fmpz_mod_ctx_t"], [22, 0, 1, "c.fmpz_mod_discrete_log_pohlig_hellman_clear", "fmpz_mod_discrete_log_pohlig_hellman_clear"], [22, 0, 1, "c.fmpz_mod_discrete_log_pohlig_hellman_init", "fmpz_mod_discrete_log_pohlig_hellman_init"], [22, 0, 1, "c.fmpz_mod_discrete_log_pohlig_hellman_precompute_prime", "fmpz_mod_discrete_log_pohlig_hellman_precompute_prime"], [22, 0, 1, "c.fmpz_mod_discrete_log_pohlig_hellman_primitive_root", "fmpz_mod_discrete_log_pohlig_hellman_primitive_root"], [22, 0, 1, "c.fmpz_mod_discrete_log_pohlig_hellman_run", "fmpz_mod_discrete_log_pohlig_hellman_run"], [22, 0, 1, "c.fmpz_mod_divides", "fmpz_mod_divides"], [22, 0, 1, "c.fmpz_mod_fmpz_sub", "fmpz_mod_fmpz_sub"], [22, 0, 1, "c.fmpz_mod_inv", "fmpz_mod_inv"], [22, 0, 1, "c.fmpz_mod_is_canonical", "fmpz_mod_is_canonical"], [22, 0, 1, "c.fmpz_mod_is_one", "fmpz_mod_is_one"], [23, 0, 1, "c.fmpz_mod_mat_add", "fmpz_mod_mat_add"], [23, 0, 1, "c.fmpz_mod_mat_can_solve", "fmpz_mod_mat_can_solve"], [23, 0, 1, "c.fmpz_mod_mat_charpoly", "fmpz_mod_mat_charpoly"], [23, 0, 1, "c.fmpz_mod_mat_clear", "fmpz_mod_mat_clear"], [23, 0, 1, "c.fmpz_mod_mat_concat_horizontal", "fmpz_mod_mat_concat_horizontal"], [23, 0, 1, "c.fmpz_mod_mat_concat_vertical", "fmpz_mod_mat_concat_vertical"], [23, 0, 1, "c.fmpz_mod_mat_entry", "fmpz_mod_mat_entry"], [23, 0, 1, "c.fmpz_mod_mat_fmpz_vec_mul", "fmpz_mod_mat_fmpz_vec_mul"], [23, 0, 1, "c.fmpz_mod_mat_fmpz_vec_mul_ptr", "fmpz_mod_mat_fmpz_vec_mul_ptr"], [23, 0, 1, "c.fmpz_mod_mat_get_fmpz_mat", "fmpz_mod_mat_get_fmpz_mat"], [23, 0, 1, "c.fmpz_mod_mat_howell_form", "fmpz_mod_mat_howell_form"], [23, 0, 1, "c.fmpz_mod_mat_init", "fmpz_mod_mat_init"], [23, 0, 1, "c.fmpz_mod_mat_init_set", "fmpz_mod_mat_init_set"], [23, 0, 1, "c.fmpz_mod_mat_inv", "fmpz_mod_mat_inv"], [23, 0, 1, "c.fmpz_mod_mat_is_empty", "fmpz_mod_mat_is_empty"], [23, 0, 1, "c.fmpz_mod_mat_is_square", "fmpz_mod_mat_is_square"], [23, 0, 1, "c.fmpz_mod_mat_is_zero", "fmpz_mod_mat_is_zero"], [23, 0, 1, "c.fmpz_mod_mat_lu", "fmpz_mod_mat_lu"], [23, 0, 1, "c.fmpz_mod_mat_minpoly", "fmpz_mod_mat_minpoly"], [23, 0, 1, "c.fmpz_mod_mat_mul", "fmpz_mod_mat_mul"], [23, 0, 1, "c.fmpz_mod_mat_mul_classical_threaded", "fmpz_mod_mat_mul_classical_threaded"], [23, 0, 1, "c.fmpz_mod_mat_mul_fmpz_vec", "fmpz_mod_mat_mul_fmpz_vec"], [23, 0, 1, "c.fmpz_mod_mat_mul_fmpz_vec_ptr", "fmpz_mod_mat_mul_fmpz_vec_ptr"], [23, 0, 1, "c.fmpz_mod_mat_ncols", "fmpz_mod_mat_ncols"], [23, 0, 1, "c.fmpz_mod_mat_neg", "fmpz_mod_mat_neg"], [23, 0, 1, "c.fmpz_mod_mat_nrows", "fmpz_mod_mat_nrows"], [23, 0, 1, "c.fmpz_mod_mat_one", "fmpz_mod_mat_one"], [23, 0, 1, "c.fmpz_mod_mat_print_pretty", "fmpz_mod_mat_print_pretty"], [23, 0, 1, "c.fmpz_mod_mat_randtest", "fmpz_mod_mat_randtest"], [23, 0, 1, "c.fmpz_mod_mat_rref", "fmpz_mod_mat_rref"], [23, 0, 1, "c.fmpz_mod_mat_scalar_mul_fmpz", "fmpz_mod_mat_scalar_mul_fmpz"], [23, 0, 1, "c.fmpz_mod_mat_scalar_mul_si", "fmpz_mod_mat_scalar_mul_si"], [23, 0, 1, "c.fmpz_mod_mat_scalar_mul_ui", "fmpz_mod_mat_scalar_mul_ui"], [23, 0, 1, "c.fmpz_mod_mat_set", "fmpz_mod_mat_set"], [23, 0, 1, "c.fmpz_mod_mat_set_entry", "fmpz_mod_mat_set_entry"], [23, 0, 1, "c.fmpz_mod_mat_set_fmpz_mat", "fmpz_mod_mat_set_fmpz_mat"], [23, 0, 1, "c.fmpz_mod_mat_similarity", "fmpz_mod_mat_similarity"], [23, 0, 1, "c.fmpz_mod_mat_solve", "fmpz_mod_mat_solve"], [23, 0, 1, "c.fmpz_mod_mat_solve_tril", "fmpz_mod_mat_solve_tril"], [23, 0, 1, "c.fmpz_mod_mat_solve_triu", "fmpz_mod_mat_solve_triu"], [23, 0, 1, "c.fmpz_mod_mat_sqr", "fmpz_mod_mat_sqr"], [23, 0, 1, "c.fmpz_mod_mat_strong_echelon_form", "fmpz_mod_mat_strong_echelon_form"], [23, 3, 1, "c.fmpz_mod_mat_struct", "fmpz_mod_mat_struct"], [23, 0, 1, "c.fmpz_mod_mat_sub", "fmpz_mod_mat_sub"], [23, 0, 1, "c.fmpz_mod_mat_swap", "fmpz_mod_mat_swap"], [23, 0, 1, "c.fmpz_mod_mat_swap_entrywise", "fmpz_mod_mat_swap_entrywise"], [23, 3, 1, "c.fmpz_mod_mat_t", "fmpz_mod_mat_t"], [23, 0, 1, "c.fmpz_mod_mat_trace", "fmpz_mod_mat_trace"], [23, 0, 1, "c.fmpz_mod_mat_transpose", "fmpz_mod_mat_transpose"], [23, 0, 1, "c.fmpz_mod_mat_window_clear", "fmpz_mod_mat_window_clear"], [23, 0, 1, "c.fmpz_mod_mat_window_init", "fmpz_mod_mat_window_init"], [23, 0, 1, "c.fmpz_mod_mat_zero", "fmpz_mod_mat_zero"], [24, 0, 1, "c.fmpz_mod_mpoly_add", "fmpz_mod_mpoly_add"], [24, 0, 1, "c.fmpz_mod_mpoly_add_fmpz", "fmpz_mod_mpoly_add_fmpz"], [24, 0, 1, "c.fmpz_mod_mpoly_add_si", "fmpz_mod_mpoly_add_si"], [24, 0, 1, "c.fmpz_mod_mpoly_add_ui", "fmpz_mod_mpoly_add_ui"], [24, 0, 1, "c.fmpz_mod_mpoly_clear", "fmpz_mod_mpoly_clear"], [24, 0, 1, "c.fmpz_mod_mpoly_cmp", "fmpz_mod_mpoly_cmp"], [24, 0, 1, "c.fmpz_mod_mpoly_combine_like_terms", "fmpz_mod_mpoly_combine_like_terms"], [24, 0, 1, "c.fmpz_mod_mpoly_compose_fmpz_mod_mpoly", "fmpz_mod_mpoly_compose_fmpz_mod_mpoly"], [24, 0, 1, "c.fmpz_mod_mpoly_compose_fmpz_mod_mpoly_gen", "fmpz_mod_mpoly_compose_fmpz_mod_mpoly_gen"], [24, 0, 1, "c.fmpz_mod_mpoly_compose_fmpz_mod_mpoly_geobucket", "fmpz_mod_mpoly_compose_fmpz_mod_mpoly_geobucket"], [24, 0, 1, "c.fmpz_mod_mpoly_compose_fmpz_poly", "fmpz_mod_mpoly_compose_fmpz_poly"], [24, 0, 1, "c.fmpz_mod_mpoly_content_vars", "fmpz_mod_mpoly_content_vars"], [24, 0, 1, "c.fmpz_mod_mpoly_ctx_clear", "fmpz_mod_mpoly_ctx_clear"], [24, 0, 1, "c.fmpz_mod_mpoly_ctx_get_modulus", "fmpz_mod_mpoly_ctx_get_modulus"], [24, 0, 1, "c.fmpz_mod_mpoly_ctx_init", "fmpz_mod_mpoly_ctx_init"], [24, 0, 1, "c.fmpz_mod_mpoly_ctx_nvars", "fmpz_mod_mpoly_ctx_nvars"], [24, 0, 1, "c.fmpz_mod_mpoly_ctx_ord", "fmpz_mod_mpoly_ctx_ord"], [24, 3, 1, "c.fmpz_mod_mpoly_ctx_struct", "fmpz_mod_mpoly_ctx_struct"], [24, 3, 1, "c.fmpz_mod_mpoly_ctx_t", "fmpz_mod_mpoly_ctx_t"], [24, 0, 1, "c.fmpz_mod_mpoly_deflate", "fmpz_mod_mpoly_deflate"], [24, 0, 1, "c.fmpz_mod_mpoly_deflation", "fmpz_mod_mpoly_deflation"], [24, 0, 1, "c.fmpz_mod_mpoly_degree_fmpz", "fmpz_mod_mpoly_degree_fmpz"], [24, 0, 1, "c.fmpz_mod_mpoly_degree_si", "fmpz_mod_mpoly_degree_si"], [24, 0, 1, "c.fmpz_mod_mpoly_degrees_fit_si", "fmpz_mod_mpoly_degrees_fit_si"], [24, 0, 1, "c.fmpz_mod_mpoly_degrees_fmpz", "fmpz_mod_mpoly_degrees_fmpz"], [24, 0, 1, "c.fmpz_mod_mpoly_degrees_si", "fmpz_mod_mpoly_degrees_si"], [24, 0, 1, "c.fmpz_mod_mpoly_derivative", "fmpz_mod_mpoly_derivative"], [24, 0, 1, "c.fmpz_mod_mpoly_discriminant", "fmpz_mod_mpoly_discriminant"], [24, 0, 1, "c.fmpz_mod_mpoly_div", "fmpz_mod_mpoly_div"], [24, 0, 1, "c.fmpz_mod_mpoly_divides", "fmpz_mod_mpoly_divides"], [24, 0, 1, "c.fmpz_mod_mpoly_divrem", "fmpz_mod_mpoly_divrem"], [24, 0, 1, "c.fmpz_mod_mpoly_divrem_ideal", "fmpz_mod_mpoly_divrem_ideal"], [24, 0, 1, "c.fmpz_mod_mpoly_equal", "fmpz_mod_mpoly_equal"], [24, 0, 1, "c.fmpz_mod_mpoly_equal_fmpz", "fmpz_mod_mpoly_equal_fmpz"], [24, 0, 1, "c.fmpz_mod_mpoly_equal_si", "fmpz_mod_mpoly_equal_si"], [24, 0, 1, "c.fmpz_mod_mpoly_equal_ui", "fmpz_mod_mpoly_equal_ui"], [24, 0, 1, "c.fmpz_mod_mpoly_evaluate_all_fmpz", "fmpz_mod_mpoly_evaluate_all_fmpz"], [24, 0, 1, "c.fmpz_mod_mpoly_evaluate_one_fmpz", "fmpz_mod_mpoly_evaluate_one_fmpz"], [25, 0, 1, "c.fmpz_mod_mpoly_factor", "fmpz_mod_mpoly_factor"], [25, 0, 1, "c.fmpz_mod_mpoly_factor_clear", "fmpz_mod_mpoly_factor_clear"], [25, 0, 1, "c.fmpz_mod_mpoly_factor_get_base", "fmpz_mod_mpoly_factor_get_base"], [25, 0, 1, "c.fmpz_mod_mpoly_factor_get_constant_fmpz", "fmpz_mod_mpoly_factor_get_constant_fmpz"], [25, 0, 1, "c.fmpz_mod_mpoly_factor_get_exp_si", "fmpz_mod_mpoly_factor_get_exp_si"], [25, 0, 1, "c.fmpz_mod_mpoly_factor_init", "fmpz_mod_mpoly_factor_init"], [25, 0, 1, "c.fmpz_mod_mpoly_factor_length", "fmpz_mod_mpoly_factor_length"], [25, 0, 1, "c.fmpz_mod_mpoly_factor_sort", "fmpz_mod_mpoly_factor_sort"], [25, 0, 1, "c.fmpz_mod_mpoly_factor_squarefree", "fmpz_mod_mpoly_factor_squarefree"], [25, 3, 1, "c.fmpz_mod_mpoly_factor_struct", "fmpz_mod_mpoly_factor_struct"], [25, 0, 1, "c.fmpz_mod_mpoly_factor_swap", "fmpz_mod_mpoly_factor_swap"], [25, 0, 1, "c.fmpz_mod_mpoly_factor_swap_base", "fmpz_mod_mpoly_factor_swap_base"], [25, 3, 1, "c.fmpz_mod_mpoly_factor_t", "fmpz_mod_mpoly_factor_t"], [24, 0, 1, "c.fmpz_mod_mpoly_fprint_pretty", "fmpz_mod_mpoly_fprint_pretty"], [24, 0, 1, "c.fmpz_mod_mpoly_from_univar", "fmpz_mod_mpoly_from_univar"], [24, 0, 1, "c.fmpz_mod_mpoly_gcd", "fmpz_mod_mpoly_gcd"], [24, 0, 1, "c.fmpz_mod_mpoly_gcd_brown", "fmpz_mod_mpoly_gcd_brown"], [24, 0, 1, "c.fmpz_mod_mpoly_gcd_cofactors", "fmpz_mod_mpoly_gcd_cofactors"], [24, 0, 1, "c.fmpz_mod_mpoly_gcd_hensel", "fmpz_mod_mpoly_gcd_hensel"], [24, 0, 1, "c.fmpz_mod_mpoly_gcd_subresultant", "fmpz_mod_mpoly_gcd_subresultant"], [24, 0, 1, "c.fmpz_mod_mpoly_gcd_zippel", "fmpz_mod_mpoly_gcd_zippel"], [24, 0, 1, "c.fmpz_mod_mpoly_gcd_zippel2", "fmpz_mod_mpoly_gcd_zippel2"], [24, 0, 1, "c.fmpz_mod_mpoly_gen", "fmpz_mod_mpoly_gen"], [24, 0, 1, "c.fmpz_mod_mpoly_get_coeff_fmpz_fmpz", "fmpz_mod_mpoly_get_coeff_fmpz_fmpz"], [24, 0, 1, "c.fmpz_mod_mpoly_get_coeff_fmpz_monomial", "fmpz_mod_mpoly_get_coeff_fmpz_monomial"], [24, 0, 1, "c.fmpz_mod_mpoly_get_coeff_fmpz_ui", "fmpz_mod_mpoly_get_coeff_fmpz_ui"], [24, 0, 1, "c.fmpz_mod_mpoly_get_coeff_vars_ui", "fmpz_mod_mpoly_get_coeff_vars_ui"], [24, 0, 1, "c.fmpz_mod_mpoly_get_fmpz", "fmpz_mod_mpoly_get_fmpz"], [24, 0, 1, "c.fmpz_mod_mpoly_get_str_pretty", "fmpz_mod_mpoly_get_str_pretty"], [24, 0, 1, "c.fmpz_mod_mpoly_get_term", "fmpz_mod_mpoly_get_term"], [24, 0, 1, "c.fmpz_mod_mpoly_get_term_coeff_fmpz", "fmpz_mod_mpoly_get_term_coeff_fmpz"], [24, 0, 1, "c.fmpz_mod_mpoly_get_term_exp_fmpz", "fmpz_mod_mpoly_get_term_exp_fmpz"], [24, 0, 1, "c.fmpz_mod_mpoly_get_term_exp_si", "fmpz_mod_mpoly_get_term_exp_si"], [24, 0, 1, "c.fmpz_mod_mpoly_get_term_exp_ui", "fmpz_mod_mpoly_get_term_exp_ui"], [24, 0, 1, "c.fmpz_mod_mpoly_get_term_monomial", "fmpz_mod_mpoly_get_term_monomial"], [24, 0, 1, "c.fmpz_mod_mpoly_get_term_var_exp_si", "fmpz_mod_mpoly_get_term_var_exp_si"], [24, 0, 1, "c.fmpz_mod_mpoly_get_term_var_exp_ui", "fmpz_mod_mpoly_get_term_var_exp_ui"], [24, 0, 1, "c.fmpz_mod_mpoly_inflate", "fmpz_mod_mpoly_inflate"], [24, 0, 1, "c.fmpz_mod_mpoly_init", "fmpz_mod_mpoly_init"], [24, 0, 1, "c.fmpz_mod_mpoly_init2", "fmpz_mod_mpoly_init2"], [24, 0, 1, "c.fmpz_mod_mpoly_init3", "fmpz_mod_mpoly_init3"], [24, 0, 1, "c.fmpz_mod_mpoly_is_canonical", "fmpz_mod_mpoly_is_canonical"], [24, 0, 1, "c.fmpz_mod_mpoly_is_fmpz", "fmpz_mod_mpoly_is_fmpz"], [24, 0, 1, "c.fmpz_mod_mpoly_is_gen", "fmpz_mod_mpoly_is_gen"], [24, 0, 1, "c.fmpz_mod_mpoly_is_one", "fmpz_mod_mpoly_is_one"], [24, 0, 1, "c.fmpz_mod_mpoly_is_square", "fmpz_mod_mpoly_is_square"], [24, 0, 1, "c.fmpz_mod_mpoly_is_zero", "fmpz_mod_mpoly_is_zero"], [24, 0, 1, "c.fmpz_mod_mpoly_length", "fmpz_mod_mpoly_length"], [24, 0, 1, "c.fmpz_mod_mpoly_make_monic", "fmpz_mod_mpoly_make_monic"], [24, 0, 1, "c.fmpz_mod_mpoly_mul", "fmpz_mod_mpoly_mul"], [24, 0, 1, "c.fmpz_mod_mpoly_mul_dense", "fmpz_mod_mpoly_mul_dense"], [24, 0, 1, "c.fmpz_mod_mpoly_mul_johnson", "fmpz_mod_mpoly_mul_johnson"], [24, 0, 1, "c.fmpz_mod_mpoly_neg", "fmpz_mod_mpoly_neg"], [24, 0, 1, "c.fmpz_mod_mpoly_one", "fmpz_mod_mpoly_one"], [24, 0, 1, "c.fmpz_mod_mpoly_pow_fmpz", "fmpz_mod_mpoly_pow_fmpz"], [24, 0, 1, "c.fmpz_mod_mpoly_pow_ui", "fmpz_mod_mpoly_pow_ui"], [24, 0, 1, "c.fmpz_mod_mpoly_print_pretty", "fmpz_mod_mpoly_print_pretty"], [24, 0, 1, "c.fmpz_mod_mpoly_push_term_fmpz_fmpz", "fmpz_mod_mpoly_push_term_fmpz_fmpz"], [24, 0, 1, "c.fmpz_mod_mpoly_push_term_fmpz_ui", "fmpz_mod_mpoly_push_term_fmpz_ui"], [24, 0, 1, "c.fmpz_mod_mpoly_push_term_si_fmpz", "fmpz_mod_mpoly_push_term_si_fmpz"], [24, 0, 1, "c.fmpz_mod_mpoly_push_term_si_ui", "fmpz_mod_mpoly_push_term_si_ui"], [24, 0, 1, "c.fmpz_mod_mpoly_push_term_ui_fmpz", "fmpz_mod_mpoly_push_term_ui_fmpz"], [24, 0, 1, "c.fmpz_mod_mpoly_push_term_ui_ui", "fmpz_mod_mpoly_push_term_ui_ui"], [24, 0, 1, "c.fmpz_mod_mpoly_quadratic_root", "fmpz_mod_mpoly_quadratic_root"], [24, 0, 1, "c.fmpz_mod_mpoly_randtest_bits", "fmpz_mod_mpoly_randtest_bits"], [24, 0, 1, "c.fmpz_mod_mpoly_randtest_bound", "fmpz_mod_mpoly_randtest_bound"], [24, 0, 1, "c.fmpz_mod_mpoly_randtest_bounds", "fmpz_mod_mpoly_randtest_bounds"], [24, 0, 1, "c.fmpz_mod_mpoly_resize", "fmpz_mod_mpoly_resize"], [24, 0, 1, "c.fmpz_mod_mpoly_resultant", "fmpz_mod_mpoly_resultant"], [24, 0, 1, "c.fmpz_mod_mpoly_reverse", "fmpz_mod_mpoly_reverse"], [24, 0, 1, "c.fmpz_mod_mpoly_scalar_addmul_fmpz", "fmpz_mod_mpoly_scalar_addmul_fmpz"], [24, 0, 1, "c.fmpz_mod_mpoly_scalar_mul_fmpz", "fmpz_mod_mpoly_scalar_mul_fmpz"], [24, 0, 1, "c.fmpz_mod_mpoly_scalar_mul_si", "fmpz_mod_mpoly_scalar_mul_si"], [24, 0, 1, "c.fmpz_mod_mpoly_scalar_mul_ui", "fmpz_mod_mpoly_scalar_mul_ui"], [24, 0, 1, "c.fmpz_mod_mpoly_set", "fmpz_mod_mpoly_set"], [24, 0, 1, "c.fmpz_mod_mpoly_set_coeff_fmpz_fmpz", "fmpz_mod_mpoly_set_coeff_fmpz_fmpz"], [24, 0, 1, "c.fmpz_mod_mpoly_set_coeff_fmpz_monomial", "fmpz_mod_mpoly_set_coeff_fmpz_monomial"], [24, 0, 1, "c.fmpz_mod_mpoly_set_coeff_fmpz_ui", "fmpz_mod_mpoly_set_coeff_fmpz_ui"], [24, 0, 1, "c.fmpz_mod_mpoly_set_coeff_si_fmpz", "fmpz_mod_mpoly_set_coeff_si_fmpz"], [24, 0, 1, "c.fmpz_mod_mpoly_set_coeff_si_ui", "fmpz_mod_mpoly_set_coeff_si_ui"], [24, 0, 1, "c.fmpz_mod_mpoly_set_coeff_ui_fmpz", "fmpz_mod_mpoly_set_coeff_ui_fmpz"], [24, 0, 1, "c.fmpz_mod_mpoly_set_coeff_ui_ui", "fmpz_mod_mpoly_set_coeff_ui_ui"], [24, 0, 1, "c.fmpz_mod_mpoly_set_fmpz", "fmpz_mod_mpoly_set_fmpz"], [24, 0, 1, "c.fmpz_mod_mpoly_set_si", "fmpz_mod_mpoly_set_si"], [24, 0, 1, "c.fmpz_mod_mpoly_set_str_pretty", "fmpz_mod_mpoly_set_str_pretty"], [24, 0, 1, "c.fmpz_mod_mpoly_set_term_coeff_fmpz", "fmpz_mod_mpoly_set_term_coeff_fmpz"], [24, 0, 1, "c.fmpz_mod_mpoly_set_term_coeff_si", "fmpz_mod_mpoly_set_term_coeff_si"], [24, 0, 1, "c.fmpz_mod_mpoly_set_term_coeff_ui", "fmpz_mod_mpoly_set_term_coeff_ui"], [24, 0, 1, "c.fmpz_mod_mpoly_set_term_exp_fmpz", "fmpz_mod_mpoly_set_term_exp_fmpz"], [24, 0, 1, "c.fmpz_mod_mpoly_set_term_exp_ui", "fmpz_mod_mpoly_set_term_exp_ui"], [24, 0, 1, "c.fmpz_mod_mpoly_set_ui", "fmpz_mod_mpoly_set_ui"], [24, 0, 1, "c.fmpz_mod_mpoly_sort_terms", "fmpz_mod_mpoly_sort_terms"], [24, 0, 1, "c.fmpz_mod_mpoly_sqrt", "fmpz_mod_mpoly_sqrt"], [24, 3, 1, "c.fmpz_mod_mpoly_struct", "fmpz_mod_mpoly_struct"], [24, 0, 1, "c.fmpz_mod_mpoly_sub", "fmpz_mod_mpoly_sub"], [24, 0, 1, "c.fmpz_mod_mpoly_sub_fmpz", "fmpz_mod_mpoly_sub_fmpz"], [24, 0, 1, "c.fmpz_mod_mpoly_sub_si", "fmpz_mod_mpoly_sub_si"], [24, 0, 1, "c.fmpz_mod_mpoly_sub_ui", "fmpz_mod_mpoly_sub_ui"], [24, 0, 1, "c.fmpz_mod_mpoly_swap", "fmpz_mod_mpoly_swap"], [24, 3, 1, "c.fmpz_mod_mpoly_t", "fmpz_mod_mpoly_t"], [24, 0, 1, "c.fmpz_mod_mpoly_term_content", "fmpz_mod_mpoly_term_content"], [24, 0, 1, "c.fmpz_mod_mpoly_term_exp_fits_si", "fmpz_mod_mpoly_term_exp_fits_si"], [24, 0, 1, "c.fmpz_mod_mpoly_term_exp_fits_ui", "fmpz_mod_mpoly_term_exp_fits_ui"], [24, 0, 1, "c.fmpz_mod_mpoly_to_univar", "fmpz_mod_mpoly_to_univar"], [24, 0, 1, "c.fmpz_mod_mpoly_total_degree_fits_si", "fmpz_mod_mpoly_total_degree_fits_si"], [24, 0, 1, "c.fmpz_mod_mpoly_total_degree_fmpz", "fmpz_mod_mpoly_total_degree_fmpz"], [24, 0, 1, "c.fmpz_mod_mpoly_total_degree_si", "fmpz_mod_mpoly_total_degree_si"], [24, 0, 1, "c.fmpz_mod_mpoly_univar_clear", "fmpz_mod_mpoly_univar_clear"], [24, 0, 1, "c.fmpz_mod_mpoly_univar_degree_fits_si", "fmpz_mod_mpoly_univar_degree_fits_si"], [24, 0, 1, "c.fmpz_mod_mpoly_univar_discriminant", "fmpz_mod_mpoly_univar_discriminant"], [24, 0, 1, "c.fmpz_mod_mpoly_univar_get_term_coeff", "fmpz_mod_mpoly_univar_get_term_coeff"], [24, 0, 1, "c.fmpz_mod_mpoly_univar_get_term_exp_si", "fmpz_mod_mpoly_univar_get_term_exp_si"], [24, 0, 1, "c.fmpz_mod_mpoly_univar_init", "fmpz_mod_mpoly_univar_init"], [24, 0, 1, "c.fmpz_mod_mpoly_univar_length", "fmpz_mod_mpoly_univar_length"], [24, 0, 1, "c.fmpz_mod_mpoly_univar_resultant", "fmpz_mod_mpoly_univar_resultant"], [24, 0, 1, "c.fmpz_mod_mpoly_univar_set_coeff_ui", "fmpz_mod_mpoly_univar_set_coeff_ui"], [24, 0, 1, "c.fmpz_mod_mpoly_univar_swap", "fmpz_mod_mpoly_univar_swap"], [24, 0, 1, "c.fmpz_mod_mpoly_univar_swap_term_coeff", "fmpz_mod_mpoly_univar_swap_term_coeff"], [24, 0, 1, "c.fmpz_mod_mpoly_used_vars", "fmpz_mod_mpoly_used_vars"], [24, 0, 1, "c.fmpz_mod_mpoly_zero", "fmpz_mod_mpoly_zero"], [22, 0, 1, "c.fmpz_mod_mul", "fmpz_mod_mul"], [22, 0, 1, "c.fmpz_mod_neg", "fmpz_mod_neg"], [26, 0, 1, "c.fmpz_mod_poly_add", "fmpz_mod_poly_add"], [26, 0, 1, "c.fmpz_mod_poly_add_series", "fmpz_mod_poly_add_series"], [26, 0, 1, "c.fmpz_mod_poly_clear", "fmpz_mod_poly_clear"], [26, 0, 1, "c.fmpz_mod_poly_compose", "fmpz_mod_poly_compose"], [26, 0, 1, "c.fmpz_mod_poly_compose_divconquer", "fmpz_mod_poly_compose_divconquer"], [26, 0, 1, "c.fmpz_mod_poly_compose_horner", "fmpz_mod_poly_compose_horner"], [26, 0, 1, "c.fmpz_mod_poly_compose_mod", "fmpz_mod_poly_compose_mod"], [26, 0, 1, "c.fmpz_mod_poly_compose_mod_brent_kung", "fmpz_mod_poly_compose_mod_brent_kung"], [26, 0, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv", "fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv"], [26, 0, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_preinv", "fmpz_mod_poly_compose_mod_brent_kung_preinv"], [26, 0, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv", "fmpz_mod_poly_compose_mod_brent_kung_vec_preinv"], [26, 0, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded", "fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded"], [26, 0, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool"], [26, 0, 1, "c.fmpz_mod_poly_compose_mod_horner", "fmpz_mod_poly_compose_mod_horner"], [26, 0, 1, "c.fmpz_mod_poly_deflate", "fmpz_mod_poly_deflate"], [26, 0, 1, "c.fmpz_mod_poly_deflation", "fmpz_mod_poly_deflation"], [26, 0, 1, "c.fmpz_mod_poly_degree", "fmpz_mod_poly_degree"], [26, 0, 1, "c.fmpz_mod_poly_derivative", "fmpz_mod_poly_derivative"], [26, 0, 1, "c.fmpz_mod_poly_discriminant", "fmpz_mod_poly_discriminant"], [26, 0, 1, "c.fmpz_mod_poly_div", "fmpz_mod_poly_div"], [26, 0, 1, "c.fmpz_mod_poly_div_basecase", "fmpz_mod_poly_div_basecase"], [26, 0, 1, "c.fmpz_mod_poly_div_divconquer", "fmpz_mod_poly_div_divconquer"], [26, 0, 1, "c.fmpz_mod_poly_div_newton", "fmpz_mod_poly_div_newton"], [26, 0, 1, "c.fmpz_mod_poly_div_newton_n_preinv", "fmpz_mod_poly_div_newton_n_preinv"], [26, 0, 1, "c.fmpz_mod_poly_div_series", "fmpz_mod_poly_div_series"], [26, 0, 1, "c.fmpz_mod_poly_divides", "fmpz_mod_poly_divides"], [26, 0, 1, "c.fmpz_mod_poly_divides_classical", "fmpz_mod_poly_divides_classical"], [26, 0, 1, "c.fmpz_mod_poly_divrem", "fmpz_mod_poly_divrem"], [26, 0, 1, "c.fmpz_mod_poly_divrem_basecase", "fmpz_mod_poly_divrem_basecase"], [26, 0, 1, "c.fmpz_mod_poly_divrem_divconquer", "fmpz_mod_poly_divrem_divconquer"], [26, 0, 1, "c.fmpz_mod_poly_divrem_f", "fmpz_mod_poly_divrem_f"], [26, 0, 1, "c.fmpz_mod_poly_divrem_newton_n_preinv", "fmpz_mod_poly_divrem_newton_n_preinv"], [26, 0, 1, "c.fmpz_mod_poly_equal", "fmpz_mod_poly_equal"], [26, 0, 1, "c.fmpz_mod_poly_equal_trunc", "fmpz_mod_poly_equal_trunc"], [26, 0, 1, "c.fmpz_mod_poly_evaluate_fmpz", "fmpz_mod_poly_evaluate_fmpz"], [26, 0, 1, "c.fmpz_mod_poly_evaluate_fmpz_vec", "fmpz_mod_poly_evaluate_fmpz_vec"], [26, 0, 1, "c.fmpz_mod_poly_evaluate_fmpz_vec_fast", "fmpz_mod_poly_evaluate_fmpz_vec_fast"], [26, 0, 1, "c.fmpz_mod_poly_evaluate_fmpz_vec_iter", "fmpz_mod_poly_evaluate_fmpz_vec_iter"], [27, 0, 1, "c.fmpz_mod_poly_factor", "fmpz_mod_poly_factor"], [27, 0, 1, "c.fmpz_mod_poly_factor_berlekamp", "fmpz_mod_poly_factor_berlekamp"], [27, 0, 1, "c.fmpz_mod_poly_factor_cantor_zassenhaus", "fmpz_mod_poly_factor_cantor_zassenhaus"], [27, 0, 1, "c.fmpz_mod_poly_factor_clear", "fmpz_mod_poly_factor_clear"], [27, 0, 1, "c.fmpz_mod_poly_factor_concat", "fmpz_mod_poly_factor_concat"], [27, 0, 1, "c.fmpz_mod_poly_factor_distinct_deg", "fmpz_mod_poly_factor_distinct_deg"], [27, 0, 1, "c.fmpz_mod_poly_factor_distinct_deg_threaded", "fmpz_mod_poly_factor_distinct_deg_threaded"], [27, 0, 1, "c.fmpz_mod_poly_factor_equal_deg", "fmpz_mod_poly_factor_equal_deg"], [27, 0, 1, "c.fmpz_mod_poly_factor_equal_deg_prob", "fmpz_mod_poly_factor_equal_deg_prob"], [27, 0, 1, "c.fmpz_mod_poly_factor_fit_length", "fmpz_mod_poly_factor_fit_length"], [27, 0, 1, "c.fmpz_mod_poly_factor_init", "fmpz_mod_poly_factor_init"], [27, 0, 1, "c.fmpz_mod_poly_factor_insert", "fmpz_mod_poly_factor_insert"], [27, 0, 1, "c.fmpz_mod_poly_factor_kaltofen_shoup", "fmpz_mod_poly_factor_kaltofen_shoup"], [27, 0, 1, "c.fmpz_mod_poly_factor_pow", "fmpz_mod_poly_factor_pow"], [27, 0, 1, "c.fmpz_mod_poly_factor_print", "fmpz_mod_poly_factor_print"], [27, 0, 1, "c.fmpz_mod_poly_factor_realloc", "fmpz_mod_poly_factor_realloc"], [27, 0, 1, "c.fmpz_mod_poly_factor_set", "fmpz_mod_poly_factor_set"], [27, 0, 1, "c.fmpz_mod_poly_factor_squarefree", "fmpz_mod_poly_factor_squarefree"], [27, 3, 1, "c.fmpz_mod_poly_factor_struct", "fmpz_mod_poly_factor_struct"], [27, 3, 1, "c.fmpz_mod_poly_factor_t", "fmpz_mod_poly_factor_t"], [26, 0, 1, "c.fmpz_mod_poly_find_distinct_nonzero_roots", "fmpz_mod_poly_find_distinct_nonzero_roots"], [26, 0, 1, "c.fmpz_mod_poly_fit_length", "fmpz_mod_poly_fit_length"], [26, 0, 1, "c.fmpz_mod_poly_fprint", "fmpz_mod_poly_fprint"], [26, 0, 1, "c.fmpz_mod_poly_fprint_pretty", "fmpz_mod_poly_fprint_pretty"], [26, 0, 1, "c.fmpz_mod_poly_frobenius_power", "fmpz_mod_poly_frobenius_power"], [26, 0, 1, "c.fmpz_mod_poly_frobenius_powers_2exp_clear", "fmpz_mod_poly_frobenius_powers_2exp_clear"], [26, 0, 1, "c.fmpz_mod_poly_frobenius_powers_2exp_precomp", "fmpz_mod_poly_frobenius_powers_2exp_precomp"], [26, 0, 1, "c.fmpz_mod_poly_frobenius_powers_clear", "fmpz_mod_poly_frobenius_powers_clear"], [26, 0, 1, "c.fmpz_mod_poly_frobenius_powers_precomp", "fmpz_mod_poly_frobenius_powers_precomp"], [26, 0, 1, "c.fmpz_mod_poly_gcd", "fmpz_mod_poly_gcd"], [26, 0, 1, "c.fmpz_mod_poly_gcd_euclidean", "fmpz_mod_poly_gcd_euclidean"], [26, 0, 1, "c.fmpz_mod_poly_gcd_euclidean_f", "fmpz_mod_poly_gcd_euclidean_f"], [26, 0, 1, "c.fmpz_mod_poly_gcd_f", "fmpz_mod_poly_gcd_f"], [26, 0, 1, "c.fmpz_mod_poly_gcd_hgcd", "fmpz_mod_poly_gcd_hgcd"], [26, 0, 1, "c.fmpz_mod_poly_gcdinv", "fmpz_mod_poly_gcdinv"], [26, 0, 1, "c.fmpz_mod_poly_gcdinv_euclidean", "fmpz_mod_poly_gcdinv_euclidean"], [26, 0, 1, "c.fmpz_mod_poly_gcdinv_euclidean_f", "fmpz_mod_poly_gcdinv_euclidean_f"], [26, 0, 1, "c.fmpz_mod_poly_gcdinv_f", "fmpz_mod_poly_gcdinv_f"], [26, 0, 1, "c.fmpz_mod_poly_get_coeff_fmpz", "fmpz_mod_poly_get_coeff_fmpz"], [26, 0, 1, "c.fmpz_mod_poly_get_coeff_mpz", "fmpz_mod_poly_get_coeff_mpz"], [26, 0, 1, "c.fmpz_mod_poly_get_fmpz_poly", "fmpz_mod_poly_get_fmpz_poly"], [26, 0, 1, "c.fmpz_mod_poly_get_nmod_poly", "fmpz_mod_poly_get_nmod_poly"], [26, 0, 1, "c.fmpz_mod_poly_inflate", "fmpz_mod_poly_inflate"], [26, 0, 1, "c.fmpz_mod_poly_init", "fmpz_mod_poly_init"], [26, 0, 1, "c.fmpz_mod_poly_init2", "fmpz_mod_poly_init2"], [26, 0, 1, "c.fmpz_mod_poly_inv_series", "fmpz_mod_poly_inv_series"], [26, 0, 1, "c.fmpz_mod_poly_inv_series_f", "fmpz_mod_poly_inv_series_f"], [26, 0, 1, "c.fmpz_mod_poly_inv_series_newton", "fmpz_mod_poly_inv_series_newton"], [26, 0, 1, "c.fmpz_mod_poly_inv_series_newton_f", "fmpz_mod_poly_inv_series_newton_f"], [26, 0, 1, "c.fmpz_mod_poly_invmod", "fmpz_mod_poly_invmod"], [26, 0, 1, "c.fmpz_mod_poly_invmod_f", "fmpz_mod_poly_invmod_f"], [26, 0, 1, "c.fmpz_mod_poly_invsqrt_series", "fmpz_mod_poly_invsqrt_series"], [26, 0, 1, "c.fmpz_mod_poly_is_gen", "fmpz_mod_poly_is_gen"], [27, 0, 1, "c.fmpz_mod_poly_is_irreducible", "fmpz_mod_poly_is_irreducible"], [27, 0, 1, "c.fmpz_mod_poly_is_irreducible_ddf", "fmpz_mod_poly_is_irreducible_ddf"], [27, 0, 1, "c.fmpz_mod_poly_is_irreducible_rabin", "fmpz_mod_poly_is_irreducible_rabin"], [27, 0, 1, "c.fmpz_mod_poly_is_irreducible_rabin_f", "fmpz_mod_poly_is_irreducible_rabin_f"], [26, 0, 1, "c.fmpz_mod_poly_is_one", "fmpz_mod_poly_is_one"], [27, 0, 1, "c.fmpz_mod_poly_is_squarefree", "fmpz_mod_poly_is_squarefree"], [27, 0, 1, "c.fmpz_mod_poly_is_squarefree_f", "fmpz_mod_poly_is_squarefree_f"], [26, 0, 1, "c.fmpz_mod_poly_is_zero", "fmpz_mod_poly_is_zero"], [26, 0, 1, "c.fmpz_mod_poly_lead", "fmpz_mod_poly_lead"], [26, 0, 1, "c.fmpz_mod_poly_length", "fmpz_mod_poly_length"], [26, 0, 1, "c.fmpz_mod_poly_make_monic", "fmpz_mod_poly_make_monic"], [26, 0, 1, "c.fmpz_mod_poly_make_monic_f", "fmpz_mod_poly_make_monic_f"], [26, 0, 1, "c.fmpz_mod_poly_minpoly", "fmpz_mod_poly_minpoly"], [26, 0, 1, "c.fmpz_mod_poly_minpoly_bm", "fmpz_mod_poly_minpoly_bm"], [26, 0, 1, "c.fmpz_mod_poly_minpoly_hgcd", "fmpz_mod_poly_minpoly_hgcd"], [26, 0, 1, "c.fmpz_mod_poly_mul", "fmpz_mod_poly_mul"], [26, 0, 1, "c.fmpz_mod_poly_mulhigh", "fmpz_mod_poly_mulhigh"], [26, 0, 1, "c.fmpz_mod_poly_mullow", "fmpz_mod_poly_mullow"], [26, 0, 1, "c.fmpz_mod_poly_mulmod", "fmpz_mod_poly_mulmod"], [26, 0, 1, "c.fmpz_mod_poly_mulmod_preinv", "fmpz_mod_poly_mulmod_preinv"], [26, 0, 1, "c.fmpz_mod_poly_neg", "fmpz_mod_poly_neg"], [26, 0, 1, "c.fmpz_mod_poly_one", "fmpz_mod_poly_one"], [26, 0, 1, "c.fmpz_mod_poly_pow", "fmpz_mod_poly_pow"], [26, 0, 1, "c.fmpz_mod_poly_pow_trunc", "fmpz_mod_poly_pow_trunc"], [26, 0, 1, "c.fmpz_mod_poly_pow_trunc_binexp", "fmpz_mod_poly_pow_trunc_binexp"], [26, 0, 1, "c.fmpz_mod_poly_powers_mod_bsgs", "fmpz_mod_poly_powers_mod_bsgs"], [26, 0, 1, "c.fmpz_mod_poly_powers_mod_naive", "fmpz_mod_poly_powers_mod_naive"], [26, 0, 1, "c.fmpz_mod_poly_powmod_fmpz_binexp", "fmpz_mod_poly_powmod_fmpz_binexp"], [26, 0, 1, "c.fmpz_mod_poly_powmod_fmpz_binexp_preinv", "fmpz_mod_poly_powmod_fmpz_binexp_preinv"], [26, 0, 1, "c.fmpz_mod_poly_powmod_ui_binexp", "fmpz_mod_poly_powmod_ui_binexp"], [26, 0, 1, "c.fmpz_mod_poly_powmod_ui_binexp_preinv", "fmpz_mod_poly_powmod_ui_binexp_preinv"], [26, 0, 1, "c.fmpz_mod_poly_powmod_x_fmpz_preinv", "fmpz_mod_poly_powmod_x_fmpz_preinv"], [26, 0, 1, "c.fmpz_mod_poly_precompute_matrix", "fmpz_mod_poly_precompute_matrix"], [26, 0, 1, "c.fmpz_mod_poly_print", "fmpz_mod_poly_print"], [26, 0, 1, "c.fmpz_mod_poly_print_pretty", "fmpz_mod_poly_print_pretty"], [26, 0, 1, "c.fmpz_mod_poly_product_roots_fmpz_vec", "fmpz_mod_poly_product_roots_fmpz_vec"], [26, 0, 1, "c.fmpz_mod_poly_radix", "fmpz_mod_poly_radix"], [26, 0, 1, "c.fmpz_mod_poly_radix_init", "fmpz_mod_poly_radix_init"], [26, 0, 1, "c.fmpz_mod_poly_randtest", "fmpz_mod_poly_randtest"], [26, 0, 1, "c.fmpz_mod_poly_randtest_irreducible", "fmpz_mod_poly_randtest_irreducible"], [26, 0, 1, "c.fmpz_mod_poly_randtest_monic", "fmpz_mod_poly_randtest_monic"], [26, 0, 1, "c.fmpz_mod_poly_randtest_monic_irreducible", "fmpz_mod_poly_randtest_monic_irreducible"], [26, 0, 1, "c.fmpz_mod_poly_randtest_monic_primitive", "fmpz_mod_poly_randtest_monic_primitive"], [26, 0, 1, "c.fmpz_mod_poly_randtest_not_zero", "fmpz_mod_poly_randtest_not_zero"], [26, 0, 1, "c.fmpz_mod_poly_randtest_pentomial", "fmpz_mod_poly_randtest_pentomial"], [26, 0, 1, "c.fmpz_mod_poly_randtest_pentomial_irreducible", "fmpz_mod_poly_randtest_pentomial_irreducible"], [26, 0, 1, "c.fmpz_mod_poly_randtest_sparse_irreducible", "fmpz_mod_poly_randtest_sparse_irreducible"], [26, 0, 1, "c.fmpz_mod_poly_randtest_trinomial", "fmpz_mod_poly_randtest_trinomial"], [26, 0, 1, "c.fmpz_mod_poly_randtest_trinomial_irreducible", "fmpz_mod_poly_randtest_trinomial_irreducible"], [26, 0, 1, "c.fmpz_mod_poly_realloc", "fmpz_mod_poly_realloc"], [26, 0, 1, "c.fmpz_mod_poly_rem", "fmpz_mod_poly_rem"], [26, 0, 1, "c.fmpz_mod_poly_rem_basecase", "fmpz_mod_poly_rem_basecase"], [26, 0, 1, "c.fmpz_mod_poly_remove", "fmpz_mod_poly_remove"], [26, 0, 1, "c.fmpz_mod_poly_resultant", "fmpz_mod_poly_resultant"], [26, 0, 1, "c.fmpz_mod_poly_resultant_euclidean", "fmpz_mod_poly_resultant_euclidean"], [26, 0, 1, "c.fmpz_mod_poly_resultant_hgcd", "fmpz_mod_poly_resultant_hgcd"], [26, 0, 1, "c.fmpz_mod_poly_reverse", "fmpz_mod_poly_reverse"], [27, 0, 1, "c.fmpz_mod_poly_roots", "fmpz_mod_poly_roots"], [27, 0, 1, "c.fmpz_mod_poly_roots_factored", "fmpz_mod_poly_roots_factored"], [26, 0, 1, "c.fmpz_mod_poly_scalar_addmul_fmpz", "fmpz_mod_poly_scalar_addmul_fmpz"], [26, 0, 1, "c.fmpz_mod_poly_scalar_div_fmpz", "fmpz_mod_poly_scalar_div_fmpz"], [26, 0, 1, "c.fmpz_mod_poly_scalar_mul_fmpz", "fmpz_mod_poly_scalar_mul_fmpz"], [26, 0, 1, "c.fmpz_mod_poly_set", "fmpz_mod_poly_set"], [26, 0, 1, "c.fmpz_mod_poly_set_coeff_fmpz", "fmpz_mod_poly_set_coeff_fmpz"], [26, 0, 1, "c.fmpz_mod_poly_set_coeff_mpz", "fmpz_mod_poly_set_coeff_mpz"], [26, 0, 1, "c.fmpz_mod_poly_set_coeff_ui", "fmpz_mod_poly_set_coeff_ui"], [26, 0, 1, "c.fmpz_mod_poly_set_fmpz", "fmpz_mod_poly_set_fmpz"], [26, 0, 1, "c.fmpz_mod_poly_set_fmpz_poly", "fmpz_mod_poly_set_fmpz_poly"], [26, 0, 1, "c.fmpz_mod_poly_set_nmod_poly", "fmpz_mod_poly_set_nmod_poly"], [26, 0, 1, "c.fmpz_mod_poly_set_trunc", "fmpz_mod_poly_set_trunc"], [26, 0, 1, "c.fmpz_mod_poly_set_ui", "fmpz_mod_poly_set_ui"], [26, 0, 1, "c.fmpz_mod_poly_shift_left", "fmpz_mod_poly_shift_left"], [26, 0, 1, "c.fmpz_mod_poly_shift_right", "fmpz_mod_poly_shift_right"], [26, 0, 1, "c.fmpz_mod_poly_sqr", "fmpz_mod_poly_sqr"], [26, 0, 1, "c.fmpz_mod_poly_sqrt", "fmpz_mod_poly_sqrt"], [26, 0, 1, "c.fmpz_mod_poly_sqrt_series", "fmpz_mod_poly_sqrt_series"], [26, 3, 1, "c.fmpz_mod_poly_struct", "fmpz_mod_poly_struct"], [26, 0, 1, "c.fmpz_mod_poly_sub", "fmpz_mod_poly_sub"], [26, 0, 1, "c.fmpz_mod_poly_sub_series", "fmpz_mod_poly_sub_series"], [26, 0, 1, "c.fmpz_mod_poly_swap", "fmpz_mod_poly_swap"], [26, 3, 1, "c.fmpz_mod_poly_t", "fmpz_mod_poly_t"], [26, 0, 1, "c.fmpz_mod_poly_truncate", "fmpz_mod_poly_truncate"], [26, 0, 1, "c.fmpz_mod_poly_xgcd", "fmpz_mod_poly_xgcd"], [26, 0, 1, "c.fmpz_mod_poly_xgcd_euclidean", "fmpz_mod_poly_xgcd_euclidean"], [26, 0, 1, "c.fmpz_mod_poly_xgcd_euclidean_f", "fmpz_mod_poly_xgcd_euclidean_f"], [26, 0, 1, "c.fmpz_mod_poly_xgcd_f", "fmpz_mod_poly_xgcd_f"], [26, 0, 1, "c.fmpz_mod_poly_xgcd_hgcd", "fmpz_mod_poly_xgcd_hgcd"], [26, 0, 1, "c.fmpz_mod_poly_zero", "fmpz_mod_poly_zero"], [26, 0, 1, "c.fmpz_mod_poly_zero_coeffs", "fmpz_mod_poly_zero_coeffs"], [22, 0, 1, "c.fmpz_mod_pow_fmpz", "fmpz_mod_pow_fmpz"], [22, 0, 1, "c.fmpz_mod_pow_ui", "fmpz_mod_pow_ui"], [22, 0, 1, "c.fmpz_mod_set_fmpz", "fmpz_mod_set_fmpz"], [22, 0, 1, "c.fmpz_mod_si_sub", "fmpz_mod_si_sub"], [22, 0, 1, "c.fmpz_mod_sub", "fmpz_mod_sub"], [22, 0, 1, "c.fmpz_mod_sub_fmpz", "fmpz_mod_sub_fmpz"], [22, 0, 1, "c.fmpz_mod_sub_si", "fmpz_mod_sub_si"], [22, 0, 1, "c.fmpz_mod_sub_ui", "fmpz_mod_sub_ui"], [18, 0, 1, "c.fmpz_mod_ui", "fmpz_mod_ui"], [22, 0, 1, "c.fmpz_mod_ui_sub", "fmpz_mod_ui_sub"], [18, 0, 1, "c.fmpz_moebius_mu", "fmpz_moebius_mu"], [29, 0, 1, "c.fmpz_mpoly_add", "fmpz_mpoly_add"], [29, 0, 1, "c.fmpz_mpoly_add_fmpz", "fmpz_mpoly_add_fmpz"], [29, 0, 1, "c.fmpz_mpoly_add_si", "fmpz_mpoly_add_si"], [29, 0, 1, "c.fmpz_mpoly_add_ui", "fmpz_mpoly_add_ui"], [29, 0, 1, "c.fmpz_mpoly_clear", "fmpz_mpoly_clear"], [29, 0, 1, "c.fmpz_mpoly_cmp", "fmpz_mpoly_cmp"], [29, 0, 1, "c.fmpz_mpoly_combine_like_terms", "fmpz_mpoly_combine_like_terms"], [29, 0, 1, "c.fmpz_mpoly_compose_fmpz_mpoly", "fmpz_mpoly_compose_fmpz_mpoly"], [29, 0, 1, "c.fmpz_mpoly_compose_fmpz_mpoly_gen", "fmpz_mpoly_compose_fmpz_mpoly_gen"], [29, 0, 1, "c.fmpz_mpoly_compose_fmpz_mpoly_geobucket", "fmpz_mpoly_compose_fmpz_mpoly_geobucket"], [29, 0, 1, "c.fmpz_mpoly_compose_fmpz_mpoly_horner", "fmpz_mpoly_compose_fmpz_mpoly_horner"], [29, 0, 1, "c.fmpz_mpoly_compose_fmpz_poly", "fmpz_mpoly_compose_fmpz_poly"], [29, 0, 1, "c.fmpz_mpoly_content_vars", "fmpz_mpoly_content_vars"], [29, 0, 1, "c.fmpz_mpoly_ctx_clear", "fmpz_mpoly_ctx_clear"], [29, 0, 1, "c.fmpz_mpoly_ctx_init", "fmpz_mpoly_ctx_init"], [29, 0, 1, "c.fmpz_mpoly_ctx_nvars", "fmpz_mpoly_ctx_nvars"], [29, 0, 1, "c.fmpz_mpoly_ctx_ord", "fmpz_mpoly_ctx_ord"], [29, 3, 1, "c.fmpz_mpoly_ctx_struct", "fmpz_mpoly_ctx_struct"], [29, 3, 1, "c.fmpz_mpoly_ctx_t", "fmpz_mpoly_ctx_t"], [29, 0, 1, "c.fmpz_mpoly_deflate", "fmpz_mpoly_deflate"], [29, 0, 1, "c.fmpz_mpoly_deflation", "fmpz_mpoly_deflation"], [29, 0, 1, "c.fmpz_mpoly_degree_fmpz", "fmpz_mpoly_degree_fmpz"], [29, 0, 1, "c.fmpz_mpoly_degree_si", "fmpz_mpoly_degree_si"], [29, 0, 1, "c.fmpz_mpoly_degrees_fit_si", "fmpz_mpoly_degrees_fit_si"], [29, 0, 1, "c.fmpz_mpoly_degrees_fmpz", "fmpz_mpoly_degrees_fmpz"], [29, 0, 1, "c.fmpz_mpoly_degrees_si", "fmpz_mpoly_degrees_si"], [29, 0, 1, "c.fmpz_mpoly_derivative", "fmpz_mpoly_derivative"], [29, 0, 1, "c.fmpz_mpoly_discriminant", "fmpz_mpoly_discriminant"], [29, 0, 1, "c.fmpz_mpoly_div", "fmpz_mpoly_div"], [29, 0, 1, "c.fmpz_mpoly_div_monagan_pearce", "fmpz_mpoly_div_monagan_pearce"], [29, 0, 1, "c.fmpz_mpoly_divides", "fmpz_mpoly_divides"], [29, 0, 1, "c.fmpz_mpoly_divides_array", "fmpz_mpoly_divides_array"], [29, 0, 1, "c.fmpz_mpoly_divides_heap_threaded", "fmpz_mpoly_divides_heap_threaded"], [29, 0, 1, "c.fmpz_mpoly_divides_monagan_pearce", "fmpz_mpoly_divides_monagan_pearce"], [29, 0, 1, "c.fmpz_mpoly_divrem", "fmpz_mpoly_divrem"], [29, 0, 1, "c.fmpz_mpoly_divrem_array", "fmpz_mpoly_divrem_array"], [29, 0, 1, "c.fmpz_mpoly_divrem_ideal", "fmpz_mpoly_divrem_ideal"], [29, 0, 1, "c.fmpz_mpoly_divrem_ideal_monagan_pearce", "fmpz_mpoly_divrem_ideal_monagan_pearce"], [29, 0, 1, "c.fmpz_mpoly_divrem_monagan_pearce", "fmpz_mpoly_divrem_monagan_pearce"], [29, 0, 1, "c.fmpz_mpoly_equal", "fmpz_mpoly_equal"], [29, 0, 1, "c.fmpz_mpoly_equal_fmpz", "fmpz_mpoly_equal_fmpz"], [29, 0, 1, "c.fmpz_mpoly_equal_si", "fmpz_mpoly_equal_si"], [29, 0, 1, "c.fmpz_mpoly_equal_ui", "fmpz_mpoly_equal_ui"], [29, 0, 1, "c.fmpz_mpoly_evaluate_all_fmpz", "fmpz_mpoly_evaluate_all_fmpz"], [29, 0, 1, "c.fmpz_mpoly_evaluate_one_fmpz", "fmpz_mpoly_evaluate_one_fmpz"], [30, 0, 1, "c.fmpz_mpoly_factor", "fmpz_mpoly_factor"], [30, 0, 1, "c.fmpz_mpoly_factor_clear", "fmpz_mpoly_factor_clear"], [30, 0, 1, "c.fmpz_mpoly_factor_get_base", "fmpz_mpoly_factor_get_base"], [30, 0, 1, "c.fmpz_mpoly_factor_get_constant_fmpq", "fmpz_mpoly_factor_get_constant_fmpq"], [30, 0, 1, "c.fmpz_mpoly_factor_get_constant_fmpz", "fmpz_mpoly_factor_get_constant_fmpz"], [30, 0, 1, "c.fmpz_mpoly_factor_get_exp_si", "fmpz_mpoly_factor_get_exp_si"], [30, 0, 1, "c.fmpz_mpoly_factor_init", "fmpz_mpoly_factor_init"], [30, 0, 1, "c.fmpz_mpoly_factor_length", "fmpz_mpoly_factor_length"], [30, 0, 1, "c.fmpz_mpoly_factor_sort", "fmpz_mpoly_factor_sort"], [30, 0, 1, "c.fmpz_mpoly_factor_squarefree", "fmpz_mpoly_factor_squarefree"], [30, 3, 1, "c.fmpz_mpoly_factor_struct", "fmpz_mpoly_factor_struct"], [30, 0, 1, "c.fmpz_mpoly_factor_swap", "fmpz_mpoly_factor_swap"], [30, 0, 1, "c.fmpz_mpoly_factor_swap_base", "fmpz_mpoly_factor_swap_base"], [30, 3, 1, "c.fmpz_mpoly_factor_t", "fmpz_mpoly_factor_t"], [29, 0, 1, "c.fmpz_mpoly_fit_bits", "fmpz_mpoly_fit_bits"], [29, 0, 1, "c.fmpz_mpoly_fit_length", "fmpz_mpoly_fit_length"], [29, 0, 1, "c.fmpz_mpoly_fprint_pretty", "fmpz_mpoly_fprint_pretty"], [29, 0, 1, "c.fmpz_mpoly_from_univar", "fmpz_mpoly_from_univar"], [29, 0, 1, "c.fmpz_mpoly_gcd", "fmpz_mpoly_gcd"], [29, 0, 1, "c.fmpz_mpoly_gcd_brown", "fmpz_mpoly_gcd_brown"], [29, 0, 1, "c.fmpz_mpoly_gcd_cofactors", "fmpz_mpoly_gcd_cofactors"], [29, 0, 1, "c.fmpz_mpoly_gcd_hensel", "fmpz_mpoly_gcd_hensel"], [29, 0, 1, "c.fmpz_mpoly_gcd_subresultant", "fmpz_mpoly_gcd_subresultant"], [29, 0, 1, "c.fmpz_mpoly_gcd_zippel", "fmpz_mpoly_gcd_zippel"], [29, 0, 1, "c.fmpz_mpoly_gcd_zippel2", "fmpz_mpoly_gcd_zippel2"], [29, 0, 1, "c.fmpz_mpoly_gen", "fmpz_mpoly_gen"], [29, 0, 1, "c.fmpz_mpoly_get_coeff_fmpz_fmpz", "fmpz_mpoly_get_coeff_fmpz_fmpz"], [29, 0, 1, "c.fmpz_mpoly_get_coeff_fmpz_monomial", "fmpz_mpoly_get_coeff_fmpz_monomial"], [29, 0, 1, "c.fmpz_mpoly_get_coeff_fmpz_ui", "fmpz_mpoly_get_coeff_fmpz_ui"], [29, 0, 1, "c.fmpz_mpoly_get_coeff_si_fmpz", "fmpz_mpoly_get_coeff_si_fmpz"], [29, 0, 1, "c.fmpz_mpoly_get_coeff_si_ui", "fmpz_mpoly_get_coeff_si_ui"], [29, 0, 1, "c.fmpz_mpoly_get_coeff_ui_fmpz", "fmpz_mpoly_get_coeff_ui_fmpz"], [29, 0, 1, "c.fmpz_mpoly_get_coeff_ui_ui", "fmpz_mpoly_get_coeff_ui_ui"], [29, 0, 1, "c.fmpz_mpoly_get_coeff_vars_ui", "fmpz_mpoly_get_coeff_vars_ui"], [29, 0, 1, "c.fmpz_mpoly_get_fmpz", "fmpz_mpoly_get_fmpz"], [29, 0, 1, "c.fmpz_mpoly_get_str_pretty", "fmpz_mpoly_get_str_pretty"], [29, 0, 1, "c.fmpz_mpoly_get_term", "fmpz_mpoly_get_term"], [29, 0, 1, "c.fmpz_mpoly_get_term_coeff_fmpz", "fmpz_mpoly_get_term_coeff_fmpz"], [29, 0, 1, "c.fmpz_mpoly_get_term_coeff_si", "fmpz_mpoly_get_term_coeff_si"], [29, 0, 1, "c.fmpz_mpoly_get_term_coeff_ui", "fmpz_mpoly_get_term_coeff_ui"], [29, 0, 1, "c.fmpz_mpoly_get_term_exp_fmpz", "fmpz_mpoly_get_term_exp_fmpz"], [29, 0, 1, "c.fmpz_mpoly_get_term_exp_si", "fmpz_mpoly_get_term_exp_si"], [29, 0, 1, "c.fmpz_mpoly_get_term_exp_ui", "fmpz_mpoly_get_term_exp_ui"], [29, 0, 1, "c.fmpz_mpoly_get_term_monomial", "fmpz_mpoly_get_term_monomial"], [29, 0, 1, "c.fmpz_mpoly_get_term_var_exp_si", "fmpz_mpoly_get_term_var_exp_si"], [29, 0, 1, "c.fmpz_mpoly_get_term_var_exp_ui", "fmpz_mpoly_get_term_var_exp_ui"], [29, 0, 1, "c.fmpz_mpoly_inflate", "fmpz_mpoly_inflate"], [29, 0, 1, "c.fmpz_mpoly_init", "fmpz_mpoly_init"], [29, 0, 1, "c.fmpz_mpoly_init2", "fmpz_mpoly_init2"], [29, 0, 1, "c.fmpz_mpoly_init3", "fmpz_mpoly_init3"], [29, 0, 1, "c.fmpz_mpoly_integral", "fmpz_mpoly_integral"], [29, 0, 1, "c.fmpz_mpoly_is_canonical", "fmpz_mpoly_is_canonical"], [29, 0, 1, "c.fmpz_mpoly_is_fmpz", "fmpz_mpoly_is_fmpz"], [29, 0, 1, "c.fmpz_mpoly_is_gen", "fmpz_mpoly_is_gen"], [29, 0, 1, "c.fmpz_mpoly_is_one", "fmpz_mpoly_is_one"], [29, 0, 1, "c.fmpz_mpoly_is_square", "fmpz_mpoly_is_square"], [29, 0, 1, "c.fmpz_mpoly_is_zero", "fmpz_mpoly_is_zero"], [29, 0, 1, "c.fmpz_mpoly_length", "fmpz_mpoly_length"], [29, 0, 1, "c.fmpz_mpoly_max_bits", "fmpz_mpoly_max_bits"], [29, 0, 1, "c.fmpz_mpoly_mul", "fmpz_mpoly_mul"], [29, 0, 1, "c.fmpz_mpoly_mul_array", "fmpz_mpoly_mul_array"], [29, 0, 1, "c.fmpz_mpoly_mul_array_threaded", "fmpz_mpoly_mul_array_threaded"], [29, 0, 1, "c.fmpz_mpoly_mul_dense", "fmpz_mpoly_mul_dense"], [29, 0, 1, "c.fmpz_mpoly_mul_heap_threaded", "fmpz_mpoly_mul_heap_threaded"], [29, 0, 1, "c.fmpz_mpoly_mul_johnson", "fmpz_mpoly_mul_johnson"], [29, 0, 1, "c.fmpz_mpoly_mul_threaded", "fmpz_mpoly_mul_threaded"], [29, 0, 1, "c.fmpz_mpoly_neg", "fmpz_mpoly_neg"], [29, 0, 1, "c.fmpz_mpoly_one", "fmpz_mpoly_one"], [29, 0, 1, "c.fmpz_mpoly_pow_fmpz", "fmpz_mpoly_pow_fmpz"], [29, 0, 1, "c.fmpz_mpoly_pow_fps", "fmpz_mpoly_pow_fps"], [29, 0, 1, "c.fmpz_mpoly_pow_ui", "fmpz_mpoly_pow_ui"], [29, 0, 1, "c.fmpz_mpoly_print_pretty", "fmpz_mpoly_print_pretty"], [29, 0, 1, "c.fmpz_mpoly_push_term_fmpz_fmpz", "fmpz_mpoly_push_term_fmpz_fmpz"], [29, 0, 1, "c.fmpz_mpoly_push_term_fmpz_ui", "fmpz_mpoly_push_term_fmpz_ui"], [29, 0, 1, "c.fmpz_mpoly_push_term_si_fmpz", "fmpz_mpoly_push_term_si_fmpz"], [29, 0, 1, "c.fmpz_mpoly_push_term_si_ui", "fmpz_mpoly_push_term_si_ui"], [29, 0, 1, "c.fmpz_mpoly_push_term_ui_fmpz", "fmpz_mpoly_push_term_ui_fmpz"], [29, 0, 1, "c.fmpz_mpoly_push_term_ui_ui", "fmpz_mpoly_push_term_ui_ui"], [29, 0, 1, "c.fmpz_mpoly_quasidiv", "fmpz_mpoly_quasidiv"], [29, 0, 1, "c.fmpz_mpoly_quasidivrem", "fmpz_mpoly_quasidivrem"], [29, 0, 1, "c.fmpz_mpoly_quasidivrem_heap", "fmpz_mpoly_quasidivrem_heap"], [29, 0, 1, "c.fmpz_mpoly_quasidivrem_ideal", "fmpz_mpoly_quasidivrem_ideal"], [29, 0, 1, "c.fmpz_mpoly_randtest_bits", "fmpz_mpoly_randtest_bits"], [29, 0, 1, "c.fmpz_mpoly_randtest_bound", "fmpz_mpoly_randtest_bound"], [29, 0, 1, "c.fmpz_mpoly_randtest_bounds", "fmpz_mpoly_randtest_bounds"], [29, 0, 1, "c.fmpz_mpoly_realloc", "fmpz_mpoly_realloc"], [29, 0, 1, "c.fmpz_mpoly_resize", "fmpz_mpoly_resize"], [29, 0, 1, "c.fmpz_mpoly_resultant", "fmpz_mpoly_resultant"], [29, 0, 1, "c.fmpz_mpoly_reverse", "fmpz_mpoly_reverse"], [29, 0, 1, "c.fmpz_mpoly_scalar_divexact_fmpz", "fmpz_mpoly_scalar_divexact_fmpz"], [29, 0, 1, "c.fmpz_mpoly_scalar_divexact_si", "fmpz_mpoly_scalar_divexact_si"], [29, 0, 1, "c.fmpz_mpoly_scalar_divexact_ui", "fmpz_mpoly_scalar_divexact_ui"], [29, 0, 1, "c.fmpz_mpoly_scalar_divides_fmpz", "fmpz_mpoly_scalar_divides_fmpz"], [29, 0, 1, "c.fmpz_mpoly_scalar_divides_si", "fmpz_mpoly_scalar_divides_si"], [29, 0, 1, "c.fmpz_mpoly_scalar_divides_ui", "fmpz_mpoly_scalar_divides_ui"], [29, 0, 1, "c.fmpz_mpoly_scalar_fmma", "fmpz_mpoly_scalar_fmma"], [29, 0, 1, "c.fmpz_mpoly_scalar_mul_fmpz", "fmpz_mpoly_scalar_mul_fmpz"], [29, 0, 1, "c.fmpz_mpoly_scalar_mul_si", "fmpz_mpoly_scalar_mul_si"], [29, 0, 1, "c.fmpz_mpoly_scalar_mul_ui", "fmpz_mpoly_scalar_mul_ui"], [29, 0, 1, "c.fmpz_mpoly_set", "fmpz_mpoly_set"], [29, 0, 1, "c.fmpz_mpoly_set_coeff_fmpz_fmpz", "fmpz_mpoly_set_coeff_fmpz_fmpz"], [29, 0, 1, "c.fmpz_mpoly_set_coeff_fmpz_monomial", "fmpz_mpoly_set_coeff_fmpz_monomial"], [29, 0, 1, "c.fmpz_mpoly_set_coeff_fmpz_ui", "fmpz_mpoly_set_coeff_fmpz_ui"], [29, 0, 1, "c.fmpz_mpoly_set_coeff_si_fmpz", "fmpz_mpoly_set_coeff_si_fmpz"], [29, 0, 1, "c.fmpz_mpoly_set_coeff_si_ui", "fmpz_mpoly_set_coeff_si_ui"], [29, 0, 1, "c.fmpz_mpoly_set_coeff_ui_fmpz", "fmpz_mpoly_set_coeff_ui_fmpz"], [29, 0, 1, "c.fmpz_mpoly_set_coeff_ui_ui", "fmpz_mpoly_set_coeff_ui_ui"], [29, 0, 1, "c.fmpz_mpoly_set_fmpz", "fmpz_mpoly_set_fmpz"], [29, 0, 1, "c.fmpz_mpoly_set_si", "fmpz_mpoly_set_si"], [29, 0, 1, "c.fmpz_mpoly_set_str_pretty", "fmpz_mpoly_set_str_pretty"], [29, 0, 1, "c.fmpz_mpoly_set_term_coeff_fmpz", "fmpz_mpoly_set_term_coeff_fmpz"], [29, 0, 1, "c.fmpz_mpoly_set_term_coeff_si", "fmpz_mpoly_set_term_coeff_si"], [29, 0, 1, "c.fmpz_mpoly_set_term_coeff_ui", "fmpz_mpoly_set_term_coeff_ui"], [29, 0, 1, "c.fmpz_mpoly_set_term_exp_fmpz", "fmpz_mpoly_set_term_exp_fmpz"], [29, 0, 1, "c.fmpz_mpoly_set_term_exp_ui", "fmpz_mpoly_set_term_exp_ui"], [29, 0, 1, "c.fmpz_mpoly_set_ui", "fmpz_mpoly_set_ui"], [29, 0, 1, "c.fmpz_mpoly_sort_terms", "fmpz_mpoly_sort_terms"], [29, 0, 1, "c.fmpz_mpoly_sqrt", "fmpz_mpoly_sqrt"], [29, 0, 1, "c.fmpz_mpoly_sqrt_heap", "fmpz_mpoly_sqrt_heap"], [29, 3, 1, "c.fmpz_mpoly_struct", "fmpz_mpoly_struct"], [29, 0, 1, "c.fmpz_mpoly_sub", "fmpz_mpoly_sub"], [29, 0, 1, "c.fmpz_mpoly_sub_fmpz", "fmpz_mpoly_sub_fmpz"], [29, 0, 1, "c.fmpz_mpoly_sub_si", "fmpz_mpoly_sub_si"], [29, 0, 1, "c.fmpz_mpoly_sub_ui", "fmpz_mpoly_sub_ui"], [29, 0, 1, "c.fmpz_mpoly_swap", "fmpz_mpoly_swap"], [29, 3, 1, "c.fmpz_mpoly_t", "fmpz_mpoly_t"], [29, 0, 1, "c.fmpz_mpoly_term_coeff_ref", "fmpz_mpoly_term_coeff_ref"], [29, 0, 1, "c.fmpz_mpoly_term_content", "fmpz_mpoly_term_content"], [29, 0, 1, "c.fmpz_mpoly_term_exp_fits_si", "fmpz_mpoly_term_exp_fits_si"], [29, 0, 1, "c.fmpz_mpoly_term_exp_fits_ui", "fmpz_mpoly_term_exp_fits_ui"], [29, 0, 1, "c.fmpz_mpoly_to_univar", "fmpz_mpoly_to_univar"], [29, 0, 1, "c.fmpz_mpoly_total_degree_fits_si", "fmpz_mpoly_total_degree_fits_si"], [29, 0, 1, "c.fmpz_mpoly_total_degree_fmpz", "fmpz_mpoly_total_degree_fmpz"], [29, 0, 1, "c.fmpz_mpoly_total_degree_si", "fmpz_mpoly_total_degree_si"], [29, 0, 1, "c.fmpz_mpoly_univar_clear", "fmpz_mpoly_univar_clear"], [29, 0, 1, "c.fmpz_mpoly_univar_degree_fits_si", "fmpz_mpoly_univar_degree_fits_si"], [29, 0, 1, "c.fmpz_mpoly_univar_get_term_coeff", "fmpz_mpoly_univar_get_term_coeff"], [29, 0, 1, "c.fmpz_mpoly_univar_get_term_exp_si", "fmpz_mpoly_univar_get_term_exp_si"], [29, 0, 1, "c.fmpz_mpoly_univar_init", "fmpz_mpoly_univar_init"], [29, 0, 1, "c.fmpz_mpoly_univar_length", "fmpz_mpoly_univar_length"], [29, 0, 1, "c.fmpz_mpoly_univar_swap", "fmpz_mpoly_univar_swap"], [29, 0, 1, "c.fmpz_mpoly_univar_swap_term_coeff", "fmpz_mpoly_univar_swap_term_coeff"], [29, 0, 1, "c.fmpz_mpoly_used_vars", "fmpz_mpoly_used_vars"], [29, 0, 1, "c.fmpz_mpoly_zero", "fmpz_mpoly_zero"], [18, 0, 1, "c.fmpz_mul", "fmpz_mul"], [18, 0, 1, "c.fmpz_mul2_uiui", "fmpz_mul2_uiui"], [18, 0, 1, "c.fmpz_mul_2exp", "fmpz_mul_2exp"], [18, 0, 1, "c.fmpz_mul_si", "fmpz_mul_si"], [18, 0, 1, "c.fmpz_mul_si_tdiv_q_2exp", "fmpz_mul_si_tdiv_q_2exp"], [18, 0, 1, "c.fmpz_mul_tdiv_q_2exp", "fmpz_mul_tdiv_q_2exp"], [18, 0, 1, "c.fmpz_mul_ui", "fmpz_mul_ui"], [18, 0, 1, "c.fmpz_multi_CRT_ui", "fmpz_multi_CRT_ui"], [18, 0, 1, "c.fmpz_multi_crt", "fmpz_multi_crt"], [18, 0, 1, "c.fmpz_multi_crt_clear", "fmpz_multi_crt_clear"], [18, 0, 1, "c.fmpz_multi_crt_init", "fmpz_multi_crt_init"], [18, 0, 1, "c.fmpz_multi_crt_precomp", "fmpz_multi_crt_precomp"], [18, 0, 1, "c.fmpz_multi_crt_precomp_p", "fmpz_multi_crt_precomp_p"], [18, 0, 1, "c.fmpz_multi_crt_precompute", "fmpz_multi_crt_precompute"], [18, 0, 1, "c.fmpz_multi_crt_precompute_p", "fmpz_multi_crt_precompute_p"], [18, 0, 1, "c.fmpz_multi_mod_ui", "fmpz_multi_mod_ui"], [18, 0, 1, "c.fmpz_ndiv_qr", "fmpz_ndiv_qr"], [18, 0, 1, "c.fmpz_neg", "fmpz_neg"], [18, 0, 1, "c.fmpz_neg_ui", "fmpz_neg_ui"], [18, 0, 1, "c.fmpz_neg_uiui", "fmpz_neg_uiui"], [18, 0, 1, "c.fmpz_negmod", "fmpz_negmod"], [22, 0, 1, "c.fmpz_next_smooth_prime", "fmpz_next_smooth_prime"], [18, 0, 1, "c.fmpz_nextprime", "fmpz_nextprime"], [18, 0, 1, "c.fmpz_one", "fmpz_one"], [18, 0, 1, "c.fmpz_one_2exp", "fmpz_one_2exp"], [18, 0, 1, "c.fmpz_or", "fmpz_or"], [18, 0, 1, "c.fmpz_out_raw", "fmpz_out_raw"], [31, 0, 1, "c.fmpz_poly_2norm", "fmpz_poly_2norm"], [31, 0, 1, "c.fmpz_poly_CLD_bound", "fmpz_poly_CLD_bound"], [31, 0, 1, "c.fmpz_poly_CRT_ui", "fmpz_poly_CRT_ui"], [31, 0, 1, "c.fmpz_poly_add", "fmpz_poly_add"], [31, 0, 1, "c.fmpz_poly_add_series", "fmpz_poly_add_series"], [31, 0, 1, "c.fmpz_poly_attach_shift", "fmpz_poly_attach_shift"], [31, 0, 1, "c.fmpz_poly_attach_truncate", "fmpz_poly_attach_truncate"], [31, 0, 1, "c.fmpz_poly_bit_pack", "fmpz_poly_bit_pack"], [31, 0, 1, "c.fmpz_poly_bit_unpack", "fmpz_poly_bit_unpack"], [31, 0, 1, "c.fmpz_poly_bit_unpack_unsigned", "fmpz_poly_bit_unpack_unsigned"], [31, 0, 1, "c.fmpz_poly_bound_roots", "fmpz_poly_bound_roots"], [31, 0, 1, "c.fmpz_poly_chebyshev_t", "fmpz_poly_chebyshev_t"], [31, 0, 1, "c.fmpz_poly_chebyshev_u", "fmpz_poly_chebyshev_u"], [31, 0, 1, "c.fmpz_poly_clear", "fmpz_poly_clear"], [31, 0, 1, "c.fmpz_poly_compose", "fmpz_poly_compose"], [31, 0, 1, "c.fmpz_poly_compose_divconquer", "fmpz_poly_compose_divconquer"], [31, 0, 1, "c.fmpz_poly_compose_horner", "fmpz_poly_compose_horner"], [31, 0, 1, "c.fmpz_poly_compose_series", "fmpz_poly_compose_series"], [31, 0, 1, "c.fmpz_poly_compose_series_brent_kung", "fmpz_poly_compose_series_brent_kung"], [31, 0, 1, "c.fmpz_poly_compose_series_horner", "fmpz_poly_compose_series_horner"], [31, 0, 1, "c.fmpz_poly_content", "fmpz_poly_content"], [31, 0, 1, "c.fmpz_poly_cos_minpoly", "fmpz_poly_cos_minpoly"], [31, 0, 1, "c.fmpz_poly_cyclotomic", "fmpz_poly_cyclotomic"], [31, 0, 1, "c.fmpz_poly_deflate", "fmpz_poly_deflate"], [31, 0, 1, "c.fmpz_poly_deflation", "fmpz_poly_deflation"], [31, 0, 1, "c.fmpz_poly_degree", "fmpz_poly_degree"], [31, 0, 1, "c.fmpz_poly_derivative", "fmpz_poly_derivative"], [31, 0, 1, "c.fmpz_poly_discriminant", "fmpz_poly_discriminant"], [31, 0, 1, "c.fmpz_poly_div", "fmpz_poly_div"], [31, 0, 1, "c.fmpz_poly_div_basecase", "fmpz_poly_div_basecase"], [31, 0, 1, "c.fmpz_poly_div_divconquer", "fmpz_poly_div_divconquer"], [31, 0, 1, "c.fmpz_poly_div_preinv", "fmpz_poly_div_preinv"], [31, 0, 1, "c.fmpz_poly_div_root", "fmpz_poly_div_root"], [31, 0, 1, "c.fmpz_poly_div_series", "fmpz_poly_div_series"], [31, 0, 1, "c.fmpz_poly_div_series_basecase", "fmpz_poly_div_series_basecase"], [31, 0, 1, "c.fmpz_poly_div_series_divconquer", "fmpz_poly_div_series_divconquer"], [31, 0, 1, "c.fmpz_poly_divhigh_smodp", "fmpz_poly_divhigh_smodp"], [31, 0, 1, "c.fmpz_poly_divides", "fmpz_poly_divides"], [31, 0, 1, "c.fmpz_poly_divlow_smodp", "fmpz_poly_divlow_smodp"], [31, 0, 1, "c.fmpz_poly_divrem", "fmpz_poly_divrem"], [31, 0, 1, "c.fmpz_poly_divrem_basecase", "fmpz_poly_divrem_basecase"], [31, 0, 1, "c.fmpz_poly_divrem_divconquer", "fmpz_poly_divrem_divconquer"], [31, 0, 1, "c.fmpz_poly_divrem_preinv", "fmpz_poly_divrem_preinv"], [31, 0, 1, "c.fmpz_poly_equal", "fmpz_poly_equal"], [31, 0, 1, "c.fmpz_poly_equal_trunc", "fmpz_poly_equal_trunc"], [31, 0, 1, "c.fmpz_poly_eta_qexp", "fmpz_poly_eta_qexp"], [31, 0, 1, "c.fmpz_poly_evaluate_divconquer_fmpq", "fmpz_poly_evaluate_divconquer_fmpq"], [31, 0, 1, "c.fmpz_poly_evaluate_divconquer_fmpz", "fmpz_poly_evaluate_divconquer_fmpz"], [31, 0, 1, "c.fmpz_poly_evaluate_fmpq", "fmpz_poly_evaluate_fmpq"], [31, 0, 1, "c.fmpz_poly_evaluate_fmpz", "fmpz_poly_evaluate_fmpz"], [31, 0, 1, "c.fmpz_poly_evaluate_fmpz_vec", "fmpz_poly_evaluate_fmpz_vec"], [31, 0, 1, "c.fmpz_poly_evaluate_horner_d", "fmpz_poly_evaluate_horner_d"], [31, 0, 1, "c.fmpz_poly_evaluate_horner_d_2exp", "fmpz_poly_evaluate_horner_d_2exp"], [31, 0, 1, "c.fmpz_poly_evaluate_horner_fmpq", "fmpz_poly_evaluate_horner_fmpq"], [31, 0, 1, "c.fmpz_poly_evaluate_horner_fmpz", "fmpz_poly_evaluate_horner_fmpz"], [31, 0, 1, "c.fmpz_poly_evaluate_mod", "fmpz_poly_evaluate_mod"], [31, 0, 1, "c.fmpz_poly_evaluate_mpq", "fmpz_poly_evaluate_mpq"], [32, 0, 1, "c.fmpz_poly_factor", "fmpz_poly_factor"], [32, 0, 1, "c.fmpz_poly_factor_clear", "fmpz_poly_factor_clear"], [32, 0, 1, "c.fmpz_poly_factor_concat", "fmpz_poly_factor_concat"], [32, 0, 1, "c.fmpz_poly_factor_fit_length", "fmpz_poly_factor_fit_length"], [32, 0, 1, "c.fmpz_poly_factor_init", "fmpz_poly_factor_init"], [32, 0, 1, "c.fmpz_poly_factor_init2", "fmpz_poly_factor_init2"], [32, 0, 1, "c.fmpz_poly_factor_insert", "fmpz_poly_factor_insert"], [32, 0, 1, "c.fmpz_poly_factor_print", "fmpz_poly_factor_print"], [32, 0, 1, "c.fmpz_poly_factor_realloc", "fmpz_poly_factor_realloc"], [32, 0, 1, "c.fmpz_poly_factor_set", "fmpz_poly_factor_set"], [32, 0, 1, "c.fmpz_poly_factor_squarefree", "fmpz_poly_factor_squarefree"], [32, 3, 1, "c.fmpz_poly_factor_struct", "fmpz_poly_factor_struct"], [32, 3, 1, "c.fmpz_poly_factor_t", "fmpz_poly_factor_t"], [32, 0, 1, "c.fmpz_poly_factor_zassenhaus", "fmpz_poly_factor_zassenhaus"], [32, 0, 1, "c.fmpz_poly_factor_zassenhaus_recombination", "fmpz_poly_factor_zassenhaus_recombination"], [31, 0, 1, "c.fmpz_poly_fibonacci", "fmpz_poly_fibonacci"], [31, 0, 1, "c.fmpz_poly_fit_length", "fmpz_poly_fit_length"], [31, 0, 1, "c.fmpz_poly_fprint", "fmpz_poly_fprint"], [31, 0, 1, "c.fmpz_poly_fprint_pretty", "fmpz_poly_fprint_pretty"], [31, 0, 1, "c.fmpz_poly_fread", "fmpz_poly_fread"], [31, 0, 1, "c.fmpz_poly_fread_pretty", "fmpz_poly_fread_pretty"], [31, 0, 1, "c.fmpz_poly_gcd", "fmpz_poly_gcd"], [31, 0, 1, "c.fmpz_poly_gcd_heuristic", "fmpz_poly_gcd_heuristic"], [31, 0, 1, "c.fmpz_poly_gcd_modular", "fmpz_poly_gcd_modular"], [31, 0, 1, "c.fmpz_poly_gcd_subresultant", "fmpz_poly_gcd_subresultant"], [31, 0, 1, "c.fmpz_poly_get_coeff_fmpz", "fmpz_poly_get_coeff_fmpz"], [31, 0, 1, "c.fmpz_poly_get_coeff_ptr", "fmpz_poly_get_coeff_ptr"], [31, 0, 1, "c.fmpz_poly_get_coeff_si", "fmpz_poly_get_coeff_si"], [31, 0, 1, "c.fmpz_poly_get_coeff_ui", "fmpz_poly_get_coeff_ui"], [31, 0, 1, "c.fmpz_poly_get_nmod_poly", "fmpz_poly_get_nmod_poly"], [31, 0, 1, "c.fmpz_poly_get_str", "fmpz_poly_get_str"], [31, 0, 1, "c.fmpz_poly_get_str_pretty", "fmpz_poly_get_str_pretty"], [31, 0, 1, "c.fmpz_poly_height", "fmpz_poly_height"], [31, 0, 1, "c.fmpz_poly_hensel_build_tree", "fmpz_poly_hensel_build_tree"], [31, 0, 1, "c.fmpz_poly_hensel_lift", "fmpz_poly_hensel_lift"], [31, 0, 1, "c.fmpz_poly_hensel_lift_once", "fmpz_poly_hensel_lift_once"], [31, 0, 1, "c.fmpz_poly_hensel_lift_only_inverse", "fmpz_poly_hensel_lift_only_inverse"], [31, 0, 1, "c.fmpz_poly_hensel_lift_tree", "fmpz_poly_hensel_lift_tree"], [31, 0, 1, "c.fmpz_poly_hensel_lift_tree_recursive", "fmpz_poly_hensel_lift_tree_recursive"], [31, 0, 1, "c.fmpz_poly_hensel_lift_without_inverse", "fmpz_poly_hensel_lift_without_inverse"], [31, 0, 1, "c.fmpz_poly_hermite_h", "fmpz_poly_hermite_h"], [31, 0, 1, "c.fmpz_poly_hermite_he", "fmpz_poly_hermite_he"], [31, 0, 1, "c.fmpz_poly_inflate", "fmpz_poly_inflate"], [31, 0, 1, "c.fmpz_poly_init", "fmpz_poly_init"], [31, 0, 1, "c.fmpz_poly_init2", "fmpz_poly_init2"], [31, 0, 1, "c.fmpz_poly_interpolate_fmpz_vec", "fmpz_poly_interpolate_fmpz_vec"], [31, 0, 1, "c.fmpz_poly_inv_series", "fmpz_poly_inv_series"], [31, 0, 1, "c.fmpz_poly_inv_series_basecase", "fmpz_poly_inv_series_basecase"], [31, 0, 1, "c.fmpz_poly_inv_series_newton", "fmpz_poly_inv_series_newton"], [31, 0, 1, "c.fmpz_poly_is_cyclotomic", "fmpz_poly_is_cyclotomic"], [31, 0, 1, "c.fmpz_poly_is_gen", "fmpz_poly_is_gen"], [31, 0, 1, "c.fmpz_poly_is_one", "fmpz_poly_is_one"], [31, 0, 1, "c.fmpz_poly_is_squarefree", "fmpz_poly_is_squarefree"], [31, 0, 1, "c.fmpz_poly_is_unit", "fmpz_poly_is_unit"], [31, 0, 1, "c.fmpz_poly_is_zero", "fmpz_poly_is_zero"], [31, 0, 1, "c.fmpz_poly_lcm", "fmpz_poly_lcm"], [31, 0, 1, "c.fmpz_poly_lead", "fmpz_poly_lead"], [31, 0, 1, "c.fmpz_poly_legendre_pt", "fmpz_poly_legendre_pt"], [31, 0, 1, "c.fmpz_poly_length", "fmpz_poly_length"], [33, 0, 1, "c.fmpz_poly_mat_add", "fmpz_poly_mat_add"], [33, 0, 1, "c.fmpz_poly_mat_clear", "fmpz_poly_mat_clear"], [33, 0, 1, "c.fmpz_poly_mat_det", "fmpz_poly_mat_det"], [33, 0, 1, "c.fmpz_poly_mat_det_fflu", "fmpz_poly_mat_det_fflu"], [33, 0, 1, "c.fmpz_poly_mat_det_interpolate", "fmpz_poly_mat_det_interpolate"], [33, 0, 1, "c.fmpz_poly_mat_entry", "fmpz_poly_mat_entry"], [33, 0, 1, "c.fmpz_poly_mat_equal", "fmpz_poly_mat_equal"], [33, 0, 1, "c.fmpz_poly_mat_evaluate_fmpz", "fmpz_poly_mat_evaluate_fmpz"], [33, 0, 1, "c.fmpz_poly_mat_fflu", "fmpz_poly_mat_fflu"], [33, 0, 1, "c.fmpz_poly_mat_find_pivot_any", "fmpz_poly_mat_find_pivot_any"], [33, 0, 1, "c.fmpz_poly_mat_find_pivot_partial", "fmpz_poly_mat_find_pivot_partial"], [33, 0, 1, "c.fmpz_poly_mat_init", "fmpz_poly_mat_init"], [33, 0, 1, "c.fmpz_poly_mat_init_set", "fmpz_poly_mat_init_set"], [33, 0, 1, "c.fmpz_poly_mat_inv", "fmpz_poly_mat_inv"], [33, 0, 1, "c.fmpz_poly_mat_is_empty", "fmpz_poly_mat_is_empty"], [33, 0, 1, "c.fmpz_poly_mat_is_one", "fmpz_poly_mat_is_one"], [33, 0, 1, "c.fmpz_poly_mat_is_square", "fmpz_poly_mat_is_square"], [33, 0, 1, "c.fmpz_poly_mat_is_zero", "fmpz_poly_mat_is_zero"], [33, 0, 1, "c.fmpz_poly_mat_max_bits", "fmpz_poly_mat_max_bits"], [33, 0, 1, "c.fmpz_poly_mat_max_length", "fmpz_poly_mat_max_length"], [33, 0, 1, "c.fmpz_poly_mat_mul", "fmpz_poly_mat_mul"], [33, 0, 1, "c.fmpz_poly_mat_mul_KS", "fmpz_poly_mat_mul_KS"], [33, 0, 1, "c.fmpz_poly_mat_mul_classical", "fmpz_poly_mat_mul_classical"], [33, 0, 1, "c.fmpz_poly_mat_mullow", "fmpz_poly_mat_mullow"], [33, 0, 1, "c.fmpz_poly_mat_ncols", "fmpz_poly_mat_ncols"], [33, 0, 1, "c.fmpz_poly_mat_neg", "fmpz_poly_mat_neg"], [33, 0, 1, "c.fmpz_poly_mat_nrows", "fmpz_poly_mat_nrows"], [33, 0, 1, "c.fmpz_poly_mat_nullspace", "fmpz_poly_mat_nullspace"], [33, 0, 1, "c.fmpz_poly_mat_one", "fmpz_poly_mat_one"], [33, 0, 1, "c.fmpz_poly_mat_pow", "fmpz_poly_mat_pow"], [33, 0, 1, "c.fmpz_poly_mat_pow_trunc", "fmpz_poly_mat_pow_trunc"], [33, 0, 1, "c.fmpz_poly_mat_print", "fmpz_poly_mat_print"], [33, 0, 1, "c.fmpz_poly_mat_prod", "fmpz_poly_mat_prod"], [33, 0, 1, "c.fmpz_poly_mat_randtest", "fmpz_poly_mat_randtest"], [33, 0, 1, "c.fmpz_poly_mat_randtest_sparse", "fmpz_poly_mat_randtest_sparse"], [33, 0, 1, "c.fmpz_poly_mat_randtest_unsigned", "fmpz_poly_mat_randtest_unsigned"], [33, 0, 1, "c.fmpz_poly_mat_rank", "fmpz_poly_mat_rank"], [33, 0, 1, "c.fmpz_poly_mat_rref", "fmpz_poly_mat_rref"], [33, 0, 1, "c.fmpz_poly_mat_scalar_mul_fmpz", "fmpz_poly_mat_scalar_mul_fmpz"], [33, 0, 1, "c.fmpz_poly_mat_scalar_mul_fmpz_poly", "fmpz_poly_mat_scalar_mul_fmpz_poly"], [33, 0, 1, "c.fmpz_poly_mat_set", "fmpz_poly_mat_set"], [33, 0, 1, "c.fmpz_poly_mat_solve", "fmpz_poly_mat_solve"], [33, 0, 1, "c.fmpz_poly_mat_solve_fflu", "fmpz_poly_mat_solve_fflu"], [33, 0, 1, "c.fmpz_poly_mat_solve_fflu_precomp", "fmpz_poly_mat_solve_fflu_precomp"], [33, 0, 1, "c.fmpz_poly_mat_sqr", "fmpz_poly_mat_sqr"], [33, 0, 1, "c.fmpz_poly_mat_sqr_KS", "fmpz_poly_mat_sqr_KS"], [33, 0, 1, "c.fmpz_poly_mat_sqr_classical", "fmpz_poly_mat_sqr_classical"], [33, 0, 1, "c.fmpz_poly_mat_sqrlow", "fmpz_poly_mat_sqrlow"], [33, 3, 1, "c.fmpz_poly_mat_struct", "fmpz_poly_mat_struct"], [33, 0, 1, "c.fmpz_poly_mat_sub", "fmpz_poly_mat_sub"], [33, 0, 1, "c.fmpz_poly_mat_swap", "fmpz_poly_mat_swap"], [33, 0, 1, "c.fmpz_poly_mat_swap_entrywise", "fmpz_poly_mat_swap_entrywise"], [33, 3, 1, "c.fmpz_poly_mat_t", "fmpz_poly_mat_t"], [33, 0, 1, "c.fmpz_poly_mat_trace", "fmpz_poly_mat_trace"], [33, 0, 1, "c.fmpz_poly_mat_transpose", "fmpz_poly_mat_transpose"], [33, 0, 1, "c.fmpz_poly_mat_zero", "fmpz_poly_mat_zero"], [31, 0, 1, "c.fmpz_poly_max_bits", "fmpz_poly_max_bits"], [31, 0, 1, "c.fmpz_poly_max_limbs", "fmpz_poly_max_limbs"], [31, 0, 1, "c.fmpz_poly_mul", "fmpz_poly_mul"], [31, 0, 1, "c.fmpz_poly_mul_KS", "fmpz_poly_mul_KS"], [31, 0, 1, "c.fmpz_poly_mul_SS", "fmpz_poly_mul_SS"], [31, 0, 1, "c.fmpz_poly_mul_SS_precache", "fmpz_poly_mul_SS_precache"], [31, 0, 1, "c.fmpz_poly_mul_SS_precache_init", "fmpz_poly_mul_SS_precache_init"], [31, 0, 1, "c.fmpz_poly_mul_classical", "fmpz_poly_mul_classical"], [31, 0, 1, "c.fmpz_poly_mul_karatsuba", "fmpz_poly_mul_karatsuba"], [31, 0, 1, "c.fmpz_poly_mul_precache_clear", "fmpz_poly_mul_precache_clear"], [31, 0, 1, "c.fmpz_poly_mulhigh_classical", "fmpz_poly_mulhigh_classical"], [31, 0, 1, "c.fmpz_poly_mulhigh_karatsuba_n", "fmpz_poly_mulhigh_karatsuba_n"], [31, 0, 1, "c.fmpz_poly_mulhigh_n", "fmpz_poly_mulhigh_n"], [31, 0, 1, "c.fmpz_poly_mullow", "fmpz_poly_mullow"], [31, 0, 1, "c.fmpz_poly_mullow_KS", "fmpz_poly_mullow_KS"], [31, 0, 1, "c.fmpz_poly_mullow_SS", "fmpz_poly_mullow_SS"], [31, 0, 1, "c.fmpz_poly_mullow_SS_precache", "fmpz_poly_mullow_SS_precache"], [31, 0, 1, "c.fmpz_poly_mullow_classical", "fmpz_poly_mullow_classical"], [31, 0, 1, "c.fmpz_poly_mullow_karatsuba_n", "fmpz_poly_mullow_karatsuba_n"], [31, 0, 1, "c.fmpz_poly_mulmid_classical", "fmpz_poly_mulmid_classical"], [31, 0, 1, "c.fmpz_poly_neg", "fmpz_poly_neg"], [31, 0, 1, "c.fmpz_poly_nth_derivative", "fmpz_poly_nth_derivative"], [31, 0, 1, "c.fmpz_poly_num_real_roots", "fmpz_poly_num_real_roots"], [31, 0, 1, "c.fmpz_poly_num_real_roots_sturm", "fmpz_poly_num_real_roots_sturm"], [31, 0, 1, "c.fmpz_poly_one", "fmpz_poly_one"], [31, 0, 1, "c.fmpz_poly_pow", "fmpz_poly_pow"], [31, 0, 1, "c.fmpz_poly_pow_addchains", "fmpz_poly_pow_addchains"], [31, 0, 1, "c.fmpz_poly_pow_binexp", "fmpz_poly_pow_binexp"], [31, 0, 1, "c.fmpz_poly_pow_binomial", "fmpz_poly_pow_binomial"], [31, 0, 1, "c.fmpz_poly_pow_multinomial", "fmpz_poly_pow_multinomial"], [31, 0, 1, "c.fmpz_poly_pow_trunc", "fmpz_poly_pow_trunc"], [31, 0, 1, "c.fmpz_poly_power_sums", "fmpz_poly_power_sums"], [31, 0, 1, "c.fmpz_poly_power_sums_naive", "fmpz_poly_power_sums_naive"], [31, 0, 1, "c.fmpz_poly_power_sums_to_poly", "fmpz_poly_power_sums_to_poly"], [31, 0, 1, "c.fmpz_poly_powers_clear", "fmpz_poly_powers_clear"], [31, 0, 1, "c.fmpz_poly_powers_precompute", "fmpz_poly_powers_precompute"], [31, 0, 1, "c.fmpz_poly_preinvert", "fmpz_poly_preinvert"], [31, 0, 1, "c.fmpz_poly_primitive_part", "fmpz_poly_primitive_part"], [31, 0, 1, "c.fmpz_poly_print", "fmpz_poly_print"], [31, 0, 1, "c.fmpz_poly_print_pretty", "fmpz_poly_print_pretty"], [31, 0, 1, "c.fmpz_poly_product_roots_fmpq_vec", "fmpz_poly_product_roots_fmpq_vec"], [31, 0, 1, "c.fmpz_poly_product_roots_fmpz_vec", "fmpz_poly_product_roots_fmpz_vec"], [31, 0, 1, "c.fmpz_poly_pseudo_div", "fmpz_poly_pseudo_div"], [31, 0, 1, "c.fmpz_poly_pseudo_divrem", "fmpz_poly_pseudo_divrem"], [31, 0, 1, "c.fmpz_poly_pseudo_divrem_basecase", "fmpz_poly_pseudo_divrem_basecase"], [31, 0, 1, "c.fmpz_poly_pseudo_divrem_cohen", "fmpz_poly_pseudo_divrem_cohen"], [31, 0, 1, "c.fmpz_poly_pseudo_divrem_divconquer", "fmpz_poly_pseudo_divrem_divconquer"], [31, 0, 1, "c.fmpz_poly_pseudo_rem", "fmpz_poly_pseudo_rem"], [31, 0, 1, "c.fmpz_poly_pseudo_rem_cohen", "fmpz_poly_pseudo_rem_cohen"], [34, 0, 1, "c.fmpz_poly_q_add", "fmpz_poly_q_add"], [34, 0, 1, "c.fmpz_poly_q_addmul", "fmpz_poly_q_addmul"], [34, 0, 1, "c.fmpz_poly_q_canonicalise", "fmpz_poly_q_canonicalise"], [34, 0, 1, "c.fmpz_poly_q_clear", "fmpz_poly_q_clear"], [34, 0, 1, "c.fmpz_poly_q_denref", "fmpz_poly_q_denref"], [34, 0, 1, "c.fmpz_poly_q_derivative", "fmpz_poly_q_derivative"], [34, 0, 1, "c.fmpz_poly_q_div", "fmpz_poly_q_div"], [34, 0, 1, "c.fmpz_poly_q_equal", "fmpz_poly_q_equal"], [34, 0, 1, "c.fmpz_poly_q_evaluate", "fmpz_poly_q_evaluate"], [34, 0, 1, "c.fmpz_poly_q_get_str", "fmpz_poly_q_get_str"], [34, 0, 1, "c.fmpz_poly_q_get_str_pretty", "fmpz_poly_q_get_str_pretty"], [34, 0, 1, "c.fmpz_poly_q_init", "fmpz_poly_q_init"], [34, 0, 1, "c.fmpz_poly_q_inv", "fmpz_poly_q_inv"], [34, 0, 1, "c.fmpz_poly_q_is_canonical", "fmpz_poly_q_is_canonical"], [34, 0, 1, "c.fmpz_poly_q_is_one", "fmpz_poly_q_is_one"], [34, 0, 1, "c.fmpz_poly_q_is_zero", "fmpz_poly_q_is_zero"], [34, 0, 1, "c.fmpz_poly_q_mul", "fmpz_poly_q_mul"], [34, 0, 1, "c.fmpz_poly_q_neg", "fmpz_poly_q_neg"], [34, 0, 1, "c.fmpz_poly_q_numref", "fmpz_poly_q_numref"], [34, 0, 1, "c.fmpz_poly_q_one", "fmpz_poly_q_one"], [34, 0, 1, "c.fmpz_poly_q_pow", "fmpz_poly_q_pow"], [34, 0, 1, "c.fmpz_poly_q_print", "fmpz_poly_q_print"], [34, 0, 1, "c.fmpz_poly_q_print_pretty", "fmpz_poly_q_print_pretty"], [34, 0, 1, "c.fmpz_poly_q_randtest", "fmpz_poly_q_randtest"], [34, 0, 1, "c.fmpz_poly_q_randtest_not_zero", "fmpz_poly_q_randtest_not_zero"], [34, 0, 1, "c.fmpz_poly_q_scalar_div_mpq", "fmpz_poly_q_scalar_div_mpq"], [34, 0, 1, "c.fmpz_poly_q_scalar_div_mpz", "fmpz_poly_q_scalar_div_mpz"], [34, 0, 1, "c.fmpz_poly_q_scalar_div_si", "fmpz_poly_q_scalar_div_si"], [34, 0, 1, "c.fmpz_poly_q_scalar_mul_mpq", "fmpz_poly_q_scalar_mul_mpq"], [34, 0, 1, "c.fmpz_poly_q_scalar_mul_mpz", "fmpz_poly_q_scalar_mul_mpz"], [34, 0, 1, "c.fmpz_poly_q_scalar_mul_si", "fmpz_poly_q_scalar_mul_si"], [34, 0, 1, "c.fmpz_poly_q_set", "fmpz_poly_q_set"], [34, 0, 1, "c.fmpz_poly_q_set_si", "fmpz_poly_q_set_si"], [34, 0, 1, "c.fmpz_poly_q_set_str", "fmpz_poly_q_set_str"], [34, 3, 1, "c.fmpz_poly_q_struct", "fmpz_poly_q_struct"], [34, 0, 1, "c.fmpz_poly_q_sub", "fmpz_poly_q_sub"], [34, 0, 1, "c.fmpz_poly_q_submul", "fmpz_poly_q_submul"], [34, 0, 1, "c.fmpz_poly_q_swap", "fmpz_poly_q_swap"], [34, 3, 1, "c.fmpz_poly_q_t", "fmpz_poly_q_t"], [34, 0, 1, "c.fmpz_poly_q_zero", "fmpz_poly_q_zero"], [31, 0, 1, "c.fmpz_poly_randtest", "fmpz_poly_randtest"], [31, 0, 1, "c.fmpz_poly_randtest_no_real_root", "fmpz_poly_randtest_no_real_root"], [31, 0, 1, "c.fmpz_poly_randtest_not_zero", "fmpz_poly_randtest_not_zero"], [31, 0, 1, "c.fmpz_poly_randtest_unsigned", "fmpz_poly_randtest_unsigned"], [31, 0, 1, "c.fmpz_poly_read", "fmpz_poly_read"], [31, 0, 1, "c.fmpz_poly_read_pretty", "fmpz_poly_read_pretty"], [31, 0, 1, "c.fmpz_poly_realloc", "fmpz_poly_realloc"], [31, 0, 1, "c.fmpz_poly_rem", "fmpz_poly_rem"], [31, 0, 1, "c.fmpz_poly_rem_basecase", "fmpz_poly_rem_basecase"], [31, 0, 1, "c.fmpz_poly_rem_powers_precomp", "fmpz_poly_rem_powers_precomp"], [31, 0, 1, "c.fmpz_poly_remove", "fmpz_poly_remove"], [31, 0, 1, "c.fmpz_poly_resultant", "fmpz_poly_resultant"], [31, 0, 1, "c.fmpz_poly_resultant_euclidean", "fmpz_poly_resultant_euclidean"], [31, 0, 1, "c.fmpz_poly_resultant_modular", "fmpz_poly_resultant_modular"], [31, 0, 1, "c.fmpz_poly_resultant_modular_div", "fmpz_poly_resultant_modular_div"], [31, 0, 1, "c.fmpz_poly_reverse", "fmpz_poly_reverse"], [31, 0, 1, "c.fmpz_poly_revert_series", "fmpz_poly_revert_series"], [31, 0, 1, "c.fmpz_poly_revert_series_lagrange", "fmpz_poly_revert_series_lagrange"], [31, 0, 1, "c.fmpz_poly_revert_series_lagrange_fast", "fmpz_poly_revert_series_lagrange_fast"], [31, 0, 1, "c.fmpz_poly_revert_series_newton", "fmpz_poly_revert_series_newton"], [31, 0, 1, "c.fmpz_poly_scalar_abs", "fmpz_poly_scalar_abs"], [31, 0, 1, "c.fmpz_poly_scalar_addmul_fmpz", "fmpz_poly_scalar_addmul_fmpz"], [31, 0, 1, "c.fmpz_poly_scalar_addmul_si", "fmpz_poly_scalar_addmul_si"], [31, 0, 1, "c.fmpz_poly_scalar_addmul_ui", "fmpz_poly_scalar_addmul_ui"], [31, 0, 1, "c.fmpz_poly_scalar_divexact_fmpz", "fmpz_poly_scalar_divexact_fmpz"], [31, 0, 1, "c.fmpz_poly_scalar_divexact_mpz", "fmpz_poly_scalar_divexact_mpz"], [31, 0, 1, "c.fmpz_poly_scalar_divexact_si", "fmpz_poly_scalar_divexact_si"], [31, 0, 1, "c.fmpz_poly_scalar_divexact_ui", "fmpz_poly_scalar_divexact_ui"], [31, 0, 1, "c.fmpz_poly_scalar_fdiv_2exp", "fmpz_poly_scalar_fdiv_2exp"], [31, 0, 1, "c.fmpz_poly_scalar_fdiv_fmpz", "fmpz_poly_scalar_fdiv_fmpz"], [31, 0, 1, "c.fmpz_poly_scalar_fdiv_mpz", "fmpz_poly_scalar_fdiv_mpz"], [31, 0, 1, "c.fmpz_poly_scalar_fdiv_si", "fmpz_poly_scalar_fdiv_si"], [31, 0, 1, "c.fmpz_poly_scalar_fdiv_ui", "fmpz_poly_scalar_fdiv_ui"], [31, 0, 1, "c.fmpz_poly_scalar_mod_fmpz", "fmpz_poly_scalar_mod_fmpz"], [31, 0, 1, "c.fmpz_poly_scalar_mul_2exp", "fmpz_poly_scalar_mul_2exp"], [31, 0, 1, "c.fmpz_poly_scalar_mul_fmpz", "fmpz_poly_scalar_mul_fmpz"], [31, 0, 1, "c.fmpz_poly_scalar_mul_mpz", "fmpz_poly_scalar_mul_mpz"], [31, 0, 1, "c.fmpz_poly_scalar_mul_si", "fmpz_poly_scalar_mul_si"], [31, 0, 1, "c.fmpz_poly_scalar_mul_ui", "fmpz_poly_scalar_mul_ui"], [31, 0, 1, "c.fmpz_poly_scalar_smod_fmpz", "fmpz_poly_scalar_smod_fmpz"], [31, 0, 1, "c.fmpz_poly_scalar_submul_fmpz", "fmpz_poly_scalar_submul_fmpz"], [31, 0, 1, "c.fmpz_poly_scalar_tdiv_2exp", "fmpz_poly_scalar_tdiv_2exp"], [31, 0, 1, "c.fmpz_poly_scalar_tdiv_fmpz", "fmpz_poly_scalar_tdiv_fmpz"], [31, 0, 1, "c.fmpz_poly_scalar_tdiv_si", "fmpz_poly_scalar_tdiv_si"], [31, 0, 1, "c.fmpz_poly_scalar_tdiv_ui", "fmpz_poly_scalar_tdiv_ui"], [31, 0, 1, "c.fmpz_poly_set", "fmpz_poly_set"], [31, 0, 1, "c.fmpz_poly_set_coeff_fmpz", "fmpz_poly_set_coeff_fmpz"], [31, 0, 1, "c.fmpz_poly_set_coeff_si", "fmpz_poly_set_coeff_si"], [31, 0, 1, "c.fmpz_poly_set_coeff_ui", "fmpz_poly_set_coeff_ui"], [31, 0, 1, "c.fmpz_poly_set_fmpz", "fmpz_poly_set_fmpz"], [31, 0, 1, "c.fmpz_poly_set_mpz", "fmpz_poly_set_mpz"], [31, 0, 1, "c.fmpz_poly_set_nmod_poly", "fmpz_poly_set_nmod_poly"], [31, 0, 1, "c.fmpz_poly_set_nmod_poly_unsigned", "fmpz_poly_set_nmod_poly_unsigned"], [31, 0, 1, "c.fmpz_poly_set_si", "fmpz_poly_set_si"], [31, 0, 1, "c.fmpz_poly_set_str", "fmpz_poly_set_str"], [31, 0, 1, "c.fmpz_poly_set_trunc", "fmpz_poly_set_trunc"], [31, 0, 1, "c.fmpz_poly_set_ui", "fmpz_poly_set_ui"], [31, 0, 1, "c.fmpz_poly_shift_left", "fmpz_poly_shift_left"], [31, 0, 1, "c.fmpz_poly_shift_right", "fmpz_poly_shift_right"], [31, 0, 1, "c.fmpz_poly_signature", "fmpz_poly_signature"], [31, 0, 1, "c.fmpz_poly_sqr", "fmpz_poly_sqr"], [31, 0, 1, "c.fmpz_poly_sqr_KS", "fmpz_poly_sqr_KS"], [31, 0, 1, "c.fmpz_poly_sqr_classical", "fmpz_poly_sqr_classical"], [31, 0, 1, "c.fmpz_poly_sqr_karatsuba", "fmpz_poly_sqr_karatsuba"], [31, 0, 1, "c.fmpz_poly_sqrlow", "fmpz_poly_sqrlow"], [31, 0, 1, "c.fmpz_poly_sqrlow_KS", "fmpz_poly_sqrlow_KS"], [31, 0, 1, "c.fmpz_poly_sqrlow_classical", "fmpz_poly_sqrlow_classical"], [31, 0, 1, "c.fmpz_poly_sqrlow_karatsuba_n", "fmpz_poly_sqrlow_karatsuba_n"], [31, 0, 1, "c.fmpz_poly_sqrt", "fmpz_poly_sqrt"], [31, 0, 1, "c.fmpz_poly_sqrt_KS", "fmpz_poly_sqrt_KS"], [31, 0, 1, "c.fmpz_poly_sqrt_classical", "fmpz_poly_sqrt_classical"], [31, 0, 1, "c.fmpz_poly_sqrt_divconquer", "fmpz_poly_sqrt_divconquer"], [31, 0, 1, "c.fmpz_poly_sqrt_series", "fmpz_poly_sqrt_series"], [31, 0, 1, "c.fmpz_poly_sqrtrem_classical", "fmpz_poly_sqrtrem_classical"], [31, 0, 1, "c.fmpz_poly_sqrtrem_divconquer", "fmpz_poly_sqrtrem_divconquer"], [31, 3, 1, "c.fmpz_poly_struct", "fmpz_poly_struct"], [31, 0, 1, "c.fmpz_poly_sub", "fmpz_poly_sub"], [31, 0, 1, "c.fmpz_poly_sub_series", "fmpz_poly_sub_series"], [31, 0, 1, "c.fmpz_poly_swap", "fmpz_poly_swap"], [31, 0, 1, "c.fmpz_poly_swinnerton_dyer", "fmpz_poly_swinnerton_dyer"], [31, 3, 1, "c.fmpz_poly_t", "fmpz_poly_t"], [31, 0, 1, "c.fmpz_poly_taylor_shift", "fmpz_poly_taylor_shift"], [31, 0, 1, "c.fmpz_poly_taylor_shift_divconquer", "fmpz_poly_taylor_shift_divconquer"], [31, 0, 1, "c.fmpz_poly_taylor_shift_horner", "fmpz_poly_taylor_shift_horner"], [31, 0, 1, "c.fmpz_poly_taylor_shift_multi_mod", "fmpz_poly_taylor_shift_multi_mod"], [31, 0, 1, "c.fmpz_poly_theta_qexp", "fmpz_poly_theta_qexp"], [31, 0, 1, "c.fmpz_poly_truncate", "fmpz_poly_truncate"], [31, 0, 1, "c.fmpz_poly_xgcd", "fmpz_poly_xgcd"], [31, 0, 1, "c.fmpz_poly_xgcd_modular", "fmpz_poly_xgcd_modular"], [31, 0, 1, "c.fmpz_poly_zero", "fmpz_poly_zero"], [31, 0, 1, "c.fmpz_poly_zero_coeffs", "fmpz_poly_zero_coeffs"], [18, 0, 1, "c.fmpz_popcnt", "fmpz_popcnt"], [18, 0, 1, "c.fmpz_pow_fmpz", "fmpz_pow_fmpz"], [18, 0, 1, "c.fmpz_pow_ui", "fmpz_pow_ui"], [18, 0, 1, "c.fmpz_powm", "fmpz_powm"], [18, 0, 1, "c.fmpz_powm_ui", "fmpz_powm_ui"], [18, 0, 1, "c.fmpz_preinvn_clear", "fmpz_preinvn_clear"], [18, 0, 1, "c.fmpz_preinvn_init", "fmpz_preinvn_init"], [18, 0, 1, "c.fmpz_primorial", "fmpz_primorial"], [18, 0, 1, "c.fmpz_print", "fmpz_print"], [18, 0, 1, "c.fmpz_randbits", "fmpz_randbits"], [18, 0, 1, "c.fmpz_randm", "fmpz_randm"], [18, 0, 1, "c.fmpz_randprime", "fmpz_randprime"], [18, 0, 1, "c.fmpz_randtest", "fmpz_randtest"], [18, 0, 1, "c.fmpz_randtest_mod", "fmpz_randtest_mod"], [18, 0, 1, "c.fmpz_randtest_mod_signed", "fmpz_randtest_mod_signed"], [18, 0, 1, "c.fmpz_randtest_not_zero", "fmpz_randtest_not_zero"], [18, 0, 1, "c.fmpz_randtest_unsigned", "fmpz_randtest_unsigned"], [18, 0, 1, "c.fmpz_read", "fmpz_read"], [18, 0, 1, "c.fmpz_remove", "fmpz_remove"], [18, 0, 1, "c.fmpz_rfac_ui", "fmpz_rfac_ui"], [18, 0, 1, "c.fmpz_rfac_uiui", "fmpz_rfac_uiui"], [18, 0, 1, "c.fmpz_root", "fmpz_root"], [18, 0, 1, "c.fmpz_set", "fmpz_set"], [18, 0, 1, "c.fmpz_set_d", "fmpz_set_d"], [18, 0, 1, "c.fmpz_set_d_2exp", "fmpz_set_d_2exp"], [18, 0, 1, "c.fmpz_set_mpf", "fmpz_set_mpf"], [18, 0, 1, "c.fmpz_set_mpz", "fmpz_set_mpz"], [18, 0, 1, "c.fmpz_set_si", "fmpz_set_si"], [18, 0, 1, "c.fmpz_set_signed_ui_array", "fmpz_set_signed_ui_array"], [18, 0, 1, "c.fmpz_set_signed_uiui", "fmpz_set_signed_uiui"], [18, 0, 1, "c.fmpz_set_signed_uiuiui", "fmpz_set_signed_uiuiui"], [18, 0, 1, "c.fmpz_set_str", "fmpz_set_str"], [18, 0, 1, "c.fmpz_set_ui", "fmpz_set_ui"], [18, 0, 1, "c.fmpz_set_ui_array", "fmpz_set_ui_array"], [18, 0, 1, "c.fmpz_set_ui_smod", "fmpz_set_ui_smod"], [18, 0, 1, "c.fmpz_set_uiui", "fmpz_set_uiui"], [18, 0, 1, "c.fmpz_setbit", "fmpz_setbit"], [18, 0, 1, "c.fmpz_sgn", "fmpz_sgn"], [18, 0, 1, "c.fmpz_size", "fmpz_size"], [18, 0, 1, "c.fmpz_sizeinbase", "fmpz_sizeinbase"], [18, 0, 1, "c.fmpz_smod", "fmpz_smod"], [18, 0, 1, "c.fmpz_sqrt", "fmpz_sqrt"], [18, 0, 1, "c.fmpz_sqrtmod", "fmpz_sqrtmod"], [18, 0, 1, "c.fmpz_sqrtrem", "fmpz_sqrtrem"], [18, 0, 1, "c.fmpz_sub", "fmpz_sub"], [18, 0, 1, "c.fmpz_sub_si", "fmpz_sub_si"], [18, 0, 1, "c.fmpz_sub_ui", "fmpz_sub_ui"], [18, 0, 1, "c.fmpz_submul", "fmpz_submul"], [18, 0, 1, "c.fmpz_submul_si", "fmpz_submul_si"], [18, 0, 1, "c.fmpz_submul_ui", "fmpz_submul_ui"], [18, 0, 1, "c.fmpz_swap", "fmpz_swap"], [18, 3, 1, "c.fmpz_t", "fmpz_t"], [18, 0, 1, "c.fmpz_tdiv_q", "fmpz_tdiv_q"], [18, 0, 1, "c.fmpz_tdiv_q_2exp", "fmpz_tdiv_q_2exp"], [18, 0, 1, "c.fmpz_tdiv_q_si", "fmpz_tdiv_q_si"], [18, 0, 1, "c.fmpz_tdiv_q_ui", "fmpz_tdiv_q_ui"], [18, 0, 1, "c.fmpz_tdiv_qr", "fmpz_tdiv_qr"], [18, 0, 1, "c.fmpz_tdiv_r_2exp", "fmpz_tdiv_r_2exp"], [18, 0, 1, "c.fmpz_tdiv_ui", "fmpz_tdiv_ui"], [18, 0, 1, "c.fmpz_tstbit", "fmpz_tstbit"], [18, 0, 1, "c.fmpz_val2", "fmpz_val2"], [18, 0, 1, "c.fmpz_xgcd", "fmpz_xgcd"], [18, 0, 1, "c.fmpz_xgcd_canonical_bezout", "fmpz_xgcd_canonical_bezout"], [18, 0, 1, "c.fmpz_xgcd_partial", "fmpz_xgcd_partial"], [18, 0, 1, "c.fmpz_xor", "fmpz_xor"], [18, 0, 1, "c.fmpz_zero", "fmpz_zero"], [36, 0, 1, "c.fq_add", "fq_add"], [36, 0, 1, "c.fq_bit_pack", "fq_bit_pack"], [36, 0, 1, "c.fq_bit_unpack", "fq_bit_unpack"], [36, 0, 1, "c.fq_clear", "fq_clear"], [36, 0, 1, "c.fq_ctx_clear", "fq_ctx_clear"], [36, 0, 1, "c.fq_ctx_degree", "fq_ctx_degree"], [36, 0, 1, "c.fq_ctx_fprint", "fq_ctx_fprint"], [36, 0, 1, "c.fq_ctx_init", "fq_ctx_init"], [36, 0, 1, "c.fq_ctx_init_conway", "fq_ctx_init_conway"], [36, 0, 1, "c.fq_ctx_init_modulus", "fq_ctx_init_modulus"], [36, 0, 1, "c.fq_ctx_modulus", "fq_ctx_modulus"], [36, 0, 1, "c.fq_ctx_order", "fq_ctx_order"], [36, 0, 1, "c.fq_ctx_prime", "fq_ctx_prime"], [36, 0, 1, "c.fq_ctx_print", "fq_ctx_print"], [36, 0, 1, "c.fq_ctx_randtest", "fq_ctx_randtest"], [36, 0, 1, "c.fq_ctx_randtest_reducible", "fq_ctx_randtest_reducible"], [36, 3, 1, "c.fq_ctx_struct", "fq_ctx_struct"], [36, 3, 1, "c.fq_ctx_t", "fq_ctx_t"], [37, 0, 1, "c.fq_default_add", "fq_default_add"], [37, 0, 1, "c.fq_default_clear", "fq_default_clear"], [37, 0, 1, "c.fq_default_ctx_clear", "fq_default_ctx_clear"], [37, 0, 1, "c.fq_default_ctx_degree", "fq_default_ctx_degree"], [37, 0, 1, "c.fq_default_ctx_fprint", "fq_default_ctx_fprint"], [37, 0, 1, "c.fq_default_ctx_init", "fq_default_ctx_init"], [37, 0, 1, "c.fq_default_ctx_init_modulus", "fq_default_ctx_init_modulus"], [37, 0, 1, "c.fq_default_ctx_init_modulus_nmod", "fq_default_ctx_init_modulus_nmod"], [37, 0, 1, "c.fq_default_ctx_init_modulus_nmod_type", "fq_default_ctx_init_modulus_nmod_type"], [37, 0, 1, "c.fq_default_ctx_init_modulus_type", "fq_default_ctx_init_modulus_type"], [37, 0, 1, "c.fq_default_ctx_init_type", "fq_default_ctx_init_type"], [37, 0, 1, "c.fq_default_ctx_modulus", "fq_default_ctx_modulus"], [37, 0, 1, "c.fq_default_ctx_order", "fq_default_ctx_order"], [37, 0, 1, "c.fq_default_ctx_prime", "fq_default_ctx_prime"], [37, 0, 1, "c.fq_default_ctx_print", "fq_default_ctx_print"], [37, 0, 1, "c.fq_default_ctx_randtest", "fq_default_ctx_randtest"], [37, 0, 1, "c.fq_default_ctx_type", "fq_default_ctx_type"], [37, 3, 1, "c.fq_default_default_ctx_t", "fq_default_default_ctx_t"], [37, 3, 1, "c.fq_default_default_t", "fq_default_default_t"], [37, 0, 1, "c.fq_default_div", "fq_default_div"], [37, 0, 1, "c.fq_default_equal", "fq_default_equal"], [37, 0, 1, "c.fq_default_fprint", "fq_default_fprint"], [37, 0, 1, "c.fq_default_fprint_pretty", "fq_default_fprint_pretty"], [37, 0, 1, "c.fq_default_frobenius", "fq_default_frobenius"], [37, 0, 1, "c.fq_default_gen", "fq_default_gen"], [37, 0, 1, "c.fq_default_get_coeff_fmpz", "fq_default_get_coeff_fmpz"], [37, 0, 1, "c.fq_default_get_fmpz", "fq_default_get_fmpz"], [37, 0, 1, "c.fq_default_get_fmpz_mod_poly", "fq_default_get_fmpz_mod_poly"], [37, 0, 1, "c.fq_default_get_fmpz_poly", "fq_default_get_fmpz_poly"], [37, 0, 1, "c.fq_default_get_nmod_poly", "fq_default_get_nmod_poly"], [37, 0, 1, "c.fq_default_get_str", "fq_default_get_str"], [37, 0, 1, "c.fq_default_get_str_pretty", "fq_default_get_str_pretty"], [37, 0, 1, "c.fq_default_init", "fq_default_init"], [37, 0, 1, "c.fq_default_init2", "fq_default_init2"], [37, 0, 1, "c.fq_default_inv", "fq_default_inv"], [37, 0, 1, "c.fq_default_is_invertible", "fq_default_is_invertible"], [37, 0, 1, "c.fq_default_is_one", "fq_default_is_one"], [37, 0, 1, "c.fq_default_is_square", "fq_default_is_square"], [37, 0, 1, "c.fq_default_is_zero", "fq_default_is_zero"], [38, 0, 1, "c.fq_default_mat_add", "fq_default_mat_add"], [38, 0, 1, "c.fq_default_mat_can_solve", "fq_default_mat_can_solve"], [38, 0, 1, "c.fq_default_mat_charpoly", "fq_default_mat_charpoly"], [38, 0, 1, "c.fq_default_mat_clear", "fq_default_mat_clear"], [38, 0, 1, "c.fq_default_mat_concat_horizontal", "fq_default_mat_concat_horizontal"], [38, 0, 1, "c.fq_default_mat_concat_vertical", "fq_default_mat_concat_vertical"], [38, 0, 1, "c.fq_default_mat_entry", "fq_default_mat_entry"], [38, 0, 1, "c.fq_default_mat_entry_set", "fq_default_mat_entry_set"], [38, 0, 1, "c.fq_default_mat_entry_set_fmpz", "fq_default_mat_entry_set_fmpz"], [38, 0, 1, "c.fq_default_mat_equal", "fq_default_mat_equal"], [38, 0, 1, "c.fq_default_mat_fprint", "fq_default_mat_fprint"], [38, 0, 1, "c.fq_default_mat_fprint_pretty", "fq_default_mat_fprint_pretty"], [38, 0, 1, "c.fq_default_mat_init", "fq_default_mat_init"], [38, 0, 1, "c.fq_default_mat_init_set", "fq_default_mat_init_set"], [38, 0, 1, "c.fq_default_mat_inv", "fq_default_mat_inv"], [38, 0, 1, "c.fq_default_mat_invert_cols", "fq_default_mat_invert_cols"], [38, 0, 1, "c.fq_default_mat_invert_rows", "fq_default_mat_invert_rows"], [38, 0, 1, "c.fq_default_mat_is_empty", "fq_default_mat_is_empty"], [38, 0, 1, "c.fq_default_mat_is_one", "fq_default_mat_is_one"], [38, 0, 1, "c.fq_default_mat_is_square", "fq_default_mat_is_square"], [38, 0, 1, "c.fq_default_mat_is_zero", "fq_default_mat_is_zero"], [38, 0, 1, "c.fq_default_mat_lu", "fq_default_mat_lu"], [38, 0, 1, "c.fq_default_mat_minpoly", "fq_default_mat_minpoly"], [38, 0, 1, "c.fq_default_mat_mul", "fq_default_mat_mul"], [38, 0, 1, "c.fq_default_mat_ncols", "fq_default_mat_ncols"], [38, 0, 1, "c.fq_default_mat_neg", "fq_default_mat_neg"], [38, 0, 1, "c.fq_default_mat_nrows", "fq_default_mat_nrows"], [38, 0, 1, "c.fq_default_mat_one", "fq_default_mat_one"], [38, 0, 1, "c.fq_default_mat_print", "fq_default_mat_print"], [38, 0, 1, "c.fq_default_mat_print_pretty", "fq_default_mat_print_pretty"], [38, 0, 1, "c.fq_default_mat_randops", "fq_default_mat_randops"], [38, 0, 1, "c.fq_default_mat_randrank", "fq_default_mat_randrank"], [38, 0, 1, "c.fq_default_mat_randtest", "fq_default_mat_randtest"], [38, 0, 1, "c.fq_default_mat_randtril", "fq_default_mat_randtril"], [38, 0, 1, "c.fq_default_mat_randtriu", "fq_default_mat_randtriu"], [38, 0, 1, "c.fq_default_mat_rref", "fq_default_mat_rref"], [38, 0, 1, "c.fq_default_mat_set", "fq_default_mat_set"], [38, 0, 1, "c.fq_default_mat_set_fmpz_mat", "fq_default_mat_set_fmpz_mat"], [38, 0, 1, "c.fq_default_mat_set_fmpz_mod_mat", "fq_default_mat_set_fmpz_mod_mat"], [38, 0, 1, "c.fq_default_mat_set_nmod_mat", "fq_default_mat_set_nmod_mat"], [38, 0, 1, "c.fq_default_mat_similarity", "fq_default_mat_similarity"], [38, 0, 1, "c.fq_default_mat_solve", "fq_default_mat_solve"], [38, 0, 1, "c.fq_default_mat_solve_tril", "fq_default_mat_solve_tril"], [38, 0, 1, "c.fq_default_mat_solve_triu", "fq_default_mat_solve_triu"], [38, 0, 1, "c.fq_default_mat_sub", "fq_default_mat_sub"], [38, 0, 1, "c.fq_default_mat_submul", "fq_default_mat_submul"], [38, 0, 1, "c.fq_default_mat_swap", "fq_default_mat_swap"], [38, 0, 1, "c.fq_default_mat_swap_cols", "fq_default_mat_swap_cols"], [38, 0, 1, "c.fq_default_mat_swap_rows", "fq_default_mat_swap_rows"], [38, 3, 1, "c.fq_default_mat_t", "fq_default_mat_t"], [38, 0, 1, "c.fq_default_mat_window_clear", "fq_default_mat_window_clear"], [38, 0, 1, "c.fq_default_mat_window_init", "fq_default_mat_window_init"], [38, 0, 1, "c.fq_default_mat_zero", "fq_default_mat_zero"], [37, 0, 1, "c.fq_default_mul", "fq_default_mul"], [37, 0, 1, "c.fq_default_mul_fmpz", "fq_default_mul_fmpz"], [37, 0, 1, "c.fq_default_mul_si", "fq_default_mul_si"], [37, 0, 1, "c.fq_default_mul_ui", "fq_default_mul_ui"], [37, 0, 1, "c.fq_default_neg", "fq_default_neg"], [37, 0, 1, "c.fq_default_norm", "fq_default_norm"], [37, 0, 1, "c.fq_default_one", "fq_default_one"], [39, 0, 1, "c.fq_default_poly_add", "fq_default_poly_add"], [39, 0, 1, "c.fq_default_poly_add_series", "fq_default_poly_add_series"], [39, 0, 1, "c.fq_default_poly_add_si", "fq_default_poly_add_si"], [39, 0, 1, "c.fq_default_poly_clear", "fq_default_poly_clear"], [39, 0, 1, "c.fq_default_poly_compose", "fq_default_poly_compose"], [39, 0, 1, "c.fq_default_poly_compose_mod", "fq_default_poly_compose_mod"], [39, 0, 1, "c.fq_default_poly_deflate", "fq_default_poly_deflate"], [39, 0, 1, "c.fq_default_poly_deflation", "fq_default_poly_deflation"], [39, 0, 1, "c.fq_default_poly_degree", "fq_default_poly_degree"], [39, 0, 1, "c.fq_default_poly_derivative", "fq_default_poly_derivative"], [39, 0, 1, "c.fq_default_poly_div_series", "fq_default_poly_div_series"], [39, 0, 1, "c.fq_default_poly_divides", "fq_default_poly_divides"], [39, 0, 1, "c.fq_default_poly_divrem", "fq_default_poly_divrem"], [39, 0, 1, "c.fq_default_poly_equal", "fq_default_poly_equal"], [39, 0, 1, "c.fq_default_poly_equal_fq_default", "fq_default_poly_equal_fq_default"], [39, 0, 1, "c.fq_default_poly_equal_trunc", "fq_default_poly_equal_trunc"], [39, 0, 1, "c.fq_default_poly_evaluate_fq_default", "fq_default_poly_evaluate_fq_default"], [40, 0, 1, "c.fq_default_poly_factor", "fq_default_poly_factor"], [40, 0, 1, "c.fq_default_poly_factor_clear", "fq_default_poly_factor_clear"], [40, 0, 1, "c.fq_default_poly_factor_concat", "fq_default_poly_factor_concat"], [40, 0, 1, "c.fq_default_poly_factor_distinct_deg", "fq_default_poly_factor_distinct_deg"], [40, 0, 1, "c.fq_default_poly_factor_equal_deg", "fq_default_poly_factor_equal_deg"], [40, 0, 1, "c.fq_default_poly_factor_exp", "fq_default_poly_factor_exp"], [40, 0, 1, "c.fq_default_poly_factor_fit_length", "fq_default_poly_factor_fit_length"], [40, 0, 1, "c.fq_default_poly_factor_get_poly", "fq_default_poly_factor_get_poly"], [40, 0, 1, "c.fq_default_poly_factor_init", "fq_default_poly_factor_init"], [40, 0, 1, "c.fq_default_poly_factor_insert", "fq_default_poly_factor_insert"], [40, 0, 1, "c.fq_default_poly_factor_length", "fq_default_poly_factor_length"], [40, 0, 1, "c.fq_default_poly_factor_pow", "fq_default_poly_factor_pow"], [40, 0, 1, "c.fq_default_poly_factor_print", "fq_default_poly_factor_print"], [40, 0, 1, "c.fq_default_poly_factor_print_pretty", "fq_default_poly_factor_print_pretty"], [40, 0, 1, "c.fq_default_poly_factor_realloc", "fq_default_poly_factor_realloc"], [40, 0, 1, "c.fq_default_poly_factor_set", "fq_default_poly_factor_set"], [40, 0, 1, "c.fq_default_poly_factor_split_single", "fq_default_poly_factor_split_single"], [40, 0, 1, "c.fq_default_poly_factor_squarefree", "fq_default_poly_factor_squarefree"], [40, 3, 1, "c.fq_default_poly_factor_t", "fq_default_poly_factor_t"], [39, 0, 1, "c.fq_default_poly_fit_length", "fq_default_poly_fit_length"], [39, 0, 1, "c.fq_default_poly_fprint", "fq_default_poly_fprint"], [39, 0, 1, "c.fq_default_poly_fprint_pretty", "fq_default_poly_fprint_pretty"], [39, 0, 1, "c.fq_default_poly_gcd", "fq_default_poly_gcd"], [39, 0, 1, "c.fq_default_poly_gen", "fq_default_poly_gen"], [39, 0, 1, "c.fq_default_poly_get_coeff", "fq_default_poly_get_coeff"], [39, 0, 1, "c.fq_default_poly_get_str", "fq_default_poly_get_str"], [39, 0, 1, "c.fq_default_poly_get_str_pretty", "fq_default_poly_get_str_pretty"], [39, 0, 1, "c.fq_default_poly_hamming_weight", "fq_default_poly_hamming_weight"], [39, 0, 1, "c.fq_default_poly_inflate", "fq_default_poly_inflate"], [39, 0, 1, "c.fq_default_poly_init", "fq_default_poly_init"], [39, 0, 1, "c.fq_default_poly_init2", "fq_default_poly_init2"], [39, 0, 1, "c.fq_default_poly_inv_series", "fq_default_poly_inv_series"], [39, 0, 1, "c.fq_default_poly_invsqrt_series", "fq_default_poly_invsqrt_series"], [39, 0, 1, "c.fq_default_poly_is_gen", "fq_default_poly_is_gen"], [40, 0, 1, "c.fq_default_poly_is_irreducible", "fq_default_poly_is_irreducible"], [39, 0, 1, "c.fq_default_poly_is_one", "fq_default_poly_is_one"], [40, 0, 1, "c.fq_default_poly_is_squarefree", "fq_default_poly_is_squarefree"], [39, 0, 1, "c.fq_default_poly_is_unit", "fq_default_poly_is_unit"], [39, 0, 1, "c.fq_default_poly_is_zero", "fq_default_poly_is_zero"], [39, 0, 1, "c.fq_default_poly_length", "fq_default_poly_length"], [39, 0, 1, "c.fq_default_poly_make_monic", "fq_default_poly_make_monic"], [39, 0, 1, "c.fq_default_poly_mul", "fq_default_poly_mul"], [39, 0, 1, "c.fq_default_poly_mulhigh", "fq_default_poly_mulhigh"], [39, 0, 1, "c.fq_default_poly_mullow", "fq_default_poly_mullow"], [39, 0, 1, "c.fq_default_poly_mulmod", "fq_default_poly_mulmod"], [39, 0, 1, "c.fq_default_poly_neg", "fq_default_poly_neg"], [39, 0, 1, "c.fq_default_poly_one", "fq_default_poly_one"], [39, 0, 1, "c.fq_default_poly_pow", "fq_default_poly_pow"], [39, 0, 1, "c.fq_default_poly_pow_trunc", "fq_default_poly_pow_trunc"], [39, 0, 1, "c.fq_default_poly_powmod_fmpz_binexp", "fq_default_poly_powmod_fmpz_binexp"], [39, 0, 1, "c.fq_default_poly_powmod_ui_binexp", "fq_default_poly_powmod_ui_binexp"], [39, 0, 1, "c.fq_default_poly_print", "fq_default_poly_print"], [39, 0, 1, "c.fq_default_poly_print_pretty", "fq_default_poly_print_pretty"], [39, 0, 1, "c.fq_default_poly_randtest", "fq_default_poly_randtest"], [39, 0, 1, "c.fq_default_poly_randtest_irreducible", "fq_default_poly_randtest_irreducible"], [39, 0, 1, "c.fq_default_poly_randtest_monic", "fq_default_poly_randtest_monic"], [39, 0, 1, "c.fq_default_poly_randtest_not_zero", "fq_default_poly_randtest_not_zero"], [39, 0, 1, "c.fq_default_poly_realloc", "fq_default_poly_realloc"], [39, 0, 1, "c.fq_default_poly_rem", "fq_default_poly_rem"], [40, 0, 1, "c.fq_default_poly_remove", "fq_default_poly_remove"], [39, 0, 1, "c.fq_default_poly_reverse", "fq_default_poly_reverse"], [40, 0, 1, "c.fq_default_poly_roots", "fq_default_poly_roots"], [39, 0, 1, "c.fq_default_poly_scalar_addmul_fq_default", "fq_default_poly_scalar_addmul_fq_default"], [39, 0, 1, "c.fq_default_poly_scalar_div_fq_default", "fq_default_poly_scalar_div_fq_default"], [39, 0, 1, "c.fq_default_poly_scalar_mul_fq_default", "fq_default_poly_scalar_mul_fq_default"], [39, 0, 1, "c.fq_default_poly_scalar_submul_fq_default", "fq_default_poly_scalar_submul_fq_default"], [39, 0, 1, "c.fq_default_poly_set", "fq_default_poly_set"], [39, 0, 1, "c.fq_default_poly_set_coeff", "fq_default_poly_set_coeff"], [39, 0, 1, "c.fq_default_poly_set_coeff_fmpz", "fq_default_poly_set_coeff_fmpz"], [39, 0, 1, "c.fq_default_poly_set_fmpz_mod_poly", "fq_default_poly_set_fmpz_mod_poly"], [39, 0, 1, "c.fq_default_poly_set_fmpz_poly", "fq_default_poly_set_fmpz_poly"], [39, 0, 1, "c.fq_default_poly_set_fq_default", "fq_default_poly_set_fq_default"], [39, 0, 1, "c.fq_default_poly_set_nmod_poly", "fq_default_poly_set_nmod_poly"], [39, 0, 1, "c.fq_default_poly_set_trunc", "fq_default_poly_set_trunc"], [39, 0, 1, "c.fq_default_poly_shift_left", "fq_default_poly_shift_left"], [39, 0, 1, "c.fq_default_poly_shift_right", "fq_default_poly_shift_right"], [39, 0, 1, "c.fq_default_poly_sqr", "fq_default_poly_sqr"], [39, 0, 1, "c.fq_default_poly_sqrt", "fq_default_poly_sqrt"], [39, 0, 1, "c.fq_default_poly_sqrt_series", "fq_default_poly_sqrt_series"], [39, 0, 1, "c.fq_default_poly_sub", "fq_default_poly_sub"], [39, 0, 1, "c.fq_default_poly_sub_series", "fq_default_poly_sub_series"], [39, 0, 1, "c.fq_default_poly_swap", "fq_default_poly_swap"], [39, 3, 1, "c.fq_default_poly_t", "fq_default_poly_t"], [39, 0, 1, "c.fq_default_poly_truncate", "fq_default_poly_truncate"], [39, 0, 1, "c.fq_default_poly_xgcd", "fq_default_poly_xgcd"], [39, 0, 1, "c.fq_default_poly_zero", "fq_default_poly_zero"], [37, 0, 1, "c.fq_default_pow", "fq_default_pow"], [37, 0, 1, "c.fq_default_pow_ui", "fq_default_pow_ui"], [37, 0, 1, "c.fq_default_print", "fq_default_print"], [37, 0, 1, "c.fq_default_print_pretty", "fq_default_print_pretty"], [37, 0, 1, "c.fq_default_pth_root", "fq_default_pth_root"], [37, 0, 1, "c.fq_default_rand", "fq_default_rand"], [37, 0, 1, "c.fq_default_rand_not_zero", "fq_default_rand_not_zero"], [37, 0, 1, "c.fq_default_randtest", "fq_default_randtest"], [37, 0, 1, "c.fq_default_randtest_not_zero", "fq_default_randtest_not_zero"], [37, 0, 1, "c.fq_default_set", "fq_default_set"], [37, 0, 1, "c.fq_default_set_fmpz", "fq_default_set_fmpz"], [37, 0, 1, "c.fq_default_set_fmpz_mod_poly", "fq_default_set_fmpz_mod_poly"], [37, 0, 1, "c.fq_default_set_fmpz_poly", "fq_default_set_fmpz_poly"], [37, 0, 1, "c.fq_default_set_nmod_poly", "fq_default_set_nmod_poly"], [37, 0, 1, "c.fq_default_set_si", "fq_default_set_si"], [37, 0, 1, "c.fq_default_set_ui", "fq_default_set_ui"], [37, 0, 1, "c.fq_default_sqr", "fq_default_sqr"], [37, 0, 1, "c.fq_default_sqrt", "fq_default_sqrt"], [37, 0, 1, "c.fq_default_sub", "fq_default_sub"], [37, 0, 1, "c.fq_default_sub_one", "fq_default_sub_one"], [37, 0, 1, "c.fq_default_swap", "fq_default_swap"], [37, 0, 1, "c.fq_default_trace", "fq_default_trace"], [37, 0, 1, "c.fq_default_zero", "fq_default_zero"], [36, 0, 1, "c.fq_div", "fq_div"], [41, 0, 1, "c.fq_embed_composition_matrix", "fq_embed_composition_matrix"], [41, 0, 1, "c.fq_embed_composition_matrix_sub", "fq_embed_composition_matrix_sub"], [41, 0, 1, "c.fq_embed_dual_to_mono_matrix", "fq_embed_dual_to_mono_matrix"], [41, 0, 1, "c.fq_embed_gens", "fq_embed_gens"], [41, 0, 1, "c.fq_embed_matrices", "fq_embed_matrices"], [41, 0, 1, "c.fq_embed_mono_to_dual_matrix", "fq_embed_mono_to_dual_matrix"], [41, 0, 1, "c.fq_embed_mul_matrix", "fq_embed_mul_matrix"], [41, 0, 1, "c.fq_embed_trace_matrix", "fq_embed_trace_matrix"], [36, 0, 1, "c.fq_equal", "fq_equal"], [36, 0, 1, "c.fq_fprint", "fq_fprint"], [36, 0, 1, "c.fq_fprint_pretty", "fq_fprint_pretty"], [36, 0, 1, "c.fq_frobenius", "fq_frobenius"], [36, 0, 1, "c.fq_gcdinv", "fq_gcdinv"], [36, 0, 1, "c.fq_gen", "fq_gen"], [36, 0, 1, "c.fq_get_fmpz", "fq_get_fmpz"], [36, 0, 1, "c.fq_get_fmpz_mod_mat", "fq_get_fmpz_mod_mat"], [36, 0, 1, "c.fq_get_fmpz_mod_poly", "fq_get_fmpz_mod_poly"], [36, 0, 1, "c.fq_get_fmpz_poly", "fq_get_fmpz_poly"], [36, 0, 1, "c.fq_get_str", "fq_get_str"], [36, 0, 1, "c.fq_get_str_pretty", "fq_get_str_pretty"], [36, 0, 1, "c.fq_init", "fq_init"], [36, 0, 1, "c.fq_init2", "fq_init2"], [36, 0, 1, "c.fq_inv", "fq_inv"], [36, 0, 1, "c.fq_is_invertible", "fq_is_invertible"], [36, 0, 1, "c.fq_is_invertible_f", "fq_is_invertible_f"], [36, 0, 1, "c.fq_is_one", "fq_is_one"], [36, 0, 1, "c.fq_is_primitive", "fq_is_primitive"], [36, 0, 1, "c.fq_is_square", "fq_is_square"], [36, 0, 1, "c.fq_is_zero", "fq_is_zero"], [42, 0, 1, "c.fq_mat_add", "fq_mat_add"], [42, 0, 1, "c.fq_mat_can_solve", "fq_mat_can_solve"], [42, 0, 1, "c.fq_mat_charpoly", "fq_mat_charpoly"], [42, 0, 1, "c.fq_mat_charpoly_danilevsky", "fq_mat_charpoly_danilevsky"], [42, 0, 1, "c.fq_mat_clear", "fq_mat_clear"], [42, 0, 1, "c.fq_mat_concat_horizontal", "fq_mat_concat_horizontal"], [42, 0, 1, "c.fq_mat_concat_vertical", "fq_mat_concat_vertical"], [42, 0, 1, "c.fq_mat_entry", "fq_mat_entry"], [42, 0, 1, "c.fq_mat_entry_set", "fq_mat_entry_set"], [42, 0, 1, "c.fq_mat_equal", "fq_mat_equal"], [42, 0, 1, "c.fq_mat_fprint", "fq_mat_fprint"], [42, 0, 1, "c.fq_mat_fprint_pretty", "fq_mat_fprint_pretty"], [42, 0, 1, "c.fq_mat_init", "fq_mat_init"], [42, 0, 1, "c.fq_mat_init_set", "fq_mat_init_set"], [42, 0, 1, "c.fq_mat_inv", "fq_mat_inv"], [42, 0, 1, "c.fq_mat_invert_cols", "fq_mat_invert_cols"], [42, 0, 1, "c.fq_mat_invert_rows", "fq_mat_invert_rows"], [42, 0, 1, "c.fq_mat_is_empty", "fq_mat_is_empty"], [42, 0, 1, "c.fq_mat_is_one", "fq_mat_is_one"], [42, 0, 1, "c.fq_mat_is_square", "fq_mat_is_square"], [42, 0, 1, "c.fq_mat_is_zero", "fq_mat_is_zero"], [42, 0, 1, "c.fq_mat_lu", "fq_mat_lu"], [42, 0, 1, "c.fq_mat_lu_classical", "fq_mat_lu_classical"], [42, 0, 1, "c.fq_mat_lu_recursive", "fq_mat_lu_recursive"], [42, 0, 1, "c.fq_mat_minpoly", "fq_mat_minpoly"], [42, 0, 1, "c.fq_mat_mul", "fq_mat_mul"], [42, 0, 1, "c.fq_mat_mul_KS", "fq_mat_mul_KS"], [42, 0, 1, "c.fq_mat_mul_classical", "fq_mat_mul_classical"], [42, 0, 1, "c.fq_mat_mul_vec", "fq_mat_mul_vec"], [42, 0, 1, "c.fq_mat_mul_vec_ptr", "fq_mat_mul_vec_ptr"], [42, 0, 1, "c.fq_mat_ncols", "fq_mat_ncols"], [42, 0, 1, "c.fq_mat_neg", "fq_mat_neg"], [42, 0, 1, "c.fq_mat_nrows", "fq_mat_nrows"], [42, 0, 1, "c.fq_mat_one", "fq_mat_one"], [42, 0, 1, "c.fq_mat_print", "fq_mat_print"], [42, 0, 1, "c.fq_mat_print_pretty", "fq_mat_print_pretty"], [42, 0, 1, "c.fq_mat_randops", "fq_mat_randops"], [42, 0, 1, "c.fq_mat_randpermdiag", "fq_mat_randpermdiag"], [42, 0, 1, "c.fq_mat_randrank", "fq_mat_randrank"], [42, 0, 1, "c.fq_mat_randtest", "fq_mat_randtest"], [42, 0, 1, "c.fq_mat_randtril", "fq_mat_randtril"], [42, 0, 1, "c.fq_mat_randtriu", "fq_mat_randtriu"], [42, 0, 1, "c.fq_mat_reduce_row", "fq_mat_reduce_row"], [42, 0, 1, "c.fq_mat_rref", "fq_mat_rref"], [42, 0, 1, "c.fq_mat_set", "fq_mat_set"], [42, 0, 1, "c.fq_mat_set_fmpz_mod_mat", "fq_mat_set_fmpz_mod_mat"], [42, 0, 1, "c.fq_mat_set_nmod_mat", "fq_mat_set_nmod_mat"], [42, 0, 1, "c.fq_mat_similarity", "fq_mat_similarity"], [42, 0, 1, "c.fq_mat_solve", "fq_mat_solve"], [42, 0, 1, "c.fq_mat_solve_tril", "fq_mat_solve_tril"], [42, 0, 1, "c.fq_mat_solve_tril_classical", "fq_mat_solve_tril_classical"], [42, 0, 1, "c.fq_mat_solve_tril_recursive", "fq_mat_solve_tril_recursive"], [42, 0, 1, "c.fq_mat_solve_triu", "fq_mat_solve_triu"], [42, 0, 1, "c.fq_mat_solve_triu_classical", "fq_mat_solve_triu_classical"], [42, 0, 1, "c.fq_mat_solve_triu_recursive", "fq_mat_solve_triu_recursive"], [42, 3, 1, "c.fq_mat_struct", "fq_mat_struct"], [42, 0, 1, "c.fq_mat_sub", "fq_mat_sub"], [42, 0, 1, "c.fq_mat_submul", "fq_mat_submul"], [42, 0, 1, "c.fq_mat_swap", "fq_mat_swap"], [42, 0, 1, "c.fq_mat_swap_cols", "fq_mat_swap_cols"], [42, 0, 1, "c.fq_mat_swap_entrywise", "fq_mat_swap_entrywise"], [42, 0, 1, "c.fq_mat_swap_rows", "fq_mat_swap_rows"], [42, 3, 1, "c.fq_mat_t", "fq_mat_t"], [42, 0, 1, "c.fq_mat_vec_mul", "fq_mat_vec_mul"], [42, 0, 1, "c.fq_mat_vec_mul_ptr", "fq_mat_vec_mul_ptr"], [42, 0, 1, "c.fq_mat_window_clear", "fq_mat_window_clear"], [42, 0, 1, "c.fq_mat_window_init", "fq_mat_window_init"], [42, 0, 1, "c.fq_mat_zero", "fq_mat_zero"], [41, 0, 1, "c.fq_modulus_derivative_inv", "fq_modulus_derivative_inv"], [41, 0, 1, "c.fq_modulus_pow_series_inv", "fq_modulus_pow_series_inv"], [36, 0, 1, "c.fq_mul", "fq_mul"], [36, 0, 1, "c.fq_mul_fmpz", "fq_mul_fmpz"], [36, 0, 1, "c.fq_mul_si", "fq_mul_si"], [36, 0, 1, "c.fq_mul_ui", "fq_mul_ui"], [36, 0, 1, "c.fq_multiplicative_order", "fq_multiplicative_order"], [36, 0, 1, "c.fq_neg", "fq_neg"], [43, 0, 1, "c.fq_nmod_add", "fq_nmod_add"], [43, 0, 1, "c.fq_nmod_bit_pack", "fq_nmod_bit_pack"], [43, 0, 1, "c.fq_nmod_bit_unpack", "fq_nmod_bit_unpack"], [43, 0, 1, "c.fq_nmod_clear", "fq_nmod_clear"], [43, 0, 1, "c.fq_nmod_cmp", "fq_nmod_cmp"], [43, 0, 1, "c.fq_nmod_ctx_clear", "fq_nmod_ctx_clear"], [43, 0, 1, "c.fq_nmod_ctx_degree", "fq_nmod_ctx_degree"], [43, 0, 1, "c.fq_nmod_ctx_fprint", "fq_nmod_ctx_fprint"], [43, 0, 1, "c.fq_nmod_ctx_init", "fq_nmod_ctx_init"], [43, 0, 1, "c.fq_nmod_ctx_init_conway", "fq_nmod_ctx_init_conway"], [43, 0, 1, "c.fq_nmod_ctx_init_modulus", "fq_nmod_ctx_init_modulus"], [43, 0, 1, "c.fq_nmod_ctx_modulus", "fq_nmod_ctx_modulus"], [43, 0, 1, "c.fq_nmod_ctx_order", "fq_nmod_ctx_order"], [43, 0, 1, "c.fq_nmod_ctx_prime", "fq_nmod_ctx_prime"], [43, 0, 1, "c.fq_nmod_ctx_print", "fq_nmod_ctx_print"], [43, 0, 1, "c.fq_nmod_ctx_randtest", "fq_nmod_ctx_randtest"], [43, 0, 1, "c.fq_nmod_ctx_randtest_reducible", "fq_nmod_ctx_randtest_reducible"], [43, 3, 1, "c.fq_nmod_ctx_struct", "fq_nmod_ctx_struct"], [43, 3, 1, "c.fq_nmod_ctx_t", "fq_nmod_ctx_t"], [44, 0, 1, "c.fq_nmod_embed_composition_matrix", "fq_nmod_embed_composition_matrix"], [44, 0, 1, "c.fq_nmod_embed_composition_matrix_sub", "fq_nmod_embed_composition_matrix_sub"], [44, 0, 1, "c.fq_nmod_embed_dual_to_mono_matrix", "fq_nmod_embed_dual_to_mono_matrix"], [44, 0, 1, "c.fq_nmod_embed_gens", "fq_nmod_embed_gens"], [44, 0, 1, "c.fq_nmod_embed_matrices", "fq_nmod_embed_matrices"], [44, 0, 1, "c.fq_nmod_embed_mono_to_dual_matrix", "fq_nmod_embed_mono_to_dual_matrix"], [44, 0, 1, "c.fq_nmod_embed_mul_matrix", "fq_nmod_embed_mul_matrix"], [44, 0, 1, "c.fq_nmod_embed_trace_matrix", "fq_nmod_embed_trace_matrix"], [43, 0, 1, "c.fq_nmod_equal", "fq_nmod_equal"], [43, 0, 1, "c.fq_nmod_fprint", "fq_nmod_fprint"], [43, 0, 1, "c.fq_nmod_fprint_pretty", "fq_nmod_fprint_pretty"], [43, 0, 1, "c.fq_nmod_frobenius", "fq_nmod_frobenius"], [43, 0, 1, "c.fq_nmod_gcdinv", "fq_nmod_gcdinv"], [43, 0, 1, "c.fq_nmod_gen", "fq_nmod_gen"], [43, 0, 1, "c.fq_nmod_get_fmpz", "fq_nmod_get_fmpz"], [43, 0, 1, "c.fq_nmod_get_nmod_mat", "fq_nmod_get_nmod_mat"], [43, 0, 1, "c.fq_nmod_get_nmod_poly", "fq_nmod_get_nmod_poly"], [43, 0, 1, "c.fq_nmod_get_str", "fq_nmod_get_str"], [43, 0, 1, "c.fq_nmod_get_str_pretty", "fq_nmod_get_str_pretty"], [43, 0, 1, "c.fq_nmod_init", "fq_nmod_init"], [43, 0, 1, "c.fq_nmod_init2", "fq_nmod_init2"], [43, 0, 1, "c.fq_nmod_inv", "fq_nmod_inv"], [43, 0, 1, "c.fq_nmod_is_invertible", "fq_nmod_is_invertible"], [43, 0, 1, "c.fq_nmod_is_invertible_f", "fq_nmod_is_invertible_f"], [43, 0, 1, "c.fq_nmod_is_one", "fq_nmod_is_one"], [43, 0, 1, "c.fq_nmod_is_primitive", "fq_nmod_is_primitive"], [43, 0, 1, "c.fq_nmod_is_square", "fq_nmod_is_square"], [43, 0, 1, "c.fq_nmod_is_zero", "fq_nmod_is_zero"], [45, 0, 1, "c.fq_nmod_mat_add", "fq_nmod_mat_add"], [45, 0, 1, "c.fq_nmod_mat_can_solve", "fq_nmod_mat_can_solve"], [45, 0, 1, "c.fq_nmod_mat_charpoly", "fq_nmod_mat_charpoly"], [45, 0, 1, "c.fq_nmod_mat_charpoly_danilevsky", "fq_nmod_mat_charpoly_danilevsky"], [45, 0, 1, "c.fq_nmod_mat_clear", "fq_nmod_mat_clear"], [45, 0, 1, "c.fq_nmod_mat_concat_horizontal", "fq_nmod_mat_concat_horizontal"], [45, 0, 1, "c.fq_nmod_mat_concat_vertical", "fq_nmod_mat_concat_vertical"], [45, 0, 1, "c.fq_nmod_mat_entry", "fq_nmod_mat_entry"], [45, 0, 1, "c.fq_nmod_mat_entry_set", "fq_nmod_mat_entry_set"], [45, 0, 1, "c.fq_nmod_mat_equal", "fq_nmod_mat_equal"], [45, 0, 1, "c.fq_nmod_mat_fprint", "fq_nmod_mat_fprint"], [45, 0, 1, "c.fq_nmod_mat_fprint_pretty", "fq_nmod_mat_fprint_pretty"], [45, 0, 1, "c.fq_nmod_mat_init", "fq_nmod_mat_init"], [45, 0, 1, "c.fq_nmod_mat_init_set", "fq_nmod_mat_init_set"], [45, 0, 1, "c.fq_nmod_mat_inv", "fq_nmod_mat_inv"], [45, 0, 1, "c.fq_nmod_mat_invert_cols", "fq_nmod_mat_invert_cols"], [45, 0, 1, "c.fq_nmod_mat_invert_rows", "fq_nmod_mat_invert_rows"], [45, 0, 1, "c.fq_nmod_mat_is_empty", "fq_nmod_mat_is_empty"], [45, 0, 1, "c.fq_nmod_mat_is_one", "fq_nmod_mat_is_one"], [45, 0, 1, "c.fq_nmod_mat_is_square", "fq_nmod_mat_is_square"], [45, 0, 1, "c.fq_nmod_mat_is_zero", "fq_nmod_mat_is_zero"], [45, 0, 1, "c.fq_nmod_mat_lu", "fq_nmod_mat_lu"], [45, 0, 1, "c.fq_nmod_mat_lu_classical", "fq_nmod_mat_lu_classical"], [45, 0, 1, "c.fq_nmod_mat_lu_recursive", "fq_nmod_mat_lu_recursive"], [45, 0, 1, "c.fq_nmod_mat_minpoly", "fq_nmod_mat_minpoly"], [45, 0, 1, "c.fq_nmod_mat_mul", "fq_nmod_mat_mul"], [45, 0, 1, "c.fq_nmod_mat_mul_KS", "fq_nmod_mat_mul_KS"], [45, 0, 1, "c.fq_nmod_mat_mul_classical", "fq_nmod_mat_mul_classical"], [45, 0, 1, "c.fq_nmod_mat_mul_vec", "fq_nmod_mat_mul_vec"], [45, 0, 1, "c.fq_nmod_mat_mul_vec_ptr", "fq_nmod_mat_mul_vec_ptr"], [45, 0, 1, "c.fq_nmod_mat_ncols", "fq_nmod_mat_ncols"], [45, 0, 1, "c.fq_nmod_mat_neg", "fq_nmod_mat_neg"], [45, 0, 1, "c.fq_nmod_mat_nrows", "fq_nmod_mat_nrows"], [45, 0, 1, "c.fq_nmod_mat_one", "fq_nmod_mat_one"], [45, 0, 1, "c.fq_nmod_mat_print", "fq_nmod_mat_print"], [45, 0, 1, "c.fq_nmod_mat_print_pretty", "fq_nmod_mat_print_pretty"], [45, 0, 1, "c.fq_nmod_mat_randops", "fq_nmod_mat_randops"], [45, 0, 1, "c.fq_nmod_mat_randpermdiag", "fq_nmod_mat_randpermdiag"], [45, 0, 1, "c.fq_nmod_mat_randrank", "fq_nmod_mat_randrank"], [45, 0, 1, "c.fq_nmod_mat_randtest", "fq_nmod_mat_randtest"], [45, 0, 1, "c.fq_nmod_mat_randtril", "fq_nmod_mat_randtril"], [45, 0, 1, "c.fq_nmod_mat_randtriu", "fq_nmod_mat_randtriu"], [45, 0, 1, "c.fq_nmod_mat_reduce_row", "fq_nmod_mat_reduce_row"], [45, 0, 1, "c.fq_nmod_mat_rref", "fq_nmod_mat_rref"], [45, 0, 1, "c.fq_nmod_mat_set", "fq_nmod_mat_set"], [45, 0, 1, "c.fq_nmod_mat_set_fmpz_mod_mat", "fq_nmod_mat_set_fmpz_mod_mat"], [45, 0, 1, "c.fq_nmod_mat_set_nmod_mat", "fq_nmod_mat_set_nmod_mat"], [45, 0, 1, "c.fq_nmod_mat_similarity", "fq_nmod_mat_similarity"], [45, 0, 1, "c.fq_nmod_mat_solve", "fq_nmod_mat_solve"], [45, 0, 1, "c.fq_nmod_mat_solve_tril", "fq_nmod_mat_solve_tril"], [45, 0, 1, "c.fq_nmod_mat_solve_tril_classical", "fq_nmod_mat_solve_tril_classical"], [45, 0, 1, "c.fq_nmod_mat_solve_tril_recursive", "fq_nmod_mat_solve_tril_recursive"], [45, 0, 1, "c.fq_nmod_mat_solve_triu", "fq_nmod_mat_solve_triu"], [45, 0, 1, "c.fq_nmod_mat_solve_triu_classical", "fq_nmod_mat_solve_triu_classical"], [45, 0, 1, "c.fq_nmod_mat_solve_triu_recursive", "fq_nmod_mat_solve_triu_recursive"], [45, 3, 1, "c.fq_nmod_mat_struct", "fq_nmod_mat_struct"], [45, 0, 1, "c.fq_nmod_mat_sub", "fq_nmod_mat_sub"], [45, 0, 1, "c.fq_nmod_mat_submul", "fq_nmod_mat_submul"], [45, 0, 1, "c.fq_nmod_mat_swap", "fq_nmod_mat_swap"], [45, 0, 1, "c.fq_nmod_mat_swap_cols", "fq_nmod_mat_swap_cols"], [45, 0, 1, "c.fq_nmod_mat_swap_entrywise", "fq_nmod_mat_swap_entrywise"], [45, 0, 1, "c.fq_nmod_mat_swap_rows", "fq_nmod_mat_swap_rows"], [45, 3, 1, "c.fq_nmod_mat_t", "fq_nmod_mat_t"], [45, 0, 1, "c.fq_nmod_mat_vec_mul", "fq_nmod_mat_vec_mul"], [45, 0, 1, "c.fq_nmod_mat_vec_mul_ptr", "fq_nmod_mat_vec_mul_ptr"], [45, 0, 1, "c.fq_nmod_mat_window_clear", "fq_nmod_mat_window_clear"], [45, 0, 1, "c.fq_nmod_mat_window_init", "fq_nmod_mat_window_init"], [45, 0, 1, "c.fq_nmod_mat_zero", "fq_nmod_mat_zero"], [44, 0, 1, "c.fq_nmod_modulus_derivative_inv", "fq_nmod_modulus_derivative_inv"], [44, 0, 1, "c.fq_nmod_modulus_pow_series_inv", "fq_nmod_modulus_pow_series_inv"], [46, 0, 1, "c.fq_nmod_mpoly_add", "fq_nmod_mpoly_add"], [46, 0, 1, "c.fq_nmod_mpoly_add_fq_nmod", "fq_nmod_mpoly_add_fq_nmod"], [46, 0, 1, "c.fq_nmod_mpoly_clear", "fq_nmod_mpoly_clear"], [46, 0, 1, "c.fq_nmod_mpoly_cmp", "fq_nmod_mpoly_cmp"], [46, 0, 1, "c.fq_nmod_mpoly_combine_like_terms", "fq_nmod_mpoly_combine_like_terms"], [46, 0, 1, "c.fq_nmod_mpoly_compose_fq_nmod_mpoly", "fq_nmod_mpoly_compose_fq_nmod_mpoly"], [46, 0, 1, "c.fq_nmod_mpoly_compose_fq_nmod_mpoly_gen", "fq_nmod_mpoly_compose_fq_nmod_mpoly_gen"], [46, 0, 1, "c.fq_nmod_mpoly_compose_fq_nmod_poly", "fq_nmod_mpoly_compose_fq_nmod_poly"], [46, 0, 1, "c.fq_nmod_mpoly_content_vars", "fq_nmod_mpoly_content_vars"], [46, 0, 1, "c.fq_nmod_mpoly_ctx_clear", "fq_nmod_mpoly_ctx_clear"], [46, 0, 1, "c.fq_nmod_mpoly_ctx_init", "fq_nmod_mpoly_ctx_init"], [46, 0, 1, "c.fq_nmod_mpoly_ctx_nvars", "fq_nmod_mpoly_ctx_nvars"], [46, 0, 1, "c.fq_nmod_mpoly_ctx_ord", "fq_nmod_mpoly_ctx_ord"], [46, 3, 1, "c.fq_nmod_mpoly_ctx_struct", "fq_nmod_mpoly_ctx_struct"], [46, 3, 1, "c.fq_nmod_mpoly_ctx_t", "fq_nmod_mpoly_ctx_t"], [46, 0, 1, "c.fq_nmod_mpoly_degree_fmpz", "fq_nmod_mpoly_degree_fmpz"], [46, 0, 1, "c.fq_nmod_mpoly_degree_si", "fq_nmod_mpoly_degree_si"], [46, 0, 1, "c.fq_nmod_mpoly_degrees_fit_si", "fq_nmod_mpoly_degrees_fit_si"], [46, 0, 1, "c.fq_nmod_mpoly_degrees_fmpz", "fq_nmod_mpoly_degrees_fmpz"], [46, 0, 1, "c.fq_nmod_mpoly_degrees_si", "fq_nmod_mpoly_degrees_si"], [46, 0, 1, "c.fq_nmod_mpoly_derivative", "fq_nmod_mpoly_derivative"], [46, 0, 1, "c.fq_nmod_mpoly_discriminant", "fq_nmod_mpoly_discriminant"], [46, 0, 1, "c.fq_nmod_mpoly_div", "fq_nmod_mpoly_div"], [46, 0, 1, "c.fq_nmod_mpoly_divides", "fq_nmod_mpoly_divides"], [46, 0, 1, "c.fq_nmod_mpoly_divrem", "fq_nmod_mpoly_divrem"], [46, 0, 1, "c.fq_nmod_mpoly_divrem_ideal", "fq_nmod_mpoly_divrem_ideal"], [46, 0, 1, "c.fq_nmod_mpoly_equal", "fq_nmod_mpoly_equal"], [46, 0, 1, "c.fq_nmod_mpoly_equal_fq_nmod", "fq_nmod_mpoly_equal_fq_nmod"], [46, 0, 1, "c.fq_nmod_mpoly_evaluate_all_fq_nmod", "fq_nmod_mpoly_evaluate_all_fq_nmod"], [46, 0, 1, "c.fq_nmod_mpoly_evaluate_one_fq_nmod", "fq_nmod_mpoly_evaluate_one_fq_nmod"], [47, 0, 1, "c.fq_nmod_mpoly_factor", "fq_nmod_mpoly_factor"], [47, 0, 1, "c.fq_nmod_mpoly_factor_clear", "fq_nmod_mpoly_factor_clear"], [47, 0, 1, "c.fq_nmod_mpoly_factor_get_base", "fq_nmod_mpoly_factor_get_base"], [47, 0, 1, "c.fq_nmod_mpoly_factor_get_constant_fq_nmod", "fq_nmod_mpoly_factor_get_constant_fq_nmod"], [47, 0, 1, "c.fq_nmod_mpoly_factor_get_exp_si", "fq_nmod_mpoly_factor_get_exp_si"], [47, 0, 1, "c.fq_nmod_mpoly_factor_init", "fq_nmod_mpoly_factor_init"], [47, 0, 1, "c.fq_nmod_mpoly_factor_length", "fq_nmod_mpoly_factor_length"], [47, 0, 1, "c.fq_nmod_mpoly_factor_sort", "fq_nmod_mpoly_factor_sort"], [47, 0, 1, "c.fq_nmod_mpoly_factor_squarefree", "fq_nmod_mpoly_factor_squarefree"], [47, 3, 1, "c.fq_nmod_mpoly_factor_struct", "fq_nmod_mpoly_factor_struct"], [47, 0, 1, "c.fq_nmod_mpoly_factor_swap", "fq_nmod_mpoly_factor_swap"], [47, 0, 1, "c.fq_nmod_mpoly_factor_swap_base", "fq_nmod_mpoly_factor_swap_base"], [47, 3, 1, "c.fq_nmod_mpoly_factor_t", "fq_nmod_mpoly_factor_t"], [46, 0, 1, "c.fq_nmod_mpoly_fit_length", "fq_nmod_mpoly_fit_length"], [46, 0, 1, "c.fq_nmod_mpoly_fprint_pretty", "fq_nmod_mpoly_fprint_pretty"], [46, 0, 1, "c.fq_nmod_mpoly_from_univar", "fq_nmod_mpoly_from_univar"], [46, 0, 1, "c.fq_nmod_mpoly_gcd", "fq_nmod_mpoly_gcd"], [46, 0, 1, "c.fq_nmod_mpoly_gcd_brown", "fq_nmod_mpoly_gcd_brown"], [46, 0, 1, "c.fq_nmod_mpoly_gcd_cofactors", "fq_nmod_mpoly_gcd_cofactors"], [46, 0, 1, "c.fq_nmod_mpoly_gcd_hensel", "fq_nmod_mpoly_gcd_hensel"], [46, 0, 1, "c.fq_nmod_mpoly_gcd_zippel", "fq_nmod_mpoly_gcd_zippel"], [46, 0, 1, "c.fq_nmod_mpoly_gen", "fq_nmod_mpoly_gen"], [46, 0, 1, "c.fq_nmod_mpoly_get_coeff_fq_nmod_fmpz", "fq_nmod_mpoly_get_coeff_fq_nmod_fmpz"], [46, 0, 1, "c.fq_nmod_mpoly_get_coeff_fq_nmod_monomial", "fq_nmod_mpoly_get_coeff_fq_nmod_monomial"], [46, 0, 1, "c.fq_nmod_mpoly_get_coeff_fq_nmod_ui", "fq_nmod_mpoly_get_coeff_fq_nmod_ui"], [46, 0, 1, "c.fq_nmod_mpoly_get_coeff_vars_ui", "fq_nmod_mpoly_get_coeff_vars_ui"], [46, 0, 1, "c.fq_nmod_mpoly_get_fq_nmod", "fq_nmod_mpoly_get_fq_nmod"], [46, 0, 1, "c.fq_nmod_mpoly_get_str_pretty", "fq_nmod_mpoly_get_str_pretty"], [46, 0, 1, "c.fq_nmod_mpoly_get_term", "fq_nmod_mpoly_get_term"], [46, 0, 1, "c.fq_nmod_mpoly_get_term_coeff_fq_nmod", "fq_nmod_mpoly_get_term_coeff_fq_nmod"], [46, 0, 1, "c.fq_nmod_mpoly_get_term_exp_fmpz", "fq_nmod_mpoly_get_term_exp_fmpz"], [46, 0, 1, "c.fq_nmod_mpoly_get_term_exp_si", "fq_nmod_mpoly_get_term_exp_si"], [46, 0, 1, "c.fq_nmod_mpoly_get_term_exp_ui", "fq_nmod_mpoly_get_term_exp_ui"], [46, 0, 1, "c.fq_nmod_mpoly_get_term_monomial", "fq_nmod_mpoly_get_term_monomial"], [46, 0, 1, "c.fq_nmod_mpoly_get_term_var_exp_si", "fq_nmod_mpoly_get_term_var_exp_si"], [46, 0, 1, "c.fq_nmod_mpoly_get_term_var_exp_ui", "fq_nmod_mpoly_get_term_var_exp_ui"], [46, 0, 1, "c.fq_nmod_mpoly_init", "fq_nmod_mpoly_init"], [46, 0, 1, "c.fq_nmod_mpoly_init2", "fq_nmod_mpoly_init2"], [46, 0, 1, "c.fq_nmod_mpoly_init3", "fq_nmod_mpoly_init3"], [46, 0, 1, "c.fq_nmod_mpoly_is_canonical", "fq_nmod_mpoly_is_canonical"], [46, 0, 1, "c.fq_nmod_mpoly_is_fq_nmod", "fq_nmod_mpoly_is_fq_nmod"], [46, 0, 1, "c.fq_nmod_mpoly_is_gen", "fq_nmod_mpoly_is_gen"], [46, 0, 1, "c.fq_nmod_mpoly_is_one", "fq_nmod_mpoly_is_one"], [46, 0, 1, "c.fq_nmod_mpoly_is_square", "fq_nmod_mpoly_is_square"], [46, 0, 1, "c.fq_nmod_mpoly_is_zero", "fq_nmod_mpoly_is_zero"], [46, 0, 1, "c.fq_nmod_mpoly_length", "fq_nmod_mpoly_length"], [46, 0, 1, "c.fq_nmod_mpoly_make_monic", "fq_nmod_mpoly_make_monic"], [46, 0, 1, "c.fq_nmod_mpoly_mul", "fq_nmod_mpoly_mul"], [46, 0, 1, "c.fq_nmod_mpoly_neg", "fq_nmod_mpoly_neg"], [46, 0, 1, "c.fq_nmod_mpoly_one", "fq_nmod_mpoly_one"], [46, 0, 1, "c.fq_nmod_mpoly_pow_fmpz", "fq_nmod_mpoly_pow_fmpz"], [46, 0, 1, "c.fq_nmod_mpoly_pow_ui", "fq_nmod_mpoly_pow_ui"], [46, 0, 1, "c.fq_nmod_mpoly_print_pretty", "fq_nmod_mpoly_print_pretty"], [46, 0, 1, "c.fq_nmod_mpoly_push_term_fq_nmod_fmpz", "fq_nmod_mpoly_push_term_fq_nmod_fmpz"], [46, 0, 1, "c.fq_nmod_mpoly_push_term_fq_nmod_ui", "fq_nmod_mpoly_push_term_fq_nmod_ui"], [46, 0, 1, "c.fq_nmod_mpoly_quadratic_root", "fq_nmod_mpoly_quadratic_root"], [46, 0, 1, "c.fq_nmod_mpoly_randtest_bits", "fq_nmod_mpoly_randtest_bits"], [46, 0, 1, "c.fq_nmod_mpoly_randtest_bound", "fq_nmod_mpoly_randtest_bound"], [46, 0, 1, "c.fq_nmod_mpoly_randtest_bounds", "fq_nmod_mpoly_randtest_bounds"], [46, 0, 1, "c.fq_nmod_mpoly_realloc", "fq_nmod_mpoly_realloc"], [46, 0, 1, "c.fq_nmod_mpoly_resize", "fq_nmod_mpoly_resize"], [46, 0, 1, "c.fq_nmod_mpoly_resultant", "fq_nmod_mpoly_resultant"], [46, 0, 1, "c.fq_nmod_mpoly_reverse", "fq_nmod_mpoly_reverse"], [46, 0, 1, "c.fq_nmod_mpoly_scalar_mul_fq_nmod", "fq_nmod_mpoly_scalar_mul_fq_nmod"], [46, 0, 1, "c.fq_nmod_mpoly_set", "fq_nmod_mpoly_set"], [46, 0, 1, "c.fq_nmod_mpoly_set_coeff_fq_nmod_fmpz", "fq_nmod_mpoly_set_coeff_fq_nmod_fmpz"], [46, 0, 1, "c.fq_nmod_mpoly_set_coeff_fq_nmod_monomial", "fq_nmod_mpoly_set_coeff_fq_nmod_monomial"], [46, 0, 1, "c.fq_nmod_mpoly_set_coeff_fq_nmod_ui", "fq_nmod_mpoly_set_coeff_fq_nmod_ui"], [46, 0, 1, "c.fq_nmod_mpoly_set_fq_nmod", "fq_nmod_mpoly_set_fq_nmod"], [46, 0, 1, "c.fq_nmod_mpoly_set_fq_nmod_gen", "fq_nmod_mpoly_set_fq_nmod_gen"], [46, 0, 1, "c.fq_nmod_mpoly_set_str_pretty", "fq_nmod_mpoly_set_str_pretty"], [46, 0, 1, "c.fq_nmod_mpoly_set_term_coeff_ui", "fq_nmod_mpoly_set_term_coeff_ui"], [46, 0, 1, "c.fq_nmod_mpoly_set_term_exp_fmpz", "fq_nmod_mpoly_set_term_exp_fmpz"], [46, 0, 1, "c.fq_nmod_mpoly_set_term_exp_ui", "fq_nmod_mpoly_set_term_exp_ui"], [46, 0, 1, "c.fq_nmod_mpoly_set_ui", "fq_nmod_mpoly_set_ui"], [46, 0, 1, "c.fq_nmod_mpoly_sort_terms", "fq_nmod_mpoly_sort_terms"], [46, 0, 1, "c.fq_nmod_mpoly_sqrt", "fq_nmod_mpoly_sqrt"], [46, 3, 1, "c.fq_nmod_mpoly_struct", "fq_nmod_mpoly_struct"], [46, 0, 1, "c.fq_nmod_mpoly_sub", "fq_nmod_mpoly_sub"], [46, 0, 1, "c.fq_nmod_mpoly_sub_fq_nmod", "fq_nmod_mpoly_sub_fq_nmod"], [46, 0, 1, "c.fq_nmod_mpoly_swap", "fq_nmod_mpoly_swap"], [46, 3, 1, "c.fq_nmod_mpoly_t", "fq_nmod_mpoly_t"], [46, 0, 1, "c.fq_nmod_mpoly_term_content", "fq_nmod_mpoly_term_content"], [46, 0, 1, "c.fq_nmod_mpoly_term_exp_fits_si", "fq_nmod_mpoly_term_exp_fits_si"], [46, 0, 1, "c.fq_nmod_mpoly_term_exp_fits_ui", "fq_nmod_mpoly_term_exp_fits_ui"], [46, 0, 1, "c.fq_nmod_mpoly_to_univar", "fq_nmod_mpoly_to_univar"], [46, 0, 1, "c.fq_nmod_mpoly_total_degree_fits_si", "fq_nmod_mpoly_total_degree_fits_si"], [46, 0, 1, "c.fq_nmod_mpoly_total_degree_fmpz", "fq_nmod_mpoly_total_degree_fmpz"], [46, 0, 1, "c.fq_nmod_mpoly_total_degree_si", "fq_nmod_mpoly_total_degree_si"], [46, 0, 1, "c.fq_nmod_mpoly_univar_clear", "fq_nmod_mpoly_univar_clear"], [46, 0, 1, "c.fq_nmod_mpoly_univar_degree_fits_si", "fq_nmod_mpoly_univar_degree_fits_si"], [46, 0, 1, "c.fq_nmod_mpoly_univar_get_term_coeff", "fq_nmod_mpoly_univar_get_term_coeff"], [46, 0, 1, "c.fq_nmod_mpoly_univar_get_term_exp_si", "fq_nmod_mpoly_univar_get_term_exp_si"], [46, 0, 1, "c.fq_nmod_mpoly_univar_init", "fq_nmod_mpoly_univar_init"], [46, 0, 1, "c.fq_nmod_mpoly_univar_length", "fq_nmod_mpoly_univar_length"], [46, 0, 1, "c.fq_nmod_mpoly_univar_swap", "fq_nmod_mpoly_univar_swap"], [46, 0, 1, "c.fq_nmod_mpoly_univar_swap_term_coeff", "fq_nmod_mpoly_univar_swap_term_coeff"], [46, 0, 1, "c.fq_nmod_mpoly_used_vars", "fq_nmod_mpoly_used_vars"], [46, 0, 1, "c.fq_nmod_mpoly_zero", "fq_nmod_mpoly_zero"], [43, 0, 1, "c.fq_nmod_mul", "fq_nmod_mul"], [43, 0, 1, "c.fq_nmod_mul_fmpz", "fq_nmod_mul_fmpz"], [43, 0, 1, "c.fq_nmod_mul_si", "fq_nmod_mul_si"], [43, 0, 1, "c.fq_nmod_mul_ui", "fq_nmod_mul_ui"], [43, 0, 1, "c.fq_nmod_multiplicative_order", "fq_nmod_multiplicative_order"], [43, 0, 1, "c.fq_nmod_neg", "fq_nmod_neg"], [43, 0, 1, "c.fq_nmod_norm", "fq_nmod_norm"], [43, 0, 1, "c.fq_nmod_one", "fq_nmod_one"], [48, 0, 1, "c.fq_nmod_poly_add", "fq_nmod_poly_add"], [48, 0, 1, "c.fq_nmod_poly_add_series", "fq_nmod_poly_add_series"], [48, 0, 1, "c.fq_nmod_poly_add_si", "fq_nmod_poly_add_si"], [48, 0, 1, "c.fq_nmod_poly_clear", "fq_nmod_poly_clear"], [48, 0, 1, "c.fq_nmod_poly_compose", "fq_nmod_poly_compose"], [48, 0, 1, "c.fq_nmod_poly_compose_divconquer", "fq_nmod_poly_compose_divconquer"], [48, 0, 1, "c.fq_nmod_poly_compose_horner", "fq_nmod_poly_compose_horner"], [48, 0, 1, "c.fq_nmod_poly_compose_mod", "fq_nmod_poly_compose_mod"], [48, 0, 1, "c.fq_nmod_poly_compose_mod_brent_kung", "fq_nmod_poly_compose_mod_brent_kung"], [48, 0, 1, "c.fq_nmod_poly_compose_mod_brent_kung_precomp_preinv", "fq_nmod_poly_compose_mod_brent_kung_precomp_preinv"], [48, 0, 1, "c.fq_nmod_poly_compose_mod_brent_kung_preinv", "fq_nmod_poly_compose_mod_brent_kung_preinv"], [48, 0, 1, "c.fq_nmod_poly_compose_mod_horner", "fq_nmod_poly_compose_mod_horner"], [48, 0, 1, "c.fq_nmod_poly_compose_mod_horner_preinv", "fq_nmod_poly_compose_mod_horner_preinv"], [48, 0, 1, "c.fq_nmod_poly_compose_mod_preinv", "fq_nmod_poly_compose_mod_preinv"], [48, 0, 1, "c.fq_nmod_poly_deflate", "fq_nmod_poly_deflate"], [48, 0, 1, "c.fq_nmod_poly_deflation", "fq_nmod_poly_deflation"], [48, 0, 1, "c.fq_nmod_poly_degree", "fq_nmod_poly_degree"], [48, 0, 1, "c.fq_nmod_poly_derivative", "fq_nmod_poly_derivative"], [48, 0, 1, "c.fq_nmod_poly_div_basecase", "fq_nmod_poly_div_basecase"], [48, 0, 1, "c.fq_nmod_poly_div_newton_n_preinv", "fq_nmod_poly_div_newton_n_preinv"], [48, 0, 1, "c.fq_nmod_poly_div_series", "fq_nmod_poly_div_series"], [48, 0, 1, "c.fq_nmod_poly_divides", "fq_nmod_poly_divides"], [48, 0, 1, "c.fq_nmod_poly_divrem", "fq_nmod_poly_divrem"], [48, 0, 1, "c.fq_nmod_poly_divrem_basecase", "fq_nmod_poly_divrem_basecase"], [48, 0, 1, "c.fq_nmod_poly_divrem_divconquer", "fq_nmod_poly_divrem_divconquer"], [48, 0, 1, "c.fq_nmod_poly_divrem_f", "fq_nmod_poly_divrem_f"], [48, 0, 1, "c.fq_nmod_poly_divrem_newton_n_preinv", "fq_nmod_poly_divrem_newton_n_preinv"], [48, 0, 1, "c.fq_nmod_poly_equal", "fq_nmod_poly_equal"], [48, 0, 1, "c.fq_nmod_poly_equal_fq_nmod", "fq_nmod_poly_equal_fq_nmod"], [48, 0, 1, "c.fq_nmod_poly_equal_trunc", "fq_nmod_poly_equal_trunc"], [48, 0, 1, "c.fq_nmod_poly_evaluate_fq_nmod", "fq_nmod_poly_evaluate_fq_nmod"], [49, 0, 1, "c.fq_nmod_poly_factor", "fq_nmod_poly_factor"], [49, 0, 1, "c.fq_nmod_poly_factor_berlekamp", "fq_nmod_poly_factor_berlekamp"], [49, 0, 1, "c.fq_nmod_poly_factor_cantor_zassenhaus", "fq_nmod_poly_factor_cantor_zassenhaus"], [49, 0, 1, "c.fq_nmod_poly_factor_clear", "fq_nmod_poly_factor_clear"], [49, 0, 1, "c.fq_nmod_poly_factor_concat", "fq_nmod_poly_factor_concat"], [49, 0, 1, "c.fq_nmod_poly_factor_distinct_deg", "fq_nmod_poly_factor_distinct_deg"], [49, 0, 1, "c.fq_nmod_poly_factor_equal_deg", "fq_nmod_poly_factor_equal_deg"], [49, 0, 1, "c.fq_nmod_poly_factor_equal_deg_prob", "fq_nmod_poly_factor_equal_deg_prob"], [49, 0, 1, "c.fq_nmod_poly_factor_fit_length", "fq_nmod_poly_factor_fit_length"], [49, 0, 1, "c.fq_nmod_poly_factor_init", "fq_nmod_poly_factor_init"], [49, 0, 1, "c.fq_nmod_poly_factor_insert", "fq_nmod_poly_factor_insert"], [49, 0, 1, "c.fq_nmod_poly_factor_kaltofen_shoup", "fq_nmod_poly_factor_kaltofen_shoup"], [49, 0, 1, "c.fq_nmod_poly_factor_pow", "fq_nmod_poly_factor_pow"], [49, 0, 1, "c.fq_nmod_poly_factor_print", "fq_nmod_poly_factor_print"], [49, 0, 1, "c.fq_nmod_poly_factor_print_pretty", "fq_nmod_poly_factor_print_pretty"], [49, 0, 1, "c.fq_nmod_poly_factor_realloc", "fq_nmod_poly_factor_realloc"], [49, 0, 1, "c.fq_nmod_poly_factor_set", "fq_nmod_poly_factor_set"], [49, 0, 1, "c.fq_nmod_poly_factor_split_single", "fq_nmod_poly_factor_split_single"], [49, 0, 1, "c.fq_nmod_poly_factor_squarefree", "fq_nmod_poly_factor_squarefree"], [49, 3, 1, "c.fq_nmod_poly_factor_struct", "fq_nmod_poly_factor_struct"], [49, 3, 1, "c.fq_nmod_poly_factor_t", "fq_nmod_poly_factor_t"], [49, 0, 1, "c.fq_nmod_poly_factor_with_berlekamp", "fq_nmod_poly_factor_with_berlekamp"], [49, 0, 1, "c.fq_nmod_poly_factor_with_cantor_zassenhaus", "fq_nmod_poly_factor_with_cantor_zassenhaus"], [49, 0, 1, "c.fq_nmod_poly_factor_with_kaltofen_shoup", "fq_nmod_poly_factor_with_kaltofen_shoup"], [48, 0, 1, "c.fq_nmod_poly_fit_length", "fq_nmod_poly_fit_length"], [48, 0, 1, "c.fq_nmod_poly_fprint", "fq_nmod_poly_fprint"], [48, 0, 1, "c.fq_nmod_poly_fprint_pretty", "fq_nmod_poly_fprint_pretty"], [48, 0, 1, "c.fq_nmod_poly_gcd", "fq_nmod_poly_gcd"], [48, 0, 1, "c.fq_nmod_poly_gcd_euclidean", "fq_nmod_poly_gcd_euclidean"], [48, 0, 1, "c.fq_nmod_poly_gcd_euclidean_f", "fq_nmod_poly_gcd_euclidean_f"], [48, 0, 1, "c.fq_nmod_poly_gcd_hgcd", "fq_nmod_poly_gcd_hgcd"], [48, 0, 1, "c.fq_nmod_poly_gen", "fq_nmod_poly_gen"], [48, 0, 1, "c.fq_nmod_poly_get_coeff", "fq_nmod_poly_get_coeff"], [48, 0, 1, "c.fq_nmod_poly_get_str", "fq_nmod_poly_get_str"], [48, 0, 1, "c.fq_nmod_poly_get_str_pretty", "fq_nmod_poly_get_str_pretty"], [48, 0, 1, "c.fq_nmod_poly_hamming_weight", "fq_nmod_poly_hamming_weight"], [48, 0, 1, "c.fq_nmod_poly_inflate", "fq_nmod_poly_inflate"], [48, 0, 1, "c.fq_nmod_poly_init", "fq_nmod_poly_init"], [48, 0, 1, "c.fq_nmod_poly_init2", "fq_nmod_poly_init2"], [48, 0, 1, "c.fq_nmod_poly_inv_series", "fq_nmod_poly_inv_series"], [48, 0, 1, "c.fq_nmod_poly_inv_series_newton", "fq_nmod_poly_inv_series_newton"], [48, 0, 1, "c.fq_nmod_poly_invsqrt_series", "fq_nmod_poly_invsqrt_series"], [48, 0, 1, "c.fq_nmod_poly_is_gen", "fq_nmod_poly_is_gen"], [49, 0, 1, "c.fq_nmod_poly_is_irreducible", "fq_nmod_poly_is_irreducible"], [49, 0, 1, "c.fq_nmod_poly_is_irreducible_ben_or", "fq_nmod_poly_is_irreducible_ben_or"], [49, 0, 1, "c.fq_nmod_poly_is_irreducible_ddf", "fq_nmod_poly_is_irreducible_ddf"], [48, 0, 1, "c.fq_nmod_poly_is_one", "fq_nmod_poly_is_one"], [49, 0, 1, "c.fq_nmod_poly_is_squarefree", "fq_nmod_poly_is_squarefree"], [48, 0, 1, "c.fq_nmod_poly_is_unit", "fq_nmod_poly_is_unit"], [48, 0, 1, "c.fq_nmod_poly_is_zero", "fq_nmod_poly_is_zero"], [49, 0, 1, "c.fq_nmod_poly_iterated_frobenius_preinv", "fq_nmod_poly_iterated_frobenius_preinv"], [48, 0, 1, "c.fq_nmod_poly_lead", "fq_nmod_poly_lead"], [48, 0, 1, "c.fq_nmod_poly_length", "fq_nmod_poly_length"], [48, 0, 1, "c.fq_nmod_poly_make_monic", "fq_nmod_poly_make_monic"], [48, 0, 1, "c.fq_nmod_poly_mul", "fq_nmod_poly_mul"], [48, 0, 1, "c.fq_nmod_poly_mul_KS", "fq_nmod_poly_mul_KS"], [48, 0, 1, "c.fq_nmod_poly_mul_classical", "fq_nmod_poly_mul_classical"], [48, 0, 1, "c.fq_nmod_poly_mul_reorder", "fq_nmod_poly_mul_reorder"], [48, 0, 1, "c.fq_nmod_poly_mul_univariate", "fq_nmod_poly_mul_univariate"], [48, 0, 1, "c.fq_nmod_poly_mulhigh", "fq_nmod_poly_mulhigh"], [48, 0, 1, "c.fq_nmod_poly_mulhigh_classical", "fq_nmod_poly_mulhigh_classical"], [48, 0, 1, "c.fq_nmod_poly_mullow", "fq_nmod_poly_mullow"], [48, 0, 1, "c.fq_nmod_poly_mullow_KS", "fq_nmod_poly_mullow_KS"], [48, 0, 1, "c.fq_nmod_poly_mullow_classical", "fq_nmod_poly_mullow_classical"], [48, 0, 1, "c.fq_nmod_poly_mullow_univariate", "fq_nmod_poly_mullow_univariate"], [48, 0, 1, "c.fq_nmod_poly_mulmod", "fq_nmod_poly_mulmod"], [48, 0, 1, "c.fq_nmod_poly_mulmod_preinv", "fq_nmod_poly_mulmod_preinv"], [48, 0, 1, "c.fq_nmod_poly_neg", "fq_nmod_poly_neg"], [48, 0, 1, "c.fq_nmod_poly_one", "fq_nmod_poly_one"], [48, 0, 1, "c.fq_nmod_poly_pow", "fq_nmod_poly_pow"], [48, 0, 1, "c.fq_nmod_poly_pow_trunc", "fq_nmod_poly_pow_trunc"], [48, 0, 1, "c.fq_nmod_poly_pow_trunc_binexp", "fq_nmod_poly_pow_trunc_binexp"], [48, 0, 1, "c.fq_nmod_poly_powmod_fmpz_binexp", "fq_nmod_poly_powmod_fmpz_binexp"], [48, 0, 1, "c.fq_nmod_poly_powmod_fmpz_binexp_preinv", "fq_nmod_poly_powmod_fmpz_binexp_preinv"], [48, 0, 1, "c.fq_nmod_poly_powmod_fmpz_sliding_preinv", "fq_nmod_poly_powmod_fmpz_sliding_preinv"], [48, 0, 1, "c.fq_nmod_poly_powmod_ui_binexp", "fq_nmod_poly_powmod_ui_binexp"], [48, 0, 1, "c.fq_nmod_poly_powmod_ui_binexp_preinv", "fq_nmod_poly_powmod_ui_binexp_preinv"], [48, 0, 1, "c.fq_nmod_poly_powmod_x_fmpz_preinv", "fq_nmod_poly_powmod_x_fmpz_preinv"], [48, 0, 1, "c.fq_nmod_poly_precompute_matrix", "fq_nmod_poly_precompute_matrix"], [48, 0, 1, "c.fq_nmod_poly_print", "fq_nmod_poly_print"], [48, 0, 1, "c.fq_nmod_poly_print_pretty", "fq_nmod_poly_print_pretty"], [48, 0, 1, "c.fq_nmod_poly_randtest", "fq_nmod_poly_randtest"], [48, 0, 1, "c.fq_nmod_poly_randtest_irreducible", "fq_nmod_poly_randtest_irreducible"], [48, 0, 1, "c.fq_nmod_poly_randtest_monic", "fq_nmod_poly_randtest_monic"], [48, 0, 1, "c.fq_nmod_poly_randtest_not_zero", "fq_nmod_poly_randtest_not_zero"], [48, 0, 1, "c.fq_nmod_poly_realloc", "fq_nmod_poly_realloc"], [48, 0, 1, "c.fq_nmod_poly_rem", "fq_nmod_poly_rem"], [49, 0, 1, "c.fq_nmod_poly_remove", "fq_nmod_poly_remove"], [48, 0, 1, "c.fq_nmod_poly_reverse", "fq_nmod_poly_reverse"], [49, 0, 1, "c.fq_nmod_poly_roots", "fq_nmod_poly_roots"], [48, 0, 1, "c.fq_nmod_poly_scalar_addmul_fq_nmod", "fq_nmod_poly_scalar_addmul_fq_nmod"], [48, 0, 1, "c.fq_nmod_poly_scalar_div_fq", "fq_nmod_poly_scalar_div_fq"], [48, 0, 1, "c.fq_nmod_poly_scalar_mul_fq_nmod", "fq_nmod_poly_scalar_mul_fq_nmod"], [48, 0, 1, "c.fq_nmod_poly_scalar_submul_fq_nmod", "fq_nmod_poly_scalar_submul_fq_nmod"], [48, 0, 1, "c.fq_nmod_poly_set", "fq_nmod_poly_set"], [48, 0, 1, "c.fq_nmod_poly_set_coeff", "fq_nmod_poly_set_coeff"], [48, 0, 1, "c.fq_nmod_poly_set_coeff_fmpz", "fq_nmod_poly_set_coeff_fmpz"], [48, 0, 1, "c.fq_nmod_poly_set_fmpz_mod_poly", "fq_nmod_poly_set_fmpz_mod_poly"], [48, 0, 1, "c.fq_nmod_poly_set_fq_nmod", "fq_nmod_poly_set_fq_nmod"], [48, 0, 1, "c.fq_nmod_poly_set_nmod_poly", "fq_nmod_poly_set_nmod_poly"], [48, 0, 1, "c.fq_nmod_poly_set_trunc", "fq_nmod_poly_set_trunc"], [48, 0, 1, "c.fq_nmod_poly_shift_left", "fq_nmod_poly_shift_left"], [48, 0, 1, "c.fq_nmod_poly_shift_right", "fq_nmod_poly_shift_right"], [48, 0, 1, "c.fq_nmod_poly_sqr", "fq_nmod_poly_sqr"], [48, 0, 1, "c.fq_nmod_poly_sqr_KS", "fq_nmod_poly_sqr_KS"], [48, 0, 1, "c.fq_nmod_poly_sqr_classical", "fq_nmod_poly_sqr_classical"], [48, 0, 1, "c.fq_nmod_poly_sqrt", "fq_nmod_poly_sqrt"], [48, 0, 1, "c.fq_nmod_poly_sqrt_series", "fq_nmod_poly_sqrt_series"], [48, 3, 1, "c.fq_nmod_poly_struct", "fq_nmod_poly_struct"], [48, 0, 1, "c.fq_nmod_poly_sub", "fq_nmod_poly_sub"], [48, 0, 1, "c.fq_nmod_poly_sub_series", "fq_nmod_poly_sub_series"], [48, 0, 1, "c.fq_nmod_poly_swap", "fq_nmod_poly_swap"], [48, 3, 1, "c.fq_nmod_poly_t", "fq_nmod_poly_t"], [48, 0, 1, "c.fq_nmod_poly_truncate", "fq_nmod_poly_truncate"], [48, 0, 1, "c.fq_nmod_poly_xgcd", "fq_nmod_poly_xgcd"], [48, 0, 1, "c.fq_nmod_poly_xgcd_euclidean", "fq_nmod_poly_xgcd_euclidean"], [48, 0, 1, "c.fq_nmod_poly_xgcd_euclidean_f", "fq_nmod_poly_xgcd_euclidean_f"], [48, 0, 1, "c.fq_nmod_poly_zero", "fq_nmod_poly_zero"], [43, 0, 1, "c.fq_nmod_pow", "fq_nmod_pow"], [43, 0, 1, "c.fq_nmod_pow_ui", "fq_nmod_pow_ui"], [43, 0, 1, "c.fq_nmod_print", "fq_nmod_print"], [43, 0, 1, "c.fq_nmod_print_pretty", "fq_nmod_print_pretty"], [43, 0, 1, "c.fq_nmod_pth_root", "fq_nmod_pth_root"], [43, 0, 1, "c.fq_nmod_rand", "fq_nmod_rand"], [43, 0, 1, "c.fq_nmod_rand_not_zero", "fq_nmod_rand_not_zero"], [43, 0, 1, "c.fq_nmod_randtest", "fq_nmod_randtest"], [43, 0, 1, "c.fq_nmod_randtest_dense", "fq_nmod_randtest_dense"], [43, 0, 1, "c.fq_nmod_randtest_not_zero", "fq_nmod_randtest_not_zero"], [43, 0, 1, "c.fq_nmod_reduce", "fq_nmod_reduce"], [43, 0, 1, "c.fq_nmod_set", "fq_nmod_set"], [43, 0, 1, "c.fq_nmod_set_fmpz", "fq_nmod_set_fmpz"], [43, 0, 1, "c.fq_nmod_set_nmod_mat", "fq_nmod_set_nmod_mat"], [43, 0, 1, "c.fq_nmod_set_nmod_poly", "fq_nmod_set_nmod_poly"], [43, 0, 1, "c.fq_nmod_set_si", "fq_nmod_set_si"], [43, 0, 1, "c.fq_nmod_set_ui", "fq_nmod_set_ui"], [43, 0, 1, "c.fq_nmod_sqr", "fq_nmod_sqr"], [43, 0, 1, "c.fq_nmod_sqrt", "fq_nmod_sqrt"], [43, 3, 1, "c.fq_nmod_struct", "fq_nmod_struct"], [43, 0, 1, "c.fq_nmod_sub", "fq_nmod_sub"], [43, 0, 1, "c.fq_nmod_sub_one", "fq_nmod_sub_one"], [43, 0, 1, "c.fq_nmod_swap", "fq_nmod_swap"], [43, 3, 1, "c.fq_nmod_t", "fq_nmod_t"], [43, 0, 1, "c.fq_nmod_trace", "fq_nmod_trace"], [43, 0, 1, "c.fq_nmod_zero", "fq_nmod_zero"], [36, 0, 1, "c.fq_norm", "fq_norm"], [36, 0, 1, "c.fq_one", "fq_one"], [51, 0, 1, "c.fq_poly_add", "fq_poly_add"], [51, 0, 1, "c.fq_poly_add_series", "fq_poly_add_series"], [51, 0, 1, "c.fq_poly_add_si", "fq_poly_add_si"], [51, 0, 1, "c.fq_poly_clear", "fq_poly_clear"], [51, 0, 1, "c.fq_poly_compose", "fq_poly_compose"], [51, 0, 1, "c.fq_poly_compose_divconquer", "fq_poly_compose_divconquer"], [51, 0, 1, "c.fq_poly_compose_horner", "fq_poly_compose_horner"], [51, 0, 1, "c.fq_poly_compose_mod", "fq_poly_compose_mod"], [51, 0, 1, "c.fq_poly_compose_mod_brent_kung", "fq_poly_compose_mod_brent_kung"], [51, 0, 1, "c.fq_poly_compose_mod_brent_kung_precomp_preinv", "fq_poly_compose_mod_brent_kung_precomp_preinv"], [51, 0, 1, "c.fq_poly_compose_mod_brent_kung_preinv", "fq_poly_compose_mod_brent_kung_preinv"], [51, 0, 1, "c.fq_poly_compose_mod_horner", "fq_poly_compose_mod_horner"], [51, 0, 1, "c.fq_poly_compose_mod_horner_preinv", "fq_poly_compose_mod_horner_preinv"], [51, 0, 1, "c.fq_poly_compose_mod_preinv", "fq_poly_compose_mod_preinv"], [51, 0, 1, "c.fq_poly_deflate", "fq_poly_deflate"], [51, 0, 1, "c.fq_poly_deflation", "fq_poly_deflation"], [51, 0, 1, "c.fq_poly_degree", "fq_poly_degree"], [51, 0, 1, "c.fq_poly_derivative", "fq_poly_derivative"], [51, 0, 1, "c.fq_poly_div_basecase", "fq_poly_div_basecase"], [51, 0, 1, "c.fq_poly_div_newton_n_preinv", "fq_poly_div_newton_n_preinv"], [51, 0, 1, "c.fq_poly_div_series", "fq_poly_div_series"], [51, 0, 1, "c.fq_poly_divides", "fq_poly_divides"], [51, 0, 1, "c.fq_poly_divrem", "fq_poly_divrem"], [51, 0, 1, "c.fq_poly_divrem_basecase", "fq_poly_divrem_basecase"], [51, 0, 1, "c.fq_poly_divrem_divconquer", "fq_poly_divrem_divconquer"], [51, 0, 1, "c.fq_poly_divrem_f", "fq_poly_divrem_f"], [51, 0, 1, "c.fq_poly_divrem_newton_preinv", "fq_poly_divrem_newton_preinv"], [51, 0, 1, "c.fq_poly_equal", "fq_poly_equal"], [51, 0, 1, "c.fq_poly_equal_fq", "fq_poly_equal_fq"], [51, 0, 1, "c.fq_poly_equal_trunc", "fq_poly_equal_trunc"], [51, 0, 1, "c.fq_poly_evaluate_fq", "fq_poly_evaluate_fq"], [52, 0, 1, "c.fq_poly_factor", "fq_poly_factor"], [52, 0, 1, "c.fq_poly_factor_berlekamp", "fq_poly_factor_berlekamp"], [52, 0, 1, "c.fq_poly_factor_cantor_zassenhaus", "fq_poly_factor_cantor_zassenhaus"], [52, 0, 1, "c.fq_poly_factor_clear", "fq_poly_factor_clear"], [52, 0, 1, "c.fq_poly_factor_concat", "fq_poly_factor_concat"], [52, 0, 1, "c.fq_poly_factor_distinct_deg", "fq_poly_factor_distinct_deg"], [52, 0, 1, "c.fq_poly_factor_equal_deg", "fq_poly_factor_equal_deg"], [52, 0, 1, "c.fq_poly_factor_equal_deg_prob", "fq_poly_factor_equal_deg_prob"], [52, 0, 1, "c.fq_poly_factor_fit_length", "fq_poly_factor_fit_length"], [52, 0, 1, "c.fq_poly_factor_init", "fq_poly_factor_init"], [52, 0, 1, "c.fq_poly_factor_insert", "fq_poly_factor_insert"], [52, 0, 1, "c.fq_poly_factor_kaltofen_shoup", "fq_poly_factor_kaltofen_shoup"], [52, 0, 1, "c.fq_poly_factor_pow", "fq_poly_factor_pow"], [52, 0, 1, "c.fq_poly_factor_print", "fq_poly_factor_print"], [52, 0, 1, "c.fq_poly_factor_print_pretty", "fq_poly_factor_print_pretty"], [52, 0, 1, "c.fq_poly_factor_realloc", "fq_poly_factor_realloc"], [52, 0, 1, "c.fq_poly_factor_set", "fq_poly_factor_set"], [52, 0, 1, "c.fq_poly_factor_split_single", "fq_poly_factor_split_single"], [52, 0, 1, "c.fq_poly_factor_squarefree", "fq_poly_factor_squarefree"], [52, 3, 1, "c.fq_poly_factor_struct", "fq_poly_factor_struct"], [52, 3, 1, "c.fq_poly_factor_t", "fq_poly_factor_t"], [52, 0, 1, "c.fq_poly_factor_with_berlekamp", "fq_poly_factor_with_berlekamp"], [52, 0, 1, "c.fq_poly_factor_with_cantor_zassenhaus", "fq_poly_factor_with_cantor_zassenhaus"], [52, 0, 1, "c.fq_poly_factor_with_kaltofen_shoup", "fq_poly_factor_with_kaltofen_shoup"], [51, 0, 1, "c.fq_poly_fit_length", "fq_poly_fit_length"], [51, 0, 1, "c.fq_poly_fprint", "fq_poly_fprint"], [51, 0, 1, "c.fq_poly_fprint_pretty", "fq_poly_fprint_pretty"], [51, 0, 1, "c.fq_poly_gcd", "fq_poly_gcd"], [51, 0, 1, "c.fq_poly_gcd_euclidean", "fq_poly_gcd_euclidean"], [51, 0, 1, "c.fq_poly_gcd_euclidean_f", "fq_poly_gcd_euclidean_f"], [51, 0, 1, "c.fq_poly_gcd_hgcd", "fq_poly_gcd_hgcd"], [51, 0, 1, "c.fq_poly_gen", "fq_poly_gen"], [51, 0, 1, "c.fq_poly_get_coeff", "fq_poly_get_coeff"], [51, 0, 1, "c.fq_poly_get_str", "fq_poly_get_str"], [51, 0, 1, "c.fq_poly_get_str_pretty", "fq_poly_get_str_pretty"], [51, 0, 1, "c.fq_poly_hamming_weight", "fq_poly_hamming_weight"], [51, 0, 1, "c.fq_poly_inflate", "fq_poly_inflate"], [51, 0, 1, "c.fq_poly_init", "fq_poly_init"], [51, 0, 1, "c.fq_poly_init2", "fq_poly_init2"], [51, 0, 1, "c.fq_poly_inv_series", "fq_poly_inv_series"], [51, 0, 1, "c.fq_poly_inv_series_newton", "fq_poly_inv_series_newton"], [51, 0, 1, "c.fq_poly_invsqrt_series", "fq_poly_invsqrt_series"], [51, 0, 1, "c.fq_poly_is_gen", "fq_poly_is_gen"], [52, 0, 1, "c.fq_poly_is_irreducible", "fq_poly_is_irreducible"], [52, 0, 1, "c.fq_poly_is_irreducible_ben_or", "fq_poly_is_irreducible_ben_or"], [52, 0, 1, "c.fq_poly_is_irreducible_ddf", "fq_poly_is_irreducible_ddf"], [51, 0, 1, "c.fq_poly_is_one", "fq_poly_is_one"], [52, 0, 1, "c.fq_poly_is_squarefree", "fq_poly_is_squarefree"], [51, 0, 1, "c.fq_poly_is_unit", "fq_poly_is_unit"], [51, 0, 1, "c.fq_poly_is_zero", "fq_poly_is_zero"], [52, 0, 1, "c.fq_poly_iterated_frobenius_preinv", "fq_poly_iterated_frobenius_preinv"], [51, 0, 1, "c.fq_poly_lead", "fq_poly_lead"], [51, 0, 1, "c.fq_poly_length", "fq_poly_length"], [51, 0, 1, "c.fq_poly_make_monic", "fq_poly_make_monic"], [51, 0, 1, "c.fq_poly_mul", "fq_poly_mul"], [51, 0, 1, "c.fq_poly_mul_KS", "fq_poly_mul_KS"], [51, 0, 1, "c.fq_poly_mul_classical", "fq_poly_mul_classical"], [51, 0, 1, "c.fq_poly_mul_reorder", "fq_poly_mul_reorder"], [51, 0, 1, "c.fq_poly_mul_univariate", "fq_poly_mul_univariate"], [51, 0, 1, "c.fq_poly_mulhigh", "fq_poly_mulhigh"], [51, 0, 1, "c.fq_poly_mulhigh_classical", "fq_poly_mulhigh_classical"], [51, 0, 1, "c.fq_poly_mullow", "fq_poly_mullow"], [51, 0, 1, "c.fq_poly_mullow_KS", "fq_poly_mullow_KS"], [51, 0, 1, "c.fq_poly_mullow_classical", "fq_poly_mullow_classical"], [51, 0, 1, "c.fq_poly_mullow_univariate", "fq_poly_mullow_univariate"], [51, 0, 1, "c.fq_poly_mulmod", "fq_poly_mulmod"], [51, 0, 1, "c.fq_poly_mulmod_preinv", "fq_poly_mulmod_preinv"], [51, 0, 1, "c.fq_poly_neg", "fq_poly_neg"], [51, 0, 1, "c.fq_poly_one", "fq_poly_one"], [51, 0, 1, "c.fq_poly_pow", "fq_poly_pow"], [51, 0, 1, "c.fq_poly_pow_trunc", "fq_poly_pow_trunc"], [51, 0, 1, "c.fq_poly_pow_trunc_binexp", "fq_poly_pow_trunc_binexp"], [51, 0, 1, "c.fq_poly_powmod_fmpz_binexp", "fq_poly_powmod_fmpz_binexp"], [51, 0, 1, "c.fq_poly_powmod_fmpz_binexp_preinv", "fq_poly_powmod_fmpz_binexp_preinv"], [51, 0, 1, "c.fq_poly_powmod_fmpz_sliding_preinv", "fq_poly_powmod_fmpz_sliding_preinv"], [51, 0, 1, "c.fq_poly_powmod_ui_binexp", "fq_poly_powmod_ui_binexp"], [51, 0, 1, "c.fq_poly_powmod_ui_binexp_preinv", "fq_poly_powmod_ui_binexp_preinv"], [51, 0, 1, "c.fq_poly_powmod_x_fmpz_preinv", "fq_poly_powmod_x_fmpz_preinv"], [51, 0, 1, "c.fq_poly_precompute_matrix", "fq_poly_precompute_matrix"], [51, 0, 1, "c.fq_poly_print", "fq_poly_print"], [51, 0, 1, "c.fq_poly_print_pretty", "fq_poly_print_pretty"], [51, 0, 1, "c.fq_poly_randtest", "fq_poly_randtest"], [51, 0, 1, "c.fq_poly_randtest_irreducible", "fq_poly_randtest_irreducible"], [51, 0, 1, "c.fq_poly_randtest_monic", "fq_poly_randtest_monic"], [51, 0, 1, "c.fq_poly_randtest_not_zero", "fq_poly_randtest_not_zero"], [51, 0, 1, "c.fq_poly_realloc", "fq_poly_realloc"], [51, 0, 1, "c.fq_poly_rem", "fq_poly_rem"], [52, 0, 1, "c.fq_poly_remove", "fq_poly_remove"], [51, 0, 1, "c.fq_poly_reverse", "fq_poly_reverse"], [52, 0, 1, "c.fq_poly_roots", "fq_poly_roots"], [51, 0, 1, "c.fq_poly_scalar_addmul_fq", "fq_poly_scalar_addmul_fq"], [51, 0, 1, "c.fq_poly_scalar_div_fq", "fq_poly_scalar_div_fq"], [51, 0, 1, "c.fq_poly_scalar_mul_fq", "fq_poly_scalar_mul_fq"], [51, 0, 1, "c.fq_poly_scalar_submul_fq", "fq_poly_scalar_submul_fq"], [51, 0, 1, "c.fq_poly_set", "fq_poly_set"], [51, 0, 1, "c.fq_poly_set_coeff", "fq_poly_set_coeff"], [51, 0, 1, "c.fq_poly_set_coeff_fmpz", "fq_poly_set_coeff_fmpz"], [51, 0, 1, "c.fq_poly_set_fmpz_mod_poly", "fq_poly_set_fmpz_mod_poly"], [51, 0, 1, "c.fq_poly_set_fq", "fq_poly_set_fq"], [51, 0, 1, "c.fq_poly_set_nmod_poly", "fq_poly_set_nmod_poly"], [51, 0, 1, "c.fq_poly_set_trunc", "fq_poly_set_trunc"], [51, 0, 1, "c.fq_poly_shift_left", "fq_poly_shift_left"], [51, 0, 1, "c.fq_poly_shift_right", "fq_poly_shift_right"], [51, 0, 1, "c.fq_poly_sqr", "fq_poly_sqr"], [51, 0, 1, "c.fq_poly_sqr_KS", "fq_poly_sqr_KS"], [51, 0, 1, "c.fq_poly_sqr_classical", "fq_poly_sqr_classical"], [51, 0, 1, "c.fq_poly_sqr_reorder", "fq_poly_sqr_reorder"], [51, 0, 1, "c.fq_poly_sqrt", "fq_poly_sqrt"], [51, 0, 1, "c.fq_poly_sqrt_series", "fq_poly_sqrt_series"], [51, 3, 1, "c.fq_poly_struct", "fq_poly_struct"], [51, 0, 1, "c.fq_poly_sub", "fq_poly_sub"], [51, 0, 1, "c.fq_poly_sub_series", "fq_poly_sub_series"], [51, 0, 1, "c.fq_poly_swap", "fq_poly_swap"], [51, 3, 1, "c.fq_poly_t", "fq_poly_t"], [51, 0, 1, "c.fq_poly_truncate", "fq_poly_truncate"], [51, 0, 1, "c.fq_poly_xgcd", "fq_poly_xgcd"], [51, 0, 1, "c.fq_poly_xgcd_euclidean", "fq_poly_xgcd_euclidean"], [51, 0, 1, "c.fq_poly_xgcd_euclidean_f", "fq_poly_xgcd_euclidean_f"], [51, 0, 1, "c.fq_poly_zero", "fq_poly_zero"], [36, 0, 1, "c.fq_pow", "fq_pow"], [36, 0, 1, "c.fq_pow_ui", "fq_pow_ui"], [36, 0, 1, "c.fq_print", "fq_print"], [36, 0, 1, "c.fq_print_pretty", "fq_print_pretty"], [36, 0, 1, "c.fq_pth_root", "fq_pth_root"], [36, 0, 1, "c.fq_rand", "fq_rand"], [36, 0, 1, "c.fq_rand_not_zero", "fq_rand_not_zero"], [36, 0, 1, "c.fq_randtest", "fq_randtest"], [36, 0, 1, "c.fq_randtest_dense", "fq_randtest_dense"], [36, 0, 1, "c.fq_randtest_not_zero", "fq_randtest_not_zero"], [36, 0, 1, "c.fq_reduce", "fq_reduce"], [36, 0, 1, "c.fq_set", "fq_set"], [36, 0, 1, "c.fq_set_fmpz", "fq_set_fmpz"], [36, 0, 1, "c.fq_set_fmpz_mod_mat", "fq_set_fmpz_mod_mat"], [36, 0, 1, "c.fq_set_fmpz_mod_poly", "fq_set_fmpz_mod_poly"], [36, 0, 1, "c.fq_set_fmpz_poly", "fq_set_fmpz_poly"], [36, 0, 1, "c.fq_set_si", "fq_set_si"], [36, 0, 1, "c.fq_set_ui", "fq_set_ui"], [36, 0, 1, "c.fq_sqr", "fq_sqr"], [36, 0, 1, "c.fq_sqrt", "fq_sqrt"], [36, 3, 1, "c.fq_struct", "fq_struct"], [36, 0, 1, "c.fq_sub", "fq_sub"], [36, 0, 1, "c.fq_sub_one", "fq_sub_one"], [36, 0, 1, "c.fq_swap", "fq_swap"], [36, 3, 1, "c.fq_t", "fq_t"], [36, 0, 1, "c.fq_trace", "fq_trace"], [54, 0, 1, "c.fq_zech_add", "fq_zech_add"], [54, 0, 1, "c.fq_zech_bit_pack", "fq_zech_bit_pack"], [54, 0, 1, "c.fq_zech_bit_unpack", "fq_zech_bit_unpack"], [54, 0, 1, "c.fq_zech_clear", "fq_zech_clear"], [54, 0, 1, "c.fq_zech_ctx_clear", "fq_zech_ctx_clear"], [54, 0, 1, "c.fq_zech_ctx_degree", "fq_zech_ctx_degree"], [54, 0, 1, "c.fq_zech_ctx_fprint", "fq_zech_ctx_fprint"], [54, 0, 1, "c.fq_zech_ctx_init", "fq_zech_ctx_init"], [54, 0, 1, "c.fq_zech_ctx_init_conway", "fq_zech_ctx_init_conway"], [54, 0, 1, "c.fq_zech_ctx_init_fq_nmod_ctx", "fq_zech_ctx_init_fq_nmod_ctx"], [54, 0, 1, "c.fq_zech_ctx_init_fq_nmod_ctx_check", "fq_zech_ctx_init_fq_nmod_ctx_check"], [54, 0, 1, "c.fq_zech_ctx_init_modulus", "fq_zech_ctx_init_modulus"], [54, 0, 1, "c.fq_zech_ctx_init_modulus_check", "fq_zech_ctx_init_modulus_check"], [54, 0, 1, "c.fq_zech_ctx_init_random", "fq_zech_ctx_init_random"], [54, 0, 1, "c.fq_zech_ctx_modulus", "fq_zech_ctx_modulus"], [54, 0, 1, "c.fq_zech_ctx_order", "fq_zech_ctx_order"], [54, 0, 1, "c.fq_zech_ctx_order_ui", "fq_zech_ctx_order_ui"], [54, 0, 1, "c.fq_zech_ctx_prime", "fq_zech_ctx_prime"], [54, 0, 1, "c.fq_zech_ctx_print", "fq_zech_ctx_print"], [54, 0, 1, "c.fq_zech_ctx_randtest", "fq_zech_ctx_randtest"], [54, 0, 1, "c.fq_zech_ctx_randtest_reducible", "fq_zech_ctx_randtest_reducible"], [54, 3, 1, "c.fq_zech_ctx_struct", "fq_zech_ctx_struct"], [54, 3, 1, "c.fq_zech_ctx_t", "fq_zech_ctx_t"], [54, 0, 1, "c.fq_zech_div", "fq_zech_div"], [55, 0, 1, "c.fq_zech_embed_composition_matrix", "fq_zech_embed_composition_matrix"], [55, 0, 1, "c.fq_zech_embed_composition_matrix_sub", "fq_zech_embed_composition_matrix_sub"], [55, 0, 1, "c.fq_zech_embed_dual_to_mono_matrix", "fq_zech_embed_dual_to_mono_matrix"], [55, 0, 1, "c.fq_zech_embed_gens", "fq_zech_embed_gens"], [55, 0, 1, "c.fq_zech_embed_matrices", "fq_zech_embed_matrices"], [55, 0, 1, "c.fq_zech_embed_mono_to_dual_matrix", "fq_zech_embed_mono_to_dual_matrix"], [55, 0, 1, "c.fq_zech_embed_mul_matrix", "fq_zech_embed_mul_matrix"], [55, 0, 1, "c.fq_zech_embed_trace_matrix", "fq_zech_embed_trace_matrix"], [54, 0, 1, "c.fq_zech_equal", "fq_zech_equal"], [54, 0, 1, "c.fq_zech_fprint", "fq_zech_fprint"], [54, 0, 1, "c.fq_zech_fprint_pretty", "fq_zech_fprint_pretty"], [54, 0, 1, "c.fq_zech_frobenius", "fq_zech_frobenius"], [54, 0, 1, "c.fq_zech_gcdinv", "fq_zech_gcdinv"], [54, 0, 1, "c.fq_zech_gen", "fq_zech_gen"], [54, 0, 1, "c.fq_zech_get_fmpz", "fq_zech_get_fmpz"], [54, 0, 1, "c.fq_zech_get_fq_nmod", "fq_zech_get_fq_nmod"], [54, 0, 1, "c.fq_zech_get_nmod_mat", "fq_zech_get_nmod_mat"], [54, 0, 1, "c.fq_zech_get_nmod_poly", "fq_zech_get_nmod_poly"], [54, 0, 1, "c.fq_zech_get_str", "fq_zech_get_str"], [54, 0, 1, "c.fq_zech_get_str_pretty", "fq_zech_get_str_pretty"], [54, 0, 1, "c.fq_zech_init", "fq_zech_init"], [54, 0, 1, "c.fq_zech_init2", "fq_zech_init2"], [54, 0, 1, "c.fq_zech_inv", "fq_zech_inv"], [54, 0, 1, "c.fq_zech_is_invertible", "fq_zech_is_invertible"], [54, 0, 1, "c.fq_zech_is_invertible_f", "fq_zech_is_invertible_f"], [54, 0, 1, "c.fq_zech_is_one", "fq_zech_is_one"], [54, 0, 1, "c.fq_zech_is_primitive", "fq_zech_is_primitive"], [54, 0, 1, "c.fq_zech_is_square", "fq_zech_is_square"], [54, 0, 1, "c.fq_zech_is_zero", "fq_zech_is_zero"], [56, 0, 1, "c.fq_zech_mat_add", "fq_zech_mat_add"], [56, 0, 1, "c.fq_zech_mat_can_solve", "fq_zech_mat_can_solve"], [56, 0, 1, "c.fq_zech_mat_charpoly", "fq_zech_mat_charpoly"], [56, 0, 1, "c.fq_zech_mat_charpoly_danilevsky", "fq_zech_mat_charpoly_danilevsky"], [56, 0, 1, "c.fq_zech_mat_clear", "fq_zech_mat_clear"], [56, 0, 1, "c.fq_zech_mat_concat_horizontal", "fq_zech_mat_concat_horizontal"], [56, 0, 1, "c.fq_zech_mat_concat_vertical", "fq_zech_mat_concat_vertical"], [56, 0, 1, "c.fq_zech_mat_entry", "fq_zech_mat_entry"], [56, 0, 1, "c.fq_zech_mat_entry_set", "fq_zech_mat_entry_set"], [56, 0, 1, "c.fq_zech_mat_equal", "fq_zech_mat_equal"], [56, 0, 1, "c.fq_zech_mat_fprint", "fq_zech_mat_fprint"], [56, 0, 1, "c.fq_zech_mat_fprint_pretty", "fq_zech_mat_fprint_pretty"], [56, 0, 1, "c.fq_zech_mat_init", "fq_zech_mat_init"], [56, 0, 1, "c.fq_zech_mat_init_set", "fq_zech_mat_init_set"], [56, 0, 1, "c.fq_zech_mat_is_empty", "fq_zech_mat_is_empty"], [56, 0, 1, "c.fq_zech_mat_is_one", "fq_zech_mat_is_one"], [56, 0, 1, "c.fq_zech_mat_is_square", "fq_zech_mat_is_square"], [56, 0, 1, "c.fq_zech_mat_is_zero", "fq_zech_mat_is_zero"], [56, 0, 1, "c.fq_zech_mat_lu", "fq_zech_mat_lu"], [56, 0, 1, "c.fq_zech_mat_lu_classical", "fq_zech_mat_lu_classical"], [56, 0, 1, "c.fq_zech_mat_lu_recursive", "fq_zech_mat_lu_recursive"], [56, 0, 1, "c.fq_zech_mat_minpoly", "fq_zech_mat_minpoly"], [56, 0, 1, "c.fq_zech_mat_mul", "fq_zech_mat_mul"], [56, 0, 1, "c.fq_zech_mat_mul_KS", "fq_zech_mat_mul_KS"], [56, 0, 1, "c.fq_zech_mat_mul_classical", "fq_zech_mat_mul_classical"], [56, 0, 1, "c.fq_zech_mat_mul_vec", "fq_zech_mat_mul_vec"], [56, 0, 1, "c.fq_zech_mat_mul_vec_ptr", "fq_zech_mat_mul_vec_ptr"], [56, 0, 1, "c.fq_zech_mat_ncols", "fq_zech_mat_ncols"], [56, 0, 1, "c.fq_zech_mat_neg", "fq_zech_mat_neg"], [56, 0, 1, "c.fq_zech_mat_nrows", "fq_zech_mat_nrows"], [56, 0, 1, "c.fq_zech_mat_one", "fq_zech_mat_one"], [56, 0, 1, "c.fq_zech_mat_print", "fq_zech_mat_print"], [56, 0, 1, "c.fq_zech_mat_print_pretty", "fq_zech_mat_print_pretty"], [56, 0, 1, "c.fq_zech_mat_randops", "fq_zech_mat_randops"], [56, 0, 1, "c.fq_zech_mat_randpermdiag", "fq_zech_mat_randpermdiag"], [56, 0, 1, "c.fq_zech_mat_randrank", "fq_zech_mat_randrank"], [56, 0, 1, "c.fq_zech_mat_randtest", "fq_zech_mat_randtest"], [56, 0, 1, "c.fq_zech_mat_randtril", "fq_zech_mat_randtril"], [56, 0, 1, "c.fq_zech_mat_randtriu", "fq_zech_mat_randtriu"], [56, 0, 1, "c.fq_zech_mat_reduce_row", "fq_zech_mat_reduce_row"], [56, 0, 1, "c.fq_zech_mat_rref", "fq_zech_mat_rref"], [56, 0, 1, "c.fq_zech_mat_set", "fq_zech_mat_set"], [56, 0, 1, "c.fq_zech_mat_set_fmpz_mod_mat", "fq_zech_mat_set_fmpz_mod_mat"], [56, 0, 1, "c.fq_zech_mat_set_nmod_mat", "fq_zech_mat_set_nmod_mat"], [56, 0, 1, "c.fq_zech_mat_similarity", "fq_zech_mat_similarity"], [56, 0, 1, "c.fq_zech_mat_solve", "fq_zech_mat_solve"], [56, 0, 1, "c.fq_zech_mat_solve_tril", "fq_zech_mat_solve_tril"], [56, 0, 1, "c.fq_zech_mat_solve_tril_classical", "fq_zech_mat_solve_tril_classical"], [56, 0, 1, "c.fq_zech_mat_solve_tril_recursive", "fq_zech_mat_solve_tril_recursive"], [56, 0, 1, "c.fq_zech_mat_solve_triu", "fq_zech_mat_solve_triu"], [56, 0, 1, "c.fq_zech_mat_solve_triu_classical", "fq_zech_mat_solve_triu_classical"], [56, 0, 1, "c.fq_zech_mat_solve_triu_recursive", "fq_zech_mat_solve_triu_recursive"], [56, 3, 1, "c.fq_zech_mat_struct", "fq_zech_mat_struct"], [56, 0, 1, "c.fq_zech_mat_sub", "fq_zech_mat_sub"], [56, 0, 1, "c.fq_zech_mat_submul", "fq_zech_mat_submul"], [56, 0, 1, "c.fq_zech_mat_swap", "fq_zech_mat_swap"], [56, 0, 1, "c.fq_zech_mat_swap_entrywise", "fq_zech_mat_swap_entrywise"], [56, 3, 1, "c.fq_zech_mat_t", "fq_zech_mat_t"], [56, 0, 1, "c.fq_zech_mat_vec_mul", "fq_zech_mat_vec_mul"], [56, 0, 1, "c.fq_zech_mat_vec_mul_ptr", "fq_zech_mat_vec_mul_ptr"], [56, 0, 1, "c.fq_zech_mat_window_clear", "fq_zech_mat_window_clear"], [56, 0, 1, "c.fq_zech_mat_window_init", "fq_zech_mat_window_init"], [56, 0, 1, "c.fq_zech_mat_zero", "fq_zech_mat_zero"], [55, 0, 1, "c.fq_zech_modulus_derivative_inv", "fq_zech_modulus_derivative_inv"], [55, 0, 1, "c.fq_zech_modulus_pow_series_inv", "fq_zech_modulus_pow_series_inv"], [54, 0, 1, "c.fq_zech_mul", "fq_zech_mul"], [54, 0, 1, "c.fq_zech_mul_fmpz", "fq_zech_mul_fmpz"], [54, 0, 1, "c.fq_zech_mul_si", "fq_zech_mul_si"], [54, 0, 1, "c.fq_zech_mul_ui", "fq_zech_mul_ui"], [54, 0, 1, "c.fq_zech_multiplicative_order", "fq_zech_multiplicative_order"], [54, 0, 1, "c.fq_zech_neg", "fq_zech_neg"], [54, 0, 1, "c.fq_zech_norm", "fq_zech_norm"], [54, 0, 1, "c.fq_zech_one", "fq_zech_one"], [57, 0, 1, "c.fq_zech_poly_add", "fq_zech_poly_add"], [57, 0, 1, "c.fq_zech_poly_add_series", "fq_zech_poly_add_series"], [57, 0, 1, "c.fq_zech_poly_add_si", "fq_zech_poly_add_si"], [57, 0, 1, "c.fq_zech_poly_clear", "fq_zech_poly_clear"], [57, 0, 1, "c.fq_zech_poly_compose", "fq_zech_poly_compose"], [57, 0, 1, "c.fq_zech_poly_compose_divconquer", "fq_zech_poly_compose_divconquer"], [57, 0, 1, "c.fq_zech_poly_compose_horner", "fq_zech_poly_compose_horner"], [57, 0, 1, "c.fq_zech_poly_compose_mod", "fq_zech_poly_compose_mod"], [57, 0, 1, "c.fq_zech_poly_compose_mod_brent_kung", "fq_zech_poly_compose_mod_brent_kung"], [57, 0, 1, "c.fq_zech_poly_compose_mod_brent_kung_precomp_preinv", "fq_zech_poly_compose_mod_brent_kung_precomp_preinv"], [57, 0, 1, "c.fq_zech_poly_compose_mod_brent_kung_preinv", "fq_zech_poly_compose_mod_brent_kung_preinv"], [57, 0, 1, "c.fq_zech_poly_compose_mod_horner", "fq_zech_poly_compose_mod_horner"], [57, 0, 1, "c.fq_zech_poly_compose_mod_horner_preinv", "fq_zech_poly_compose_mod_horner_preinv"], [57, 0, 1, "c.fq_zech_poly_compose_mod_preinv", "fq_zech_poly_compose_mod_preinv"], [57, 0, 1, "c.fq_zech_poly_deflate", "fq_zech_poly_deflate"], [57, 0, 1, "c.fq_zech_poly_deflation", "fq_zech_poly_deflation"], [57, 0, 1, "c.fq_zech_poly_degree", "fq_zech_poly_degree"], [57, 0, 1, "c.fq_zech_poly_derivative", "fq_zech_poly_derivative"], [57, 0, 1, "c.fq_zech_poly_div_basecase", "fq_zech_poly_div_basecase"], [57, 0, 1, "c.fq_zech_poly_div_newton_n_preinv", "fq_zech_poly_div_newton_n_preinv"], [57, 0, 1, "c.fq_zech_poly_div_series", "fq_zech_poly_div_series"], [57, 0, 1, "c.fq_zech_poly_divides", "fq_zech_poly_divides"], [57, 0, 1, "c.fq_zech_poly_divrem", "fq_zech_poly_divrem"], [57, 0, 1, "c.fq_zech_poly_divrem_basecase", "fq_zech_poly_divrem_basecase"], [57, 0, 1, "c.fq_zech_poly_divrem_divconquer", "fq_zech_poly_divrem_divconquer"], [57, 0, 1, "c.fq_zech_poly_divrem_f", "fq_zech_poly_divrem_f"], [57, 0, 1, "c.fq_zech_poly_divrem_newton_n_preinv", "fq_zech_poly_divrem_newton_n_preinv"], [57, 0, 1, "c.fq_zech_poly_equal", "fq_zech_poly_equal"], [57, 0, 1, "c.fq_zech_poly_equal_fq_zech", "fq_zech_poly_equal_fq_zech"], [57, 0, 1, "c.fq_zech_poly_equal_trunc", "fq_zech_poly_equal_trunc"], [57, 0, 1, "c.fq_zech_poly_evaluate_fq_zech", "fq_zech_poly_evaluate_fq_zech"], [58, 0, 1, "c.fq_zech_poly_factor", "fq_zech_poly_factor"], [58, 0, 1, "c.fq_zech_poly_factor_berlekamp", "fq_zech_poly_factor_berlekamp"], [58, 0, 1, "c.fq_zech_poly_factor_cantor_zassenhaus", "fq_zech_poly_factor_cantor_zassenhaus"], [58, 0, 1, "c.fq_zech_poly_factor_clear", "fq_zech_poly_factor_clear"], [58, 0, 1, "c.fq_zech_poly_factor_concat", "fq_zech_poly_factor_concat"], [58, 0, 1, "c.fq_zech_poly_factor_distinct_deg", "fq_zech_poly_factor_distinct_deg"], [58, 0, 1, "c.fq_zech_poly_factor_equal_deg", "fq_zech_poly_factor_equal_deg"], [58, 0, 1, "c.fq_zech_poly_factor_equal_deg_prob", "fq_zech_poly_factor_equal_deg_prob"], [58, 0, 1, "c.fq_zech_poly_factor_fit_length", "fq_zech_poly_factor_fit_length"], [58, 0, 1, "c.fq_zech_poly_factor_init", "fq_zech_poly_factor_init"], [58, 0, 1, "c.fq_zech_poly_factor_insert", "fq_zech_poly_factor_insert"], [58, 0, 1, "c.fq_zech_poly_factor_kaltofen_shoup", "fq_zech_poly_factor_kaltofen_shoup"], [58, 0, 1, "c.fq_zech_poly_factor_pow", "fq_zech_poly_factor_pow"], [58, 0, 1, "c.fq_zech_poly_factor_print", "fq_zech_poly_factor_print"], [58, 0, 1, "c.fq_zech_poly_factor_print_pretty", "fq_zech_poly_factor_print_pretty"], [58, 0, 1, "c.fq_zech_poly_factor_realloc", "fq_zech_poly_factor_realloc"], [58, 0, 1, "c.fq_zech_poly_factor_set", "fq_zech_poly_factor_set"], [58, 0, 1, "c.fq_zech_poly_factor_split_single", "fq_zech_poly_factor_split_single"], [58, 0, 1, "c.fq_zech_poly_factor_squarefree", "fq_zech_poly_factor_squarefree"], [58, 3, 1, "c.fq_zech_poly_factor_struct", "fq_zech_poly_factor_struct"], [58, 3, 1, "c.fq_zech_poly_factor_t", "fq_zech_poly_factor_t"], [58, 0, 1, "c.fq_zech_poly_factor_with_berlekamp", "fq_zech_poly_factor_with_berlekamp"], [58, 0, 1, "c.fq_zech_poly_factor_with_cantor_zassenhaus", "fq_zech_poly_factor_with_cantor_zassenhaus"], [58, 0, 1, "c.fq_zech_poly_factor_with_kaltofen_shoup", "fq_zech_poly_factor_with_kaltofen_shoup"], [57, 0, 1, "c.fq_zech_poly_fit_length", "fq_zech_poly_fit_length"], [57, 0, 1, "c.fq_zech_poly_fprint", "fq_zech_poly_fprint"], [57, 0, 1, "c.fq_zech_poly_fprint_pretty", "fq_zech_poly_fprint_pretty"], [57, 0, 1, "c.fq_zech_poly_gcd", "fq_zech_poly_gcd"], [57, 0, 1, "c.fq_zech_poly_gcd_euclidean", "fq_zech_poly_gcd_euclidean"], [57, 0, 1, "c.fq_zech_poly_gcd_euclidean_f", "fq_zech_poly_gcd_euclidean_f"], [57, 0, 1, "c.fq_zech_poly_gcd_hgcd", "fq_zech_poly_gcd_hgcd"], [57, 0, 1, "c.fq_zech_poly_gen", "fq_zech_poly_gen"], [57, 0, 1, "c.fq_zech_poly_get_coeff", "fq_zech_poly_get_coeff"], [57, 0, 1, "c.fq_zech_poly_get_str", "fq_zech_poly_get_str"], [57, 0, 1, "c.fq_zech_poly_get_str_pretty", "fq_zech_poly_get_str_pretty"], [57, 0, 1, "c.fq_zech_poly_hamming_weight", "fq_zech_poly_hamming_weight"], [57, 0, 1, "c.fq_zech_poly_inflate", "fq_zech_poly_inflate"], [57, 0, 1, "c.fq_zech_poly_init", "fq_zech_poly_init"], [57, 0, 1, "c.fq_zech_poly_init2", "fq_zech_poly_init2"], [57, 0, 1, "c.fq_zech_poly_inv_series", "fq_zech_poly_inv_series"], [57, 0, 1, "c.fq_zech_poly_inv_series_newton", "fq_zech_poly_inv_series_newton"], [57, 0, 1, "c.fq_zech_poly_invsqrt_series", "fq_zech_poly_invsqrt_series"], [57, 0, 1, "c.fq_zech_poly_is_gen", "fq_zech_poly_is_gen"], [58, 0, 1, "c.fq_zech_poly_is_irreducible", "fq_zech_poly_is_irreducible"], [58, 0, 1, "c.fq_zech_poly_is_irreducible_ben_or", "fq_zech_poly_is_irreducible_ben_or"], [58, 0, 1, "c.fq_zech_poly_is_irreducible_ddf", "fq_zech_poly_is_irreducible_ddf"], [57, 0, 1, "c.fq_zech_poly_is_one", "fq_zech_poly_is_one"], [58, 0, 1, "c.fq_zech_poly_is_squarefree", "fq_zech_poly_is_squarefree"], [57, 0, 1, "c.fq_zech_poly_is_unit", "fq_zech_poly_is_unit"], [57, 0, 1, "c.fq_zech_poly_is_zero", "fq_zech_poly_is_zero"], [58, 0, 1, "c.fq_zech_poly_iterated_frobenius_preinv", "fq_zech_poly_iterated_frobenius_preinv"], [57, 0, 1, "c.fq_zech_poly_lead", "fq_zech_poly_lead"], [57, 0, 1, "c.fq_zech_poly_length", "fq_zech_poly_length"], [57, 0, 1, "c.fq_zech_poly_make_monic", "fq_zech_poly_make_monic"], [57, 0, 1, "c.fq_zech_poly_mul", "fq_zech_poly_mul"], [57, 0, 1, "c.fq_zech_poly_mul_KS", "fq_zech_poly_mul_KS"], [57, 0, 1, "c.fq_zech_poly_mul_classical", "fq_zech_poly_mul_classical"], [57, 0, 1, "c.fq_zech_poly_mul_reorder", "fq_zech_poly_mul_reorder"], [57, 0, 1, "c.fq_zech_poly_mulhigh", "fq_zech_poly_mulhigh"], [57, 0, 1, "c.fq_zech_poly_mulhigh_classical", "fq_zech_poly_mulhigh_classical"], [57, 0, 1, "c.fq_zech_poly_mullow", "fq_zech_poly_mullow"], [57, 0, 1, "c.fq_zech_poly_mullow_KS", "fq_zech_poly_mullow_KS"], [57, 0, 1, "c.fq_zech_poly_mullow_classical", "fq_zech_poly_mullow_classical"], [57, 0, 1, "c.fq_zech_poly_mulmod", "fq_zech_poly_mulmod"], [57, 0, 1, "c.fq_zech_poly_mulmod_preinv", "fq_zech_poly_mulmod_preinv"], [57, 0, 1, "c.fq_zech_poly_neg", "fq_zech_poly_neg"], [57, 0, 1, "c.fq_zech_poly_one", "fq_zech_poly_one"], [57, 0, 1, "c.fq_zech_poly_pow", "fq_zech_poly_pow"], [57, 0, 1, "c.fq_zech_poly_pow_trunc", "fq_zech_poly_pow_trunc"], [57, 0, 1, "c.fq_zech_poly_pow_trunc_binexp", "fq_zech_poly_pow_trunc_binexp"], [57, 0, 1, "c.fq_zech_poly_powmod_fmpz_binexp", "fq_zech_poly_powmod_fmpz_binexp"], [57, 0, 1, "c.fq_zech_poly_powmod_fmpz_binexp_preinv", "fq_zech_poly_powmod_fmpz_binexp_preinv"], [57, 0, 1, "c.fq_zech_poly_powmod_fmpz_sliding_preinv", "fq_zech_poly_powmod_fmpz_sliding_preinv"], [57, 0, 1, "c.fq_zech_poly_powmod_ui_binexp", "fq_zech_poly_powmod_ui_binexp"], [57, 0, 1, "c.fq_zech_poly_powmod_ui_binexp_preinv", "fq_zech_poly_powmod_ui_binexp_preinv"], [57, 0, 1, "c.fq_zech_poly_powmod_x_fmpz_preinv", "fq_zech_poly_powmod_x_fmpz_preinv"], [57, 0, 1, "c.fq_zech_poly_precompute_matrix", "fq_zech_poly_precompute_matrix"], [57, 0, 1, "c.fq_zech_poly_print", "fq_zech_poly_print"], [57, 0, 1, "c.fq_zech_poly_print_pretty", "fq_zech_poly_print_pretty"], [57, 0, 1, "c.fq_zech_poly_randtest", "fq_zech_poly_randtest"], [57, 0, 1, "c.fq_zech_poly_randtest_irreducible", "fq_zech_poly_randtest_irreducible"], [57, 0, 1, "c.fq_zech_poly_randtest_monic", "fq_zech_poly_randtest_monic"], [57, 0, 1, "c.fq_zech_poly_randtest_not_zero", "fq_zech_poly_randtest_not_zero"], [57, 0, 1, "c.fq_zech_poly_realloc", "fq_zech_poly_realloc"], [57, 0, 1, "c.fq_zech_poly_rem", "fq_zech_poly_rem"], [58, 0, 1, "c.fq_zech_poly_remove", "fq_zech_poly_remove"], [57, 0, 1, "c.fq_zech_poly_reverse", "fq_zech_poly_reverse"], [58, 0, 1, "c.fq_zech_poly_roots", "fq_zech_poly_roots"], [57, 0, 1, "c.fq_zech_poly_scalar_addmul_fq_zech", "fq_zech_poly_scalar_addmul_fq_zech"], [57, 0, 1, "c.fq_zech_poly_scalar_div_fq", "fq_zech_poly_scalar_div_fq"], [57, 0, 1, "c.fq_zech_poly_scalar_mul_fq_zech", "fq_zech_poly_scalar_mul_fq_zech"], [57, 0, 1, "c.fq_zech_poly_scalar_submul_fq_zech", "fq_zech_poly_scalar_submul_fq_zech"], [57, 0, 1, "c.fq_zech_poly_set", "fq_zech_poly_set"], [57, 0, 1, "c.fq_zech_poly_set_coeff", "fq_zech_poly_set_coeff"], [57, 0, 1, "c.fq_zech_poly_set_coeff_fmpz", "fq_zech_poly_set_coeff_fmpz"], [57, 0, 1, "c.fq_zech_poly_set_fmpz_mod_poly", "fq_zech_poly_set_fmpz_mod_poly"], [57, 0, 1, "c.fq_zech_poly_set_fq_zech", "fq_zech_poly_set_fq_zech"], [57, 0, 1, "c.fq_zech_poly_set_nmod_poly", "fq_zech_poly_set_nmod_poly"], [57, 0, 1, "c.fq_zech_poly_set_trunc", "fq_zech_poly_set_trunc"], [57, 0, 1, "c.fq_zech_poly_shift_left", "fq_zech_poly_shift_left"], [57, 0, 1, "c.fq_zech_poly_shift_right", "fq_zech_poly_shift_right"], [57, 0, 1, "c.fq_zech_poly_sqr", "fq_zech_poly_sqr"], [57, 0, 1, "c.fq_zech_poly_sqr_KS", "fq_zech_poly_sqr_KS"], [57, 0, 1, "c.fq_zech_poly_sqr_classical", "fq_zech_poly_sqr_classical"], [57, 0, 1, "c.fq_zech_poly_sqrt", "fq_zech_poly_sqrt"], [57, 0, 1, "c.fq_zech_poly_sqrt_series", "fq_zech_poly_sqrt_series"], [57, 3, 1, "c.fq_zech_poly_struct", "fq_zech_poly_struct"], [57, 0, 1, "c.fq_zech_poly_sub", "fq_zech_poly_sub"], [57, 0, 1, "c.fq_zech_poly_sub_series", "fq_zech_poly_sub_series"], [57, 0, 1, "c.fq_zech_poly_swap", "fq_zech_poly_swap"], [57, 3, 1, "c.fq_zech_poly_t", "fq_zech_poly_t"], [57, 0, 1, "c.fq_zech_poly_truncate", "fq_zech_poly_truncate"], [57, 0, 1, "c.fq_zech_poly_xgcd", "fq_zech_poly_xgcd"], [57, 0, 1, "c.fq_zech_poly_xgcd_euclidean", "fq_zech_poly_xgcd_euclidean"], [57, 0, 1, "c.fq_zech_poly_xgcd_euclidean_f", "fq_zech_poly_xgcd_euclidean_f"], [57, 0, 1, "c.fq_zech_poly_zero", "fq_zech_poly_zero"], [54, 0, 1, "c.fq_zech_pow", "fq_zech_pow"], [54, 0, 1, "c.fq_zech_pow_ui", "fq_zech_pow_ui"], [54, 0, 1, "c.fq_zech_print", "fq_zech_print"], [54, 0, 1, "c.fq_zech_print_pretty", "fq_zech_print_pretty"], [54, 0, 1, "c.fq_zech_pth_root", "fq_zech_pth_root"], [54, 0, 1, "c.fq_zech_rand", "fq_zech_rand"], [54, 0, 1, "c.fq_zech_rand_not_zero", "fq_zech_rand_not_zero"], [54, 0, 1, "c.fq_zech_randtest", "fq_zech_randtest"], [54, 0, 1, "c.fq_zech_randtest_dense", "fq_zech_randtest_dense"], [54, 0, 1, "c.fq_zech_randtest_not_zero", "fq_zech_randtest_not_zero"], [54, 0, 1, "c.fq_zech_reduce", "fq_zech_reduce"], [54, 0, 1, "c.fq_zech_set", "fq_zech_set"], [54, 0, 1, "c.fq_zech_set_fmpz", "fq_zech_set_fmpz"], [54, 0, 1, "c.fq_zech_set_fq_nmod", "fq_zech_set_fq_nmod"], [54, 0, 1, "c.fq_zech_set_nmod_mat", "fq_zech_set_nmod_mat"], [54, 0, 1, "c.fq_zech_set_nmod_poly", "fq_zech_set_nmod_poly"], [54, 0, 1, "c.fq_zech_set_si", "fq_zech_set_si"], [54, 0, 1, "c.fq_zech_set_ui", "fq_zech_set_ui"], [54, 0, 1, "c.fq_zech_sqr", "fq_zech_sqr"], [54, 0, 1, "c.fq_zech_sqrt", "fq_zech_sqrt"], [54, 3, 1, "c.fq_zech_struct", "fq_zech_struct"], [54, 0, 1, "c.fq_zech_sub", "fq_zech_sub"], [54, 0, 1, "c.fq_zech_sub_one", "fq_zech_sub_one"], [54, 0, 1, "c.fq_zech_swap", "fq_zech_swap"], [54, 3, 1, "c.fq_zech_t", "fq_zech_t"], [54, 0, 1, "c.fq_zech_trace", "fq_zech_trace"], [54, 0, 1, "c.fq_zech_zero", "fq_zech_zero"], [36, 0, 1, "c.fq_zero", "fq_zero"], [85, 0, 1, "c.get_clock", "get_clock"], [85, 0, 1, "c.get_memory_usage", "get_memory_usage"], [9, 0, 1, "c.ifft_butterfly", "ifft_butterfly"], [9, 0, 1, "c.ifft_butterfly_sqrt2", "ifft_butterfly_sqrt2"], [9, 0, 1, "c.ifft_butterfly_twiddle", "ifft_butterfly_twiddle"], [9, 0, 1, "c.ifft_mfa_truncate_sqrt2", "ifft_mfa_truncate_sqrt2"], [9, 0, 1, "c.ifft_mfa_truncate_sqrt2_outer", "ifft_mfa_truncate_sqrt2_outer"], [9, 0, 1, "c.ifft_negacyclic", "ifft_negacyclic"], [9, 0, 1, "c.ifft_radix2", "ifft_radix2"], [9, 0, 1, "c.ifft_radix2_twiddle", "ifft_radix2_twiddle"], [9, 0, 1, "c.ifft_truncate", "ifft_truncate"], [9, 0, 1, "c.ifft_truncate1", "ifft_truncate1"], [9, 0, 1, "c.ifft_truncate1_twiddle", "ifft_truncate1_twiddle"], [9, 0, 1, "c.ifft_truncate_sqrt2", "ifft_truncate_sqrt2"], [63, 2, 1, "c.invert_limb", "invert_limb"], [66, 0, 1, "c.mpf_mat_approx_equal", "mpf_mat_approx_equal"], [66, 0, 1, "c.mpf_mat_clear", "mpf_mat_clear"], [66, 0, 1, "c.mpf_mat_entry", "mpf_mat_entry"], [66, 0, 1, "c.mpf_mat_equal", "mpf_mat_equal"], [66, 0, 1, "c.mpf_mat_gso", "mpf_mat_gso"], [66, 0, 1, "c.mpf_mat_init", "mpf_mat_init"], [66, 0, 1, "c.mpf_mat_is_empty", "mpf_mat_is_empty"], [66, 0, 1, "c.mpf_mat_is_square", "mpf_mat_is_square"], [66, 0, 1, "c.mpf_mat_is_zero", "mpf_mat_is_zero"], [66, 0, 1, "c.mpf_mat_mul", "mpf_mat_mul"], [66, 0, 1, "c.mpf_mat_one", "mpf_mat_one"], [66, 0, 1, "c.mpf_mat_print", "mpf_mat_print"], [66, 0, 1, "c.mpf_mat_qr", "mpf_mat_qr"], [66, 0, 1, "c.mpf_mat_randtest", "mpf_mat_randtest"], [66, 0, 1, "c.mpf_mat_set", "mpf_mat_set"], [66, 0, 1, "c.mpf_mat_swap", "mpf_mat_swap"], [66, 0, 1, "c.mpf_mat_swap_entrywise", "mpf_mat_swap_entrywise"], [66, 0, 1, "c.mpf_mat_zero", "mpf_mat_zero"], [68, 0, 1, "c.mpfr_mat_clear", "mpfr_mat_clear"], [68, 0, 1, "c.mpfr_mat_entry", "mpfr_mat_entry"], [68, 0, 1, "c.mpfr_mat_equal", "mpfr_mat_equal"], [68, 0, 1, "c.mpfr_mat_init", "mpfr_mat_init"], [68, 0, 1, "c.mpfr_mat_mul_classical", "mpfr_mat_mul_classical"], [68, 0, 1, "c.mpfr_mat_randtest", "mpfr_mat_randtest"], [68, 0, 1, "c.mpfr_mat_set", "mpfr_mat_set"], [68, 0, 1, "c.mpfr_mat_swap", "mpfr_mat_swap"], [68, 0, 1, "c.mpfr_mat_swap_entrywise", "mpfr_mat_swap_entrywise"], [68, 0, 1, "c.mpfr_mat_zero", "mpfr_mat_zero"], [9, 0, 1, "c.mpn_addmod_2expp1_1", "mpn_addmod_2expp1_1"], [9, 0, 1, "c.mpn_div_2expmod_2expp1", "mpn_div_2expmod_2expp1"], [9, 0, 1, "c.mpn_mul_2expmod_2expp1", "mpn_mul_2expmod_2expp1"], [9, 0, 1, "c.mpn_negmod_2expp1", "mpn_negmod_2expp1"], [9, 0, 1, "c.mpn_normmod_2expp1", "mpn_normmod_2expp1"], [71, 0, 1, "c.mpoly_ctx_clear", "mpoly_ctx_clear"], [71, 0, 1, "c.mpoly_ctx_init", "mpoly_ctx_init"], [71, 0, 1, "c.mpoly_ctx_init_rand", "mpoly_ctx_init_rand"], [71, 3, 1, "c.mpoly_ctx_struct", "mpoly_ctx_struct"], [71, 3, 1, "c.mpoly_ctx_t", "mpoly_ctx_t"], [71, 0, 1, "c.mpoly_exp_bits_required_ffmpz", "mpoly_exp_bits_required_ffmpz"], [71, 0, 1, "c.mpoly_exp_bits_required_pfmpz", "mpoly_exp_bits_required_pfmpz"], [71, 0, 1, "c.mpoly_exp_bits_required_ui", "mpoly_exp_bits_required_ui"], [71, 0, 1, "c.mpoly_get_cmpmask", "mpoly_get_cmpmask"], [71, 0, 1, "c.mpoly_get_monomial_ffmpz", "mpoly_get_monomial_ffmpz"], [71, 0, 1, "c.mpoly_get_monomial_pfmpz", "mpoly_get_monomial_pfmpz"], [71, 0, 1, "c.mpoly_get_monomial_ui", "mpoly_get_monomial_ui"], [71, 0, 1, "c.mpoly_main_variable_terms1", "mpoly_main_variable_terms1"], [71, 0, 1, "c.mpoly_max_degrees_tight", "mpoly_max_degrees_tight"], [71, 0, 1, "c.mpoly_max_fields_fmpz", "mpoly_max_fields_fmpz"], [71, 0, 1, "c.mpoly_max_fields_ui_sp", "mpoly_max_fields_ui_sp"], [71, 0, 1, "c.mpoly_monomial_add", "mpoly_monomial_add"], [71, 0, 1, "c.mpoly_monomial_add_mp", "mpoly_monomial_add_mp"], [71, 0, 1, "c.mpoly_monomial_cmp", "mpoly_monomial_cmp"], [71, 0, 1, "c.mpoly_monomial_divides", "mpoly_monomial_divides"], [71, 0, 1, "c.mpoly_monomial_divides1", "mpoly_monomial_divides1"], [71, 0, 1, "c.mpoly_monomial_divides_mp", "mpoly_monomial_divides_mp"], [71, 0, 1, "c.mpoly_monomial_divides_tight", "mpoly_monomial_divides_tight"], [71, 0, 1, "c.mpoly_monomial_equal", "mpoly_monomial_equal"], [71, 0, 1, "c.mpoly_monomial_exists", "mpoly_monomial_exists"], [71, 0, 1, "c.mpoly_monomial_gt", "mpoly_monomial_gt"], [71, 0, 1, "c.mpoly_monomial_is_zero", "mpoly_monomial_is_zero"], [71, 0, 1, "c.mpoly_monomial_lt", "mpoly_monomial_lt"], [71, 0, 1, "c.mpoly_monomial_mul_ui", "mpoly_monomial_mul_ui"], [71, 0, 1, "c.mpoly_monomial_overflows", "mpoly_monomial_overflows"], [71, 0, 1, "c.mpoly_monomial_overflows1", "mpoly_monomial_overflows1"], [71, 0, 1, "c.mpoly_monomial_overflows_mp", "mpoly_monomial_overflows_mp"], [71, 0, 1, "c.mpoly_monomial_set", "mpoly_monomial_set"], [71, 0, 1, "c.mpoly_monomial_sub", "mpoly_monomial_sub"], [71, 0, 1, "c.mpoly_monomial_sub_mp", "mpoly_monomial_sub_mp"], [71, 0, 1, "c.mpoly_monomial_swap", "mpoly_monomial_swap"], [71, 0, 1, "c.mpoly_ordering_isdeg", "mpoly_ordering_isdeg"], [71, 0, 1, "c.mpoly_ordering_isrev", "mpoly_ordering_isrev"], [71, 0, 1, "c.mpoly_ordering_print", "mpoly_ordering_print"], [71, 0, 1, "c.mpoly_ordering_randtest", "mpoly_ordering_randtest"], [71, 0, 1, "c.mpoly_pack_monomials_tight", "mpoly_pack_monomials_tight"], [71, 0, 1, "c.mpoly_pack_vec_fmpz", "mpoly_pack_vec_fmpz"], [71, 0, 1, "c.mpoly_pack_vec_ui", "mpoly_pack_vec_ui"], [71, 0, 1, "c.mpoly_repack_monomials", "mpoly_repack_monomials"], [71, 0, 1, "c.mpoly_search_monomials", "mpoly_search_monomials"], [71, 0, 1, "c.mpoly_set_monomial_ffmpz", "mpoly_set_monomial_ffmpz"], [71, 0, 1, "c.mpoly_set_monomial_pfmpz", "mpoly_set_monomial_pfmpz"], [71, 0, 1, "c.mpoly_set_monomial_ui", "mpoly_set_monomial_ui"], [71, 0, 1, "c.mpoly_term_exp_fits_si", "mpoly_term_exp_fits_si"], [71, 0, 1, "c.mpoly_term_exp_fits_ui", "mpoly_term_exp_fits_ui"], [71, 0, 1, "c.mpoly_unpack_monomials_tight", "mpoly_unpack_monomials_tight"], [71, 0, 1, "c.mpoly_unpack_vec_fmpz", "mpoly_unpack_vec_fmpz"], [71, 0, 1, "c.mpoly_unpack_vec_ui", "mpoly_unpack_vec_ui"], [9, 0, 1, "c.mul_mfa_truncate_sqrt2", "mul_mfa_truncate_sqrt2"], [9, 0, 1, "c.mul_truncate_sqrt2", "mul_truncate_sqrt2"], [91, 0, 1, "c.n_CRT", "n_CRT"], [91, 0, 1, "c.n_addmod", "n_addmod"], [91, 0, 1, "c.n_cbrt", "n_cbrt"], [91, 0, 1, "c.n_cbrt_binary_search", "n_cbrt_binary_search"], [91, 0, 1, "c.n_cbrt_chebyshev_approx", "n_cbrt_chebyshev_approx"], [91, 0, 1, "c.n_cbrt_newton_iteration", "n_cbrt_newton_iteration"], [91, 0, 1, "c.n_cbrtrem", "n_cbrtrem"], [91, 0, 1, "c.n_cleanup_primes", "n_cleanup_primes"], [91, 0, 1, "c.n_clog", "n_clog"], [91, 0, 1, "c.n_clog_2exp", "n_clog_2exp"], [91, 0, 1, "c.n_compute_primes", "n_compute_primes"], [91, 0, 1, "c.n_discrete_log_bsgs", "n_discrete_log_bsgs"], [91, 0, 1, "c.n_div2_preinv", "n_div2_preinv"], [91, 0, 1, "c.n_divides", "n_divides"], [91, 0, 1, "c.n_divrem2_precomp", "n_divrem2_precomp"], [91, 0, 1, "c.n_divrem2_preinv", "n_divrem2_preinv"], [91, 0, 1, "c.n_euler_phi", "n_euler_phi"], [91, 0, 1, "c.n_factor", "n_factor"], [91, 0, 1, "c.n_factor_SQUFOF", "n_factor_SQUFOF"], [91, 0, 1, "c.n_factor_ecm", "n_factor_ecm"], [91, 0, 1, "c.n_factor_ecm_add", "n_factor_ecm_add"], [91, 0, 1, "c.n_factor_ecm_double", "n_factor_ecm_double"], [91, 0, 1, "c.n_factor_ecm_mul_montgomery_ladder", "n_factor_ecm_mul_montgomery_ladder"], [91, 0, 1, "c.n_factor_ecm_select_curve", "n_factor_ecm_select_curve"], [91, 0, 1, "c.n_factor_ecm_stage_I", "n_factor_ecm_stage_I"], [91, 0, 1, "c.n_factor_ecm_stage_II", "n_factor_ecm_stage_II"], [91, 0, 1, "c.n_factor_insert", "n_factor_insert"], [91, 0, 1, "c.n_factor_lehman", "n_factor_lehman"], [91, 0, 1, "c.n_factor_one_line", "n_factor_one_line"], [91, 0, 1, "c.n_factor_partial", "n_factor_partial"], [91, 0, 1, "c.n_factor_pollard_brent", "n_factor_pollard_brent"], [91, 0, 1, "c.n_factor_pollard_brent_single", "n_factor_pollard_brent_single"], [91, 0, 1, "c.n_factor_power235", "n_factor_power235"], [91, 0, 1, "c.n_factor_pp1", "n_factor_pp1"], [91, 0, 1, "c.n_factor_pp1_wrapper", "n_factor_pp1_wrapper"], [91, 0, 1, "c.n_factor_trial", "n_factor_trial"], [91, 0, 1, "c.n_factor_trial_partial", "n_factor_trial_partial"], [91, 0, 1, "c.n_factor_trial_range", "n_factor_trial_range"], [91, 0, 1, "c.n_factorial_fast_mod2_preinv", "n_factorial_fast_mod2_preinv"], [91, 0, 1, "c.n_factorial_mod2_preinv", "n_factorial_mod2_preinv"], [91, 0, 1, "c.n_flog", "n_flog"], [91, 0, 1, "c.n_gcd", "n_gcd"], [91, 0, 1, "c.n_gcdinv", "n_gcdinv"], [91, 0, 1, "c.n_invmod", "n_invmod"], [91, 0, 1, "c.n_is_oddprime_binary", "n_is_oddprime_binary"], [91, 0, 1, "c.n_is_oddprime_small", "n_is_oddprime_small"], [91, 0, 1, "c.n_is_perfect_power", "n_is_perfect_power"], [91, 0, 1, "c.n_is_perfect_power235", "n_is_perfect_power235"], [91, 0, 1, "c.n_is_prime", "n_is_prime"], [91, 0, 1, "c.n_is_prime_pocklington", "n_is_prime_pocklington"], [91, 0, 1, "c.n_is_prime_pseudosquare", "n_is_prime_pseudosquare"], [91, 0, 1, "c.n_is_probabprime", "n_is_probabprime"], [91, 0, 1, "c.n_is_probabprime_BPSW", "n_is_probabprime_BPSW"], [91, 0, 1, "c.n_is_probabprime_fermat", "n_is_probabprime_fermat"], [91, 0, 1, "c.n_is_probabprime_fibonacci", "n_is_probabprime_fibonacci"], [91, 0, 1, "c.n_is_probabprime_lucas", "n_is_probabprime_lucas"], [91, 0, 1, "c.n_is_square", "n_is_square"], [91, 0, 1, "c.n_is_squarefree", "n_is_squarefree"], [91, 0, 1, "c.n_is_strong_probabprime2_preinv", "n_is_strong_probabprime2_preinv"], [91, 0, 1, "c.n_is_strong_probabprime_precomp", "n_is_strong_probabprime_precomp"], [91, 0, 1, "c.n_jacobi", "n_jacobi"], [91, 0, 1, "c.n_jacobi_unsigned", "n_jacobi_unsigned"], [91, 0, 1, "c.n_ll_mod_preinv", "n_ll_mod_preinv"], [91, 0, 1, "c.n_lll_mod_preinv", "n_lll_mod_preinv"], [91, 0, 1, "c.n_mod2_precomp", "n_mod2_precomp"], [91, 0, 1, "c.n_mod2_preinv", "n_mod2_preinv"], [91, 0, 1, "c.n_mod_precomp", "n_mod_precomp"], [91, 0, 1, "c.n_moebius_mu", "n_moebius_mu"], [91, 0, 1, "c.n_moebius_mu_vec", "n_moebius_mu_vec"], [91, 0, 1, "c.n_mulmod2", "n_mulmod2"], [91, 0, 1, "c.n_mulmod2_preinv", "n_mulmod2_preinv"], [91, 0, 1, "c.n_mulmod_precomp", "n_mulmod_precomp"], [91, 0, 1, "c.n_mulmod_precomp_shoup", "n_mulmod_precomp_shoup"], [91, 0, 1, "c.n_mulmod_preinv", "n_mulmod_preinv"], [91, 0, 1, "c.n_mulmod_shoup", "n_mulmod_shoup"], [91, 0, 1, "c.n_nextprime", "n_nextprime"], [91, 0, 1, "c.n_nth_prime", "n_nth_prime"], [91, 0, 1, "c.n_nth_prime_bounds", "n_nth_prime_bounds"], [91, 0, 1, "c.n_pow", "n_pow"], [91, 0, 1, "c.n_powmod", "n_powmod"], [91, 0, 1, "c.n_powmod2", "n_powmod2"], [91, 0, 1, "c.n_powmod2_fmpz_preinv", "n_powmod2_fmpz_preinv"], [91, 0, 1, "c.n_powmod2_preinv", "n_powmod2_preinv"], [91, 0, 1, "c.n_powmod2_ui_preinv", "n_powmod2_ui_preinv"], [91, 0, 1, "c.n_powmod_precomp", "n_powmod_precomp"], [91, 0, 1, "c.n_powmod_ui_precomp", "n_powmod_ui_precomp"], [91, 0, 1, "c.n_precompute_inverse", "n_precompute_inverse"], [91, 0, 1, "c.n_preinvert_limb", "n_preinvert_limb"], [91, 0, 1, "c.n_prime_inverses_arr_readonly", "n_prime_inverses_arr_readonly"], [91, 0, 1, "c.n_prime_pi", "n_prime_pi"], [91, 0, 1, "c.n_prime_pi_bounds", "n_prime_pi_bounds"], [91, 0, 1, "c.n_primes_arr_readonly", "n_primes_arr_readonly"], [91, 0, 1, "c.n_primes_clear", "n_primes_clear"], [91, 0, 1, "c.n_primes_extend_small", "n_primes_extend_small"], [91, 0, 1, "c.n_primes_init", "n_primes_init"], [91, 0, 1, "c.n_primes_jump_after", "n_primes_jump_after"], [91, 0, 1, "c.n_primes_next", "n_primes_next"], [91, 0, 1, "c.n_primes_sieve_range", "n_primes_sieve_range"], [91, 0, 1, "c.n_primitive_root_prime", "n_primitive_root_prime"], [91, 0, 1, "c.n_primitive_root_prime_prefactor", "n_primitive_root_prime_prefactor"], [91, 0, 1, "c.n_randbits", "n_randbits"], [91, 0, 1, "c.n_randint", "n_randint"], [91, 0, 1, "c.n_randlimb", "n_randlimb"], [91, 0, 1, "c.n_randprime", "n_randprime"], [91, 0, 1, "c.n_randtest", "n_randtest"], [91, 0, 1, "c.n_randtest_bits", "n_randtest_bits"], [91, 0, 1, "c.n_randtest_not_zero", "n_randtest_not_zero"], [91, 0, 1, "c.n_randtest_prime", "n_randtest_prime"], [91, 0, 1, "c.n_remove", "n_remove"], [91, 0, 1, "c.n_remove2_precomp", "n_remove2_precomp"], [91, 0, 1, "c.n_revbin", "n_revbin"], [91, 0, 1, "c.n_rootrem", "n_rootrem"], [91, 0, 1, "c.n_sizeinbase", "n_sizeinbase"], [91, 0, 1, "c.n_sqrt", "n_sqrt"], [91, 0, 1, "c.n_sqrtmod", "n_sqrtmod"], [91, 0, 1, "c.n_sqrtmod_2pow", "n_sqrtmod_2pow"], [91, 0, 1, "c.n_sqrtmod_primepow", "n_sqrtmod_primepow"], [91, 0, 1, "c.n_sqrtmodn", "n_sqrtmodn"], [91, 0, 1, "c.n_sqrtrem", "n_sqrtrem"], [91, 0, 1, "c.n_submod", "n_submod"], [91, 0, 1, "c.n_urandint", "n_urandint"], [91, 0, 1, "c.n_xgcd", "n_xgcd"], [72, 0, 1, "c.nmod_add", "nmod_add"], [76, 0, 1, "c.nmod_berlekamp_massey_R_poly", "nmod_berlekamp_massey_R_poly"], [76, 0, 1, "c.nmod_berlekamp_massey_V_poly", "nmod_berlekamp_massey_V_poly"], [76, 0, 1, "c.nmod_berlekamp_massey_add_point", "nmod_berlekamp_massey_add_point"], [76, 0, 1, "c.nmod_berlekamp_massey_add_points", "nmod_berlekamp_massey_add_points"], [76, 0, 1, "c.nmod_berlekamp_massey_add_zeros", "nmod_berlekamp_massey_add_zeros"], [76, 0, 1, "c.nmod_berlekamp_massey_clear", "nmod_berlekamp_massey_clear"], [76, 0, 1, "c.nmod_berlekamp_massey_init", "nmod_berlekamp_massey_init"], [76, 0, 1, "c.nmod_berlekamp_massey_point_count", "nmod_berlekamp_massey_point_count"], [76, 0, 1, "c.nmod_berlekamp_massey_points", "nmod_berlekamp_massey_points"], [76, 0, 1, "c.nmod_berlekamp_massey_reduce", "nmod_berlekamp_massey_reduce"], [76, 0, 1, "c.nmod_berlekamp_massey_set_prime", "nmod_berlekamp_massey_set_prime"], [76, 0, 1, "c.nmod_berlekamp_massey_start_over", "nmod_berlekamp_massey_start_over"], [72, 0, 1, "c.nmod_discrete_log_pohlig_hellman_clear", "nmod_discrete_log_pohlig_hellman_clear"], [72, 0, 1, "c.nmod_discrete_log_pohlig_hellman_init", "nmod_discrete_log_pohlig_hellman_init"], [72, 0, 1, "c.nmod_discrete_log_pohlig_hellman_precompute_prime", "nmod_discrete_log_pohlig_hellman_precompute_prime"], [72, 0, 1, "c.nmod_discrete_log_pohlig_hellman_primitive_root", "nmod_discrete_log_pohlig_hellman_primitive_root"], [72, 0, 1, "c.nmod_discrete_log_pohlig_hellman_run", "nmod_discrete_log_pohlig_hellman_run"], [72, 0, 1, "c.nmod_div", "nmod_div"], [72, 0, 1, "c.nmod_init", "nmod_init"], [72, 0, 1, "c.nmod_inv", "nmod_inv"], [73, 0, 1, "c.nmod_mat_add", "nmod_mat_add"], [73, 0, 1, "c.nmod_mat_addmul", "nmod_mat_addmul"], [73, 0, 1, "c.nmod_mat_can_solve", "nmod_mat_can_solve"], [73, 0, 1, "c.nmod_mat_can_solve_inner", "nmod_mat_can_solve_inner"], [73, 0, 1, "c.nmod_mat_charpoly", "nmod_mat_charpoly"], [73, 0, 1, "c.nmod_mat_charpoly_berkowitz", "nmod_mat_charpoly_berkowitz"], [73, 0, 1, "c.nmod_mat_charpoly_danilevsky", "nmod_mat_charpoly_danilevsky"], [73, 0, 1, "c.nmod_mat_clear", "nmod_mat_clear"], [73, 0, 1, "c.nmod_mat_concat_horizontal", "nmod_mat_concat_horizontal"], [73, 0, 1, "c.nmod_mat_concat_vertical", "nmod_mat_concat_vertical"], [73, 0, 1, "c.nmod_mat_det", "nmod_mat_det"], [73, 0, 1, "c.nmod_mat_det_howell", "nmod_mat_det_howell"], [73, 0, 1, "c.nmod_mat_entry", "nmod_mat_entry"], [73, 0, 1, "c.nmod_mat_entry_ptr", "nmod_mat_entry_ptr"], [73, 0, 1, "c.nmod_mat_equal", "nmod_mat_equal"], [73, 0, 1, "c.nmod_mat_get_entry", "nmod_mat_get_entry"], [73, 0, 1, "c.nmod_mat_howell_form", "nmod_mat_howell_form"], [73, 0, 1, "c.nmod_mat_init", "nmod_mat_init"], [73, 0, 1, "c.nmod_mat_init_set", "nmod_mat_init_set"], [73, 0, 1, "c.nmod_mat_inv", "nmod_mat_inv"], [73, 0, 1, "c.nmod_mat_invert_cols", "nmod_mat_invert_cols"], [73, 0, 1, "c.nmod_mat_invert_rows", "nmod_mat_invert_rows"], [73, 0, 1, "c.nmod_mat_is_zero", "nmod_mat_is_zero"], [73, 0, 1, "c.nmod_mat_is_zero_row", "nmod_mat_is_zero_row"], [73, 0, 1, "c.nmod_mat_lu", "nmod_mat_lu"], [73, 0, 1, "c.nmod_mat_lu_classical", "nmod_mat_lu_classical"], [73, 0, 1, "c.nmod_mat_lu_classical_delayed", "nmod_mat_lu_classical_delayed"], [73, 0, 1, "c.nmod_mat_lu_recursive", "nmod_mat_lu_recursive"], [73, 0, 1, "c.nmod_mat_minpoly", "nmod_mat_minpoly"], [73, 0, 1, "c.nmod_mat_mul", "nmod_mat_mul"], [73, 0, 1, "c.nmod_mat_mul_blas", "nmod_mat_mul_blas"], [73, 0, 1, "c.nmod_mat_mul_classical", "nmod_mat_mul_classical"], [73, 0, 1, "c.nmod_mat_mul_classical_threaded", "nmod_mat_mul_classical_threaded"], [73, 0, 1, "c.nmod_mat_mul_nmod_vec", "nmod_mat_mul_nmod_vec"], [73, 0, 1, "c.nmod_mat_mul_nmod_vec_ptr", "nmod_mat_mul_nmod_vec_ptr"], [73, 0, 1, "c.nmod_mat_mul_strassen", "nmod_mat_mul_strassen"], [73, 0, 1, "c.nmod_mat_ncols", "nmod_mat_ncols"], [73, 0, 1, "c.nmod_mat_neg", "nmod_mat_neg"], [73, 0, 1, "c.nmod_mat_nmod_vec_mul", "nmod_mat_nmod_vec_mul"], [73, 0, 1, "c.nmod_mat_nmod_vec_mul_ptr", "nmod_mat_nmod_vec_mul_ptr"], [73, 0, 1, "c.nmod_mat_nrows", "nmod_mat_nrows"], [73, 0, 1, "c.nmod_mat_nullspace", "nmod_mat_nullspace"], [73, 0, 1, "c.nmod_mat_pow", "nmod_mat_pow"], [73, 0, 1, "c.nmod_mat_print_pretty", "nmod_mat_print_pretty"], [73, 0, 1, "c.nmod_mat_randfull", "nmod_mat_randfull"], [73, 0, 1, "c.nmod_mat_randops", "nmod_mat_randops"], [73, 0, 1, "c.nmod_mat_randpermdiag", "nmod_mat_randpermdiag"], [73, 0, 1, "c.nmod_mat_randrank", "nmod_mat_randrank"], [73, 0, 1, "c.nmod_mat_randtest", "nmod_mat_randtest"], [73, 0, 1, "c.nmod_mat_randtril", "nmod_mat_randtril"], [73, 0, 1, "c.nmod_mat_randtriu", "nmod_mat_randtriu"], [73, 0, 1, "c.nmod_mat_rank", "nmod_mat_rank"], [73, 0, 1, "c.nmod_mat_reduce_row", "nmod_mat_reduce_row"], [73, 0, 1, "c.nmod_mat_rref", "nmod_mat_rref"], [73, 0, 1, "c.nmod_mat_scalar_addmul_ui", "nmod_mat_scalar_addmul_ui"], [73, 0, 1, "c.nmod_mat_scalar_mul", "nmod_mat_scalar_mul"], [73, 0, 1, "c.nmod_mat_scalar_mul_fmpz", "nmod_mat_scalar_mul_fmpz"], [73, 0, 1, "c.nmod_mat_set", "nmod_mat_set"], [73, 0, 1, "c.nmod_mat_set_entry", "nmod_mat_set_entry"], [73, 0, 1, "c.nmod_mat_similarity", "nmod_mat_similarity"], [73, 0, 1, "c.nmod_mat_solve", "nmod_mat_solve"], [73, 0, 1, "c.nmod_mat_solve_tril", "nmod_mat_solve_tril"], [73, 0, 1, "c.nmod_mat_solve_tril_classical", "nmod_mat_solve_tril_classical"], [73, 0, 1, "c.nmod_mat_solve_tril_recursive", "nmod_mat_solve_tril_recursive"], [73, 0, 1, "c.nmod_mat_solve_triu", "nmod_mat_solve_triu"], [73, 0, 1, "c.nmod_mat_solve_triu_classical", "nmod_mat_solve_triu_classical"], [73, 0, 1, "c.nmod_mat_solve_triu_recursive", "nmod_mat_solve_triu_recursive"], [73, 0, 1, "c.nmod_mat_solve_vec", "nmod_mat_solve_vec"], [73, 0, 1, "c.nmod_mat_strong_echelon_form", "nmod_mat_strong_echelon_form"], [73, 3, 1, "c.nmod_mat_struct", "nmod_mat_struct"], [73, 0, 1, "c.nmod_mat_sub", "nmod_mat_sub"], [73, 0, 1, "c.nmod_mat_submul", "nmod_mat_submul"], [73, 0, 1, "c.nmod_mat_swap", "nmod_mat_swap"], [73, 0, 1, "c.nmod_mat_swap_cols", "nmod_mat_swap_cols"], [73, 0, 1, "c.nmod_mat_swap_entrywise", "nmod_mat_swap_entrywise"], [73, 0, 1, "c.nmod_mat_swap_rows", "nmod_mat_swap_rows"], [73, 3, 1, "c.nmod_mat_t", "nmod_mat_t"], [73, 0, 1, "c.nmod_mat_trace", "nmod_mat_trace"], [73, 0, 1, "c.nmod_mat_transpose", "nmod_mat_transpose"], [73, 0, 1, "c.nmod_mat_window_clear", "nmod_mat_window_clear"], [73, 0, 1, "c.nmod_mat_window_init", "nmod_mat_window_init"], [73, 0, 1, "c.nmod_mat_zero", "nmod_mat_zero"], [74, 0, 1, "c.nmod_mpoly_add", "nmod_mpoly_add"], [74, 0, 1, "c.nmod_mpoly_add_ui", "nmod_mpoly_add_ui"], [74, 0, 1, "c.nmod_mpoly_clear", "nmod_mpoly_clear"], [74, 0, 1, "c.nmod_mpoly_cmp", "nmod_mpoly_cmp"], [74, 0, 1, "c.nmod_mpoly_combine_like_terms", "nmod_mpoly_combine_like_terms"], [74, 0, 1, "c.nmod_mpoly_compose_nmod_mpoly", "nmod_mpoly_compose_nmod_mpoly"], [74, 0, 1, "c.nmod_mpoly_compose_nmod_mpoly_gen", "nmod_mpoly_compose_nmod_mpoly_gen"], [74, 0, 1, "c.nmod_mpoly_compose_nmod_mpoly_geobucket", "nmod_mpoly_compose_nmod_mpoly_geobucket"], [74, 0, 1, "c.nmod_mpoly_compose_nmod_mpoly_horner", "nmod_mpoly_compose_nmod_mpoly_horner"], [74, 0, 1, "c.nmod_mpoly_compose_nmod_poly", "nmod_mpoly_compose_nmod_poly"], [74, 0, 1, "c.nmod_mpoly_content_vars", "nmod_mpoly_content_vars"], [74, 0, 1, "c.nmod_mpoly_ctx_clear", "nmod_mpoly_ctx_clear"], [74, 0, 1, "c.nmod_mpoly_ctx_init", "nmod_mpoly_ctx_init"], [74, 0, 1, "c.nmod_mpoly_ctx_modulus", "nmod_mpoly_ctx_modulus"], [74, 0, 1, "c.nmod_mpoly_ctx_nvars", "nmod_mpoly_ctx_nvars"], [74, 0, 1, "c.nmod_mpoly_ctx_ord", "nmod_mpoly_ctx_ord"], [74, 3, 1, "c.nmod_mpoly_ctx_struct", "nmod_mpoly_ctx_struct"], [74, 3, 1, "c.nmod_mpoly_ctx_t", "nmod_mpoly_ctx_t"], [74, 0, 1, "c.nmod_mpoly_degree_fmpz", "nmod_mpoly_degree_fmpz"], [74, 0, 1, "c.nmod_mpoly_degree_si", "nmod_mpoly_degree_si"], [74, 0, 1, "c.nmod_mpoly_degrees_fit_si", "nmod_mpoly_degrees_fit_si"], [74, 0, 1, "c.nmod_mpoly_degrees_fmpz", "nmod_mpoly_degrees_fmpz"], [74, 0, 1, "c.nmod_mpoly_degrees_si", "nmod_mpoly_degrees_si"], [74, 0, 1, "c.nmod_mpoly_derivative", "nmod_mpoly_derivative"], [74, 0, 1, "c.nmod_mpoly_discriminant", "nmod_mpoly_discriminant"], [74, 0, 1, "c.nmod_mpoly_div", "nmod_mpoly_div"], [74, 0, 1, "c.nmod_mpoly_div_monagan_pearce", "nmod_mpoly_div_monagan_pearce"], [74, 0, 1, "c.nmod_mpoly_divides", "nmod_mpoly_divides"], [74, 0, 1, "c.nmod_mpoly_divides_dense", "nmod_mpoly_divides_dense"], [74, 0, 1, "c.nmod_mpoly_divides_heap_threaded", "nmod_mpoly_divides_heap_threaded"], [74, 0, 1, "c.nmod_mpoly_divides_monagan_pearce", "nmod_mpoly_divides_monagan_pearce"], [74, 0, 1, "c.nmod_mpoly_divrem", "nmod_mpoly_divrem"], [74, 0, 1, "c.nmod_mpoly_divrem_ideal", "nmod_mpoly_divrem_ideal"], [74, 0, 1, "c.nmod_mpoly_divrem_ideal_monagan_pearce", "nmod_mpoly_divrem_ideal_monagan_pearce"], [74, 0, 1, "c.nmod_mpoly_divrem_monagan_pearce", "nmod_mpoly_divrem_monagan_pearce"], [74, 0, 1, "c.nmod_mpoly_equal", "nmod_mpoly_equal"], [74, 0, 1, "c.nmod_mpoly_equal_ui", "nmod_mpoly_equal_ui"], [74, 0, 1, "c.nmod_mpoly_evaluate_all_ui", "nmod_mpoly_evaluate_all_ui"], [74, 0, 1, "c.nmod_mpoly_evaluate_one_ui", "nmod_mpoly_evaluate_one_ui"], [75, 0, 1, "c.nmod_mpoly_factor", "nmod_mpoly_factor"], [75, 0, 1, "c.nmod_mpoly_factor_clear", "nmod_mpoly_factor_clear"], [75, 0, 1, "c.nmod_mpoly_factor_get_base", "nmod_mpoly_factor_get_base"], [75, 0, 1, "c.nmod_mpoly_factor_get_constant_ui", "nmod_mpoly_factor_get_constant_ui"], [75, 0, 1, "c.nmod_mpoly_factor_get_exp_si", "nmod_mpoly_factor_get_exp_si"], [75, 0, 1, "c.nmod_mpoly_factor_init", "nmod_mpoly_factor_init"], [75, 0, 1, "c.nmod_mpoly_factor_length", "nmod_mpoly_factor_length"], [75, 0, 1, "c.nmod_mpoly_factor_sort", "nmod_mpoly_factor_sort"], [75, 0, 1, "c.nmod_mpoly_factor_squarefree", "nmod_mpoly_factor_squarefree"], [75, 3, 1, "c.nmod_mpoly_factor_struct", "nmod_mpoly_factor_struct"], [75, 0, 1, "c.nmod_mpoly_factor_swap", "nmod_mpoly_factor_swap"], [75, 0, 1, "c.nmod_mpoly_factor_swap_base", "nmod_mpoly_factor_swap_base"], [75, 3, 1, "c.nmod_mpoly_factor_t", "nmod_mpoly_factor_t"], [74, 0, 1, "c.nmod_mpoly_fit_length", "nmod_mpoly_fit_length"], [74, 0, 1, "c.nmod_mpoly_fprint_pretty", "nmod_mpoly_fprint_pretty"], [74, 0, 1, "c.nmod_mpoly_from_univar", "nmod_mpoly_from_univar"], [74, 0, 1, "c.nmod_mpoly_gcd", "nmod_mpoly_gcd"], [74, 0, 1, "c.nmod_mpoly_gcd_brown", "nmod_mpoly_gcd_brown"], [74, 0, 1, "c.nmod_mpoly_gcd_cofactors", "nmod_mpoly_gcd_cofactors"], [74, 0, 1, "c.nmod_mpoly_gcd_hensel", "nmod_mpoly_gcd_hensel"], [74, 0, 1, "c.nmod_mpoly_gcd_zippel", "nmod_mpoly_gcd_zippel"], [74, 0, 1, "c.nmod_mpoly_gen", "nmod_mpoly_gen"], [74, 0, 1, "c.nmod_mpoly_get_coeff_ui_fmpz", "nmod_mpoly_get_coeff_ui_fmpz"], [74, 0, 1, "c.nmod_mpoly_get_coeff_ui_monomial", "nmod_mpoly_get_coeff_ui_monomial"], [74, 0, 1, "c.nmod_mpoly_get_coeff_ui_ui", "nmod_mpoly_get_coeff_ui_ui"], [74, 0, 1, "c.nmod_mpoly_get_coeff_vars_ui", "nmod_mpoly_get_coeff_vars_ui"], [74, 0, 1, "c.nmod_mpoly_get_str_pretty", "nmod_mpoly_get_str_pretty"], [74, 0, 1, "c.nmod_mpoly_get_term", "nmod_mpoly_get_term"], [74, 0, 1, "c.nmod_mpoly_get_term_coeff_ui", "nmod_mpoly_get_term_coeff_ui"], [74, 0, 1, "c.nmod_mpoly_get_term_exp_fmpz", "nmod_mpoly_get_term_exp_fmpz"], [74, 0, 1, "c.nmod_mpoly_get_term_exp_si", "nmod_mpoly_get_term_exp_si"], [74, 0, 1, "c.nmod_mpoly_get_term_exp_ui", "nmod_mpoly_get_term_exp_ui"], [74, 0, 1, "c.nmod_mpoly_get_term_monomial", "nmod_mpoly_get_term_monomial"], [74, 0, 1, "c.nmod_mpoly_get_term_var_exp_si", "nmod_mpoly_get_term_var_exp_si"], [74, 0, 1, "c.nmod_mpoly_get_term_var_exp_ui", "nmod_mpoly_get_term_var_exp_ui"], [74, 0, 1, "c.nmod_mpoly_get_ui", "nmod_mpoly_get_ui"], [74, 0, 1, "c.nmod_mpoly_init", "nmod_mpoly_init"], [74, 0, 1, "c.nmod_mpoly_init2", "nmod_mpoly_init2"], [74, 0, 1, "c.nmod_mpoly_init3", "nmod_mpoly_init3"], [74, 0, 1, "c.nmod_mpoly_is_canonical", "nmod_mpoly_is_canonical"], [74, 0, 1, "c.nmod_mpoly_is_gen", "nmod_mpoly_is_gen"], [74, 0, 1, "c.nmod_mpoly_is_one", "nmod_mpoly_is_one"], [74, 0, 1, "c.nmod_mpoly_is_square", "nmod_mpoly_is_square"], [74, 0, 1, "c.nmod_mpoly_is_ui", "nmod_mpoly_is_ui"], [74, 0, 1, "c.nmod_mpoly_is_zero", "nmod_mpoly_is_zero"], [74, 0, 1, "c.nmod_mpoly_length", "nmod_mpoly_length"], [74, 0, 1, "c.nmod_mpoly_make_monic", "nmod_mpoly_make_monic"], [74, 0, 1, "c.nmod_mpoly_mul", "nmod_mpoly_mul"], [74, 0, 1, "c.nmod_mpoly_mul_array", "nmod_mpoly_mul_array"], [74, 0, 1, "c.nmod_mpoly_mul_array_threaded", "nmod_mpoly_mul_array_threaded"], [74, 0, 1, "c.nmod_mpoly_mul_dense", "nmod_mpoly_mul_dense"], [74, 0, 1, "c.nmod_mpoly_mul_heap_threaded", "nmod_mpoly_mul_heap_threaded"], [74, 0, 1, "c.nmod_mpoly_mul_johnson", "nmod_mpoly_mul_johnson"], [74, 0, 1, "c.nmod_mpoly_neg", "nmod_mpoly_neg"], [74, 0, 1, "c.nmod_mpoly_one", "nmod_mpoly_one"], [74, 0, 1, "c.nmod_mpoly_pow_fmpz", "nmod_mpoly_pow_fmpz"], [74, 0, 1, "c.nmod_mpoly_pow_rmul", "nmod_mpoly_pow_rmul"], [74, 0, 1, "c.nmod_mpoly_pow_ui", "nmod_mpoly_pow_ui"], [74, 0, 1, "c.nmod_mpoly_print_pretty", "nmod_mpoly_print_pretty"], [74, 0, 1, "c.nmod_mpoly_push_term_ui_fmpz", "nmod_mpoly_push_term_ui_fmpz"], [74, 0, 1, "c.nmod_mpoly_push_term_ui_ui", "nmod_mpoly_push_term_ui_ui"], [74, 0, 1, "c.nmod_mpoly_quadratic_root", "nmod_mpoly_quadratic_root"], [74, 0, 1, "c.nmod_mpoly_randtest_bits", "nmod_mpoly_randtest_bits"], [74, 0, 1, "c.nmod_mpoly_randtest_bound", "nmod_mpoly_randtest_bound"], [74, 0, 1, "c.nmod_mpoly_randtest_bounds", "nmod_mpoly_randtest_bounds"], [74, 0, 1, "c.nmod_mpoly_realloc", "nmod_mpoly_realloc"], [74, 0, 1, "c.nmod_mpoly_resize", "nmod_mpoly_resize"], [74, 0, 1, "c.nmod_mpoly_resultant", "nmod_mpoly_resultant"], [74, 0, 1, "c.nmod_mpoly_reverse", "nmod_mpoly_reverse"], [74, 0, 1, "c.nmod_mpoly_scalar_mul_ui", "nmod_mpoly_scalar_mul_ui"], [74, 0, 1, "c.nmod_mpoly_set", "nmod_mpoly_set"], [74, 0, 1, "c.nmod_mpoly_set_coeff_ui_fmpz", "nmod_mpoly_set_coeff_ui_fmpz"], [74, 0, 1, "c.nmod_mpoly_set_coeff_ui_monomial", "nmod_mpoly_set_coeff_ui_monomial"], [74, 0, 1, "c.nmod_mpoly_set_coeff_ui_ui", "nmod_mpoly_set_coeff_ui_ui"], [74, 0, 1, "c.nmod_mpoly_set_str_pretty", "nmod_mpoly_set_str_pretty"], [74, 0, 1, "c.nmod_mpoly_set_term_coeff_ui", "nmod_mpoly_set_term_coeff_ui"], [74, 0, 1, "c.nmod_mpoly_set_term_exp_fmpz", "nmod_mpoly_set_term_exp_fmpz"], [74, 0, 1, "c.nmod_mpoly_set_term_exp_ui", "nmod_mpoly_set_term_exp_ui"], [74, 0, 1, "c.nmod_mpoly_set_ui", "nmod_mpoly_set_ui"], [74, 0, 1, "c.nmod_mpoly_sort_terms", "nmod_mpoly_sort_terms"], [74, 0, 1, "c.nmod_mpoly_sqrt", "nmod_mpoly_sqrt"], [74, 3, 1, "c.nmod_mpoly_struct", "nmod_mpoly_struct"], [74, 0, 1, "c.nmod_mpoly_sub", "nmod_mpoly_sub"], [74, 0, 1, "c.nmod_mpoly_sub_ui", "nmod_mpoly_sub_ui"], [74, 0, 1, "c.nmod_mpoly_swap", "nmod_mpoly_swap"], [74, 3, 1, "c.nmod_mpoly_t", "nmod_mpoly_t"], [74, 0, 1, "c.nmod_mpoly_term_coeff_ref", "nmod_mpoly_term_coeff_ref"], [74, 0, 1, "c.nmod_mpoly_term_content", "nmod_mpoly_term_content"], [74, 0, 1, "c.nmod_mpoly_term_exp_fits_si", "nmod_mpoly_term_exp_fits_si"], [74, 0, 1, "c.nmod_mpoly_term_exp_fits_ui", "nmod_mpoly_term_exp_fits_ui"], [74, 0, 1, "c.nmod_mpoly_to_univar", "nmod_mpoly_to_univar"], [74, 0, 1, "c.nmod_mpoly_total_degree_fits_si", "nmod_mpoly_total_degree_fits_si"], [74, 0, 1, "c.nmod_mpoly_total_degree_fmpz", "nmod_mpoly_total_degree_fmpz"], [74, 0, 1, "c.nmod_mpoly_total_degree_si", "nmod_mpoly_total_degree_si"], [74, 0, 1, "c.nmod_mpoly_univar_clear", "nmod_mpoly_univar_clear"], [74, 0, 1, "c.nmod_mpoly_univar_degree_fits_si", "nmod_mpoly_univar_degree_fits_si"], [74, 0, 1, "c.nmod_mpoly_univar_get_term_coeff", "nmod_mpoly_univar_get_term_coeff"], [74, 0, 1, "c.nmod_mpoly_univar_get_term_exp_si", "nmod_mpoly_univar_get_term_exp_si"], [74, 0, 1, "c.nmod_mpoly_univar_init", "nmod_mpoly_univar_init"], [74, 0, 1, "c.nmod_mpoly_univar_length", "nmod_mpoly_univar_length"], [74, 0, 1, "c.nmod_mpoly_univar_swap", "nmod_mpoly_univar_swap"], [74, 0, 1, "c.nmod_mpoly_univar_swap_term_coeff", "nmod_mpoly_univar_swap_term_coeff"], [74, 0, 1, "c.nmod_mpoly_used_vars", "nmod_mpoly_used_vars"], [74, 0, 1, "c.nmod_mpoly_zero", "nmod_mpoly_zero"], [72, 0, 1, "c.nmod_mul", "nmod_mul"], [72, 0, 1, "c.nmod_neg", "nmod_neg"], [76, 0, 1, "c.nmod_poly_add", "nmod_poly_add"], [76, 0, 1, "c.nmod_poly_add_series", "nmod_poly_add_series"], [76, 0, 1, "c.nmod_poly_asin_series", "nmod_poly_asin_series"], [76, 0, 1, "c.nmod_poly_asinh_series", "nmod_poly_asinh_series"], [76, 0, 1, "c.nmod_poly_atan_series", "nmod_poly_atan_series"], [76, 0, 1, "c.nmod_poly_atanh_series", "nmod_poly_atanh_series"], [76, 0, 1, "c.nmod_poly_bit_pack", "nmod_poly_bit_pack"], [76, 0, 1, "c.nmod_poly_bit_unpack", "nmod_poly_bit_unpack"], [76, 0, 1, "c.nmod_poly_clear", "nmod_poly_clear"], [76, 0, 1, "c.nmod_poly_compose", "nmod_poly_compose"], [76, 0, 1, "c.nmod_poly_compose_divconquer", "nmod_poly_compose_divconquer"], [76, 0, 1, "c.nmod_poly_compose_horner", "nmod_poly_compose_horner"], [76, 0, 1, "c.nmod_poly_compose_mod", "nmod_poly_compose_mod"], [76, 0, 1, "c.nmod_poly_compose_mod_brent_kung", "nmod_poly_compose_mod_brent_kung"], [76, 0, 1, "c.nmod_poly_compose_mod_brent_kung_precomp_preinv", "nmod_poly_compose_mod_brent_kung_precomp_preinv"], [76, 0, 1, "c.nmod_poly_compose_mod_brent_kung_preinv", "nmod_poly_compose_mod_brent_kung_preinv"], [76, 0, 1, "c.nmod_poly_compose_mod_brent_kung_vec_preinv", "nmod_poly_compose_mod_brent_kung_vec_preinv"], [76, 0, 1, "c.nmod_poly_compose_mod_brent_kung_vec_preinv_threaded", "nmod_poly_compose_mod_brent_kung_vec_preinv_threaded"], [76, 0, 1, "c.nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool"], [76, 0, 1, "c.nmod_poly_compose_mod_horner", "nmod_poly_compose_mod_horner"], [76, 0, 1, "c.nmod_poly_compose_series", "nmod_poly_compose_series"], [76, 0, 1, "c.nmod_poly_compose_series_brent_kung", "nmod_poly_compose_series_brent_kung"], [76, 0, 1, "c.nmod_poly_compose_series_divconquer", "nmod_poly_compose_series_divconquer"], [76, 0, 1, "c.nmod_poly_compose_series_horner", "nmod_poly_compose_series_horner"], [76, 0, 1, "c.nmod_poly_cos_series", "nmod_poly_cos_series"], [76, 0, 1, "c.nmod_poly_cosh_series", "nmod_poly_cosh_series"], [76, 0, 1, "c.nmod_poly_deflate", "nmod_poly_deflate"], [76, 0, 1, "c.nmod_poly_deflation", "nmod_poly_deflation"], [76, 0, 1, "c.nmod_poly_degree", "nmod_poly_degree"], [76, 0, 1, "c.nmod_poly_derivative", "nmod_poly_derivative"], [76, 0, 1, "c.nmod_poly_discriminant", "nmod_poly_discriminant"], [76, 0, 1, "c.nmod_poly_div", "nmod_poly_div"], [76, 0, 1, "c.nmod_poly_div_basecase", "nmod_poly_div_basecase"], [76, 0, 1, "c.nmod_poly_div_divconquer", "nmod_poly_div_divconquer"], [76, 0, 1, "c.nmod_poly_div_newton", "nmod_poly_div_newton"], [76, 0, 1, "c.nmod_poly_div_newton_n_preinv", "nmod_poly_div_newton_n_preinv"], [76, 0, 1, "c.nmod_poly_div_root", "nmod_poly_div_root"], [76, 0, 1, "c.nmod_poly_div_series", "nmod_poly_div_series"], [76, 0, 1, "c.nmod_poly_div_series_basecase", "nmod_poly_div_series_basecase"], [76, 0, 1, "c.nmod_poly_divides", "nmod_poly_divides"], [76, 0, 1, "c.nmod_poly_divides_classical", "nmod_poly_divides_classical"], [76, 0, 1, "c.nmod_poly_divrem", "nmod_poly_divrem"], [76, 0, 1, "c.nmod_poly_divrem_basecase", "nmod_poly_divrem_basecase"], [76, 0, 1, "c.nmod_poly_divrem_divconquer", "nmod_poly_divrem_divconquer"], [76, 0, 1, "c.nmod_poly_divrem_newton", "nmod_poly_divrem_newton"], [76, 0, 1, "c.nmod_poly_divrem_newton_n_preinv", "nmod_poly_divrem_newton_n_preinv"], [76, 0, 1, "c.nmod_poly_equal", "nmod_poly_equal"], [76, 0, 1, "c.nmod_poly_equal_trunc", "nmod_poly_equal_trunc"], [76, 0, 1, "c.nmod_poly_evaluate_mat", "nmod_poly_evaluate_mat"], [76, 0, 1, "c.nmod_poly_evaluate_mat_horner", "nmod_poly_evaluate_mat_horner"], [76, 0, 1, "c.nmod_poly_evaluate_mat_paterson_stockmeyer", "nmod_poly_evaluate_mat_paterson_stockmeyer"], [76, 0, 1, "c.nmod_poly_evaluate_nmod", "nmod_poly_evaluate_nmod"], [76, 0, 1, "c.nmod_poly_evaluate_nmod_vec", "nmod_poly_evaluate_nmod_vec"], [76, 0, 1, "c.nmod_poly_evaluate_nmod_vec_fast", "nmod_poly_evaluate_nmod_vec_fast"], [76, 0, 1, "c.nmod_poly_evaluate_nmod_vec_iter", "nmod_poly_evaluate_nmod_vec_iter"], [76, 0, 1, "c.nmod_poly_exp_series", "nmod_poly_exp_series"], [76, 0, 1, "c.nmod_poly_exp_series_basecase", "nmod_poly_exp_series_basecase"], [76, 0, 1, "c.nmod_poly_exp_series_monomial_ui", "nmod_poly_exp_series_monomial_ui"], [77, 0, 1, "c.nmod_poly_factor", "nmod_poly_factor"], [77, 0, 1, "c.nmod_poly_factor_berlekamp", "nmod_poly_factor_berlekamp"], [77, 0, 1, "c.nmod_poly_factor_cantor_zassenhaus", "nmod_poly_factor_cantor_zassenhaus"], [77, 0, 1, "c.nmod_poly_factor_clear", "nmod_poly_factor_clear"], [77, 0, 1, "c.nmod_poly_factor_concat", "nmod_poly_factor_concat"], [77, 0, 1, "c.nmod_poly_factor_distinct_deg", "nmod_poly_factor_distinct_deg"], [77, 0, 1, "c.nmod_poly_factor_distinct_deg_threaded", "nmod_poly_factor_distinct_deg_threaded"], [77, 0, 1, "c.nmod_poly_factor_equal_deg", "nmod_poly_factor_equal_deg"], [77, 0, 1, "c.nmod_poly_factor_equal_deg_prob", "nmod_poly_factor_equal_deg_prob"], [77, 0, 1, "c.nmod_poly_factor_fit_length", "nmod_poly_factor_fit_length"], [77, 0, 1, "c.nmod_poly_factor_init", "nmod_poly_factor_init"], [77, 0, 1, "c.nmod_poly_factor_insert", "nmod_poly_factor_insert"], [77, 0, 1, "c.nmod_poly_factor_kaltofen_shoup", "nmod_poly_factor_kaltofen_shoup"], [77, 0, 1, "c.nmod_poly_factor_pow", "nmod_poly_factor_pow"], [77, 0, 1, "c.nmod_poly_factor_print", "nmod_poly_factor_print"], [77, 0, 1, "c.nmod_poly_factor_realloc", "nmod_poly_factor_realloc"], [77, 0, 1, "c.nmod_poly_factor_set", "nmod_poly_factor_set"], [77, 0, 1, "c.nmod_poly_factor_squarefree", "nmod_poly_factor_squarefree"], [77, 3, 1, "c.nmod_poly_factor_struct", "nmod_poly_factor_struct"], [77, 3, 1, "c.nmod_poly_factor_t", "nmod_poly_factor_t"], [77, 0, 1, "c.nmod_poly_factor_with_berlekamp", "nmod_poly_factor_with_berlekamp"], [77, 0, 1, "c.nmod_poly_factor_with_cantor_zassenhaus", "nmod_poly_factor_with_cantor_zassenhaus"], [77, 0, 1, "c.nmod_poly_factor_with_kaltofen_shoup", "nmod_poly_factor_with_kaltofen_shoup"], [76, 0, 1, "c.nmod_poly_find_distinct_nonzero_roots", "nmod_poly_find_distinct_nonzero_roots"], [76, 0, 1, "c.nmod_poly_fit_length", "nmod_poly_fit_length"], [76, 0, 1, "c.nmod_poly_fprint", "nmod_poly_fprint"], [76, 0, 1, "c.nmod_poly_fprint_pretty", "nmod_poly_fprint_pretty"], [76, 0, 1, "c.nmod_poly_fread", "nmod_poly_fread"], [76, 0, 1, "c.nmod_poly_gcd", "nmod_poly_gcd"], [76, 0, 1, "c.nmod_poly_gcd_euclidean", "nmod_poly_gcd_euclidean"], [76, 0, 1, "c.nmod_poly_gcd_hgcd", "nmod_poly_gcd_hgcd"], [76, 0, 1, "c.nmod_poly_gcdinv", "nmod_poly_gcdinv"], [76, 0, 1, "c.nmod_poly_get_coeff_ui", "nmod_poly_get_coeff_ui"], [76, 0, 1, "c.nmod_poly_get_str", "nmod_poly_get_str"], [76, 0, 1, "c.nmod_poly_get_str_pretty", "nmod_poly_get_str_pretty"], [76, 0, 1, "c.nmod_poly_inflate", "nmod_poly_inflate"], [76, 0, 1, "c.nmod_poly_init", "nmod_poly_init"], [76, 0, 1, "c.nmod_poly_init2", "nmod_poly_init2"], [76, 0, 1, "c.nmod_poly_init2_preinv", "nmod_poly_init2_preinv"], [76, 0, 1, "c.nmod_poly_init_mod", "nmod_poly_init_mod"], [76, 0, 1, "c.nmod_poly_init_preinv", "nmod_poly_init_preinv"], [76, 0, 1, "c.nmod_poly_integral", "nmod_poly_integral"], [76, 0, 1, "c.nmod_poly_interpolate_nmod_vec", "nmod_poly_interpolate_nmod_vec"], [76, 0, 1, "c.nmod_poly_interpolate_nmod_vec_barycentric", "nmod_poly_interpolate_nmod_vec_barycentric"], [76, 0, 1, "c.nmod_poly_interpolate_nmod_vec_fast", "nmod_poly_interpolate_nmod_vec_fast"], [76, 0, 1, "c.nmod_poly_interpolate_nmod_vec_newton", "nmod_poly_interpolate_nmod_vec_newton"], [76, 0, 1, "c.nmod_poly_inv_series", "nmod_poly_inv_series"], [76, 0, 1, "c.nmod_poly_inv_series_basecase", "nmod_poly_inv_series_basecase"], [76, 0, 1, "c.nmod_poly_inv_series_newton", "nmod_poly_inv_series_newton"], [76, 0, 1, "c.nmod_poly_invmod", "nmod_poly_invmod"], [76, 0, 1, "c.nmod_poly_invsqrt_series", "nmod_poly_invsqrt_series"], [77, 0, 1, "c.nmod_poly_is_irreducible", "nmod_poly_is_irreducible"], [77, 0, 1, "c.nmod_poly_is_irreducible_ddf", "nmod_poly_is_irreducible_ddf"], [77, 0, 1, "c.nmod_poly_is_irreducible_rabin", "nmod_poly_is_irreducible_rabin"], [76, 0, 1, "c.nmod_poly_is_one", "nmod_poly_is_one"], [77, 0, 1, "c.nmod_poly_is_squarefree", "nmod_poly_is_squarefree"], [76, 0, 1, "c.nmod_poly_is_zero", "nmod_poly_is_zero"], [76, 0, 1, "c.nmod_poly_length", "nmod_poly_length"], [76, 0, 1, "c.nmod_poly_log_series", "nmod_poly_log_series"], [76, 0, 1, "c.nmod_poly_log_series_monomial_ui", "nmod_poly_log_series_monomial_ui"], [76, 0, 1, "c.nmod_poly_make_monic", "nmod_poly_make_monic"], [78, 0, 1, "c.nmod_poly_mat_add", "nmod_poly_mat_add"], [78, 0, 1, "c.nmod_poly_mat_clear", "nmod_poly_mat_clear"], [78, 0, 1, "c.nmod_poly_mat_det", "nmod_poly_mat_det"], [78, 0, 1, "c.nmod_poly_mat_det_fflu", "nmod_poly_mat_det_fflu"], [78, 0, 1, "c.nmod_poly_mat_det_interpolate", "nmod_poly_mat_det_interpolate"], [78, 0, 1, "c.nmod_poly_mat_entry", "nmod_poly_mat_entry"], [78, 0, 1, "c.nmod_poly_mat_equal", "nmod_poly_mat_equal"], [78, 0, 1, "c.nmod_poly_mat_evaluate_nmod", "nmod_poly_mat_evaluate_nmod"], [78, 0, 1, "c.nmod_poly_mat_fflu", "nmod_poly_mat_fflu"], [78, 0, 1, "c.nmod_poly_mat_find_pivot_any", "nmod_poly_mat_find_pivot_any"], [78, 0, 1, "c.nmod_poly_mat_find_pivot_partial", "nmod_poly_mat_find_pivot_partial"], [78, 0, 1, "c.nmod_poly_mat_init", "nmod_poly_mat_init"], [78, 0, 1, "c.nmod_poly_mat_init_set", "nmod_poly_mat_init_set"], [78, 0, 1, "c.nmod_poly_mat_inv", "nmod_poly_mat_inv"], [78, 0, 1, "c.nmod_poly_mat_is_empty", "nmod_poly_mat_is_empty"], [78, 0, 1, "c.nmod_poly_mat_is_one", "nmod_poly_mat_is_one"], [78, 0, 1, "c.nmod_poly_mat_is_square", "nmod_poly_mat_is_square"], [78, 0, 1, "c.nmod_poly_mat_is_zero", "nmod_poly_mat_is_zero"], [78, 0, 1, "c.nmod_poly_mat_max_length", "nmod_poly_mat_max_length"], [78, 0, 1, "c.nmod_poly_mat_modulus", "nmod_poly_mat_modulus"], [78, 0, 1, "c.nmod_poly_mat_mul", "nmod_poly_mat_mul"], [78, 0, 1, "c.nmod_poly_mat_mul_KS", "nmod_poly_mat_mul_KS"], [78, 0, 1, "c.nmod_poly_mat_mul_classical", "nmod_poly_mat_mul_classical"], [78, 0, 1, "c.nmod_poly_mat_mul_interpolate", "nmod_poly_mat_mul_interpolate"], [78, 0, 1, "c.nmod_poly_mat_ncols", "nmod_poly_mat_ncols"], [78, 0, 1, "c.nmod_poly_mat_neg", "nmod_poly_mat_neg"], [78, 0, 1, "c.nmod_poly_mat_nrows", "nmod_poly_mat_nrows"], [78, 0, 1, "c.nmod_poly_mat_nullspace", "nmod_poly_mat_nullspace"], [78, 0, 1, "c.nmod_poly_mat_one", "nmod_poly_mat_one"], [78, 0, 1, "c.nmod_poly_mat_pow", "nmod_poly_mat_pow"], [78, 0, 1, "c.nmod_poly_mat_print", "nmod_poly_mat_print"], [78, 0, 1, "c.nmod_poly_mat_randtest", "nmod_poly_mat_randtest"], [78, 0, 1, "c.nmod_poly_mat_randtest_sparse", "nmod_poly_mat_randtest_sparse"], [78, 0, 1, "c.nmod_poly_mat_rank", "nmod_poly_mat_rank"], [78, 0, 1, "c.nmod_poly_mat_rref", "nmod_poly_mat_rref"], [78, 0, 1, "c.nmod_poly_mat_scalar_mul_nmod", "nmod_poly_mat_scalar_mul_nmod"], [78, 0, 1, "c.nmod_poly_mat_scalar_mul_nmod_poly", "nmod_poly_mat_scalar_mul_nmod_poly"], [78, 0, 1, "c.nmod_poly_mat_set", "nmod_poly_mat_set"], [78, 0, 1, "c.nmod_poly_mat_solve", "nmod_poly_mat_solve"], [78, 0, 1, "c.nmod_poly_mat_solve_fflu", "nmod_poly_mat_solve_fflu"], [78, 0, 1, "c.nmod_poly_mat_solve_fflu_precomp", "nmod_poly_mat_solve_fflu_precomp"], [78, 0, 1, "c.nmod_poly_mat_sqr", "nmod_poly_mat_sqr"], [78, 0, 1, "c.nmod_poly_mat_sqr_KS", "nmod_poly_mat_sqr_KS"], [78, 0, 1, "c.nmod_poly_mat_sqr_classical", "nmod_poly_mat_sqr_classical"], [78, 0, 1, "c.nmod_poly_mat_sqr_interpolate", "nmod_poly_mat_sqr_interpolate"], [78, 3, 1, "c.nmod_poly_mat_struct", "nmod_poly_mat_struct"], [78, 0, 1, "c.nmod_poly_mat_sub", "nmod_poly_mat_sub"], [78, 0, 1, "c.nmod_poly_mat_swap", "nmod_poly_mat_swap"], [78, 0, 1, "c.nmod_poly_mat_swap_entrywise", "nmod_poly_mat_swap_entrywise"], [78, 3, 1, "c.nmod_poly_mat_t", "nmod_poly_mat_t"], [78, 0, 1, "c.nmod_poly_mat_trace", "nmod_poly_mat_trace"], [78, 0, 1, "c.nmod_poly_mat_zero", "nmod_poly_mat_zero"], [76, 0, 1, "c.nmod_poly_max_bits", "nmod_poly_max_bits"], [76, 0, 1, "c.nmod_poly_modulus", "nmod_poly_modulus"], [76, 0, 1, "c.nmod_poly_mul", "nmod_poly_mul"], [76, 0, 1, "c.nmod_poly_mul_KS", "nmod_poly_mul_KS"], [76, 0, 1, "c.nmod_poly_mul_KS2", "nmod_poly_mul_KS2"], [76, 0, 1, "c.nmod_poly_mul_KS4", "nmod_poly_mul_KS4"], [76, 0, 1, "c.nmod_poly_mul_classical", "nmod_poly_mul_classical"], [76, 0, 1, "c.nmod_poly_mulhigh", "nmod_poly_mulhigh"], [76, 0, 1, "c.nmod_poly_mulhigh_classical", "nmod_poly_mulhigh_classical"], [76, 0, 1, "c.nmod_poly_mullow", "nmod_poly_mullow"], [76, 0, 1, "c.nmod_poly_mullow_KS", "nmod_poly_mullow_KS"], [76, 0, 1, "c.nmod_poly_mullow_classical", "nmod_poly_mullow_classical"], [76, 0, 1, "c.nmod_poly_mulmod", "nmod_poly_mulmod"], [76, 0, 1, "c.nmod_poly_mulmod_preinv", "nmod_poly_mulmod_preinv"], [76, 0, 1, "c.nmod_poly_multi_crt", "nmod_poly_multi_crt"], [76, 0, 1, "c.nmod_poly_multi_crt_clear", "nmod_poly_multi_crt_clear"], [76, 0, 1, "c.nmod_poly_multi_crt_init", "nmod_poly_multi_crt_init"], [76, 0, 1, "c.nmod_poly_multi_crt_precomp", "nmod_poly_multi_crt_precomp"], [76, 0, 1, "c.nmod_poly_multi_crt_precomp_p", "nmod_poly_multi_crt_precomp_p"], [76, 0, 1, "c.nmod_poly_multi_crt_precompute", "nmod_poly_multi_crt_precompute"], [76, 0, 1, "c.nmod_poly_multi_crt_precompute_p", "nmod_poly_multi_crt_precompute_p"], [76, 0, 1, "c.nmod_poly_neg", "nmod_poly_neg"], [76, 0, 1, "c.nmod_poly_pow", "nmod_poly_pow"], [76, 0, 1, "c.nmod_poly_pow_binexp", "nmod_poly_pow_binexp"], [76, 0, 1, "c.nmod_poly_pow_trunc", "nmod_poly_pow_trunc"], [76, 0, 1, "c.nmod_poly_pow_trunc_binexp", "nmod_poly_pow_trunc_binexp"], [76, 0, 1, "c.nmod_poly_power_sums", "nmod_poly_power_sums"], [76, 0, 1, "c.nmod_poly_power_sums_naive", "nmod_poly_power_sums_naive"], [76, 0, 1, "c.nmod_poly_power_sums_schoenhage", "nmod_poly_power_sums_schoenhage"], [76, 0, 1, "c.nmod_poly_power_sums_to_poly", "nmod_poly_power_sums_to_poly"], [76, 0, 1, "c.nmod_poly_power_sums_to_poly_naive", "nmod_poly_power_sums_to_poly_naive"], [76, 0, 1, "c.nmod_poly_power_sums_to_poly_schoenhage", "nmod_poly_power_sums_to_poly_schoenhage"], [76, 0, 1, "c.nmod_poly_powers_mod_bsgs", "nmod_poly_powers_mod_bsgs"], [76, 0, 1, "c.nmod_poly_powers_mod_naive", "nmod_poly_powers_mod_naive"], [76, 0, 1, "c.nmod_poly_powmod_fmpz_binexp", "nmod_poly_powmod_fmpz_binexp"], [76, 0, 1, "c.nmod_poly_powmod_fmpz_binexp_preinv", "nmod_poly_powmod_fmpz_binexp_preinv"], [76, 0, 1, "c.nmod_poly_powmod_mpz_binexp", "nmod_poly_powmod_mpz_binexp"], [76, 0, 1, "c.nmod_poly_powmod_mpz_binexp_preinv", "nmod_poly_powmod_mpz_binexp_preinv"], [76, 0, 1, "c.nmod_poly_powmod_ui_binexp", "nmod_poly_powmod_ui_binexp"], [76, 0, 1, "c.nmod_poly_powmod_ui_binexp_preinv", "nmod_poly_powmod_ui_binexp_preinv"], [76, 0, 1, "c.nmod_poly_powmod_x_fmpz_preinv", "nmod_poly_powmod_x_fmpz_preinv"], [76, 0, 1, "c.nmod_poly_powmod_x_ui_preinv", "nmod_poly_powmod_x_ui_preinv"], [76, 0, 1, "c.nmod_poly_precompute_matrix", "nmod_poly_precompute_matrix"], [76, 0, 1, "c.nmod_poly_print", "nmod_poly_print"], [76, 0, 1, "c.nmod_poly_print_pretty", "nmod_poly_print_pretty"], [76, 0, 1, "c.nmod_poly_product_roots_nmod_vec", "nmod_poly_product_roots_nmod_vec"], [76, 0, 1, "c.nmod_poly_randtest", "nmod_poly_randtest"], [76, 0, 1, "c.nmod_poly_randtest_irreducible", "nmod_poly_randtest_irreducible"], [76, 0, 1, "c.nmod_poly_randtest_monic", "nmod_poly_randtest_monic"], [76, 0, 1, "c.nmod_poly_randtest_monic_irreducible", "nmod_poly_randtest_monic_irreducible"], [76, 0, 1, "c.nmod_poly_randtest_monic_primitive", "nmod_poly_randtest_monic_primitive"], [76, 0, 1, "c.nmod_poly_randtest_pentomial", "nmod_poly_randtest_pentomial"], [76, 0, 1, "c.nmod_poly_randtest_pentomial_irreducible", "nmod_poly_randtest_pentomial_irreducible"], [76, 0, 1, "c.nmod_poly_randtest_sparse_irreducible", "nmod_poly_randtest_sparse_irreducible"], [76, 0, 1, "c.nmod_poly_randtest_trinomial", "nmod_poly_randtest_trinomial"], [76, 0, 1, "c.nmod_poly_randtest_trinomial_irreducible", "nmod_poly_randtest_trinomial_irreducible"], [76, 0, 1, "c.nmod_poly_read", "nmod_poly_read"], [76, 0, 1, "c.nmod_poly_realloc", "nmod_poly_realloc"], [76, 0, 1, "c.nmod_poly_rem", "nmod_poly_rem"], [76, 0, 1, "c.nmod_poly_rem_basecase", "nmod_poly_rem_basecase"], [77, 0, 1, "c.nmod_poly_remove", "nmod_poly_remove"], [76, 0, 1, "c.nmod_poly_resultant", "nmod_poly_resultant"], [76, 0, 1, "c.nmod_poly_resultant_euclidean", "nmod_poly_resultant_euclidean"], [76, 0, 1, "c.nmod_poly_resultant_hgcd", "nmod_poly_resultant_hgcd"], [76, 0, 1, "c.nmod_poly_reverse", "nmod_poly_reverse"], [76, 0, 1, "c.nmod_poly_revert_series", "nmod_poly_revert_series"], [76, 0, 1, "c.nmod_poly_revert_series_lagrange", "nmod_poly_revert_series_lagrange"], [76, 0, 1, "c.nmod_poly_revert_series_lagrange_fast", "nmod_poly_revert_series_lagrange_fast"], [76, 0, 1, "c.nmod_poly_revert_series_newton", "nmod_poly_revert_series_newton"], [76, 0, 1, "c.nmod_poly_scalar_mul_nmod", "nmod_poly_scalar_mul_nmod"], [76, 0, 1, "c.nmod_poly_set", "nmod_poly_set"], [76, 0, 1, "c.nmod_poly_set_coeff_ui", "nmod_poly_set_coeff_ui"], [76, 0, 1, "c.nmod_poly_set_str", "nmod_poly_set_str"], [76, 0, 1, "c.nmod_poly_set_trunc", "nmod_poly_set_trunc"], [76, 0, 1, "c.nmod_poly_shift_left", "nmod_poly_shift_left"], [76, 0, 1, "c.nmod_poly_shift_right", "nmod_poly_shift_right"], [76, 0, 1, "c.nmod_poly_sin_series", "nmod_poly_sin_series"], [76, 0, 1, "c.nmod_poly_sinh_series", "nmod_poly_sinh_series"], [76, 0, 1, "c.nmod_poly_sqrt", "nmod_poly_sqrt"], [76, 0, 1, "c.nmod_poly_sqrt_series", "nmod_poly_sqrt_series"], [76, 3, 1, "c.nmod_poly_struct", "nmod_poly_struct"], [76, 0, 1, "c.nmod_poly_sub", "nmod_poly_sub"], [76, 0, 1, "c.nmod_poly_sub_series", "nmod_poly_sub_series"], [76, 0, 1, "c.nmod_poly_swap", "nmod_poly_swap"], [76, 3, 1, "c.nmod_poly_t", "nmod_poly_t"], [76, 0, 1, "c.nmod_poly_tan_series", "nmod_poly_tan_series"], [76, 0, 1, "c.nmod_poly_tanh_series", "nmod_poly_tanh_series"], [76, 0, 1, "c.nmod_poly_taylor_shift", "nmod_poly_taylor_shift"], [76, 0, 1, "c.nmod_poly_taylor_shift_convolution", "nmod_poly_taylor_shift_convolution"], [76, 0, 1, "c.nmod_poly_taylor_shift_horner", "nmod_poly_taylor_shift_horner"], [76, 0, 1, "c.nmod_poly_truncate", "nmod_poly_truncate"], [76, 0, 1, "c.nmod_poly_xgcd", "nmod_poly_xgcd"], [76, 0, 1, "c.nmod_poly_xgcd_euclidean", "nmod_poly_xgcd_euclidean"], [76, 0, 1, "c.nmod_poly_xgcd_hgcd", "nmod_poly_xgcd_hgcd"], [76, 0, 1, "c.nmod_poly_zero", "nmod_poly_zero"], [72, 0, 1, "c.nmod_pow_fmpz", "nmod_pow_fmpz"], [72, 0, 1, "c.nmod_pow_ui", "nmod_pow_ui"], [72, 0, 1, "c.nmod_sub", "nmod_sub"], [71, 3, 1, "c.ordering_t", "ordering_t"], [80, 0, 1, "c.padic_add", "padic_add"], [80, 0, 1, "c.padic_clear", "padic_clear"], [80, 0, 1, "c.padic_ctx_clear", "padic_ctx_clear"], [80, 0, 1, "c.padic_ctx_init", "padic_ctx_init"], [80, 0, 1, "c.padic_debug", "padic_debug"], [80, 0, 1, "c.padic_div", "padic_div"], [80, 0, 1, "c.padic_equal", "padic_equal"], [80, 0, 1, "c.padic_exp", "padic_exp"], [80, 0, 1, "c.padic_exp_balanced", "padic_exp_balanced"], [80, 0, 1, "c.padic_exp_rectangular", "padic_exp_rectangular"], [80, 0, 1, "c.padic_fprint", "padic_fprint"], [80, 0, 1, "c.padic_get_fmpq", "padic_get_fmpq"], [80, 0, 1, "c.padic_get_fmpz", "padic_get_fmpz"], [80, 0, 1, "c.padic_get_mpq", "padic_get_mpq"], [80, 0, 1, "c.padic_get_mpz", "padic_get_mpz"], [80, 0, 1, "c.padic_get_prec", "padic_get_prec"], [80, 0, 1, "c.padic_get_str", "padic_get_str"], [80, 0, 1, "c.padic_get_val", "padic_get_val"], [80, 0, 1, "c.padic_init", "padic_init"], [80, 0, 1, "c.padic_init2", "padic_init2"], [80, 0, 1, "c.padic_inv", "padic_inv"], [80, 0, 1, "c.padic_is_one", "padic_is_one"], [80, 0, 1, "c.padic_is_zero", "padic_is_zero"], [80, 0, 1, "c.padic_log", "padic_log"], [80, 0, 1, "c.padic_log_balanced", "padic_log_balanced"], [80, 0, 1, "c.padic_log_rectangular", "padic_log_rectangular"], [80, 0, 1, "c.padic_log_satoh", "padic_log_satoh"], [81, 0, 1, "c.padic_mat", "padic_mat"], [81, 0, 1, "c.padic_mat_add", "padic_mat_add"], [81, 0, 1, "c.padic_mat_clear", "padic_mat_clear"], [81, 0, 1, "c.padic_mat_entry", "padic_mat_entry"], [81, 0, 1, "c.padic_mat_equal", "padic_mat_equal"], [81, 0, 1, "c.padic_mat_fprint", "padic_mat_fprint"], [81, 0, 1, "c.padic_mat_fprint_pretty", "padic_mat_fprint_pretty"], [81, 0, 1, "c.padic_mat_get_entry_padic", "padic_mat_get_entry_padic"], [81, 0, 1, "c.padic_mat_get_fmpq_mat", "padic_mat_get_fmpq_mat"], [81, 0, 1, "c.padic_mat_get_prec", "padic_mat_get_prec"], [81, 0, 1, "c.padic_mat_get_val", "padic_mat_get_val"], [81, 0, 1, "c.padic_mat_init", "padic_mat_init"], [81, 0, 1, "c.padic_mat_init2", "padic_mat_init2"], [81, 0, 1, "c.padic_mat_is_canonical", "padic_mat_is_canonical"], [81, 0, 1, "c.padic_mat_is_empty", "padic_mat_is_empty"], [81, 0, 1, "c.padic_mat_is_square", "padic_mat_is_square"], [81, 0, 1, "c.padic_mat_is_zero", "padic_mat_is_zero"], [81, 0, 1, "c.padic_mat_mul", "padic_mat_mul"], [81, 0, 1, "c.padic_mat_ncols", "padic_mat_ncols"], [81, 0, 1, "c.padic_mat_neg", "padic_mat_neg"], [81, 0, 1, "c.padic_mat_nrows", "padic_mat_nrows"], [81, 0, 1, "c.padic_mat_one", "padic_mat_one"], [81, 0, 1, "c.padic_mat_prec", "padic_mat_prec"], [81, 0, 1, "c.padic_mat_print", "padic_mat_print"], [81, 0, 1, "c.padic_mat_print_pretty", "padic_mat_print_pretty"], [81, 0, 1, "c.padic_mat_randtest", "padic_mat_randtest"], [81, 0, 1, "c.padic_mat_reduce", "padic_mat_reduce"], [81, 0, 1, "c.padic_mat_scalar_div_fmpz", "padic_mat_scalar_div_fmpz"], [81, 0, 1, "c.padic_mat_scalar_mul_fmpz", "padic_mat_scalar_mul_fmpz"], [81, 0, 1, "c.padic_mat_scalar_mul_padic", "padic_mat_scalar_mul_padic"], [81, 0, 1, "c.padic_mat_set", "padic_mat_set"], [81, 0, 1, "c.padic_mat_set_entry_padic", "padic_mat_set_entry_padic"], [81, 0, 1, "c.padic_mat_set_fmpq_mat", "padic_mat_set_fmpq_mat"], [81, 0, 1, "c.padic_mat_sub", "padic_mat_sub"], [81, 0, 1, "c.padic_mat_swap", "padic_mat_swap"], [81, 0, 1, "c.padic_mat_swap_entrywise", "padic_mat_swap_entrywise"], [81, 0, 1, "c.padic_mat_transpose", "padic_mat_transpose"], [81, 0, 1, "c.padic_mat_val", "padic_mat_val"], [81, 0, 1, "c.padic_mat_zero", "padic_mat_zero"], [80, 0, 1, "c.padic_mul", "padic_mul"], [80, 0, 1, "c.padic_neg", "padic_neg"], [80, 0, 1, "c.padic_one", "padic_one"], [82, 0, 1, "c.padic_poly_add", "padic_poly_add"], [82, 0, 1, "c.padic_poly_canonicalise", "padic_poly_canonicalise"], [82, 0, 1, "c.padic_poly_clear", "padic_poly_clear"], [82, 0, 1, "c.padic_poly_compose", "padic_poly_compose"], [82, 0, 1, "c.padic_poly_compose_pow", "padic_poly_compose_pow"], [82, 0, 1, "c.padic_poly_debug", "padic_poly_debug"], [82, 0, 1, "c.padic_poly_degree", "padic_poly_degree"], [82, 0, 1, "c.padic_poly_derivative", "padic_poly_derivative"], [82, 0, 1, "c.padic_poly_equal", "padic_poly_equal"], [82, 0, 1, "c.padic_poly_evaluate_padic", "padic_poly_evaluate_padic"], [82, 0, 1, "c.padic_poly_fit_length", "padic_poly_fit_length"], [82, 0, 1, "c.padic_poly_fprint", "padic_poly_fprint"], [82, 0, 1, "c.padic_poly_fprint_pretty", "padic_poly_fprint_pretty"], [82, 0, 1, "c.padic_poly_get_coeff_padic", "padic_poly_get_coeff_padic"], [82, 0, 1, "c.padic_poly_get_fmpq_poly", "padic_poly_get_fmpq_poly"], [82, 0, 1, "c.padic_poly_get_fmpz_poly", "padic_poly_get_fmpz_poly"], [82, 0, 1, "c.padic_poly_init", "padic_poly_init"], [82, 0, 1, "c.padic_poly_init2", "padic_poly_init2"], [82, 0, 1, "c.padic_poly_inv_series", "padic_poly_inv_series"], [82, 0, 1, "c.padic_poly_is_canonical", "padic_poly_is_canonical"], [82, 0, 1, "c.padic_poly_is_one", "padic_poly_is_one"], [82, 0, 1, "c.padic_poly_is_reduced", "padic_poly_is_reduced"], [82, 0, 1, "c.padic_poly_is_zero", "padic_poly_is_zero"], [82, 0, 1, "c.padic_poly_length", "padic_poly_length"], [82, 0, 1, "c.padic_poly_mul", "padic_poly_mul"], [82, 0, 1, "c.padic_poly_neg", "padic_poly_neg"], [82, 0, 1, "c.padic_poly_one", "padic_poly_one"], [82, 0, 1, "c.padic_poly_pow", "padic_poly_pow"], [82, 0, 1, "c.padic_poly_prec", "padic_poly_prec"], [82, 0, 1, "c.padic_poly_print", "padic_poly_print"], [82, 0, 1, "c.padic_poly_print_pretty", "padic_poly_print_pretty"], [82, 0, 1, "c.padic_poly_randtest", "padic_poly_randtest"], [82, 0, 1, "c.padic_poly_randtest_not_zero", "padic_poly_randtest_not_zero"], [82, 0, 1, "c.padic_poly_randtest_val", "padic_poly_randtest_val"], [82, 0, 1, "c.padic_poly_realloc", "padic_poly_realloc"], [82, 0, 1, "c.padic_poly_reduce", "padic_poly_reduce"], [82, 0, 1, "c.padic_poly_scalar_mul_padic", "padic_poly_scalar_mul_padic"], [82, 0, 1, "c.padic_poly_set", "padic_poly_set"], [82, 0, 1, "c.padic_poly_set_coeff_padic", "padic_poly_set_coeff_padic"], [82, 0, 1, "c.padic_poly_set_fmpq", "padic_poly_set_fmpq"], [82, 0, 1, "c.padic_poly_set_fmpq_poly", "padic_poly_set_fmpq_poly"], [82, 0, 1, "c.padic_poly_set_fmpz", "padic_poly_set_fmpz"], [82, 0, 1, "c.padic_poly_set_fmpz_poly", "padic_poly_set_fmpz_poly"], [82, 0, 1, "c.padic_poly_set_padic", "padic_poly_set_padic"], [82, 0, 1, "c.padic_poly_set_si", "padic_poly_set_si"], [82, 0, 1, "c.padic_poly_set_ui", "padic_poly_set_ui"], [82, 0, 1, "c.padic_poly_shift_left", "padic_poly_shift_left"], [82, 0, 1, "c.padic_poly_shift_right", "padic_poly_shift_right"], [82, 0, 1, "c.padic_poly_sub", "padic_poly_sub"], [82, 0, 1, "c.padic_poly_swap", "padic_poly_swap"], [82, 0, 1, "c.padic_poly_truncate", "padic_poly_truncate"], [82, 0, 1, "c.padic_poly_val", "padic_poly_val"], [82, 0, 1, "c.padic_poly_zero", "padic_poly_zero"], [80, 0, 1, "c.padic_pow_si", "padic_pow_si"], [80, 0, 1, "c.padic_prec", "padic_prec"], [80, 0, 1, "c.padic_print", "padic_print"], [80, 0, 1, "c.padic_randtest", "padic_randtest"], [80, 0, 1, "c.padic_randtest_int", "padic_randtest_int"], [80, 0, 1, "c.padic_randtest_not_zero", "padic_randtest_not_zero"], [80, 0, 1, "c.padic_reduce", "padic_reduce"], [80, 0, 1, "c.padic_set", "padic_set"], [80, 0, 1, "c.padic_set_fmpq", "padic_set_fmpq"], [80, 0, 1, "c.padic_set_fmpz", "padic_set_fmpz"], [80, 0, 1, "c.padic_set_mpq", "padic_set_mpq"], [80, 0, 1, "c.padic_set_mpz", "padic_set_mpz"], [80, 0, 1, "c.padic_set_si", "padic_set_si"], [80, 0, 1, "c.padic_set_ui", "padic_set_ui"], [80, 0, 1, "c.padic_shift", "padic_shift"], [80, 0, 1, "c.padic_sqrt", "padic_sqrt"], [80, 0, 1, "c.padic_sub", "padic_sub"], [80, 0, 1, "c.padic_swap", "padic_swap"], [80, 0, 1, "c.padic_teichmuller", "padic_teichmuller"], [80, 0, 1, "c.padic_unit", "padic_unit"], [80, 0, 1, "c.padic_val", "padic_val"], [80, 0, 1, "c.padic_val_fac", "padic_val_fac"], [80, 0, 1, "c.padic_val_fac_ui", "padic_val_fac_ui"], [80, 0, 1, "c.padic_val_fac_ui_2", "padic_val_fac_ui_2"], [80, 0, 1, "c.padic_zero", "padic_zero"], [85, 0, 1, "c.prof_repeat", "prof_repeat"], [86, 0, 1, "c.qadic_add", "qadic_add"], [86, 0, 1, "c.qadic_clear", "qadic_clear"], [86, 0, 1, "c.qadic_ctx_clear", "qadic_ctx_clear"], [86, 0, 1, "c.qadic_ctx_degree", "qadic_ctx_degree"], [86, 0, 1, "c.qadic_ctx_init", "qadic_ctx_init"], [86, 0, 1, "c.qadic_ctx_init_conway", "qadic_ctx_init_conway"], [86, 0, 1, "c.qadic_ctx_print", "qadic_ctx_print"], [86, 0, 1, "c.qadic_equal", "qadic_equal"], [86, 0, 1, "c.qadic_exp", "qadic_exp"], [86, 0, 1, "c.qadic_exp_balanced", "qadic_exp_balanced"], [86, 0, 1, "c.qadic_exp_rectangular", "qadic_exp_rectangular"], [86, 0, 1, "c.qadic_fprint_pretty", "qadic_fprint_pretty"], [86, 0, 1, "c.qadic_frobenius", "qadic_frobenius"], [86, 0, 1, "c.qadic_gen", "qadic_gen"], [86, 0, 1, "c.qadic_get_padic", "qadic_get_padic"], [86, 0, 1, "c.qadic_init", "qadic_init"], [86, 0, 1, "c.qadic_init2", "qadic_init2"], [86, 0, 1, "c.qadic_inv", "qadic_inv"], [86, 0, 1, "c.qadic_is_one", "qadic_is_one"], [86, 0, 1, "c.qadic_is_zero", "qadic_is_zero"], [86, 0, 1, "c.qadic_log", "qadic_log"], [86, 0, 1, "c.qadic_log_balanced", "qadic_log_balanced"], [86, 0, 1, "c.qadic_log_rectangular", "qadic_log_rectangular"], [86, 0, 1, "c.qadic_mul", "qadic_mul"], [86, 0, 1, "c.qadic_neg", "qadic_neg"], [86, 0, 1, "c.qadic_norm", "qadic_norm"], [86, 0, 1, "c.qadic_norm_analytic", "qadic_norm_analytic"], [86, 0, 1, "c.qadic_norm_resultant", "qadic_norm_resultant"], [86, 0, 1, "c.qadic_one", "qadic_one"], [86, 0, 1, "c.qadic_pow", "qadic_pow"], [86, 0, 1, "c.qadic_prec", "qadic_prec"], [86, 0, 1, "c.qadic_print_pretty", "qadic_print_pretty"], [86, 0, 1, "c.qadic_randtest", "qadic_randtest"], [86, 0, 1, "c.qadic_randtest_int", "qadic_randtest_int"], [86, 0, 1, "c.qadic_randtest_not_zero", "qadic_randtest_not_zero"], [86, 0, 1, "c.qadic_randtest_val", "qadic_randtest_val"], [86, 0, 1, "c.qadic_reduce", "qadic_reduce"], [86, 0, 1, "c.qadic_set", "qadic_set"], [86, 0, 1, "c.qadic_set_ui", "qadic_set_ui"], [86, 0, 1, "c.qadic_sqrt", "qadic_sqrt"], [86, 0, 1, "c.qadic_sub", "qadic_sub"], [86, 0, 1, "c.qadic_teichmuller", "qadic_teichmuller"], [86, 0, 1, "c.qadic_trace", "qadic_trace"], [86, 0, 1, "c.qadic_val", "qadic_val"], [86, 0, 1, "c.qadic_zero", "qadic_zero"], [87, 0, 1, "c.qsieve_add_to_hashtable", "qsieve_add_to_hashtable"], [87, 0, 1, "c.qsieve_collect_relations", "qsieve_collect_relations"], [87, 0, 1, "c.qsieve_compare_relation", "qsieve_compare_relation"], [87, 0, 1, "c.qsieve_compute_C", "qsieve_compute_C"], [87, 0, 1, "c.qsieve_compute_pre_data", "qsieve_compute_pre_data"], [87, 0, 1, "c.qsieve_do_sieving", "qsieve_do_sieving"], [87, 0, 1, "c.qsieve_do_sieving2", "qsieve_do_sieving2"], [87, 0, 1, "c.qsieve_evaluate_candidate", "qsieve_evaluate_candidate"], [87, 0, 1, "c.qsieve_evaluate_sieve", "qsieve_evaluate_sieve"], [87, 0, 1, "c.qsieve_factor", "qsieve_factor"], [87, 0, 1, "c.qsieve_get_table_entry", "qsieve_get_table_entry"], [87, 0, 1, "c.qsieve_init_A0", "qsieve_init_A0"], [87, 0, 1, "c.qsieve_init_poly_first", "qsieve_init_poly_first"], [87, 0, 1, "c.qsieve_init_poly_next", "qsieve_init_poly_next"], [87, 0, 1, "c.qsieve_insert_relation2", "qsieve_insert_relation2"], [87, 0, 1, "c.qsieve_knuth_schroeppel", "qsieve_knuth_schroeppel"], [87, 0, 1, "c.qsieve_merge_relation", "qsieve_merge_relation"], [87, 0, 1, "c.qsieve_next_A0", "qsieve_next_A0"], [87, 0, 1, "c.qsieve_parse_relation", "qsieve_parse_relation"], [87, 0, 1, "c.qsieve_primes_increment", "qsieve_primes_increment"], [87, 0, 1, "c.qsieve_primes_init", "qsieve_primes_init"], [87, 0, 1, "c.qsieve_process_relation", "qsieve_process_relation"], [87, 0, 1, "c.qsieve_remove_duplicates", "qsieve_remove_duplicates"], [87, 0, 1, "c.qsieve_write_to_file", "qsieve_write_to_file"], [63, 2, 1, "c.sdiv_qrnnd", "sdiv_qrnnd"], [76, 0, 1, "c.signed_mpn_sub_n", "signed_mpn_sub_n"], [63, 2, 1, "c.smul_ppmm", "smul_ppmm"], [85, 0, 1, "c.start_clock", "start_clock"], [85, 0, 1, "c.stop_clock", "stop_clock"], [63, 2, 1, "c.sub_dddmmmsss", "sub_dddmmmsss"], [63, 2, 1, "c.sub_ddmmss", "sub_ddmmss"], [89, 0, 1, "c.thread_pool_clear", "thread_pool_clear"], [89, 0, 1, "c.thread_pool_get_size", "thread_pool_get_size"], [89, 0, 1, "c.thread_pool_give_back", "thread_pool_give_back"], [89, 3, 1, "c.thread_pool_handle", "thread_pool_handle"], [89, 0, 1, "c.thread_pool_init", "thread_pool_init"], [89, 0, 1, "c.thread_pool_request", "thread_pool_request"], [89, 0, 1, "c.thread_pool_set_size", "thread_pool_set_size"], [89, 3, 1, "c.thread_pool_t", "thread_pool_t"], [89, 0, 1, "c.thread_pool_wait", "thread_pool_wait"], [89, 0, 1, "c.thread_pool_wake", "thread_pool_wake"], [85, 0, 1, "c.timeit_start", "timeit_start"], [85, 0, 1, "c.timeit_stop", "timeit_stop"], [63, 2, 1, "c.udiv_qrnnd", "udiv_qrnnd"], [63, 2, 1, "c.udiv_qrnnd_preinv", "udiv_qrnnd_preinv"], [63, 2, 1, "c.umul_ppmm", "umul_ppmm"], [0, 3, 1, "c.unity_zp", "unity_zp"], [0, 0, 1, "c.unity_zp_add", "unity_zp_add"], [0, 0, 1, "c.unity_zp_aut", "unity_zp_aut"], [0, 0, 1, "c.unity_zp_aut_inv", "unity_zp_aut_inv"], [0, 0, 1, "c.unity_zp_clear", "unity_zp_clear"], [0, 0, 1, "c.unity_zp_coeff_add_fmpz", "unity_zp_coeff_add_fmpz"], [0, 0, 1, "c.unity_zp_coeff_add_ui", "unity_zp_coeff_add_ui"], [0, 0, 1, "c.unity_zp_coeff_dec", "unity_zp_coeff_dec"], [0, 0, 1, "c.unity_zp_coeff_inc", "unity_zp_coeff_inc"], [0, 0, 1, "c.unity_zp_coeff_set_fmpz", "unity_zp_coeff_set_fmpz"], [0, 0, 1, "c.unity_zp_coeff_set_ui", "unity_zp_coeff_set_ui"], [0, 0, 1, "c.unity_zp_copy", "unity_zp_copy"], [0, 0, 1, "c.unity_zp_equal", "unity_zp_equal"], [0, 0, 1, "c.unity_zp_init", "unity_zp_init"], [0, 0, 1, "c.unity_zp_is_unity", "unity_zp_is_unity"], [0, 0, 1, "c.unity_zp_jacobi_sum_2q_one", "unity_zp_jacobi_sum_2q_one"], [0, 0, 1, "c.unity_zp_jacobi_sum_2q_two", "unity_zp_jacobi_sum_2q_two"], [0, 0, 1, "c.unity_zp_jacobi_sum_pq", "unity_zp_jacobi_sum_pq"], [0, 0, 1, "c.unity_zp_mul", "unity_zp_mul"], [0, 0, 1, "c.unity_zp_mul_inplace", "unity_zp_mul_inplace"], [0, 0, 1, "c.unity_zp_mul_scalar_fmpz", "unity_zp_mul_scalar_fmpz"], [0, 0, 1, "c.unity_zp_mul_scalar_ui", "unity_zp_mul_scalar_ui"], [0, 0, 1, "c.unity_zp_pow_2k_fmpz", "unity_zp_pow_2k_fmpz"], [0, 0, 1, "c.unity_zp_pow_2k_ui", "unity_zp_pow_2k_ui"], [0, 0, 1, "c.unity_zp_pow_fmpz", "unity_zp_pow_fmpz"], [0, 0, 1, "c.unity_zp_pow_sliding_fmpz", "unity_zp_pow_sliding_fmpz"], [0, 0, 1, "c.unity_zp_pow_ui", "unity_zp_pow_ui"], [0, 0, 1, "c.unity_zp_print", "unity_zp_print"], [0, 0, 1, "c.unity_zp_reduce_cyclotomic", "unity_zp_reduce_cyclotomic"], [0, 0, 1, "c.unity_zp_set_zero", "unity_zp_set_zero"], [0, 0, 1, "c.unity_zp_sqr", "unity_zp_sqr"], [0, 0, 1, "c.unity_zp_sqr_inplace", "unity_zp_sqr_inplace"], [0, 0, 1, "c.unity_zp_swap", "unity_zp_swap"], [0, 3, 1, "c.unity_zpq", "unity_zpq"], [0, 0, 1, "c.unity_zpq_add", "unity_zpq_add"], [0, 0, 1, "c.unity_zpq_clear", "unity_zpq_clear"], [0, 0, 1, "c.unity_zpq_coeff_add", "unity_zpq_coeff_add"], [0, 0, 1, "c.unity_zpq_coeff_set_fmpz", "unity_zpq_coeff_set_fmpz"], [0, 0, 1, "c.unity_zpq_coeff_set_ui", "unity_zpq_coeff_set_ui"], [0, 0, 1, "c.unity_zpq_copy", "unity_zpq_copy"], [0, 0, 1, "c.unity_zpq_equal", "unity_zpq_equal"], [0, 0, 1, "c.unity_zpq_gauss_sum", "unity_zpq_gauss_sum"], [0, 0, 1, "c.unity_zpq_gauss_sum_sigma_pow", "unity_zpq_gauss_sum_sigma_pow"], [0, 0, 1, "c.unity_zpq_init", "unity_zpq_init"], [0, 0, 1, "c.unity_zpq_is_p_unity", "unity_zpq_is_p_unity"], [0, 0, 1, "c.unity_zpq_is_p_unity_generator", "unity_zpq_is_p_unity_generator"], [0, 0, 1, "c.unity_zpq_mul", "unity_zpq_mul"], [0, 0, 1, "c.unity_zpq_mul_unity_p_pow", "unity_zpq_mul_unity_p_pow"], [0, 0, 1, "c.unity_zpq_p_unity", "unity_zpq_p_unity"], [0, 0, 1, "c.unity_zpq_pow", "unity_zpq_pow"], [0, 0, 1, "c.unity_zpq_pow_ui", "unity_zpq_pow_ui"], [0, 0, 1, "c.unity_zpq_swap", "unity_zpq_swap"], [62, 0, 1, "c.z_kronecker", "z_kronecker"], [62, 0, 1, "c.z_mul_checked", "z_mul_checked"], [62, 0, 1, "c.z_randint", "z_randint"], [62, 0, 1, "c.z_randtest", "z_randtest"], [62, 0, 1, "c.z_randtest_not_zero", "z_randtest_not_zero"], [62, 0, 1, "c.z_sizeinbase", "z_sizeinbase"]], "COEFF_IS_MPZ": [[18, 1, 1, "c.COEFF_IS_MPZ", "f"]], "COEFF_TO_PTR": [[18, 1, 1, "c.COEFF_TO_PTR", "f"]], "PTR_TO_COEFF": [[18, 1, 1, "c.PTR_TO_COEFF", "ptr"]], "_aprcl_is_prime_gauss": [[0, 1, 1, "c._aprcl_is_prime_gauss", "config"], [0, 1, 1, "c._aprcl_is_prime_gauss", "n"]], "_aprcl_is_prime_jacobi": [[0, 1, 1, "c._aprcl_is_prime_jacobi", "config"], [0, 1, 1, "c._aprcl_is_prime_jacobi", "n"]], "_arith_bernoulli_number": [[1, 1, 1, "c._arith_bernoulli_number", "den"], [1, 1, 1, "c._arith_bernoulli_number", "n"], [1, 1, 1, "c._arith_bernoulli_number", "num"]], "_arith_bernoulli_number_vec": [[1, 1, 1, "c._arith_bernoulli_number_vec", "den"], [1, 1, 1, "c._arith_bernoulli_number_vec", "n"], [1, 1, 1, "c._arith_bernoulli_number_vec", "num"]], "_arith_bernoulli_number_vec_multi_mod": [[1, 1, 1, "c._arith_bernoulli_number_vec_multi_mod", "den"], [1, 1, 1, "c._arith_bernoulli_number_vec_multi_mod", "n"], [1, 1, 1, "c._arith_bernoulli_number_vec_multi_mod", "num"]], "_arith_bernoulli_number_vec_recursive": [[1, 1, 1, "c._arith_bernoulli_number_vec_recursive", "den"], [1, 1, 1, "c._arith_bernoulli_number_vec_recursive", "n"], [1, 1, 1, "c._arith_bernoulli_number_vec_recursive", "num"]], "_arith_bernoulli_number_vec_zeta": [[1, 1, 1, "c._arith_bernoulli_number_vec_zeta", "den"], [1, 1, 1, "c._arith_bernoulli_number_vec_zeta", "n"], [1, 1, 1, "c._arith_bernoulli_number_vec_zeta", "num"]], "_arith_bernoulli_number_zeta": [[1, 1, 1, "c._arith_bernoulli_number_zeta", "den"], [1, 1, 1, "c._arith_bernoulli_number_zeta", "n"], [1, 1, 1, "c._arith_bernoulli_number_zeta", "num"]], "_arith_cos_minpoly": [[1, 1, 1, "c._arith_cos_minpoly", "coeffs"], [1, 1, 1, "c._arith_cos_minpoly", "d"], [1, 1, 1, "c._arith_cos_minpoly", "n"]], "_arith_euler_number_zeta": [[1, 1, 1, "c._arith_euler_number_zeta", "n"], [1, 1, 1, "c._arith_euler_number_zeta", "res"]], "_arith_harmonic_number": [[1, 1, 1, "c._arith_harmonic_number", "den"], [1, 1, 1, "c._arith_harmonic_number", "n"], [1, 1, 1, "c._arith_harmonic_number", "num"]], "_d_vec_add": [[6, 1, 1, "c._d_vec_add", "len2"], [6, 1, 1, "c._d_vec_add", "res"], [6, 1, 1, "c._d_vec_add", "vec1"], [6, 1, 1, "c._d_vec_add", "vec2"]], "_d_vec_approx_equal": [[6, 1, 1, "c._d_vec_approx_equal", "eps"], [6, 1, 1, "c._d_vec_approx_equal", "len"], [6, 1, 1, "c._d_vec_approx_equal", "vec1"], [6, 1, 1, "c._d_vec_approx_equal", "vec2"]], "_d_vec_clear": [[6, 1, 1, "c._d_vec_clear", "vec"]], "_d_vec_dot": [[6, 1, 1, "c._d_vec_dot", "len2"], [6, 1, 1, "c._d_vec_dot", "vec1"], [6, 1, 1, "c._d_vec_dot", "vec2"]], "_d_vec_dot_heuristic": [[6, 1, 1, "c._d_vec_dot_heuristic", "err"], [6, 1, 1, "c._d_vec_dot_heuristic", "len2"], [6, 1, 1, "c._d_vec_dot_heuristic", "vec1"], [6, 1, 1, "c._d_vec_dot_heuristic", "vec2"]], "_d_vec_dot_thrice": [[6, 1, 1, "c._d_vec_dot_thrice", "err"], [6, 1, 1, "c._d_vec_dot_thrice", "len2"], [6, 1, 1, "c._d_vec_dot_thrice", "vec1"], [6, 1, 1, "c._d_vec_dot_thrice", "vec2"]], "_d_vec_equal": [[6, 1, 1, "c._d_vec_equal", "len"], [6, 1, 1, "c._d_vec_equal", "vec1"], [6, 1, 1, "c._d_vec_equal", "vec2"]], "_d_vec_init": [[6, 1, 1, "c._d_vec_init", "len"]], "_d_vec_is_approx_zero": [[6, 1, 1, "c._d_vec_is_approx_zero", "eps"], [6, 1, 1, "c._d_vec_is_approx_zero", "len"], [6, 1, 1, "c._d_vec_is_approx_zero", "vec"]], "_d_vec_is_zero": [[6, 1, 1, "c._d_vec_is_zero", "len"], [6, 1, 1, "c._d_vec_is_zero", "vec"]], "_d_vec_norm": [[6, 1, 1, "c._d_vec_norm", "len"], [6, 1, 1, "c._d_vec_norm", "vec"]], "_d_vec_randtest": [[6, 1, 1, "c._d_vec_randtest", "f"], [6, 1, 1, "c._d_vec_randtest", "len"], [6, 1, 1, "c._d_vec_randtest", "maxexp"], [6, 1, 1, "c._d_vec_randtest", "minexp"], [6, 1, 1, "c._d_vec_randtest", "state"]], "_d_vec_set": [[6, 1, 1, "c._d_vec_set", "len2"], [6, 1, 1, "c._d_vec_set", "vec1"], [6, 1, 1, "c._d_vec_set", "vec2"]], "_d_vec_sub": [[6, 1, 1, "c._d_vec_sub", "len2"], [6, 1, 1, "c._d_vec_sub", "res"], [6, 1, 1, "c._d_vec_sub", "vec1"], [6, 1, 1, "c._d_vec_sub", "vec2"]], "_d_vec_zero": [[6, 1, 1, "c._d_vec_zero", "len"], [6, 1, 1, "c._d_vec_zero", "vec"]], "_fft_mulmod_2expp1": [[9, 1, 1, "c._fft_mulmod_2expp1", "depth"], [9, 1, 1, "c._fft_mulmod_2expp1", "i1"], [9, 1, 1, "c._fft_mulmod_2expp1", "i2"], [9, 1, 1, "c._fft_mulmod_2expp1", "r1"], [9, 1, 1, "c._fft_mulmod_2expp1", "r_limbs"], [9, 1, 1, "c._fft_mulmod_2expp1", "w"]], "_fmpq_add": [[12, 1, 1, "c._fmpq_add", "op1den"], [12, 1, 1, "c._fmpq_add", "op1num"], [12, 1, 1, "c._fmpq_add", "op2den"], [12, 1, 1, "c._fmpq_add", "op2num"], [12, 1, 1, "c._fmpq_add", "rden"], [12, 1, 1, "c._fmpq_add", "rnum"]], "_fmpq_add_fmpz": [[12, 1, 1, "c._fmpq_add_fmpz", "p"], [12, 1, 1, "c._fmpq_add_fmpz", "q"], [12, 1, 1, "c._fmpq_add_fmpz", "r"], [12, 1, 1, "c._fmpq_add_fmpz", "rden"], [12, 1, 1, "c._fmpq_add_fmpz", "rnum"]], "_fmpq_add_si": [[12, 1, 1, "c._fmpq_add_si", "p"], [12, 1, 1, "c._fmpq_add_si", "q"], [12, 1, 1, "c._fmpq_add_si", "r"], [12, 1, 1, "c._fmpq_add_si", "rden"], [12, 1, 1, "c._fmpq_add_si", "rnum"]], "_fmpq_add_small": [[12, 1, 1, "c._fmpq_add_small", "p1"], [12, 1, 1, "c._fmpq_add_small", "p2"], [12, 1, 1, "c._fmpq_add_small", "q1"], [12, 1, 1, "c._fmpq_add_small", "q2"], [12, 1, 1, "c._fmpq_add_small", "rden"], [12, 1, 1, "c._fmpq_add_small", "rnum"]], "_fmpq_add_ui": [[12, 1, 1, "c._fmpq_add_ui", "p"], [12, 1, 1, "c._fmpq_add_ui", "q"], [12, 1, 1, "c._fmpq_add_ui", "r"], [12, 1, 1, "c._fmpq_add_ui", "rden"], [12, 1, 1, "c._fmpq_add_ui", "rnum"]], "_fmpq_addmul": [[12, 1, 1, "c._fmpq_addmul", "op1den"], [12, 1, 1, "c._fmpq_addmul", "op1num"], [12, 1, 1, "c._fmpq_addmul", "op2den"], [12, 1, 1, "c._fmpq_addmul", "op2num"], [12, 1, 1, "c._fmpq_addmul", "rden"], [12, 1, 1, "c._fmpq_addmul", "rnum"]], "_fmpq_canonicalise": [[12, 1, 1, "c._fmpq_canonicalise", "den"], [12, 1, 1, "c._fmpq_canonicalise", "num"]], "_fmpq_div": [[12, 1, 1, "c._fmpq_div", "op1den"], [12, 1, 1, "c._fmpq_div", "op1num"], [12, 1, 1, "c._fmpq_div", "op2den"], [12, 1, 1, "c._fmpq_div", "op2num"], [12, 1, 1, "c._fmpq_div", "rden"], [12, 1, 1, "c._fmpq_div", "rnum"]], "_fmpq_fprint": [[12, 1, 1, "c._fmpq_fprint", "den"], [12, 1, 1, "c._fmpq_fprint", "file"], [12, 1, 1, "c._fmpq_fprint", "num"]], "_fmpq_gcd": [[12, 1, 1, "c._fmpq_gcd", "p"], [12, 1, 1, "c._fmpq_gcd", "q"], [12, 1, 1, "c._fmpq_gcd", "r"], [12, 1, 1, "c._fmpq_gcd", "rden"], [12, 1, 1, "c._fmpq_gcd", "rnum"], [12, 1, 1, "c._fmpq_gcd", "s"]], "_fmpq_gcd_cofactors": [[12, 1, 1, "c._fmpq_gcd_cofactors", "abar"], [12, 1, 1, "c._fmpq_gcd_cofactors", "aden"], [12, 1, 1, "c._fmpq_gcd_cofactors", "anum"], [12, 1, 1, "c._fmpq_gcd_cofactors", "bbar"], [12, 1, 1, "c._fmpq_gcd_cofactors", "bden"], [12, 1, 1, "c._fmpq_gcd_cofactors", "bnum"], [12, 1, 1, "c._fmpq_gcd_cofactors", "gden"], [12, 1, 1, "c._fmpq_gcd_cofactors", "gnum"]], "_fmpq_get_str": [[12, 1, 1, "c._fmpq_get_str", "b"], [12, 1, 1, "c._fmpq_get_str", "den"], [12, 1, 1, "c._fmpq_get_str", "num"], [12, 1, 1, "c._fmpq_get_str", "str"]], "_fmpq_harmonic_ui": [[12, 1, 1, "c._fmpq_harmonic_ui", "den"], [12, 1, 1, "c._fmpq_harmonic_ui", "n"], [12, 1, 1, "c._fmpq_harmonic_ui", "num"]], "_fmpq_is_canonical": [[12, 1, 1, "c._fmpq_is_canonical", "den"], [12, 1, 1, "c._fmpq_is_canonical", "num"]], "_fmpq_mat_charpoly": [[13, 1, 1, "c._fmpq_mat_charpoly", "coeffs"], [13, 1, 1, "c._fmpq_mat_charpoly", "den"], [13, 1, 1, "c._fmpq_mat_charpoly", "mat"]], "_fmpq_mat_minpoly": [[13, 1, 1, "c._fmpq_mat_minpoly", "coeffs"], [13, 1, 1, "c._fmpq_mat_minpoly", "den"], [13, 1, 1, "c._fmpq_mat_minpoly", "mat"]], "_fmpq_mod_fmpz": [[12, 1, 1, "c._fmpq_mod_fmpz", "den"], [12, 1, 1, "c._fmpq_mod_fmpz", "mod"], [12, 1, 1, "c._fmpq_mod_fmpz", "num"], [12, 1, 1, "c._fmpq_mod_fmpz", "res"]], "_fmpq_mul": [[12, 1, 1, "c._fmpq_mul", "op1den"], [12, 1, 1, "c._fmpq_mul", "op1num"], [12, 1, 1, "c._fmpq_mul", "op2den"], [12, 1, 1, "c._fmpq_mul", "op2num"], [12, 1, 1, "c._fmpq_mul", "rden"], [12, 1, 1, "c._fmpq_mul", "rnum"]], "_fmpq_mul_si": [[12, 1, 1, "c._fmpq_mul_si", "p"], [12, 1, 1, "c._fmpq_mul_si", "q"], [12, 1, 1, "c._fmpq_mul_si", "r"], [12, 1, 1, "c._fmpq_mul_si", "rden"], [12, 1, 1, "c._fmpq_mul_si", "rnum"]], "_fmpq_mul_small": [[12, 1, 1, "c._fmpq_mul_small", "p1"], [12, 1, 1, "c._fmpq_mul_small", "p2"], [12, 1, 1, "c._fmpq_mul_small", "q1"], [12, 1, 1, "c._fmpq_mul_small", "q2"], [12, 1, 1, "c._fmpq_mul_small", "rden"], [12, 1, 1, "c._fmpq_mul_small", "rnum"]], "_fmpq_mul_ui": [[12, 1, 1, "c._fmpq_mul_ui", "p"], [12, 1, 1, "c._fmpq_mul_ui", "q"], [12, 1, 1, "c._fmpq_mul_ui", "r"], [12, 1, 1, "c._fmpq_mul_ui", "rden"], [12, 1, 1, "c._fmpq_mul_ui", "rnum"]], "_fmpq_next_calkin_wilf": [[12, 1, 1, "c._fmpq_next_calkin_wilf", "den"], [12, 1, 1, "c._fmpq_next_calkin_wilf", "num"], [12, 1, 1, "c._fmpq_next_calkin_wilf", "rden"], [12, 1, 1, "c._fmpq_next_calkin_wilf", "rnum"]], "_fmpq_next_minimal": [[12, 1, 1, "c._fmpq_next_minimal", "den"], [12, 1, 1, "c._fmpq_next_minimal", "num"], [12, 1, 1, "c._fmpq_next_minimal", "rden"], [12, 1, 1, "c._fmpq_next_minimal", "rnum"]], "_fmpq_next_signed_calkin_wilf": [[12, 1, 1, "c._fmpq_next_signed_calkin_wilf", "den"], [12, 1, 1, "c._fmpq_next_signed_calkin_wilf", "num"], [12, 1, 1, "c._fmpq_next_signed_calkin_wilf", "rden"], [12, 1, 1, "c._fmpq_next_signed_calkin_wilf", "rnum"]], "_fmpq_next_signed_minimal": [[12, 1, 1, "c._fmpq_next_signed_minimal", "den"], [12, 1, 1, "c._fmpq_next_signed_minimal", "num"], [12, 1, 1, "c._fmpq_next_signed_minimal", "rden"], [12, 1, 1, "c._fmpq_next_signed_minimal", "rnum"]], "_fmpq_poly_add": [[16, 1, 1, "c._fmpq_poly_add", "den1"], [16, 1, 1, "c._fmpq_poly_add", "den2"], [16, 1, 1, "c._fmpq_poly_add", "len1"], [16, 1, 1, "c._fmpq_poly_add", "len2"], [16, 1, 1, "c._fmpq_poly_add", "poly1"], [16, 1, 1, "c._fmpq_poly_add", "poly2"], [16, 1, 1, "c._fmpq_poly_add", "rden"], [16, 1, 1, "c._fmpq_poly_add", "rpoly"]], "_fmpq_poly_add_can": [[16, 1, 1, "c._fmpq_poly_add_can", "can"], [16, 1, 1, "c._fmpq_poly_add_can", "den1"], [16, 1, 1, "c._fmpq_poly_add_can", "den2"], [16, 1, 1, "c._fmpq_poly_add_can", "len1"], [16, 1, 1, "c._fmpq_poly_add_can", "len2"], [16, 1, 1, "c._fmpq_poly_add_can", "poly1"], [16, 1, 1, "c._fmpq_poly_add_can", "poly2"], [16, 1, 1, "c._fmpq_poly_add_can", "rden"], [16, 1, 1, "c._fmpq_poly_add_can", "rpoly"]], "_fmpq_poly_add_series": [[16, 1, 1, "c._fmpq_poly_add_series", "den1"], [16, 1, 1, "c._fmpq_poly_add_series", "den2"], [16, 1, 1, "c._fmpq_poly_add_series", "len1"], [16, 1, 1, "c._fmpq_poly_add_series", "len2"], [16, 1, 1, "c._fmpq_poly_add_series", "n"], [16, 1, 1, "c._fmpq_poly_add_series", "poly1"], [16, 1, 1, "c._fmpq_poly_add_series", "poly2"], [16, 1, 1, "c._fmpq_poly_add_series", "rden"], [16, 1, 1, "c._fmpq_poly_add_series", "rpoly"]], "_fmpq_poly_add_series_can": [[16, 1, 1, "c._fmpq_poly_add_series_can", "can"], [16, 1, 1, "c._fmpq_poly_add_series_can", "den1"], [16, 1, 1, "c._fmpq_poly_add_series_can", "den2"], [16, 1, 1, "c._fmpq_poly_add_series_can", "len1"], [16, 1, 1, "c._fmpq_poly_add_series_can", "len2"], [16, 1, 1, "c._fmpq_poly_add_series_can", "n"], [16, 1, 1, "c._fmpq_poly_add_series_can", "poly1"], [16, 1, 1, "c._fmpq_poly_add_series_can", "poly2"], [16, 1, 1, "c._fmpq_poly_add_series_can", "rden"], [16, 1, 1, "c._fmpq_poly_add_series_can", "rpoly"]], "_fmpq_poly_asin_series": [[16, 1, 1, "c._fmpq_poly_asin_series", "f"], [16, 1, 1, "c._fmpq_poly_asin_series", "fden"], [16, 1, 1, "c._fmpq_poly_asin_series", "flen"], [16, 1, 1, "c._fmpq_poly_asin_series", "g"], [16, 1, 1, "c._fmpq_poly_asin_series", "gden"], [16, 1, 1, "c._fmpq_poly_asin_series", "n"]], "_fmpq_poly_asinh_series": [[16, 1, 1, "c._fmpq_poly_asinh_series", "f"], [16, 1, 1, "c._fmpq_poly_asinh_series", "fden"], [16, 1, 1, "c._fmpq_poly_asinh_series", "flen"], [16, 1, 1, "c._fmpq_poly_asinh_series", "g"], [16, 1, 1, "c._fmpq_poly_asinh_series", "gden"], [16, 1, 1, "c._fmpq_poly_asinh_series", "n"]], "_fmpq_poly_atan_series": [[16, 1, 1, "c._fmpq_poly_atan_series", "f"], [16, 1, 1, "c._fmpq_poly_atan_series", "fden"], [16, 1, 1, "c._fmpq_poly_atan_series", "flen"], [16, 1, 1, "c._fmpq_poly_atan_series", "g"], [16, 1, 1, "c._fmpq_poly_atan_series", "gden"], [16, 1, 1, "c._fmpq_poly_atan_series", "n"]], "_fmpq_poly_atanh_series": [[16, 1, 1, "c._fmpq_poly_atanh_series", "f"], [16, 1, 1, "c._fmpq_poly_atanh_series", "fden"], [16, 1, 1, "c._fmpq_poly_atanh_series", "flen"], [16, 1, 1, "c._fmpq_poly_atanh_series", "g"], [16, 1, 1, "c._fmpq_poly_atanh_series", "gden"], [16, 1, 1, "c._fmpq_poly_atanh_series", "n"]], "_fmpq_poly_canonicalise": [[16, 1, 1, "c._fmpq_poly_canonicalise", "den"], [16, 1, 1, "c._fmpq_poly_canonicalise", "len"], [16, 1, 1, "c._fmpq_poly_canonicalise", "poly"]], "_fmpq_poly_cmp": [[16, 1, 1, "c._fmpq_poly_cmp", "lden"], [16, 1, 1, "c._fmpq_poly_cmp", "len"], [16, 1, 1, "c._fmpq_poly_cmp", "lpoly"], [16, 1, 1, "c._fmpq_poly_cmp", "rden"], [16, 1, 1, "c._fmpq_poly_cmp", "rpoly"]], "_fmpq_poly_compose": [[16, 1, 1, "c._fmpq_poly_compose", "den"], [16, 1, 1, "c._fmpq_poly_compose", "den1"], [16, 1, 1, "c._fmpq_poly_compose", "den2"], [16, 1, 1, "c._fmpq_poly_compose", "len1"], [16, 1, 1, "c._fmpq_poly_compose", "len2"], [16, 1, 1, "c._fmpq_poly_compose", "poly1"], [16, 1, 1, "c._fmpq_poly_compose", "poly2"], [16, 1, 1, "c._fmpq_poly_compose", "res"]], "_fmpq_poly_compose_series": [[16, 1, 1, "c._fmpq_poly_compose_series", "den"], [16, 1, 1, "c._fmpq_poly_compose_series", "den1"], [16, 1, 1, "c._fmpq_poly_compose_series", "den2"], [16, 1, 1, "c._fmpq_poly_compose_series", "len1"], [16, 1, 1, "c._fmpq_poly_compose_series", "len2"], [16, 1, 1, "c._fmpq_poly_compose_series", "n"], [16, 1, 1, "c._fmpq_poly_compose_series", "poly1"], [16, 1, 1, "c._fmpq_poly_compose_series", "poly2"], [16, 1, 1, "c._fmpq_poly_compose_series", "res"]], "_fmpq_poly_compose_series_brent_kung": [[16, 1, 1, "c._fmpq_poly_compose_series_brent_kung", "den"], [16, 1, 1, "c._fmpq_poly_compose_series_brent_kung", "den1"], [16, 1, 1, "c._fmpq_poly_compose_series_brent_kung", "den2"], [16, 1, 1, "c._fmpq_poly_compose_series_brent_kung", "len1"], [16, 1, 1, "c._fmpq_poly_compose_series_brent_kung", "len2"], [16, 1, 1, "c._fmpq_poly_compose_series_brent_kung", "n"], [16, 1, 1, "c._fmpq_poly_compose_series_brent_kung", "poly1"], [16, 1, 1, "c._fmpq_poly_compose_series_brent_kung", "poly2"], [16, 1, 1, "c._fmpq_poly_compose_series_brent_kung", "res"]], "_fmpq_poly_compose_series_horner": [[16, 1, 1, "c._fmpq_poly_compose_series_horner", "den"], [16, 1, 1, "c._fmpq_poly_compose_series_horner", "den1"], [16, 1, 1, "c._fmpq_poly_compose_series_horner", "den2"], [16, 1, 1, "c._fmpq_poly_compose_series_horner", "len1"], [16, 1, 1, "c._fmpq_poly_compose_series_horner", "len2"], [16, 1, 1, "c._fmpq_poly_compose_series_horner", "n"], [16, 1, 1, "c._fmpq_poly_compose_series_horner", "poly1"], [16, 1, 1, "c._fmpq_poly_compose_series_horner", "poly2"], [16, 1, 1, "c._fmpq_poly_compose_series_horner", "res"]], "_fmpq_poly_content": [[16, 1, 1, "c._fmpq_poly_content", "den"], [16, 1, 1, "c._fmpq_poly_content", "len"], [16, 1, 1, "c._fmpq_poly_content", "poly"], [16, 1, 1, "c._fmpq_poly_content", "res"]], "_fmpq_poly_cos_series": [[16, 1, 1, "c._fmpq_poly_cos_series", "f"], [16, 1, 1, "c._fmpq_poly_cos_series", "fden"], [16, 1, 1, "c._fmpq_poly_cos_series", "flen"], [16, 1, 1, "c._fmpq_poly_cos_series", "g"], [16, 1, 1, "c._fmpq_poly_cos_series", "gden"], [16, 1, 1, "c._fmpq_poly_cos_series", "n"]], "_fmpq_poly_cosh_series": [[16, 1, 1, "c._fmpq_poly_cosh_series", "f"], [16, 1, 1, "c._fmpq_poly_cosh_series", "fden"], [16, 1, 1, "c._fmpq_poly_cosh_series", "flen"], [16, 1, 1, "c._fmpq_poly_cosh_series", "g"], [16, 1, 1, "c._fmpq_poly_cosh_series", "gden"], [16, 1, 1, "c._fmpq_poly_cosh_series", "n"]], "_fmpq_poly_derivative": [[16, 1, 1, "c._fmpq_poly_derivative", "den"], [16, 1, 1, "c._fmpq_poly_derivative", "len"], [16, 1, 1, "c._fmpq_poly_derivative", "poly"], [16, 1, 1, "c._fmpq_poly_derivative", "rden"], [16, 1, 1, "c._fmpq_poly_derivative", "rpoly"]], "_fmpq_poly_div": [[16, 1, 1, "c._fmpq_poly_div", "A"], [16, 1, 1, "c._fmpq_poly_div", "B"], [16, 1, 1, "c._fmpq_poly_div", "Q"], [16, 1, 1, "c._fmpq_poly_div", "a"], [16, 1, 1, "c._fmpq_poly_div", "b"], [16, 1, 1, "c._fmpq_poly_div", "inv"], [16, 1, 1, "c._fmpq_poly_div", "lenA"], [16, 1, 1, "c._fmpq_poly_div", "lenB"], [16, 1, 1, "c._fmpq_poly_div", "q"]], "_fmpq_poly_div_series": [[16, 1, 1, "c._fmpq_poly_div_series", "A"], [16, 1, 1, "c._fmpq_poly_div_series", "B"], [16, 1, 1, "c._fmpq_poly_div_series", "Q"], [16, 1, 1, "c._fmpq_poly_div_series", "denA"], [16, 1, 1, "c._fmpq_poly_div_series", "denB"], [16, 1, 1, "c._fmpq_poly_div_series", "denQ"], [16, 1, 1, "c._fmpq_poly_div_series", "lenA"], [16, 1, 1, "c._fmpq_poly_div_series", "lenB"], [16, 1, 1, "c._fmpq_poly_div_series", "n"]], "_fmpq_poly_divides": [[16, 1, 1, "c._fmpq_poly_divides", "den1"], [16, 1, 1, "c._fmpq_poly_divides", "den2"], [16, 1, 1, "c._fmpq_poly_divides", "len1"], [16, 1, 1, "c._fmpq_poly_divides", "len2"], [16, 1, 1, "c._fmpq_poly_divides", "poly1"], [16, 1, 1, "c._fmpq_poly_divides", "poly2"], [16, 1, 1, "c._fmpq_poly_divides", "qden"], [16, 1, 1, "c._fmpq_poly_divides", "qpoly"]], "_fmpq_poly_divrem": [[16, 1, 1, "c._fmpq_poly_divrem", "A"], [16, 1, 1, "c._fmpq_poly_divrem", "B"], [16, 1, 1, "c._fmpq_poly_divrem", "Q"], [16, 1, 1, "c._fmpq_poly_divrem", "R"], [16, 1, 1, "c._fmpq_poly_divrem", "a"], [16, 1, 1, "c._fmpq_poly_divrem", "b"], [16, 1, 1, "c._fmpq_poly_divrem", "inv"], [16, 1, 1, "c._fmpq_poly_divrem", "lenA"], [16, 1, 1, "c._fmpq_poly_divrem", "lenB"], [16, 1, 1, "c._fmpq_poly_divrem", "q"], [16, 1, 1, "c._fmpq_poly_divrem", "r"]], "_fmpq_poly_equal_trunc": [[16, 1, 1, "c._fmpq_poly_equal_trunc", "den1"], [16, 1, 1, "c._fmpq_poly_equal_trunc", "den2"], [16, 1, 1, "c._fmpq_poly_equal_trunc", "len1"], [16, 1, 1, "c._fmpq_poly_equal_trunc", "len2"], [16, 1, 1, "c._fmpq_poly_equal_trunc", "n"], [16, 1, 1, "c._fmpq_poly_equal_trunc", "poly1"], [16, 1, 1, "c._fmpq_poly_equal_trunc", "poly2"]], "_fmpq_poly_evaluate_fmpq": [[16, 1, 1, "c._fmpq_poly_evaluate_fmpq", "aden"], [16, 1, 1, "c._fmpq_poly_evaluate_fmpq", "anum"], [16, 1, 1, "c._fmpq_poly_evaluate_fmpq", "den"], [16, 1, 1, "c._fmpq_poly_evaluate_fmpq", "len"], [16, 1, 1, "c._fmpq_poly_evaluate_fmpq", "poly"], [16, 1, 1, "c._fmpq_poly_evaluate_fmpq", "rden"], [16, 1, 1, "c._fmpq_poly_evaluate_fmpq", "rnum"]], "_fmpq_poly_evaluate_fmpz": [[16, 1, 1, "c._fmpq_poly_evaluate_fmpz", "a"], [16, 1, 1, "c._fmpq_poly_evaluate_fmpz", "den"], [16, 1, 1, "c._fmpq_poly_evaluate_fmpz", "len"], [16, 1, 1, "c._fmpq_poly_evaluate_fmpz", "poly"], [16, 1, 1, "c._fmpq_poly_evaluate_fmpz", "rden"], [16, 1, 1, "c._fmpq_poly_evaluate_fmpz", "rnum"]], "_fmpq_poly_exp_expinv_series": [[16, 1, 1, "c._fmpq_poly_exp_expinv_series", "h"], [16, 1, 1, "c._fmpq_poly_exp_expinv_series", "hden"], [16, 1, 1, "c._fmpq_poly_exp_expinv_series", "hlen"], [16, 1, 1, "c._fmpq_poly_exp_expinv_series", "n"], [16, 1, 1, "c._fmpq_poly_exp_expinv_series", "res1"], [16, 1, 1, "c._fmpq_poly_exp_expinv_series", "res1den"], [16, 1, 1, "c._fmpq_poly_exp_expinv_series", "res2"], [16, 1, 1, "c._fmpq_poly_exp_expinv_series", "res2den"]], "_fmpq_poly_exp_series": [[16, 1, 1, "c._fmpq_poly_exp_series", "g"], [16, 1, 1, "c._fmpq_poly_exp_series", "gden"], [16, 1, 1, "c._fmpq_poly_exp_series", "h"], [16, 1, 1, "c._fmpq_poly_exp_series", "hden"], [16, 1, 1, "c._fmpq_poly_exp_series", "hlen"], [16, 1, 1, "c._fmpq_poly_exp_series", "n"]], "_fmpq_poly_fprint": [[16, 1, 1, "c._fmpq_poly_fprint", "den"], [16, 1, 1, "c._fmpq_poly_fprint", "file"], [16, 1, 1, "c._fmpq_poly_fprint", "len"], [16, 1, 1, "c._fmpq_poly_fprint", "poly"]], "_fmpq_poly_fprint_pretty": [[16, 1, 1, "c._fmpq_poly_fprint_pretty", "den"], [16, 1, 1, "c._fmpq_poly_fprint_pretty", "file"], [16, 1, 1, "c._fmpq_poly_fprint_pretty", "len"], [16, 1, 1, "c._fmpq_poly_fprint_pretty", "poly"], [16, 1, 1, "c._fmpq_poly_fprint_pretty", "x"]], "_fmpq_poly_gcd": [[16, 1, 1, "c._fmpq_poly_gcd", "A"], [16, 1, 1, "c._fmpq_poly_gcd", "B"], [16, 1, 1, "c._fmpq_poly_gcd", "G"], [16, 1, 1, "c._fmpq_poly_gcd", "denG"], [16, 1, 1, "c._fmpq_poly_gcd", "lenA"], [16, 1, 1, "c._fmpq_poly_gcd", "lenB"]], "_fmpq_poly_gegenbauer_c": [[16, 1, 1, "c._fmpq_poly_gegenbauer_c", "a"], [16, 1, 1, "c._fmpq_poly_gegenbauer_c", "coeffs"], [16, 1, 1, "c._fmpq_poly_gegenbauer_c", "den"], [16, 1, 1, "c._fmpq_poly_gegenbauer_c", "n"]], "_fmpq_poly_integral": [[16, 1, 1, "c._fmpq_poly_integral", "den"], [16, 1, 1, "c._fmpq_poly_integral", "len"], [16, 1, 1, "c._fmpq_poly_integral", "poly"], [16, 1, 1, "c._fmpq_poly_integral", "rden"], [16, 1, 1, "c._fmpq_poly_integral", "rpoly"]], "_fmpq_poly_interpolate_fmpz_vec": [[16, 1, 1, "c._fmpq_poly_interpolate_fmpz_vec", "den"], [16, 1, 1, "c._fmpq_poly_interpolate_fmpz_vec", "n"], [16, 1, 1, "c._fmpq_poly_interpolate_fmpz_vec", "poly"], [16, 1, 1, "c._fmpq_poly_interpolate_fmpz_vec", "xs"], [16, 1, 1, "c._fmpq_poly_interpolate_fmpz_vec", "ys"]], "_fmpq_poly_inv_series": [[16, 1, 1, "c._fmpq_poly_inv_series", "den"], [16, 1, 1, "c._fmpq_poly_inv_series", "n"], [16, 1, 1, "c._fmpq_poly_inv_series", "poly"], [16, 1, 1, "c._fmpq_poly_inv_series", "rden"], [16, 1, 1, "c._fmpq_poly_inv_series", "rpoly"]], "_fmpq_poly_inv_series_newton": [[16, 1, 1, "c._fmpq_poly_inv_series_newton", "den"], [16, 1, 1, "c._fmpq_poly_inv_series_newton", "len"], [16, 1, 1, "c._fmpq_poly_inv_series_newton", "n"], [16, 1, 1, "c._fmpq_poly_inv_series_newton", "poly"], [16, 1, 1, "c._fmpq_poly_inv_series_newton", "rden"], [16, 1, 1, "c._fmpq_poly_inv_series_newton", "rpoly"]], "_fmpq_poly_invsqrt_series": [[16, 1, 1, "c._fmpq_poly_invsqrt_series", "f"], [16, 1, 1, "c._fmpq_poly_invsqrt_series", "fden"], [16, 1, 1, "c._fmpq_poly_invsqrt_series", "flen"], [16, 1, 1, "c._fmpq_poly_invsqrt_series", "g"], [16, 1, 1, "c._fmpq_poly_invsqrt_series", "gden"], [16, 1, 1, "c._fmpq_poly_invsqrt_series", "n"]], "_fmpq_poly_is_canonical": [[16, 1, 1, "c._fmpq_poly_is_canonical", "den"], [16, 1, 1, "c._fmpq_poly_is_canonical", "len"], [16, 1, 1, "c._fmpq_poly_is_canonical", "poly"]], "_fmpq_poly_is_monic": [[16, 1, 1, "c._fmpq_poly_is_monic", "den"], [16, 1, 1, "c._fmpq_poly_is_monic", "len"], [16, 1, 1, "c._fmpq_poly_is_monic", "poly"]], "_fmpq_poly_laguerre_l": [[16, 1, 1, "c._fmpq_poly_laguerre_l", "coeffs"], [16, 1, 1, "c._fmpq_poly_laguerre_l", "den"], [16, 1, 1, "c._fmpq_poly_laguerre_l", "n"]], "_fmpq_poly_lcm": [[16, 1, 1, "c._fmpq_poly_lcm", "A"], [16, 1, 1, "c._fmpq_poly_lcm", "B"], [16, 1, 1, "c._fmpq_poly_lcm", "L"], [16, 1, 1, "c._fmpq_poly_lcm", "denL"], [16, 1, 1, "c._fmpq_poly_lcm", "lenA"], [16, 1, 1, "c._fmpq_poly_lcm", "lenB"]], "_fmpq_poly_legendre_p": [[16, 1, 1, "c._fmpq_poly_legendre_p", "coeffs"], [16, 1, 1, "c._fmpq_poly_legendre_p", "den"], [16, 1, 1, "c._fmpq_poly_legendre_p", "n"]], "_fmpq_poly_log_series": [[16, 1, 1, "c._fmpq_poly_log_series", "f"], [16, 1, 1, "c._fmpq_poly_log_series", "fden"], [16, 1, 1, "c._fmpq_poly_log_series", "flen"], [16, 1, 1, "c._fmpq_poly_log_series", "g"], [16, 1, 1, "c._fmpq_poly_log_series", "gden"], [16, 1, 1, "c._fmpq_poly_log_series", "n"]], "_fmpq_poly_make_monic": [[16, 1, 1, "c._fmpq_poly_make_monic", "den"], [16, 1, 1, "c._fmpq_poly_make_monic", "len"], [16, 1, 1, "c._fmpq_poly_make_monic", "poly"], [16, 1, 1, "c._fmpq_poly_make_monic", "rden"], [16, 1, 1, "c._fmpq_poly_make_monic", "rpoly"]], "_fmpq_poly_mul": [[16, 1, 1, "c._fmpq_poly_mul", "den1"], [16, 1, 1, "c._fmpq_poly_mul", "den2"], [16, 1, 1, "c._fmpq_poly_mul", "len1"], [16, 1, 1, "c._fmpq_poly_mul", "len2"], [16, 1, 1, "c._fmpq_poly_mul", "poly1"], [16, 1, 1, "c._fmpq_poly_mul", "poly2"], [16, 1, 1, "c._fmpq_poly_mul", "rden"], [16, 1, 1, "c._fmpq_poly_mul", "rpoly"]], "_fmpq_poly_mullow": [[16, 1, 1, "c._fmpq_poly_mullow", "den1"], [16, 1, 1, "c._fmpq_poly_mullow", "den2"], [16, 1, 1, "c._fmpq_poly_mullow", "len1"], [16, 1, 1, "c._fmpq_poly_mullow", "len2"], [16, 1, 1, "c._fmpq_poly_mullow", "n"], [16, 1, 1, "c._fmpq_poly_mullow", "poly1"], [16, 1, 1, "c._fmpq_poly_mullow", "poly2"], [16, 1, 1, "c._fmpq_poly_mullow", "rden"], [16, 1, 1, "c._fmpq_poly_mullow", "rpoly"]], "_fmpq_poly_normalise": [[16, 1, 1, "c._fmpq_poly_normalise", "poly"]], "_fmpq_poly_nth_derivative": [[16, 1, 1, "c._fmpq_poly_nth_derivative", "den"], [16, 1, 1, "c._fmpq_poly_nth_derivative", "len"], [16, 1, 1, "c._fmpq_poly_nth_derivative", "n"], [16, 1, 1, "c._fmpq_poly_nth_derivative", "poly"], [16, 1, 1, "c._fmpq_poly_nth_derivative", "rden"], [16, 1, 1, "c._fmpq_poly_nth_derivative", "rpoly"]], "_fmpq_poly_pow": [[16, 1, 1, "c._fmpq_poly_pow", "den"], [16, 1, 1, "c._fmpq_poly_pow", "e"], [16, 1, 1, "c._fmpq_poly_pow", "len"], [16, 1, 1, "c._fmpq_poly_pow", "poly"], [16, 1, 1, "c._fmpq_poly_pow", "rden"], [16, 1, 1, "c._fmpq_poly_pow", "rpoly"]], "_fmpq_poly_pow_trunc": [[16, 1, 1, "c._fmpq_poly_pow_trunc", "exp"], [16, 1, 1, "c._fmpq_poly_pow_trunc", "f"], [16, 1, 1, "c._fmpq_poly_pow_trunc", "fden"], [16, 1, 1, "c._fmpq_poly_pow_trunc", "flen"], [16, 1, 1, "c._fmpq_poly_pow_trunc", "len"], [16, 1, 1, "c._fmpq_poly_pow_trunc", "rden"], [16, 1, 1, "c._fmpq_poly_pow_trunc", "res"]], "_fmpq_poly_power_sums": [[16, 1, 1, "c._fmpq_poly_power_sums", "len"], [16, 1, 1, "c._fmpq_poly_power_sums", "n"], [16, 1, 1, "c._fmpq_poly_power_sums", "poly"], [16, 1, 1, "c._fmpq_poly_power_sums", "rden"], [16, 1, 1, "c._fmpq_poly_power_sums", "res"]], "_fmpq_poly_power_sums_to_poly": [[16, 1, 1, "c._fmpq_poly_power_sums_to_poly", "den"], [16, 1, 1, "c._fmpq_poly_power_sums_to_poly", "len"], [16, 1, 1, "c._fmpq_poly_power_sums_to_poly", "poly"], [16, 1, 1, "c._fmpq_poly_power_sums_to_poly", "res"]], "_fmpq_poly_powers_clear": [[16, 1, 1, "c._fmpq_poly_powers_clear", "len"], [16, 1, 1, "c._fmpq_poly_powers_clear", "powers"]], "_fmpq_poly_powers_precompute": [[16, 1, 1, "c._fmpq_poly_powers_precompute", "B"], [16, 1, 1, "c._fmpq_poly_powers_precompute", "denB"], [16, 1, 1, "c._fmpq_poly_powers_precompute", "len"]], "_fmpq_poly_primitive_part": [[16, 1, 1, "c._fmpq_poly_primitive_part", "den"], [16, 1, 1, "c._fmpq_poly_primitive_part", "len"], [16, 1, 1, "c._fmpq_poly_primitive_part", "poly"], [16, 1, 1, "c._fmpq_poly_primitive_part", "rden"], [16, 1, 1, "c._fmpq_poly_primitive_part", "rpoly"]], "_fmpq_poly_print": [[16, 1, 1, "c._fmpq_poly_print", "den"], [16, 1, 1, "c._fmpq_poly_print", "len"], [16, 1, 1, "c._fmpq_poly_print", "poly"]], "_fmpq_poly_print_pretty": [[16, 1, 1, "c._fmpq_poly_print_pretty", "den"], [16, 1, 1, "c._fmpq_poly_print_pretty", "len"], [16, 1, 1, "c._fmpq_poly_print_pretty", "poly"], [16, 1, 1, "c._fmpq_poly_print_pretty", "x"]], "_fmpq_poly_rem": [[16, 1, 1, "c._fmpq_poly_rem", "A"], [16, 1, 1, "c._fmpq_poly_rem", "B"], [16, 1, 1, "c._fmpq_poly_rem", "R"], [16, 1, 1, "c._fmpq_poly_rem", "a"], [16, 1, 1, "c._fmpq_poly_rem", "b"], [16, 1, 1, "c._fmpq_poly_rem", "inv"], [16, 1, 1, "c._fmpq_poly_rem", "lenA"], [16, 1, 1, "c._fmpq_poly_rem", "lenB"], [16, 1, 1, "c._fmpq_poly_rem", "r"]], "_fmpq_poly_rem_powers_precomp": [[16, 1, 1, "c._fmpq_poly_rem_powers_precomp", "A"], [16, 1, 1, "c._fmpq_poly_rem_powers_precomp", "B"], [16, 1, 1, "c._fmpq_poly_rem_powers_precomp", "denA"], [16, 1, 1, "c._fmpq_poly_rem_powers_precomp", "denB"], [16, 1, 1, "c._fmpq_poly_rem_powers_precomp", "m"], [16, 1, 1, "c._fmpq_poly_rem_powers_precomp", "n"], [16, 1, 1, "c._fmpq_poly_rem_powers_precomp", "powers"]], "_fmpq_poly_rescale": [[16, 1, 1, "c._fmpq_poly_rescale", "aden"], [16, 1, 1, "c._fmpq_poly_rescale", "anum"], [16, 1, 1, "c._fmpq_poly_rescale", "den"], [16, 1, 1, "c._fmpq_poly_rescale", "denr"], [16, 1, 1, "c._fmpq_poly_rescale", "len"], [16, 1, 1, "c._fmpq_poly_rescale", "poly"], [16, 1, 1, "c._fmpq_poly_rescale", "res"]], "_fmpq_poly_resultant": [[16, 1, 1, "c._fmpq_poly_resultant", "den1"], [16, 1, 1, "c._fmpq_poly_resultant", "den2"], [16, 1, 1, "c._fmpq_poly_resultant", "len1"], [16, 1, 1, "c._fmpq_poly_resultant", "len2"], [16, 1, 1, "c._fmpq_poly_resultant", "poly1"], [16, 1, 1, "c._fmpq_poly_resultant", "poly2"], [16, 1, 1, "c._fmpq_poly_resultant", "rden"], [16, 1, 1, "c._fmpq_poly_resultant", "rnum"]], "_fmpq_poly_revert_series": [[16, 1, 1, "c._fmpq_poly_revert_series", "den"], [16, 1, 1, "c._fmpq_poly_revert_series", "den1"], [16, 1, 1, "c._fmpq_poly_revert_series", "len1"], [16, 1, 1, "c._fmpq_poly_revert_series", "n"], [16, 1, 1, "c._fmpq_poly_revert_series", "poly1"], [16, 1, 1, "c._fmpq_poly_revert_series", "res"]], "_fmpq_poly_revert_series_lagrange": [[16, 1, 1, "c._fmpq_poly_revert_series_lagrange", "den"], [16, 1, 1, "c._fmpq_poly_revert_series_lagrange", "den1"], [16, 1, 1, "c._fmpq_poly_revert_series_lagrange", "len1"], [16, 1, 1, "c._fmpq_poly_revert_series_lagrange", "n"], [16, 1, 1, "c._fmpq_poly_revert_series_lagrange", "poly1"], [16, 1, 1, "c._fmpq_poly_revert_series_lagrange", "res"]], "_fmpq_poly_revert_series_lagrange_fast": [[16, 1, 1, "c._fmpq_poly_revert_series_lagrange_fast", "den"], [16, 1, 1, "c._fmpq_poly_revert_series_lagrange_fast", "den1"], [16, 1, 1, "c._fmpq_poly_revert_series_lagrange_fast", "len1"], [16, 1, 1, "c._fmpq_poly_revert_series_lagrange_fast", "n"], [16, 1, 1, "c._fmpq_poly_revert_series_lagrange_fast", "poly1"], [16, 1, 1, "c._fmpq_poly_revert_series_lagrange_fast", "res"]], "_fmpq_poly_revert_series_newton": [[16, 1, 1, "c._fmpq_poly_revert_series_newton", "den"], [16, 1, 1, "c._fmpq_poly_revert_series_newton", "den1"], [16, 1, 1, "c._fmpq_poly_revert_series_newton", "len1"], [16, 1, 1, "c._fmpq_poly_revert_series_newton", "n"], [16, 1, 1, "c._fmpq_poly_revert_series_newton", "poly1"], [16, 1, 1, "c._fmpq_poly_revert_series_newton", "res"]], "_fmpq_poly_scalar_div_fmpq": [[16, 1, 1, "c._fmpq_poly_scalar_div_fmpq", "den"], [16, 1, 1, "c._fmpq_poly_scalar_div_fmpq", "len"], [16, 1, 1, "c._fmpq_poly_scalar_div_fmpq", "poly"], [16, 1, 1, "c._fmpq_poly_scalar_div_fmpq", "r"], [16, 1, 1, "c._fmpq_poly_scalar_div_fmpq", "rden"], [16, 1, 1, "c._fmpq_poly_scalar_div_fmpq", "rpoly"], [16, 1, 1, "c._fmpq_poly_scalar_div_fmpq", "s"]], "_fmpq_poly_scalar_div_fmpz": [[16, 1, 1, "c._fmpq_poly_scalar_div_fmpz", "c"], [16, 1, 1, "c._fmpq_poly_scalar_div_fmpz", "den"], [16, 1, 1, "c._fmpq_poly_scalar_div_fmpz", "len"], [16, 1, 1, "c._fmpq_poly_scalar_div_fmpz", "poly"], [16, 1, 1, "c._fmpq_poly_scalar_div_fmpz", "rden"], [16, 1, 1, "c._fmpq_poly_scalar_div_fmpz", "rpoly"]], "_fmpq_poly_scalar_div_si": [[16, 1, 1, "c._fmpq_poly_scalar_div_si", "c"], [16, 1, 1, "c._fmpq_poly_scalar_div_si", "den"], [16, 1, 1, "c._fmpq_poly_scalar_div_si", "len"], [16, 1, 1, "c._fmpq_poly_scalar_div_si", "poly"], [16, 1, 1, "c._fmpq_poly_scalar_div_si", "rden"], [16, 1, 1, "c._fmpq_poly_scalar_div_si", "rpoly"]], "_fmpq_poly_scalar_div_ui": [[16, 1, 1, "c._fmpq_poly_scalar_div_ui", "c"], [16, 1, 1, "c._fmpq_poly_scalar_div_ui", "den"], [16, 1, 1, "c._fmpq_poly_scalar_div_ui", "len"], [16, 1, 1, "c._fmpq_poly_scalar_div_ui", "poly"], [16, 1, 1, "c._fmpq_poly_scalar_div_ui", "rden"], [16, 1, 1, "c._fmpq_poly_scalar_div_ui", "rpoly"]], "_fmpq_poly_scalar_mul_fmpq": [[16, 1, 1, "c._fmpq_poly_scalar_mul_fmpq", "den"], [16, 1, 1, "c._fmpq_poly_scalar_mul_fmpq", "len"], [16, 1, 1, "c._fmpq_poly_scalar_mul_fmpq", "poly"], [16, 1, 1, "c._fmpq_poly_scalar_mul_fmpq", "r"], [16, 1, 1, "c._fmpq_poly_scalar_mul_fmpq", "rden"], [16, 1, 1, "c._fmpq_poly_scalar_mul_fmpq", "rpoly"], [16, 1, 1, "c._fmpq_poly_scalar_mul_fmpq", "s"]], "_fmpq_poly_scalar_mul_fmpz": [[16, 1, 1, "c._fmpq_poly_scalar_mul_fmpz", "c"], [16, 1, 1, "c._fmpq_poly_scalar_mul_fmpz", "den"], [16, 1, 1, "c._fmpq_poly_scalar_mul_fmpz", "len"], [16, 1, 1, "c._fmpq_poly_scalar_mul_fmpz", "poly"], [16, 1, 1, "c._fmpq_poly_scalar_mul_fmpz", "rden"], [16, 1, 1, "c._fmpq_poly_scalar_mul_fmpz", "rpoly"]], "_fmpq_poly_scalar_mul_si": [[16, 1, 1, "c._fmpq_poly_scalar_mul_si", "c"], [16, 1, 1, "c._fmpq_poly_scalar_mul_si", "den"], [16, 1, 1, "c._fmpq_poly_scalar_mul_si", "len"], [16, 1, 1, "c._fmpq_poly_scalar_mul_si", "poly"], [16, 1, 1, "c._fmpq_poly_scalar_mul_si", "rden"], [16, 1, 1, "c._fmpq_poly_scalar_mul_si", "rpoly"]], "_fmpq_poly_scalar_mul_ui": [[16, 1, 1, "c._fmpq_poly_scalar_mul_ui", "c"], [16, 1, 1, "c._fmpq_poly_scalar_mul_ui", "den"], [16, 1, 1, "c._fmpq_poly_scalar_mul_ui", "len"], [16, 1, 1, "c._fmpq_poly_scalar_mul_ui", "poly"], [16, 1, 1, "c._fmpq_poly_scalar_mul_ui", "rden"], [16, 1, 1, "c._fmpq_poly_scalar_mul_ui", "rpoly"]], "_fmpq_poly_set_array_mpq": [[16, 1, 1, "c._fmpq_poly_set_array_mpq", "a"], [16, 1, 1, "c._fmpq_poly_set_array_mpq", "den"], [16, 1, 1, "c._fmpq_poly_set_array_mpq", "n"], [16, 1, 1, "c._fmpq_poly_set_array_mpq", "poly"]], "_fmpq_poly_set_length": [[16, 1, 1, "c._fmpq_poly_set_length", "len"], [16, 1, 1, "c._fmpq_poly_set_length", "poly"]], "_fmpq_poly_set_str": [[16, 1, 1, "c._fmpq_poly_set_str", "den"], [16, 1, 1, "c._fmpq_poly_set_str", "len"], [16, 1, 1, "c._fmpq_poly_set_str", "poly"], [16, 1, 1, "c._fmpq_poly_set_str", "str"]], "_fmpq_poly_sin_cos_series": [[16, 1, 1, "c._fmpq_poly_sin_cos_series", "c"], [16, 1, 1, "c._fmpq_poly_sin_cos_series", "cden"], [16, 1, 1, "c._fmpq_poly_sin_cos_series", "f"], [16, 1, 1, "c._fmpq_poly_sin_cos_series", "fden"], [16, 1, 1, "c._fmpq_poly_sin_cos_series", "flen"], [16, 1, 1, "c._fmpq_poly_sin_cos_series", "n"], [16, 1, 1, "c._fmpq_poly_sin_cos_series", "s"], [16, 1, 1, "c._fmpq_poly_sin_cos_series", "sden"]], "_fmpq_poly_sin_series": [[16, 1, 1, "c._fmpq_poly_sin_series", "f"], [16, 1, 1, "c._fmpq_poly_sin_series", "fden"], [16, 1, 1, "c._fmpq_poly_sin_series", "flen"], [16, 1, 1, "c._fmpq_poly_sin_series", "g"], [16, 1, 1, "c._fmpq_poly_sin_series", "gden"], [16, 1, 1, "c._fmpq_poly_sin_series", "n"]], "_fmpq_poly_sinh_cosh_series": [[16, 1, 1, "c._fmpq_poly_sinh_cosh_series", "c"], [16, 1, 1, "c._fmpq_poly_sinh_cosh_series", "cden"], [16, 1, 1, "c._fmpq_poly_sinh_cosh_series", "f"], [16, 1, 1, "c._fmpq_poly_sinh_cosh_series", "fden"], [16, 1, 1, "c._fmpq_poly_sinh_cosh_series", "flen"], [16, 1, 1, "c._fmpq_poly_sinh_cosh_series", "n"], [16, 1, 1, "c._fmpq_poly_sinh_cosh_series", "s"], [16, 1, 1, "c._fmpq_poly_sinh_cosh_series", "sden"]], "_fmpq_poly_sinh_series": [[16, 1, 1, "c._fmpq_poly_sinh_series", "f"], [16, 1, 1, "c._fmpq_poly_sinh_series", "fden"], [16, 1, 1, "c._fmpq_poly_sinh_series", "flen"], [16, 1, 1, "c._fmpq_poly_sinh_series", "g"], [16, 1, 1, "c._fmpq_poly_sinh_series", "gden"], [16, 1, 1, "c._fmpq_poly_sinh_series", "n"]], "_fmpq_poly_sqrt_series": [[16, 1, 1, "c._fmpq_poly_sqrt_series", "f"], [16, 1, 1, "c._fmpq_poly_sqrt_series", "fden"], [16, 1, 1, "c._fmpq_poly_sqrt_series", "flen"], [16, 1, 1, "c._fmpq_poly_sqrt_series", "g"], [16, 1, 1, "c._fmpq_poly_sqrt_series", "gden"], [16, 1, 1, "c._fmpq_poly_sqrt_series", "n"]], "_fmpq_poly_sub": [[16, 1, 1, "c._fmpq_poly_sub", "den1"], [16, 1, 1, "c._fmpq_poly_sub", "den2"], [16, 1, 1, "c._fmpq_poly_sub", "len1"], [16, 1, 1, "c._fmpq_poly_sub", "len2"], [16, 1, 1, "c._fmpq_poly_sub", "poly1"], [16, 1, 1, "c._fmpq_poly_sub", "poly2"], [16, 1, 1, "c._fmpq_poly_sub", "rden"], [16, 1, 1, "c._fmpq_poly_sub", "rpoly"]], "_fmpq_poly_sub_can": [[16, 1, 1, "c._fmpq_poly_sub_can", "can"], [16, 1, 1, "c._fmpq_poly_sub_can", "den1"], [16, 1, 1, "c._fmpq_poly_sub_can", "den2"], [16, 1, 1, "c._fmpq_poly_sub_can", "len1"], [16, 1, 1, "c._fmpq_poly_sub_can", "len2"], [16, 1, 1, "c._fmpq_poly_sub_can", "poly1"], [16, 1, 1, "c._fmpq_poly_sub_can", "poly2"], [16, 1, 1, "c._fmpq_poly_sub_can", "rden"], [16, 1, 1, "c._fmpq_poly_sub_can", "rpoly"]], "_fmpq_poly_sub_series": [[16, 1, 1, "c._fmpq_poly_sub_series", "den1"], [16, 1, 1, "c._fmpq_poly_sub_series", "den2"], [16, 1, 1, "c._fmpq_poly_sub_series", "len1"], [16, 1, 1, "c._fmpq_poly_sub_series", "len2"], [16, 1, 1, "c._fmpq_poly_sub_series", "n"], [16, 1, 1, "c._fmpq_poly_sub_series", "poly1"], [16, 1, 1, "c._fmpq_poly_sub_series", "poly2"], [16, 1, 1, "c._fmpq_poly_sub_series", "rden"], [16, 1, 1, "c._fmpq_poly_sub_series", "rpoly"]], "_fmpq_poly_sub_series_can": [[16, 1, 1, "c._fmpq_poly_sub_series_can", "can"], [16, 1, 1, "c._fmpq_poly_sub_series_can", "den1"], [16, 1, 1, "c._fmpq_poly_sub_series_can", "den2"], [16, 1, 1, "c._fmpq_poly_sub_series_can", "len1"], [16, 1, 1, "c._fmpq_poly_sub_series_can", "len2"], [16, 1, 1, "c._fmpq_poly_sub_series_can", "n"], [16, 1, 1, "c._fmpq_poly_sub_series_can", "poly1"], [16, 1, 1, "c._fmpq_poly_sub_series_can", "poly2"], [16, 1, 1, "c._fmpq_poly_sub_series_can", "rden"], [16, 1, 1, "c._fmpq_poly_sub_series_can", "rpoly"]], "_fmpq_poly_tan_series": [[16, 1, 1, "c._fmpq_poly_tan_series", "f"], [16, 1, 1, "c._fmpq_poly_tan_series", "fden"], [16, 1, 1, "c._fmpq_poly_tan_series", "flen"], [16, 1, 1, "c._fmpq_poly_tan_series", "g"], [16, 1, 1, "c._fmpq_poly_tan_series", "gden"], [16, 1, 1, "c._fmpq_poly_tan_series", "n"]], "_fmpq_poly_tanh_series": [[16, 1, 1, "c._fmpq_poly_tanh_series", "f"], [16, 1, 1, "c._fmpq_poly_tanh_series", "fden"], [16, 1, 1, "c._fmpq_poly_tanh_series", "flen"], [16, 1, 1, "c._fmpq_poly_tanh_series", "g"], [16, 1, 1, "c._fmpq_poly_tanh_series", "gden"], [16, 1, 1, "c._fmpq_poly_tanh_series", "n"]], "_fmpq_poly_xgcd": [[16, 1, 1, "c._fmpq_poly_xgcd", "A"], [16, 1, 1, "c._fmpq_poly_xgcd", "B"], [16, 1, 1, "c._fmpq_poly_xgcd", "G"], [16, 1, 1, "c._fmpq_poly_xgcd", "S"], [16, 1, 1, "c._fmpq_poly_xgcd", "T"], [16, 1, 1, "c._fmpq_poly_xgcd", "denA"], [16, 1, 1, "c._fmpq_poly_xgcd", "denB"], [16, 1, 1, "c._fmpq_poly_xgcd", "denG"], [16, 1, 1, "c._fmpq_poly_xgcd", "denS"], [16, 1, 1, "c._fmpq_poly_xgcd", "denT"], [16, 1, 1, "c._fmpq_poly_xgcd", "lenA"], [16, 1, 1, "c._fmpq_poly_xgcd", "lenB"]], "_fmpq_pow_si": [[12, 1, 1, "c._fmpq_pow_si", "e"], [12, 1, 1, "c._fmpq_pow_si", "opden"], [12, 1, 1, "c._fmpq_pow_si", "opnum"], [12, 1, 1, "c._fmpq_pow_si", "rden"], [12, 1, 1, "c._fmpq_pow_si", "rnum"]], "_fmpq_print": [[12, 1, 1, "c._fmpq_print", "den"], [12, 1, 1, "c._fmpq_print", "num"]], "_fmpq_randbits": [[12, 1, 1, "c._fmpq_randbits", "bits"], [12, 1, 1, "c._fmpq_randbits", "den"], [12, 1, 1, "c._fmpq_randbits", "num"], [12, 1, 1, "c._fmpq_randbits", "state"]], "_fmpq_randtest": [[12, 1, 1, "c._fmpq_randtest", "bits"], [12, 1, 1, "c._fmpq_randtest", "den"], [12, 1, 1, "c._fmpq_randtest", "num"], [12, 1, 1, "c._fmpq_randtest", "state"]], "_fmpq_reconstruct_fmpz": [[12, 1, 1, "c._fmpq_reconstruct_fmpz", "a"], [12, 1, 1, "c._fmpq_reconstruct_fmpz", "d"], [12, 1, 1, "c._fmpq_reconstruct_fmpz", "m"], [12, 1, 1, "c._fmpq_reconstruct_fmpz", "n"]], "_fmpq_reconstruct_fmpz_2": [[12, 1, 1, "c._fmpq_reconstruct_fmpz_2", "D"], [12, 1, 1, "c._fmpq_reconstruct_fmpz_2", "N"], [12, 1, 1, "c._fmpq_reconstruct_fmpz_2", "a"], [12, 1, 1, "c._fmpq_reconstruct_fmpz_2", "d"], [12, 1, 1, "c._fmpq_reconstruct_fmpz_2", "m"], [12, 1, 1, "c._fmpq_reconstruct_fmpz_2", "n"]], "_fmpq_reconstruct_fmpz_2_naive": [[12, 1, 1, "c._fmpq_reconstruct_fmpz_2_naive", "D"], [12, 1, 1, "c._fmpq_reconstruct_fmpz_2_naive", "N"], [12, 1, 1, "c._fmpq_reconstruct_fmpz_2_naive", "a"], [12, 1, 1, "c._fmpq_reconstruct_fmpz_2_naive", "d"], [12, 1, 1, "c._fmpq_reconstruct_fmpz_2_naive", "m"], [12, 1, 1, "c._fmpq_reconstruct_fmpz_2_naive", "n"]], "_fmpq_set_si": [[12, 1, 1, "c._fmpq_set_si", "p"], [12, 1, 1, "c._fmpq_set_si", "q"], [12, 1, 1, "c._fmpq_set_si", "rden"], [12, 1, 1, "c._fmpq_set_si", "rnum"]], "_fmpq_set_ui": [[12, 1, 1, "c._fmpq_set_ui", "p"], [12, 1, 1, "c._fmpq_set_ui", "q"], [12, 1, 1, "c._fmpq_set_ui", "rden"], [12, 1, 1, "c._fmpq_set_ui", "rnum"]], "_fmpq_simplest_between": [[12, 1, 1, "c._fmpq_simplest_between", "l_den"], [12, 1, 1, "c._fmpq_simplest_between", "l_num"], [12, 1, 1, "c._fmpq_simplest_between", "r_den"], [12, 1, 1, "c._fmpq_simplest_between", "r_num"], [12, 1, 1, "c._fmpq_simplest_between", "x_den"], [12, 1, 1, "c._fmpq_simplest_between", "x_num"]], "_fmpq_sub": [[12, 1, 1, "c._fmpq_sub", "op1den"], [12, 1, 1, "c._fmpq_sub", "op1num"], [12, 1, 1, "c._fmpq_sub", "op2den"], [12, 1, 1, "c._fmpq_sub", "op2num"], [12, 1, 1, "c._fmpq_sub", "rden"], [12, 1, 1, "c._fmpq_sub", "rnum"]], "_fmpq_sub_fmpz": [[12, 1, 1, "c._fmpq_sub_fmpz", "p"], [12, 1, 1, "c._fmpq_sub_fmpz", "q"], [12, 1, 1, "c._fmpq_sub_fmpz", "r"], [12, 1, 1, "c._fmpq_sub_fmpz", "rden"], [12, 1, 1, "c._fmpq_sub_fmpz", "rnum"]], "_fmpq_sub_si": [[12, 1, 1, "c._fmpq_sub_si", "p"], [12, 1, 1, "c._fmpq_sub_si", "q"], [12, 1, 1, "c._fmpq_sub_si", "r"], [12, 1, 1, "c._fmpq_sub_si", "rden"], [12, 1, 1, "c._fmpq_sub_si", "rnum"]], "_fmpq_sub_ui": [[12, 1, 1, "c._fmpq_sub_ui", "p"], [12, 1, 1, "c._fmpq_sub_ui", "q"], [12, 1, 1, "c._fmpq_sub_ui", "r"], [12, 1, 1, "c._fmpq_sub_ui", "rden"], [12, 1, 1, "c._fmpq_sub_ui", "rnum"]], "_fmpq_submul": [[12, 1, 1, "c._fmpq_submul", "op1den"], [12, 1, 1, "c._fmpq_submul", "op1num"], [12, 1, 1, "c._fmpq_submul", "op2den"], [12, 1, 1, "c._fmpq_submul", "op2num"], [12, 1, 1, "c._fmpq_submul", "rden"], [12, 1, 1, "c._fmpq_submul", "rnum"]], "_fmpq_vec_clear": [[17, 1, 1, "c._fmpq_vec_clear", "n"], [17, 1, 1, "c._fmpq_vec_clear", "vec"]], "_fmpq_vec_dot": [[17, 1, 1, "c._fmpq_vec_dot", "len"], [17, 1, 1, "c._fmpq_vec_dot", "res"], [17, 1, 1, "c._fmpq_vec_dot", "vec1"], [17, 1, 1, "c._fmpq_vec_dot", "vec2"]], "_fmpq_vec_fprint": [[17, 1, 1, "c._fmpq_vec_fprint", "file"], [17, 1, 1, "c._fmpq_vec_fprint", "len"], [17, 1, 1, "c._fmpq_vec_fprint", "vec"]], "_fmpq_vec_get_fmpz_vec_fmpz": [[17, 1, 1, "c._fmpq_vec_get_fmpz_vec_fmpz", "a"], [17, 1, 1, "c._fmpq_vec_get_fmpz_vec_fmpz", "den"], [17, 1, 1, "c._fmpq_vec_get_fmpz_vec_fmpz", "len"], [17, 1, 1, "c._fmpq_vec_get_fmpz_vec_fmpz", "num"]], "_fmpq_vec_init": [[17, 1, 1, "c._fmpq_vec_init", "n"]], "_fmpq_vec_print": [[17, 1, 1, "c._fmpq_vec_print", "len"], [17, 1, 1, "c._fmpq_vec_print", "vec"]], "_fmpq_vec_randtest": [[17, 1, 1, "c._fmpq_vec_randtest", "bits"], [17, 1, 1, "c._fmpq_vec_randtest", "f"], [17, 1, 1, "c._fmpq_vec_randtest", "len"], [17, 1, 1, "c._fmpq_vec_randtest", "state"]], "_fmpq_vec_randtest_uniq_sorted": [[17, 1, 1, "c._fmpq_vec_randtest_uniq_sorted", "bits"], [17, 1, 1, "c._fmpq_vec_randtest_uniq_sorted", "len"], [17, 1, 1, "c._fmpq_vec_randtest_uniq_sorted", "state"], [17, 1, 1, "c._fmpq_vec_randtest_uniq_sorted", "vec"]], "_fmpq_vec_set_fmpz_vec": [[17, 1, 1, "c._fmpq_vec_set_fmpz_vec", "len"], [17, 1, 1, "c._fmpq_vec_set_fmpz_vec", "res"], [17, 1, 1, "c._fmpq_vec_set_fmpz_vec", "vec"]], "_fmpq_vec_sort": [[17, 1, 1, "c._fmpq_vec_sort", "len"], [17, 1, 1, "c._fmpq_vec_sort", "vec"]], "_fmpz_clear_mpz": [[18, 1, 1, "c._fmpz_clear_mpz", "f"]], "_fmpz_demote": [[18, 1, 1, "c._fmpz_demote", "f"]], "_fmpz_demote_val": [[18, 1, 1, "c._fmpz_demote_val", "f"]], "_fmpz_factor_append": [[19, 1, 1, "c._fmpz_factor_append", "exp"], [19, 1, 1, "c._fmpz_factor_append", "factor"], [19, 1, 1, "c._fmpz_factor_append", "p"]], "_fmpz_factor_append_ui": [[19, 1, 1, "c._fmpz_factor_append_ui", "exp"], [19, 1, 1, "c._fmpz_factor_append_ui", "factor"], [19, 1, 1, "c._fmpz_factor_append_ui", "p"]], "_fmpz_mat_charpoly": [[21, 1, 1, "c._fmpz_mat_charpoly", "cp"], [21, 1, 1, "c._fmpz_mat_charpoly", "mat"]], "_fmpz_mat_charpoly_berkowitz": [[21, 1, 1, "c._fmpz_mat_charpoly_berkowitz", "cp"], [21, 1, 1, "c._fmpz_mat_charpoly_berkowitz", "mat"]], "_fmpz_mat_charpoly_modular": [[21, 1, 1, "c._fmpz_mat_charpoly_modular", "cp"], [21, 1, 1, "c._fmpz_mat_charpoly_modular", "mat"]], "_fmpz_mat_minpoly": [[21, 1, 1, "c._fmpz_mat_minpoly", "cp"], [21, 1, 1, "c._fmpz_mat_minpoly", "mat"]], "_fmpz_mat_minpoly_modular": [[21, 1, 1, "c._fmpz_mat_minpoly_modular", "cp"], [21, 1, 1, "c._fmpz_mat_minpoly_modular", "mat"]], "_fmpz_mat_mul_double_word": [[21, 1, 1, "c._fmpz_mat_mul_double_word", "A"], [21, 1, 1, "c._fmpz_mat_mul_double_word", "B"], [21, 1, 1, "c._fmpz_mat_mul_double_word", "C"]], "_fmpz_mat_mul_multi_mod": [[21, 1, 1, "c._fmpz_mat_mul_multi_mod", "A"], [21, 1, 1, "c._fmpz_mat_mul_multi_mod", "B"], [21, 1, 1, "c._fmpz_mat_mul_multi_mod", "C"], [21, 1, 1, "c._fmpz_mat_mul_multi_mod", "bits"], [21, 1, 1, "c._fmpz_mat_mul_multi_mod", "sign"]], "_fmpz_mat_mul_small": [[21, 1, 1, "c._fmpz_mat_mul_small", "A"], [21, 1, 1, "c._fmpz_mat_mul_small", "B"], [21, 1, 1, "c._fmpz_mat_mul_small", "C"]], "_fmpz_mat_solve_dixon_den": [[21, 1, 1, "c._fmpz_mat_solve_dixon_den", "A"], [21, 1, 1, "c._fmpz_mat_solve_dixon_den", "Ainv"], [21, 1, 1, "c._fmpz_mat_solve_dixon_den", "B"], [21, 1, 1, "c._fmpz_mat_solve_dixon_den", "D"], [21, 1, 1, "c._fmpz_mat_solve_dixon_den", "N"], [21, 1, 1, "c._fmpz_mat_solve_dixon_den", "X"], [21, 1, 1, "c._fmpz_mat_solve_dixon_den", "den"], [21, 1, 1, "c._fmpz_mat_solve_dixon_den", "p"]], "_fmpz_mod_mat_mul_classical_threaded_op": [[23, 1, 1, "c._fmpz_mod_mat_mul_classical_threaded_op", "A"], [23, 1, 1, "c._fmpz_mod_mat_mul_classical_threaded_op", "B"], [23, 1, 1, "c._fmpz_mod_mat_mul_classical_threaded_op", "C"], [23, 1, 1, "c._fmpz_mod_mat_mul_classical_threaded_op", "D"], [23, 1, 1, "c._fmpz_mod_mat_mul_classical_threaded_op", "op"]], "_fmpz_mod_mat_mul_classical_threaded_pool_op": [[23, 1, 1, "c._fmpz_mod_mat_mul_classical_threaded_pool_op", "A"], [23, 1, 1, "c._fmpz_mod_mat_mul_classical_threaded_pool_op", "B"], [23, 1, 1, "c._fmpz_mod_mat_mul_classical_threaded_pool_op", "C"], [23, 1, 1, "c._fmpz_mod_mat_mul_classical_threaded_pool_op", "D"], [23, 1, 1, "c._fmpz_mod_mat_mul_classical_threaded_pool_op", "num_threads"], [23, 1, 1, "c._fmpz_mod_mat_mul_classical_threaded_pool_op", "op"], [23, 1, 1, "c._fmpz_mod_mat_mul_classical_threaded_pool_op", "threads"]], "_fmpz_mod_mat_reduce": [[23, 1, 1, "c._fmpz_mod_mat_reduce", "mat"]], "_fmpz_mod_mat_set_mod": [[23, 1, 1, "c._fmpz_mod_mat_set_mod", "mat"], [23, 1, 1, "c._fmpz_mod_mat_set_mod", "n"]], "_fmpz_mod_poly_add": [[26, 1, 1, "c._fmpz_mod_poly_add", "len1"], [26, 1, 1, "c._fmpz_mod_poly_add", "len2"], [26, 1, 1, "c._fmpz_mod_poly_add", "p"], [26, 1, 1, "c._fmpz_mod_poly_add", "poly1"], [26, 1, 1, "c._fmpz_mod_poly_add", "poly2"], [26, 1, 1, "c._fmpz_mod_poly_add", "res"]], "_fmpz_mod_poly_compose": [[26, 1, 1, "c._fmpz_mod_poly_compose", "len1"], [26, 1, 1, "c._fmpz_mod_poly_compose", "len2"], [26, 1, 1, "c._fmpz_mod_poly_compose", "p"], [26, 1, 1, "c._fmpz_mod_poly_compose", "poly1"], [26, 1, 1, "c._fmpz_mod_poly_compose", "poly2"], [26, 1, 1, "c._fmpz_mod_poly_compose", "res"]], "_fmpz_mod_poly_compose_divconquer": [[26, 1, 1, "c._fmpz_mod_poly_compose_divconquer", "len1"], [26, 1, 1, "c._fmpz_mod_poly_compose_divconquer", "len2"], [26, 1, 1, "c._fmpz_mod_poly_compose_divconquer", "p"], [26, 1, 1, "c._fmpz_mod_poly_compose_divconquer", "poly1"], [26, 1, 1, "c._fmpz_mod_poly_compose_divconquer", "poly2"], [26, 1, 1, "c._fmpz_mod_poly_compose_divconquer", "res"]], "_fmpz_mod_poly_compose_horner": [[26, 1, 1, "c._fmpz_mod_poly_compose_horner", "len1"], [26, 1, 1, "c._fmpz_mod_poly_compose_horner", "len2"], [26, 1, 1, "c._fmpz_mod_poly_compose_horner", "p"], [26, 1, 1, "c._fmpz_mod_poly_compose_horner", "poly1"], [26, 1, 1, "c._fmpz_mod_poly_compose_horner", "poly2"], [26, 1, 1, "c._fmpz_mod_poly_compose_horner", "res"]], "_fmpz_mod_poly_compose_mod": [[26, 1, 1, "c._fmpz_mod_poly_compose_mod", "f"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod", "g"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod", "h"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod", "lenf"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod", "lenh"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod", "p"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod", "res"]], "_fmpz_mod_poly_compose_mod_brent_kung": [[26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung", "f"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung", "g"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung", "h"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung", "len1"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung", "len3"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung", "p"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung", "res"]], "_fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv": [[26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv", "A"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv", "f"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv", "h"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv", "hinv"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv", "lenf"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv", "lenh"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv", "lenhinv"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv", "p"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv", "res"]], "_fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv_worker": [[26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv_worker", "arg_ptr"]], "_fmpz_mod_poly_compose_mod_brent_kung_preinv": [[26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_preinv", "f"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_preinv", "g"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_preinv", "h"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_preinv", "hinv"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_preinv", "lenf"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_preinv", "lenh"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_preinv", "lenhinv"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_preinv", "p"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_preinv", "res"]], "_fmpz_mod_poly_compose_mod_brent_kung_vec_preinv": [[26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_vec_preinv", "g"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_vec_preinv", "glen"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_vec_preinv", "h"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_vec_preinv", "hinv"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_vec_preinv", "l"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_vec_preinv", "len1"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_vec_preinv", "lenh"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_vec_preinv", "lenhinv"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_vec_preinv", "p"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_vec_preinv", "polys"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_vec_preinv", "res"]], "_fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool": [[26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "g"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "glen"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "l"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "len"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "leninv"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "lenpolys"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "num_threads"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "p"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "poly"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "polyinv"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "polys"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "res"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "threads"]], "_fmpz_mod_poly_compose_mod_horner": [[26, 1, 1, "c._fmpz_mod_poly_compose_mod_horner", "f"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_horner", "g"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_horner", "h"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_horner", "lenf"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_horner", "lenh"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_horner", "p"], [26, 1, 1, "c._fmpz_mod_poly_compose_mod_horner", "res"]], "_fmpz_mod_poly_derivative": [[26, 1, 1, "c._fmpz_mod_poly_derivative", "len"], [26, 1, 1, "c._fmpz_mod_poly_derivative", "p"], [26, 1, 1, "c._fmpz_mod_poly_derivative", "poly"], [26, 1, 1, "c._fmpz_mod_poly_derivative", "res"]], "_fmpz_mod_poly_discriminant": [[26, 1, 1, "c._fmpz_mod_poly_discriminant", "d"], [26, 1, 1, "c._fmpz_mod_poly_discriminant", "len"], [26, 1, 1, "c._fmpz_mod_poly_discriminant", "mod"], [26, 1, 1, "c._fmpz_mod_poly_discriminant", "poly"]], "_fmpz_mod_poly_div": [[26, 1, 1, "c._fmpz_mod_poly_div", "A"], [26, 1, 1, "c._fmpz_mod_poly_div", "B"], [26, 1, 1, "c._fmpz_mod_poly_div", "Q"], [26, 1, 1, "c._fmpz_mod_poly_div", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_div", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_div", "p"]], "_fmpz_mod_poly_div_basecase": [[26, 1, 1, "c._fmpz_mod_poly_div_basecase", "A"], [26, 1, 1, "c._fmpz_mod_poly_div_basecase", "B"], [26, 1, 1, "c._fmpz_mod_poly_div_basecase", "Q"], [26, 1, 1, "c._fmpz_mod_poly_div_basecase", "R"], [26, 1, 1, "c._fmpz_mod_poly_div_basecase", "invB"], [26, 1, 1, "c._fmpz_mod_poly_div_basecase", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_div_basecase", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_div_basecase", "p"]], "_fmpz_mod_poly_div_divconquer": [[26, 1, 1, "c._fmpz_mod_poly_div_divconquer", "A"], [26, 1, 1, "c._fmpz_mod_poly_div_divconquer", "B"], [26, 1, 1, "c._fmpz_mod_poly_div_divconquer", "Q"], [26, 1, 1, "c._fmpz_mod_poly_div_divconquer", "invB"], [26, 1, 1, "c._fmpz_mod_poly_div_divconquer", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_div_divconquer", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_div_divconquer", "p"]], "_fmpz_mod_poly_div_divconquer_recursive": [[26, 1, 1, "c._fmpz_mod_poly_div_divconquer_recursive", "A"], [26, 1, 1, "c._fmpz_mod_poly_div_divconquer_recursive", "B"], [26, 1, 1, "c._fmpz_mod_poly_div_divconquer_recursive", "Q"], [26, 1, 1, "c._fmpz_mod_poly_div_divconquer_recursive", "W"], [26, 1, 1, "c._fmpz_mod_poly_div_divconquer_recursive", "invB"], [26, 1, 1, "c._fmpz_mod_poly_div_divconquer_recursive", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_div_divconquer_recursive", "p"]], "_fmpz_mod_poly_div_newton": [[26, 1, 1, "c._fmpz_mod_poly_div_newton", "A"], [26, 1, 1, "c._fmpz_mod_poly_div_newton", "B"], [26, 1, 1, "c._fmpz_mod_poly_div_newton", "Q"], [26, 1, 1, "c._fmpz_mod_poly_div_newton", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_div_newton", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_div_newton", "p"]], "_fmpz_mod_poly_div_newton_n_preinv": [[26, 1, 1, "c._fmpz_mod_poly_div_newton_n_preinv", "A"], [26, 1, 1, "c._fmpz_mod_poly_div_newton_n_preinv", "B"], [26, 1, 1, "c._fmpz_mod_poly_div_newton_n_preinv", "Binv"], [26, 1, 1, "c._fmpz_mod_poly_div_newton_n_preinv", "Q"], [26, 1, 1, "c._fmpz_mod_poly_div_newton_n_preinv", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_div_newton_n_preinv", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_div_newton_n_preinv", "lenBinv"], [26, 1, 1, "c._fmpz_mod_poly_div_newton_n_preinv", "mod"]], "_fmpz_mod_poly_div_series": [[26, 1, 1, "c._fmpz_mod_poly_div_series", "A"], [26, 1, 1, "c._fmpz_mod_poly_div_series", "Alen"], [26, 1, 1, "c._fmpz_mod_poly_div_series", "B"], [26, 1, 1, "c._fmpz_mod_poly_div_series", "Blen"], [26, 1, 1, "c._fmpz_mod_poly_div_series", "Q"], [26, 1, 1, "c._fmpz_mod_poly_div_series", "n"], [26, 1, 1, "c._fmpz_mod_poly_div_series", "p"]], "_fmpz_mod_poly_divides": [[26, 1, 1, "c._fmpz_mod_poly_divides", "A"], [26, 1, 1, "c._fmpz_mod_poly_divides", "B"], [26, 1, 1, "c._fmpz_mod_poly_divides", "Q"], [26, 1, 1, "c._fmpz_mod_poly_divides", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_divides", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_divides", "mod"]], "_fmpz_mod_poly_divides_classical": [[26, 1, 1, "c._fmpz_mod_poly_divides_classical", "A"], [26, 1, 1, "c._fmpz_mod_poly_divides_classical", "B"], [26, 1, 1, "c._fmpz_mod_poly_divides_classical", "Q"], [26, 1, 1, "c._fmpz_mod_poly_divides_classical", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_divides_classical", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_divides_classical", "mod"]], "_fmpz_mod_poly_divrem": [[26, 1, 1, "c._fmpz_mod_poly_divrem", "A"], [26, 1, 1, "c._fmpz_mod_poly_divrem", "B"], [26, 1, 1, "c._fmpz_mod_poly_divrem", "Q"], [26, 1, 1, "c._fmpz_mod_poly_divrem", "R"], [26, 1, 1, "c._fmpz_mod_poly_divrem", "invB"], [26, 1, 1, "c._fmpz_mod_poly_divrem", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_divrem", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_divrem", "p"]], "_fmpz_mod_poly_divrem_basecase": [[26, 1, 1, "c._fmpz_mod_poly_divrem_basecase", "A"], [26, 1, 1, "c._fmpz_mod_poly_divrem_basecase", "B"], [26, 1, 1, "c._fmpz_mod_poly_divrem_basecase", "Q"], [26, 1, 1, "c._fmpz_mod_poly_divrem_basecase", "R"], [26, 1, 1, "c._fmpz_mod_poly_divrem_basecase", "invB"], [26, 1, 1, "c._fmpz_mod_poly_divrem_basecase", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_divrem_basecase", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_divrem_basecase", "p"]], "_fmpz_mod_poly_divrem_divconquer": [[26, 1, 1, "c._fmpz_mod_poly_divrem_divconquer", "A"], [26, 1, 1, "c._fmpz_mod_poly_divrem_divconquer", "B"], [26, 1, 1, "c._fmpz_mod_poly_divrem_divconquer", "Q"], [26, 1, 1, "c._fmpz_mod_poly_divrem_divconquer", "R"], [26, 1, 1, "c._fmpz_mod_poly_divrem_divconquer", "invB"], [26, 1, 1, "c._fmpz_mod_poly_divrem_divconquer", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_divrem_divconquer", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_divrem_divconquer", "p"]], "_fmpz_mod_poly_divrem_divconquer_recursive": [[26, 1, 1, "c._fmpz_mod_poly_divrem_divconquer_recursive", "A"], [26, 1, 1, "c._fmpz_mod_poly_divrem_divconquer_recursive", "B"], [26, 1, 1, "c._fmpz_mod_poly_divrem_divconquer_recursive", "BQ"], [26, 1, 1, "c._fmpz_mod_poly_divrem_divconquer_recursive", "Q"], [26, 1, 1, "c._fmpz_mod_poly_divrem_divconquer_recursive", "W"], [26, 1, 1, "c._fmpz_mod_poly_divrem_divconquer_recursive", "invB"], [26, 1, 1, "c._fmpz_mod_poly_divrem_divconquer_recursive", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_divrem_divconquer_recursive", "p"]], "_fmpz_mod_poly_divrem_newton_n_preinv": [[26, 1, 1, "c._fmpz_mod_poly_divrem_newton_n_preinv", "A"], [26, 1, 1, "c._fmpz_mod_poly_divrem_newton_n_preinv", "B"], [26, 1, 1, "c._fmpz_mod_poly_divrem_newton_n_preinv", "Binv"], [26, 1, 1, "c._fmpz_mod_poly_divrem_newton_n_preinv", "Q"], [26, 1, 1, "c._fmpz_mod_poly_divrem_newton_n_preinv", "R"], [26, 1, 1, "c._fmpz_mod_poly_divrem_newton_n_preinv", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_divrem_newton_n_preinv", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_divrem_newton_n_preinv", "lenBinv"], [26, 1, 1, "c._fmpz_mod_poly_divrem_newton_n_preinv", "mod"]], "_fmpz_mod_poly_evaluate_fmpz": [[26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz", "a"], [26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz", "len"], [26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz", "p"], [26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz", "poly"], [26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz", "res"]], "_fmpz_mod_poly_evaluate_fmpz_vec": [[26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz_vec", "coeffs"], [26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz_vec", "len"], [26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz_vec", "mod"], [26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz_vec", "n"], [26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz_vec", "xs"], [26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz_vec", "ys"]], "_fmpz_mod_poly_evaluate_fmpz_vec_fast": [[26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz_vec_fast", "mod"], [26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz_vec_fast", "n"], [26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz_vec_fast", "plen"], [26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz_vec_fast", "poly"], [26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz_vec_fast", "xs"], [26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz_vec_fast", "ys"]], "_fmpz_mod_poly_evaluate_fmpz_vec_fast_precomp": [[26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz_vec_fast_precomp", "len"], [26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz_vec_fast_precomp", "mod"], [26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz_vec_fast_precomp", "plen"], [26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz_vec_fast_precomp", "poly"], [26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz_vec_fast_precomp", "tree"], [26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz_vec_fast_precomp", "vs"]], "_fmpz_mod_poly_evaluate_fmpz_vec_iter": [[26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz_vec_iter", "coeffs"], [26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz_vec_iter", "len"], [26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz_vec_iter", "mod"], [26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz_vec_iter", "n"], [26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz_vec_iter", "xs"], [26, 1, 1, "c._fmpz_mod_poly_evaluate_fmpz_vec_iter", "ys"]], "_fmpz_mod_poly_fprint": [[26, 1, 1, "c._fmpz_mod_poly_fprint", "file"], [26, 1, 1, "c._fmpz_mod_poly_fprint", "len"], [26, 1, 1, "c._fmpz_mod_poly_fprint", "p"], [26, 1, 1, "c._fmpz_mod_poly_fprint", "poly"]], "_fmpz_mod_poly_gcd": [[26, 1, 1, "c._fmpz_mod_poly_gcd", "A"], [26, 1, 1, "c._fmpz_mod_poly_gcd", "B"], [26, 1, 1, "c._fmpz_mod_poly_gcd", "G"], [26, 1, 1, "c._fmpz_mod_poly_gcd", "invB"], [26, 1, 1, "c._fmpz_mod_poly_gcd", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_gcd", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_gcd", "p"]], "_fmpz_mod_poly_gcd_euclidean": [[26, 1, 1, "c._fmpz_mod_poly_gcd_euclidean", "A"], [26, 1, 1, "c._fmpz_mod_poly_gcd_euclidean", "B"], [26, 1, 1, "c._fmpz_mod_poly_gcd_euclidean", "G"], [26, 1, 1, "c._fmpz_mod_poly_gcd_euclidean", "invB"], [26, 1, 1, "c._fmpz_mod_poly_gcd_euclidean", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_gcd_euclidean", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_gcd_euclidean", "p"]], "_fmpz_mod_poly_gcd_euclidean_f": [[26, 1, 1, "c._fmpz_mod_poly_gcd_euclidean_f", "A"], [26, 1, 1, "c._fmpz_mod_poly_gcd_euclidean_f", "B"], [26, 1, 1, "c._fmpz_mod_poly_gcd_euclidean_f", "G"], [26, 1, 1, "c._fmpz_mod_poly_gcd_euclidean_f", "f"], [26, 1, 1, "c._fmpz_mod_poly_gcd_euclidean_f", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_gcd_euclidean_f", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_gcd_euclidean_f", "p"]], "_fmpz_mod_poly_gcd_f": [[26, 1, 1, "c._fmpz_mod_poly_gcd_f", "A"], [26, 1, 1, "c._fmpz_mod_poly_gcd_f", "B"], [26, 1, 1, "c._fmpz_mod_poly_gcd_f", "G"], [26, 1, 1, "c._fmpz_mod_poly_gcd_f", "f"], [26, 1, 1, "c._fmpz_mod_poly_gcd_f", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_gcd_f", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_gcd_f", "p"]], "_fmpz_mod_poly_gcd_hgcd": [[26, 1, 1, "c._fmpz_mod_poly_gcd_hgcd", "A"], [26, 1, 1, "c._fmpz_mod_poly_gcd_hgcd", "B"], [26, 1, 1, "c._fmpz_mod_poly_gcd_hgcd", "G"], [26, 1, 1, "c._fmpz_mod_poly_gcd_hgcd", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_gcd_hgcd", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_gcd_hgcd", "mod"]], "_fmpz_mod_poly_gcdinv": [[26, 1, 1, "c._fmpz_mod_poly_gcdinv", "A"], [26, 1, 1, "c._fmpz_mod_poly_gcdinv", "B"], [26, 1, 1, "c._fmpz_mod_poly_gcdinv", "G"], [26, 1, 1, "c._fmpz_mod_poly_gcdinv", "S"], [26, 1, 1, "c._fmpz_mod_poly_gcdinv", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_gcdinv", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_gcdinv", "p"]], "_fmpz_mod_poly_gcdinv_euclidean": [[26, 1, 1, "c._fmpz_mod_poly_gcdinv_euclidean", "A"], [26, 1, 1, "c._fmpz_mod_poly_gcdinv_euclidean", "B"], [26, 1, 1, "c._fmpz_mod_poly_gcdinv_euclidean", "G"], [26, 1, 1, "c._fmpz_mod_poly_gcdinv_euclidean", "S"], [26, 1, 1, "c._fmpz_mod_poly_gcdinv_euclidean", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_gcdinv_euclidean", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_gcdinv_euclidean", "p"]], "_fmpz_mod_poly_gcdinv_euclidean_f": [[26, 1, 1, "c._fmpz_mod_poly_gcdinv_euclidean_f", "A"], [26, 1, 1, "c._fmpz_mod_poly_gcdinv_euclidean_f", "B"], [26, 1, 1, "c._fmpz_mod_poly_gcdinv_euclidean_f", "G"], [26, 1, 1, "c._fmpz_mod_poly_gcdinv_euclidean_f", "S"], [26, 1, 1, "c._fmpz_mod_poly_gcdinv_euclidean_f", "f"], [26, 1, 1, "c._fmpz_mod_poly_gcdinv_euclidean_f", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_gcdinv_euclidean_f", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_gcdinv_euclidean_f", "p"]], "_fmpz_mod_poly_gcdinv_f": [[26, 1, 1, "c._fmpz_mod_poly_gcdinv_f", "A"], [26, 1, 1, "c._fmpz_mod_poly_gcdinv_f", "B"], [26, 1, 1, "c._fmpz_mod_poly_gcdinv_f", "G"], [26, 1, 1, "c._fmpz_mod_poly_gcdinv_f", "S"], [26, 1, 1, "c._fmpz_mod_poly_gcdinv_f", "f"], [26, 1, 1, "c._fmpz_mod_poly_gcdinv_f", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_gcdinv_f", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_gcdinv_f", "p"]], "_fmpz_mod_poly_hgcd": [[26, 1, 1, "c._fmpz_mod_poly_hgcd", "A"], [26, 1, 1, "c._fmpz_mod_poly_hgcd", "B"], [26, 1, 1, "c._fmpz_mod_poly_hgcd", "M"], [26, 1, 1, "c._fmpz_mod_poly_hgcd", "a"], [26, 1, 1, "c._fmpz_mod_poly_hgcd", "b"], [26, 1, 1, "c._fmpz_mod_poly_hgcd", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_hgcd", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_hgcd", "lenM"], [26, 1, 1, "c._fmpz_mod_poly_hgcd", "lena"], [26, 1, 1, "c._fmpz_mod_poly_hgcd", "lenb"], [26, 1, 1, "c._fmpz_mod_poly_hgcd", "mod"]], "_fmpz_mod_poly_interval_poly_worker": [[27, 1, 1, "c._fmpz_mod_poly_interval_poly_worker", "arg_ptr"]], "_fmpz_mod_poly_inv_series": [[26, 1, 1, "c._fmpz_mod_poly_inv_series", "Q"], [26, 1, 1, "c._fmpz_mod_poly_inv_series", "Qinv"], [26, 1, 1, "c._fmpz_mod_poly_inv_series", "cinv"], [26, 1, 1, "c._fmpz_mod_poly_inv_series", "n"], [26, 1, 1, "c._fmpz_mod_poly_inv_series", "p"]], "_fmpz_mod_poly_inv_series_newton": [[26, 1, 1, "c._fmpz_mod_poly_inv_series_newton", "Q"], [26, 1, 1, "c._fmpz_mod_poly_inv_series_newton", "Qinv"], [26, 1, 1, "c._fmpz_mod_poly_inv_series_newton", "cinv"], [26, 1, 1, "c._fmpz_mod_poly_inv_series_newton", "n"], [26, 1, 1, "c._fmpz_mod_poly_inv_series_newton", "p"]], "_fmpz_mod_poly_invmod": [[26, 1, 1, "c._fmpz_mod_poly_invmod", "A"], [26, 1, 1, "c._fmpz_mod_poly_invmod", "B"], [26, 1, 1, "c._fmpz_mod_poly_invmod", "P"], [26, 1, 1, "c._fmpz_mod_poly_invmod", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_invmod", "lenP"], [26, 1, 1, "c._fmpz_mod_poly_invmod", "p"]], "_fmpz_mod_poly_invmod_f": [[26, 1, 1, "c._fmpz_mod_poly_invmod_f", "A"], [26, 1, 1, "c._fmpz_mod_poly_invmod_f", "B"], [26, 1, 1, "c._fmpz_mod_poly_invmod_f", "P"], [26, 1, 1, "c._fmpz_mod_poly_invmod_f", "f"], [26, 1, 1, "c._fmpz_mod_poly_invmod_f", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_invmod_f", "lenP"], [26, 1, 1, "c._fmpz_mod_poly_invmod_f", "p"]], "_fmpz_mod_poly_invsqrt_series": [[26, 1, 1, "c._fmpz_mod_poly_invsqrt_series", "g"], [26, 1, 1, "c._fmpz_mod_poly_invsqrt_series", "h"], [26, 1, 1, "c._fmpz_mod_poly_invsqrt_series", "mod"], [26, 1, 1, "c._fmpz_mod_poly_invsqrt_series", "n"]], "_fmpz_mod_poly_is_squarefree": [[27, 1, 1, "c._fmpz_mod_poly_is_squarefree", "f"], [27, 1, 1, "c._fmpz_mod_poly_is_squarefree", "len"], [27, 1, 1, "c._fmpz_mod_poly_is_squarefree", "p"]], "_fmpz_mod_poly_is_squarefree_f": [[27, 1, 1, "c._fmpz_mod_poly_is_squarefree_f", "f"], [27, 1, 1, "c._fmpz_mod_poly_is_squarefree_f", "fac"], [27, 1, 1, "c._fmpz_mod_poly_is_squarefree_f", "len"], [27, 1, 1, "c._fmpz_mod_poly_is_squarefree_f", "p"]], "_fmpz_mod_poly_minpoly": [[26, 1, 1, "c._fmpz_mod_poly_minpoly", "len"], [26, 1, 1, "c._fmpz_mod_poly_minpoly", "p"], [26, 1, 1, "c._fmpz_mod_poly_minpoly", "poly"], [26, 1, 1, "c._fmpz_mod_poly_minpoly", "seq"]], "_fmpz_mod_poly_minpoly_bm": [[26, 1, 1, "c._fmpz_mod_poly_minpoly_bm", "len"], [26, 1, 1, "c._fmpz_mod_poly_minpoly_bm", "p"], [26, 1, 1, "c._fmpz_mod_poly_minpoly_bm", "poly"], [26, 1, 1, "c._fmpz_mod_poly_minpoly_bm", "seq"]], "_fmpz_mod_poly_minpoly_hgcd": [[26, 1, 1, "c._fmpz_mod_poly_minpoly_hgcd", "len"], [26, 1, 1, "c._fmpz_mod_poly_minpoly_hgcd", "p"], [26, 1, 1, "c._fmpz_mod_poly_minpoly_hgcd", "poly"], [26, 1, 1, "c._fmpz_mod_poly_minpoly_hgcd", "seq"]], "_fmpz_mod_poly_mul": [[26, 1, 1, "c._fmpz_mod_poly_mul", "len1"], [26, 1, 1, "c._fmpz_mod_poly_mul", "len2"], [26, 1, 1, "c._fmpz_mod_poly_mul", "p"], [26, 1, 1, "c._fmpz_mod_poly_mul", "poly1"], [26, 1, 1, "c._fmpz_mod_poly_mul", "poly2"], [26, 1, 1, "c._fmpz_mod_poly_mul", "res"]], "_fmpz_mod_poly_mullow": [[26, 1, 1, "c._fmpz_mod_poly_mullow", "len1"], [26, 1, 1, "c._fmpz_mod_poly_mullow", "len2"], [26, 1, 1, "c._fmpz_mod_poly_mullow", "n"], [26, 1, 1, "c._fmpz_mod_poly_mullow", "p"], [26, 1, 1, "c._fmpz_mod_poly_mullow", "poly1"], [26, 1, 1, "c._fmpz_mod_poly_mullow", "poly2"], [26, 1, 1, "c._fmpz_mod_poly_mullow", "res"]], "_fmpz_mod_poly_mulmod": [[26, 1, 1, "c._fmpz_mod_poly_mulmod", "f"], [26, 1, 1, "c._fmpz_mod_poly_mulmod", "len1"], [26, 1, 1, "c._fmpz_mod_poly_mulmod", "len2"], [26, 1, 1, "c._fmpz_mod_poly_mulmod", "lenf"], [26, 1, 1, "c._fmpz_mod_poly_mulmod", "p"], [26, 1, 1, "c._fmpz_mod_poly_mulmod", "poly1"], [26, 1, 1, "c._fmpz_mod_poly_mulmod", "poly2"], [26, 1, 1, "c._fmpz_mod_poly_mulmod", "res"]], "_fmpz_mod_poly_mulmod_preinv": [[26, 1, 1, "c._fmpz_mod_poly_mulmod_preinv", "f"], [26, 1, 1, "c._fmpz_mod_poly_mulmod_preinv", "finv"], [26, 1, 1, "c._fmpz_mod_poly_mulmod_preinv", "len1"], [26, 1, 1, "c._fmpz_mod_poly_mulmod_preinv", "len2"], [26, 1, 1, "c._fmpz_mod_poly_mulmod_preinv", "lenf"], [26, 1, 1, "c._fmpz_mod_poly_mulmod_preinv", "lenfinv"], [26, 1, 1, "c._fmpz_mod_poly_mulmod_preinv", "p"], [26, 1, 1, "c._fmpz_mod_poly_mulmod_preinv", "poly1"], [26, 1, 1, "c._fmpz_mod_poly_mulmod_preinv", "poly2"], [26, 1, 1, "c._fmpz_mod_poly_mulmod_preinv", "res"]], "_fmpz_mod_poly_neg": [[26, 1, 1, "c._fmpz_mod_poly_neg", "len"], [26, 1, 1, "c._fmpz_mod_poly_neg", "p"], [26, 1, 1, "c._fmpz_mod_poly_neg", "poly"], [26, 1, 1, "c._fmpz_mod_poly_neg", "res"]], "_fmpz_mod_poly_normalise": [[26, 1, 1, "c._fmpz_mod_poly_normalise", "poly"]], "_fmpz_mod_poly_pow": [[26, 1, 1, "c._fmpz_mod_poly_pow", "e"], [26, 1, 1, "c._fmpz_mod_poly_pow", "len"], [26, 1, 1, "c._fmpz_mod_poly_pow", "op"], [26, 1, 1, "c._fmpz_mod_poly_pow", "p"], [26, 1, 1, "c._fmpz_mod_poly_pow", "rop"]], "_fmpz_mod_poly_pow_trunc": [[26, 1, 1, "c._fmpz_mod_poly_pow_trunc", "e"], [26, 1, 1, "c._fmpz_mod_poly_pow_trunc", "p"], [26, 1, 1, "c._fmpz_mod_poly_pow_trunc", "poly"], [26, 1, 1, "c._fmpz_mod_poly_pow_trunc", "res"], [26, 1, 1, "c._fmpz_mod_poly_pow_trunc", "trunc"]], "_fmpz_mod_poly_pow_trunc_binexp": [[26, 1, 1, "c._fmpz_mod_poly_pow_trunc_binexp", "e"], [26, 1, 1, "c._fmpz_mod_poly_pow_trunc_binexp", "p"], [26, 1, 1, "c._fmpz_mod_poly_pow_trunc_binexp", "poly"], [26, 1, 1, "c._fmpz_mod_poly_pow_trunc_binexp", "res"], [26, 1, 1, "c._fmpz_mod_poly_pow_trunc_binexp", "trunc"]], "_fmpz_mod_poly_powers_mod_preinv_naive": [[26, 1, 1, "c._fmpz_mod_poly_powers_mod_preinv_naive", "f"], [26, 1, 1, "c._fmpz_mod_poly_powers_mod_preinv_naive", "flen"], [26, 1, 1, "c._fmpz_mod_poly_powers_mod_preinv_naive", "g"], [26, 1, 1, "c._fmpz_mod_poly_powers_mod_preinv_naive", "ginv"], [26, 1, 1, "c._fmpz_mod_poly_powers_mod_preinv_naive", "ginvlen"], [26, 1, 1, "c._fmpz_mod_poly_powers_mod_preinv_naive", "glen"], [26, 1, 1, "c._fmpz_mod_poly_powers_mod_preinv_naive", "n"], [26, 1, 1, "c._fmpz_mod_poly_powers_mod_preinv_naive", "p"], [26, 1, 1, "c._fmpz_mod_poly_powers_mod_preinv_naive", "res"]], "_fmpz_mod_poly_powers_mod_preinv_threaded_pool": [[26, 1, 1, "c._fmpz_mod_poly_powers_mod_preinv_threaded_pool", "f"], [26, 1, 1, "c._fmpz_mod_poly_powers_mod_preinv_threaded_pool", "flen"], [26, 1, 1, "c._fmpz_mod_poly_powers_mod_preinv_threaded_pool", "g"], [26, 1, 1, "c._fmpz_mod_poly_powers_mod_preinv_threaded_pool", "ginv"], [26, 1, 1, "c._fmpz_mod_poly_powers_mod_preinv_threaded_pool", "ginvlen"], [26, 1, 1, "c._fmpz_mod_poly_powers_mod_preinv_threaded_pool", "glen"], [26, 1, 1, "c._fmpz_mod_poly_powers_mod_preinv_threaded_pool", "n"], [26, 1, 1, "c._fmpz_mod_poly_powers_mod_preinv_threaded_pool", "num_threads"], [26, 1, 1, "c._fmpz_mod_poly_powers_mod_preinv_threaded_pool", "p"], [26, 1, 1, "c._fmpz_mod_poly_powers_mod_preinv_threaded_pool", "res"], [26, 1, 1, "c._fmpz_mod_poly_powers_mod_preinv_threaded_pool", "threads"]], "_fmpz_mod_poly_powmod_fmpz_binexp": [[26, 1, 1, "c._fmpz_mod_poly_powmod_fmpz_binexp", "e"], [26, 1, 1, "c._fmpz_mod_poly_powmod_fmpz_binexp", "f"], [26, 1, 1, "c._fmpz_mod_poly_powmod_fmpz_binexp", "lenf"], [26, 1, 1, "c._fmpz_mod_poly_powmod_fmpz_binexp", "p"], [26, 1, 1, "c._fmpz_mod_poly_powmod_fmpz_binexp", "poly"], [26, 1, 1, "c._fmpz_mod_poly_powmod_fmpz_binexp", "res"]], "_fmpz_mod_poly_powmod_fmpz_binexp_preinv": [[26, 1, 1, "c._fmpz_mod_poly_powmod_fmpz_binexp_preinv", "e"], [26, 1, 1, "c._fmpz_mod_poly_powmod_fmpz_binexp_preinv", "f"], [26, 1, 1, "c._fmpz_mod_poly_powmod_fmpz_binexp_preinv", "finv"], [26, 1, 1, "c._fmpz_mod_poly_powmod_fmpz_binexp_preinv", "lenf"], [26, 1, 1, "c._fmpz_mod_poly_powmod_fmpz_binexp_preinv", "lenfinv"], [26, 1, 1, "c._fmpz_mod_poly_powmod_fmpz_binexp_preinv", "p"], [26, 1, 1, "c._fmpz_mod_poly_powmod_fmpz_binexp_preinv", "poly"], [26, 1, 1, "c._fmpz_mod_poly_powmod_fmpz_binexp_preinv", "res"]], "_fmpz_mod_poly_powmod_ui_binexp": [[26, 1, 1, "c._fmpz_mod_poly_powmod_ui_binexp", "e"], [26, 1, 1, "c._fmpz_mod_poly_powmod_ui_binexp", "f"], [26, 1, 1, "c._fmpz_mod_poly_powmod_ui_binexp", "lenf"], [26, 1, 1, "c._fmpz_mod_poly_powmod_ui_binexp", "p"], [26, 1, 1, "c._fmpz_mod_poly_powmod_ui_binexp", "poly"], [26, 1, 1, "c._fmpz_mod_poly_powmod_ui_binexp", "res"]], "_fmpz_mod_poly_powmod_ui_binexp_preinv": [[26, 1, 1, "c._fmpz_mod_poly_powmod_ui_binexp_preinv", "e"], [26, 1, 1, "c._fmpz_mod_poly_powmod_ui_binexp_preinv", "f"], [26, 1, 1, "c._fmpz_mod_poly_powmod_ui_binexp_preinv", "finv"], [26, 1, 1, "c._fmpz_mod_poly_powmod_ui_binexp_preinv", "lenf"], [26, 1, 1, "c._fmpz_mod_poly_powmod_ui_binexp_preinv", "lenfinv"], [26, 1, 1, "c._fmpz_mod_poly_powmod_ui_binexp_preinv", "p"], [26, 1, 1, "c._fmpz_mod_poly_powmod_ui_binexp_preinv", "poly"], [26, 1, 1, "c._fmpz_mod_poly_powmod_ui_binexp_preinv", "res"]], "_fmpz_mod_poly_powmod_x_fmpz_preinv": [[26, 1, 1, "c._fmpz_mod_poly_powmod_x_fmpz_preinv", "e"], [26, 1, 1, "c._fmpz_mod_poly_powmod_x_fmpz_preinv", "f"], [26, 1, 1, "c._fmpz_mod_poly_powmod_x_fmpz_preinv", "finv"], [26, 1, 1, "c._fmpz_mod_poly_powmod_x_fmpz_preinv", "lenf"], [26, 1, 1, "c._fmpz_mod_poly_powmod_x_fmpz_preinv", "lenfinv"], [26, 1, 1, "c._fmpz_mod_poly_powmod_x_fmpz_preinv", "p"], [26, 1, 1, "c._fmpz_mod_poly_powmod_x_fmpz_preinv", "res"]], "_fmpz_mod_poly_precompute_matrix": [[26, 1, 1, "c._fmpz_mod_poly_precompute_matrix", "A"], [26, 1, 1, "c._fmpz_mod_poly_precompute_matrix", "f"], [26, 1, 1, "c._fmpz_mod_poly_precompute_matrix", "g"], [26, 1, 1, "c._fmpz_mod_poly_precompute_matrix", "ginv"], [26, 1, 1, "c._fmpz_mod_poly_precompute_matrix", "leng"], [26, 1, 1, "c._fmpz_mod_poly_precompute_matrix", "lenginv"], [26, 1, 1, "c._fmpz_mod_poly_precompute_matrix", "p"]], "_fmpz_mod_poly_precompute_matrix_worker": [[26, 1, 1, "c._fmpz_mod_poly_precompute_matrix_worker", "arg_ptr"]], "_fmpz_mod_poly_product_roots_fmpz_vec": [[26, 1, 1, "c._fmpz_mod_poly_product_roots_fmpz_vec", "f"], [26, 1, 1, "c._fmpz_mod_poly_product_roots_fmpz_vec", "n"], [26, 1, 1, "c._fmpz_mod_poly_product_roots_fmpz_vec", "poly"], [26, 1, 1, "c._fmpz_mod_poly_product_roots_fmpz_vec", "xs"]], "_fmpz_mod_poly_radix": [[26, 1, 1, "c._fmpz_mod_poly_radix", "B"], [26, 1, 1, "c._fmpz_mod_poly_radix", "F"], [26, 1, 1, "c._fmpz_mod_poly_radix", "Rinv"], [26, 1, 1, "c._fmpz_mod_poly_radix", "Rpow"], [26, 1, 1, "c._fmpz_mod_poly_radix", "W"], [26, 1, 1, "c._fmpz_mod_poly_radix", "degR"], [26, 1, 1, "c._fmpz_mod_poly_radix", "i"], [26, 1, 1, "c._fmpz_mod_poly_radix", "k"], [26, 1, 1, "c._fmpz_mod_poly_radix", "p"]], "_fmpz_mod_poly_radix_init": [[26, 1, 1, "c._fmpz_mod_poly_radix_init", "R"], [26, 1, 1, "c._fmpz_mod_poly_radix_init", "Rinv"], [26, 1, 1, "c._fmpz_mod_poly_radix_init", "Rpow"], [26, 1, 1, "c._fmpz_mod_poly_radix_init", "invL"], [26, 1, 1, "c._fmpz_mod_poly_radix_init", "k"], [26, 1, 1, "c._fmpz_mod_poly_radix_init", "lenR"], [26, 1, 1, "c._fmpz_mod_poly_radix_init", "p"]], "_fmpz_mod_poly_reduce": [[86, 1, 1, "c._fmpz_mod_poly_reduce", "R"], [86, 1, 1, "c._fmpz_mod_poly_reduce", "a"], [86, 1, 1, "c._fmpz_mod_poly_reduce", "j"], [86, 1, 1, "c._fmpz_mod_poly_reduce", "len"], [86, 1, 1, "c._fmpz_mod_poly_reduce", "lenR"], [86, 1, 1, "c._fmpz_mod_poly_reduce", "p"]], "_fmpz_mod_poly_reduce_matrix_mod_poly": [[26, 1, 1, "c._fmpz_mod_poly_reduce_matrix_mod_poly", "A"], [26, 1, 1, "c._fmpz_mod_poly_reduce_matrix_mod_poly", "B"], [26, 1, 1, "c._fmpz_mod_poly_reduce_matrix_mod_poly", "ctx"], [26, 1, 1, "c._fmpz_mod_poly_reduce_matrix_mod_poly", "f"]], "_fmpz_mod_poly_rem": [[26, 1, 1, "c._fmpz_mod_poly_rem", "A"], [26, 1, 1, "c._fmpz_mod_poly_rem", "B"], [26, 1, 1, "c._fmpz_mod_poly_rem", "R"], [26, 1, 1, "c._fmpz_mod_poly_rem", "invB"], [26, 1, 1, "c._fmpz_mod_poly_rem", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_rem", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_rem", "p"]], "_fmpz_mod_poly_rem_basecase": [[26, 1, 1, "c._fmpz_mod_poly_rem_basecase", "A"], [26, 1, 1, "c._fmpz_mod_poly_rem_basecase", "B"], [26, 1, 1, "c._fmpz_mod_poly_rem_basecase", "R"], [26, 1, 1, "c._fmpz_mod_poly_rem_basecase", "invB"], [26, 1, 1, "c._fmpz_mod_poly_rem_basecase", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_rem_basecase", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_rem_basecase", "p"]], "_fmpz_mod_poly_rem_f": [[26, 1, 1, "c._fmpz_mod_poly_rem_f", "A"], [26, 1, 1, "c._fmpz_mod_poly_rem_f", "B"], [26, 1, 1, "c._fmpz_mod_poly_rem_f", "R"], [26, 1, 1, "c._fmpz_mod_poly_rem_f", "f"], [26, 1, 1, "c._fmpz_mod_poly_rem_f", "invB"], [26, 1, 1, "c._fmpz_mod_poly_rem_f", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_rem_f", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_rem_f", "p"]], "_fmpz_mod_poly_resultant": [[26, 1, 1, "c._fmpz_mod_poly_resultant", "len1"], [26, 1, 1, "c._fmpz_mod_poly_resultant", "len2"], [26, 1, 1, "c._fmpz_mod_poly_resultant", "mod"], [26, 1, 1, "c._fmpz_mod_poly_resultant", "poly1"], [26, 1, 1, "c._fmpz_mod_poly_resultant", "poly2"], [26, 1, 1, "c._fmpz_mod_poly_resultant", "res"]], "_fmpz_mod_poly_resultant_euclidean": [[26, 1, 1, "c._fmpz_mod_poly_resultant_euclidean", "len1"], [26, 1, 1, "c._fmpz_mod_poly_resultant_euclidean", "len2"], [26, 1, 1, "c._fmpz_mod_poly_resultant_euclidean", "mod"], [26, 1, 1, "c._fmpz_mod_poly_resultant_euclidean", "poly1"], [26, 1, 1, "c._fmpz_mod_poly_resultant_euclidean", "poly2"], [26, 1, 1, "c._fmpz_mod_poly_resultant_euclidean", "res"]], "_fmpz_mod_poly_resultant_hgcd": [[26, 1, 1, "c._fmpz_mod_poly_resultant_hgcd", "A"], [26, 1, 1, "c._fmpz_mod_poly_resultant_hgcd", "B"], [26, 1, 1, "c._fmpz_mod_poly_resultant_hgcd", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_resultant_hgcd", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_resultant_hgcd", "mod"], [26, 1, 1, "c._fmpz_mod_poly_resultant_hgcd", "res"]], "_fmpz_mod_poly_scalar_div_fmpz": [[26, 1, 1, "c._fmpz_mod_poly_scalar_div_fmpz", "len"], [26, 1, 1, "c._fmpz_mod_poly_scalar_div_fmpz", "p"], [26, 1, 1, "c._fmpz_mod_poly_scalar_div_fmpz", "poly"], [26, 1, 1, "c._fmpz_mod_poly_scalar_div_fmpz", "res"], [26, 1, 1, "c._fmpz_mod_poly_scalar_div_fmpz", "x"]], "_fmpz_mod_poly_scalar_mul_fmpz": [[26, 1, 1, "c._fmpz_mod_poly_scalar_mul_fmpz", "len"], [26, 1, 1, "c._fmpz_mod_poly_scalar_mul_fmpz", "p"], [26, 1, 1, "c._fmpz_mod_poly_scalar_mul_fmpz", "poly"], [26, 1, 1, "c._fmpz_mod_poly_scalar_mul_fmpz", "res"], [26, 1, 1, "c._fmpz_mod_poly_scalar_mul_fmpz", "x"]], "_fmpz_mod_poly_set_length": [[26, 1, 1, "c._fmpz_mod_poly_set_length", "len"], [26, 1, 1, "c._fmpz_mod_poly_set_length", "poly"]], "_fmpz_mod_poly_shift_left": [[26, 1, 1, "c._fmpz_mod_poly_shift_left", "ctx"], [26, 1, 1, "c._fmpz_mod_poly_shift_left", "len"], [26, 1, 1, "c._fmpz_mod_poly_shift_left", "n"], [26, 1, 1, "c._fmpz_mod_poly_shift_left", "poly"], [26, 1, 1, "c._fmpz_mod_poly_shift_left", "res"]], "_fmpz_mod_poly_shift_right": [[26, 1, 1, "c._fmpz_mod_poly_shift_right", "ctx"], [26, 1, 1, "c._fmpz_mod_poly_shift_right", "len"], [26, 1, 1, "c._fmpz_mod_poly_shift_right", "n"], [26, 1, 1, "c._fmpz_mod_poly_shift_right", "poly"], [26, 1, 1, "c._fmpz_mod_poly_shift_right", "res"]], "_fmpz_mod_poly_sqr": [[26, 1, 1, "c._fmpz_mod_poly_sqr", "len"], [26, 1, 1, "c._fmpz_mod_poly_sqr", "p"], [26, 1, 1, "c._fmpz_mod_poly_sqr", "poly"], [26, 1, 1, "c._fmpz_mod_poly_sqr", "res"]], "_fmpz_mod_poly_sqrt": [[26, 1, 1, "c._fmpz_mod_poly_sqrt", "mod"], [26, 1, 1, "c._fmpz_mod_poly_sqrt", "n"], [26, 1, 1, "c._fmpz_mod_poly_sqrt", "p"], [26, 1, 1, "c._fmpz_mod_poly_sqrt", "s"]], "_fmpz_mod_poly_sqrt_series": [[26, 1, 1, "c._fmpz_mod_poly_sqrt_series", "ctx"], [26, 1, 1, "c._fmpz_mod_poly_sqrt_series", "g"], [26, 1, 1, "c._fmpz_mod_poly_sqrt_series", "h"], [26, 1, 1, "c._fmpz_mod_poly_sqrt_series", "n"]], "_fmpz_mod_poly_sub": [[26, 1, 1, "c._fmpz_mod_poly_sub", "len1"], [26, 1, 1, "c._fmpz_mod_poly_sub", "len2"], [26, 1, 1, "c._fmpz_mod_poly_sub", "p"], [26, 1, 1, "c._fmpz_mod_poly_sub", "poly1"], [26, 1, 1, "c._fmpz_mod_poly_sub", "poly2"], [26, 1, 1, "c._fmpz_mod_poly_sub", "res"]], "_fmpz_mod_poly_tree_alloc": [[26, 1, 1, "c._fmpz_mod_poly_tree_alloc", "len"]], "_fmpz_mod_poly_tree_build": [[26, 1, 1, "c._fmpz_mod_poly_tree_build", "len"], [26, 1, 1, "c._fmpz_mod_poly_tree_build", "mod"], [26, 1, 1, "c._fmpz_mod_poly_tree_build", "roots"], [26, 1, 1, "c._fmpz_mod_poly_tree_build", "tree"]], "_fmpz_mod_poly_tree_free": [[26, 1, 1, "c._fmpz_mod_poly_tree_free", "len"], [26, 1, 1, "c._fmpz_mod_poly_tree_free", "tree"]], "_fmpz_mod_poly_xgcd": [[26, 1, 1, "c._fmpz_mod_poly_xgcd", "A"], [26, 1, 1, "c._fmpz_mod_poly_xgcd", "B"], [26, 1, 1, "c._fmpz_mod_poly_xgcd", "G"], [26, 1, 1, "c._fmpz_mod_poly_xgcd", "S"], [26, 1, 1, "c._fmpz_mod_poly_xgcd", "T"], [26, 1, 1, "c._fmpz_mod_poly_xgcd", "invB"], [26, 1, 1, "c._fmpz_mod_poly_xgcd", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_xgcd", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_xgcd", "p"]], "_fmpz_mod_poly_xgcd_euclidean": [[26, 1, 1, "c._fmpz_mod_poly_xgcd_euclidean", "A"], [26, 1, 1, "c._fmpz_mod_poly_xgcd_euclidean", "B"], [26, 1, 1, "c._fmpz_mod_poly_xgcd_euclidean", "G"], [26, 1, 1, "c._fmpz_mod_poly_xgcd_euclidean", "S"], [26, 1, 1, "c._fmpz_mod_poly_xgcd_euclidean", "T"], [26, 1, 1, "c._fmpz_mod_poly_xgcd_euclidean", "invB"], [26, 1, 1, "c._fmpz_mod_poly_xgcd_euclidean", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_xgcd_euclidean", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_xgcd_euclidean", "p"]], "_fmpz_mod_poly_xgcd_euclidean_f": [[26, 1, 1, "c._fmpz_mod_poly_xgcd_euclidean_f", "A"], [26, 1, 1, "c._fmpz_mod_poly_xgcd_euclidean_f", "B"], [26, 1, 1, "c._fmpz_mod_poly_xgcd_euclidean_f", "G"], [26, 1, 1, "c._fmpz_mod_poly_xgcd_euclidean_f", "S"], [26, 1, 1, "c._fmpz_mod_poly_xgcd_euclidean_f", "T"], [26, 1, 1, "c._fmpz_mod_poly_xgcd_euclidean_f", "f"], [26, 1, 1, "c._fmpz_mod_poly_xgcd_euclidean_f", "invB"], [26, 1, 1, "c._fmpz_mod_poly_xgcd_euclidean_f", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_xgcd_euclidean_f", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_xgcd_euclidean_f", "p"]], "_fmpz_mod_poly_xgcd_hgcd": [[26, 1, 1, "c._fmpz_mod_poly_xgcd_hgcd", "A"], [26, 1, 1, "c._fmpz_mod_poly_xgcd_hgcd", "B"], [26, 1, 1, "c._fmpz_mod_poly_xgcd_hgcd", "G"], [26, 1, 1, "c._fmpz_mod_poly_xgcd_hgcd", "S"], [26, 1, 1, "c._fmpz_mod_poly_xgcd_hgcd", "T"], [26, 1, 1, "c._fmpz_mod_poly_xgcd_hgcd", "lenA"], [26, 1, 1, "c._fmpz_mod_poly_xgcd_hgcd", "lenB"], [26, 1, 1, "c._fmpz_mod_poly_xgcd_hgcd", "mod"]], "_fmpz_mod_vec_add": [[28, 1, 1, "c._fmpz_mod_vec_add", "a"], [28, 1, 1, "c._fmpz_mod_vec_add", "b"], [28, 1, 1, "c._fmpz_mod_vec_add", "c"], [28, 1, 1, "c._fmpz_mod_vec_add", "ctx"], [28, 1, 1, "c._fmpz_mod_vec_add", "n"]], "_fmpz_mod_vec_mul": [[28, 1, 1, "c._fmpz_mod_vec_mul", "A"], [28, 1, 1, "c._fmpz_mod_vec_mul", "B"], [28, 1, 1, "c._fmpz_mod_vec_mul", "C"], [28, 1, 1, "c._fmpz_mod_vec_mul", "ctx"], [28, 1, 1, "c._fmpz_mod_vec_mul", "len"]], "_fmpz_mod_vec_neg": [[28, 1, 1, "c._fmpz_mod_vec_neg", "A"], [28, 1, 1, "c._fmpz_mod_vec_neg", "B"], [28, 1, 1, "c._fmpz_mod_vec_neg", "ctx"], [28, 1, 1, "c._fmpz_mod_vec_neg", "len"]], "_fmpz_mod_vec_scalar_addmul_fmpz_mod": [[28, 1, 1, "c._fmpz_mod_vec_scalar_addmul_fmpz_mod", "A"], [28, 1, 1, "c._fmpz_mod_vec_scalar_addmul_fmpz_mod", "B"], [28, 1, 1, "c._fmpz_mod_vec_scalar_addmul_fmpz_mod", "c"], [28, 1, 1, "c._fmpz_mod_vec_scalar_addmul_fmpz_mod", "ctx"], [28, 1, 1, "c._fmpz_mod_vec_scalar_addmul_fmpz_mod", "len"]], "_fmpz_mod_vec_scalar_mul_fmpz_mod": [[28, 1, 1, "c._fmpz_mod_vec_scalar_mul_fmpz_mod", "A"], [28, 1, 1, "c._fmpz_mod_vec_scalar_mul_fmpz_mod", "A"], [28, 1, 1, "c._fmpz_mod_vec_scalar_mul_fmpz_mod", "B"], [28, 1, 1, "c._fmpz_mod_vec_scalar_mul_fmpz_mod", "B"], [28, 1, 1, "c._fmpz_mod_vec_scalar_mul_fmpz_mod", "c"], [28, 1, 1, "c._fmpz_mod_vec_scalar_mul_fmpz_mod", "c"], [28, 1, 1, "c._fmpz_mod_vec_scalar_mul_fmpz_mod", "ctx"], [28, 1, 1, "c._fmpz_mod_vec_scalar_mul_fmpz_mod", "ctx"], [28, 1, 1, "c._fmpz_mod_vec_scalar_mul_fmpz_mod", "len"], [28, 1, 1, "c._fmpz_mod_vec_scalar_mul_fmpz_mod", "len"]], "_fmpz_mod_vec_set_fmpz_vec": [[28, 1, 1, "c._fmpz_mod_vec_set_fmpz_vec", "A"], [28, 1, 1, "c._fmpz_mod_vec_set_fmpz_vec", "B"], [28, 1, 1, "c._fmpz_mod_vec_set_fmpz_vec", "ctx"], [28, 1, 1, "c._fmpz_mod_vec_set_fmpz_vec", "len"]], "_fmpz_mod_vec_sub": [[28, 1, 1, "c._fmpz_mod_vec_sub", "a"], [28, 1, 1, "c._fmpz_mod_vec_sub", "b"], [28, 1, 1, "c._fmpz_mod_vec_sub", "c"], [28, 1, 1, "c._fmpz_mod_vec_sub", "ctx"], [28, 1, 1, "c._fmpz_mod_vec_sub", "n"]], "_fmpz_mpoly_div_monagan_pearce": [[29, 1, 1, "c._fmpz_mpoly_div_monagan_pearce", "N"], [29, 1, 1, "c._fmpz_mpoly_div_monagan_pearce", "allocq"], [29, 1, 1, "c._fmpz_mpoly_div_monagan_pearce", "bits"], [29, 1, 1, "c._fmpz_mpoly_div_monagan_pearce", "exp2"], [29, 1, 1, "c._fmpz_mpoly_div_monagan_pearce", "exp3"], [29, 1, 1, "c._fmpz_mpoly_div_monagan_pearce", "expq"], [29, 1, 1, "c._fmpz_mpoly_div_monagan_pearce", "len2"], [29, 1, 1, "c._fmpz_mpoly_div_monagan_pearce", "len3"], [29, 1, 1, "c._fmpz_mpoly_div_monagan_pearce", "poly2"], [29, 1, 1, "c._fmpz_mpoly_div_monagan_pearce", "poly3"], [29, 1, 1, "c._fmpz_mpoly_div_monagan_pearce", "polyq"]], "_fmpz_mpoly_divides_array": [[29, 1, 1, "c._fmpz_mpoly_divides_array", "alloc"], [29, 1, 1, "c._fmpz_mpoly_divides_array", "bits"], [29, 1, 1, "c._fmpz_mpoly_divides_array", "exp1"], [29, 1, 1, "c._fmpz_mpoly_divides_array", "exp2"], [29, 1, 1, "c._fmpz_mpoly_divides_array", "exp3"], [29, 1, 1, "c._fmpz_mpoly_divides_array", "len2"], [29, 1, 1, "c._fmpz_mpoly_divides_array", "len3"], [29, 1, 1, "c._fmpz_mpoly_divides_array", "mults"], [29, 1, 1, "c._fmpz_mpoly_divides_array", "num"], [29, 1, 1, "c._fmpz_mpoly_divides_array", "poly1"], [29, 1, 1, "c._fmpz_mpoly_divides_array", "poly2"], [29, 1, 1, "c._fmpz_mpoly_divides_array", "poly3"]], "_fmpz_mpoly_divides_monagan_pearce": [[29, 1, 1, "c._fmpz_mpoly_divides_monagan_pearce", "N"], [29, 1, 1, "c._fmpz_mpoly_divides_monagan_pearce", "alloc"], [29, 1, 1, "c._fmpz_mpoly_divides_monagan_pearce", "bits"], [29, 1, 1, "c._fmpz_mpoly_divides_monagan_pearce", "exp1"], [29, 1, 1, "c._fmpz_mpoly_divides_monagan_pearce", "exp2"], [29, 1, 1, "c._fmpz_mpoly_divides_monagan_pearce", "exp3"], [29, 1, 1, "c._fmpz_mpoly_divides_monagan_pearce", "len2"], [29, 1, 1, "c._fmpz_mpoly_divides_monagan_pearce", "len3"], [29, 1, 1, "c._fmpz_mpoly_divides_monagan_pearce", "poly1"], [29, 1, 1, "c._fmpz_mpoly_divides_monagan_pearce", "poly2"], [29, 1, 1, "c._fmpz_mpoly_divides_monagan_pearce", "poly3"]], "_fmpz_mpoly_divrem_array": [[29, 1, 1, "c._fmpz_mpoly_divrem_array", "allocq"], [29, 1, 1, "c._fmpz_mpoly_divrem_array", "allocr"], [29, 1, 1, "c._fmpz_mpoly_divrem_array", "bits"], [29, 1, 1, "c._fmpz_mpoly_divrem_array", "exp2"], [29, 1, 1, "c._fmpz_mpoly_divrem_array", "exp3"], [29, 1, 1, "c._fmpz_mpoly_divrem_array", "expq"], [29, 1, 1, "c._fmpz_mpoly_divrem_array", "expr"], [29, 1, 1, "c._fmpz_mpoly_divrem_array", "len2"], [29, 1, 1, "c._fmpz_mpoly_divrem_array", "len3"], [29, 1, 1, "c._fmpz_mpoly_divrem_array", "lenr"], [29, 1, 1, "c._fmpz_mpoly_divrem_array", "mults"], [29, 1, 1, "c._fmpz_mpoly_divrem_array", "num"], [29, 1, 1, "c._fmpz_mpoly_divrem_array", "poly2"], [29, 1, 1, "c._fmpz_mpoly_divrem_array", "poly3"], [29, 1, 1, "c._fmpz_mpoly_divrem_array", "polyq"], [29, 1, 1, "c._fmpz_mpoly_divrem_array", "polyr"]], "_fmpz_mpoly_divrem_ideal_monagan_pearce": [[29, 1, 1, "c._fmpz_mpoly_divrem_ideal_monagan_pearce", "N"], [29, 1, 1, "c._fmpz_mpoly_divrem_ideal_monagan_pearce", "allocr"], [29, 1, 1, "c._fmpz_mpoly_divrem_ideal_monagan_pearce", "bits"], [29, 1, 1, "c._fmpz_mpoly_divrem_ideal_monagan_pearce", "ctx"], [29, 1, 1, "c._fmpz_mpoly_divrem_ideal_monagan_pearce", "exp2"], [29, 1, 1, "c._fmpz_mpoly_divrem_ideal_monagan_pearce", "exp3"], [29, 1, 1, "c._fmpz_mpoly_divrem_ideal_monagan_pearce", "expr"], [29, 1, 1, "c._fmpz_mpoly_divrem_ideal_monagan_pearce", "len"], [29, 1, 1, "c._fmpz_mpoly_divrem_ideal_monagan_pearce", "len2"], [29, 1, 1, "c._fmpz_mpoly_divrem_ideal_monagan_pearce", "poly2"], [29, 1, 1, "c._fmpz_mpoly_divrem_ideal_monagan_pearce", "poly3"], [29, 1, 1, "c._fmpz_mpoly_divrem_ideal_monagan_pearce", "polyq"], [29, 1, 1, "c._fmpz_mpoly_divrem_ideal_monagan_pearce", "polyr"]], "_fmpz_mpoly_divrem_monagan_pearce": [[29, 1, 1, "c._fmpz_mpoly_divrem_monagan_pearce", "N"], [29, 1, 1, "c._fmpz_mpoly_divrem_monagan_pearce", "allocq"], [29, 1, 1, "c._fmpz_mpoly_divrem_monagan_pearce", "allocr"], [29, 1, 1, "c._fmpz_mpoly_divrem_monagan_pearce", "bits"], [29, 1, 1, "c._fmpz_mpoly_divrem_monagan_pearce", "exp2"], [29, 1, 1, "c._fmpz_mpoly_divrem_monagan_pearce", "exp3"], [29, 1, 1, "c._fmpz_mpoly_divrem_monagan_pearce", "expq"], [29, 1, 1, "c._fmpz_mpoly_divrem_monagan_pearce", "expr"], [29, 1, 1, "c._fmpz_mpoly_divrem_monagan_pearce", "len2"], [29, 1, 1, "c._fmpz_mpoly_divrem_monagan_pearce", "len3"], [29, 1, 1, "c._fmpz_mpoly_divrem_monagan_pearce", "lenr"], [29, 1, 1, "c._fmpz_mpoly_divrem_monagan_pearce", "poly2"], [29, 1, 1, "c._fmpz_mpoly_divrem_monagan_pearce", "poly3"], [29, 1, 1, "c._fmpz_mpoly_divrem_monagan_pearce", "polyq"], [29, 1, 1, "c._fmpz_mpoly_divrem_monagan_pearce", "polyr"]], "_fmpz_mpoly_fits_small": [[29, 1, 1, "c._fmpz_mpoly_fits_small", "len"], [29, 1, 1, "c._fmpz_mpoly_fits_small", "poly"]], "_fmpz_multi_crt_run": [[18, 1, 1, "c._fmpz_multi_crt_run", "CRT"], [18, 1, 1, "c._fmpz_multi_crt_run", "inputs"], [18, 1, 1, "c._fmpz_multi_crt_run", "outputs"]], "_fmpz_multi_crt_run_p": [[18, 1, 1, "c._fmpz_multi_crt_run_p", "CRT"], [18, 1, 1, "c._fmpz_multi_crt_run_p", "inputs"], [18, 1, 1, "c._fmpz_multi_crt_run_p", "outputs"]], "_fmpz_nm1_trial_factors": [[18, 1, 1, "c._fmpz_nm1_trial_factors", "limit"], [18, 1, 1, "c._fmpz_nm1_trial_factors", "n"], [18, 1, 1, "c._fmpz_nm1_trial_factors", "num_pm1"], [18, 1, 1, "c._fmpz_nm1_trial_factors", "pm1"]], "_fmpz_np1_trial_factors": [[18, 1, 1, "c._fmpz_np1_trial_factors", "limit"], [18, 1, 1, "c._fmpz_np1_trial_factors", "n"], [18, 1, 1, "c._fmpz_np1_trial_factors", "num_pp1"], [18, 1, 1, "c._fmpz_np1_trial_factors", "pp1"]], "_fmpz_poly_2norm": [[31, 1, 1, "c._fmpz_poly_2norm", "len"], [31, 1, 1, "c._fmpz_poly_2norm", "poly"], [31, 1, 1, "c._fmpz_poly_2norm", "res"]], "_fmpz_poly_2norm_normalised_bits": [[31, 1, 1, "c._fmpz_poly_2norm_normalised_bits", "len"], [31, 1, 1, "c._fmpz_poly_2norm_normalised_bits", "poly"]], "_fmpz_poly_CRT_ui": [[31, 1, 1, "c._fmpz_poly_CRT_ui", "len1"], [31, 1, 1, "c._fmpz_poly_CRT_ui", "len2"], [31, 1, 1, "c._fmpz_poly_CRT_ui", "m1"], [31, 1, 1, "c._fmpz_poly_CRT_ui", "m2"], [31, 1, 1, "c._fmpz_poly_CRT_ui", "m2inv"], [31, 1, 1, "c._fmpz_poly_CRT_ui", "poly1"], [31, 1, 1, "c._fmpz_poly_CRT_ui", "poly2"], [31, 1, 1, "c._fmpz_poly_CRT_ui", "res"], [31, 1, 1, "c._fmpz_poly_CRT_ui", "sign"]], "_fmpz_poly_CRT_ui_precomp": [[31, 1, 1, "c._fmpz_poly_CRT_ui_precomp", "c"], [31, 1, 1, "c._fmpz_poly_CRT_ui_precomp", "len1"], [31, 1, 1, "c._fmpz_poly_CRT_ui_precomp", "len2"], [31, 1, 1, "c._fmpz_poly_CRT_ui_precomp", "m1"], [31, 1, 1, "c._fmpz_poly_CRT_ui_precomp", "m1m2"], [31, 1, 1, "c._fmpz_poly_CRT_ui_precomp", "m2"], [31, 1, 1, "c._fmpz_poly_CRT_ui_precomp", "m2inv"], [31, 1, 1, "c._fmpz_poly_CRT_ui_precomp", "poly1"], [31, 1, 1, "c._fmpz_poly_CRT_ui_precomp", "poly2"], [31, 1, 1, "c._fmpz_poly_CRT_ui_precomp", "res"], [31, 1, 1, "c._fmpz_poly_CRT_ui_precomp", "sign"]], "_fmpz_poly_add": [[31, 1, 1, "c._fmpz_poly_add", "len1"], [31, 1, 1, "c._fmpz_poly_add", "len2"], [31, 1, 1, "c._fmpz_poly_add", "poly1"], [31, 1, 1, "c._fmpz_poly_add", "poly2"], [31, 1, 1, "c._fmpz_poly_add", "res"]], "_fmpz_poly_bit_pack": [[31, 1, 1, "c._fmpz_poly_bit_pack", "arr"], [31, 1, 1, "c._fmpz_poly_bit_pack", "bit_size"], [31, 1, 1, "c._fmpz_poly_bit_pack", "len"], [31, 1, 1, "c._fmpz_poly_bit_pack", "negate"], [31, 1, 1, "c._fmpz_poly_bit_pack", "poly"]], "_fmpz_poly_bit_unpack": [[31, 1, 1, "c._fmpz_poly_bit_unpack", "arr"], [31, 1, 1, "c._fmpz_poly_bit_unpack", "bit_size"], [31, 1, 1, "c._fmpz_poly_bit_unpack", "len"], [31, 1, 1, "c._fmpz_poly_bit_unpack", "negate"], [31, 1, 1, "c._fmpz_poly_bit_unpack", "poly"]], "_fmpz_poly_bit_unpack_unsigned": [[31, 1, 1, "c._fmpz_poly_bit_unpack_unsigned", "arr"], [31, 1, 1, "c._fmpz_poly_bit_unpack_unsigned", "bit_size"], [31, 1, 1, "c._fmpz_poly_bit_unpack_unsigned", "len"], [31, 1, 1, "c._fmpz_poly_bit_unpack_unsigned", "poly"]], "_fmpz_poly_bound_roots": [[31, 1, 1, "c._fmpz_poly_bound_roots", "bound"], [31, 1, 1, "c._fmpz_poly_bound_roots", "len"], [31, 1, 1, "c._fmpz_poly_bound_roots", "poly"]], "_fmpz_poly_chebyshev_t": [[31, 1, 1, "c._fmpz_poly_chebyshev_t", "coeffs"], [31, 1, 1, "c._fmpz_poly_chebyshev_t", "n"]], "_fmpz_poly_chebyshev_u": [[31, 1, 1, "c._fmpz_poly_chebyshev_u", "coeffs"], [31, 1, 1, "c._fmpz_poly_chebyshev_u", "n"]], "_fmpz_poly_compose": [[31, 1, 1, "c._fmpz_poly_compose", "len1"], [31, 1, 1, "c._fmpz_poly_compose", "len2"], [31, 1, 1, "c._fmpz_poly_compose", "poly1"], [31, 1, 1, "c._fmpz_poly_compose", "poly2"], [31, 1, 1, "c._fmpz_poly_compose", "res"]], "_fmpz_poly_compose_divconquer": [[31, 1, 1, "c._fmpz_poly_compose_divconquer", "len1"], [31, 1, 1, "c._fmpz_poly_compose_divconquer", "len2"], [31, 1, 1, "c._fmpz_poly_compose_divconquer", "poly1"], [31, 1, 1, "c._fmpz_poly_compose_divconquer", "poly2"], [31, 1, 1, "c._fmpz_poly_compose_divconquer", "res"]], "_fmpz_poly_compose_horner": [[31, 1, 1, "c._fmpz_poly_compose_horner", "len1"], [31, 1, 1, "c._fmpz_poly_compose_horner", "len2"], [31, 1, 1, "c._fmpz_poly_compose_horner", "poly1"], [31, 1, 1, "c._fmpz_poly_compose_horner", "poly2"], [31, 1, 1, "c._fmpz_poly_compose_horner", "res"]], "_fmpz_poly_compose_series": [[31, 1, 1, "c._fmpz_poly_compose_series", "len1"], [31, 1, 1, "c._fmpz_poly_compose_series", "len2"], [31, 1, 1, "c._fmpz_poly_compose_series", "n"], [31, 1, 1, "c._fmpz_poly_compose_series", "poly1"], [31, 1, 1, "c._fmpz_poly_compose_series", "poly2"], [31, 1, 1, "c._fmpz_poly_compose_series", "res"]], "_fmpz_poly_compose_series_brent_kung": [[31, 1, 1, "c._fmpz_poly_compose_series_brent_kung", "len1"], [31, 1, 1, "c._fmpz_poly_compose_series_brent_kung", "len2"], [31, 1, 1, "c._fmpz_poly_compose_series_brent_kung", "n"], [31, 1, 1, "c._fmpz_poly_compose_series_brent_kung", "poly1"], [31, 1, 1, "c._fmpz_poly_compose_series_brent_kung", "poly2"], [31, 1, 1, "c._fmpz_poly_compose_series_brent_kung", "res"]], "_fmpz_poly_compose_series_horner": [[31, 1, 1, "c._fmpz_poly_compose_series_horner", "len1"], [31, 1, 1, "c._fmpz_poly_compose_series_horner", "len2"], [31, 1, 1, "c._fmpz_poly_compose_series_horner", "n"], [31, 1, 1, "c._fmpz_poly_compose_series_horner", "poly1"], [31, 1, 1, "c._fmpz_poly_compose_series_horner", "poly2"], [31, 1, 1, "c._fmpz_poly_compose_series_horner", "res"]], "_fmpz_poly_content": [[31, 1, 1, "c._fmpz_poly_content", "len"], [31, 1, 1, "c._fmpz_poly_content", "poly"], [31, 1, 1, "c._fmpz_poly_content", "res"]], "_fmpz_poly_cos_minpoly": [[31, 1, 1, "c._fmpz_poly_cos_minpoly", "coeffs"], [31, 1, 1, "c._fmpz_poly_cos_minpoly", "n"]], "_fmpz_poly_cyclotomic": [[31, 1, 1, "c._fmpz_poly_cyclotomic", "a"], [31, 1, 1, "c._fmpz_poly_cyclotomic", "factors"], [31, 1, 1, "c._fmpz_poly_cyclotomic", "n"], [31, 1, 1, "c._fmpz_poly_cyclotomic", "num_factors"], [31, 1, 1, "c._fmpz_poly_cyclotomic", "phi"]], "_fmpz_poly_derivative": [[31, 1, 1, "c._fmpz_poly_derivative", "len"], [31, 1, 1, "c._fmpz_poly_derivative", "poly"], [31, 1, 1, "c._fmpz_poly_derivative", "rpoly"]], "_fmpz_poly_discriminant": [[31, 1, 1, "c._fmpz_poly_discriminant", "len"], [31, 1, 1, "c._fmpz_poly_discriminant", "poly"], [31, 1, 1, "c._fmpz_poly_discriminant", "res"]], "_fmpz_poly_div": [[31, 1, 1, "c._fmpz_poly_div", "A"], [31, 1, 1, "c._fmpz_poly_div", "B"], [31, 1, 1, "c._fmpz_poly_div", "Q"], [31, 1, 1, "c._fmpz_poly_div", "exact"], [31, 1, 1, "c._fmpz_poly_div", "lenA"], [31, 1, 1, "c._fmpz_poly_div", "lenB"]], "_fmpz_poly_div_basecase": [[31, 1, 1, "c._fmpz_poly_div_basecase", "A"], [31, 1, 1, "c._fmpz_poly_div_basecase", "B"], [31, 1, 1, "c._fmpz_poly_div_basecase", "Q"], [31, 1, 1, "c._fmpz_poly_div_basecase", "R"], [31, 1, 1, "c._fmpz_poly_div_basecase", "exact"], [31, 1, 1, "c._fmpz_poly_div_basecase", "lenA"], [31, 1, 1, "c._fmpz_poly_div_basecase", "lenB"]], "_fmpz_poly_div_divconquer": [[31, 1, 1, "c._fmpz_poly_div_divconquer", "A"], [31, 1, 1, "c._fmpz_poly_div_divconquer", "B"], [31, 1, 1, "c._fmpz_poly_div_divconquer", "Q"], [31, 1, 1, "c._fmpz_poly_div_divconquer", "exact"], [31, 1, 1, "c._fmpz_poly_div_divconquer", "lenA"], [31, 1, 1, "c._fmpz_poly_div_divconquer", "lenB"]], "_fmpz_poly_div_divconquer_recursive": [[31, 1, 1, "c._fmpz_poly_div_divconquer_recursive", "A"], [31, 1, 1, "c._fmpz_poly_div_divconquer_recursive", "B"], [31, 1, 1, "c._fmpz_poly_div_divconquer_recursive", "Q"], [31, 1, 1, "c._fmpz_poly_div_divconquer_recursive", "exact"], [31, 1, 1, "c._fmpz_poly_div_divconquer_recursive", "lenB"], [31, 1, 1, "c._fmpz_poly_div_divconquer_recursive", "temp"]], "_fmpz_poly_div_preinv": [[31, 1, 1, "c._fmpz_poly_div_preinv", "A"], [31, 1, 1, "c._fmpz_poly_div_preinv", "B"], [31, 1, 1, "c._fmpz_poly_div_preinv", "B_inv"], [31, 1, 1, "c._fmpz_poly_div_preinv", "Q"], [31, 1, 1, "c._fmpz_poly_div_preinv", "len1"], [31, 1, 1, "c._fmpz_poly_div_preinv", "len2"]], "_fmpz_poly_div_root": [[31, 1, 1, "c._fmpz_poly_div_root", "A"], [31, 1, 1, "c._fmpz_poly_div_root", "Q"], [31, 1, 1, "c._fmpz_poly_div_root", "c"], [31, 1, 1, "c._fmpz_poly_div_root", "len"]], "_fmpz_poly_div_series": [[31, 1, 1, "c._fmpz_poly_div_series", "A"], [31, 1, 1, "c._fmpz_poly_div_series", "Alen"], [31, 1, 1, "c._fmpz_poly_div_series", "B"], [31, 1, 1, "c._fmpz_poly_div_series", "Blen"], [31, 1, 1, "c._fmpz_poly_div_series", "Q"], [31, 1, 1, "c._fmpz_poly_div_series", "n"]], "_fmpz_poly_div_series_basecase": [[31, 1, 1, "c._fmpz_poly_div_series_basecase", "A"], [31, 1, 1, "c._fmpz_poly_div_series_basecase", "Alen"], [31, 1, 1, "c._fmpz_poly_div_series_basecase", "B"], [31, 1, 1, "c._fmpz_poly_div_series_basecase", "Blen"], [31, 1, 1, "c._fmpz_poly_div_series_basecase", "Q"], [31, 1, 1, "c._fmpz_poly_div_series_basecase", "n"]], "_fmpz_poly_div_series_divconquer": [[31, 1, 1, "c._fmpz_poly_div_series_divconquer", "A"], [31, 1, 1, "c._fmpz_poly_div_series_divconquer", "Alen"], [31, 1, 1, "c._fmpz_poly_div_series_divconquer", "B"], [31, 1, 1, "c._fmpz_poly_div_series_divconquer", "Blen"], [31, 1, 1, "c._fmpz_poly_div_series_divconquer", "Q"], [31, 1, 1, "c._fmpz_poly_div_series_divconquer", "n"]], "_fmpz_poly_divides": [[31, 1, 1, "c._fmpz_poly_divides", "A"], [31, 1, 1, "c._fmpz_poly_divides", "B"], [31, 1, 1, "c._fmpz_poly_divides", "Q"], [31, 1, 1, "c._fmpz_poly_divides", "lenA"], [31, 1, 1, "c._fmpz_poly_divides", "lenB"]], "_fmpz_poly_divrem": [[31, 1, 1, "c._fmpz_poly_divrem", "A"], [31, 1, 1, "c._fmpz_poly_divrem", "B"], [31, 1, 1, "c._fmpz_poly_divrem", "Q"], [31, 1, 1, "c._fmpz_poly_divrem", "R"], [31, 1, 1, "c._fmpz_poly_divrem", "exact"], [31, 1, 1, "c._fmpz_poly_divrem", "lenA"], [31, 1, 1, "c._fmpz_poly_divrem", "lenB"]], "_fmpz_poly_divrem_basecase": [[31, 1, 1, "c._fmpz_poly_divrem_basecase", "A"], [31, 1, 1, "c._fmpz_poly_divrem_basecase", "B"], [31, 1, 1, "c._fmpz_poly_divrem_basecase", "Q"], [31, 1, 1, "c._fmpz_poly_divrem_basecase", "R"], [31, 1, 1, "c._fmpz_poly_divrem_basecase", "exact"], [31, 1, 1, "c._fmpz_poly_divrem_basecase", "lenA"], [31, 1, 1, "c._fmpz_poly_divrem_basecase", "lenB"]], "_fmpz_poly_divrem_divconquer": [[31, 1, 1, "c._fmpz_poly_divrem_divconquer", "A"], [31, 1, 1, "c._fmpz_poly_divrem_divconquer", "B"], [31, 1, 1, "c._fmpz_poly_divrem_divconquer", "Q"], [31, 1, 1, "c._fmpz_poly_divrem_divconquer", "R"], [31, 1, 1, "c._fmpz_poly_divrem_divconquer", "exact"], [31, 1, 1, "c._fmpz_poly_divrem_divconquer", "lenA"], [31, 1, 1, "c._fmpz_poly_divrem_divconquer", "lenB"]], "_fmpz_poly_divrem_divconquer_recursive": [[31, 1, 1, "c._fmpz_poly_divrem_divconquer_recursive", "A"], [31, 1, 1, "c._fmpz_poly_divrem_divconquer_recursive", "B"], [31, 1, 1, "c._fmpz_poly_divrem_divconquer_recursive", "BQ"], [31, 1, 1, "c._fmpz_poly_divrem_divconquer_recursive", "Q"], [31, 1, 1, "c._fmpz_poly_divrem_divconquer_recursive", "W"], [31, 1, 1, "c._fmpz_poly_divrem_divconquer_recursive", "exact"], [31, 1, 1, "c._fmpz_poly_divrem_divconquer_recursive", "lenB"]], "_fmpz_poly_divrem_preinv": [[31, 1, 1, "c._fmpz_poly_divrem_preinv", "A"], [31, 1, 1, "c._fmpz_poly_divrem_preinv", "B"], [31, 1, 1, "c._fmpz_poly_divrem_preinv", "B_inv"], [31, 1, 1, "c._fmpz_poly_divrem_preinv", "Q"], [31, 1, 1, "c._fmpz_poly_divrem_preinv", "len1"], [31, 1, 1, "c._fmpz_poly_divrem_preinv", "len2"]], "_fmpz_poly_divremlow_divconquer_recursive": [[31, 1, 1, "c._fmpz_poly_divremlow_divconquer_recursive", "A"], [31, 1, 1, "c._fmpz_poly_divremlow_divconquer_recursive", "B"], [31, 1, 1, "c._fmpz_poly_divremlow_divconquer_recursive", "BQ"], [31, 1, 1, "c._fmpz_poly_divremlow_divconquer_recursive", "Q"], [31, 1, 1, "c._fmpz_poly_divremlow_divconquer_recursive", "exact"], [31, 1, 1, "c._fmpz_poly_divremlow_divconquer_recursive", "lenB"]], "_fmpz_poly_eta_qexp": [[31, 1, 1, "c._fmpz_poly_eta_qexp", "f"], [31, 1, 1, "c._fmpz_poly_eta_qexp", "len"], [31, 1, 1, "c._fmpz_poly_eta_qexp", "r"]], "_fmpz_poly_evaluate_divconquer_fmpq": [[31, 1, 1, "c._fmpz_poly_evaluate_divconquer_fmpq", "aden"], [31, 1, 1, "c._fmpz_poly_evaluate_divconquer_fmpq", "anum"], [31, 1, 1, "c._fmpz_poly_evaluate_divconquer_fmpq", "f"], [31, 1, 1, "c._fmpz_poly_evaluate_divconquer_fmpq", "len"], [31, 1, 1, "c._fmpz_poly_evaluate_divconquer_fmpq", "rden"], [31, 1, 1, "c._fmpz_poly_evaluate_divconquer_fmpq", "rnum"]], "_fmpz_poly_evaluate_divconquer_fmpz": [[31, 1, 1, "c._fmpz_poly_evaluate_divconquer_fmpz", "a"], [31, 1, 1, "c._fmpz_poly_evaluate_divconquer_fmpz", "len"], [31, 1, 1, "c._fmpz_poly_evaluate_divconquer_fmpz", "poly"], [31, 1, 1, "c._fmpz_poly_evaluate_divconquer_fmpz", "res"]], "_fmpz_poly_evaluate_fmpq": [[31, 1, 1, "c._fmpz_poly_evaluate_fmpq", "aden"], [31, 1, 1, "c._fmpz_poly_evaluate_fmpq", "anum"], [31, 1, 1, "c._fmpz_poly_evaluate_fmpq", "f"], [31, 1, 1, "c._fmpz_poly_evaluate_fmpq", "len"], [31, 1, 1, "c._fmpz_poly_evaluate_fmpq", "rden"], [31, 1, 1, "c._fmpz_poly_evaluate_fmpq", "rnum"]], "_fmpz_poly_evaluate_fmpz": [[31, 1, 1, "c._fmpz_poly_evaluate_fmpz", "a"], [31, 1, 1, "c._fmpz_poly_evaluate_fmpz", "f"], [31, 1, 1, "c._fmpz_poly_evaluate_fmpz", "len"], [31, 1, 1, "c._fmpz_poly_evaluate_fmpz", "res"]], "_fmpz_poly_evaluate_horner_d": [[31, 1, 1, "c._fmpz_poly_evaluate_horner_d", "d"], [31, 1, 1, "c._fmpz_poly_evaluate_horner_d", "n"], [31, 1, 1, "c._fmpz_poly_evaluate_horner_d", "poly"]], "_fmpz_poly_evaluate_horner_d_2exp": [[31, 1, 1, "c._fmpz_poly_evaluate_horner_d_2exp", "d"], [31, 1, 1, "c._fmpz_poly_evaluate_horner_d_2exp", "exp"], [31, 1, 1, "c._fmpz_poly_evaluate_horner_d_2exp", "n"], [31, 1, 1, "c._fmpz_poly_evaluate_horner_d_2exp", "poly"]], "_fmpz_poly_evaluate_horner_d_2exp2": [[31, 1, 1, "c._fmpz_poly_evaluate_horner_d_2exp2", "d"], [31, 1, 1, "c._fmpz_poly_evaluate_horner_d_2exp2", "dexp"], [31, 1, 1, "c._fmpz_poly_evaluate_horner_d_2exp2", "exp"], [31, 1, 1, "c._fmpz_poly_evaluate_horner_d_2exp2", "n"], [31, 1, 1, "c._fmpz_poly_evaluate_horner_d_2exp2", "poly"]], "_fmpz_poly_evaluate_horner_fmpq": [[31, 1, 1, "c._fmpz_poly_evaluate_horner_fmpq", "aden"], [31, 1, 1, "c._fmpz_poly_evaluate_horner_fmpq", "anum"], [31, 1, 1, "c._fmpz_poly_evaluate_horner_fmpq", "f"], [31, 1, 1, "c._fmpz_poly_evaluate_horner_fmpq", "len"], [31, 1, 1, "c._fmpz_poly_evaluate_horner_fmpq", "rden"], [31, 1, 1, "c._fmpz_poly_evaluate_horner_fmpq", "rnum"]], "_fmpz_poly_evaluate_horner_fmpz": [[31, 1, 1, "c._fmpz_poly_evaluate_horner_fmpz", "a"], [31, 1, 1, "c._fmpz_poly_evaluate_horner_fmpz", "f"], [31, 1, 1, "c._fmpz_poly_evaluate_horner_fmpz", "len"], [31, 1, 1, "c._fmpz_poly_evaluate_horner_fmpz", "res"]], "_fmpz_poly_evaluate_mod": [[31, 1, 1, "c._fmpz_poly_evaluate_mod", "a"], [31, 1, 1, "c._fmpz_poly_evaluate_mod", "len"], [31, 1, 1, "c._fmpz_poly_evaluate_mod", "n"], [31, 1, 1, "c._fmpz_poly_evaluate_mod", "ninv"], [31, 1, 1, "c._fmpz_poly_evaluate_mod", "poly"]], "_fmpz_poly_factor_cubic": [[32, 1, 1, "c._fmpz_poly_factor_cubic", "exp"], [32, 1, 1, "c._fmpz_poly_factor_cubic", "f"], [32, 1, 1, "c._fmpz_poly_factor_cubic", "fac"]], "_fmpz_poly_factor_quadratic": [[32, 1, 1, "c._fmpz_poly_factor_quadratic", "exp"], [32, 1, 1, "c._fmpz_poly_factor_quadratic", "f"], [32, 1, 1, "c._fmpz_poly_factor_quadratic", "fac"]], "_fmpz_poly_factor_zassenhaus": [[32, 1, 1, "c._fmpz_poly_factor_zassenhaus", "cutoff"], [32, 1, 1, "c._fmpz_poly_factor_zassenhaus", "exp"], [32, 1, 1, "c._fmpz_poly_factor_zassenhaus", "f"], [32, 1, 1, "c._fmpz_poly_factor_zassenhaus", "final_fac"], [32, 1, 1, "c._fmpz_poly_factor_zassenhaus", "use_van_hoeij"]], "_fmpz_poly_fibonacci": [[31, 1, 1, "c._fmpz_poly_fibonacci", "coeffs"], [31, 1, 1, "c._fmpz_poly_fibonacci", "n"]], "_fmpz_poly_fprint": [[31, 1, 1, "c._fmpz_poly_fprint", "file"], [31, 1, 1, "c._fmpz_poly_fprint", "len"], [31, 1, 1, "c._fmpz_poly_fprint", "poly"]], "_fmpz_poly_fprint_pretty": [[31, 1, 1, "c._fmpz_poly_fprint_pretty", "file"], [31, 1, 1, "c._fmpz_poly_fprint_pretty", "len"], [31, 1, 1, "c._fmpz_poly_fprint_pretty", "poly"], [31, 1, 1, "c._fmpz_poly_fprint_pretty", "x"]], "_fmpz_poly_gcd": [[31, 1, 1, "c._fmpz_poly_gcd", "len1"], [31, 1, 1, "c._fmpz_poly_gcd", "len2"], [31, 1, 1, "c._fmpz_poly_gcd", "poly1"], [31, 1, 1, "c._fmpz_poly_gcd", "poly2"], [31, 1, 1, "c._fmpz_poly_gcd", "res"]], "_fmpz_poly_gcd_heuristic": [[31, 1, 1, "c._fmpz_poly_gcd_heuristic", "len1"], [31, 1, 1, "c._fmpz_poly_gcd_heuristic", "len2"], [31, 1, 1, "c._fmpz_poly_gcd_heuristic", "poly1"], [31, 1, 1, "c._fmpz_poly_gcd_heuristic", "poly2"], [31, 1, 1, "c._fmpz_poly_gcd_heuristic", "res"]], "_fmpz_poly_gcd_modular": [[31, 1, 1, "c._fmpz_poly_gcd_modular", "len1"], [31, 1, 1, "c._fmpz_poly_gcd_modular", "len2"], [31, 1, 1, "c._fmpz_poly_gcd_modular", "poly1"], [31, 1, 1, "c._fmpz_poly_gcd_modular", "poly2"], [31, 1, 1, "c._fmpz_poly_gcd_modular", "res"]], "_fmpz_poly_gcd_subresultant": [[31, 1, 1, "c._fmpz_poly_gcd_subresultant", "len1"], [31, 1, 1, "c._fmpz_poly_gcd_subresultant", "len2"], [31, 1, 1, "c._fmpz_poly_gcd_subresultant", "poly1"], [31, 1, 1, "c._fmpz_poly_gcd_subresultant", "poly2"], [31, 1, 1, "c._fmpz_poly_gcd_subresultant", "res"]], "_fmpz_poly_get_str": [[31, 1, 1, "c._fmpz_poly_get_str", "len"], [31, 1, 1, "c._fmpz_poly_get_str", "poly"]], "_fmpz_poly_get_str_pretty": [[31, 1, 1, "c._fmpz_poly_get_str_pretty", "len"], [31, 1, 1, "c._fmpz_poly_get_str_pretty", "poly"], [31, 1, 1, "c._fmpz_poly_get_str_pretty", "x"]], "_fmpz_poly_hensel_continue_lift": [[31, 1, 1, "c._fmpz_poly_hensel_continue_lift", "N"], [31, 1, 1, "c._fmpz_poly_hensel_continue_lift", "curr"], [31, 1, 1, "c._fmpz_poly_hensel_continue_lift", "f"], [31, 1, 1, "c._fmpz_poly_hensel_continue_lift", "lifted_fac"], [31, 1, 1, "c._fmpz_poly_hensel_continue_lift", "link"], [31, 1, 1, "c._fmpz_poly_hensel_continue_lift", "p"], [31, 1, 1, "c._fmpz_poly_hensel_continue_lift", "prev"], [31, 1, 1, "c._fmpz_poly_hensel_continue_lift", "v"], [31, 1, 1, "c._fmpz_poly_hensel_continue_lift", "w"]], "_fmpz_poly_hensel_start_lift": [[31, 1, 1, "c._fmpz_poly_hensel_start_lift", "N"], [31, 1, 1, "c._fmpz_poly_hensel_start_lift", "f"], [31, 1, 1, "c._fmpz_poly_hensel_start_lift", "lifted_fac"], [31, 1, 1, "c._fmpz_poly_hensel_start_lift", "link"], [31, 1, 1, "c._fmpz_poly_hensel_start_lift", "local_fac"], [31, 1, 1, "c._fmpz_poly_hensel_start_lift", "v"], [31, 1, 1, "c._fmpz_poly_hensel_start_lift", "w"]], "_fmpz_poly_hermite_h": [[31, 1, 1, "c._fmpz_poly_hermite_h", "coeffs"], [31, 1, 1, "c._fmpz_poly_hermite_h", "n"]], "_fmpz_poly_hermite_he": [[31, 1, 1, "c._fmpz_poly_hermite_he", "coeffs"], [31, 1, 1, "c._fmpz_poly_hermite_he", "n"]], "_fmpz_poly_inv_series": [[31, 1, 1, "c._fmpz_poly_inv_series", "Q"], [31, 1, 1, "c._fmpz_poly_inv_series", "Qinv"], [31, 1, 1, "c._fmpz_poly_inv_series", "n"]], "_fmpz_poly_inv_series_basecase": [[31, 1, 1, "c._fmpz_poly_inv_series_basecase", "Q"], [31, 1, 1, "c._fmpz_poly_inv_series_basecase", "Qinv"], [31, 1, 1, "c._fmpz_poly_inv_series_basecase", "Qlen"], [31, 1, 1, "c._fmpz_poly_inv_series_basecase", "n"]], "_fmpz_poly_inv_series_newton": [[31, 1, 1, "c._fmpz_poly_inv_series_newton", "Q"], [31, 1, 1, "c._fmpz_poly_inv_series_newton", "Qinv"], [31, 1, 1, "c._fmpz_poly_inv_series_newton", "n"]], "_fmpz_poly_is_cyclotomic": [[31, 1, 1, "c._fmpz_poly_is_cyclotomic", "len"], [31, 1, 1, "c._fmpz_poly_is_cyclotomic", "poly"]], "_fmpz_poly_is_squarefree": [[31, 1, 1, "c._fmpz_poly_is_squarefree", "len"], [31, 1, 1, "c._fmpz_poly_is_squarefree", "poly"]], "_fmpz_poly_lcm": [[31, 1, 1, "c._fmpz_poly_lcm", "len1"], [31, 1, 1, "c._fmpz_poly_lcm", "len2"], [31, 1, 1, "c._fmpz_poly_lcm", "poly1"], [31, 1, 1, "c._fmpz_poly_lcm", "poly2"], [31, 1, 1, "c._fmpz_poly_lcm", "res"]], "_fmpz_poly_legendre_pt": [[31, 1, 1, "c._fmpz_poly_legendre_pt", "coeffs"], [31, 1, 1, "c._fmpz_poly_legendre_pt", "n"]], "_fmpz_poly_monomial_to_newton": [[31, 1, 1, "c._fmpz_poly_monomial_to_newton", "n"], [31, 1, 1, "c._fmpz_poly_monomial_to_newton", "poly"], [31, 1, 1, "c._fmpz_poly_monomial_to_newton", "roots"]], "_fmpz_poly_mul": [[31, 1, 1, "c._fmpz_poly_mul", "len1"], [31, 1, 1, "c._fmpz_poly_mul", "len2"], [31, 1, 1, "c._fmpz_poly_mul", "poly1"], [31, 1, 1, "c._fmpz_poly_mul", "poly2"], [31, 1, 1, "c._fmpz_poly_mul", "res"]], "_fmpz_poly_mul_KS": [[31, 1, 1, "c._fmpz_poly_mul_KS", "len1"], [31, 1, 1, "c._fmpz_poly_mul_KS", "len2"], [31, 1, 1, "c._fmpz_poly_mul_KS", "poly1"], [31, 1, 1, "c._fmpz_poly_mul_KS", "poly2"], [31, 1, 1, "c._fmpz_poly_mul_KS", "res"]], "_fmpz_poly_mul_SS": [[31, 1, 1, "c._fmpz_poly_mul_SS", "input1"], [31, 1, 1, "c._fmpz_poly_mul_SS", "input2"], [31, 1, 1, "c._fmpz_poly_mul_SS", "length1"], [31, 1, 1, "c._fmpz_poly_mul_SS", "length2"], [31, 1, 1, "c._fmpz_poly_mul_SS", "output"]], "_fmpz_poly_mul_classical": [[31, 1, 1, "c._fmpz_poly_mul_classical", "len1"], [31, 1, 1, "c._fmpz_poly_mul_classical", "len2"], [31, 1, 1, "c._fmpz_poly_mul_classical", "poly1"], [31, 1, 1, "c._fmpz_poly_mul_classical", "poly2"], [31, 1, 1, "c._fmpz_poly_mul_classical", "res"]], "_fmpz_poly_mul_karatsuba": [[31, 1, 1, "c._fmpz_poly_mul_karatsuba", "len1"], [31, 1, 1, "c._fmpz_poly_mul_karatsuba", "len2"], [31, 1, 1, "c._fmpz_poly_mul_karatsuba", "poly1"], [31, 1, 1, "c._fmpz_poly_mul_karatsuba", "poly2"], [31, 1, 1, "c._fmpz_poly_mul_karatsuba", "res"]], "_fmpz_poly_mulhigh": [[31, 1, 1, "c._fmpz_poly_mulhigh", "len1"], [31, 1, 1, "c._fmpz_poly_mulhigh", "len2"], [31, 1, 1, "c._fmpz_poly_mulhigh", "poly1"], [31, 1, 1, "c._fmpz_poly_mulhigh", "poly2"], [31, 1, 1, "c._fmpz_poly_mulhigh", "res"], [31, 1, 1, "c._fmpz_poly_mulhigh", "start"]], "_fmpz_poly_mulhigh_classical": [[31, 1, 1, "c._fmpz_poly_mulhigh_classical", "len1"], [31, 1, 1, "c._fmpz_poly_mulhigh_classical", "len2"], [31, 1, 1, "c._fmpz_poly_mulhigh_classical", "poly1"], [31, 1, 1, "c._fmpz_poly_mulhigh_classical", "poly2"], [31, 1, 1, "c._fmpz_poly_mulhigh_classical", "res"], [31, 1, 1, "c._fmpz_poly_mulhigh_classical", "start"]], "_fmpz_poly_mulhigh_karatsuba_n": [[31, 1, 1, "c._fmpz_poly_mulhigh_karatsuba_n", "len"], [31, 1, 1, "c._fmpz_poly_mulhigh_karatsuba_n", "poly1"], [31, 1, 1, "c._fmpz_poly_mulhigh_karatsuba_n", "poly2"], [31, 1, 1, "c._fmpz_poly_mulhigh_karatsuba_n", "res"]], "_fmpz_poly_mullow": [[31, 1, 1, "c._fmpz_poly_mullow", "len1"], [31, 1, 1, "c._fmpz_poly_mullow", "len2"], [31, 1, 1, "c._fmpz_poly_mullow", "n"], [31, 1, 1, "c._fmpz_poly_mullow", "poly1"], [31, 1, 1, "c._fmpz_poly_mullow", "poly2"], [31, 1, 1, "c._fmpz_poly_mullow", "res"]], "_fmpz_poly_mullow_KS": [[31, 1, 1, "c._fmpz_poly_mullow_KS", "len1"], [31, 1, 1, "c._fmpz_poly_mullow_KS", "len2"], [31, 1, 1, "c._fmpz_poly_mullow_KS", "n"], [31, 1, 1, "c._fmpz_poly_mullow_KS", "poly1"], [31, 1, 1, "c._fmpz_poly_mullow_KS", "poly2"], [31, 1, 1, "c._fmpz_poly_mullow_KS", "res"]], "_fmpz_poly_mullow_SS": [[31, 1, 1, "c._fmpz_poly_mullow_SS", "input1"], [31, 1, 1, "c._fmpz_poly_mullow_SS", "input2"], [31, 1, 1, "c._fmpz_poly_mullow_SS", "length1"], [31, 1, 1, "c._fmpz_poly_mullow_SS", "length2"], [31, 1, 1, "c._fmpz_poly_mullow_SS", "n"], [31, 1, 1, "c._fmpz_poly_mullow_SS", "output"]], "_fmpz_poly_mullow_SS_precache": [[31, 1, 1, "c._fmpz_poly_mullow_SS_precache", "input1"], [31, 1, 1, "c._fmpz_poly_mullow_SS_precache", "len1"], [31, 1, 1, "c._fmpz_poly_mullow_SS_precache", "output"], [31, 1, 1, "c._fmpz_poly_mullow_SS_precache", "pre"], [31, 1, 1, "c._fmpz_poly_mullow_SS_precache", "trunc"]], "_fmpz_poly_mullow_classical": [[31, 1, 1, "c._fmpz_poly_mullow_classical", "len1"], [31, 1, 1, "c._fmpz_poly_mullow_classical", "len2"], [31, 1, 1, "c._fmpz_poly_mullow_classical", "n"], [31, 1, 1, "c._fmpz_poly_mullow_classical", "poly1"], [31, 1, 1, "c._fmpz_poly_mullow_classical", "poly2"], [31, 1, 1, "c._fmpz_poly_mullow_classical", "res"]], "_fmpz_poly_mullow_karatsuba_n": [[31, 1, 1, "c._fmpz_poly_mullow_karatsuba_n", "n"], [31, 1, 1, "c._fmpz_poly_mullow_karatsuba_n", "poly1"], [31, 1, 1, "c._fmpz_poly_mullow_karatsuba_n", "poly2"], [31, 1, 1, "c._fmpz_poly_mullow_karatsuba_n", "res"]], "_fmpz_poly_mulmid_classical": [[31, 1, 1, "c._fmpz_poly_mulmid_classical", "len1"], [31, 1, 1, "c._fmpz_poly_mulmid_classical", "len2"], [31, 1, 1, "c._fmpz_poly_mulmid_classical", "poly1"], [31, 1, 1, "c._fmpz_poly_mulmid_classical", "poly2"], [31, 1, 1, "c._fmpz_poly_mulmid_classical", "res"]], "_fmpz_poly_newton_to_monomial": [[31, 1, 1, "c._fmpz_poly_newton_to_monomial", "n"], [31, 1, 1, "c._fmpz_poly_newton_to_monomial", "poly"], [31, 1, 1, "c._fmpz_poly_newton_to_monomial", "roots"]], "_fmpz_poly_normalise": [[31, 1, 1, "c._fmpz_poly_normalise", "poly"]], "_fmpz_poly_nth_derivative": [[31, 1, 1, "c._fmpz_poly_nth_derivative", "len"], [31, 1, 1, "c._fmpz_poly_nth_derivative", "n"], [31, 1, 1, "c._fmpz_poly_nth_derivative", "poly"], [31, 1, 1, "c._fmpz_poly_nth_derivative", "rpoly"]], "_fmpz_poly_num_real_roots": [[31, 1, 1, "c._fmpz_poly_num_real_roots", "len"], [31, 1, 1, "c._fmpz_poly_num_real_roots", "pol"]], "_fmpz_poly_num_real_roots_sturm": [[31, 1, 1, "c._fmpz_poly_num_real_roots_sturm", "len"], [31, 1, 1, "c._fmpz_poly_num_real_roots_sturm", "n_neg"], [31, 1, 1, "c._fmpz_poly_num_real_roots_sturm", "n_pos"], [31, 1, 1, "c._fmpz_poly_num_real_roots_sturm", "pol"]], "_fmpz_poly_pow": [[31, 1, 1, "c._fmpz_poly_pow", "e"], [31, 1, 1, "c._fmpz_poly_pow", "len"], [31, 1, 1, "c._fmpz_poly_pow", "poly"], [31, 1, 1, "c._fmpz_poly_pow", "res"]], "_fmpz_poly_pow_addchains": [[31, 1, 1, "c._fmpz_poly_pow_addchains", "a"], [31, 1, 1, "c._fmpz_poly_pow_addchains", "len"], [31, 1, 1, "c._fmpz_poly_pow_addchains", "n"], [31, 1, 1, "c._fmpz_poly_pow_addchains", "poly"], [31, 1, 1, "c._fmpz_poly_pow_addchains", "res"]], "_fmpz_poly_pow_binexp": [[31, 1, 1, "c._fmpz_poly_pow_binexp", "e"], [31, 1, 1, "c._fmpz_poly_pow_binexp", "len"], [31, 1, 1, "c._fmpz_poly_pow_binexp", "poly"], [31, 1, 1, "c._fmpz_poly_pow_binexp", "res"]], "_fmpz_poly_pow_binomial": [[31, 1, 1, "c._fmpz_poly_pow_binomial", "e"], [31, 1, 1, "c._fmpz_poly_pow_binomial", "poly"], [31, 1, 1, "c._fmpz_poly_pow_binomial", "res"]], "_fmpz_poly_pow_multinomial": [[31, 1, 1, "c._fmpz_poly_pow_multinomial", "e"], [31, 1, 1, "c._fmpz_poly_pow_multinomial", "len"], [31, 1, 1, "c._fmpz_poly_pow_multinomial", "poly"], [31, 1, 1, "c._fmpz_poly_pow_multinomial", "res"]], "_fmpz_poly_pow_small": [[31, 1, 1, "c._fmpz_poly_pow_small", "e"], [31, 1, 1, "c._fmpz_poly_pow_small", "len"], [31, 1, 1, "c._fmpz_poly_pow_small", "poly"], [31, 1, 1, "c._fmpz_poly_pow_small", "res"]], "_fmpz_poly_pow_trunc": [[31, 1, 1, "c._fmpz_poly_pow_trunc", "e"], [31, 1, 1, "c._fmpz_poly_pow_trunc", "n"], [31, 1, 1, "c._fmpz_poly_pow_trunc", "poly"], [31, 1, 1, "c._fmpz_poly_pow_trunc", "res"]], "_fmpz_poly_power_sums_naive": [[31, 1, 1, "c._fmpz_poly_power_sums_naive", "len"], [31, 1, 1, "c._fmpz_poly_power_sums_naive", "n"], [31, 1, 1, "c._fmpz_poly_power_sums_naive", "poly"], [31, 1, 1, "c._fmpz_poly_power_sums_naive", "res"]], "_fmpz_poly_power_sums_to_poly": [[31, 1, 1, "c._fmpz_poly_power_sums_to_poly", "len"], [31, 1, 1, "c._fmpz_poly_power_sums_to_poly", "poly"], [31, 1, 1, "c._fmpz_poly_power_sums_to_poly", "res"]], "_fmpz_poly_powers_clear": [[31, 1, 1, "c._fmpz_poly_powers_clear", "len"], [31, 1, 1, "c._fmpz_poly_powers_clear", "powers"]], "_fmpz_poly_powers_precompute": [[31, 1, 1, "c._fmpz_poly_powers_precompute", "B"], [31, 1, 1, "c._fmpz_poly_powers_precompute", "len"]], "_fmpz_poly_preinvert": [[31, 1, 1, "c._fmpz_poly_preinvert", "B"], [31, 1, 1, "c._fmpz_poly_preinvert", "B_inv"], [31, 1, 1, "c._fmpz_poly_preinvert", "n"]], "_fmpz_poly_primitive_part": [[31, 1, 1, "c._fmpz_poly_primitive_part", "len"], [31, 1, 1, "c._fmpz_poly_primitive_part", "poly"], [31, 1, 1, "c._fmpz_poly_primitive_part", "res"]], "_fmpz_poly_print": [[31, 1, 1, "c._fmpz_poly_print", "len"], [31, 1, 1, "c._fmpz_poly_print", "poly"]], "_fmpz_poly_print_pretty": [[31, 1, 1, "c._fmpz_poly_print_pretty", "len"], [31, 1, 1, "c._fmpz_poly_print_pretty", "poly"], [31, 1, 1, "c._fmpz_poly_print_pretty", "x"]], "_fmpz_poly_product_roots_fmpq_vec": [[31, 1, 1, "c._fmpz_poly_product_roots_fmpq_vec", "n"], [31, 1, 1, "c._fmpz_poly_product_roots_fmpq_vec", "poly"], [31, 1, 1, "c._fmpz_poly_product_roots_fmpq_vec", "xs"]], "_fmpz_poly_product_roots_fmpz_vec": [[31, 1, 1, "c._fmpz_poly_product_roots_fmpz_vec", "n"], [31, 1, 1, "c._fmpz_poly_product_roots_fmpz_vec", "poly"], [31, 1, 1, "c._fmpz_poly_product_roots_fmpz_vec", "xs"]], "_fmpz_poly_pseudo_div": [[31, 1, 1, "c._fmpz_poly_pseudo_div", "A"], [31, 1, 1, "c._fmpz_poly_pseudo_div", "B"], [31, 1, 1, "c._fmpz_poly_pseudo_div", "Q"], [31, 1, 1, "c._fmpz_poly_pseudo_div", "d"], [31, 1, 1, "c._fmpz_poly_pseudo_div", "inv"], [31, 1, 1, "c._fmpz_poly_pseudo_div", "lenA"], [31, 1, 1, "c._fmpz_poly_pseudo_div", "lenB"]], "_fmpz_poly_pseudo_divrem": [[31, 1, 1, "c._fmpz_poly_pseudo_divrem", "A"], [31, 1, 1, "c._fmpz_poly_pseudo_divrem", "B"], [31, 1, 1, "c._fmpz_poly_pseudo_divrem", "Q"], [31, 1, 1, "c._fmpz_poly_pseudo_divrem", "R"], [31, 1, 1, "c._fmpz_poly_pseudo_divrem", "d"], [31, 1, 1, "c._fmpz_poly_pseudo_divrem", "inv"], [31, 1, 1, "c._fmpz_poly_pseudo_divrem", "lenA"], [31, 1, 1, "c._fmpz_poly_pseudo_divrem", "lenB"]], "_fmpz_poly_pseudo_divrem_basecase": [[31, 1, 1, "c._fmpz_poly_pseudo_divrem_basecase", "A"], [31, 1, 1, "c._fmpz_poly_pseudo_divrem_basecase", "B"], [31, 1, 1, "c._fmpz_poly_pseudo_divrem_basecase", "Q"], [31, 1, 1, "c._fmpz_poly_pseudo_divrem_basecase", "R"], [31, 1, 1, "c._fmpz_poly_pseudo_divrem_basecase", "d"], [31, 1, 1, "c._fmpz_poly_pseudo_divrem_basecase", "inv"], [31, 1, 1, "c._fmpz_poly_pseudo_divrem_basecase", "lenA"], [31, 1, 1, "c._fmpz_poly_pseudo_divrem_basecase", "lenB"]], "_fmpz_poly_pseudo_divrem_cohen": [[31, 1, 1, "c._fmpz_poly_pseudo_divrem_cohen", "A"], [31, 1, 1, "c._fmpz_poly_pseudo_divrem_cohen", "B"], [31, 1, 1, "c._fmpz_poly_pseudo_divrem_cohen", "Q"], [31, 1, 1, "c._fmpz_poly_pseudo_divrem_cohen", "R"], [31, 1, 1, "c._fmpz_poly_pseudo_divrem_cohen", "lenA"], [31, 1, 1, "c._fmpz_poly_pseudo_divrem_cohen", "lenB"]], "_fmpz_poly_pseudo_divrem_divconquer": [[31, 1, 1, "c._fmpz_poly_pseudo_divrem_divconquer", "A"], [31, 1, 1, "c._fmpz_poly_pseudo_divrem_divconquer", "B"], [31, 1, 1, "c._fmpz_poly_pseudo_divrem_divconquer", "Q"], [31, 1, 1, "c._fmpz_poly_pseudo_divrem_divconquer", "R"], [31, 1, 1, "c._fmpz_poly_pseudo_divrem_divconquer", "d"], [31, 1, 1, "c._fmpz_poly_pseudo_divrem_divconquer", "inv"], [31, 1, 1, "c._fmpz_poly_pseudo_divrem_divconquer", "lenA"], [31, 1, 1, "c._fmpz_poly_pseudo_divrem_divconquer", "lenB"]], "_fmpz_poly_pseudo_rem": [[31, 1, 1, "c._fmpz_poly_pseudo_rem", "A"], [31, 1, 1, "c._fmpz_poly_pseudo_rem", "B"], [31, 1, 1, "c._fmpz_poly_pseudo_rem", "R"], [31, 1, 1, "c._fmpz_poly_pseudo_rem", "d"], [31, 1, 1, "c._fmpz_poly_pseudo_rem", "inv"], [31, 1, 1, "c._fmpz_poly_pseudo_rem", "lenA"], [31, 1, 1, "c._fmpz_poly_pseudo_rem", "lenB"]], "_fmpz_poly_pseudo_rem_cohen": [[31, 1, 1, "c._fmpz_poly_pseudo_rem_cohen", "A"], [31, 1, 1, "c._fmpz_poly_pseudo_rem_cohen", "B"], [31, 1, 1, "c._fmpz_poly_pseudo_rem_cohen", "R"], [31, 1, 1, "c._fmpz_poly_pseudo_rem_cohen", "lenA"], [31, 1, 1, "c._fmpz_poly_pseudo_rem_cohen", "lenB"]], "_fmpz_poly_reduce": [[86, 1, 1, "c._fmpz_poly_reduce", "R"], [86, 1, 1, "c._fmpz_poly_reduce", "a"], [86, 1, 1, "c._fmpz_poly_reduce", "j"], [86, 1, 1, "c._fmpz_poly_reduce", "len"], [86, 1, 1, "c._fmpz_poly_reduce", "lenR"]], "_fmpz_poly_rem": [[31, 1, 1, "c._fmpz_poly_rem", "A"], [31, 1, 1, "c._fmpz_poly_rem", "B"], [31, 1, 1, "c._fmpz_poly_rem", "R"], [31, 1, 1, "c._fmpz_poly_rem", "lenA"], [31, 1, 1, "c._fmpz_poly_rem", "lenB"]], "_fmpz_poly_rem_basecase": [[31, 1, 1, "c._fmpz_poly_rem_basecase", "A"], [31, 1, 1, "c._fmpz_poly_rem_basecase", "B"], [31, 1, 1, "c._fmpz_poly_rem_basecase", "R"], [31, 1, 1, "c._fmpz_poly_rem_basecase", "lenA"], [31, 1, 1, "c._fmpz_poly_rem_basecase", "lenB"]], "_fmpz_poly_rem_powers_precomp": [[31, 1, 1, "c._fmpz_poly_rem_powers_precomp", "A"], [31, 1, 1, "c._fmpz_poly_rem_powers_precomp", "B"], [31, 1, 1, "c._fmpz_poly_rem_powers_precomp", "m"], [31, 1, 1, "c._fmpz_poly_rem_powers_precomp", "n"], [31, 1, 1, "c._fmpz_poly_rem_powers_precomp", "powers"]], "_fmpz_poly_remove_content_2exp": [[31, 1, 1, "c._fmpz_poly_remove_content_2exp", "len"], [31, 1, 1, "c._fmpz_poly_remove_content_2exp", "pol"]], "_fmpz_poly_resultant": [[31, 1, 1, "c._fmpz_poly_resultant", "len1"], [31, 1, 1, "c._fmpz_poly_resultant", "len2"], [31, 1, 1, "c._fmpz_poly_resultant", "poly1"], [31, 1, 1, "c._fmpz_poly_resultant", "poly2"], [31, 1, 1, "c._fmpz_poly_resultant", "res"]], "_fmpz_poly_resultant_euclidean": [[31, 1, 1, "c._fmpz_poly_resultant_euclidean", "len1"], [31, 1, 1, "c._fmpz_poly_resultant_euclidean", "len2"], [31, 1, 1, "c._fmpz_poly_resultant_euclidean", "poly1"], [31, 1, 1, "c._fmpz_poly_resultant_euclidean", "poly2"], [31, 1, 1, "c._fmpz_poly_resultant_euclidean", "res"]], "_fmpz_poly_resultant_modular": [[31, 1, 1, "c._fmpz_poly_resultant_modular", "len1"], [31, 1, 1, "c._fmpz_poly_resultant_modular", "len2"], [31, 1, 1, "c._fmpz_poly_resultant_modular", "poly1"], [31, 1, 1, "c._fmpz_poly_resultant_modular", "poly2"], [31, 1, 1, "c._fmpz_poly_resultant_modular", "res"]], "_fmpz_poly_reverse": [[31, 1, 1, "c._fmpz_poly_reverse", "len"], [31, 1, 1, "c._fmpz_poly_reverse", "n"], [31, 1, 1, "c._fmpz_poly_reverse", "poly"], [31, 1, 1, "c._fmpz_poly_reverse", "res"]], "_fmpz_poly_revert_series": [[31, 1, 1, "c._fmpz_poly_revert_series", "Q"], [31, 1, 1, "c._fmpz_poly_revert_series", "Qinv"], [31, 1, 1, "c._fmpz_poly_revert_series", "Qlen"], [31, 1, 1, "c._fmpz_poly_revert_series", "n"]], "_fmpz_poly_revert_series_lagrange": [[31, 1, 1, "c._fmpz_poly_revert_series_lagrange", "Q"], [31, 1, 1, "c._fmpz_poly_revert_series_lagrange", "Qinv"], [31, 1, 1, "c._fmpz_poly_revert_series_lagrange", "Qlen"], [31, 1, 1, "c._fmpz_poly_revert_series_lagrange", "n"]], "_fmpz_poly_revert_series_lagrange_fast": [[31, 1, 1, "c._fmpz_poly_revert_series_lagrange_fast", "Q"], [31, 1, 1, "c._fmpz_poly_revert_series_lagrange_fast", "Qinv"], [31, 1, 1, "c._fmpz_poly_revert_series_lagrange_fast", "Qlen"], [31, 1, 1, "c._fmpz_poly_revert_series_lagrange_fast", "n"]], "_fmpz_poly_revert_series_newton": [[31, 1, 1, "c._fmpz_poly_revert_series_newton", "Q"], [31, 1, 1, "c._fmpz_poly_revert_series_newton", "Qinv"], [31, 1, 1, "c._fmpz_poly_revert_series_newton", "Qlen"], [31, 1, 1, "c._fmpz_poly_revert_series_newton", "n"]], "_fmpz_poly_scale_2exp": [[31, 1, 1, "c._fmpz_poly_scale_2exp", "k"], [31, 1, 1, "c._fmpz_poly_scale_2exp", "len"], [31, 1, 1, "c._fmpz_poly_scale_2exp", "pol"]], "_fmpz_poly_set_length": [[31, 1, 1, "c._fmpz_poly_set_length", "newlen"], [31, 1, 1, "c._fmpz_poly_set_length", "poly"]], "_fmpz_poly_set_str": [[31, 1, 1, "c._fmpz_poly_set_str", "poly"], [31, 1, 1, "c._fmpz_poly_set_str", "str"]], "_fmpz_poly_shift_left": [[31, 1, 1, "c._fmpz_poly_shift_left", "len"], [31, 1, 1, "c._fmpz_poly_shift_left", "n"], [31, 1, 1, "c._fmpz_poly_shift_left", "poly"], [31, 1, 1, "c._fmpz_poly_shift_left", "res"]], "_fmpz_poly_shift_right": [[31, 1, 1, "c._fmpz_poly_shift_right", "len"], [31, 1, 1, "c._fmpz_poly_shift_right", "n"], [31, 1, 1, "c._fmpz_poly_shift_right", "poly"], [31, 1, 1, "c._fmpz_poly_shift_right", "res"]], "_fmpz_poly_signature": [[31, 1, 1, "c._fmpz_poly_signature", "len"], [31, 1, 1, "c._fmpz_poly_signature", "poly"], [31, 1, 1, "c._fmpz_poly_signature", "r1"], [31, 1, 1, "c._fmpz_poly_signature", "r2"]], "_fmpz_poly_sqr": [[31, 1, 1, "c._fmpz_poly_sqr", "len"], [31, 1, 1, "c._fmpz_poly_sqr", "op"], [31, 1, 1, "c._fmpz_poly_sqr", "rop"]], "_fmpz_poly_sqr_KS": [[31, 1, 1, "c._fmpz_poly_sqr_KS", "len"], [31, 1, 1, "c._fmpz_poly_sqr_KS", "op"], [31, 1, 1, "c._fmpz_poly_sqr_KS", "rop"]], "_fmpz_poly_sqr_classical": [[31, 1, 1, "c._fmpz_poly_sqr_classical", "len"], [31, 1, 1, "c._fmpz_poly_sqr_classical", "op"], [31, 1, 1, "c._fmpz_poly_sqr_classical", "rop"]], "_fmpz_poly_sqr_karatsuba": [[31, 1, 1, "c._fmpz_poly_sqr_karatsuba", "len"], [31, 1, 1, "c._fmpz_poly_sqr_karatsuba", "op"], [31, 1, 1, "c._fmpz_poly_sqr_karatsuba", "rop"]], "_fmpz_poly_sqrlow": [[31, 1, 1, "c._fmpz_poly_sqrlow", "len"], [31, 1, 1, "c._fmpz_poly_sqrlow", "n"], [31, 1, 1, "c._fmpz_poly_sqrlow", "poly"], [31, 1, 1, "c._fmpz_poly_sqrlow", "res"]], "_fmpz_poly_sqrlow_KS": [[31, 1, 1, "c._fmpz_poly_sqrlow_KS", "len"], [31, 1, 1, "c._fmpz_poly_sqrlow_KS", "n"], [31, 1, 1, "c._fmpz_poly_sqrlow_KS", "poly"], [31, 1, 1, "c._fmpz_poly_sqrlow_KS", "res"]], "_fmpz_poly_sqrlow_classical": [[31, 1, 1, "c._fmpz_poly_sqrlow_classical", "len"], [31, 1, 1, "c._fmpz_poly_sqrlow_classical", "n"], [31, 1, 1, "c._fmpz_poly_sqrlow_classical", "poly"], [31, 1, 1, "c._fmpz_poly_sqrlow_classical", "res"]], "_fmpz_poly_sqrlow_karatsuba_n": [[31, 1, 1, "c._fmpz_poly_sqrlow_karatsuba_n", "n"], [31, 1, 1, "c._fmpz_poly_sqrlow_karatsuba_n", "poly"], [31, 1, 1, "c._fmpz_poly_sqrlow_karatsuba_n", "res"]], "_fmpz_poly_sqrt": [[31, 1, 1, "c._fmpz_poly_sqrt", "len"], [31, 1, 1, "c._fmpz_poly_sqrt", "poly"], [31, 1, 1, "c._fmpz_poly_sqrt", "res"]], "_fmpz_poly_sqrt_KS": [[31, 1, 1, "c._fmpz_poly_sqrt_KS", "len"], [31, 1, 1, "c._fmpz_poly_sqrt_KS", "poly"], [31, 1, 1, "c._fmpz_poly_sqrt_KS", "res"]], "_fmpz_poly_sqrt_classical": [[31, 1, 1, "c._fmpz_poly_sqrt_classical", "exact"], [31, 1, 1, "c._fmpz_poly_sqrt_classical", "len"], [31, 1, 1, "c._fmpz_poly_sqrt_classical", "poly"], [31, 1, 1, "c._fmpz_poly_sqrt_classical", "res"]], "_fmpz_poly_sqrt_divconquer": [[31, 1, 1, "c._fmpz_poly_sqrt_divconquer", "exact"], [31, 1, 1, "c._fmpz_poly_sqrt_divconquer", "len"], [31, 1, 1, "c._fmpz_poly_sqrt_divconquer", "poly"], [31, 1, 1, "c._fmpz_poly_sqrt_divconquer", "res"]], "_fmpz_poly_sqrt_series": [[31, 1, 1, "c._fmpz_poly_sqrt_series", "len"], [31, 1, 1, "c._fmpz_poly_sqrt_series", "n"], [31, 1, 1, "c._fmpz_poly_sqrt_series", "poly"], [31, 1, 1, "c._fmpz_poly_sqrt_series", "res"]], "_fmpz_poly_sqrtrem_classical": [[31, 1, 1, "c._fmpz_poly_sqrtrem_classical", "len"], [31, 1, 1, "c._fmpz_poly_sqrtrem_classical", "poly"], [31, 1, 1, "c._fmpz_poly_sqrtrem_classical", "r"], [31, 1, 1, "c._fmpz_poly_sqrtrem_classical", "res"]], "_fmpz_poly_sqrtrem_divconquer": [[31, 1, 1, "c._fmpz_poly_sqrtrem_divconquer", "len"], [31, 1, 1, "c._fmpz_poly_sqrtrem_divconquer", "poly"], [31, 1, 1, "c._fmpz_poly_sqrtrem_divconquer", "r"], [31, 1, 1, "c._fmpz_poly_sqrtrem_divconquer", "res"], [31, 1, 1, "c._fmpz_poly_sqrtrem_divconquer", "temp"]], "_fmpz_poly_sub": [[31, 1, 1, "c._fmpz_poly_sub", "len1"], [31, 1, 1, "c._fmpz_poly_sub", "len2"], [31, 1, 1, "c._fmpz_poly_sub", "poly1"], [31, 1, 1, "c._fmpz_poly_sub", "poly2"], [31, 1, 1, "c._fmpz_poly_sub", "res"]], "_fmpz_poly_swinnerton_dyer": [[31, 1, 1, "c._fmpz_poly_swinnerton_dyer", "coeffs"], [31, 1, 1, "c._fmpz_poly_swinnerton_dyer", "n"]], "_fmpz_poly_taylor_shift": [[31, 1, 1, "c._fmpz_poly_taylor_shift", "c"], [31, 1, 1, "c._fmpz_poly_taylor_shift", "n"], [31, 1, 1, "c._fmpz_poly_taylor_shift", "poly"]], "_fmpz_poly_taylor_shift_divconquer": [[31, 1, 1, "c._fmpz_poly_taylor_shift_divconquer", "c"], [31, 1, 1, "c._fmpz_poly_taylor_shift_divconquer", "n"], [31, 1, 1, "c._fmpz_poly_taylor_shift_divconquer", "poly"]], "_fmpz_poly_taylor_shift_horner": [[31, 1, 1, "c._fmpz_poly_taylor_shift_horner", "c"], [31, 1, 1, "c._fmpz_poly_taylor_shift_horner", "n"], [31, 1, 1, "c._fmpz_poly_taylor_shift_horner", "poly"]], "_fmpz_poly_taylor_shift_multi_mod": [[31, 1, 1, "c._fmpz_poly_taylor_shift_multi_mod", "c"], [31, 1, 1, "c._fmpz_poly_taylor_shift_multi_mod", "n"], [31, 1, 1, "c._fmpz_poly_taylor_shift_multi_mod", "poly"]], "_fmpz_poly_theta_qexp": [[31, 1, 1, "c._fmpz_poly_theta_qexp", "f"], [31, 1, 1, "c._fmpz_poly_theta_qexp", "len"], [31, 1, 1, "c._fmpz_poly_theta_qexp", "r"]], "_fmpz_poly_xgcd": [[31, 1, 1, "c._fmpz_poly_xgcd", "f"], [31, 1, 1, "c._fmpz_poly_xgcd", "g"], [31, 1, 1, "c._fmpz_poly_xgcd", "len1"], [31, 1, 1, "c._fmpz_poly_xgcd", "len2"], [31, 1, 1, "c._fmpz_poly_xgcd", "r"], [31, 1, 1, "c._fmpz_poly_xgcd", "s"], [31, 1, 1, "c._fmpz_poly_xgcd", "t"]], "_fmpz_poly_xgcd_modular": [[31, 1, 1, "c._fmpz_poly_xgcd_modular", "f"], [31, 1, 1, "c._fmpz_poly_xgcd_modular", "g"], [31, 1, 1, "c._fmpz_poly_xgcd_modular", "len1"], [31, 1, 1, "c._fmpz_poly_xgcd_modular", "len2"], [31, 1, 1, "c._fmpz_poly_xgcd_modular", "r"], [31, 1, 1, "c._fmpz_poly_xgcd_modular", "s"], [31, 1, 1, "c._fmpz_poly_xgcd_modular", "t"]], "_fmpz_promote": [[18, 1, 1, "c._fmpz_promote", "f"]], "_fmpz_promote_val": [[18, 1, 1, "c._fmpz_promote_val", "f"]], "_fmpz_remove": [[18, 1, 1, "c._fmpz_remove", "f"], [18, 1, 1, "c._fmpz_remove", "finv"], [18, 1, 1, "c._fmpz_remove", "x"]], "_fmpz_rfac_ui": [[18, 1, 1, "c._fmpz_rfac_ui", "a"], [18, 1, 1, "c._fmpz_rfac_ui", "b"], [18, 1, 1, "c._fmpz_rfac_ui", "r"], [18, 1, 1, "c._fmpz_rfac_ui", "x"]], "_fmpz_vec_add": [[35, 1, 1, "c._fmpz_vec_add", "len2"], [35, 1, 1, "c._fmpz_vec_add", "res"], [35, 1, 1, "c._fmpz_vec_add", "vec1"], [35, 1, 1, "c._fmpz_vec_add", "vec2"]], "_fmpz_vec_clear": [[35, 1, 1, "c._fmpz_vec_clear", "len"], [35, 1, 1, "c._fmpz_vec_clear", "vec"]], "_fmpz_vec_content": [[35, 1, 1, "c._fmpz_vec_content", "len"], [35, 1, 1, "c._fmpz_vec_content", "res"], [35, 1, 1, "c._fmpz_vec_content", "vec"]], "_fmpz_vec_content_chained": [[35, 1, 1, "c._fmpz_vec_content_chained", "input"], [35, 1, 1, "c._fmpz_vec_content_chained", "len"], [35, 1, 1, "c._fmpz_vec_content_chained", "res"], [35, 1, 1, "c._fmpz_vec_content_chained", "vec"]], "_fmpz_vec_dot": [[28, 1, 1, "c._fmpz_vec_dot", "A"], [28, 1, 1, "c._fmpz_vec_dot", "B"], [28, 1, 1, "c._fmpz_vec_dot", "ctx"], [28, 1, 1, "c._fmpz_vec_dot", "d"], [28, 1, 1, "c._fmpz_vec_dot", "len"], [35, 1, 1, "c._fmpz_vec_dot", "len2"], [35, 1, 1, "c._fmpz_vec_dot", "res"], [35, 1, 1, "c._fmpz_vec_dot", "vec1"], [35, 1, 1, "c._fmpz_vec_dot", "vec2"]], "_fmpz_vec_dot_ptr": [[35, 1, 1, "c._fmpz_vec_dot_ptr", "len"], [35, 1, 1, "c._fmpz_vec_dot_ptr", "offset"], [35, 1, 1, "c._fmpz_vec_dot_ptr", "res"], [35, 1, 1, "c._fmpz_vec_dot_ptr", "vec1"], [35, 1, 1, "c._fmpz_vec_dot_ptr", "vec2"]], "_fmpz_vec_dot_rev": [[28, 1, 1, "c._fmpz_vec_dot_rev", "A"], [28, 1, 1, "c._fmpz_vec_dot_rev", "B"], [28, 1, 1, "c._fmpz_vec_dot_rev", "ctx"], [28, 1, 1, "c._fmpz_vec_dot_rev", "d"], [28, 1, 1, "c._fmpz_vec_dot_rev", "len"]], "_fmpz_vec_equal": [[35, 1, 1, "c._fmpz_vec_equal", "len"], [35, 1, 1, "c._fmpz_vec_equal", "vec1"], [35, 1, 1, "c._fmpz_vec_equal", "vec2"]], "_fmpz_vec_fprint": [[35, 1, 1, "c._fmpz_vec_fprint", "file"], [35, 1, 1, "c._fmpz_vec_fprint", "len"], [35, 1, 1, "c._fmpz_vec_fprint", "vec"]], "_fmpz_vec_fread": [[35, 1, 1, "c._fmpz_vec_fread", "file"], [35, 1, 1, "c._fmpz_vec_fread", "len"], [35, 1, 1, "c._fmpz_vec_fread", "vec"]], "_fmpz_vec_get_d_vec_2exp": [[35, 1, 1, "c._fmpz_vec_get_d_vec_2exp", "appv"], [35, 1, 1, "c._fmpz_vec_get_d_vec_2exp", "len"], [35, 1, 1, "c._fmpz_vec_get_d_vec_2exp", "vec"]], "_fmpz_vec_get_fft": [[35, 1, 1, "c._fmpz_vec_get_fft", "coeffs_f"], [35, 1, 1, "c._fmpz_vec_get_fft", "coeffs_m"], [35, 1, 1, "c._fmpz_vec_get_fft", "l"], [35, 1, 1, "c._fmpz_vec_get_fft", "length"]], "_fmpz_vec_get_mpf_vec": [[35, 1, 1, "c._fmpz_vec_get_mpf_vec", "appv"], [35, 1, 1, "c._fmpz_vec_get_mpf_vec", "len"], [35, 1, 1, "c._fmpz_vec_get_mpf_vec", "vec"]], "_fmpz_vec_get_nmod_vec": [[35, 1, 1, "c._fmpz_vec_get_nmod_vec", "len"], [35, 1, 1, "c._fmpz_vec_get_nmod_vec", "mod"], [35, 1, 1, "c._fmpz_vec_get_nmod_vec", "poly"], [35, 1, 1, "c._fmpz_vec_get_nmod_vec", "res"]], "_fmpz_vec_height": [[35, 1, 1, "c._fmpz_vec_height", "height"], [35, 1, 1, "c._fmpz_vec_height", "len"], [35, 1, 1, "c._fmpz_vec_height", "vec"]], "_fmpz_vec_height_index": [[35, 1, 1, "c._fmpz_vec_height_index", "len"], [35, 1, 1, "c._fmpz_vec_height_index", "vec"]], "_fmpz_vec_init": [[35, 1, 1, "c._fmpz_vec_init", "len"]], "_fmpz_vec_is_zero": [[35, 1, 1, "c._fmpz_vec_is_zero", "len"], [35, 1, 1, "c._fmpz_vec_is_zero", "vec"]], "_fmpz_vec_lcm": [[35, 1, 1, "c._fmpz_vec_lcm", "len"], [35, 1, 1, "c._fmpz_vec_lcm", "res"], [35, 1, 1, "c._fmpz_vec_lcm", "vec"]], "_fmpz_vec_max": [[35, 1, 1, "c._fmpz_vec_max", "len"], [35, 1, 1, "c._fmpz_vec_max", "vec1"], [35, 1, 1, "c._fmpz_vec_max", "vec2"], [35, 1, 1, "c._fmpz_vec_max", "vec3"]], "_fmpz_vec_max_bits": [[35, 1, 1, "c._fmpz_vec_max_bits", "len"], [35, 1, 1, "c._fmpz_vec_max_bits", "vec"]], "_fmpz_vec_max_bits_ref": [[35, 1, 1, "c._fmpz_vec_max_bits_ref", "len"], [35, 1, 1, "c._fmpz_vec_max_bits_ref", "vec"]], "_fmpz_vec_max_inplace": [[35, 1, 1, "c._fmpz_vec_max_inplace", "len"], [35, 1, 1, "c._fmpz_vec_max_inplace", "vec1"], [35, 1, 1, "c._fmpz_vec_max_inplace", "vec2"]], "_fmpz_vec_max_limbs": [[35, 1, 1, "c._fmpz_vec_max_limbs", "len"], [35, 1, 1, "c._fmpz_vec_max_limbs", "vec"]], "_fmpz_vec_neg": [[35, 1, 1, "c._fmpz_vec_neg", "len2"], [35, 1, 1, "c._fmpz_vec_neg", "vec1"], [35, 1, 1, "c._fmpz_vec_neg", "vec2"]], "_fmpz_vec_print": [[35, 1, 1, "c._fmpz_vec_print", "len"], [35, 1, 1, "c._fmpz_vec_print", "vec"]], "_fmpz_vec_prod": [[35, 1, 1, "c._fmpz_vec_prod", "len"], [35, 1, 1, "c._fmpz_vec_prod", "res"], [35, 1, 1, "c._fmpz_vec_prod", "vec"]], "_fmpz_vec_randtest": [[35, 1, 1, "c._fmpz_vec_randtest", "bits"], [35, 1, 1, "c._fmpz_vec_randtest", "f"], [35, 1, 1, "c._fmpz_vec_randtest", "len"], [35, 1, 1, "c._fmpz_vec_randtest", "state"]], "_fmpz_vec_randtest_unsigned": [[35, 1, 1, "c._fmpz_vec_randtest_unsigned", "bits"], [35, 1, 1, "c._fmpz_vec_randtest_unsigned", "f"], [35, 1, 1, "c._fmpz_vec_randtest_unsigned", "len"], [35, 1, 1, "c._fmpz_vec_randtest_unsigned", "state"]], "_fmpz_vec_read": [[35, 1, 1, "c._fmpz_vec_read", "len"], [35, 1, 1, "c._fmpz_vec_read", "vec"]], "_fmpz_vec_scalar_abs": [[35, 1, 1, "c._fmpz_vec_scalar_abs", "len2"], [35, 1, 1, "c._fmpz_vec_scalar_abs", "vec1"], [35, 1, 1, "c._fmpz_vec_scalar_abs", "vec2"]], "_fmpz_vec_scalar_addmul_fmpz": [[35, 1, 1, "c._fmpz_vec_scalar_addmul_fmpz", "c"], [35, 1, 1, "c._fmpz_vec_scalar_addmul_fmpz", "len2"], [35, 1, 1, "c._fmpz_vec_scalar_addmul_fmpz", "vec1"], [35, 1, 1, "c._fmpz_vec_scalar_addmul_fmpz", "vec2"]], "_fmpz_vec_scalar_addmul_si": [[35, 1, 1, "c._fmpz_vec_scalar_addmul_si", "c"], [35, 1, 1, "c._fmpz_vec_scalar_addmul_si", "len2"], [35, 1, 1, "c._fmpz_vec_scalar_addmul_si", "vec1"], [35, 1, 1, "c._fmpz_vec_scalar_addmul_si", "vec2"]], "_fmpz_vec_scalar_addmul_si_2exp": [[35, 1, 1, "c._fmpz_vec_scalar_addmul_si_2exp", "c"], [35, 1, 1, "c._fmpz_vec_scalar_addmul_si_2exp", "exp"], [35, 1, 1, "c._fmpz_vec_scalar_addmul_si_2exp", "len2"], [35, 1, 1, "c._fmpz_vec_scalar_addmul_si_2exp", "vec1"], [35, 1, 1, "c._fmpz_vec_scalar_addmul_si_2exp", "vec2"]], "_fmpz_vec_scalar_addmul_ui": [[35, 1, 1, "c._fmpz_vec_scalar_addmul_ui", "c"], [35, 1, 1, "c._fmpz_vec_scalar_addmul_ui", "len2"], [35, 1, 1, "c._fmpz_vec_scalar_addmul_ui", "vec1"], [35, 1, 1, "c._fmpz_vec_scalar_addmul_ui", "vec2"]], "_fmpz_vec_scalar_divexact_fmpz": [[35, 1, 1, "c._fmpz_vec_scalar_divexact_fmpz", "len2"], [35, 1, 1, "c._fmpz_vec_scalar_divexact_fmpz", "vec1"], [35, 1, 1, "c._fmpz_vec_scalar_divexact_fmpz", "vec2"], [35, 1, 1, "c._fmpz_vec_scalar_divexact_fmpz", "x"]], "_fmpz_vec_scalar_divexact_si": [[35, 1, 1, "c._fmpz_vec_scalar_divexact_si", "c"], [35, 1, 1, "c._fmpz_vec_scalar_divexact_si", "len2"], [35, 1, 1, "c._fmpz_vec_scalar_divexact_si", "vec1"], [35, 1, 1, "c._fmpz_vec_scalar_divexact_si", "vec2"]], "_fmpz_vec_scalar_divexact_ui": [[35, 1, 1, "c._fmpz_vec_scalar_divexact_ui", "c"], [35, 1, 1, "c._fmpz_vec_scalar_divexact_ui", "len2"], [35, 1, 1, "c._fmpz_vec_scalar_divexact_ui", "vec1"], [35, 1, 1, "c._fmpz_vec_scalar_divexact_ui", "vec2"]], "_fmpz_vec_scalar_fdiv_q_2exp": [[35, 1, 1, "c._fmpz_vec_scalar_fdiv_q_2exp", "exp"], [35, 1, 1, "c._fmpz_vec_scalar_fdiv_q_2exp", "len2"], [35, 1, 1, "c._fmpz_vec_scalar_fdiv_q_2exp", "vec1"], [35, 1, 1, "c._fmpz_vec_scalar_fdiv_q_2exp", "vec2"]], "_fmpz_vec_scalar_fdiv_q_fmpz": [[35, 1, 1, "c._fmpz_vec_scalar_fdiv_q_fmpz", "c"], [35, 1, 1, "c._fmpz_vec_scalar_fdiv_q_fmpz", "len2"], [35, 1, 1, "c._fmpz_vec_scalar_fdiv_q_fmpz", "vec1"], [35, 1, 1, "c._fmpz_vec_scalar_fdiv_q_fmpz", "vec2"]], "_fmpz_vec_scalar_fdiv_q_si": [[35, 1, 1, "c._fmpz_vec_scalar_fdiv_q_si", "c"], [35, 1, 1, "c._fmpz_vec_scalar_fdiv_q_si", "len2"], [35, 1, 1, "c._fmpz_vec_scalar_fdiv_q_si", "vec1"], [35, 1, 1, "c._fmpz_vec_scalar_fdiv_q_si", "vec2"]], "_fmpz_vec_scalar_fdiv_q_ui": [[35, 1, 1, "c._fmpz_vec_scalar_fdiv_q_ui", "c"], [35, 1, 1, "c._fmpz_vec_scalar_fdiv_q_ui", "len2"], [35, 1, 1, "c._fmpz_vec_scalar_fdiv_q_ui", "vec1"], [35, 1, 1, "c._fmpz_vec_scalar_fdiv_q_ui", "vec2"]], "_fmpz_vec_scalar_fdiv_r_2exp": [[35, 1, 1, "c._fmpz_vec_scalar_fdiv_r_2exp", "exp"], [35, 1, 1, "c._fmpz_vec_scalar_fdiv_r_2exp", "len2"], [35, 1, 1, "c._fmpz_vec_scalar_fdiv_r_2exp", "vec1"], [35, 1, 1, "c._fmpz_vec_scalar_fdiv_r_2exp", "vec2"]], "_fmpz_vec_scalar_mod_fmpz": [[35, 1, 1, "c._fmpz_vec_scalar_mod_fmpz", "len"], [35, 1, 1, "c._fmpz_vec_scalar_mod_fmpz", "p"], [35, 1, 1, "c._fmpz_vec_scalar_mod_fmpz", "res"], [35, 1, 1, "c._fmpz_vec_scalar_mod_fmpz", "vec"]], "_fmpz_vec_scalar_mul_2exp": [[35, 1, 1, "c._fmpz_vec_scalar_mul_2exp", "exp"], [35, 1, 1, "c._fmpz_vec_scalar_mul_2exp", "len2"], [35, 1, 1, "c._fmpz_vec_scalar_mul_2exp", "vec1"], [35, 1, 1, "c._fmpz_vec_scalar_mul_2exp", "vec2"]], "_fmpz_vec_scalar_mul_fmpz": [[35, 1, 1, "c._fmpz_vec_scalar_mul_fmpz", "len2"], [35, 1, 1, "c._fmpz_vec_scalar_mul_fmpz", "vec1"], [35, 1, 1, "c._fmpz_vec_scalar_mul_fmpz", "vec2"], [35, 1, 1, "c._fmpz_vec_scalar_mul_fmpz", "x"]], "_fmpz_vec_scalar_mul_si": [[35, 1, 1, "c._fmpz_vec_scalar_mul_si", "c"], [35, 1, 1, "c._fmpz_vec_scalar_mul_si", "len2"], [35, 1, 1, "c._fmpz_vec_scalar_mul_si", "vec1"], [35, 1, 1, "c._fmpz_vec_scalar_mul_si", "vec2"]], "_fmpz_vec_scalar_mul_ui": [[35, 1, 1, "c._fmpz_vec_scalar_mul_ui", "c"], [35, 1, 1, "c._fmpz_vec_scalar_mul_ui", "len2"], [35, 1, 1, "c._fmpz_vec_scalar_mul_ui", "vec1"], [35, 1, 1, "c._fmpz_vec_scalar_mul_ui", "vec2"]], "_fmpz_vec_scalar_smod_fmpz": [[35, 1, 1, "c._fmpz_vec_scalar_smod_fmpz", "len"], [35, 1, 1, "c._fmpz_vec_scalar_smod_fmpz", "p"], [35, 1, 1, "c._fmpz_vec_scalar_smod_fmpz", "res"], [35, 1, 1, "c._fmpz_vec_scalar_smod_fmpz", "vec"]], "_fmpz_vec_scalar_submul_fmpz": [[35, 1, 1, "c._fmpz_vec_scalar_submul_fmpz", "len2"], [35, 1, 1, "c._fmpz_vec_scalar_submul_fmpz", "vec1"], [35, 1, 1, "c._fmpz_vec_scalar_submul_fmpz", "vec2"], [35, 1, 1, "c._fmpz_vec_scalar_submul_fmpz", "x"]], "_fmpz_vec_scalar_submul_si": [[35, 1, 1, "c._fmpz_vec_scalar_submul_si", "c"], [35, 1, 1, "c._fmpz_vec_scalar_submul_si", "len2"], [35, 1, 1, "c._fmpz_vec_scalar_submul_si", "vec1"], [35, 1, 1, "c._fmpz_vec_scalar_submul_si", "vec2"]], "_fmpz_vec_scalar_submul_si_2exp": [[35, 1, 1, "c._fmpz_vec_scalar_submul_si_2exp", "c"], [35, 1, 1, "c._fmpz_vec_scalar_submul_si_2exp", "e"], [35, 1, 1, "c._fmpz_vec_scalar_submul_si_2exp", "len2"], [35, 1, 1, "c._fmpz_vec_scalar_submul_si_2exp", "vec1"], [35, 1, 1, "c._fmpz_vec_scalar_submul_si_2exp", "vec2"]], "_fmpz_vec_scalar_tdiv_q_2exp": [[35, 1, 1, "c._fmpz_vec_scalar_tdiv_q_2exp", "exp"], [35, 1, 1, "c._fmpz_vec_scalar_tdiv_q_2exp", "len2"], [35, 1, 1, "c._fmpz_vec_scalar_tdiv_q_2exp", "vec1"], [35, 1, 1, "c._fmpz_vec_scalar_tdiv_q_2exp", "vec2"]], "_fmpz_vec_scalar_tdiv_q_fmpz": [[35, 1, 1, "c._fmpz_vec_scalar_tdiv_q_fmpz", "c"], [35, 1, 1, "c._fmpz_vec_scalar_tdiv_q_fmpz", "len2"], [35, 1, 1, "c._fmpz_vec_scalar_tdiv_q_fmpz", "vec1"], [35, 1, 1, "c._fmpz_vec_scalar_tdiv_q_fmpz", "vec2"]], "_fmpz_vec_scalar_tdiv_q_si": [[35, 1, 1, "c._fmpz_vec_scalar_tdiv_q_si", "c"], [35, 1, 1, "c._fmpz_vec_scalar_tdiv_q_si", "len2"], [35, 1, 1, "c._fmpz_vec_scalar_tdiv_q_si", "vec1"], [35, 1, 1, "c._fmpz_vec_scalar_tdiv_q_si", "vec2"]], "_fmpz_vec_scalar_tdiv_q_ui": [[35, 1, 1, "c._fmpz_vec_scalar_tdiv_q_ui", "c"], [35, 1, 1, "c._fmpz_vec_scalar_tdiv_q_ui", "len2"], [35, 1, 1, "c._fmpz_vec_scalar_tdiv_q_ui", "vec1"], [35, 1, 1, "c._fmpz_vec_scalar_tdiv_q_ui", "vec2"]], "_fmpz_vec_set": [[35, 1, 1, "c._fmpz_vec_set", "len2"], [35, 1, 1, "c._fmpz_vec_set", "vec1"], [35, 1, 1, "c._fmpz_vec_set", "vec2"]], "_fmpz_vec_set_fft": [[35, 1, 1, "c._fmpz_vec_set_fft", "coeffs_f"], [35, 1, 1, "c._fmpz_vec_set_fft", "coeffs_m"], [35, 1, 1, "c._fmpz_vec_set_fft", "length"], [35, 1, 1, "c._fmpz_vec_set_fft", "limbs"], [35, 1, 1, "c._fmpz_vec_set_fft", "sign"]], "_fmpz_vec_set_nmod_vec": [[35, 1, 1, "c._fmpz_vec_set_nmod_vec", "len"], [35, 1, 1, "c._fmpz_vec_set_nmod_vec", "mod"], [35, 1, 1, "c._fmpz_vec_set_nmod_vec", "poly"], [35, 1, 1, "c._fmpz_vec_set_nmod_vec", "res"]], "_fmpz_vec_sort": [[35, 1, 1, "c._fmpz_vec_sort", "len"], [35, 1, 1, "c._fmpz_vec_sort", "vec"]], "_fmpz_vec_sub": [[35, 1, 1, "c._fmpz_vec_sub", "len2"], [35, 1, 1, "c._fmpz_vec_sub", "res"], [35, 1, 1, "c._fmpz_vec_sub", "vec1"], [35, 1, 1, "c._fmpz_vec_sub", "vec2"]], "_fmpz_vec_sum": [[35, 1, 1, "c._fmpz_vec_sum", "len"], [35, 1, 1, "c._fmpz_vec_sum", "res"], [35, 1, 1, "c._fmpz_vec_sum", "vec"]], "_fmpz_vec_sum_max_bits": [[35, 1, 1, "c._fmpz_vec_sum_max_bits", "len"], [35, 1, 1, "c._fmpz_vec_sum_max_bits", "maxabs"], [35, 1, 1, "c._fmpz_vec_sum_max_bits", "sumabs"], [35, 1, 1, "c._fmpz_vec_sum_max_bits", "vec"]], "_fmpz_vec_swap": [[35, 1, 1, "c._fmpz_vec_swap", "len2"], [35, 1, 1, "c._fmpz_vec_swap", "vec1"], [35, 1, 1, "c._fmpz_vec_swap", "vec2"]], "_fmpz_vec_zero": [[35, 1, 1, "c._fmpz_vec_zero", "len"], [35, 1, 1, "c._fmpz_vec_zero", "vec"]], "_fq_ctx_init_conway": [[36, 1, 1, "c._fq_ctx_init_conway", "ctx"], [36, 1, 1, "c._fq_ctx_init_conway", "d"], [36, 1, 1, "c._fq_ctx_init_conway", "p"], [36, 1, 1, "c._fq_ctx_init_conway", "var"]], "_fq_default_poly_set_length": [[39, 1, 1, "c._fq_default_poly_set_length", "ctx"], [39, 1, 1, "c._fq_default_poly_set_length", "len"], [39, 1, 1, "c._fq_default_poly_set_length", "poly"]], "_fq_dense_reduce": [[36, 1, 1, "c._fq_dense_reduce", "R"], [36, 1, 1, "c._fq_dense_reduce", "ctx"], [36, 1, 1, "c._fq_dense_reduce", "lenR"]], "_fq_embed_gens_naive": [[41, 1, 1, "c._fq_embed_gens_naive", "gen_sub"], [41, 1, 1, "c._fq_embed_gens_naive", "gen_sup"], [41, 1, 1, "c._fq_embed_gens_naive", "minpoly"], [41, 1, 1, "c._fq_embed_gens_naive", "sub_ctx"], [41, 1, 1, "c._fq_embed_gens_naive", "sup_ctx"]], "_fq_frobenius": [[36, 1, 1, "c._fq_frobenius", "ctx"], [36, 1, 1, "c._fq_frobenius", "e"], [36, 1, 1, "c._fq_frobenius", "len"], [36, 1, 1, "c._fq_frobenius", "op"], [36, 1, 1, "c._fq_frobenius", "rop"]], "_fq_inv": [[36, 1, 1, "c._fq_inv", "ctx"], [36, 1, 1, "c._fq_inv", "len"], [36, 1, 1, "c._fq_inv", "op"], [36, 1, 1, "c._fq_inv", "rop"]], "_fq_nmod_ctx_init_conway": [[43, 1, 1, "c._fq_nmod_ctx_init_conway", "ctx"], [43, 1, 1, "c._fq_nmod_ctx_init_conway", "d"], [43, 1, 1, "c._fq_nmod_ctx_init_conway", "p"], [43, 1, 1, "c._fq_nmod_ctx_init_conway", "var"]], "_fq_nmod_dense_reduce": [[43, 1, 1, "c._fq_nmod_dense_reduce", "R"], [43, 1, 1, "c._fq_nmod_dense_reduce", "ctx"], [43, 1, 1, "c._fq_nmod_dense_reduce", "lenR"]], "_fq_nmod_embed_gens_naive": [[44, 1, 1, "c._fq_nmod_embed_gens_naive", "gen_sub"], [44, 1, 1, "c._fq_nmod_embed_gens_naive", "gen_sup"], [44, 1, 1, "c._fq_nmod_embed_gens_naive", "minpoly"], [44, 1, 1, "c._fq_nmod_embed_gens_naive", "sub_ctx"], [44, 1, 1, "c._fq_nmod_embed_gens_naive", "sup_ctx"]], "_fq_nmod_frobenius": [[43, 1, 1, "c._fq_nmod_frobenius", "ctx"], [43, 1, 1, "c._fq_nmod_frobenius", "e"], [43, 1, 1, "c._fq_nmod_frobenius", "len"], [43, 1, 1, "c._fq_nmod_frobenius", "op"], [43, 1, 1, "c._fq_nmod_frobenius", "rop"]], "_fq_nmod_inv": [[43, 1, 1, "c._fq_nmod_inv", "ctx"], [43, 1, 1, "c._fq_nmod_inv", "len"], [43, 1, 1, "c._fq_nmod_inv", "op"], [43, 1, 1, "c._fq_nmod_inv", "rop"]], "_fq_nmod_norm": [[43, 1, 1, "c._fq_nmod_norm", "ctx"], [43, 1, 1, "c._fq_nmod_norm", "len"], [43, 1, 1, "c._fq_nmod_norm", "op"], [43, 1, 1, "c._fq_nmod_norm", "rop"]], "_fq_nmod_poly_add": [[48, 1, 1, "c._fq_nmod_poly_add", "ctx"], [48, 1, 1, "c._fq_nmod_poly_add", "len1"], [48, 1, 1, "c._fq_nmod_poly_add", "len2"], [48, 1, 1, "c._fq_nmod_poly_add", "poly1"], [48, 1, 1, "c._fq_nmod_poly_add", "poly2"], [48, 1, 1, "c._fq_nmod_poly_add", "res"]], "_fq_nmod_poly_compose": [[48, 1, 1, "c._fq_nmod_poly_compose", "ctx"], [48, 1, 1, "c._fq_nmod_poly_compose", "len1"], [48, 1, 1, "c._fq_nmod_poly_compose", "len2"], [48, 1, 1, "c._fq_nmod_poly_compose", "op1"], [48, 1, 1, "c._fq_nmod_poly_compose", "op2"], [48, 1, 1, "c._fq_nmod_poly_compose", "rop"]], "_fq_nmod_poly_compose_divconquer": [[48, 1, 1, "c._fq_nmod_poly_compose_divconquer", "ctx"], [48, 1, 1, "c._fq_nmod_poly_compose_divconquer", "len1"], [48, 1, 1, "c._fq_nmod_poly_compose_divconquer", "len2"], [48, 1, 1, "c._fq_nmod_poly_compose_divconquer", "op1"], [48, 1, 1, "c._fq_nmod_poly_compose_divconquer", "op2"], [48, 1, 1, "c._fq_nmod_poly_compose_divconquer", "rop"]], "_fq_nmod_poly_compose_horner": [[48, 1, 1, "c._fq_nmod_poly_compose_horner", "ctx"], [48, 1, 1, "c._fq_nmod_poly_compose_horner", "len1"], [48, 1, 1, "c._fq_nmod_poly_compose_horner", "len2"], [48, 1, 1, "c._fq_nmod_poly_compose_horner", "op1"], [48, 1, 1, "c._fq_nmod_poly_compose_horner", "op2"], [48, 1, 1, "c._fq_nmod_poly_compose_horner", "rop"]], "_fq_nmod_poly_compose_mod": [[48, 1, 1, "c._fq_nmod_poly_compose_mod", "ctx"], [48, 1, 1, "c._fq_nmod_poly_compose_mod", "f"], [48, 1, 1, "c._fq_nmod_poly_compose_mod", "g"], [48, 1, 1, "c._fq_nmod_poly_compose_mod", "h"], [48, 1, 1, "c._fq_nmod_poly_compose_mod", "lenf"], [48, 1, 1, "c._fq_nmod_poly_compose_mod", "lenh"], [48, 1, 1, "c._fq_nmod_poly_compose_mod", "res"]], "_fq_nmod_poly_compose_mod_brent_kung": [[48, 1, 1, "c._fq_nmod_poly_compose_mod_brent_kung", "ctx"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_brent_kung", "f"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_brent_kung", "g"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_brent_kung", "h"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_brent_kung", "lenf"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_brent_kung", "lenh"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_brent_kung", "res"]], "_fq_nmod_poly_compose_mod_brent_kung_precomp_preinv": [[48, 1, 1, "c._fq_nmod_poly_compose_mod_brent_kung_precomp_preinv", "A"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_brent_kung_precomp_preinv", "ctx"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_brent_kung_precomp_preinv", "f"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_brent_kung_precomp_preinv", "h"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_brent_kung_precomp_preinv", "hinv"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_brent_kung_precomp_preinv", "lenf"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_brent_kung_precomp_preinv", "lenh"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_brent_kung_precomp_preinv", "lenhinv"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_brent_kung_precomp_preinv", "res"]], "_fq_nmod_poly_compose_mod_brent_kung_preinv": [[48, 1, 1, "c._fq_nmod_poly_compose_mod_brent_kung_preinv", "ctx"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_brent_kung_preinv", "f"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_brent_kung_preinv", "g"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_brent_kung_preinv", "h"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_brent_kung_preinv", "hinv"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_brent_kung_preinv", "lenf"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_brent_kung_preinv", "lenh"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_brent_kung_preinv", "lenhiv"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_brent_kung_preinv", "res"]], "_fq_nmod_poly_compose_mod_horner": [[48, 1, 1, "c._fq_nmod_poly_compose_mod_horner", "ctx"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_horner", "f"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_horner", "g"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_horner", "h"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_horner", "lenf"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_horner", "lenh"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_horner", "res"]], "_fq_nmod_poly_compose_mod_horner_preinv": [[48, 1, 1, "c._fq_nmod_poly_compose_mod_horner_preinv", "ctx"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_horner_preinv", "f"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_horner_preinv", "g"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_horner_preinv", "h"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_horner_preinv", "hinv"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_horner_preinv", "lenf"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_horner_preinv", "lenh"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_horner_preinv", "lenhiv"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_horner_preinv", "res"]], "_fq_nmod_poly_compose_mod_preinv": [[48, 1, 1, "c._fq_nmod_poly_compose_mod_preinv", "ctx"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_preinv", "f"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_preinv", "g"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_preinv", "h"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_preinv", "hinv"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_preinv", "lenf"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_preinv", "lenh"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_preinv", "lenhiv"], [48, 1, 1, "c._fq_nmod_poly_compose_mod_preinv", "res"]], "_fq_nmod_poly_derivative": [[48, 1, 1, "c._fq_nmod_poly_derivative", "ctx"], [48, 1, 1, "c._fq_nmod_poly_derivative", "len"], [48, 1, 1, "c._fq_nmod_poly_derivative", "op"], [48, 1, 1, "c._fq_nmod_poly_derivative", "rop"]], "_fq_nmod_poly_div_basecase": [[48, 1, 1, "c._fq_nmod_poly_div_basecase", "A"], [48, 1, 1, "c._fq_nmod_poly_div_basecase", "B"], [48, 1, 1, "c._fq_nmod_poly_div_basecase", "Q"], [48, 1, 1, "c._fq_nmod_poly_div_basecase", "R"], [48, 1, 1, "c._fq_nmod_poly_div_basecase", "ctx"], [48, 1, 1, "c._fq_nmod_poly_div_basecase", "invB"], [48, 1, 1, "c._fq_nmod_poly_div_basecase", "lenA"], [48, 1, 1, "c._fq_nmod_poly_div_basecase", "lenB"]], "_fq_nmod_poly_div_newton_n_preinv": [[48, 1, 1, "c._fq_nmod_poly_div_newton_n_preinv", "A"], [48, 1, 1, "c._fq_nmod_poly_div_newton_n_preinv", "B"], [48, 1, 1, "c._fq_nmod_poly_div_newton_n_preinv", "Binv"], [48, 1, 1, "c._fq_nmod_poly_div_newton_n_preinv", "Q"], [48, 1, 1, "c._fq_nmod_poly_div_newton_n_preinv", "ctx_t"], [48, 1, 1, "c._fq_nmod_poly_div_newton_n_preinv", "lenA"], [48, 1, 1, "c._fq_nmod_poly_div_newton_n_preinv", "lenB"], [48, 1, 1, "c._fq_nmod_poly_div_newton_n_preinv", "lenBinv"]], "_fq_nmod_poly_div_series": [[48, 1, 1, "c._fq_nmod_poly_div_series", "A"], [48, 1, 1, "c._fq_nmod_poly_div_series", "Alen"], [48, 1, 1, "c._fq_nmod_poly_div_series", "B"], [48, 1, 1, "c._fq_nmod_poly_div_series", "Blen"], [48, 1, 1, "c._fq_nmod_poly_div_series", "Q"], [48, 1, 1, "c._fq_nmod_poly_div_series", "ctx"], [48, 1, 1, "c._fq_nmod_poly_div_series", "n"]], "_fq_nmod_poly_divides": [[48, 1, 1, "c._fq_nmod_poly_divides", "A"], [48, 1, 1, "c._fq_nmod_poly_divides", "B"], [48, 1, 1, "c._fq_nmod_poly_divides", "Q"], [48, 1, 1, "c._fq_nmod_poly_divides", "ctx"], [48, 1, 1, "c._fq_nmod_poly_divides", "invB"], [48, 1, 1, "c._fq_nmod_poly_divides", "lenA"], [48, 1, 1, "c._fq_nmod_poly_divides", "lenB"]], "_fq_nmod_poly_divrem": [[48, 1, 1, "c._fq_nmod_poly_divrem", "A"], [48, 1, 1, "c._fq_nmod_poly_divrem", "B"], [48, 1, 1, "c._fq_nmod_poly_divrem", "Q"], [48, 1, 1, "c._fq_nmod_poly_divrem", "R"], [48, 1, 1, "c._fq_nmod_poly_divrem", "ctx"], [48, 1, 1, "c._fq_nmod_poly_divrem", "invB"], [48, 1, 1, "c._fq_nmod_poly_divrem", "lenA"], [48, 1, 1, "c._fq_nmod_poly_divrem", "lenB"]], "_fq_nmod_poly_divrem_basecase": [[48, 1, 1, "c._fq_nmod_poly_divrem_basecase", "A"], [48, 1, 1, "c._fq_nmod_poly_divrem_basecase", "B"], [48, 1, 1, "c._fq_nmod_poly_divrem_basecase", "Q"], [48, 1, 1, "c._fq_nmod_poly_divrem_basecase", "R"], [48, 1, 1, "c._fq_nmod_poly_divrem_basecase", "ctx"], [48, 1, 1, "c._fq_nmod_poly_divrem_basecase", "invB"], [48, 1, 1, "c._fq_nmod_poly_divrem_basecase", "lenA"], [48, 1, 1, "c._fq_nmod_poly_divrem_basecase", "lenB"]], "_fq_nmod_poly_divrem_divconquer": [[48, 1, 1, "c._fq_nmod_poly_divrem_divconquer", "A"], [48, 1, 1, "c._fq_nmod_poly_divrem_divconquer", "B"], [48, 1, 1, "c._fq_nmod_poly_divrem_divconquer", "Q"], [48, 1, 1, "c._fq_nmod_poly_divrem_divconquer", "R"], [48, 1, 1, "c._fq_nmod_poly_divrem_divconquer", "ctx"], [48, 1, 1, "c._fq_nmod_poly_divrem_divconquer", "invB"], [48, 1, 1, "c._fq_nmod_poly_divrem_divconquer", "lenA"], [48, 1, 1, "c._fq_nmod_poly_divrem_divconquer", "lenB"]], "_fq_nmod_poly_divrem_divconquer_recursive": [[48, 1, 1, "c._fq_nmod_poly_divrem_divconquer_recursive", "A"], [48, 1, 1, "c._fq_nmod_poly_divrem_divconquer_recursive", "B"], [48, 1, 1, "c._fq_nmod_poly_divrem_divconquer_recursive", "BQ"], [48, 1, 1, "c._fq_nmod_poly_divrem_divconquer_recursive", "Q"], [48, 1, 1, "c._fq_nmod_poly_divrem_divconquer_recursive", "W"], [48, 1, 1, "c._fq_nmod_poly_divrem_divconquer_recursive", "ctx"], [48, 1, 1, "c._fq_nmod_poly_divrem_divconquer_recursive", "invB"], [48, 1, 1, "c._fq_nmod_poly_divrem_divconquer_recursive", "lenB"]], "_fq_nmod_poly_divrem_newton_n_preinv": [[48, 1, 1, "c._fq_nmod_poly_divrem_newton_n_preinv", "A"], [48, 1, 1, "c._fq_nmod_poly_divrem_newton_n_preinv", "B"], [48, 1, 1, "c._fq_nmod_poly_divrem_newton_n_preinv", "Binv"], [48, 1, 1, "c._fq_nmod_poly_divrem_newton_n_preinv", "Q"], [48, 1, 1, "c._fq_nmod_poly_divrem_newton_n_preinv", "R"], [48, 1, 1, "c._fq_nmod_poly_divrem_newton_n_preinv", "ctx"], [48, 1, 1, "c._fq_nmod_poly_divrem_newton_n_preinv", "lenA"], [48, 1, 1, "c._fq_nmod_poly_divrem_newton_n_preinv", "lenB"], [48, 1, 1, "c._fq_nmod_poly_divrem_newton_n_preinv", "lenBinv"]], "_fq_nmod_poly_evaluate_fq_nmod": [[48, 1, 1, "c._fq_nmod_poly_evaluate_fq_nmod", "a"], [48, 1, 1, "c._fq_nmod_poly_evaluate_fq_nmod", "ctx"], [48, 1, 1, "c._fq_nmod_poly_evaluate_fq_nmod", "len"], [48, 1, 1, "c._fq_nmod_poly_evaluate_fq_nmod", "op"], [48, 1, 1, "c._fq_nmod_poly_evaluate_fq_nmod", "rop"]], "_fq_nmod_poly_fprint": [[48, 1, 1, "c._fq_nmod_poly_fprint", "ctx"], [48, 1, 1, "c._fq_nmod_poly_fprint", "file"], [48, 1, 1, "c._fq_nmod_poly_fprint", "len"], [48, 1, 1, "c._fq_nmod_poly_fprint", "poly"]], "_fq_nmod_poly_fprint_pretty": [[48, 1, 1, "c._fq_nmod_poly_fprint_pretty", "ctx"], [48, 1, 1, "c._fq_nmod_poly_fprint_pretty", "file"], [48, 1, 1, "c._fq_nmod_poly_fprint_pretty", "len"], [48, 1, 1, "c._fq_nmod_poly_fprint_pretty", "poly"], [48, 1, 1, "c._fq_nmod_poly_fprint_pretty", "x"]], "_fq_nmod_poly_gcd": [[48, 1, 1, "c._fq_nmod_poly_gcd", "A"], [48, 1, 1, "c._fq_nmod_poly_gcd", "B"], [48, 1, 1, "c._fq_nmod_poly_gcd", "G"], [48, 1, 1, "c._fq_nmod_poly_gcd", "ctx"], [48, 1, 1, "c._fq_nmod_poly_gcd", "lenA"], [48, 1, 1, "c._fq_nmod_poly_gcd", "lenB"]], "_fq_nmod_poly_gcd_euclidean": [[48, 1, 1, "c._fq_nmod_poly_gcd_euclidean", "A"], [48, 1, 1, "c._fq_nmod_poly_gcd_euclidean", "B"], [48, 1, 1, "c._fq_nmod_poly_gcd_euclidean", "G"], [48, 1, 1, "c._fq_nmod_poly_gcd_euclidean", "ctx"], [48, 1, 1, "c._fq_nmod_poly_gcd_euclidean", "lenA"], [48, 1, 1, "c._fq_nmod_poly_gcd_euclidean", "lenB"]], "_fq_nmod_poly_gcd_euclidean_f": [[48, 1, 1, "c._fq_nmod_poly_gcd_euclidean_f", "A"], [48, 1, 1, "c._fq_nmod_poly_gcd_euclidean_f", "B"], [48, 1, 1, "c._fq_nmod_poly_gcd_euclidean_f", "G"], [48, 1, 1, "c._fq_nmod_poly_gcd_euclidean_f", "ctx"], [48, 1, 1, "c._fq_nmod_poly_gcd_euclidean_f", "f"], [48, 1, 1, "c._fq_nmod_poly_gcd_euclidean_f", "lenA"], [48, 1, 1, "c._fq_nmod_poly_gcd_euclidean_f", "lenB"]], "_fq_nmod_poly_gcd_hgcd": [[48, 1, 1, "c._fq_nmod_poly_gcd_hgcd", "A"], [48, 1, 1, "c._fq_nmod_poly_gcd_hgcd", "B"], [48, 1, 1, "c._fq_nmod_poly_gcd_hgcd", "G"], [48, 1, 1, "c._fq_nmod_poly_gcd_hgcd", "ctx"], [48, 1, 1, "c._fq_nmod_poly_gcd_hgcd", "lenA"], [48, 1, 1, "c._fq_nmod_poly_gcd_hgcd", "lenB"]], "_fq_nmod_poly_get_str": [[48, 1, 1, "c._fq_nmod_poly_get_str", "ctx"], [48, 1, 1, "c._fq_nmod_poly_get_str", "len"], [48, 1, 1, "c._fq_nmod_poly_get_str", "poly"]], "_fq_nmod_poly_get_str_pretty": [[48, 1, 1, "c._fq_nmod_poly_get_str_pretty", "ctx"], [48, 1, 1, "c._fq_nmod_poly_get_str_pretty", "len"], [48, 1, 1, "c._fq_nmod_poly_get_str_pretty", "poly"], [48, 1, 1, "c._fq_nmod_poly_get_str_pretty", "x"]], "_fq_nmod_poly_hamming_weight": [[48, 1, 1, "c._fq_nmod_poly_hamming_weight", "ctx"], [48, 1, 1, "c._fq_nmod_poly_hamming_weight", "len"], [48, 1, 1, "c._fq_nmod_poly_hamming_weight", "op"]], "_fq_nmod_poly_hgcd": [[48, 1, 1, "c._fq_nmod_poly_hgcd", "A"], [48, 1, 1, "c._fq_nmod_poly_hgcd", "B"], [48, 1, 1, "c._fq_nmod_poly_hgcd", "M"], [48, 1, 1, "c._fq_nmod_poly_hgcd", "a"], [48, 1, 1, "c._fq_nmod_poly_hgcd", "b"], [48, 1, 1, "c._fq_nmod_poly_hgcd", "ctx"], [48, 1, 1, "c._fq_nmod_poly_hgcd", "lenA"], [48, 1, 1, "c._fq_nmod_poly_hgcd", "lenB"], [48, 1, 1, "c._fq_nmod_poly_hgcd", "lenM"], [48, 1, 1, "c._fq_nmod_poly_hgcd", "lena"], [48, 1, 1, "c._fq_nmod_poly_hgcd", "lenb"]], "_fq_nmod_poly_inv_series": [[48, 1, 1, "c._fq_nmod_poly_inv_series", "Q"], [48, 1, 1, "c._fq_nmod_poly_inv_series", "Qinv"], [48, 1, 1, "c._fq_nmod_poly_inv_series", "ctx"], [48, 1, 1, "c._fq_nmod_poly_inv_series", "n"]], "_fq_nmod_poly_inv_series_newton": [[48, 1, 1, "c._fq_nmod_poly_inv_series_newton", "Q"], [48, 1, 1, "c._fq_nmod_poly_inv_series_newton", "Qinv"], [48, 1, 1, "c._fq_nmod_poly_inv_series_newton", "ctx"], [48, 1, 1, "c._fq_nmod_poly_inv_series_newton", "n"]], "_fq_nmod_poly_invsqrt_series": [[48, 1, 1, "c._fq_nmod_poly_invsqrt_series", "g"], [48, 1, 1, "c._fq_nmod_poly_invsqrt_series", "h"], [48, 1, 1, "c._fq_nmod_poly_invsqrt_series", "mod"], [48, 1, 1, "c._fq_nmod_poly_invsqrt_series", "n"]], "_fq_nmod_poly_is_squarefree": [[49, 1, 1, "c._fq_nmod_poly_is_squarefree", "ctx"], [49, 1, 1, "c._fq_nmod_poly_is_squarefree", "f"], [49, 1, 1, "c._fq_nmod_poly_is_squarefree", "len"]], "_fq_nmod_poly_make_monic": [[48, 1, 1, "c._fq_nmod_poly_make_monic", "ctx"], [48, 1, 1, "c._fq_nmod_poly_make_monic", "length"], [48, 1, 1, "c._fq_nmod_poly_make_monic", "op"], [48, 1, 1, "c._fq_nmod_poly_make_monic", "rop"]], "_fq_nmod_poly_mul": [[48, 1, 1, "c._fq_nmod_poly_mul", "ctx"], [48, 1, 1, "c._fq_nmod_poly_mul", "len1"], [48, 1, 1, "c._fq_nmod_poly_mul", "len2"], [48, 1, 1, "c._fq_nmod_poly_mul", "op1"], [48, 1, 1, "c._fq_nmod_poly_mul", "op2"], [48, 1, 1, "c._fq_nmod_poly_mul", "rop"]], "_fq_nmod_poly_mul_KS": [[48, 1, 1, "c._fq_nmod_poly_mul_KS", "ctx"], [48, 1, 1, "c._fq_nmod_poly_mul_KS", "len1"], [48, 1, 1, "c._fq_nmod_poly_mul_KS", "len2"], [48, 1, 1, "c._fq_nmod_poly_mul_KS", "op1"], [48, 1, 1, "c._fq_nmod_poly_mul_KS", "op2"], [48, 1, 1, "c._fq_nmod_poly_mul_KS", "rop"]], "_fq_nmod_poly_mul_classical": [[48, 1, 1, "c._fq_nmod_poly_mul_classical", "ctx"], [48, 1, 1, "c._fq_nmod_poly_mul_classical", "len1"], [48, 1, 1, "c._fq_nmod_poly_mul_classical", "len2"], [48, 1, 1, "c._fq_nmod_poly_mul_classical", "op1"], [48, 1, 1, "c._fq_nmod_poly_mul_classical", "op2"], [48, 1, 1, "c._fq_nmod_poly_mul_classical", "rop"]], "_fq_nmod_poly_mul_reorder": [[48, 1, 1, "c._fq_nmod_poly_mul_reorder", "ctx"], [48, 1, 1, "c._fq_nmod_poly_mul_reorder", "len1"], [48, 1, 1, "c._fq_nmod_poly_mul_reorder", "len2"], [48, 1, 1, "c._fq_nmod_poly_mul_reorder", "op1"], [48, 1, 1, "c._fq_nmod_poly_mul_reorder", "op2"], [48, 1, 1, "c._fq_nmod_poly_mul_reorder", "rop"]], "_fq_nmod_poly_mul_univariate": [[48, 1, 1, "c._fq_nmod_poly_mul_univariate", "ctx"], [48, 1, 1, "c._fq_nmod_poly_mul_univariate", "len1"], [48, 1, 1, "c._fq_nmod_poly_mul_univariate", "len2"], [48, 1, 1, "c._fq_nmod_poly_mul_univariate", "op1"], [48, 1, 1, "c._fq_nmod_poly_mul_univariate", "op2"], [48, 1, 1, "c._fq_nmod_poly_mul_univariate", "rop"]], "_fq_nmod_poly_mulhigh": [[48, 1, 1, "c._fq_nmod_poly_mulhigh", "ctx"], [48, 1, 1, "c._fq_nmod_poly_mulhigh", "len1"], [48, 1, 1, "c._fq_nmod_poly_mulhigh", "len2"], [48, 1, 1, "c._fq_nmod_poly_mulhigh", "poly1"], [48, 1, 1, "c._fq_nmod_poly_mulhigh", "poly2"], [48, 1, 1, "c._fq_nmod_poly_mulhigh", "res"], [48, 1, 1, "c._fq_nmod_poly_mulhigh", "start"]], "_fq_nmod_poly_mulhigh_classical": [[48, 1, 1, "c._fq_nmod_poly_mulhigh_classical", "ctx"], [48, 1, 1, "c._fq_nmod_poly_mulhigh_classical", "len1"], [48, 1, 1, "c._fq_nmod_poly_mulhigh_classical", "len2"], [48, 1, 1, "c._fq_nmod_poly_mulhigh_classical", "poly1"], [48, 1, 1, "c._fq_nmod_poly_mulhigh_classical", "poly2"], [48, 1, 1, "c._fq_nmod_poly_mulhigh_classical", "res"], [48, 1, 1, "c._fq_nmod_poly_mulhigh_classical", "start"]], "_fq_nmod_poly_mullow": [[48, 1, 1, "c._fq_nmod_poly_mullow", "ctx"], [48, 1, 1, "c._fq_nmod_poly_mullow", "len1"], [48, 1, 1, "c._fq_nmod_poly_mullow", "len2"], [48, 1, 1, "c._fq_nmod_poly_mullow", "n"], [48, 1, 1, "c._fq_nmod_poly_mullow", "op1"], [48, 1, 1, "c._fq_nmod_poly_mullow", "op2"], [48, 1, 1, "c._fq_nmod_poly_mullow", "rop"]], "_fq_nmod_poly_mullow_KS": [[48, 1, 1, "c._fq_nmod_poly_mullow_KS", "ctx"], [48, 1, 1, "c._fq_nmod_poly_mullow_KS", "len1"], [48, 1, 1, "c._fq_nmod_poly_mullow_KS", "len2"], [48, 1, 1, "c._fq_nmod_poly_mullow_KS", "n"], [48, 1, 1, "c._fq_nmod_poly_mullow_KS", "op1"], [48, 1, 1, "c._fq_nmod_poly_mullow_KS", "op2"], [48, 1, 1, "c._fq_nmod_poly_mullow_KS", "rop"]], "_fq_nmod_poly_mullow_classical": [[48, 1, 1, "c._fq_nmod_poly_mullow_classical", "ctx"], [48, 1, 1, "c._fq_nmod_poly_mullow_classical", "len1"], [48, 1, 1, "c._fq_nmod_poly_mullow_classical", "len2"], [48, 1, 1, "c._fq_nmod_poly_mullow_classical", "n"], [48, 1, 1, "c._fq_nmod_poly_mullow_classical", "op1"], [48, 1, 1, "c._fq_nmod_poly_mullow_classical", "op2"], [48, 1, 1, "c._fq_nmod_poly_mullow_classical", "rop"]], "_fq_nmod_poly_mullow_univariate": [[48, 1, 1, "c._fq_nmod_poly_mullow_univariate", "ctx"], [48, 1, 1, "c._fq_nmod_poly_mullow_univariate", "len1"], [48, 1, 1, "c._fq_nmod_poly_mullow_univariate", "len2"], [48, 1, 1, "c._fq_nmod_poly_mullow_univariate", "n"], [48, 1, 1, "c._fq_nmod_poly_mullow_univariate", "op1"], [48, 1, 1, "c._fq_nmod_poly_mullow_univariate", "op2"], [48, 1, 1, "c._fq_nmod_poly_mullow_univariate", "rop"]], "_fq_nmod_poly_mulmod": [[48, 1, 1, "c._fq_nmod_poly_mulmod", "ctx"], [48, 1, 1, "c._fq_nmod_poly_mulmod", "f"], [48, 1, 1, "c._fq_nmod_poly_mulmod", "len1"], [48, 1, 1, "c._fq_nmod_poly_mulmod", "len2"], [48, 1, 1, "c._fq_nmod_poly_mulmod", "lenf"], [48, 1, 1, "c._fq_nmod_poly_mulmod", "poly1"], [48, 1, 1, "c._fq_nmod_poly_mulmod", "poly2"], [48, 1, 1, "c._fq_nmod_poly_mulmod", "res"]], "_fq_nmod_poly_mulmod_preinv": [[48, 1, 1, "c._fq_nmod_poly_mulmod_preinv", "ctx"], [48, 1, 1, "c._fq_nmod_poly_mulmod_preinv", "f"], [48, 1, 1, "c._fq_nmod_poly_mulmod_preinv", "finv"], [48, 1, 1, "c._fq_nmod_poly_mulmod_preinv", "len1"], [48, 1, 1, "c._fq_nmod_poly_mulmod_preinv", "len2"], [48, 1, 1, "c._fq_nmod_poly_mulmod_preinv", "lenf"], [48, 1, 1, "c._fq_nmod_poly_mulmod_preinv", "lenfinv"], [48, 1, 1, "c._fq_nmod_poly_mulmod_preinv", "poly1"], [48, 1, 1, "c._fq_nmod_poly_mulmod_preinv", "poly2"], [48, 1, 1, "c._fq_nmod_poly_mulmod_preinv", "res"]], "_fq_nmod_poly_neg": [[48, 1, 1, "c._fq_nmod_poly_neg", "ctx"], [48, 1, 1, "c._fq_nmod_poly_neg", "len"], [48, 1, 1, "c._fq_nmod_poly_neg", "op"], [48, 1, 1, "c._fq_nmod_poly_neg", "rop"]], "_fq_nmod_poly_normalise": [[48, 1, 1, "c._fq_nmod_poly_normalise", "ctx"], [48, 1, 1, "c._fq_nmod_poly_normalise", "poly"]], "_fq_nmod_poly_normalise2": [[48, 1, 1, "c._fq_nmod_poly_normalise2", "ctx"], [48, 1, 1, "c._fq_nmod_poly_normalise2", "length"], [48, 1, 1, "c._fq_nmod_poly_normalise2", "poly"]], "_fq_nmod_poly_pow": [[48, 1, 1, "c._fq_nmod_poly_pow", "ctx"], [48, 1, 1, "c._fq_nmod_poly_pow", "e"], [48, 1, 1, "c._fq_nmod_poly_pow", "len"], [48, 1, 1, "c._fq_nmod_poly_pow", "op"], [48, 1, 1, "c._fq_nmod_poly_pow", "rop"]], "_fq_nmod_poly_pow_trunc": [[48, 1, 1, "c._fq_nmod_poly_pow_trunc", "e"], [48, 1, 1, "c._fq_nmod_poly_pow_trunc", "mod"], [48, 1, 1, "c._fq_nmod_poly_pow_trunc", "poly"], [48, 1, 1, "c._fq_nmod_poly_pow_trunc", "res"], [48, 1, 1, "c._fq_nmod_poly_pow_trunc", "trunc"]], "_fq_nmod_poly_pow_trunc_binexp": [[48, 1, 1, "c._fq_nmod_poly_pow_trunc_binexp", "ctx"], [48, 1, 1, "c._fq_nmod_poly_pow_trunc_binexp", "e"], [48, 1, 1, "c._fq_nmod_poly_pow_trunc_binexp", "poly"], [48, 1, 1, "c._fq_nmod_poly_pow_trunc_binexp", "res"], [48, 1, 1, "c._fq_nmod_poly_pow_trunc_binexp", "trunc"]], "_fq_nmod_poly_powmod_fmpz_binexp": [[48, 1, 1, "c._fq_nmod_poly_powmod_fmpz_binexp", "ctx"], [48, 1, 1, "c._fq_nmod_poly_powmod_fmpz_binexp", "e"], [48, 1, 1, "c._fq_nmod_poly_powmod_fmpz_binexp", "f"], [48, 1, 1, "c._fq_nmod_poly_powmod_fmpz_binexp", "lenf"], [48, 1, 1, "c._fq_nmod_poly_powmod_fmpz_binexp", "poly"], [48, 1, 1, "c._fq_nmod_poly_powmod_fmpz_binexp", "res"]], "_fq_nmod_poly_powmod_fmpz_binexp_preinv": [[48, 1, 1, "c._fq_nmod_poly_powmod_fmpz_binexp_preinv", "ctx"], [48, 1, 1, "c._fq_nmod_poly_powmod_fmpz_binexp_preinv", "e"], [48, 1, 1, "c._fq_nmod_poly_powmod_fmpz_binexp_preinv", "f"], [48, 1, 1, "c._fq_nmod_poly_powmod_fmpz_binexp_preinv", "finv"], [48, 1, 1, "c._fq_nmod_poly_powmod_fmpz_binexp_preinv", "lenf"], [48, 1, 1, "c._fq_nmod_poly_powmod_fmpz_binexp_preinv", "lenfinv"], [48, 1, 1, "c._fq_nmod_poly_powmod_fmpz_binexp_preinv", "poly"], [48, 1, 1, "c._fq_nmod_poly_powmod_fmpz_binexp_preinv", "res"]], "_fq_nmod_poly_powmod_fmpz_sliding_preinv": [[48, 1, 1, "c._fq_nmod_poly_powmod_fmpz_sliding_preinv", "ctx"], [48, 1, 1, "c._fq_nmod_poly_powmod_fmpz_sliding_preinv", "e"], [48, 1, 1, "c._fq_nmod_poly_powmod_fmpz_sliding_preinv", "f"], [48, 1, 1, "c._fq_nmod_poly_powmod_fmpz_sliding_preinv", "finv"], [48, 1, 1, "c._fq_nmod_poly_powmod_fmpz_sliding_preinv", "k"], [48, 1, 1, "c._fq_nmod_poly_powmod_fmpz_sliding_preinv", "lenf"], [48, 1, 1, "c._fq_nmod_poly_powmod_fmpz_sliding_preinv", "lenfinv"], [48, 1, 1, "c._fq_nmod_poly_powmod_fmpz_sliding_preinv", "poly"], [48, 1, 1, "c._fq_nmod_poly_powmod_fmpz_sliding_preinv", "res"]], "_fq_nmod_poly_powmod_ui_binexp": [[48, 1, 1, "c._fq_nmod_poly_powmod_ui_binexp", "ctx"], [48, 1, 1, "c._fq_nmod_poly_powmod_ui_binexp", "e"], [48, 1, 1, "c._fq_nmod_poly_powmod_ui_binexp", "f"], [48, 1, 1, "c._fq_nmod_poly_powmod_ui_binexp", "lenf"], [48, 1, 1, "c._fq_nmod_poly_powmod_ui_binexp", "poly"], [48, 1, 1, "c._fq_nmod_poly_powmod_ui_binexp", "res"]], "_fq_nmod_poly_powmod_ui_binexp_preinv": [[48, 1, 1, "c._fq_nmod_poly_powmod_ui_binexp_preinv", "ctx"], [48, 1, 1, "c._fq_nmod_poly_powmod_ui_binexp_preinv", "e"], [48, 1, 1, "c._fq_nmod_poly_powmod_ui_binexp_preinv", "f"], [48, 1, 1, "c._fq_nmod_poly_powmod_ui_binexp_preinv", "finv"], [48, 1, 1, "c._fq_nmod_poly_powmod_ui_binexp_preinv", "lenf"], [48, 1, 1, "c._fq_nmod_poly_powmod_ui_binexp_preinv", "lenfinv"], [48, 1, 1, "c._fq_nmod_poly_powmod_ui_binexp_preinv", "poly"], [48, 1, 1, "c._fq_nmod_poly_powmod_ui_binexp_preinv", "res"]], "_fq_nmod_poly_powmod_x_fmpz_preinv": [[48, 1, 1, "c._fq_nmod_poly_powmod_x_fmpz_preinv", "ctx"], [48, 1, 1, "c._fq_nmod_poly_powmod_x_fmpz_preinv", "e"], [48, 1, 1, "c._fq_nmod_poly_powmod_x_fmpz_preinv", "f"], [48, 1, 1, "c._fq_nmod_poly_powmod_x_fmpz_preinv", "finv"], [48, 1, 1, "c._fq_nmod_poly_powmod_x_fmpz_preinv", "lenf"], [48, 1, 1, "c._fq_nmod_poly_powmod_x_fmpz_preinv", "lenfinv"], [48, 1, 1, "c._fq_nmod_poly_powmod_x_fmpz_preinv", "res"]], "_fq_nmod_poly_precompute_matrix": [[48, 1, 1, "c._fq_nmod_poly_precompute_matrix", "A"], [48, 1, 1, "c._fq_nmod_poly_precompute_matrix", "ctx"], [48, 1, 1, "c._fq_nmod_poly_precompute_matrix", "f"], [48, 1, 1, "c._fq_nmod_poly_precompute_matrix", "g"], [48, 1, 1, "c._fq_nmod_poly_precompute_matrix", "ginv"], [48, 1, 1, "c._fq_nmod_poly_precompute_matrix", "leng"], [48, 1, 1, "c._fq_nmod_poly_precompute_matrix", "lenginv"]], "_fq_nmod_poly_print": [[48, 1, 1, "c._fq_nmod_poly_print", "ctx"], [48, 1, 1, "c._fq_nmod_poly_print", "len"], [48, 1, 1, "c._fq_nmod_poly_print", "poly"]], "_fq_nmod_poly_print_pretty": [[48, 1, 1, "c._fq_nmod_poly_print_pretty", "ctx"], [48, 1, 1, "c._fq_nmod_poly_print_pretty", "len"], [48, 1, 1, "c._fq_nmod_poly_print_pretty", "poly"], [48, 1, 1, "c._fq_nmod_poly_print_pretty", "x"]], "_fq_nmod_poly_reduce_matrix_mod_poly": [[48, 1, 1, "c._fq_nmod_poly_reduce_matrix_mod_poly", "A"], [48, 1, 1, "c._fq_nmod_poly_reduce_matrix_mod_poly", "B"], [48, 1, 1, "c._fq_nmod_poly_reduce_matrix_mod_poly", "ctx"], [48, 1, 1, "c._fq_nmod_poly_reduce_matrix_mod_poly", "f"]], "_fq_nmod_poly_rem": [[48, 1, 1, "c._fq_nmod_poly_rem", "A"], [48, 1, 1, "c._fq_nmod_poly_rem", "B"], [48, 1, 1, "c._fq_nmod_poly_rem", "R"], [48, 1, 1, "c._fq_nmod_poly_rem", "ctx"], [48, 1, 1, "c._fq_nmod_poly_rem", "invB"], [48, 1, 1, "c._fq_nmod_poly_rem", "lenA"], [48, 1, 1, "c._fq_nmod_poly_rem", "lenB"]], "_fq_nmod_poly_reverse": [[48, 1, 1, "c._fq_nmod_poly_reverse", "ctx"], [48, 1, 1, "c._fq_nmod_poly_reverse", "input"], [48, 1, 1, "c._fq_nmod_poly_reverse", "len"], [48, 1, 1, "c._fq_nmod_poly_reverse", "m"], [48, 1, 1, "c._fq_nmod_poly_reverse", "output"]], "_fq_nmod_poly_scalar_addmul_fq_nmod": [[48, 1, 1, "c._fq_nmod_poly_scalar_addmul_fq_nmod", "ctx"], [48, 1, 1, "c._fq_nmod_poly_scalar_addmul_fq_nmod", "len"], [48, 1, 1, "c._fq_nmod_poly_scalar_addmul_fq_nmod", "op"], [48, 1, 1, "c._fq_nmod_poly_scalar_addmul_fq_nmod", "rop"], [48, 1, 1, "c._fq_nmod_poly_scalar_addmul_fq_nmod", "x"]], "_fq_nmod_poly_scalar_div_fq": [[48, 1, 1, "c._fq_nmod_poly_scalar_div_fq", "ctx"], [48, 1, 1, "c._fq_nmod_poly_scalar_div_fq", "len"], [48, 1, 1, "c._fq_nmod_poly_scalar_div_fq", "op"], [48, 1, 1, "c._fq_nmod_poly_scalar_div_fq", "rop"], [48, 1, 1, "c._fq_nmod_poly_scalar_div_fq", "x"]], "_fq_nmod_poly_scalar_mul_fq_nmod": [[48, 1, 1, "c._fq_nmod_poly_scalar_mul_fq_nmod", "ctx"], [48, 1, 1, "c._fq_nmod_poly_scalar_mul_fq_nmod", "len"], [48, 1, 1, "c._fq_nmod_poly_scalar_mul_fq_nmod", "op"], [48, 1, 1, "c._fq_nmod_poly_scalar_mul_fq_nmod", "rop"], [48, 1, 1, "c._fq_nmod_poly_scalar_mul_fq_nmod", "x"]], "_fq_nmod_poly_scalar_submul_fq_nmod": [[48, 1, 1, "c._fq_nmod_poly_scalar_submul_fq_nmod", "ctx"], [48, 1, 1, "c._fq_nmod_poly_scalar_submul_fq_nmod", "len"], [48, 1, 1, "c._fq_nmod_poly_scalar_submul_fq_nmod", "op"], [48, 1, 1, "c._fq_nmod_poly_scalar_submul_fq_nmod", "rop"], [48, 1, 1, "c._fq_nmod_poly_scalar_submul_fq_nmod", "x"]], "_fq_nmod_poly_set": [[48, 1, 1, "c._fq_nmod_poly_set", "ctx"], [48, 1, 1, "c._fq_nmod_poly_set", "len"], [48, 1, 1, "c._fq_nmod_poly_set", "op"], [48, 1, 1, "c._fq_nmod_poly_set", "rop"]], "_fq_nmod_poly_set_length": [[48, 1, 1, "c._fq_nmod_poly_set_length", "ctx"], [48, 1, 1, "c._fq_nmod_poly_set_length", "newlen"], [48, 1, 1, "c._fq_nmod_poly_set_length", "poly"]], "_fq_nmod_poly_shift_left": [[48, 1, 1, "c._fq_nmod_poly_shift_left", "ctx"], [48, 1, 1, "c._fq_nmod_poly_shift_left", "len"], [48, 1, 1, "c._fq_nmod_poly_shift_left", "n"], [48, 1, 1, "c._fq_nmod_poly_shift_left", "op"], [48, 1, 1, "c._fq_nmod_poly_shift_left", "rop"]], "_fq_nmod_poly_shift_right": [[48, 1, 1, "c._fq_nmod_poly_shift_right", "ctx"], [48, 1, 1, "c._fq_nmod_poly_shift_right", "len"], [48, 1, 1, "c._fq_nmod_poly_shift_right", "n"], [48, 1, 1, "c._fq_nmod_poly_shift_right", "op"], [48, 1, 1, "c._fq_nmod_poly_shift_right", "rop"]], "_fq_nmod_poly_sqr": [[48, 1, 1, "c._fq_nmod_poly_sqr", "ctx"], [48, 1, 1, "c._fq_nmod_poly_sqr", "len"], [48, 1, 1, "c._fq_nmod_poly_sqr", "op"], [48, 1, 1, "c._fq_nmod_poly_sqr", "rop"]], "_fq_nmod_poly_sqr_KS": [[48, 1, 1, "c._fq_nmod_poly_sqr_KS", "ctx"], [48, 1, 1, "c._fq_nmod_poly_sqr_KS", "len"], [48, 1, 1, "c._fq_nmod_poly_sqr_KS", "op"], [48, 1, 1, "c._fq_nmod_poly_sqr_KS", "rop"]], "_fq_nmod_poly_sqr_classical": [[48, 1, 1, "c._fq_nmod_poly_sqr_classical", "ctx"], [48, 1, 1, "c._fq_nmod_poly_sqr_classical", "len"], [48, 1, 1, "c._fq_nmod_poly_sqr_classical", "op"], [48, 1, 1, "c._fq_nmod_poly_sqr_classical", "rop"]], "_fq_nmod_poly_sqrt": [[48, 1, 1, "c._fq_nmod_poly_sqrt", "mod"], [48, 1, 1, "c._fq_nmod_poly_sqrt", "n"], [48, 1, 1, "c._fq_nmod_poly_sqrt", "p"], [48, 1, 1, "c._fq_nmod_poly_sqrt", "s"]], "_fq_nmod_poly_sqrt_series": [[48, 1, 1, "c._fq_nmod_poly_sqrt_series", "ctx"], [48, 1, 1, "c._fq_nmod_poly_sqrt_series", "g"], [48, 1, 1, "c._fq_nmod_poly_sqrt_series", "h"], [48, 1, 1, "c._fq_nmod_poly_sqrt_series", "n"]], "_fq_nmod_poly_sub": [[48, 1, 1, "c._fq_nmod_poly_sub", "ctx"], [48, 1, 1, "c._fq_nmod_poly_sub", "len1"], [48, 1, 1, "c._fq_nmod_poly_sub", "len2"], [48, 1, 1, "c._fq_nmod_poly_sub", "poly1"], [48, 1, 1, "c._fq_nmod_poly_sub", "poly2"], [48, 1, 1, "c._fq_nmod_poly_sub", "res"]], "_fq_nmod_poly_xgcd": [[48, 1, 1, "c._fq_nmod_poly_xgcd", "A"], [48, 1, 1, "c._fq_nmod_poly_xgcd", "B"], [48, 1, 1, "c._fq_nmod_poly_xgcd", "G"], [48, 1, 1, "c._fq_nmod_poly_xgcd", "S"], [48, 1, 1, "c._fq_nmod_poly_xgcd", "T"], [48, 1, 1, "c._fq_nmod_poly_xgcd", "ctx"], [48, 1, 1, "c._fq_nmod_poly_xgcd", "invB"], [48, 1, 1, "c._fq_nmod_poly_xgcd", "lenA"], [48, 1, 1, "c._fq_nmod_poly_xgcd", "lenB"]], "_fq_nmod_poly_xgcd_euclidean": [[48, 1, 1, "c._fq_nmod_poly_xgcd_euclidean", "A"], [48, 1, 1, "c._fq_nmod_poly_xgcd_euclidean", "B"], [48, 1, 1, "c._fq_nmod_poly_xgcd_euclidean", "G"], [48, 1, 1, "c._fq_nmod_poly_xgcd_euclidean", "S"], [48, 1, 1, "c._fq_nmod_poly_xgcd_euclidean", "T"], [48, 1, 1, "c._fq_nmod_poly_xgcd_euclidean", "ctx"], [48, 1, 1, "c._fq_nmod_poly_xgcd_euclidean", "invB"], [48, 1, 1, "c._fq_nmod_poly_xgcd_euclidean", "lenA"], [48, 1, 1, "c._fq_nmod_poly_xgcd_euclidean", "lenB"]], "_fq_nmod_poly_xgcd_euclidean_f": [[48, 1, 1, "c._fq_nmod_poly_xgcd_euclidean_f", "A"], [48, 1, 1, "c._fq_nmod_poly_xgcd_euclidean_f", "B"], [48, 1, 1, "c._fq_nmod_poly_xgcd_euclidean_f", "G"], [48, 1, 1, "c._fq_nmod_poly_xgcd_euclidean_f", "S"], [48, 1, 1, "c._fq_nmod_poly_xgcd_euclidean_f", "T"], [48, 1, 1, "c._fq_nmod_poly_xgcd_euclidean_f", "ctx"], [48, 1, 1, "c._fq_nmod_poly_xgcd_euclidean_f", "f"], [48, 1, 1, "c._fq_nmod_poly_xgcd_euclidean_f", "invB"], [48, 1, 1, "c._fq_nmod_poly_xgcd_euclidean_f", "lenA"], [48, 1, 1, "c._fq_nmod_poly_xgcd_euclidean_f", "lenB"]], "_fq_nmod_poly_zero": [[48, 1, 1, "c._fq_nmod_poly_zero", "ctx"], [48, 1, 1, "c._fq_nmod_poly_zero", "len"], [48, 1, 1, "c._fq_nmod_poly_zero", "rop"]], "_fq_nmod_pow": [[43, 1, 1, "c._fq_nmod_pow", "ctx"], [43, 1, 1, "c._fq_nmod_pow", "e"], [43, 1, 1, "c._fq_nmod_pow", "len"], [43, 1, 1, "c._fq_nmod_pow", "op"], [43, 1, 1, "c._fq_nmod_pow", "rop"]], "_fq_nmod_reduce": [[43, 1, 1, "c._fq_nmod_reduce", "ctx"], [43, 1, 1, "c._fq_nmod_reduce", "lenR"], [43, 1, 1, "c._fq_nmod_reduce", "r"]], "_fq_nmod_sparse_reduce": [[43, 1, 1, "c._fq_nmod_sparse_reduce", "R"], [43, 1, 1, "c._fq_nmod_sparse_reduce", "ctx"], [43, 1, 1, "c._fq_nmod_sparse_reduce", "lenR"]], "_fq_nmod_trace": [[43, 1, 1, "c._fq_nmod_trace", "ctx"], [43, 1, 1, "c._fq_nmod_trace", "len"], [43, 1, 1, "c._fq_nmod_trace", "op"], [43, 1, 1, "c._fq_nmod_trace", "rop"]], "_fq_nmod_vec_add": [[50, 1, 1, "c._fq_nmod_vec_add", "ctx"], [50, 1, 1, "c._fq_nmod_vec_add", "len2"], [50, 1, 1, "c._fq_nmod_vec_add", "res"], [50, 1, 1, "c._fq_nmod_vec_add", "vec1"], [50, 1, 1, "c._fq_nmod_vec_add", "vec2"]], "_fq_nmod_vec_clear": [[50, 1, 1, "c._fq_nmod_vec_clear", "ctx"], [50, 1, 1, "c._fq_nmod_vec_clear", "len"], [50, 1, 1, "c._fq_nmod_vec_clear", "vec"]], "_fq_nmod_vec_dot": [[50, 1, 1, "c._fq_nmod_vec_dot", "ctx"], [50, 1, 1, "c._fq_nmod_vec_dot", "len2"], [50, 1, 1, "c._fq_nmod_vec_dot", "res"], [50, 1, 1, "c._fq_nmod_vec_dot", "vec1"], [50, 1, 1, "c._fq_nmod_vec_dot", "vec2"]], "_fq_nmod_vec_equal": [[50, 1, 1, "c._fq_nmod_vec_equal", "ctx"], [50, 1, 1, "c._fq_nmod_vec_equal", "len"], [50, 1, 1, "c._fq_nmod_vec_equal", "vec1"], [50, 1, 1, "c._fq_nmod_vec_equal", "vec2"]], "_fq_nmod_vec_fprint": [[50, 1, 1, "c._fq_nmod_vec_fprint", "ctx"], [50, 1, 1, "c._fq_nmod_vec_fprint", "file"], [50, 1, 1, "c._fq_nmod_vec_fprint", "len"], [50, 1, 1, "c._fq_nmod_vec_fprint", "vec"]], "_fq_nmod_vec_init": [[50, 1, 1, "c._fq_nmod_vec_init", "ctx"], [50, 1, 1, "c._fq_nmod_vec_init", "len"]], "_fq_nmod_vec_is_zero": [[50, 1, 1, "c._fq_nmod_vec_is_zero", "len"], [50, 1, 1, "c._fq_nmod_vec_is_zero", "vec"]], "_fq_nmod_vec_neg": [[50, 1, 1, "c._fq_nmod_vec_neg", "ctx"], [50, 1, 1, "c._fq_nmod_vec_neg", "len2"], [50, 1, 1, "c._fq_nmod_vec_neg", "vec1"], [50, 1, 1, "c._fq_nmod_vec_neg", "vec2"]], "_fq_nmod_vec_print": [[50, 1, 1, "c._fq_nmod_vec_print", "ctx"], [50, 1, 1, "c._fq_nmod_vec_print", "len"], [50, 1, 1, "c._fq_nmod_vec_print", "vec"]], "_fq_nmod_vec_randtest": [[50, 1, 1, "c._fq_nmod_vec_randtest", "ctx"], [50, 1, 1, "c._fq_nmod_vec_randtest", "f"], [50, 1, 1, "c._fq_nmod_vec_randtest", "len"], [50, 1, 1, "c._fq_nmod_vec_randtest", "state"]], "_fq_nmod_vec_scalar_addmul_fq_nmod": [[50, 1, 1, "c._fq_nmod_vec_scalar_addmul_fq_nmod", "c"], [50, 1, 1, "c._fq_nmod_vec_scalar_addmul_fq_nmod", "ctx"], [50, 1, 1, "c._fq_nmod_vec_scalar_addmul_fq_nmod", "len2"], [50, 1, 1, "c._fq_nmod_vec_scalar_addmul_fq_nmod", "vec1"], [50, 1, 1, "c._fq_nmod_vec_scalar_addmul_fq_nmod", "vec2"]], "_fq_nmod_vec_scalar_submul_fq_nmod": [[50, 1, 1, "c._fq_nmod_vec_scalar_submul_fq_nmod", "c"], [50, 1, 1, "c._fq_nmod_vec_scalar_submul_fq_nmod", "ctx"], [50, 1, 1, "c._fq_nmod_vec_scalar_submul_fq_nmod", "len2"], [50, 1, 1, "c._fq_nmod_vec_scalar_submul_fq_nmod", "vec1"], [50, 1, 1, "c._fq_nmod_vec_scalar_submul_fq_nmod", "vec2"]], "_fq_nmod_vec_set": [[50, 1, 1, "c._fq_nmod_vec_set", "ctx"], [50, 1, 1, "c._fq_nmod_vec_set", "len2"], [50, 1, 1, "c._fq_nmod_vec_set", "vec1"], [50, 1, 1, "c._fq_nmod_vec_set", "vec2"]], "_fq_nmod_vec_sub": [[50, 1, 1, "c._fq_nmod_vec_sub", "ctx"], [50, 1, 1, "c._fq_nmod_vec_sub", "len2"], [50, 1, 1, "c._fq_nmod_vec_sub", "res"], [50, 1, 1, "c._fq_nmod_vec_sub", "vec1"], [50, 1, 1, "c._fq_nmod_vec_sub", "vec2"]], "_fq_nmod_vec_swap": [[50, 1, 1, "c._fq_nmod_vec_swap", "ctx"], [50, 1, 1, "c._fq_nmod_vec_swap", "len2"], [50, 1, 1, "c._fq_nmod_vec_swap", "vec1"], [50, 1, 1, "c._fq_nmod_vec_swap", "vec2"]], "_fq_nmod_vec_zero": [[50, 1, 1, "c._fq_nmod_vec_zero", "ctx"], [50, 1, 1, "c._fq_nmod_vec_zero", "len"], [50, 1, 1, "c._fq_nmod_vec_zero", "vec"]], "_fq_norm": [[36, 1, 1, "c._fq_norm", "ctx"], [36, 1, 1, "c._fq_norm", "len"], [36, 1, 1, "c._fq_norm", "op"], [36, 1, 1, "c._fq_norm", "rop"]], "_fq_poly_add": [[51, 1, 1, "c._fq_poly_add", "ctx"], [51, 1, 1, "c._fq_poly_add", "len1"], [51, 1, 1, "c._fq_poly_add", "len2"], [51, 1, 1, "c._fq_poly_add", "poly1"], [51, 1, 1, "c._fq_poly_add", "poly2"], [51, 1, 1, "c._fq_poly_add", "res"]], "_fq_poly_compose": [[51, 1, 1, "c._fq_poly_compose", "ctx"], [51, 1, 1, "c._fq_poly_compose", "len1"], [51, 1, 1, "c._fq_poly_compose", "len2"], [51, 1, 1, "c._fq_poly_compose", "op1"], [51, 1, 1, "c._fq_poly_compose", "op2"], [51, 1, 1, "c._fq_poly_compose", "rop"]], "_fq_poly_compose_divconquer": [[51, 1, 1, "c._fq_poly_compose_divconquer", "ctx"], [51, 1, 1, "c._fq_poly_compose_divconquer", "len1"], [51, 1, 1, "c._fq_poly_compose_divconquer", "len2"], [51, 1, 1, "c._fq_poly_compose_divconquer", "op1"], [51, 1, 1, "c._fq_poly_compose_divconquer", "op2"], [51, 1, 1, "c._fq_poly_compose_divconquer", "rop"]], "_fq_poly_compose_horner": [[51, 1, 1, "c._fq_poly_compose_horner", "ctx"], [51, 1, 1, "c._fq_poly_compose_horner", "len1"], [51, 1, 1, "c._fq_poly_compose_horner", "len2"], [51, 1, 1, "c._fq_poly_compose_horner", "op1"], [51, 1, 1, "c._fq_poly_compose_horner", "op2"], [51, 1, 1, "c._fq_poly_compose_horner", "rop"]], "_fq_poly_compose_mod": [[51, 1, 1, "c._fq_poly_compose_mod", "ctx"], [51, 1, 1, "c._fq_poly_compose_mod", "f"], [51, 1, 1, "c._fq_poly_compose_mod", "g"], [51, 1, 1, "c._fq_poly_compose_mod", "h"], [51, 1, 1, "c._fq_poly_compose_mod", "lenf"], [51, 1, 1, "c._fq_poly_compose_mod", "lenh"], [51, 1, 1, "c._fq_poly_compose_mod", "res"]], "_fq_poly_compose_mod_brent_kung": [[51, 1, 1, "c._fq_poly_compose_mod_brent_kung", "ctx"], [51, 1, 1, "c._fq_poly_compose_mod_brent_kung", "f"], [51, 1, 1, "c._fq_poly_compose_mod_brent_kung", "g"], [51, 1, 1, "c._fq_poly_compose_mod_brent_kung", "h"], [51, 1, 1, "c._fq_poly_compose_mod_brent_kung", "lenf"], [51, 1, 1, "c._fq_poly_compose_mod_brent_kung", "lenh"], [51, 1, 1, "c._fq_poly_compose_mod_brent_kung", "res"]], "_fq_poly_compose_mod_brent_kung_precomp_preinv": [[51, 1, 1, "c._fq_poly_compose_mod_brent_kung_precomp_preinv", "A"], [51, 1, 1, "c._fq_poly_compose_mod_brent_kung_precomp_preinv", "ctx"], [51, 1, 1, "c._fq_poly_compose_mod_brent_kung_precomp_preinv", "f"], [51, 1, 1, "c._fq_poly_compose_mod_brent_kung_precomp_preinv", "h"], [51, 1, 1, "c._fq_poly_compose_mod_brent_kung_precomp_preinv", "hinv"], [51, 1, 1, "c._fq_poly_compose_mod_brent_kung_precomp_preinv", "lenf"], [51, 1, 1, "c._fq_poly_compose_mod_brent_kung_precomp_preinv", "lenh"], [51, 1, 1, "c._fq_poly_compose_mod_brent_kung_precomp_preinv", "lenhinv"], [51, 1, 1, "c._fq_poly_compose_mod_brent_kung_precomp_preinv", "res"]], "_fq_poly_compose_mod_brent_kung_preinv": [[51, 1, 1, "c._fq_poly_compose_mod_brent_kung_preinv", "ctx"], [51, 1, 1, "c._fq_poly_compose_mod_brent_kung_preinv", "f"], [51, 1, 1, "c._fq_poly_compose_mod_brent_kung_preinv", "g"], [51, 1, 1, "c._fq_poly_compose_mod_brent_kung_preinv", "h"], [51, 1, 1, "c._fq_poly_compose_mod_brent_kung_preinv", "hinv"], [51, 1, 1, "c._fq_poly_compose_mod_brent_kung_preinv", "lenf"], [51, 1, 1, "c._fq_poly_compose_mod_brent_kung_preinv", "lenh"], [51, 1, 1, "c._fq_poly_compose_mod_brent_kung_preinv", "lenhiv"], [51, 1, 1, "c._fq_poly_compose_mod_brent_kung_preinv", "res"]], "_fq_poly_compose_mod_horner": [[51, 1, 1, "c._fq_poly_compose_mod_horner", "ctx"], [51, 1, 1, "c._fq_poly_compose_mod_horner", "f"], [51, 1, 1, "c._fq_poly_compose_mod_horner", "g"], [51, 1, 1, "c._fq_poly_compose_mod_horner", "h"], [51, 1, 1, "c._fq_poly_compose_mod_horner", "lenf"], [51, 1, 1, "c._fq_poly_compose_mod_horner", "lenh"], [51, 1, 1, "c._fq_poly_compose_mod_horner", "res"]], "_fq_poly_compose_mod_horner_preinv": [[51, 1, 1, "c._fq_poly_compose_mod_horner_preinv", "ctx"], [51, 1, 1, "c._fq_poly_compose_mod_horner_preinv", "f"], [51, 1, 1, "c._fq_poly_compose_mod_horner_preinv", "g"], [51, 1, 1, "c._fq_poly_compose_mod_horner_preinv", "h"], [51, 1, 1, "c._fq_poly_compose_mod_horner_preinv", "hinv"], [51, 1, 1, "c._fq_poly_compose_mod_horner_preinv", "lenf"], [51, 1, 1, "c._fq_poly_compose_mod_horner_preinv", "lenh"], [51, 1, 1, "c._fq_poly_compose_mod_horner_preinv", "lenhiv"], [51, 1, 1, "c._fq_poly_compose_mod_horner_preinv", "res"]], "_fq_poly_compose_mod_preinv": [[51, 1, 1, "c._fq_poly_compose_mod_preinv", "ctx"], [51, 1, 1, "c._fq_poly_compose_mod_preinv", "f"], [51, 1, 1, "c._fq_poly_compose_mod_preinv", "g"], [51, 1, 1, "c._fq_poly_compose_mod_preinv", "h"], [51, 1, 1, "c._fq_poly_compose_mod_preinv", "hinv"], [51, 1, 1, "c._fq_poly_compose_mod_preinv", "lenf"], [51, 1, 1, "c._fq_poly_compose_mod_preinv", "lenh"], [51, 1, 1, "c._fq_poly_compose_mod_preinv", "lenhiv"], [51, 1, 1, "c._fq_poly_compose_mod_preinv", "res"]], "_fq_poly_derivative": [[51, 1, 1, "c._fq_poly_derivative", "ctx"], [51, 1, 1, "c._fq_poly_derivative", "len"], [51, 1, 1, "c._fq_poly_derivative", "op"], [51, 1, 1, "c._fq_poly_derivative", "rop"]], "_fq_poly_div_basecase": [[51, 1, 1, "c._fq_poly_div_basecase", "A"], [51, 1, 1, "c._fq_poly_div_basecase", "B"], [51, 1, 1, "c._fq_poly_div_basecase", "Q"], [51, 1, 1, "c._fq_poly_div_basecase", "R"], [51, 1, 1, "c._fq_poly_div_basecase", "ctx"], [51, 1, 1, "c._fq_poly_div_basecase", "invB"], [51, 1, 1, "c._fq_poly_div_basecase", "lenA"], [51, 1, 1, "c._fq_poly_div_basecase", "lenB"]], "_fq_poly_div_newton_n_preinv": [[51, 1, 1, "c._fq_poly_div_newton_n_preinv", "A"], [51, 1, 1, "c._fq_poly_div_newton_n_preinv", "B"], [51, 1, 1, "c._fq_poly_div_newton_n_preinv", "Binv"], [51, 1, 1, "c._fq_poly_div_newton_n_preinv", "Q"], [51, 1, 1, "c._fq_poly_div_newton_n_preinv", "ctx_t"], [51, 1, 1, "c._fq_poly_div_newton_n_preinv", "lenA"], [51, 1, 1, "c._fq_poly_div_newton_n_preinv", "lenB"], [51, 1, 1, "c._fq_poly_div_newton_n_preinv", "lenBinv"]], "_fq_poly_div_series": [[51, 1, 1, "c._fq_poly_div_series", "A"], [51, 1, 1, "c._fq_poly_div_series", "Alen"], [51, 1, 1, "c._fq_poly_div_series", "B"], [51, 1, 1, "c._fq_poly_div_series", "Blen"], [51, 1, 1, "c._fq_poly_div_series", "Q"], [51, 1, 1, "c._fq_poly_div_series", "ctx"], [51, 1, 1, "c._fq_poly_div_series", "n"]], "_fq_poly_divides": [[51, 1, 1, "c._fq_poly_divides", "A"], [51, 1, 1, "c._fq_poly_divides", "B"], [51, 1, 1, "c._fq_poly_divides", "Q"], [51, 1, 1, "c._fq_poly_divides", "ctx"], [51, 1, 1, "c._fq_poly_divides", "invB"], [51, 1, 1, "c._fq_poly_divides", "lenA"], [51, 1, 1, "c._fq_poly_divides", "lenB"]], "_fq_poly_divrem": [[51, 1, 1, "c._fq_poly_divrem", "A"], [51, 1, 1, "c._fq_poly_divrem", "B"], [51, 1, 1, "c._fq_poly_divrem", "Q"], [51, 1, 1, "c._fq_poly_divrem", "R"], [51, 1, 1, "c._fq_poly_divrem", "ctx"], [51, 1, 1, "c._fq_poly_divrem", "invB"], [51, 1, 1, "c._fq_poly_divrem", "lenA"], [51, 1, 1, "c._fq_poly_divrem", "lenB"]], "_fq_poly_divrem_basecase": [[51, 1, 1, "c._fq_poly_divrem_basecase", "A"], [51, 1, 1, "c._fq_poly_divrem_basecase", "B"], [51, 1, 1, "c._fq_poly_divrem_basecase", "Q"], [51, 1, 1, "c._fq_poly_divrem_basecase", "R"], [51, 1, 1, "c._fq_poly_divrem_basecase", "ctx"], [51, 1, 1, "c._fq_poly_divrem_basecase", "invB"], [51, 1, 1, "c._fq_poly_divrem_basecase", "lenA"], [51, 1, 1, "c._fq_poly_divrem_basecase", "lenB"]], "_fq_poly_divrem_divconquer": [[51, 1, 1, "c._fq_poly_divrem_divconquer", "A"], [51, 1, 1, "c._fq_poly_divrem_divconquer", "B"], [51, 1, 1, "c._fq_poly_divrem_divconquer", "Q"], [51, 1, 1, "c._fq_poly_divrem_divconquer", "R"], [51, 1, 1, "c._fq_poly_divrem_divconquer", "ctx"], [51, 1, 1, "c._fq_poly_divrem_divconquer", "invB"], [51, 1, 1, "c._fq_poly_divrem_divconquer", "lenA"], [51, 1, 1, "c._fq_poly_divrem_divconquer", "lenB"]], "_fq_poly_divrem_divconquer_recursive": [[51, 1, 1, "c._fq_poly_divrem_divconquer_recursive", "A"], [51, 1, 1, "c._fq_poly_divrem_divconquer_recursive", "B"], [51, 1, 1, "c._fq_poly_divrem_divconquer_recursive", "BQ"], [51, 1, 1, "c._fq_poly_divrem_divconquer_recursive", "Q"], [51, 1, 1, "c._fq_poly_divrem_divconquer_recursive", "W"], [51, 1, 1, "c._fq_poly_divrem_divconquer_recursive", "ctx"], [51, 1, 1, "c._fq_poly_divrem_divconquer_recursive", "invB"], [51, 1, 1, "c._fq_poly_divrem_divconquer_recursive", "lenB"]], "_fq_poly_divrem_newton_n_preinv": [[51, 1, 1, "c._fq_poly_divrem_newton_n_preinv", "A"], [51, 1, 1, "c._fq_poly_divrem_newton_n_preinv", "B"], [51, 1, 1, "c._fq_poly_divrem_newton_n_preinv", "Binv"], [51, 1, 1, "c._fq_poly_divrem_newton_n_preinv", "Q"], [51, 1, 1, "c._fq_poly_divrem_newton_n_preinv", "R"], [51, 1, 1, "c._fq_poly_divrem_newton_n_preinv", "ctx"], [51, 1, 1, "c._fq_poly_divrem_newton_n_preinv", "lenA"], [51, 1, 1, "c._fq_poly_divrem_newton_n_preinv", "lenB"], [51, 1, 1, "c._fq_poly_divrem_newton_n_preinv", "lenBinv"]], "_fq_poly_evaluate_fq": [[51, 1, 1, "c._fq_poly_evaluate_fq", "a"], [51, 1, 1, "c._fq_poly_evaluate_fq", "ctx"], [51, 1, 1, "c._fq_poly_evaluate_fq", "len"], [51, 1, 1, "c._fq_poly_evaluate_fq", "op"], [51, 1, 1, "c._fq_poly_evaluate_fq", "rop"]], "_fq_poly_fprint": [[51, 1, 1, "c._fq_poly_fprint", "ctx"], [51, 1, 1, "c._fq_poly_fprint", "file"], [51, 1, 1, "c._fq_poly_fprint", "len"], [51, 1, 1, "c._fq_poly_fprint", "poly"]], "_fq_poly_fprint_pretty": [[51, 1, 1, "c._fq_poly_fprint_pretty", "ctx"], [51, 1, 1, "c._fq_poly_fprint_pretty", "file"], [51, 1, 1, "c._fq_poly_fprint_pretty", "len"], [51, 1, 1, "c._fq_poly_fprint_pretty", "poly"], [51, 1, 1, "c._fq_poly_fprint_pretty", "x"]], "_fq_poly_gcd": [[51, 1, 1, "c._fq_poly_gcd", "A"], [51, 1, 1, "c._fq_poly_gcd", "B"], [51, 1, 1, "c._fq_poly_gcd", "G"], [51, 1, 1, "c._fq_poly_gcd", "ctx"], [51, 1, 1, "c._fq_poly_gcd", "lenA"], [51, 1, 1, "c._fq_poly_gcd", "lenB"]], "_fq_poly_gcd_euclidean": [[51, 1, 1, "c._fq_poly_gcd_euclidean", "A"], [51, 1, 1, "c._fq_poly_gcd_euclidean", "B"], [51, 1, 1, "c._fq_poly_gcd_euclidean", "G"], [51, 1, 1, "c._fq_poly_gcd_euclidean", "ctx"], [51, 1, 1, "c._fq_poly_gcd_euclidean", "lenA"], [51, 1, 1, "c._fq_poly_gcd_euclidean", "lenB"]], "_fq_poly_gcd_euclidean_f": [[51, 1, 1, "c._fq_poly_gcd_euclidean_f", "A"], [51, 1, 1, "c._fq_poly_gcd_euclidean_f", "B"], [51, 1, 1, "c._fq_poly_gcd_euclidean_f", "G"], [51, 1, 1, "c._fq_poly_gcd_euclidean_f", "ctx"], [51, 1, 1, "c._fq_poly_gcd_euclidean_f", "f"], [51, 1, 1, "c._fq_poly_gcd_euclidean_f", "lenA"], [51, 1, 1, "c._fq_poly_gcd_euclidean_f", "lenB"]], "_fq_poly_gcd_hgcd": [[51, 1, 1, "c._fq_poly_gcd_hgcd", "A"], [51, 1, 1, "c._fq_poly_gcd_hgcd", "B"], [51, 1, 1, "c._fq_poly_gcd_hgcd", "G"], [51, 1, 1, "c._fq_poly_gcd_hgcd", "ctx"], [51, 1, 1, "c._fq_poly_gcd_hgcd", "lenA"], [51, 1, 1, "c._fq_poly_gcd_hgcd", "lenB"]], "_fq_poly_get_str": [[51, 1, 1, "c._fq_poly_get_str", "ctx"], [51, 1, 1, "c._fq_poly_get_str", "len"], [51, 1, 1, "c._fq_poly_get_str", "poly"]], "_fq_poly_get_str_pretty": [[51, 1, 1, "c._fq_poly_get_str_pretty", "ctx"], [51, 1, 1, "c._fq_poly_get_str_pretty", "len"], [51, 1, 1, "c._fq_poly_get_str_pretty", "poly"], [51, 1, 1, "c._fq_poly_get_str_pretty", "x"]], "_fq_poly_hamming_weight": [[51, 1, 1, "c._fq_poly_hamming_weight", "ctx"], [51, 1, 1, "c._fq_poly_hamming_weight", "len"], [51, 1, 1, "c._fq_poly_hamming_weight", "op"]], "_fq_poly_hgcd": [[51, 1, 1, "c._fq_poly_hgcd", "A"], [51, 1, 1, "c._fq_poly_hgcd", "B"], [51, 1, 1, "c._fq_poly_hgcd", "M"], [51, 1, 1, "c._fq_poly_hgcd", "a"], [51, 1, 1, "c._fq_poly_hgcd", "b"], [51, 1, 1, "c._fq_poly_hgcd", "ctx"], [51, 1, 1, "c._fq_poly_hgcd", "lenA"], [51, 1, 1, "c._fq_poly_hgcd", "lenB"], [51, 1, 1, "c._fq_poly_hgcd", "lenM"], [51, 1, 1, "c._fq_poly_hgcd", "lena"], [51, 1, 1, "c._fq_poly_hgcd", "lenb"]], "_fq_poly_inv_series": [[51, 1, 1, "c._fq_poly_inv_series", "Q"], [51, 1, 1, "c._fq_poly_inv_series", "Qinv"], [51, 1, 1, "c._fq_poly_inv_series", "ctx"], [51, 1, 1, "c._fq_poly_inv_series", "n"]], "_fq_poly_inv_series_newton": [[51, 1, 1, "c._fq_poly_inv_series_newton", "Q"], [51, 1, 1, "c._fq_poly_inv_series_newton", "Qinv"], [51, 1, 1, "c._fq_poly_inv_series_newton", "ctx"], [51, 1, 1, "c._fq_poly_inv_series_newton", "n"]], "_fq_poly_invsqrt_series": [[51, 1, 1, "c._fq_poly_invsqrt_series", "g"], [51, 1, 1, "c._fq_poly_invsqrt_series", "h"], [51, 1, 1, "c._fq_poly_invsqrt_series", "mod"], [51, 1, 1, "c._fq_poly_invsqrt_series", "n"]], "_fq_poly_is_squarefree": [[52, 1, 1, "c._fq_poly_is_squarefree", "ctx"], [52, 1, 1, "c._fq_poly_is_squarefree", "f"], [52, 1, 1, "c._fq_poly_is_squarefree", "len"]], "_fq_poly_make_monic": [[51, 1, 1, "c._fq_poly_make_monic", "ctx"], [51, 1, 1, "c._fq_poly_make_monic", "length"], [51, 1, 1, "c._fq_poly_make_monic", "op"], [51, 1, 1, "c._fq_poly_make_monic", "rop"]], "_fq_poly_mul": [[51, 1, 1, "c._fq_poly_mul", "ctx"], [51, 1, 1, "c._fq_poly_mul", "len1"], [51, 1, 1, "c._fq_poly_mul", "len2"], [51, 1, 1, "c._fq_poly_mul", "op1"], [51, 1, 1, "c._fq_poly_mul", "op2"], [51, 1, 1, "c._fq_poly_mul", "rop"]], "_fq_poly_mul_KS": [[51, 1, 1, "c._fq_poly_mul_KS", "ctx"], [51, 1, 1, "c._fq_poly_mul_KS", "len1"], [51, 1, 1, "c._fq_poly_mul_KS", "len2"], [51, 1, 1, "c._fq_poly_mul_KS", "op1"], [51, 1, 1, "c._fq_poly_mul_KS", "op2"], [51, 1, 1, "c._fq_poly_mul_KS", "rop"]], "_fq_poly_mul_classical": [[51, 1, 1, "c._fq_poly_mul_classical", "ctx"], [51, 1, 1, "c._fq_poly_mul_classical", "len1"], [51, 1, 1, "c._fq_poly_mul_classical", "len2"], [51, 1, 1, "c._fq_poly_mul_classical", "op1"], [51, 1, 1, "c._fq_poly_mul_classical", "op2"], [51, 1, 1, "c._fq_poly_mul_classical", "rop"]], "_fq_poly_mul_reorder": [[51, 1, 1, "c._fq_poly_mul_reorder", "ctx"], [51, 1, 1, "c._fq_poly_mul_reorder", "len1"], [51, 1, 1, "c._fq_poly_mul_reorder", "len2"], [51, 1, 1, "c._fq_poly_mul_reorder", "op1"], [51, 1, 1, "c._fq_poly_mul_reorder", "op2"], [51, 1, 1, "c._fq_poly_mul_reorder", "rop"]], "_fq_poly_mul_univariate": [[51, 1, 1, "c._fq_poly_mul_univariate", "ctx"], [51, 1, 1, "c._fq_poly_mul_univariate", "len1"], [51, 1, 1, "c._fq_poly_mul_univariate", "len2"], [51, 1, 1, "c._fq_poly_mul_univariate", "op1"], [51, 1, 1, "c._fq_poly_mul_univariate", "op2"], [51, 1, 1, "c._fq_poly_mul_univariate", "rop"]], "_fq_poly_mulhigh": [[51, 1, 1, "c._fq_poly_mulhigh", "ctx"], [51, 1, 1, "c._fq_poly_mulhigh", "len1"], [51, 1, 1, "c._fq_poly_mulhigh", "len2"], [51, 1, 1, "c._fq_poly_mulhigh", "poly1"], [51, 1, 1, "c._fq_poly_mulhigh", "poly2"], [51, 1, 1, "c._fq_poly_mulhigh", "res"], [51, 1, 1, "c._fq_poly_mulhigh", "start"]], "_fq_poly_mulhigh_classical": [[51, 1, 1, "c._fq_poly_mulhigh_classical", "ctx"], [51, 1, 1, "c._fq_poly_mulhigh_classical", "len1"], [51, 1, 1, "c._fq_poly_mulhigh_classical", "len2"], [51, 1, 1, "c._fq_poly_mulhigh_classical", "poly1"], [51, 1, 1, "c._fq_poly_mulhigh_classical", "poly2"], [51, 1, 1, "c._fq_poly_mulhigh_classical", "res"], [51, 1, 1, "c._fq_poly_mulhigh_classical", "start"]], "_fq_poly_mullow": [[51, 1, 1, "c._fq_poly_mullow", "ctx"], [51, 1, 1, "c._fq_poly_mullow", "len1"], [51, 1, 1, "c._fq_poly_mullow", "len2"], [51, 1, 1, "c._fq_poly_mullow", "n"], [51, 1, 1, "c._fq_poly_mullow", "op1"], [51, 1, 1, "c._fq_poly_mullow", "op2"], [51, 1, 1, "c._fq_poly_mullow", "rop"]], "_fq_poly_mullow_KS": [[51, 1, 1, "c._fq_poly_mullow_KS", "ctx"], [51, 1, 1, "c._fq_poly_mullow_KS", "len1"], [51, 1, 1, "c._fq_poly_mullow_KS", "len2"], [51, 1, 1, "c._fq_poly_mullow_KS", "n"], [51, 1, 1, "c._fq_poly_mullow_KS", "op1"], [51, 1, 1, "c._fq_poly_mullow_KS", "op2"], [51, 1, 1, "c._fq_poly_mullow_KS", "rop"]], "_fq_poly_mullow_classical": [[51, 1, 1, "c._fq_poly_mullow_classical", "ctx"], [51, 1, 1, "c._fq_poly_mullow_classical", "len1"], [51, 1, 1, "c._fq_poly_mullow_classical", "len2"], [51, 1, 1, "c._fq_poly_mullow_classical", "n"], [51, 1, 1, "c._fq_poly_mullow_classical", "op1"], [51, 1, 1, "c._fq_poly_mullow_classical", "op2"], [51, 1, 1, "c._fq_poly_mullow_classical", "rop"]], "_fq_poly_mullow_univariate": [[51, 1, 1, "c._fq_poly_mullow_univariate", "ctx"], [51, 1, 1, "c._fq_poly_mullow_univariate", "len1"], [51, 1, 1, "c._fq_poly_mullow_univariate", "len2"], [51, 1, 1, "c._fq_poly_mullow_univariate", "n"], [51, 1, 1, "c._fq_poly_mullow_univariate", "op1"], [51, 1, 1, "c._fq_poly_mullow_univariate", "op2"], [51, 1, 1, "c._fq_poly_mullow_univariate", "rop"]], "_fq_poly_mulmod": [[51, 1, 1, "c._fq_poly_mulmod", "ctx"], [51, 1, 1, "c._fq_poly_mulmod", "f"], [51, 1, 1, "c._fq_poly_mulmod", "len1"], [51, 1, 1, "c._fq_poly_mulmod", "len2"], [51, 1, 1, "c._fq_poly_mulmod", "lenf"], [51, 1, 1, "c._fq_poly_mulmod", "poly1"], [51, 1, 1, "c._fq_poly_mulmod", "poly2"], [51, 1, 1, "c._fq_poly_mulmod", "res"]], "_fq_poly_mulmod_preinv": [[51, 1, 1, "c._fq_poly_mulmod_preinv", "ctx"], [51, 1, 1, "c._fq_poly_mulmod_preinv", "f"], [51, 1, 1, "c._fq_poly_mulmod_preinv", "finv"], [51, 1, 1, "c._fq_poly_mulmod_preinv", "len1"], [51, 1, 1, "c._fq_poly_mulmod_preinv", "len2"], [51, 1, 1, "c._fq_poly_mulmod_preinv", "lenf"], [51, 1, 1, "c._fq_poly_mulmod_preinv", "lenfinv"], [51, 1, 1, "c._fq_poly_mulmod_preinv", "poly1"], [51, 1, 1, "c._fq_poly_mulmod_preinv", "poly2"], [51, 1, 1, "c._fq_poly_mulmod_preinv", "res"]], "_fq_poly_neg": [[51, 1, 1, "c._fq_poly_neg", "ctx"], [51, 1, 1, "c._fq_poly_neg", "len"], [51, 1, 1, "c._fq_poly_neg", "op"], [51, 1, 1, "c._fq_poly_neg", "rop"]], "_fq_poly_normalise": [[51, 1, 1, "c._fq_poly_normalise", "ctx"], [51, 1, 1, "c._fq_poly_normalise", "poly"]], "_fq_poly_normalise2": [[51, 1, 1, "c._fq_poly_normalise2", "ctx"], [51, 1, 1, "c._fq_poly_normalise2", "length"], [51, 1, 1, "c._fq_poly_normalise2", "poly"]], "_fq_poly_pow": [[51, 1, 1, "c._fq_poly_pow", "ctx"], [51, 1, 1, "c._fq_poly_pow", "e"], [51, 1, 1, "c._fq_poly_pow", "len"], [51, 1, 1, "c._fq_poly_pow", "op"], [51, 1, 1, "c._fq_poly_pow", "rop"]], "_fq_poly_pow_trunc": [[51, 1, 1, "c._fq_poly_pow_trunc", "e"], [51, 1, 1, "c._fq_poly_pow_trunc", "mod"], [51, 1, 1, "c._fq_poly_pow_trunc", "poly"], [51, 1, 1, "c._fq_poly_pow_trunc", "res"], [51, 1, 1, "c._fq_poly_pow_trunc", "trunc"]], "_fq_poly_pow_trunc_binexp": [[51, 1, 1, "c._fq_poly_pow_trunc_binexp", "ctx"], [51, 1, 1, "c._fq_poly_pow_trunc_binexp", "e"], [51, 1, 1, "c._fq_poly_pow_trunc_binexp", "poly"], [51, 1, 1, "c._fq_poly_pow_trunc_binexp", "res"], [51, 1, 1, "c._fq_poly_pow_trunc_binexp", "trunc"]], "_fq_poly_powmod_fmpz_binexp": [[51, 1, 1, "c._fq_poly_powmod_fmpz_binexp", "ctx"], [51, 1, 1, "c._fq_poly_powmod_fmpz_binexp", "e"], [51, 1, 1, "c._fq_poly_powmod_fmpz_binexp", "f"], [51, 1, 1, "c._fq_poly_powmod_fmpz_binexp", "lenf"], [51, 1, 1, "c._fq_poly_powmod_fmpz_binexp", "poly"], [51, 1, 1, "c._fq_poly_powmod_fmpz_binexp", "res"]], "_fq_poly_powmod_fmpz_binexp_preinv": [[51, 1, 1, "c._fq_poly_powmod_fmpz_binexp_preinv", "ctx"], [51, 1, 1, "c._fq_poly_powmod_fmpz_binexp_preinv", "e"], [51, 1, 1, "c._fq_poly_powmod_fmpz_binexp_preinv", "f"], [51, 1, 1, "c._fq_poly_powmod_fmpz_binexp_preinv", "finv"], [51, 1, 1, "c._fq_poly_powmod_fmpz_binexp_preinv", "lenf"], [51, 1, 1, "c._fq_poly_powmod_fmpz_binexp_preinv", "lenfinv"], [51, 1, 1, "c._fq_poly_powmod_fmpz_binexp_preinv", "poly"], [51, 1, 1, "c._fq_poly_powmod_fmpz_binexp_preinv", "res"]], "_fq_poly_powmod_fmpz_sliding_preinv": [[51, 1, 1, "c._fq_poly_powmod_fmpz_sliding_preinv", "ctx"], [51, 1, 1, "c._fq_poly_powmod_fmpz_sliding_preinv", "e"], [51, 1, 1, "c._fq_poly_powmod_fmpz_sliding_preinv", "f"], [51, 1, 1, "c._fq_poly_powmod_fmpz_sliding_preinv", "finv"], [51, 1, 1, "c._fq_poly_powmod_fmpz_sliding_preinv", "k"], [51, 1, 1, "c._fq_poly_powmod_fmpz_sliding_preinv", "lenf"], [51, 1, 1, "c._fq_poly_powmod_fmpz_sliding_preinv", "lenfinv"], [51, 1, 1, "c._fq_poly_powmod_fmpz_sliding_preinv", "poly"], [51, 1, 1, "c._fq_poly_powmod_fmpz_sliding_preinv", "res"]], "_fq_poly_powmod_ui_binexp": [[51, 1, 1, "c._fq_poly_powmod_ui_binexp", "ctx"], [51, 1, 1, "c._fq_poly_powmod_ui_binexp", "e"], [51, 1, 1, "c._fq_poly_powmod_ui_binexp", "f"], [51, 1, 1, "c._fq_poly_powmod_ui_binexp", "lenf"], [51, 1, 1, "c._fq_poly_powmod_ui_binexp", "poly"], [51, 1, 1, "c._fq_poly_powmod_ui_binexp", "res"]], "_fq_poly_powmod_ui_binexp_preinv": [[51, 1, 1, "c._fq_poly_powmod_ui_binexp_preinv", "ctx"], [51, 1, 1, "c._fq_poly_powmod_ui_binexp_preinv", "e"], [51, 1, 1, "c._fq_poly_powmod_ui_binexp_preinv", "f"], [51, 1, 1, "c._fq_poly_powmod_ui_binexp_preinv", "finv"], [51, 1, 1, "c._fq_poly_powmod_ui_binexp_preinv", "lenf"], [51, 1, 1, "c._fq_poly_powmod_ui_binexp_preinv", "lenfinv"], [51, 1, 1, "c._fq_poly_powmod_ui_binexp_preinv", "poly"], [51, 1, 1, "c._fq_poly_powmod_ui_binexp_preinv", "res"]], "_fq_poly_powmod_x_fmpz_preinv": [[51, 1, 1, "c._fq_poly_powmod_x_fmpz_preinv", "ctx"], [51, 1, 1, "c._fq_poly_powmod_x_fmpz_preinv", "e"], [51, 1, 1, "c._fq_poly_powmod_x_fmpz_preinv", "f"], [51, 1, 1, "c._fq_poly_powmod_x_fmpz_preinv", "finv"], [51, 1, 1, "c._fq_poly_powmod_x_fmpz_preinv", "lenf"], [51, 1, 1, "c._fq_poly_powmod_x_fmpz_preinv", "lenfinv"], [51, 1, 1, "c._fq_poly_powmod_x_fmpz_preinv", "res"]], "_fq_poly_precompute_matrix": [[51, 1, 1, "c._fq_poly_precompute_matrix", "A"], [51, 1, 1, "c._fq_poly_precompute_matrix", "ctx"], [51, 1, 1, "c._fq_poly_precompute_matrix", "f"], [51, 1, 1, "c._fq_poly_precompute_matrix", "g"], [51, 1, 1, "c._fq_poly_precompute_matrix", "ginv"], [51, 1, 1, "c._fq_poly_precompute_matrix", "leng"], [51, 1, 1, "c._fq_poly_precompute_matrix", "lenginv"]], "_fq_poly_print": [[51, 1, 1, "c._fq_poly_print", "ctx"], [51, 1, 1, "c._fq_poly_print", "len"], [51, 1, 1, "c._fq_poly_print", "poly"]], "_fq_poly_print_pretty": [[51, 1, 1, "c._fq_poly_print_pretty", "ctx"], [51, 1, 1, "c._fq_poly_print_pretty", "len"], [51, 1, 1, "c._fq_poly_print_pretty", "poly"], [51, 1, 1, "c._fq_poly_print_pretty", "x"]], "_fq_poly_reduce_matrix_mod_poly": [[51, 1, 1, "c._fq_poly_reduce_matrix_mod_poly", "A"], [51, 1, 1, "c._fq_poly_reduce_matrix_mod_poly", "B"], [51, 1, 1, "c._fq_poly_reduce_matrix_mod_poly", "ctx"], [51, 1, 1, "c._fq_poly_reduce_matrix_mod_poly", "f"]], "_fq_poly_rem": [[51, 1, 1, "c._fq_poly_rem", "A"], [51, 1, 1, "c._fq_poly_rem", "B"], [51, 1, 1, "c._fq_poly_rem", "R"], [51, 1, 1, "c._fq_poly_rem", "ctx"], [51, 1, 1, "c._fq_poly_rem", "invB"], [51, 1, 1, "c._fq_poly_rem", "lenA"], [51, 1, 1, "c._fq_poly_rem", "lenB"]], "_fq_poly_reverse": [[51, 1, 1, "c._fq_poly_reverse", "ctx"], [51, 1, 1, "c._fq_poly_reverse", "input"], [51, 1, 1, "c._fq_poly_reverse", "len"], [51, 1, 1, "c._fq_poly_reverse", "m"], [51, 1, 1, "c._fq_poly_reverse", "output"]], "_fq_poly_scalar_addmul_fq": [[51, 1, 1, "c._fq_poly_scalar_addmul_fq", "ctx"], [51, 1, 1, "c._fq_poly_scalar_addmul_fq", "len"], [51, 1, 1, "c._fq_poly_scalar_addmul_fq", "op"], [51, 1, 1, "c._fq_poly_scalar_addmul_fq", "rop"], [51, 1, 1, "c._fq_poly_scalar_addmul_fq", "x"]], "_fq_poly_scalar_div_fq": [[51, 1, 1, "c._fq_poly_scalar_div_fq", "ctx"], [51, 1, 1, "c._fq_poly_scalar_div_fq", "len"], [51, 1, 1, "c._fq_poly_scalar_div_fq", "op"], [51, 1, 1, "c._fq_poly_scalar_div_fq", "rop"], [51, 1, 1, "c._fq_poly_scalar_div_fq", "x"]], "_fq_poly_scalar_mul_fq": [[51, 1, 1, "c._fq_poly_scalar_mul_fq", "ctx"], [51, 1, 1, "c._fq_poly_scalar_mul_fq", "len"], [51, 1, 1, "c._fq_poly_scalar_mul_fq", "op"], [51, 1, 1, "c._fq_poly_scalar_mul_fq", "rop"], [51, 1, 1, "c._fq_poly_scalar_mul_fq", "x"]], "_fq_poly_scalar_submul_fq": [[51, 1, 1, "c._fq_poly_scalar_submul_fq", "ctx"], [51, 1, 1, "c._fq_poly_scalar_submul_fq", "len"], [51, 1, 1, "c._fq_poly_scalar_submul_fq", "op"], [51, 1, 1, "c._fq_poly_scalar_submul_fq", "rop"], [51, 1, 1, "c._fq_poly_scalar_submul_fq", "x"]], "_fq_poly_set": [[51, 1, 1, "c._fq_poly_set", "ctx"], [51, 1, 1, "c._fq_poly_set", "len"], [51, 1, 1, "c._fq_poly_set", "op"], [51, 1, 1, "c._fq_poly_set", "rop"]], "_fq_poly_set_length": [[51, 1, 1, "c._fq_poly_set_length", "ctx"], [51, 1, 1, "c._fq_poly_set_length", "newlen"], [51, 1, 1, "c._fq_poly_set_length", "poly"]], "_fq_poly_shift_left": [[51, 1, 1, "c._fq_poly_shift_left", "ctx"], [51, 1, 1, "c._fq_poly_shift_left", "len"], [51, 1, 1, "c._fq_poly_shift_left", "n"], [51, 1, 1, "c._fq_poly_shift_left", "op"], [51, 1, 1, "c._fq_poly_shift_left", "rop"]], "_fq_poly_shift_right": [[51, 1, 1, "c._fq_poly_shift_right", "ctx"], [51, 1, 1, "c._fq_poly_shift_right", "len"], [51, 1, 1, "c._fq_poly_shift_right", "n"], [51, 1, 1, "c._fq_poly_shift_right", "op"], [51, 1, 1, "c._fq_poly_shift_right", "rop"]], "_fq_poly_sqr": [[51, 1, 1, "c._fq_poly_sqr", "ctx"], [51, 1, 1, "c._fq_poly_sqr", "len"], [51, 1, 1, "c._fq_poly_sqr", "op"], [51, 1, 1, "c._fq_poly_sqr", "rop"]], "_fq_poly_sqr_KS": [[51, 1, 1, "c._fq_poly_sqr_KS", "ctx"], [51, 1, 1, "c._fq_poly_sqr_KS", "len"], [51, 1, 1, "c._fq_poly_sqr_KS", "op"], [51, 1, 1, "c._fq_poly_sqr_KS", "rop"]], "_fq_poly_sqr_classical": [[51, 1, 1, "c._fq_poly_sqr_classical", "ctx"], [51, 1, 1, "c._fq_poly_sqr_classical", "len"], [51, 1, 1, "c._fq_poly_sqr_classical", "op"], [51, 1, 1, "c._fq_poly_sqr_classical", "rop"]], "_fq_poly_sqr_reorder": [[51, 1, 1, "c._fq_poly_sqr_reorder", "ctx"], [51, 1, 1, "c._fq_poly_sqr_reorder", "len"], [51, 1, 1, "c._fq_poly_sqr_reorder", "op"], [51, 1, 1, "c._fq_poly_sqr_reorder", "rop"]], "_fq_poly_sqrt": [[51, 1, 1, "c._fq_poly_sqrt", "mod"], [51, 1, 1, "c._fq_poly_sqrt", "n"], [51, 1, 1, "c._fq_poly_sqrt", "p"], [51, 1, 1, "c._fq_poly_sqrt", "s"]], "_fq_poly_sqrt_series": [[51, 1, 1, "c._fq_poly_sqrt_series", "ctx"], [51, 1, 1, "c._fq_poly_sqrt_series", "g"], [51, 1, 1, "c._fq_poly_sqrt_series", "h"], [51, 1, 1, "c._fq_poly_sqrt_series", "n"]], "_fq_poly_sub": [[51, 1, 1, "c._fq_poly_sub", "ctx"], [51, 1, 1, "c._fq_poly_sub", "len1"], [51, 1, 1, "c._fq_poly_sub", "len2"], [51, 1, 1, "c._fq_poly_sub", "poly1"], [51, 1, 1, "c._fq_poly_sub", "poly2"], [51, 1, 1, "c._fq_poly_sub", "res"]], "_fq_poly_xgcd": [[51, 1, 1, "c._fq_poly_xgcd", "A"], [51, 1, 1, "c._fq_poly_xgcd", "B"], [51, 1, 1, "c._fq_poly_xgcd", "G"], [51, 1, 1, "c._fq_poly_xgcd", "S"], [51, 1, 1, "c._fq_poly_xgcd", "T"], [51, 1, 1, "c._fq_poly_xgcd", "ctx"], [51, 1, 1, "c._fq_poly_xgcd", "invB"], [51, 1, 1, "c._fq_poly_xgcd", "lenA"], [51, 1, 1, "c._fq_poly_xgcd", "lenB"]], "_fq_poly_xgcd_euclidean": [[51, 1, 1, "c._fq_poly_xgcd_euclidean", "A"], [51, 1, 1, "c._fq_poly_xgcd_euclidean", "B"], [51, 1, 1, "c._fq_poly_xgcd_euclidean", "G"], [51, 1, 1, "c._fq_poly_xgcd_euclidean", "S"], [51, 1, 1, "c._fq_poly_xgcd_euclidean", "T"], [51, 1, 1, "c._fq_poly_xgcd_euclidean", "ctx"], [51, 1, 1, "c._fq_poly_xgcd_euclidean", "invB"], [51, 1, 1, "c._fq_poly_xgcd_euclidean", "lenA"], [51, 1, 1, "c._fq_poly_xgcd_euclidean", "lenB"]], "_fq_poly_xgcd_euclidean_f": [[51, 1, 1, "c._fq_poly_xgcd_euclidean_f", "A"], [51, 1, 1, "c._fq_poly_xgcd_euclidean_f", "B"], [51, 1, 1, "c._fq_poly_xgcd_euclidean_f", "G"], [51, 1, 1, "c._fq_poly_xgcd_euclidean_f", "S"], [51, 1, 1, "c._fq_poly_xgcd_euclidean_f", "T"], [51, 1, 1, "c._fq_poly_xgcd_euclidean_f", "ctx"], [51, 1, 1, "c._fq_poly_xgcd_euclidean_f", "f"], [51, 1, 1, "c._fq_poly_xgcd_euclidean_f", "invB"], [51, 1, 1, "c._fq_poly_xgcd_euclidean_f", "lenA"], [51, 1, 1, "c._fq_poly_xgcd_euclidean_f", "lenB"]], "_fq_poly_zero": [[51, 1, 1, "c._fq_poly_zero", "ctx"], [51, 1, 1, "c._fq_poly_zero", "len"], [51, 1, 1, "c._fq_poly_zero", "rop"]], "_fq_pow": [[36, 1, 1, "c._fq_pow", "ctx"], [36, 1, 1, "c._fq_pow", "e"], [36, 1, 1, "c._fq_pow", "len"], [36, 1, 1, "c._fq_pow", "op"], [36, 1, 1, "c._fq_pow", "rop"]], "_fq_reduce": [[36, 1, 1, "c._fq_reduce", "ctx"], [36, 1, 1, "c._fq_reduce", "lenR"], [36, 1, 1, "c._fq_reduce", "r"]], "_fq_sparse_reduce": [[36, 1, 1, "c._fq_sparse_reduce", "R"], [36, 1, 1, "c._fq_sparse_reduce", "ctx"], [36, 1, 1, "c._fq_sparse_reduce", "lenR"]], "_fq_trace": [[36, 1, 1, "c._fq_trace", "ctx"], [36, 1, 1, "c._fq_trace", "len"], [36, 1, 1, "c._fq_trace", "op"], [36, 1, 1, "c._fq_trace", "rop"]], "_fq_vec_add": [[53, 1, 1, "c._fq_vec_add", "ctx"], [53, 1, 1, "c._fq_vec_add", "len2"], [53, 1, 1, "c._fq_vec_add", "res"], [53, 1, 1, "c._fq_vec_add", "vec1"], [53, 1, 1, "c._fq_vec_add", "vec2"]], "_fq_vec_clear": [[53, 1, 1, "c._fq_vec_clear", "ctx"], [53, 1, 1, "c._fq_vec_clear", "len"], [53, 1, 1, "c._fq_vec_clear", "vec"]], "_fq_vec_dot": [[53, 1, 1, "c._fq_vec_dot", "ctx"], [53, 1, 1, "c._fq_vec_dot", "len2"], [53, 1, 1, "c._fq_vec_dot", "res"], [53, 1, 1, "c._fq_vec_dot", "vec1"], [53, 1, 1, "c._fq_vec_dot", "vec2"]], "_fq_vec_equal": [[53, 1, 1, "c._fq_vec_equal", "ctx"], [53, 1, 1, "c._fq_vec_equal", "len"], [53, 1, 1, "c._fq_vec_equal", "vec1"], [53, 1, 1, "c._fq_vec_equal", "vec2"]], "_fq_vec_fprint": [[53, 1, 1, "c._fq_vec_fprint", "ctx"], [53, 1, 1, "c._fq_vec_fprint", "file"], [53, 1, 1, "c._fq_vec_fprint", "len"], [53, 1, 1, "c._fq_vec_fprint", "vec"]], "_fq_vec_init": [[53, 1, 1, "c._fq_vec_init", "ctx"], [53, 1, 1, "c._fq_vec_init", "len"]], "_fq_vec_is_zero": [[53, 1, 1, "c._fq_vec_is_zero", "len"], [53, 1, 1, "c._fq_vec_is_zero", "vec"]], "_fq_vec_neg": [[53, 1, 1, "c._fq_vec_neg", "ctx"], [53, 1, 1, "c._fq_vec_neg", "len2"], [53, 1, 1, "c._fq_vec_neg", "vec1"], [53, 1, 1, "c._fq_vec_neg", "vec2"]], "_fq_vec_print": [[53, 1, 1, "c._fq_vec_print", "ctx"], [53, 1, 1, "c._fq_vec_print", "len"], [53, 1, 1, "c._fq_vec_print", "vec"]], "_fq_vec_randtest": [[53, 1, 1, "c._fq_vec_randtest", "ctx"], [53, 1, 1, "c._fq_vec_randtest", "f"], [53, 1, 1, "c._fq_vec_randtest", "len"], [53, 1, 1, "c._fq_vec_randtest", "state"]], "_fq_vec_scalar_addmul_fq": [[53, 1, 1, "c._fq_vec_scalar_addmul_fq", "c"], [53, 1, 1, "c._fq_vec_scalar_addmul_fq", "ctx"], [53, 1, 1, "c._fq_vec_scalar_addmul_fq", "len2"], [53, 1, 1, "c._fq_vec_scalar_addmul_fq", "vec1"], [53, 1, 1, "c._fq_vec_scalar_addmul_fq", "vec2"]], "_fq_vec_scalar_submul_fq": [[53, 1, 1, "c._fq_vec_scalar_submul_fq", "c"], [53, 1, 1, "c._fq_vec_scalar_submul_fq", "ctx"], [53, 1, 1, "c._fq_vec_scalar_submul_fq", "len2"], [53, 1, 1, "c._fq_vec_scalar_submul_fq", "vec1"], [53, 1, 1, "c._fq_vec_scalar_submul_fq", "vec2"]], "_fq_vec_set": [[53, 1, 1, "c._fq_vec_set", "ctx"], [53, 1, 1, "c._fq_vec_set", "len2"], [53, 1, 1, "c._fq_vec_set", "vec1"], [53, 1, 1, "c._fq_vec_set", "vec2"]], "_fq_vec_sub": [[53, 1, 1, "c._fq_vec_sub", "ctx"], [53, 1, 1, "c._fq_vec_sub", "len2"], [53, 1, 1, "c._fq_vec_sub", "res"], [53, 1, 1, "c._fq_vec_sub", "vec1"], [53, 1, 1, "c._fq_vec_sub", "vec2"]], "_fq_vec_swap": [[53, 1, 1, "c._fq_vec_swap", "ctx"], [53, 1, 1, "c._fq_vec_swap", "len2"], [53, 1, 1, "c._fq_vec_swap", "vec1"], [53, 1, 1, "c._fq_vec_swap", "vec2"]], "_fq_vec_zero": [[53, 1, 1, "c._fq_vec_zero", "ctx"], [53, 1, 1, "c._fq_vec_zero", "len"], [53, 1, 1, "c._fq_vec_zero", "vec"]], "_fq_zech_ctx_init_conway": [[54, 1, 1, "c._fq_zech_ctx_init_conway", "ctx"], [54, 1, 1, "c._fq_zech_ctx_init_conway", "d"], [54, 1, 1, "c._fq_zech_ctx_init_conway", "p"], [54, 1, 1, "c._fq_zech_ctx_init_conway", "var"]], "_fq_zech_dense_reduce": [[54, 1, 1, "c._fq_zech_dense_reduce", "R"], [54, 1, 1, "c._fq_zech_dense_reduce", "ctx"], [54, 1, 1, "c._fq_zech_dense_reduce", "lenR"]], "_fq_zech_embed_gens_naive": [[55, 1, 1, "c._fq_zech_embed_gens_naive", "gen_sub"], [55, 1, 1, "c._fq_zech_embed_gens_naive", "gen_sup"], [55, 1, 1, "c._fq_zech_embed_gens_naive", "minpoly"], [55, 1, 1, "c._fq_zech_embed_gens_naive", "sub_ctx"], [55, 1, 1, "c._fq_zech_embed_gens_naive", "sup_ctx"]], "_fq_zech_inv": [[54, 1, 1, "c._fq_zech_inv", "ctx"], [54, 1, 1, "c._fq_zech_inv", "len"], [54, 1, 1, "c._fq_zech_inv", "op"], [54, 1, 1, "c._fq_zech_inv", "rop"]], "_fq_zech_poly_add": [[57, 1, 1, "c._fq_zech_poly_add", "ctx"], [57, 1, 1, "c._fq_zech_poly_add", "len1"], [57, 1, 1, "c._fq_zech_poly_add", "len2"], [57, 1, 1, "c._fq_zech_poly_add", "poly1"], [57, 1, 1, "c._fq_zech_poly_add", "poly2"], [57, 1, 1, "c._fq_zech_poly_add", "res"]], "_fq_zech_poly_compose": [[57, 1, 1, "c._fq_zech_poly_compose", "ctx"], [57, 1, 1, "c._fq_zech_poly_compose", "len1"], [57, 1, 1, "c._fq_zech_poly_compose", "len2"], [57, 1, 1, "c._fq_zech_poly_compose", "op1"], [57, 1, 1, "c._fq_zech_poly_compose", "op2"], [57, 1, 1, "c._fq_zech_poly_compose", "rop"]], "_fq_zech_poly_compose_divconquer": [[57, 1, 1, "c._fq_zech_poly_compose_divconquer", "ctx"], [57, 1, 1, "c._fq_zech_poly_compose_divconquer", "len1"], [57, 1, 1, "c._fq_zech_poly_compose_divconquer", "len2"], [57, 1, 1, "c._fq_zech_poly_compose_divconquer", "op1"], [57, 1, 1, "c._fq_zech_poly_compose_divconquer", "op2"], [57, 1, 1, "c._fq_zech_poly_compose_divconquer", "rop"]], "_fq_zech_poly_compose_horner": [[57, 1, 1, "c._fq_zech_poly_compose_horner", "ctx"], [57, 1, 1, "c._fq_zech_poly_compose_horner", "len1"], [57, 1, 1, "c._fq_zech_poly_compose_horner", "len2"], [57, 1, 1, "c._fq_zech_poly_compose_horner", "op1"], [57, 1, 1, "c._fq_zech_poly_compose_horner", "op2"], [57, 1, 1, "c._fq_zech_poly_compose_horner", "rop"]], "_fq_zech_poly_compose_mod": [[57, 1, 1, "c._fq_zech_poly_compose_mod", "ctx"], [57, 1, 1, "c._fq_zech_poly_compose_mod", "f"], [57, 1, 1, "c._fq_zech_poly_compose_mod", "g"], [57, 1, 1, "c._fq_zech_poly_compose_mod", "h"], [57, 1, 1, "c._fq_zech_poly_compose_mod", "lenf"], [57, 1, 1, "c._fq_zech_poly_compose_mod", "lenh"], [57, 1, 1, "c._fq_zech_poly_compose_mod", "res"]], "_fq_zech_poly_compose_mod_brent_kung": [[57, 1, 1, "c._fq_zech_poly_compose_mod_brent_kung", "ctx"], [57, 1, 1, "c._fq_zech_poly_compose_mod_brent_kung", "f"], [57, 1, 1, "c._fq_zech_poly_compose_mod_brent_kung", "g"], [57, 1, 1, "c._fq_zech_poly_compose_mod_brent_kung", "h"], [57, 1, 1, "c._fq_zech_poly_compose_mod_brent_kung", "lenf"], [57, 1, 1, "c._fq_zech_poly_compose_mod_brent_kung", "lenh"], [57, 1, 1, "c._fq_zech_poly_compose_mod_brent_kung", "res"]], "_fq_zech_poly_compose_mod_brent_kung_precomp_preinv": [[57, 1, 1, "c._fq_zech_poly_compose_mod_brent_kung_precomp_preinv", "A"], [57, 1, 1, "c._fq_zech_poly_compose_mod_brent_kung_precomp_preinv", "ctx"], [57, 1, 1, "c._fq_zech_poly_compose_mod_brent_kung_precomp_preinv", "f"], [57, 1, 1, "c._fq_zech_poly_compose_mod_brent_kung_precomp_preinv", "h"], [57, 1, 1, "c._fq_zech_poly_compose_mod_brent_kung_precomp_preinv", "hinv"], [57, 1, 1, "c._fq_zech_poly_compose_mod_brent_kung_precomp_preinv", "lenf"], [57, 1, 1, "c._fq_zech_poly_compose_mod_brent_kung_precomp_preinv", "lenh"], [57, 1, 1, "c._fq_zech_poly_compose_mod_brent_kung_precomp_preinv", "lenhinv"], [57, 1, 1, "c._fq_zech_poly_compose_mod_brent_kung_precomp_preinv", "res"]], "_fq_zech_poly_compose_mod_brent_kung_preinv": [[57, 1, 1, "c._fq_zech_poly_compose_mod_brent_kung_preinv", "ctx"], [57, 1, 1, "c._fq_zech_poly_compose_mod_brent_kung_preinv", "f"], [57, 1, 1, "c._fq_zech_poly_compose_mod_brent_kung_preinv", "g"], [57, 1, 1, "c._fq_zech_poly_compose_mod_brent_kung_preinv", "h"], [57, 1, 1, "c._fq_zech_poly_compose_mod_brent_kung_preinv", "hinv"], [57, 1, 1, "c._fq_zech_poly_compose_mod_brent_kung_preinv", "lenf"], [57, 1, 1, "c._fq_zech_poly_compose_mod_brent_kung_preinv", "lenh"], [57, 1, 1, "c._fq_zech_poly_compose_mod_brent_kung_preinv", "lenhiv"], [57, 1, 1, "c._fq_zech_poly_compose_mod_brent_kung_preinv", "res"]], "_fq_zech_poly_compose_mod_horner": [[57, 1, 1, "c._fq_zech_poly_compose_mod_horner", "ctx"], [57, 1, 1, "c._fq_zech_poly_compose_mod_horner", "f"], [57, 1, 1, "c._fq_zech_poly_compose_mod_horner", "g"], [57, 1, 1, "c._fq_zech_poly_compose_mod_horner", "h"], [57, 1, 1, "c._fq_zech_poly_compose_mod_horner", "lenf"], [57, 1, 1, "c._fq_zech_poly_compose_mod_horner", "lenh"], [57, 1, 1, "c._fq_zech_poly_compose_mod_horner", "res"]], "_fq_zech_poly_compose_mod_horner_preinv": [[57, 1, 1, "c._fq_zech_poly_compose_mod_horner_preinv", "ctx"], [57, 1, 1, "c._fq_zech_poly_compose_mod_horner_preinv", "f"], [57, 1, 1, "c._fq_zech_poly_compose_mod_horner_preinv", "g"], [57, 1, 1, "c._fq_zech_poly_compose_mod_horner_preinv", "h"], [57, 1, 1, "c._fq_zech_poly_compose_mod_horner_preinv", "hinv"], [57, 1, 1, "c._fq_zech_poly_compose_mod_horner_preinv", "lenf"], [57, 1, 1, "c._fq_zech_poly_compose_mod_horner_preinv", "lenh"], [57, 1, 1, "c._fq_zech_poly_compose_mod_horner_preinv", "lenhiv"], [57, 1, 1, "c._fq_zech_poly_compose_mod_horner_preinv", "res"]], "_fq_zech_poly_compose_mod_preinv": [[57, 1, 1, "c._fq_zech_poly_compose_mod_preinv", "ctx"], [57, 1, 1, "c._fq_zech_poly_compose_mod_preinv", "f"], [57, 1, 1, "c._fq_zech_poly_compose_mod_preinv", "g"], [57, 1, 1, "c._fq_zech_poly_compose_mod_preinv", "h"], [57, 1, 1, "c._fq_zech_poly_compose_mod_preinv", "hinv"], [57, 1, 1, "c._fq_zech_poly_compose_mod_preinv", "lenf"], [57, 1, 1, "c._fq_zech_poly_compose_mod_preinv", "lenh"], [57, 1, 1, "c._fq_zech_poly_compose_mod_preinv", "lenhiv"], [57, 1, 1, "c._fq_zech_poly_compose_mod_preinv", "res"]], "_fq_zech_poly_derivative": [[57, 1, 1, "c._fq_zech_poly_derivative", "ctx"], [57, 1, 1, "c._fq_zech_poly_derivative", "len"], [57, 1, 1, "c._fq_zech_poly_derivative", "op"], [57, 1, 1, "c._fq_zech_poly_derivative", "rop"]], "_fq_zech_poly_div_basecase": [[57, 1, 1, "c._fq_zech_poly_div_basecase", "A"], [57, 1, 1, "c._fq_zech_poly_div_basecase", "B"], [57, 1, 1, "c._fq_zech_poly_div_basecase", "Q"], [57, 1, 1, "c._fq_zech_poly_div_basecase", "R"], [57, 1, 1, "c._fq_zech_poly_div_basecase", "ctx"], [57, 1, 1, "c._fq_zech_poly_div_basecase", "invB"], [57, 1, 1, "c._fq_zech_poly_div_basecase", "lenA"], [57, 1, 1, "c._fq_zech_poly_div_basecase", "lenB"]], "_fq_zech_poly_div_newton_n_preinv": [[57, 1, 1, "c._fq_zech_poly_div_newton_n_preinv", "A"], [57, 1, 1, "c._fq_zech_poly_div_newton_n_preinv", "B"], [57, 1, 1, "c._fq_zech_poly_div_newton_n_preinv", "Binv"], [57, 1, 1, "c._fq_zech_poly_div_newton_n_preinv", "Q"], [57, 1, 1, "c._fq_zech_poly_div_newton_n_preinv", "ctx_t"], [57, 1, 1, "c._fq_zech_poly_div_newton_n_preinv", "lenA"], [57, 1, 1, "c._fq_zech_poly_div_newton_n_preinv", "lenB"], [57, 1, 1, "c._fq_zech_poly_div_newton_n_preinv", "lenBinv"]], "_fq_zech_poly_div_series": [[57, 1, 1, "c._fq_zech_poly_div_series", "A"], [57, 1, 1, "c._fq_zech_poly_div_series", "Alen"], [57, 1, 1, "c._fq_zech_poly_div_series", "B"], [57, 1, 1, "c._fq_zech_poly_div_series", "Blen"], [57, 1, 1, "c._fq_zech_poly_div_series", "Q"], [57, 1, 1, "c._fq_zech_poly_div_series", "ctx"], [57, 1, 1, "c._fq_zech_poly_div_series", "n"]], "_fq_zech_poly_divides": [[57, 1, 1, "c._fq_zech_poly_divides", "A"], [57, 1, 1, "c._fq_zech_poly_divides", "B"], [57, 1, 1, "c._fq_zech_poly_divides", "Q"], [57, 1, 1, "c._fq_zech_poly_divides", "ctx"], [57, 1, 1, "c._fq_zech_poly_divides", "invB"], [57, 1, 1, "c._fq_zech_poly_divides", "lenA"], [57, 1, 1, "c._fq_zech_poly_divides", "lenB"]], "_fq_zech_poly_divrem": [[57, 1, 1, "c._fq_zech_poly_divrem", "A"], [57, 1, 1, "c._fq_zech_poly_divrem", "B"], [57, 1, 1, "c._fq_zech_poly_divrem", "Q"], [57, 1, 1, "c._fq_zech_poly_divrem", "R"], [57, 1, 1, "c._fq_zech_poly_divrem", "ctx"], [57, 1, 1, "c._fq_zech_poly_divrem", "invB"], [57, 1, 1, "c._fq_zech_poly_divrem", "lenA"], [57, 1, 1, "c._fq_zech_poly_divrem", "lenB"]], "_fq_zech_poly_divrem_basecase": [[57, 1, 1, "c._fq_zech_poly_divrem_basecase", "A"], [57, 1, 1, "c._fq_zech_poly_divrem_basecase", "B"], [57, 1, 1, "c._fq_zech_poly_divrem_basecase", "Q"], [57, 1, 1, "c._fq_zech_poly_divrem_basecase", "R"], [57, 1, 1, "c._fq_zech_poly_divrem_basecase", "ctx"], [57, 1, 1, "c._fq_zech_poly_divrem_basecase", "invB"], [57, 1, 1, "c._fq_zech_poly_divrem_basecase", "lenA"], [57, 1, 1, "c._fq_zech_poly_divrem_basecase", "lenB"]], "_fq_zech_poly_divrem_divconquer": [[57, 1, 1, "c._fq_zech_poly_divrem_divconquer", "A"], [57, 1, 1, "c._fq_zech_poly_divrem_divconquer", "B"], [57, 1, 1, "c._fq_zech_poly_divrem_divconquer", "Q"], [57, 1, 1, "c._fq_zech_poly_divrem_divconquer", "R"], [57, 1, 1, "c._fq_zech_poly_divrem_divconquer", "ctx"], [57, 1, 1, "c._fq_zech_poly_divrem_divconquer", "invB"], [57, 1, 1, "c._fq_zech_poly_divrem_divconquer", "lenA"], [57, 1, 1, "c._fq_zech_poly_divrem_divconquer", "lenB"]], "_fq_zech_poly_divrem_divconquer_recursive": [[57, 1, 1, "c._fq_zech_poly_divrem_divconquer_recursive", "A"], [57, 1, 1, "c._fq_zech_poly_divrem_divconquer_recursive", "B"], [57, 1, 1, "c._fq_zech_poly_divrem_divconquer_recursive", "BQ"], [57, 1, 1, "c._fq_zech_poly_divrem_divconquer_recursive", "Q"], [57, 1, 1, "c._fq_zech_poly_divrem_divconquer_recursive", "W"], [57, 1, 1, "c._fq_zech_poly_divrem_divconquer_recursive", "ctx"], [57, 1, 1, "c._fq_zech_poly_divrem_divconquer_recursive", "invB"], [57, 1, 1, "c._fq_zech_poly_divrem_divconquer_recursive", "lenB"]], "_fq_zech_poly_divrem_newton_n_preinv": [[57, 1, 1, "c._fq_zech_poly_divrem_newton_n_preinv", "A"], [57, 1, 1, "c._fq_zech_poly_divrem_newton_n_preinv", "B"], [57, 1, 1, "c._fq_zech_poly_divrem_newton_n_preinv", "Binv"], [57, 1, 1, "c._fq_zech_poly_divrem_newton_n_preinv", "Q"], [57, 1, 1, "c._fq_zech_poly_divrem_newton_n_preinv", "R"], [57, 1, 1, "c._fq_zech_poly_divrem_newton_n_preinv", "ctx"], [57, 1, 1, "c._fq_zech_poly_divrem_newton_n_preinv", "lenA"], [57, 1, 1, "c._fq_zech_poly_divrem_newton_n_preinv", "lenB"], [57, 1, 1, "c._fq_zech_poly_divrem_newton_n_preinv", "lenBinv"]], "_fq_zech_poly_evaluate_fq_zech": [[57, 1, 1, "c._fq_zech_poly_evaluate_fq_zech", "a"], [57, 1, 1, "c._fq_zech_poly_evaluate_fq_zech", "ctx"], [57, 1, 1, "c._fq_zech_poly_evaluate_fq_zech", "len"], [57, 1, 1, "c._fq_zech_poly_evaluate_fq_zech", "op"], [57, 1, 1, "c._fq_zech_poly_evaluate_fq_zech", "rop"]], "_fq_zech_poly_fprint": [[57, 1, 1, "c._fq_zech_poly_fprint", "ctx"], [57, 1, 1, "c._fq_zech_poly_fprint", "file"], [57, 1, 1, "c._fq_zech_poly_fprint", "len"], [57, 1, 1, "c._fq_zech_poly_fprint", "poly"]], "_fq_zech_poly_fprint_pretty": [[57, 1, 1, "c._fq_zech_poly_fprint_pretty", "ctx"], [57, 1, 1, "c._fq_zech_poly_fprint_pretty", "file"], [57, 1, 1, "c._fq_zech_poly_fprint_pretty", "len"], [57, 1, 1, "c._fq_zech_poly_fprint_pretty", "poly"], [57, 1, 1, "c._fq_zech_poly_fprint_pretty", "x"]], "_fq_zech_poly_gcd": [[57, 1, 1, "c._fq_zech_poly_gcd", "A"], [57, 1, 1, "c._fq_zech_poly_gcd", "B"], [57, 1, 1, "c._fq_zech_poly_gcd", "G"], [57, 1, 1, "c._fq_zech_poly_gcd", "ctx"], [57, 1, 1, "c._fq_zech_poly_gcd", "lenA"], [57, 1, 1, "c._fq_zech_poly_gcd", "lenB"]], "_fq_zech_poly_gcd_euclidean": [[57, 1, 1, "c._fq_zech_poly_gcd_euclidean", "A"], [57, 1, 1, "c._fq_zech_poly_gcd_euclidean", "B"], [57, 1, 1, "c._fq_zech_poly_gcd_euclidean", "G"], [57, 1, 1, "c._fq_zech_poly_gcd_euclidean", "ctx"], [57, 1, 1, "c._fq_zech_poly_gcd_euclidean", "lenA"], [57, 1, 1, "c._fq_zech_poly_gcd_euclidean", "lenB"]], "_fq_zech_poly_gcd_euclidean_f": [[57, 1, 1, "c._fq_zech_poly_gcd_euclidean_f", "A"], [57, 1, 1, "c._fq_zech_poly_gcd_euclidean_f", "B"], [57, 1, 1, "c._fq_zech_poly_gcd_euclidean_f", "G"], [57, 1, 1, "c._fq_zech_poly_gcd_euclidean_f", "ctx"], [57, 1, 1, "c._fq_zech_poly_gcd_euclidean_f", "f"], [57, 1, 1, "c._fq_zech_poly_gcd_euclidean_f", "lenA"], [57, 1, 1, "c._fq_zech_poly_gcd_euclidean_f", "lenB"]], "_fq_zech_poly_gcd_hgcd": [[57, 1, 1, "c._fq_zech_poly_gcd_hgcd", "A"], [57, 1, 1, "c._fq_zech_poly_gcd_hgcd", "B"], [57, 1, 1, "c._fq_zech_poly_gcd_hgcd", "G"], [57, 1, 1, "c._fq_zech_poly_gcd_hgcd", "ctx"], [57, 1, 1, "c._fq_zech_poly_gcd_hgcd", "lenA"], [57, 1, 1, "c._fq_zech_poly_gcd_hgcd", "lenB"]], "_fq_zech_poly_get_str": [[57, 1, 1, "c._fq_zech_poly_get_str", "ctx"], [57, 1, 1, "c._fq_zech_poly_get_str", "len"], [57, 1, 1, "c._fq_zech_poly_get_str", "poly"]], "_fq_zech_poly_get_str_pretty": [[57, 1, 1, "c._fq_zech_poly_get_str_pretty", "ctx"], [57, 1, 1, "c._fq_zech_poly_get_str_pretty", "len"], [57, 1, 1, "c._fq_zech_poly_get_str_pretty", "poly"], [57, 1, 1, "c._fq_zech_poly_get_str_pretty", "x"]], "_fq_zech_poly_hamming_weight": [[57, 1, 1, "c._fq_zech_poly_hamming_weight", "ctx"], [57, 1, 1, "c._fq_zech_poly_hamming_weight", "len"], [57, 1, 1, "c._fq_zech_poly_hamming_weight", "op"]], "_fq_zech_poly_hgcd": [[57, 1, 1, "c._fq_zech_poly_hgcd", "A"], [57, 1, 1, "c._fq_zech_poly_hgcd", "B"], [57, 1, 1, "c._fq_zech_poly_hgcd", "M"], [57, 1, 1, "c._fq_zech_poly_hgcd", "a"], [57, 1, 1, "c._fq_zech_poly_hgcd", "b"], [57, 1, 1, "c._fq_zech_poly_hgcd", "ctx"], [57, 1, 1, "c._fq_zech_poly_hgcd", "lenA"], [57, 1, 1, "c._fq_zech_poly_hgcd", "lenB"], [57, 1, 1, "c._fq_zech_poly_hgcd", "lenM"], [57, 1, 1, "c._fq_zech_poly_hgcd", "lena"], [57, 1, 1, "c._fq_zech_poly_hgcd", "lenb"]], "_fq_zech_poly_inv_series": [[57, 1, 1, "c._fq_zech_poly_inv_series", "Q"], [57, 1, 1, "c._fq_zech_poly_inv_series", "Qinv"], [57, 1, 1, "c._fq_zech_poly_inv_series", "ctx"], [57, 1, 1, "c._fq_zech_poly_inv_series", "n"]], "_fq_zech_poly_inv_series_newton": [[57, 1, 1, "c._fq_zech_poly_inv_series_newton", "Q"], [57, 1, 1, "c._fq_zech_poly_inv_series_newton", "Qinv"], [57, 1, 1, "c._fq_zech_poly_inv_series_newton", "ctx"], [57, 1, 1, "c._fq_zech_poly_inv_series_newton", "n"]], "_fq_zech_poly_invsqrt_series": [[57, 1, 1, "c._fq_zech_poly_invsqrt_series", "g"], [57, 1, 1, "c._fq_zech_poly_invsqrt_series", "h"], [57, 1, 1, "c._fq_zech_poly_invsqrt_series", "mod"], [57, 1, 1, "c._fq_zech_poly_invsqrt_series", "n"]], "_fq_zech_poly_is_squarefree": [[58, 1, 1, "c._fq_zech_poly_is_squarefree", "ctx"], [58, 1, 1, "c._fq_zech_poly_is_squarefree", "f"], [58, 1, 1, "c._fq_zech_poly_is_squarefree", "len"]], "_fq_zech_poly_make_monic": [[57, 1, 1, "c._fq_zech_poly_make_monic", "ctx"], [57, 1, 1, "c._fq_zech_poly_make_monic", "length"], [57, 1, 1, "c._fq_zech_poly_make_monic", "op"], [57, 1, 1, "c._fq_zech_poly_make_monic", "rop"]], "_fq_zech_poly_mul": [[57, 1, 1, "c._fq_zech_poly_mul", "ctx"], [57, 1, 1, "c._fq_zech_poly_mul", "len1"], [57, 1, 1, "c._fq_zech_poly_mul", "len2"], [57, 1, 1, "c._fq_zech_poly_mul", "op1"], [57, 1, 1, "c._fq_zech_poly_mul", "op2"], [57, 1, 1, "c._fq_zech_poly_mul", "rop"]], "_fq_zech_poly_mul_KS": [[57, 1, 1, "c._fq_zech_poly_mul_KS", "ctx"], [57, 1, 1, "c._fq_zech_poly_mul_KS", "len1"], [57, 1, 1, "c._fq_zech_poly_mul_KS", "len2"], [57, 1, 1, "c._fq_zech_poly_mul_KS", "op1"], [57, 1, 1, "c._fq_zech_poly_mul_KS", "op2"], [57, 1, 1, "c._fq_zech_poly_mul_KS", "rop"]], "_fq_zech_poly_mul_classical": [[57, 1, 1, "c._fq_zech_poly_mul_classical", "ctx"], [57, 1, 1, "c._fq_zech_poly_mul_classical", "len1"], [57, 1, 1, "c._fq_zech_poly_mul_classical", "len2"], [57, 1, 1, "c._fq_zech_poly_mul_classical", "op1"], [57, 1, 1, "c._fq_zech_poly_mul_classical", "op2"], [57, 1, 1, "c._fq_zech_poly_mul_classical", "rop"]], "_fq_zech_poly_mul_reorder": [[57, 1, 1, "c._fq_zech_poly_mul_reorder", "ctx"], [57, 1, 1, "c._fq_zech_poly_mul_reorder", "len1"], [57, 1, 1, "c._fq_zech_poly_mul_reorder", "len2"], [57, 1, 1, "c._fq_zech_poly_mul_reorder", "op1"], [57, 1, 1, "c._fq_zech_poly_mul_reorder", "op2"], [57, 1, 1, "c._fq_zech_poly_mul_reorder", "rop"]], "_fq_zech_poly_mulhigh": [[57, 1, 1, "c._fq_zech_poly_mulhigh", "ctx"], [57, 1, 1, "c._fq_zech_poly_mulhigh", "len1"], [57, 1, 1, "c._fq_zech_poly_mulhigh", "len2"], [57, 1, 1, "c._fq_zech_poly_mulhigh", "poly1"], [57, 1, 1, "c._fq_zech_poly_mulhigh", "poly2"], [57, 1, 1, "c._fq_zech_poly_mulhigh", "res"], [57, 1, 1, "c._fq_zech_poly_mulhigh", "start"]], "_fq_zech_poly_mulhigh_classical": [[57, 1, 1, "c._fq_zech_poly_mulhigh_classical", "ctx"], [57, 1, 1, "c._fq_zech_poly_mulhigh_classical", "len1"], [57, 1, 1, "c._fq_zech_poly_mulhigh_classical", "len2"], [57, 1, 1, "c._fq_zech_poly_mulhigh_classical", "poly1"], [57, 1, 1, "c._fq_zech_poly_mulhigh_classical", "poly2"], [57, 1, 1, "c._fq_zech_poly_mulhigh_classical", "res"], [57, 1, 1, "c._fq_zech_poly_mulhigh_classical", "start"]], "_fq_zech_poly_mullow": [[57, 1, 1, "c._fq_zech_poly_mullow", "ctx"], [57, 1, 1, "c._fq_zech_poly_mullow", "len1"], [57, 1, 1, "c._fq_zech_poly_mullow", "len2"], [57, 1, 1, "c._fq_zech_poly_mullow", "n"], [57, 1, 1, "c._fq_zech_poly_mullow", "op1"], [57, 1, 1, "c._fq_zech_poly_mullow", "op2"], [57, 1, 1, "c._fq_zech_poly_mullow", "rop"]], "_fq_zech_poly_mullow_KS": [[57, 1, 1, "c._fq_zech_poly_mullow_KS", "ctx"], [57, 1, 1, "c._fq_zech_poly_mullow_KS", "len1"], [57, 1, 1, "c._fq_zech_poly_mullow_KS", "len2"], [57, 1, 1, "c._fq_zech_poly_mullow_KS", "n"], [57, 1, 1, "c._fq_zech_poly_mullow_KS", "op1"], [57, 1, 1, "c._fq_zech_poly_mullow_KS", "op2"], [57, 1, 1, "c._fq_zech_poly_mullow_KS", "rop"]], "_fq_zech_poly_mullow_classical": [[57, 1, 1, "c._fq_zech_poly_mullow_classical", "ctx"], [57, 1, 1, "c._fq_zech_poly_mullow_classical", "len1"], [57, 1, 1, "c._fq_zech_poly_mullow_classical", "len2"], [57, 1, 1, "c._fq_zech_poly_mullow_classical", "n"], [57, 1, 1, "c._fq_zech_poly_mullow_classical", "op1"], [57, 1, 1, "c._fq_zech_poly_mullow_classical", "op2"], [57, 1, 1, "c._fq_zech_poly_mullow_classical", "rop"]], "_fq_zech_poly_mulmod": [[57, 1, 1, "c._fq_zech_poly_mulmod", "ctx"], [57, 1, 1, "c._fq_zech_poly_mulmod", "f"], [57, 1, 1, "c._fq_zech_poly_mulmod", "len1"], [57, 1, 1, "c._fq_zech_poly_mulmod", "len2"], [57, 1, 1, "c._fq_zech_poly_mulmod", "lenf"], [57, 1, 1, "c._fq_zech_poly_mulmod", "poly1"], [57, 1, 1, "c._fq_zech_poly_mulmod", "poly2"], [57, 1, 1, "c._fq_zech_poly_mulmod", "res"]], "_fq_zech_poly_mulmod_preinv": [[57, 1, 1, "c._fq_zech_poly_mulmod_preinv", "ctx"], [57, 1, 1, "c._fq_zech_poly_mulmod_preinv", "f"], [57, 1, 1, "c._fq_zech_poly_mulmod_preinv", "finv"], [57, 1, 1, "c._fq_zech_poly_mulmod_preinv", "len1"], [57, 1, 1, "c._fq_zech_poly_mulmod_preinv", "len2"], [57, 1, 1, "c._fq_zech_poly_mulmod_preinv", "lenf"], [57, 1, 1, "c._fq_zech_poly_mulmod_preinv", "lenfinv"], [57, 1, 1, "c._fq_zech_poly_mulmod_preinv", "poly1"], [57, 1, 1, "c._fq_zech_poly_mulmod_preinv", "poly2"], [57, 1, 1, "c._fq_zech_poly_mulmod_preinv", "res"]], "_fq_zech_poly_neg": [[57, 1, 1, "c._fq_zech_poly_neg", "ctx"], [57, 1, 1, "c._fq_zech_poly_neg", "len"], [57, 1, 1, "c._fq_zech_poly_neg", "op"], [57, 1, 1, "c._fq_zech_poly_neg", "rop"]], "_fq_zech_poly_normalise": [[57, 1, 1, "c._fq_zech_poly_normalise", "ctx"], [57, 1, 1, "c._fq_zech_poly_normalise", "poly"]], "_fq_zech_poly_normalise2": [[57, 1, 1, "c._fq_zech_poly_normalise2", "ctx"], [57, 1, 1, "c._fq_zech_poly_normalise2", "length"], [57, 1, 1, "c._fq_zech_poly_normalise2", "poly"]], "_fq_zech_poly_pow": [[57, 1, 1, "c._fq_zech_poly_pow", "ctx"], [57, 1, 1, "c._fq_zech_poly_pow", "e"], [57, 1, 1, "c._fq_zech_poly_pow", "len"], [57, 1, 1, "c._fq_zech_poly_pow", "op"], [57, 1, 1, "c._fq_zech_poly_pow", "rop"]], "_fq_zech_poly_pow_trunc": [[57, 1, 1, "c._fq_zech_poly_pow_trunc", "e"], [57, 1, 1, "c._fq_zech_poly_pow_trunc", "mod"], [57, 1, 1, "c._fq_zech_poly_pow_trunc", "poly"], [57, 1, 1, "c._fq_zech_poly_pow_trunc", "res"], [57, 1, 1, "c._fq_zech_poly_pow_trunc", "trunc"]], "_fq_zech_poly_pow_trunc_binexp": [[57, 1, 1, "c._fq_zech_poly_pow_trunc_binexp", "ctx"], [57, 1, 1, "c._fq_zech_poly_pow_trunc_binexp", "e"], [57, 1, 1, "c._fq_zech_poly_pow_trunc_binexp", "poly"], [57, 1, 1, "c._fq_zech_poly_pow_trunc_binexp", "res"], [57, 1, 1, "c._fq_zech_poly_pow_trunc_binexp", "trunc"]], "_fq_zech_poly_powmod_fmpz_binexp": [[57, 1, 1, "c._fq_zech_poly_powmod_fmpz_binexp", "ctx"], [57, 1, 1, "c._fq_zech_poly_powmod_fmpz_binexp", "e"], [57, 1, 1, "c._fq_zech_poly_powmod_fmpz_binexp", "f"], [57, 1, 1, "c._fq_zech_poly_powmod_fmpz_binexp", "lenf"], [57, 1, 1, "c._fq_zech_poly_powmod_fmpz_binexp", "poly"], [57, 1, 1, "c._fq_zech_poly_powmod_fmpz_binexp", "res"]], "_fq_zech_poly_powmod_fmpz_binexp_preinv": [[57, 1, 1, "c._fq_zech_poly_powmod_fmpz_binexp_preinv", "ctx"], [57, 1, 1, "c._fq_zech_poly_powmod_fmpz_binexp_preinv", "e"], [57, 1, 1, "c._fq_zech_poly_powmod_fmpz_binexp_preinv", "f"], [57, 1, 1, "c._fq_zech_poly_powmod_fmpz_binexp_preinv", "finv"], [57, 1, 1, "c._fq_zech_poly_powmod_fmpz_binexp_preinv", "lenf"], [57, 1, 1, "c._fq_zech_poly_powmod_fmpz_binexp_preinv", "lenfinv"], [57, 1, 1, "c._fq_zech_poly_powmod_fmpz_binexp_preinv", "poly"], [57, 1, 1, "c._fq_zech_poly_powmod_fmpz_binexp_preinv", "res"]], "_fq_zech_poly_powmod_fmpz_sliding_preinv": [[57, 1, 1, "c._fq_zech_poly_powmod_fmpz_sliding_preinv", "ctx"], [57, 1, 1, "c._fq_zech_poly_powmod_fmpz_sliding_preinv", "e"], [57, 1, 1, "c._fq_zech_poly_powmod_fmpz_sliding_preinv", "f"], [57, 1, 1, "c._fq_zech_poly_powmod_fmpz_sliding_preinv", "finv"], [57, 1, 1, "c._fq_zech_poly_powmod_fmpz_sliding_preinv", "k"], [57, 1, 1, "c._fq_zech_poly_powmod_fmpz_sliding_preinv", "lenf"], [57, 1, 1, "c._fq_zech_poly_powmod_fmpz_sliding_preinv", "lenfinv"], [57, 1, 1, "c._fq_zech_poly_powmod_fmpz_sliding_preinv", "poly"], [57, 1, 1, "c._fq_zech_poly_powmod_fmpz_sliding_preinv", "res"]], "_fq_zech_poly_powmod_ui_binexp": [[57, 1, 1, "c._fq_zech_poly_powmod_ui_binexp", "ctx"], [57, 1, 1, "c._fq_zech_poly_powmod_ui_binexp", "e"], [57, 1, 1, "c._fq_zech_poly_powmod_ui_binexp", "f"], [57, 1, 1, "c._fq_zech_poly_powmod_ui_binexp", "lenf"], [57, 1, 1, "c._fq_zech_poly_powmod_ui_binexp", "poly"], [57, 1, 1, "c._fq_zech_poly_powmod_ui_binexp", "res"]], "_fq_zech_poly_powmod_ui_binexp_preinv": [[57, 1, 1, "c._fq_zech_poly_powmod_ui_binexp_preinv", "ctx"], [57, 1, 1, "c._fq_zech_poly_powmod_ui_binexp_preinv", "e"], [57, 1, 1, "c._fq_zech_poly_powmod_ui_binexp_preinv", "f"], [57, 1, 1, "c._fq_zech_poly_powmod_ui_binexp_preinv", "finv"], [57, 1, 1, "c._fq_zech_poly_powmod_ui_binexp_preinv", "lenf"], [57, 1, 1, "c._fq_zech_poly_powmod_ui_binexp_preinv", "lenfinv"], [57, 1, 1, "c._fq_zech_poly_powmod_ui_binexp_preinv", "poly"], [57, 1, 1, "c._fq_zech_poly_powmod_ui_binexp_preinv", "res"]], "_fq_zech_poly_powmod_x_fmpz_preinv": [[57, 1, 1, "c._fq_zech_poly_powmod_x_fmpz_preinv", "ctx"], [57, 1, 1, "c._fq_zech_poly_powmod_x_fmpz_preinv", "e"], [57, 1, 1, "c._fq_zech_poly_powmod_x_fmpz_preinv", "f"], [57, 1, 1, "c._fq_zech_poly_powmod_x_fmpz_preinv", "finv"], [57, 1, 1, "c._fq_zech_poly_powmod_x_fmpz_preinv", "lenf"], [57, 1, 1, "c._fq_zech_poly_powmod_x_fmpz_preinv", "lenfinv"], [57, 1, 1, "c._fq_zech_poly_powmod_x_fmpz_preinv", "res"]], "_fq_zech_poly_precompute_matrix": [[57, 1, 1, "c._fq_zech_poly_precompute_matrix", "A"], [57, 1, 1, "c._fq_zech_poly_precompute_matrix", "ctx"], [57, 1, 1, "c._fq_zech_poly_precompute_matrix", "f"], [57, 1, 1, "c._fq_zech_poly_precompute_matrix", "g"], [57, 1, 1, "c._fq_zech_poly_precompute_matrix", "ginv"], [57, 1, 1, "c._fq_zech_poly_precompute_matrix", "leng"], [57, 1, 1, "c._fq_zech_poly_precompute_matrix", "lenginv"]], "_fq_zech_poly_print": [[57, 1, 1, "c._fq_zech_poly_print", "ctx"], [57, 1, 1, "c._fq_zech_poly_print", "len"], [57, 1, 1, "c._fq_zech_poly_print", "poly"]], "_fq_zech_poly_print_pretty": [[57, 1, 1, "c._fq_zech_poly_print_pretty", "ctx"], [57, 1, 1, "c._fq_zech_poly_print_pretty", "len"], [57, 1, 1, "c._fq_zech_poly_print_pretty", "poly"], [57, 1, 1, "c._fq_zech_poly_print_pretty", "x"]], "_fq_zech_poly_reduce_matrix_mod_poly": [[57, 1, 1, "c._fq_zech_poly_reduce_matrix_mod_poly", "A"], [57, 1, 1, "c._fq_zech_poly_reduce_matrix_mod_poly", "B"], [57, 1, 1, "c._fq_zech_poly_reduce_matrix_mod_poly", "ctx"], [57, 1, 1, "c._fq_zech_poly_reduce_matrix_mod_poly", "f"]], "_fq_zech_poly_rem": [[57, 1, 1, "c._fq_zech_poly_rem", "A"], [57, 1, 1, "c._fq_zech_poly_rem", "B"], [57, 1, 1, "c._fq_zech_poly_rem", "R"], [57, 1, 1, "c._fq_zech_poly_rem", "ctx"], [57, 1, 1, "c._fq_zech_poly_rem", "invB"], [57, 1, 1, "c._fq_zech_poly_rem", "lenA"], [57, 1, 1, "c._fq_zech_poly_rem", "lenB"]], "_fq_zech_poly_reverse": [[57, 1, 1, "c._fq_zech_poly_reverse", "ctx"], [57, 1, 1, "c._fq_zech_poly_reverse", "input"], [57, 1, 1, "c._fq_zech_poly_reverse", "len"], [57, 1, 1, "c._fq_zech_poly_reverse", "m"], [57, 1, 1, "c._fq_zech_poly_reverse", "output"]], "_fq_zech_poly_scalar_addmul_fq_zech": [[57, 1, 1, "c._fq_zech_poly_scalar_addmul_fq_zech", "ctx"], [57, 1, 1, "c._fq_zech_poly_scalar_addmul_fq_zech", "len"], [57, 1, 1, "c._fq_zech_poly_scalar_addmul_fq_zech", "op"], [57, 1, 1, "c._fq_zech_poly_scalar_addmul_fq_zech", "rop"], [57, 1, 1, "c._fq_zech_poly_scalar_addmul_fq_zech", "x"]], "_fq_zech_poly_scalar_div_fq": [[57, 1, 1, "c._fq_zech_poly_scalar_div_fq", "ctx"], [57, 1, 1, "c._fq_zech_poly_scalar_div_fq", "len"], [57, 1, 1, "c._fq_zech_poly_scalar_div_fq", "op"], [57, 1, 1, "c._fq_zech_poly_scalar_div_fq", "rop"], [57, 1, 1, "c._fq_zech_poly_scalar_div_fq", "x"]], "_fq_zech_poly_scalar_mul_fq_zech": [[57, 1, 1, "c._fq_zech_poly_scalar_mul_fq_zech", "ctx"], [57, 1, 1, "c._fq_zech_poly_scalar_mul_fq_zech", "len"], [57, 1, 1, "c._fq_zech_poly_scalar_mul_fq_zech", "op"], [57, 1, 1, "c._fq_zech_poly_scalar_mul_fq_zech", "rop"], [57, 1, 1, "c._fq_zech_poly_scalar_mul_fq_zech", "x"]], "_fq_zech_poly_scalar_submul_fq_zech": [[57, 1, 1, "c._fq_zech_poly_scalar_submul_fq_zech", "ctx"], [57, 1, 1, "c._fq_zech_poly_scalar_submul_fq_zech", "len"], [57, 1, 1, "c._fq_zech_poly_scalar_submul_fq_zech", "op"], [57, 1, 1, "c._fq_zech_poly_scalar_submul_fq_zech", "rop"], [57, 1, 1, "c._fq_zech_poly_scalar_submul_fq_zech", "x"]], "_fq_zech_poly_set": [[57, 1, 1, "c._fq_zech_poly_set", "ctx"], [57, 1, 1, "c._fq_zech_poly_set", "len"], [57, 1, 1, "c._fq_zech_poly_set", "op"], [57, 1, 1, "c._fq_zech_poly_set", "rop"]], "_fq_zech_poly_set_length": [[57, 1, 1, "c._fq_zech_poly_set_length", "ctx"], [57, 1, 1, "c._fq_zech_poly_set_length", "newlen"], [57, 1, 1, "c._fq_zech_poly_set_length", "poly"]], "_fq_zech_poly_shift_left": [[57, 1, 1, "c._fq_zech_poly_shift_left", "ctx"], [57, 1, 1, "c._fq_zech_poly_shift_left", "len"], [57, 1, 1, "c._fq_zech_poly_shift_left", "n"], [57, 1, 1, "c._fq_zech_poly_shift_left", "op"], [57, 1, 1, "c._fq_zech_poly_shift_left", "rop"]], "_fq_zech_poly_shift_right": [[57, 1, 1, "c._fq_zech_poly_shift_right", "ctx"], [57, 1, 1, "c._fq_zech_poly_shift_right", "len"], [57, 1, 1, "c._fq_zech_poly_shift_right", "n"], [57, 1, 1, "c._fq_zech_poly_shift_right", "op"], [57, 1, 1, "c._fq_zech_poly_shift_right", "rop"]], "_fq_zech_poly_sqr": [[57, 1, 1, "c._fq_zech_poly_sqr", "ctx"], [57, 1, 1, "c._fq_zech_poly_sqr", "len"], [57, 1, 1, "c._fq_zech_poly_sqr", "op"], [57, 1, 1, "c._fq_zech_poly_sqr", "rop"]], "_fq_zech_poly_sqr_KS": [[57, 1, 1, "c._fq_zech_poly_sqr_KS", "ctx"], [57, 1, 1, "c._fq_zech_poly_sqr_KS", "len"], [57, 1, 1, "c._fq_zech_poly_sqr_KS", "op"], [57, 1, 1, "c._fq_zech_poly_sqr_KS", "rop"]], "_fq_zech_poly_sqr_classical": [[57, 1, 1, "c._fq_zech_poly_sqr_classical", "ctx"], [57, 1, 1, "c._fq_zech_poly_sqr_classical", "len"], [57, 1, 1, "c._fq_zech_poly_sqr_classical", "op"], [57, 1, 1, "c._fq_zech_poly_sqr_classical", "rop"]], "_fq_zech_poly_sqrt": [[57, 1, 1, "c._fq_zech_poly_sqrt", "mod"], [57, 1, 1, "c._fq_zech_poly_sqrt", "n"], [57, 1, 1, "c._fq_zech_poly_sqrt", "p"], [57, 1, 1, "c._fq_zech_poly_sqrt", "s"]], "_fq_zech_poly_sqrt_series": [[57, 1, 1, "c._fq_zech_poly_sqrt_series", "ctx"], [57, 1, 1, "c._fq_zech_poly_sqrt_series", "g"], [57, 1, 1, "c._fq_zech_poly_sqrt_series", "h"], [57, 1, 1, "c._fq_zech_poly_sqrt_series", "n"]], "_fq_zech_poly_sub": [[57, 1, 1, "c._fq_zech_poly_sub", "ctx"], [57, 1, 1, "c._fq_zech_poly_sub", "len1"], [57, 1, 1, "c._fq_zech_poly_sub", "len2"], [57, 1, 1, "c._fq_zech_poly_sub", "poly1"], [57, 1, 1, "c._fq_zech_poly_sub", "poly2"], [57, 1, 1, "c._fq_zech_poly_sub", "res"]], "_fq_zech_poly_xgcd": [[57, 1, 1, "c._fq_zech_poly_xgcd", "A"], [57, 1, 1, "c._fq_zech_poly_xgcd", "B"], [57, 1, 1, "c._fq_zech_poly_xgcd", "G"], [57, 1, 1, "c._fq_zech_poly_xgcd", "S"], [57, 1, 1, "c._fq_zech_poly_xgcd", "T"], [57, 1, 1, "c._fq_zech_poly_xgcd", "ctx"], [57, 1, 1, "c._fq_zech_poly_xgcd", "invB"], [57, 1, 1, "c._fq_zech_poly_xgcd", "lenA"], [57, 1, 1, "c._fq_zech_poly_xgcd", "lenB"]], "_fq_zech_poly_xgcd_euclidean": [[57, 1, 1, "c._fq_zech_poly_xgcd_euclidean", "A"], [57, 1, 1, "c._fq_zech_poly_xgcd_euclidean", "B"], [57, 1, 1, "c._fq_zech_poly_xgcd_euclidean", "G"], [57, 1, 1, "c._fq_zech_poly_xgcd_euclidean", "S"], [57, 1, 1, "c._fq_zech_poly_xgcd_euclidean", "T"], [57, 1, 1, "c._fq_zech_poly_xgcd_euclidean", "ctx"], [57, 1, 1, "c._fq_zech_poly_xgcd_euclidean", "invB"], [57, 1, 1, "c._fq_zech_poly_xgcd_euclidean", "lenA"], [57, 1, 1, "c._fq_zech_poly_xgcd_euclidean", "lenB"]], "_fq_zech_poly_xgcd_euclidean_f": [[57, 1, 1, "c._fq_zech_poly_xgcd_euclidean_f", "A"], [57, 1, 1, "c._fq_zech_poly_xgcd_euclidean_f", "B"], [57, 1, 1, "c._fq_zech_poly_xgcd_euclidean_f", "G"], [57, 1, 1, "c._fq_zech_poly_xgcd_euclidean_f", "S"], [57, 1, 1, "c._fq_zech_poly_xgcd_euclidean_f", "T"], [57, 1, 1, "c._fq_zech_poly_xgcd_euclidean_f", "ctx"], [57, 1, 1, "c._fq_zech_poly_xgcd_euclidean_f", "f"], [57, 1, 1, "c._fq_zech_poly_xgcd_euclidean_f", "invB"], [57, 1, 1, "c._fq_zech_poly_xgcd_euclidean_f", "lenA"], [57, 1, 1, "c._fq_zech_poly_xgcd_euclidean_f", "lenB"]], "_fq_zech_poly_zero": [[57, 1, 1, "c._fq_zech_poly_zero", "ctx"], [57, 1, 1, "c._fq_zech_poly_zero", "len"], [57, 1, 1, "c._fq_zech_poly_zero", "rop"]], "_fq_zech_pow": [[54, 1, 1, "c._fq_zech_pow", "ctx"], [54, 1, 1, "c._fq_zech_pow", "e"], [54, 1, 1, "c._fq_zech_pow", "len"], [54, 1, 1, "c._fq_zech_pow", "op"], [54, 1, 1, "c._fq_zech_pow", "rop"]], "_fq_zech_reduce": [[54, 1, 1, "c._fq_zech_reduce", "ctx"], [54, 1, 1, "c._fq_zech_reduce", "lenR"], [54, 1, 1, "c._fq_zech_reduce", "r"]], "_fq_zech_sparse_reduce": [[54, 1, 1, "c._fq_zech_sparse_reduce", "R"], [54, 1, 1, "c._fq_zech_sparse_reduce", "ctx"], [54, 1, 1, "c._fq_zech_sparse_reduce", "lenR"]], "_fq_zech_vec_add": [[59, 1, 1, "c._fq_zech_vec_add", "ctx"], [59, 1, 1, "c._fq_zech_vec_add", "len2"], [59, 1, 1, "c._fq_zech_vec_add", "res"], [59, 1, 1, "c._fq_zech_vec_add", "vec1"], [59, 1, 1, "c._fq_zech_vec_add", "vec2"]], "_fq_zech_vec_clear": [[59, 1, 1, "c._fq_zech_vec_clear", "ctx"], [59, 1, 1, "c._fq_zech_vec_clear", "len"], [59, 1, 1, "c._fq_zech_vec_clear", "vec"]], "_fq_zech_vec_dot": [[59, 1, 1, "c._fq_zech_vec_dot", "ctx"], [59, 1, 1, "c._fq_zech_vec_dot", "len2"], [59, 1, 1, "c._fq_zech_vec_dot", "res"], [59, 1, 1, "c._fq_zech_vec_dot", "vec1"], [59, 1, 1, "c._fq_zech_vec_dot", "vec2"]], "_fq_zech_vec_equal": [[59, 1, 1, "c._fq_zech_vec_equal", "ctx"], [59, 1, 1, "c._fq_zech_vec_equal", "len"], [59, 1, 1, "c._fq_zech_vec_equal", "vec1"], [59, 1, 1, "c._fq_zech_vec_equal", "vec2"]], "_fq_zech_vec_fprint": [[59, 1, 1, "c._fq_zech_vec_fprint", "ctx"], [59, 1, 1, "c._fq_zech_vec_fprint", "file"], [59, 1, 1, "c._fq_zech_vec_fprint", "len"], [59, 1, 1, "c._fq_zech_vec_fprint", "vec"]], "_fq_zech_vec_init": [[59, 1, 1, "c._fq_zech_vec_init", "ctx"], [59, 1, 1, "c._fq_zech_vec_init", "len"]], "_fq_zech_vec_is_zero": [[59, 1, 1, "c._fq_zech_vec_is_zero", "len"], [59, 1, 1, "c._fq_zech_vec_is_zero", "vec"]], "_fq_zech_vec_neg": [[59, 1, 1, "c._fq_zech_vec_neg", "ctx"], [59, 1, 1, "c._fq_zech_vec_neg", "len2"], [59, 1, 1, "c._fq_zech_vec_neg", "vec1"], [59, 1, 1, "c._fq_zech_vec_neg", "vec2"]], "_fq_zech_vec_print": [[59, 1, 1, "c._fq_zech_vec_print", "ctx"], [59, 1, 1, "c._fq_zech_vec_print", "len"], [59, 1, 1, "c._fq_zech_vec_print", "vec"]], "_fq_zech_vec_randtest": [[59, 1, 1, "c._fq_zech_vec_randtest", "ctx"], [59, 1, 1, "c._fq_zech_vec_randtest", "f"], [59, 1, 1, "c._fq_zech_vec_randtest", "len"], [59, 1, 1, "c._fq_zech_vec_randtest", "state"]], "_fq_zech_vec_scalar_addmul_fq_zech": [[59, 1, 1, "c._fq_zech_vec_scalar_addmul_fq_zech", "c"], [59, 1, 1, "c._fq_zech_vec_scalar_addmul_fq_zech", "ctx"], [59, 1, 1, "c._fq_zech_vec_scalar_addmul_fq_zech", "len2"], [59, 1, 1, "c._fq_zech_vec_scalar_addmul_fq_zech", "vec1"], [59, 1, 1, "c._fq_zech_vec_scalar_addmul_fq_zech", "vec2"]], "_fq_zech_vec_scalar_submul_fq_zech": [[59, 1, 1, "c._fq_zech_vec_scalar_submul_fq_zech", "c"], [59, 1, 1, "c._fq_zech_vec_scalar_submul_fq_zech", "ctx"], [59, 1, 1, "c._fq_zech_vec_scalar_submul_fq_zech", "len2"], [59, 1, 1, "c._fq_zech_vec_scalar_submul_fq_zech", "vec1"], [59, 1, 1, "c._fq_zech_vec_scalar_submul_fq_zech", "vec2"]], "_fq_zech_vec_set": [[59, 1, 1, "c._fq_zech_vec_set", "ctx"], [59, 1, 1, "c._fq_zech_vec_set", "len2"], [59, 1, 1, "c._fq_zech_vec_set", "vec1"], [59, 1, 1, "c._fq_zech_vec_set", "vec2"]], "_fq_zech_vec_sub": [[59, 1, 1, "c._fq_zech_vec_sub", "ctx"], [59, 1, 1, "c._fq_zech_vec_sub", "len2"], [59, 1, 1, "c._fq_zech_vec_sub", "res"], [59, 1, 1, "c._fq_zech_vec_sub", "vec1"], [59, 1, 1, "c._fq_zech_vec_sub", "vec2"]], "_fq_zech_vec_swap": [[59, 1, 1, "c._fq_zech_vec_swap", "ctx"], [59, 1, 1, "c._fq_zech_vec_swap", "len2"], [59, 1, 1, "c._fq_zech_vec_swap", "vec1"], [59, 1, 1, "c._fq_zech_vec_swap", "vec2"]], "_fq_zech_vec_zero": [[59, 1, 1, "c._fq_zech_vec_zero", "ctx"], [59, 1, 1, "c._fq_zech_vec_zero", "len"], [59, 1, 1, "c._fq_zech_vec_zero", "vec"]], "_mpf_vec_add": [[67, 1, 1, "c._mpf_vec_add", "len2"], [67, 1, 1, "c._mpf_vec_add", "res"], [67, 1, 1, "c._mpf_vec_add", "vec1"], [67, 1, 1, "c._mpf_vec_add", "vec2"]], "_mpf_vec_approx_equal": [[67, 1, 1, "c._mpf_vec_approx_equal", "bits"], [67, 1, 1, "c._mpf_vec_approx_equal", "len"], [67, 1, 1, "c._mpf_vec_approx_equal", "vec1"], [67, 1, 1, "c._mpf_vec_approx_equal", "vec2"]], "_mpf_vec_clear": [[67, 1, 1, "c._mpf_vec_clear", "len"], [67, 1, 1, "c._mpf_vec_clear", "vec"]], "_mpf_vec_dot": [[67, 1, 1, "c._mpf_vec_dot", "len2"], [67, 1, 1, "c._mpf_vec_dot", "res"], [67, 1, 1, "c._mpf_vec_dot", "vec1"], [67, 1, 1, "c._mpf_vec_dot", "vec2"]], "_mpf_vec_dot2": [[67, 1, 1, "c._mpf_vec_dot2", "len2"], [67, 1, 1, "c._mpf_vec_dot2", "prec"], [67, 1, 1, "c._mpf_vec_dot2", "res"], [67, 1, 1, "c._mpf_vec_dot2", "vec1"], [67, 1, 1, "c._mpf_vec_dot2", "vec2"]], "_mpf_vec_equal": [[67, 1, 1, "c._mpf_vec_equal", "len"], [67, 1, 1, "c._mpf_vec_equal", "vec1"], [67, 1, 1, "c._mpf_vec_equal", "vec2"]], "_mpf_vec_init": [[67, 1, 1, "c._mpf_vec_init", "len"]], "_mpf_vec_is_zero": [[67, 1, 1, "c._mpf_vec_is_zero", "len"], [67, 1, 1, "c._mpf_vec_is_zero", "vec"]], "_mpf_vec_norm": [[67, 1, 1, "c._mpf_vec_norm", "len"], [67, 1, 1, "c._mpf_vec_norm", "res"], [67, 1, 1, "c._mpf_vec_norm", "vec"]], "_mpf_vec_norm2": [[67, 1, 1, "c._mpf_vec_norm2", "len"], [67, 1, 1, "c._mpf_vec_norm2", "prec"], [67, 1, 1, "c._mpf_vec_norm2", "res"], [67, 1, 1, "c._mpf_vec_norm2", "vec"]], "_mpf_vec_randtest": [[67, 1, 1, "c._mpf_vec_randtest", "bits"], [67, 1, 1, "c._mpf_vec_randtest", "f"], [67, 1, 1, "c._mpf_vec_randtest", "len"], [67, 1, 1, "c._mpf_vec_randtest", "state"]], "_mpf_vec_scalar_mul_2exp": [[67, 1, 1, "c._mpf_vec_scalar_mul_2exp", "exp"], [67, 1, 1, "c._mpf_vec_scalar_mul_2exp", "len"], [67, 1, 1, "c._mpf_vec_scalar_mul_2exp", "res"], [67, 1, 1, "c._mpf_vec_scalar_mul_2exp", "vec"]], "_mpf_vec_scalar_mul_mpf": [[67, 1, 1, "c._mpf_vec_scalar_mul_mpf", "c"], [67, 1, 1, "c._mpf_vec_scalar_mul_mpf", "len"], [67, 1, 1, "c._mpf_vec_scalar_mul_mpf", "res"], [67, 1, 1, "c._mpf_vec_scalar_mul_mpf", "vec"]], "_mpf_vec_set": [[67, 1, 1, "c._mpf_vec_set", "len2"], [67, 1, 1, "c._mpf_vec_set", "vec1"], [67, 1, 1, "c._mpf_vec_set", "vec2"]], "_mpf_vec_sub": [[67, 1, 1, "c._mpf_vec_sub", "len2"], [67, 1, 1, "c._mpf_vec_sub", "res"], [67, 1, 1, "c._mpf_vec_sub", "vec1"], [67, 1, 1, "c._mpf_vec_sub", "vec2"]], "_mpf_vec_zero": [[67, 1, 1, "c._mpf_vec_zero", "len"], [67, 1, 1, "c._mpf_vec_zero", "vec"]], "_mpfr_vec_add": [[69, 1, 1, "c._mpfr_vec_add", "len"], [69, 1, 1, "c._mpfr_vec_add", "res"], [69, 1, 1, "c._mpfr_vec_add", "vec1"], [69, 1, 1, "c._mpfr_vec_add", "vec2"]], "_mpfr_vec_clear": [[69, 1, 1, "c._mpfr_vec_clear", "len"], [69, 1, 1, "c._mpfr_vec_clear", "vec"]], "_mpfr_vec_init": [[69, 1, 1, "c._mpfr_vec_init", "len"], [69, 1, 1, "c._mpfr_vec_init", "prec"]], "_mpfr_vec_scalar_mul_2exp": [[69, 1, 1, "c._mpfr_vec_scalar_mul_2exp", "exp"], [69, 1, 1, "c._mpfr_vec_scalar_mul_2exp", "len"], [69, 1, 1, "c._mpfr_vec_scalar_mul_2exp", "res"], [69, 1, 1, "c._mpfr_vec_scalar_mul_2exp", "vec"]], "_mpfr_vec_scalar_mul_mpfr": [[69, 1, 1, "c._mpfr_vec_scalar_mul_mpfr", "c"], [69, 1, 1, "c._mpfr_vec_scalar_mul_mpfr", "len"], [69, 1, 1, "c._mpfr_vec_scalar_mul_mpfr", "res"], [69, 1, 1, "c._mpfr_vec_scalar_mul_mpfr", "vec"]], "_mpfr_vec_scalar_product": [[69, 1, 1, "c._mpfr_vec_scalar_product", "len"], [69, 1, 1, "c._mpfr_vec_scalar_product", "res"], [69, 1, 1, "c._mpfr_vec_scalar_product", "vec1"], [69, 1, 1, "c._mpfr_vec_scalar_product", "vec2"]], "_mpfr_vec_set": [[69, 1, 1, "c._mpfr_vec_set", "len"], [69, 1, 1, "c._mpfr_vec_set", "vec1"], [69, 1, 1, "c._mpfr_vec_set", "vec2"]], "_mpfr_vec_zero": [[69, 1, 1, "c._mpfr_vec_zero", "len"], [69, 1, 1, "c._mpfr_vec_zero", "vec"]], "_mpoly_heap_insert": [[71, 1, 1, "c._mpoly_heap_insert", "N"], [71, 1, 1, "c._mpoly_heap_insert", "cmpmask"], [71, 1, 1, "c._mpoly_heap_insert", "exp"], [71, 1, 1, "c._mpoly_heap_insert", "heap"], [71, 1, 1, "c._mpoly_heap_insert", "heap_len"], [71, 1, 1, "c._mpoly_heap_insert", "x"]], "_mpoly_heap_insert1": [[71, 1, 1, "c._mpoly_heap_insert1", "exp"], [71, 1, 1, "c._mpoly_heap_insert1", "heap"], [71, 1, 1, "c._mpoly_heap_insert1", "heap_len"], [71, 1, 1, "c._mpoly_heap_insert1", "maskhi"], [71, 1, 1, "c._mpoly_heap_insert1", "x"]], "_mpoly_heap_pop": [[71, 1, 1, "c._mpoly_heap_pop", "N"], [71, 1, 1, "c._mpoly_heap_pop", "heap"], [71, 1, 1, "c._mpoly_heap_pop", "heap_len"], [71, 1, 1, "c._mpoly_heap_pop", "maskhi"], [71, 1, 1, "c._mpoly_heap_pop", "masklo"]], "_mpoly_heap_pop1": [[71, 1, 1, "c._mpoly_heap_pop1", "heap"], [71, 1, 1, "c._mpoly_heap_pop1", "heap_len"], [71, 1, 1, "c._mpoly_heap_pop1", "maskhi"]], "_nmod_add": [[72, 1, 1, "c._nmod_add", "a"], [72, 1, 1, "c._nmod_add", "b"], [72, 1, 1, "c._nmod_add", "mod"]], "_nmod_mat_mul_classical_op": [[73, 1, 1, "c._nmod_mat_mul_classical_op", "A"], [73, 1, 1, "c._nmod_mat_mul_classical_op", "B"], [73, 1, 1, "c._nmod_mat_mul_classical_op", "C"], [73, 1, 1, "c._nmod_mat_mul_classical_op", "D"], [73, 1, 1, "c._nmod_mat_mul_classical_op", "op"]], "_nmod_mat_mul_classical_threaded_op": [[73, 1, 1, "c._nmod_mat_mul_classical_threaded_op", "A"], [73, 1, 1, "c._nmod_mat_mul_classical_threaded_op", "B"], [73, 1, 1, "c._nmod_mat_mul_classical_threaded_op", "C"], [73, 1, 1, "c._nmod_mat_mul_classical_threaded_op", "D"], [73, 1, 1, "c._nmod_mat_mul_classical_threaded_op", "op"]], "_nmod_mat_mul_classical_threaded_pool_op": [[73, 1, 1, "c._nmod_mat_mul_classical_threaded_pool_op", "A"], [73, 1, 1, "c._nmod_mat_mul_classical_threaded_pool_op", "B"], [73, 1, 1, "c._nmod_mat_mul_classical_threaded_pool_op", "C"], [73, 1, 1, "c._nmod_mat_mul_classical_threaded_pool_op", "D"], [73, 1, 1, "c._nmod_mat_mul_classical_threaded_pool_op", "num_threads"], [73, 1, 1, "c._nmod_mat_mul_classical_threaded_pool_op", "op"], [73, 1, 1, "c._nmod_mat_mul_classical_threaded_pool_op", "threads"]], "_nmod_mat_pow": [[73, 1, 1, "c._nmod_mat_pow", "dest"], [73, 1, 1, "c._nmod_mat_pow", "mat"], [73, 1, 1, "c._nmod_mat_pow", "pow"]], "_nmod_mul_fullword": [[72, 1, 1, "c._nmod_mul_fullword", "a"], [72, 1, 1, "c._nmod_mul_fullword", "b"], [72, 1, 1, "c._nmod_mul_fullword", "mod"]], "_nmod_poly_KS2_pack": [[76, 1, 1, "c._nmod_poly_KS2_pack", "b"], [76, 1, 1, "c._nmod_poly_KS2_pack", "k"], [76, 1, 1, "c._nmod_poly_KS2_pack", "n"], [76, 1, 1, "c._nmod_poly_KS2_pack", "op"], [76, 1, 1, "c._nmod_poly_KS2_pack", "r"], [76, 1, 1, "c._nmod_poly_KS2_pack", "res"], [76, 1, 1, "c._nmod_poly_KS2_pack", "s"]], "_nmod_poly_KS2_pack1": [[76, 1, 1, "c._nmod_poly_KS2_pack1", "b"], [76, 1, 1, "c._nmod_poly_KS2_pack1", "k"], [76, 1, 1, "c._nmod_poly_KS2_pack1", "n"], [76, 1, 1, "c._nmod_poly_KS2_pack1", "op"], [76, 1, 1, "c._nmod_poly_KS2_pack1", "r"], [76, 1, 1, "c._nmod_poly_KS2_pack1", "res"], [76, 1, 1, "c._nmod_poly_KS2_pack1", "s"]], "_nmod_poly_KS2_recover_reduce": [[76, 1, 1, "c._nmod_poly_KS2_recover_reduce", "b"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce", "mod"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce", "n"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce", "op1"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce", "op2"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce", "res"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce", "s"]], "_nmod_poly_KS2_recover_reduce1": [[76, 1, 1, "c._nmod_poly_KS2_recover_reduce1", "b"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce1", "mod"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce1", "n"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce1", "op1"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce1", "op2"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce1", "res"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce1", "s"]], "_nmod_poly_KS2_recover_reduce2": [[76, 1, 1, "c._nmod_poly_KS2_recover_reduce2", "b"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce2", "mod"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce2", "n"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce2", "op1"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce2", "op2"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce2", "res"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce2", "s"]], "_nmod_poly_KS2_recover_reduce2b": [[76, 1, 1, "c._nmod_poly_KS2_recover_reduce2b", "b"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce2b", "mod"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce2b", "n"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce2b", "op1"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce2b", "op2"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce2b", "res"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce2b", "s"]], "_nmod_poly_KS2_recover_reduce3": [[76, 1, 1, "c._nmod_poly_KS2_recover_reduce3", "b"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce3", "mod"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce3", "n"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce3", "op1"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce3", "op2"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce3", "res"], [76, 1, 1, "c._nmod_poly_KS2_recover_reduce3", "s"]], "_nmod_poly_KS2_reduce": [[76, 1, 1, "c._nmod_poly_KS2_reduce", "mod"], [76, 1, 1, "c._nmod_poly_KS2_reduce", "n"], [76, 1, 1, "c._nmod_poly_KS2_reduce", "op"], [76, 1, 1, "c._nmod_poly_KS2_reduce", "res"], [76, 1, 1, "c._nmod_poly_KS2_reduce", "s"], [76, 1, 1, "c._nmod_poly_KS2_reduce", "w"]], "_nmod_poly_KS2_unpack": [[76, 1, 1, "c._nmod_poly_KS2_unpack", "b"], [76, 1, 1, "c._nmod_poly_KS2_unpack", "k"], [76, 1, 1, "c._nmod_poly_KS2_unpack", "n"], [76, 1, 1, "c._nmod_poly_KS2_unpack", "op"], [76, 1, 1, "c._nmod_poly_KS2_unpack", "res"]], "_nmod_poly_KS2_unpack1": [[76, 1, 1, "c._nmod_poly_KS2_unpack1", "b"], [76, 1, 1, "c._nmod_poly_KS2_unpack1", "k"], [76, 1, 1, "c._nmod_poly_KS2_unpack1", "n"], [76, 1, 1, "c._nmod_poly_KS2_unpack1", "op"], [76, 1, 1, "c._nmod_poly_KS2_unpack1", "res"]], "_nmod_poly_KS2_unpack2": [[76, 1, 1, "c._nmod_poly_KS2_unpack2", "b"], [76, 1, 1, "c._nmod_poly_KS2_unpack2", "k"], [76, 1, 1, "c._nmod_poly_KS2_unpack2", "n"], [76, 1, 1, "c._nmod_poly_KS2_unpack2", "op"], [76, 1, 1, "c._nmod_poly_KS2_unpack2", "res"]], "_nmod_poly_KS2_unpack3": [[76, 1, 1, "c._nmod_poly_KS2_unpack3", "b"], [76, 1, 1, "c._nmod_poly_KS2_unpack3", "k"], [76, 1, 1, "c._nmod_poly_KS2_unpack3", "n"], [76, 1, 1, "c._nmod_poly_KS2_unpack3", "op"], [76, 1, 1, "c._nmod_poly_KS2_unpack3", "res"]], "_nmod_poly_add": [[76, 1, 1, "c._nmod_poly_add", "len1"], [76, 1, 1, "c._nmod_poly_add", "len2"], [76, 1, 1, "c._nmod_poly_add", "mod"], [76, 1, 1, "c._nmod_poly_add", "poly1"], [76, 1, 1, "c._nmod_poly_add", "poly2"], [76, 1, 1, "c._nmod_poly_add", "res"]], "_nmod_poly_asin_series": [[76, 1, 1, "c._nmod_poly_asin_series", "g"], [76, 1, 1, "c._nmod_poly_asin_series", "h"], [76, 1, 1, "c._nmod_poly_asin_series", "mod"], [76, 1, 1, "c._nmod_poly_asin_series", "n"]], "_nmod_poly_asinh_series": [[76, 1, 1, "c._nmod_poly_asinh_series", "g"], [76, 1, 1, "c._nmod_poly_asinh_series", "h"], [76, 1, 1, "c._nmod_poly_asinh_series", "mod"], [76, 1, 1, "c._nmod_poly_asinh_series", "n"]], "_nmod_poly_atan_series": [[76, 1, 1, "c._nmod_poly_atan_series", "g"], [76, 1, 1, "c._nmod_poly_atan_series", "h"], [76, 1, 1, "c._nmod_poly_atan_series", "mod"], [76, 1, 1, "c._nmod_poly_atan_series", "n"]], "_nmod_poly_atanh_series": [[76, 1, 1, "c._nmod_poly_atanh_series", "g"], [76, 1, 1, "c._nmod_poly_atanh_series", "h"], [76, 1, 1, "c._nmod_poly_atanh_series", "mod"], [76, 1, 1, "c._nmod_poly_atanh_series", "n"]], "_nmod_poly_bit_pack": [[76, 1, 1, "c._nmod_poly_bit_pack", "bits"], [76, 1, 1, "c._nmod_poly_bit_pack", "len"], [76, 1, 1, "c._nmod_poly_bit_pack", "poly"], [76, 1, 1, "c._nmod_poly_bit_pack", "res"]], "_nmod_poly_bit_unpack": [[76, 1, 1, "c._nmod_poly_bit_unpack", "bits"], [76, 1, 1, "c._nmod_poly_bit_unpack", "len"], [76, 1, 1, "c._nmod_poly_bit_unpack", "mod"], [76, 1, 1, "c._nmod_poly_bit_unpack", "mpn"], [76, 1, 1, "c._nmod_poly_bit_unpack", "res"]], "_nmod_poly_compose": [[76, 1, 1, "c._nmod_poly_compose", "len1"], [76, 1, 1, "c._nmod_poly_compose", "len2"], [76, 1, 1, "c._nmod_poly_compose", "mod"], [76, 1, 1, "c._nmod_poly_compose", "poly1"], [76, 1, 1, "c._nmod_poly_compose", "poly2"], [76, 1, 1, "c._nmod_poly_compose", "res"]], "_nmod_poly_compose_divconquer": [[76, 1, 1, "c._nmod_poly_compose_divconquer", "len1"], [76, 1, 1, "c._nmod_poly_compose_divconquer", "len2"], [76, 1, 1, "c._nmod_poly_compose_divconquer", "mod"], [76, 1, 1, "c._nmod_poly_compose_divconquer", "poly1"], [76, 1, 1, "c._nmod_poly_compose_divconquer", "poly2"], [76, 1, 1, "c._nmod_poly_compose_divconquer", "res"]], "_nmod_poly_compose_horner": [[76, 1, 1, "c._nmod_poly_compose_horner", "len1"], [76, 1, 1, "c._nmod_poly_compose_horner", "len2"], [76, 1, 1, "c._nmod_poly_compose_horner", "mod"], [76, 1, 1, "c._nmod_poly_compose_horner", "poly1"], [76, 1, 1, "c._nmod_poly_compose_horner", "poly2"], [76, 1, 1, "c._nmod_poly_compose_horner", "res"]], "_nmod_poly_compose_mod": [[76, 1, 1, "c._nmod_poly_compose_mod", "f"], [76, 1, 1, "c._nmod_poly_compose_mod", "g"], [76, 1, 1, "c._nmod_poly_compose_mod", "h"], [76, 1, 1, "c._nmod_poly_compose_mod", "lenf"], [76, 1, 1, "c._nmod_poly_compose_mod", "lenh"], [76, 1, 1, "c._nmod_poly_compose_mod", "mod"], [76, 1, 1, "c._nmod_poly_compose_mod", "res"]], "_nmod_poly_compose_mod_brent_kung": [[76, 1, 1, "c._nmod_poly_compose_mod_brent_kung", "f"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung", "g"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung", "h"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung", "lenf"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung", "lenh"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung", "mod"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung", "res"]], "_nmod_poly_compose_mod_brent_kung_precomp_preinv": [[76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_precomp_preinv", "A"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_precomp_preinv", "f"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_precomp_preinv", "h"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_precomp_preinv", "hinv"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_precomp_preinv", "lenf"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_precomp_preinv", "lenh"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_precomp_preinv", "lenhinv"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_precomp_preinv", "mod"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_precomp_preinv", "res"]], "_nmod_poly_compose_mod_brent_kung_precomp_preinv_worker": [[76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_precomp_preinv_worker", "arg_ptr"]], "_nmod_poly_compose_mod_brent_kung_preinv": [[76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_preinv", "f"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_preinv", "g"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_preinv", "h"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_preinv", "hinv"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_preinv", "lenf"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_preinv", "lenh"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_preinv", "lenhinv"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_preinv", "mod"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_preinv", "res"]], "_nmod_poly_compose_mod_brent_kung_vec_preinv": [[76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_vec_preinv", "g"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_vec_preinv", "h"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_vec_preinv", "hinv"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_vec_preinv", "l"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_vec_preinv", "len1"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_vec_preinv", "leng"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_vec_preinv", "lenh"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_vec_preinv", "lenhinv"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_vec_preinv", "mod"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_vec_preinv", "polys"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_vec_preinv", "res"]], "_nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool": [[76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "g"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "glen"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "l"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "len"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "leninv"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "lenpolys"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "mod"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "num_threads"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "poly"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "polyinv"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "polys"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "res"], [76, 1, 1, "c._nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "threads"]], "_nmod_poly_compose_mod_horner": [[76, 1, 1, "c._nmod_poly_compose_mod_horner", "f"], [76, 1, 1, "c._nmod_poly_compose_mod_horner", "g"], [76, 1, 1, "c._nmod_poly_compose_mod_horner", "h"], [76, 1, 1, "c._nmod_poly_compose_mod_horner", "lenf"], [76, 1, 1, "c._nmod_poly_compose_mod_horner", "lenh"], [76, 1, 1, "c._nmod_poly_compose_mod_horner", "mod"], [76, 1, 1, "c._nmod_poly_compose_mod_horner", "res"]], "_nmod_poly_compose_series": [[76, 1, 1, "c._nmod_poly_compose_series", "len1"], [76, 1, 1, "c._nmod_poly_compose_series", "len2"], [76, 1, 1, "c._nmod_poly_compose_series", "n"], [76, 1, 1, "c._nmod_poly_compose_series", "poly1"], [76, 1, 1, "c._nmod_poly_compose_series", "poly2"], [76, 1, 1, "c._nmod_poly_compose_series", "res"]], "_nmod_poly_compose_series_brent_kung": [[76, 1, 1, "c._nmod_poly_compose_series_brent_kung", "len1"], [76, 1, 1, "c._nmod_poly_compose_series_brent_kung", "len2"], [76, 1, 1, "c._nmod_poly_compose_series_brent_kung", "n"], [76, 1, 1, "c._nmod_poly_compose_series_brent_kung", "poly1"], [76, 1, 1, "c._nmod_poly_compose_series_brent_kung", "poly2"], [76, 1, 1, "c._nmod_poly_compose_series_brent_kung", "res"]], "_nmod_poly_compose_series_divconquer": [[76, 1, 1, "c._nmod_poly_compose_series_divconquer", "N"], [76, 1, 1, "c._nmod_poly_compose_series_divconquer", "len1"], [76, 1, 1, "c._nmod_poly_compose_series_divconquer", "len2"], [76, 1, 1, "c._nmod_poly_compose_series_divconquer", "mod"], [76, 1, 1, "c._nmod_poly_compose_series_divconquer", "poly1"], [76, 1, 1, "c._nmod_poly_compose_series_divconquer", "poly2"], [76, 1, 1, "c._nmod_poly_compose_series_divconquer", "res"]], "_nmod_poly_compose_series_horner": [[76, 1, 1, "c._nmod_poly_compose_series_horner", "len1"], [76, 1, 1, "c._nmod_poly_compose_series_horner", "len2"], [76, 1, 1, "c._nmod_poly_compose_series_horner", "n"], [76, 1, 1, "c._nmod_poly_compose_series_horner", "poly1"], [76, 1, 1, "c._nmod_poly_compose_series_horner", "poly2"], [76, 1, 1, "c._nmod_poly_compose_series_horner", "res"]], "_nmod_poly_cos_series": [[76, 1, 1, "c._nmod_poly_cos_series", "g"], [76, 1, 1, "c._nmod_poly_cos_series", "h"], [76, 1, 1, "c._nmod_poly_cos_series", "mod"], [76, 1, 1, "c._nmod_poly_cos_series", "n"]], "_nmod_poly_cosh_series": [[76, 1, 1, "c._nmod_poly_cosh_series", "g"], [76, 1, 1, "c._nmod_poly_cosh_series", "h"], [76, 1, 1, "c._nmod_poly_cosh_series", "mod"], [76, 1, 1, "c._nmod_poly_cosh_series", "n"]], "_nmod_poly_crt_local_size": [[18, 1, 1, "c._nmod_poly_crt_local_size", "CRT"]], "_nmod_poly_derivative": [[76, 1, 1, "c._nmod_poly_derivative", "len"], [76, 1, 1, "c._nmod_poly_derivative", "mod"], [76, 1, 1, "c._nmod_poly_derivative", "x"], [76, 1, 1, "c._nmod_poly_derivative", "x_prime"]], "_nmod_poly_discriminant": [[76, 1, 1, "c._nmod_poly_discriminant", "len"], [76, 1, 1, "c._nmod_poly_discriminant", "mod"], [76, 1, 1, "c._nmod_poly_discriminant", "poly"]], "_nmod_poly_div": [[76, 1, 1, "c._nmod_poly_div", "A"], [76, 1, 1, "c._nmod_poly_div", "B"], [76, 1, 1, "c._nmod_poly_div", "Q"], [76, 1, 1, "c._nmod_poly_div", "lenA"], [76, 1, 1, "c._nmod_poly_div", "lenB"], [76, 1, 1, "c._nmod_poly_div", "mod"]], "_nmod_poly_div_basecase": [[76, 1, 1, "c._nmod_poly_div_basecase", "A"], [76, 1, 1, "c._nmod_poly_div_basecase", "A_len"], [76, 1, 1, "c._nmod_poly_div_basecase", "B"], [76, 1, 1, "c._nmod_poly_div_basecase", "B_len"], [76, 1, 1, "c._nmod_poly_div_basecase", "Q"], [76, 1, 1, "c._nmod_poly_div_basecase", "W"], [76, 1, 1, "c._nmod_poly_div_basecase", "mod"]], "_nmod_poly_div_divconquer": [[76, 1, 1, "c._nmod_poly_div_divconquer", "A"], [76, 1, 1, "c._nmod_poly_div_divconquer", "B"], [76, 1, 1, "c._nmod_poly_div_divconquer", "Q"], [76, 1, 1, "c._nmod_poly_div_divconquer", "lenA"], [76, 1, 1, "c._nmod_poly_div_divconquer", "lenB"], [76, 1, 1, "c._nmod_poly_div_divconquer", "mod"]], "_nmod_poly_div_divconquer_recursive": [[76, 1, 1, "c._nmod_poly_div_divconquer_recursive", "A"], [76, 1, 1, "c._nmod_poly_div_divconquer_recursive", "B"], [76, 1, 1, "c._nmod_poly_div_divconquer_recursive", "Q"], [76, 1, 1, "c._nmod_poly_div_divconquer_recursive", "V"], [76, 1, 1, "c._nmod_poly_div_divconquer_recursive", "W"], [76, 1, 1, "c._nmod_poly_div_divconquer_recursive", "lenB"], [76, 1, 1, "c._nmod_poly_div_divconquer_recursive", "mod"]], "_nmod_poly_div_newton": [[76, 1, 1, "c._nmod_poly_div_newton", "A"], [76, 1, 1, "c._nmod_poly_div_newton", "Alen"], [76, 1, 1, "c._nmod_poly_div_newton", "B"], [76, 1, 1, "c._nmod_poly_div_newton", "Blen"], [76, 1, 1, "c._nmod_poly_div_newton", "Q"], [76, 1, 1, "c._nmod_poly_div_newton", "mod"]], "_nmod_poly_div_newton_n_preinv": [[76, 1, 1, "c._nmod_poly_div_newton_n_preinv", "A"], [76, 1, 1, "c._nmod_poly_div_newton_n_preinv", "B"], [76, 1, 1, "c._nmod_poly_div_newton_n_preinv", "Binv"], [76, 1, 1, "c._nmod_poly_div_newton_n_preinv", "Q"], [76, 1, 1, "c._nmod_poly_div_newton_n_preinv", "lenA"], [76, 1, 1, "c._nmod_poly_div_newton_n_preinv", "lenB"], [76, 1, 1, "c._nmod_poly_div_newton_n_preinv", "lenBinv"], [76, 1, 1, "c._nmod_poly_div_newton_n_preinv", "mod"]], "_nmod_poly_div_root": [[76, 1, 1, "c._nmod_poly_div_root", "A"], [76, 1, 1, "c._nmod_poly_div_root", "Q"], [76, 1, 1, "c._nmod_poly_div_root", "c"], [76, 1, 1, "c._nmod_poly_div_root", "len"], [76, 1, 1, "c._nmod_poly_div_root", "mod"]], "_nmod_poly_div_series": [[76, 1, 1, "c._nmod_poly_div_series", "A"], [76, 1, 1, "c._nmod_poly_div_series", "Alen"], [76, 1, 1, "c._nmod_poly_div_series", "B"], [76, 1, 1, "c._nmod_poly_div_series", "Blen"], [76, 1, 1, "c._nmod_poly_div_series", "Q"], [76, 1, 1, "c._nmod_poly_div_series", "mod"], [76, 1, 1, "c._nmod_poly_div_series", "n"]], "_nmod_poly_div_series_basecase": [[76, 1, 1, "c._nmod_poly_div_series_basecase", "A"], [76, 1, 1, "c._nmod_poly_div_series_basecase", "Alen"], [76, 1, 1, "c._nmod_poly_div_series_basecase", "B"], [76, 1, 1, "c._nmod_poly_div_series_basecase", "Blen"], [76, 1, 1, "c._nmod_poly_div_series_basecase", "Q"], [76, 1, 1, "c._nmod_poly_div_series_basecase", "mod"], [76, 1, 1, "c._nmod_poly_div_series_basecase", "n"]], "_nmod_poly_divides": [[76, 1, 1, "c._nmod_poly_divides", "A"], [76, 1, 1, "c._nmod_poly_divides", "B"], [76, 1, 1, "c._nmod_poly_divides", "Q"], [76, 1, 1, "c._nmod_poly_divides", "lenA"], [76, 1, 1, "c._nmod_poly_divides", "lenB"], [76, 1, 1, "c._nmod_poly_divides", "mod"]], "_nmod_poly_divides_classical": [[76, 1, 1, "c._nmod_poly_divides_classical", "A"], [76, 1, 1, "c._nmod_poly_divides_classical", "B"], [76, 1, 1, "c._nmod_poly_divides_classical", "Q"], [76, 1, 1, "c._nmod_poly_divides_classical", "lenA"], [76, 1, 1, "c._nmod_poly_divides_classical", "lenB"], [76, 1, 1, "c._nmod_poly_divides_classical", "mod"]], "_nmod_poly_divrem": [[76, 1, 1, "c._nmod_poly_divrem", "A"], [76, 1, 1, "c._nmod_poly_divrem", "B"], [76, 1, 1, "c._nmod_poly_divrem", "Q"], [76, 1, 1, "c._nmod_poly_divrem", "R"], [76, 1, 1, "c._nmod_poly_divrem", "lenA"], [76, 1, 1, "c._nmod_poly_divrem", "lenB"], [76, 1, 1, "c._nmod_poly_divrem", "mod"]], "_nmod_poly_divrem_basecase": [[76, 1, 1, "c._nmod_poly_divrem_basecase", "A"], [76, 1, 1, "c._nmod_poly_divrem_basecase", "A_len"], [76, 1, 1, "c._nmod_poly_divrem_basecase", "B"], [76, 1, 1, "c._nmod_poly_divrem_basecase", "B_len"], [76, 1, 1, "c._nmod_poly_divrem_basecase", "Q"], [76, 1, 1, "c._nmod_poly_divrem_basecase", "R"], [76, 1, 1, "c._nmod_poly_divrem_basecase", "W"], [76, 1, 1, "c._nmod_poly_divrem_basecase", "mod"]], "_nmod_poly_divrem_divconquer": [[76, 1, 1, "c._nmod_poly_divrem_divconquer", "A"], [76, 1, 1, "c._nmod_poly_divrem_divconquer", "B"], [76, 1, 1, "c._nmod_poly_divrem_divconquer", "Q"], [76, 1, 1, "c._nmod_poly_divrem_divconquer", "R"], [76, 1, 1, "c._nmod_poly_divrem_divconquer", "lenA"], [76, 1, 1, "c._nmod_poly_divrem_divconquer", "lenB"], [76, 1, 1, "c._nmod_poly_divrem_divconquer", "mod"]], "_nmod_poly_divrem_divconquer_recursive": [[76, 1, 1, "c._nmod_poly_divrem_divconquer_recursive", "A"], [76, 1, 1, "c._nmod_poly_divrem_divconquer_recursive", "B"], [76, 1, 1, "c._nmod_poly_divrem_divconquer_recursive", "BQ"], [76, 1, 1, "c._nmod_poly_divrem_divconquer_recursive", "Q"], [76, 1, 1, "c._nmod_poly_divrem_divconquer_recursive", "V"], [76, 1, 1, "c._nmod_poly_divrem_divconquer_recursive", "W"], [76, 1, 1, "c._nmod_poly_divrem_divconquer_recursive", "lenB"], [76, 1, 1, "c._nmod_poly_divrem_divconquer_recursive", "mod"]], "_nmod_poly_divrem_newton": [[76, 1, 1, "c._nmod_poly_divrem_newton", "A"], [76, 1, 1, "c._nmod_poly_divrem_newton", "Alen"], [76, 1, 1, "c._nmod_poly_divrem_newton", "B"], [76, 1, 1, "c._nmod_poly_divrem_newton", "Blen"], [76, 1, 1, "c._nmod_poly_divrem_newton", "Q"], [76, 1, 1, "c._nmod_poly_divrem_newton", "R"], [76, 1, 1, "c._nmod_poly_divrem_newton", "mod"]], "_nmod_poly_divrem_newton_n_preinv": [[76, 1, 1, "c._nmod_poly_divrem_newton_n_preinv", "A"], [76, 1, 1, "c._nmod_poly_divrem_newton_n_preinv", "B"], [76, 1, 1, "c._nmod_poly_divrem_newton_n_preinv", "Binv"], [76, 1, 1, "c._nmod_poly_divrem_newton_n_preinv", "Q"], [76, 1, 1, "c._nmod_poly_divrem_newton_n_preinv", "R"], [76, 1, 1, "c._nmod_poly_divrem_newton_n_preinv", "lenA"], [76, 1, 1, "c._nmod_poly_divrem_newton_n_preinv", "lenB"], [76, 1, 1, "c._nmod_poly_divrem_newton_n_preinv", "lenBinv"], [76, 1, 1, "c._nmod_poly_divrem_newton_n_preinv", "mod"]], "_nmod_poly_divrem_q0": [[76, 1, 1, "c._nmod_poly_divrem_q0", "A"], [76, 1, 1, "c._nmod_poly_divrem_q0", "B"], [76, 1, 1, "c._nmod_poly_divrem_q0", "Q"], [76, 1, 1, "c._nmod_poly_divrem_q0", "R"], [76, 1, 1, "c._nmod_poly_divrem_q0", "lenA"], [76, 1, 1, "c._nmod_poly_divrem_q0", "mod"]], "_nmod_poly_divrem_q1": [[76, 1, 1, "c._nmod_poly_divrem_q1", "A"], [76, 1, 1, "c._nmod_poly_divrem_q1", "B"], [76, 1, 1, "c._nmod_poly_divrem_q1", "Q"], [76, 1, 1, "c._nmod_poly_divrem_q1", "R"], [76, 1, 1, "c._nmod_poly_divrem_q1", "lenA"], [76, 1, 1, "c._nmod_poly_divrem_q1", "lenB"], [76, 1, 1, "c._nmod_poly_divrem_q1", "mod"]], "_nmod_poly_evaluate_nmod": [[76, 1, 1, "c._nmod_poly_evaluate_nmod", "c"], [76, 1, 1, "c._nmod_poly_evaluate_nmod", "len"], [76, 1, 1, "c._nmod_poly_evaluate_nmod", "mod"], [76, 1, 1, "c._nmod_poly_evaluate_nmod", "poly"]], "_nmod_poly_evaluate_nmod_vec": [[76, 1, 1, "c._nmod_poly_evaluate_nmod_vec", "len"], [76, 1, 1, "c._nmod_poly_evaluate_nmod_vec", "mod"], [76, 1, 1, "c._nmod_poly_evaluate_nmod_vec", "n"], [76, 1, 1, "c._nmod_poly_evaluate_nmod_vec", "poly"], [76, 1, 1, "c._nmod_poly_evaluate_nmod_vec", "xs"], [76, 1, 1, "c._nmod_poly_evaluate_nmod_vec", "ys"]], "_nmod_poly_evaluate_nmod_vec_fast": [[76, 1, 1, "c._nmod_poly_evaluate_nmod_vec_fast", "len"], [76, 1, 1, "c._nmod_poly_evaluate_nmod_vec_fast", "mod"], [76, 1, 1, "c._nmod_poly_evaluate_nmod_vec_fast", "n"], [76, 1, 1, "c._nmod_poly_evaluate_nmod_vec_fast", "poly"], [76, 1, 1, "c._nmod_poly_evaluate_nmod_vec_fast", "xs"], [76, 1, 1, "c._nmod_poly_evaluate_nmod_vec_fast", "ys"]], "_nmod_poly_evaluate_nmod_vec_fast_precomp": [[76, 1, 1, "c._nmod_poly_evaluate_nmod_vec_fast_precomp", "len"], [76, 1, 1, "c._nmod_poly_evaluate_nmod_vec_fast_precomp", "mod"], [76, 1, 1, "c._nmod_poly_evaluate_nmod_vec_fast_precomp", "plen"], [76, 1, 1, "c._nmod_poly_evaluate_nmod_vec_fast_precomp", "poly"], [76, 1, 1, "c._nmod_poly_evaluate_nmod_vec_fast_precomp", "tree"], [76, 1, 1, "c._nmod_poly_evaluate_nmod_vec_fast_precomp", "vs"]], "_nmod_poly_evaluate_nmod_vec_iter": [[76, 1, 1, "c._nmod_poly_evaluate_nmod_vec_iter", "len"], [76, 1, 1, "c._nmod_poly_evaluate_nmod_vec_iter", "mod"], [76, 1, 1, "c._nmod_poly_evaluate_nmod_vec_iter", "n"], [76, 1, 1, "c._nmod_poly_evaluate_nmod_vec_iter", "poly"], [76, 1, 1, "c._nmod_poly_evaluate_nmod_vec_iter", "xs"], [76, 1, 1, "c._nmod_poly_evaluate_nmod_vec_iter", "ys"]], "_nmod_poly_exp_expinv_series": [[76, 1, 1, "c._nmod_poly_exp_expinv_series", "f"], [76, 1, 1, "c._nmod_poly_exp_expinv_series", "g"], [76, 1, 1, "c._nmod_poly_exp_expinv_series", "h"], [76, 1, 1, "c._nmod_poly_exp_expinv_series", "mod"], [76, 1, 1, "c._nmod_poly_exp_expinv_series", "n"]], "_nmod_poly_exp_series": [[76, 1, 1, "c._nmod_poly_exp_series", "f"], [76, 1, 1, "c._nmod_poly_exp_series", "h"], [76, 1, 1, "c._nmod_poly_exp_series", "hlen"], [76, 1, 1, "c._nmod_poly_exp_series", "mod"], [76, 1, 1, "c._nmod_poly_exp_series", "n"]], "_nmod_poly_exp_series_basecase": [[76, 1, 1, "c._nmod_poly_exp_series_basecase", "g"], [76, 1, 1, "c._nmod_poly_exp_series_basecase", "h"], [76, 1, 1, "c._nmod_poly_exp_series_basecase", "hlen"], [76, 1, 1, "c._nmod_poly_exp_series_basecase", "mod"], [76, 1, 1, "c._nmod_poly_exp_series_basecase", "n"]], "_nmod_poly_exp_series_monomial_ui": [[76, 1, 1, "c._nmod_poly_exp_series_monomial_ui", "c"], [76, 1, 1, "c._nmod_poly_exp_series_monomial_ui", "g"], [76, 1, 1, "c._nmod_poly_exp_series_monomial_ui", "mod"], [76, 1, 1, "c._nmod_poly_exp_series_monomial_ui", "n"], [76, 1, 1, "c._nmod_poly_exp_series_monomial_ui", "r"]], "_nmod_poly_gcd": [[76, 1, 1, "c._nmod_poly_gcd", "A"], [76, 1, 1, "c._nmod_poly_gcd", "B"], [76, 1, 1, "c._nmod_poly_gcd", "G"], [76, 1, 1, "c._nmod_poly_gcd", "lenA"], [76, 1, 1, "c._nmod_poly_gcd", "lenB"], [76, 1, 1, "c._nmod_poly_gcd", "mod"]], "_nmod_poly_gcd_euclidean": [[76, 1, 1, "c._nmod_poly_gcd_euclidean", "A"], [76, 1, 1, "c._nmod_poly_gcd_euclidean", "B"], [76, 1, 1, "c._nmod_poly_gcd_euclidean", "G"], [76, 1, 1, "c._nmod_poly_gcd_euclidean", "lenA"], [76, 1, 1, "c._nmod_poly_gcd_euclidean", "lenB"], [76, 1, 1, "c._nmod_poly_gcd_euclidean", "mod"]], "_nmod_poly_gcd_hgcd": [[76, 1, 1, "c._nmod_poly_gcd_hgcd", "A"], [76, 1, 1, "c._nmod_poly_gcd_hgcd", "B"], [76, 1, 1, "c._nmod_poly_gcd_hgcd", "G"], [76, 1, 1, "c._nmod_poly_gcd_hgcd", "lenA"], [76, 1, 1, "c._nmod_poly_gcd_hgcd", "lenB"], [76, 1, 1, "c._nmod_poly_gcd_hgcd", "mod"]], "_nmod_poly_gcdinv": [[76, 1, 1, "c._nmod_poly_gcdinv", "A"], [76, 1, 1, "c._nmod_poly_gcdinv", "B"], [76, 1, 1, "c._nmod_poly_gcdinv", "G"], [76, 1, 1, "c._nmod_poly_gcdinv", "S"], [76, 1, 1, "c._nmod_poly_gcdinv", "lenA"], [76, 1, 1, "c._nmod_poly_gcdinv", "lenB"], [76, 1, 1, "c._nmod_poly_gcdinv", "mod"]], "_nmod_poly_hgcd": [[76, 1, 1, "c._nmod_poly_hgcd", "A"], [76, 1, 1, "c._nmod_poly_hgcd", "B"], [76, 1, 1, "c._nmod_poly_hgcd", "M"], [76, 1, 1, "c._nmod_poly_hgcd", "a"], [76, 1, 1, "c._nmod_poly_hgcd", "b"], [76, 1, 1, "c._nmod_poly_hgcd", "lenA"], [76, 1, 1, "c._nmod_poly_hgcd", "lenB"], [76, 1, 1, "c._nmod_poly_hgcd", "lenM"], [76, 1, 1, "c._nmod_poly_hgcd", "lena"], [76, 1, 1, "c._nmod_poly_hgcd", "lenb"], [76, 1, 1, "c._nmod_poly_hgcd", "mod"]], "_nmod_poly_integral": [[76, 1, 1, "c._nmod_poly_integral", "len"], [76, 1, 1, "c._nmod_poly_integral", "mod"], [76, 1, 1, "c._nmod_poly_integral", "x"], [76, 1, 1, "c._nmod_poly_integral", "x_int"]], "_nmod_poly_interpolate_nmod_vec": [[76, 1, 1, "c._nmod_poly_interpolate_nmod_vec", "mod"], [76, 1, 1, "c._nmod_poly_interpolate_nmod_vec", "n"], [76, 1, 1, "c._nmod_poly_interpolate_nmod_vec", "poly"], [76, 1, 1, "c._nmod_poly_interpolate_nmod_vec", "xs"], [76, 1, 1, "c._nmod_poly_interpolate_nmod_vec", "ys"]], "_nmod_poly_interpolate_nmod_vec_barycentric": [[76, 1, 1, "c._nmod_poly_interpolate_nmod_vec_barycentric", "mod"], [76, 1, 1, "c._nmod_poly_interpolate_nmod_vec_barycentric", "n"], [76, 1, 1, "c._nmod_poly_interpolate_nmod_vec_barycentric", "poly"], [76, 1, 1, "c._nmod_poly_interpolate_nmod_vec_barycentric", "xs"], [76, 1, 1, "c._nmod_poly_interpolate_nmod_vec_barycentric", "ys"]], "_nmod_poly_interpolate_nmod_vec_fast": [[76, 1, 1, "c._nmod_poly_interpolate_nmod_vec_fast", "mod"], [76, 1, 1, "c._nmod_poly_interpolate_nmod_vec_fast", "n"], [76, 1, 1, "c._nmod_poly_interpolate_nmod_vec_fast", "poly"], [76, 1, 1, "c._nmod_poly_interpolate_nmod_vec_fast", "xs"], [76, 1, 1, "c._nmod_poly_interpolate_nmod_vec_fast", "ys"]], "_nmod_poly_interpolate_nmod_vec_fast_precomp": [[76, 1, 1, "c._nmod_poly_interpolate_nmod_vec_fast_precomp", "len"], [76, 1, 1, "c._nmod_poly_interpolate_nmod_vec_fast_precomp", "mod"], [76, 1, 1, "c._nmod_poly_interpolate_nmod_vec_fast_precomp", "poly"], [76, 1, 1, "c._nmod_poly_interpolate_nmod_vec_fast_precomp", "tree"], [76, 1, 1, "c._nmod_poly_interpolate_nmod_vec_fast_precomp", "weights"], [76, 1, 1, "c._nmod_poly_interpolate_nmod_vec_fast_precomp", "ys"]], "_nmod_poly_interpolate_nmod_vec_newton": [[76, 1, 1, "c._nmod_poly_interpolate_nmod_vec_newton", "mod"], [76, 1, 1, "c._nmod_poly_interpolate_nmod_vec_newton", "n"], [76, 1, 1, "c._nmod_poly_interpolate_nmod_vec_newton", "poly"], [76, 1, 1, "c._nmod_poly_interpolate_nmod_vec_newton", "xs"], [76, 1, 1, "c._nmod_poly_interpolate_nmod_vec_newton", "ys"]], "_nmod_poly_interpolation_weights": [[76, 1, 1, "c._nmod_poly_interpolation_weights", "len"], [76, 1, 1, "c._nmod_poly_interpolation_weights", "mod"], [76, 1, 1, "c._nmod_poly_interpolation_weights", "tree"], [76, 1, 1, "c._nmod_poly_interpolation_weights", "w"]], "_nmod_poly_interval_poly_worker": [[77, 1, 1, "c._nmod_poly_interval_poly_worker", "arg_ptr"]], "_nmod_poly_inv_series": [[76, 1, 1, "c._nmod_poly_inv_series", "Q"], [76, 1, 1, "c._nmod_poly_inv_series", "Qinv"], [76, 1, 1, "c._nmod_poly_inv_series", "Qlen"], [76, 1, 1, "c._nmod_poly_inv_series", "mod"], [76, 1, 1, "c._nmod_poly_inv_series", "n"]], "_nmod_poly_inv_series_basecase": [[76, 1, 1, "c._nmod_poly_inv_series_basecase", "Q"], [76, 1, 1, "c._nmod_poly_inv_series_basecase", "Qinv"], [76, 1, 1, "c._nmod_poly_inv_series_basecase", "Qlen"], [76, 1, 1, "c._nmod_poly_inv_series_basecase", "mod"], [76, 1, 1, "c._nmod_poly_inv_series_basecase", "n"]], "_nmod_poly_inv_series_newton": [[76, 1, 1, "c._nmod_poly_inv_series_newton", "Q"], [76, 1, 1, "c._nmod_poly_inv_series_newton", "Qinv"], [76, 1, 1, "c._nmod_poly_inv_series_newton", "Qlen"], [76, 1, 1, "c._nmod_poly_inv_series_newton", "mod"], [76, 1, 1, "c._nmod_poly_inv_series_newton", "n"]], "_nmod_poly_invmod": [[76, 1, 1, "c._nmod_poly_invmod", "A"], [76, 1, 1, "c._nmod_poly_invmod", "B"], [76, 1, 1, "c._nmod_poly_invmod", "P"], [76, 1, 1, "c._nmod_poly_invmod", "lenB"], [76, 1, 1, "c._nmod_poly_invmod", "lenP"], [76, 1, 1, "c._nmod_poly_invmod", "mod"]], "_nmod_poly_invsqrt_series": [[76, 1, 1, "c._nmod_poly_invsqrt_series", "g"], [76, 1, 1, "c._nmod_poly_invsqrt_series", "h"], [76, 1, 1, "c._nmod_poly_invsqrt_series", "mod"], [76, 1, 1, "c._nmod_poly_invsqrt_series", "n"]], "_nmod_poly_is_squarefree": [[77, 1, 1, "c._nmod_poly_is_squarefree", "f"], [77, 1, 1, "c._nmod_poly_is_squarefree", "len"], [77, 1, 1, "c._nmod_poly_is_squarefree", "mod"]], "_nmod_poly_log_series": [[76, 1, 1, "c._nmod_poly_log_series", "g"], [76, 1, 1, "c._nmod_poly_log_series", "h"], [76, 1, 1, "c._nmod_poly_log_series", "hlen"], [76, 1, 1, "c._nmod_poly_log_series", "mod"], [76, 1, 1, "c._nmod_poly_log_series", "n"]], "_nmod_poly_log_series_monomial_ui": [[76, 1, 1, "c._nmod_poly_log_series_monomial_ui", "c"], [76, 1, 1, "c._nmod_poly_log_series_monomial_ui", "g"], [76, 1, 1, "c._nmod_poly_log_series_monomial_ui", "mod"], [76, 1, 1, "c._nmod_poly_log_series_monomial_ui", "n"], [76, 1, 1, "c._nmod_poly_log_series_monomial_ui", "r"]], "_nmod_poly_make_monic": [[76, 1, 1, "c._nmod_poly_make_monic", "input"], [76, 1, 1, "c._nmod_poly_make_monic", "len"], [76, 1, 1, "c._nmod_poly_make_monic", "mod"], [76, 1, 1, "c._nmod_poly_make_monic", "output"]], "_nmod_poly_mul": [[76, 1, 1, "c._nmod_poly_mul", "len1"], [76, 1, 1, "c._nmod_poly_mul", "len2"], [76, 1, 1, "c._nmod_poly_mul", "mod"], [76, 1, 1, "c._nmod_poly_mul", "poly1"], [76, 1, 1, "c._nmod_poly_mul", "poly2"], [76, 1, 1, "c._nmod_poly_mul", "res"]], "_nmod_poly_mul_KS": [[76, 1, 1, "c._nmod_poly_mul_KS", "bits"], [76, 1, 1, "c._nmod_poly_mul_KS", "in1"], [76, 1, 1, "c._nmod_poly_mul_KS", "in2"], [76, 1, 1, "c._nmod_poly_mul_KS", "len1"], [76, 1, 1, "c._nmod_poly_mul_KS", "len2"], [76, 1, 1, "c._nmod_poly_mul_KS", "mod"], [76, 1, 1, "c._nmod_poly_mul_KS", "out"]], "_nmod_poly_mul_KS2": [[76, 1, 1, "c._nmod_poly_mul_KS2", "mod"], [76, 1, 1, "c._nmod_poly_mul_KS2", "n1"], [76, 1, 1, "c._nmod_poly_mul_KS2", "n2"], [76, 1, 1, "c._nmod_poly_mul_KS2", "op1"], [76, 1, 1, "c._nmod_poly_mul_KS2", "op2"], [76, 1, 1, "c._nmod_poly_mul_KS2", "res"]], "_nmod_poly_mul_KS4": [[76, 1, 1, "c._nmod_poly_mul_KS4", "mod"], [76, 1, 1, "c._nmod_poly_mul_KS4", "n1"], [76, 1, 1, "c._nmod_poly_mul_KS4", "n2"], [76, 1, 1, "c._nmod_poly_mul_KS4", "op1"], [76, 1, 1, "c._nmod_poly_mul_KS4", "op2"], [76, 1, 1, "c._nmod_poly_mul_KS4", "res"]], "_nmod_poly_mul_classical": [[76, 1, 1, "c._nmod_poly_mul_classical", "len1"], [76, 1, 1, "c._nmod_poly_mul_classical", "len2"], [76, 1, 1, "c._nmod_poly_mul_classical", "mod"], [76, 1, 1, "c._nmod_poly_mul_classical", "poly1"], [76, 1, 1, "c._nmod_poly_mul_classical", "poly2"], [76, 1, 1, "c._nmod_poly_mul_classical", "res"]], "_nmod_poly_mulhigh": [[76, 1, 1, "c._nmod_poly_mulhigh", "len1"], [76, 1, 1, "c._nmod_poly_mulhigh", "len2"], [76, 1, 1, "c._nmod_poly_mulhigh", "mod"], [76, 1, 1, "c._nmod_poly_mulhigh", "n"], [76, 1, 1, "c._nmod_poly_mulhigh", "poly1"], [76, 1, 1, "c._nmod_poly_mulhigh", "poly2"], [76, 1, 1, "c._nmod_poly_mulhigh", "res"]], "_nmod_poly_mulhigh_classical": [[76, 1, 1, "c._nmod_poly_mulhigh_classical", "len1"], [76, 1, 1, "c._nmod_poly_mulhigh_classical", "len2"], [76, 1, 1, "c._nmod_poly_mulhigh_classical", "mod"], [76, 1, 1, "c._nmod_poly_mulhigh_classical", "poly1"], [76, 1, 1, "c._nmod_poly_mulhigh_classical", "poly2"], [76, 1, 1, "c._nmod_poly_mulhigh_classical", "res"], [76, 1, 1, "c._nmod_poly_mulhigh_classical", "start"]], "_nmod_poly_mullow": [[76, 1, 1, "c._nmod_poly_mullow", "len1"], [76, 1, 1, "c._nmod_poly_mullow", "len2"], [76, 1, 1, "c._nmod_poly_mullow", "mod"], [76, 1, 1, "c._nmod_poly_mullow", "n"], [76, 1, 1, "c._nmod_poly_mullow", "poly1"], [76, 1, 1, "c._nmod_poly_mullow", "poly2"], [76, 1, 1, "c._nmod_poly_mullow", "res"]], "_nmod_poly_mullow_KS": [[76, 1, 1, "c._nmod_poly_mullow_KS", "bits"], [76, 1, 1, "c._nmod_poly_mullow_KS", "in1"], [76, 1, 1, "c._nmod_poly_mullow_KS", "in2"], [76, 1, 1, "c._nmod_poly_mullow_KS", "len1"], [76, 1, 1, "c._nmod_poly_mullow_KS", "len2"], [76, 1, 1, "c._nmod_poly_mullow_KS", "mod"], [76, 1, 1, "c._nmod_poly_mullow_KS", "n"], [76, 1, 1, "c._nmod_poly_mullow_KS", "out"]], "_nmod_poly_mullow_classical": [[76, 1, 1, "c._nmod_poly_mullow_classical", "len1"], [76, 1, 1, "c._nmod_poly_mullow_classical", "len2"], [76, 1, 1, "c._nmod_poly_mullow_classical", "mod"], [76, 1, 1, "c._nmod_poly_mullow_classical", "poly1"], [76, 1, 1, "c._nmod_poly_mullow_classical", "poly2"], [76, 1, 1, "c._nmod_poly_mullow_classical", "res"], [76, 1, 1, "c._nmod_poly_mullow_classical", "trunc"]], "_nmod_poly_mulmod": [[76, 1, 1, "c._nmod_poly_mulmod", "f"], [76, 1, 1, "c._nmod_poly_mulmod", "len1"], [76, 1, 1, "c._nmod_poly_mulmod", "len2"], [76, 1, 1, "c._nmod_poly_mulmod", "lenf"], [76, 1, 1, "c._nmod_poly_mulmod", "mod"], [76, 1, 1, "c._nmod_poly_mulmod", "poly1"], [76, 1, 1, "c._nmod_poly_mulmod", "poly2"], [76, 1, 1, "c._nmod_poly_mulmod", "res"]], "_nmod_poly_mulmod_preinv": [[76, 1, 1, "c._nmod_poly_mulmod_preinv", "f"], [76, 1, 1, "c._nmod_poly_mulmod_preinv", "finv"], [76, 1, 1, "c._nmod_poly_mulmod_preinv", "len1"], [76, 1, 1, "c._nmod_poly_mulmod_preinv", "len2"], [76, 1, 1, "c._nmod_poly_mulmod_preinv", "lenf"], [76, 1, 1, "c._nmod_poly_mulmod_preinv", "lenfinv"], [76, 1, 1, "c._nmod_poly_mulmod_preinv", "mod"], [76, 1, 1, "c._nmod_poly_mulmod_preinv", "poly1"], [76, 1, 1, "c._nmod_poly_mulmod_preinv", "poly2"], [76, 1, 1, "c._nmod_poly_mulmod_preinv", "res"]], "_nmod_poly_multi_crt_local_size": [[76, 1, 1, "c._nmod_poly_multi_crt_local_size", "CRT"]], "_nmod_poly_multi_crt_run": [[76, 1, 1, "c._nmod_poly_multi_crt_run", "CRT"], [76, 1, 1, "c._nmod_poly_multi_crt_run", "inputs"], [76, 1, 1, "c._nmod_poly_multi_crt_run", "outputs"]], "_nmod_poly_multi_crt_run_p": [[76, 1, 1, "c._nmod_poly_multi_crt_run_p", "CRT"], [76, 1, 1, "c._nmod_poly_multi_crt_run_p", "inputs"], [76, 1, 1, "c._nmod_poly_multi_crt_run_p", "outputs"]], "_nmod_poly_normalise": [[76, 1, 1, "c._nmod_poly_normalise", "poly"]], "_nmod_poly_pow": [[76, 1, 1, "c._nmod_poly_pow", "e"], [76, 1, 1, "c._nmod_poly_pow", "len"], [76, 1, 1, "c._nmod_poly_pow", "mod"], [76, 1, 1, "c._nmod_poly_pow", "poly"], [76, 1, 1, "c._nmod_poly_pow", "res"]], "_nmod_poly_pow_binexp": [[76, 1, 1, "c._nmod_poly_pow_binexp", "e"], [76, 1, 1, "c._nmod_poly_pow_binexp", "len"], [76, 1, 1, "c._nmod_poly_pow_binexp", "mod"], [76, 1, 1, "c._nmod_poly_pow_binexp", "poly"], [76, 1, 1, "c._nmod_poly_pow_binexp", "res"]], "_nmod_poly_pow_trunc": [[76, 1, 1, "c._nmod_poly_pow_trunc", "e"], [76, 1, 1, "c._nmod_poly_pow_trunc", "mod"], [76, 1, 1, "c._nmod_poly_pow_trunc", "poly"], [76, 1, 1, "c._nmod_poly_pow_trunc", "res"], [76, 1, 1, "c._nmod_poly_pow_trunc", "trunc"]], "_nmod_poly_pow_trunc_binexp": [[76, 1, 1, "c._nmod_poly_pow_trunc_binexp", "e"], [76, 1, 1, "c._nmod_poly_pow_trunc_binexp", "mod"], [76, 1, 1, "c._nmod_poly_pow_trunc_binexp", "poly"], [76, 1, 1, "c._nmod_poly_pow_trunc_binexp", "res"], [76, 1, 1, "c._nmod_poly_pow_trunc_binexp", "trunc"]], "_nmod_poly_power_sums": [[76, 1, 1, "c._nmod_poly_power_sums", "len"], [76, 1, 1, "c._nmod_poly_power_sums", "mod"], [76, 1, 1, "c._nmod_poly_power_sums", "n"], [76, 1, 1, "c._nmod_poly_power_sums", "poly"], [76, 1, 1, "c._nmod_poly_power_sums", "res"]], "_nmod_poly_power_sums_naive": [[76, 1, 1, "c._nmod_poly_power_sums_naive", "len"], [76, 1, 1, "c._nmod_poly_power_sums_naive", "mod"], [76, 1, 1, "c._nmod_poly_power_sums_naive", "n"], [76, 1, 1, "c._nmod_poly_power_sums_naive", "poly"], [76, 1, 1, "c._nmod_poly_power_sums_naive", "res"]], "_nmod_poly_power_sums_schoenhage": [[76, 1, 1, "c._nmod_poly_power_sums_schoenhage", "len"], [76, 1, 1, "c._nmod_poly_power_sums_schoenhage", "mod"], [76, 1, 1, "c._nmod_poly_power_sums_schoenhage", "n"], [76, 1, 1, "c._nmod_poly_power_sums_schoenhage", "poly"], [76, 1, 1, "c._nmod_poly_power_sums_schoenhage", "res"]], "_nmod_poly_power_sums_to_poly": [[76, 1, 1, "c._nmod_poly_power_sums_to_poly", "len"], [76, 1, 1, "c._nmod_poly_power_sums_to_poly", "mod"], [76, 1, 1, "c._nmod_poly_power_sums_to_poly", "poly"], [76, 1, 1, "c._nmod_poly_power_sums_to_poly", "res"]], "_nmod_poly_power_sums_to_poly_naive": [[76, 1, 1, "c._nmod_poly_power_sums_to_poly_naive", "len"], [76, 1, 1, "c._nmod_poly_power_sums_to_poly_naive", "mod"], [76, 1, 1, "c._nmod_poly_power_sums_to_poly_naive", "poly"], [76, 1, 1, "c._nmod_poly_power_sums_to_poly_naive", "res"]], "_nmod_poly_power_sums_to_poly_schoenhage": [[76, 1, 1, "c._nmod_poly_power_sums_to_poly_schoenhage", "len"], [76, 1, 1, "c._nmod_poly_power_sums_to_poly_schoenhage", "mod"], [76, 1, 1, "c._nmod_poly_power_sums_to_poly_schoenhage", "poly"], [76, 1, 1, "c._nmod_poly_power_sums_to_poly_schoenhage", "res"]], "_nmod_poly_powers_mod_preinv_naive": [[76, 1, 1, "c._nmod_poly_powers_mod_preinv_naive", "f"], [76, 1, 1, "c._nmod_poly_powers_mod_preinv_naive", "flen"], [76, 1, 1, "c._nmod_poly_powers_mod_preinv_naive", "g"], [76, 1, 1, "c._nmod_poly_powers_mod_preinv_naive", "ginv"], [76, 1, 1, "c._nmod_poly_powers_mod_preinv_naive", "ginvlen"], [76, 1, 1, "c._nmod_poly_powers_mod_preinv_naive", "glen"], [76, 1, 1, "c._nmod_poly_powers_mod_preinv_naive", "mod"], [76, 1, 1, "c._nmod_poly_powers_mod_preinv_naive", "n"], [76, 1, 1, "c._nmod_poly_powers_mod_preinv_naive", "res"]], "_nmod_poly_powers_mod_preinv_threaded": [[76, 1, 1, "c._nmod_poly_powers_mod_preinv_threaded", "f"], [76, 1, 1, "c._nmod_poly_powers_mod_preinv_threaded", "flen"], [76, 1, 1, "c._nmod_poly_powers_mod_preinv_threaded", "g"], [76, 1, 1, "c._nmod_poly_powers_mod_preinv_threaded", "ginv"], [76, 1, 1, "c._nmod_poly_powers_mod_preinv_threaded", "ginvlen"], [76, 1, 1, "c._nmod_poly_powers_mod_preinv_threaded", "glen"], [76, 1, 1, "c._nmod_poly_powers_mod_preinv_threaded", "mod"], [76, 1, 1, "c._nmod_poly_powers_mod_preinv_threaded", "n"], [76, 1, 1, "c._nmod_poly_powers_mod_preinv_threaded", "res"]], "_nmod_poly_powers_mod_preinv_threaded_pool": [[76, 1, 1, "c._nmod_poly_powers_mod_preinv_threaded_pool", "f"], [76, 1, 1, "c._nmod_poly_powers_mod_preinv_threaded_pool", "flen"], [76, 1, 1, "c._nmod_poly_powers_mod_preinv_threaded_pool", "g"], [76, 1, 1, "c._nmod_poly_powers_mod_preinv_threaded_pool", "ginv"], [76, 1, 1, "c._nmod_poly_powers_mod_preinv_threaded_pool", "ginvlen"], [76, 1, 1, "c._nmod_poly_powers_mod_preinv_threaded_pool", "glen"], [76, 1, 1, "c._nmod_poly_powers_mod_preinv_threaded_pool", "mod"], [76, 1, 1, "c._nmod_poly_powers_mod_preinv_threaded_pool", "n"], [76, 1, 1, "c._nmod_poly_powers_mod_preinv_threaded_pool", "num_threads"], [76, 1, 1, "c._nmod_poly_powers_mod_preinv_threaded_pool", "res"], [76, 1, 1, "c._nmod_poly_powers_mod_preinv_threaded_pool", "threads"]], "_nmod_poly_powmod_fmpz_binexp": [[76, 1, 1, "c._nmod_poly_powmod_fmpz_binexp", "e"], [76, 1, 1, "c._nmod_poly_powmod_fmpz_binexp", "f"], [76, 1, 1, "c._nmod_poly_powmod_fmpz_binexp", "lenf"], [76, 1, 1, "c._nmod_poly_powmod_fmpz_binexp", "mod"], [76, 1, 1, "c._nmod_poly_powmod_fmpz_binexp", "poly"], [76, 1, 1, "c._nmod_poly_powmod_fmpz_binexp", "res"]], "_nmod_poly_powmod_fmpz_binexp_preinv": [[76, 1, 1, "c._nmod_poly_powmod_fmpz_binexp_preinv", "e"], [76, 1, 1, "c._nmod_poly_powmod_fmpz_binexp_preinv", "f"], [76, 1, 1, "c._nmod_poly_powmod_fmpz_binexp_preinv", "finv"], [76, 1, 1, "c._nmod_poly_powmod_fmpz_binexp_preinv", "lenf"], [76, 1, 1, "c._nmod_poly_powmod_fmpz_binexp_preinv", "lenfinv"], [76, 1, 1, "c._nmod_poly_powmod_fmpz_binexp_preinv", "mod"], [76, 1, 1, "c._nmod_poly_powmod_fmpz_binexp_preinv", "poly"], [76, 1, 1, "c._nmod_poly_powmod_fmpz_binexp_preinv", "res"]], "_nmod_poly_powmod_mpz_binexp": [[76, 1, 1, "c._nmod_poly_powmod_mpz_binexp", "e"], [76, 1, 1, "c._nmod_poly_powmod_mpz_binexp", "f"], [76, 1, 1, "c._nmod_poly_powmod_mpz_binexp", "lenf"], [76, 1, 1, "c._nmod_poly_powmod_mpz_binexp", "mod"], [76, 1, 1, "c._nmod_poly_powmod_mpz_binexp", "poly"], [76, 1, 1, "c._nmod_poly_powmod_mpz_binexp", "res"]], "_nmod_poly_powmod_mpz_binexp_preinv": [[76, 1, 1, "c._nmod_poly_powmod_mpz_binexp_preinv", "e"], [76, 1, 1, "c._nmod_poly_powmod_mpz_binexp_preinv", "f"], [76, 1, 1, "c._nmod_poly_powmod_mpz_binexp_preinv", "finv"], [76, 1, 1, "c._nmod_poly_powmod_mpz_binexp_preinv", "lenf"], [76, 1, 1, "c._nmod_poly_powmod_mpz_binexp_preinv", "lenfinv"], [76, 1, 1, "c._nmod_poly_powmod_mpz_binexp_preinv", "mod"], [76, 1, 1, "c._nmod_poly_powmod_mpz_binexp_preinv", "poly"], [76, 1, 1, "c._nmod_poly_powmod_mpz_binexp_preinv", "res"]], "_nmod_poly_powmod_ui_binexp": [[76, 1, 1, "c._nmod_poly_powmod_ui_binexp", "e"], [76, 1, 1, "c._nmod_poly_powmod_ui_binexp", "f"], [76, 1, 1, "c._nmod_poly_powmod_ui_binexp", "lenf"], [76, 1, 1, "c._nmod_poly_powmod_ui_binexp", "mod"], [76, 1, 1, "c._nmod_poly_powmod_ui_binexp", "poly"], [76, 1, 1, "c._nmod_poly_powmod_ui_binexp", "res"]], "_nmod_poly_powmod_ui_binexp_preinv": [[76, 1, 1, "c._nmod_poly_powmod_ui_binexp_preinv", "e"], [76, 1, 1, "c._nmod_poly_powmod_ui_binexp_preinv", "f"], [76, 1, 1, "c._nmod_poly_powmod_ui_binexp_preinv", "finv"], [76, 1, 1, "c._nmod_poly_powmod_ui_binexp_preinv", "lenf"], [76, 1, 1, "c._nmod_poly_powmod_ui_binexp_preinv", "lenfinv"], [76, 1, 1, "c._nmod_poly_powmod_ui_binexp_preinv", "mod"], [76, 1, 1, "c._nmod_poly_powmod_ui_binexp_preinv", "poly"], [76, 1, 1, "c._nmod_poly_powmod_ui_binexp_preinv", "res"]], "_nmod_poly_powmod_x_fmpz_preinv": [[76, 1, 1, "c._nmod_poly_powmod_x_fmpz_preinv", "e"], [76, 1, 1, "c._nmod_poly_powmod_x_fmpz_preinv", "f"], [76, 1, 1, "c._nmod_poly_powmod_x_fmpz_preinv", "finv"], [76, 1, 1, "c._nmod_poly_powmod_x_fmpz_preinv", "lenf"], [76, 1, 1, "c._nmod_poly_powmod_x_fmpz_preinv", "lenfinv"], [76, 1, 1, "c._nmod_poly_powmod_x_fmpz_preinv", "mod"], [76, 1, 1, "c._nmod_poly_powmod_x_fmpz_preinv", "res"]], "_nmod_poly_powmod_x_ui_preinv": [[76, 1, 1, "c._nmod_poly_powmod_x_ui_preinv", "e"], [76, 1, 1, "c._nmod_poly_powmod_x_ui_preinv", "f"], [76, 1, 1, "c._nmod_poly_powmod_x_ui_preinv", "finv"], [76, 1, 1, "c._nmod_poly_powmod_x_ui_preinv", "lenf"], [76, 1, 1, "c._nmod_poly_powmod_x_ui_preinv", "lenfinv"], [76, 1, 1, "c._nmod_poly_powmod_x_ui_preinv", "mod"], [76, 1, 1, "c._nmod_poly_powmod_x_ui_preinv", "res"]], "_nmod_poly_precompute_matrix": [[76, 1, 1, "c._nmod_poly_precompute_matrix", "A"], [76, 1, 1, "c._nmod_poly_precompute_matrix", "f"], [76, 1, 1, "c._nmod_poly_precompute_matrix", "g"], [76, 1, 1, "c._nmod_poly_precompute_matrix", "ginv"], [76, 1, 1, "c._nmod_poly_precompute_matrix", "leng"], [76, 1, 1, "c._nmod_poly_precompute_matrix", "lenginv"], [76, 1, 1, "c._nmod_poly_precompute_matrix", "mod"]], "_nmod_poly_precompute_matrix_worker": [[76, 1, 1, "c._nmod_poly_precompute_matrix_worker", "arg_ptr"]], "_nmod_poly_product_roots_nmod_vec": [[76, 1, 1, "c._nmod_poly_product_roots_nmod_vec", "mod"], [76, 1, 1, "c._nmod_poly_product_roots_nmod_vec", "n"], [76, 1, 1, "c._nmod_poly_product_roots_nmod_vec", "poly"], [76, 1, 1, "c._nmod_poly_product_roots_nmod_vec", "xs"]], "_nmod_poly_reduce_matrix_mod_poly": [[76, 1, 1, "c._nmod_poly_reduce_matrix_mod_poly", "A"], [76, 1, 1, "c._nmod_poly_reduce_matrix_mod_poly", "B"], [76, 1, 1, "c._nmod_poly_reduce_matrix_mod_poly", "f"]], "_nmod_poly_rem": [[76, 1, 1, "c._nmod_poly_rem", "A"], [76, 1, 1, "c._nmod_poly_rem", "B"], [76, 1, 1, "c._nmod_poly_rem", "R"], [76, 1, 1, "c._nmod_poly_rem", "lenA"], [76, 1, 1, "c._nmod_poly_rem", "lenB"], [76, 1, 1, "c._nmod_poly_rem", "mod"]], "_nmod_poly_rem_basecase": [[76, 1, 1, "c._nmod_poly_rem_basecase", "A"], [76, 1, 1, "c._nmod_poly_rem_basecase", "B"], [76, 1, 1, "c._nmod_poly_rem_basecase", "R"], [76, 1, 1, "c._nmod_poly_rem_basecase", "W"], [76, 1, 1, "c._nmod_poly_rem_basecase", "lenA"], [76, 1, 1, "c._nmod_poly_rem_basecase", "lenB"], [76, 1, 1, "c._nmod_poly_rem_basecase", "mod"]], "_nmod_poly_rem_q1": [[76, 1, 1, "c._nmod_poly_rem_q1", "A"], [76, 1, 1, "c._nmod_poly_rem_q1", "B"], [76, 1, 1, "c._nmod_poly_rem_q1", "R"], [76, 1, 1, "c._nmod_poly_rem_q1", "lenA"], [76, 1, 1, "c._nmod_poly_rem_q1", "lenB"], [76, 1, 1, "c._nmod_poly_rem_q1", "mod"]], "_nmod_poly_resultant": [[76, 1, 1, "c._nmod_poly_resultant", "len1"], [76, 1, 1, "c._nmod_poly_resultant", "len2"], [76, 1, 1, "c._nmod_poly_resultant", "mod"], [76, 1, 1, "c._nmod_poly_resultant", "poly1"], [76, 1, 1, "c._nmod_poly_resultant", "poly2"]], "_nmod_poly_resultant_euclidean": [[76, 1, 1, "c._nmod_poly_resultant_euclidean", "len1"], [76, 1, 1, "c._nmod_poly_resultant_euclidean", "len2"], [76, 1, 1, "c._nmod_poly_resultant_euclidean", "mod"], [76, 1, 1, "c._nmod_poly_resultant_euclidean", "poly1"], [76, 1, 1, "c._nmod_poly_resultant_euclidean", "poly2"]], "_nmod_poly_resultant_hgcd": [[76, 1, 1, "c._nmod_poly_resultant_hgcd", "len1"], [76, 1, 1, "c._nmod_poly_resultant_hgcd", "len2"], [76, 1, 1, "c._nmod_poly_resultant_hgcd", "mod"], [76, 1, 1, "c._nmod_poly_resultant_hgcd", "poly1"], [76, 1, 1, "c._nmod_poly_resultant_hgcd", "poly2"]], "_nmod_poly_reverse": [[76, 1, 1, "c._nmod_poly_reverse", "input"], [76, 1, 1, "c._nmod_poly_reverse", "len"], [76, 1, 1, "c._nmod_poly_reverse", "m"], [76, 1, 1, "c._nmod_poly_reverse", "output"]], "_nmod_poly_revert_series": [[76, 1, 1, "c._nmod_poly_revert_series", "Q"], [76, 1, 1, "c._nmod_poly_revert_series", "Qinv"], [76, 1, 1, "c._nmod_poly_revert_series", "mod"], [76, 1, 1, "c._nmod_poly_revert_series", "n"]], "_nmod_poly_revert_series_lagrange": [[76, 1, 1, "c._nmod_poly_revert_series_lagrange", "Q"], [76, 1, 1, "c._nmod_poly_revert_series_lagrange", "Qinv"], [76, 1, 1, "c._nmod_poly_revert_series_lagrange", "mod"], [76, 1, 1, "c._nmod_poly_revert_series_lagrange", "n"]], "_nmod_poly_revert_series_lagrange_fast": [[76, 1, 1, "c._nmod_poly_revert_series_lagrange_fast", "Q"], [76, 1, 1, "c._nmod_poly_revert_series_lagrange_fast", "Qinv"], [76, 1, 1, "c._nmod_poly_revert_series_lagrange_fast", "mod"], [76, 1, 1, "c._nmod_poly_revert_series_lagrange_fast", "n"]], "_nmod_poly_revert_series_newton": [[76, 1, 1, "c._nmod_poly_revert_series_newton", "Q"], [76, 1, 1, "c._nmod_poly_revert_series_newton", "Qinv"], [76, 1, 1, "c._nmod_poly_revert_series_newton", "mod"], [76, 1, 1, "c._nmod_poly_revert_series_newton", "n"]], "_nmod_poly_shift_left": [[76, 1, 1, "c._nmod_poly_shift_left", "k"], [76, 1, 1, "c._nmod_poly_shift_left", "len"], [76, 1, 1, "c._nmod_poly_shift_left", "poly"], [76, 1, 1, "c._nmod_poly_shift_left", "res"]], "_nmod_poly_shift_right": [[76, 1, 1, "c._nmod_poly_shift_right", "k"], [76, 1, 1, "c._nmod_poly_shift_right", "len"], [76, 1, 1, "c._nmod_poly_shift_right", "poly"], [76, 1, 1, "c._nmod_poly_shift_right", "res"]], "_nmod_poly_sin_series": [[76, 1, 1, "c._nmod_poly_sin_series", "g"], [76, 1, 1, "c._nmod_poly_sin_series", "h"], [76, 1, 1, "c._nmod_poly_sin_series", "mod"], [76, 1, 1, "c._nmod_poly_sin_series", "n"]], "_nmod_poly_sinh_series": [[76, 1, 1, "c._nmod_poly_sinh_series", "g"], [76, 1, 1, "c._nmod_poly_sinh_series", "h"], [76, 1, 1, "c._nmod_poly_sinh_series", "mod"], [76, 1, 1, "c._nmod_poly_sinh_series", "n"]], "_nmod_poly_sqrt": [[76, 1, 1, "c._nmod_poly_sqrt", "mod"], [76, 1, 1, "c._nmod_poly_sqrt", "n"], [76, 1, 1, "c._nmod_poly_sqrt", "p"], [76, 1, 1, "c._nmod_poly_sqrt", "s"]], "_nmod_poly_sqrt_series": [[76, 1, 1, "c._nmod_poly_sqrt_series", "g"], [76, 1, 1, "c._nmod_poly_sqrt_series", "h"], [76, 1, 1, "c._nmod_poly_sqrt_series", "mod"], [76, 1, 1, "c._nmod_poly_sqrt_series", "n"]], "_nmod_poly_sub": [[76, 1, 1, "c._nmod_poly_sub", "len1"], [76, 1, 1, "c._nmod_poly_sub", "len2"], [76, 1, 1, "c._nmod_poly_sub", "mod"], [76, 1, 1, "c._nmod_poly_sub", "poly1"], [76, 1, 1, "c._nmod_poly_sub", "poly2"], [76, 1, 1, "c._nmod_poly_sub", "res"]], "_nmod_poly_tan_series": [[76, 1, 1, "c._nmod_poly_tan_series", "g"], [76, 1, 1, "c._nmod_poly_tan_series", "h"], [76, 1, 1, "c._nmod_poly_tan_series", "mod"], [76, 1, 1, "c._nmod_poly_tan_series", "n"]], "_nmod_poly_tanh_series": [[76, 1, 1, "c._nmod_poly_tanh_series", "g"], [76, 1, 1, "c._nmod_poly_tanh_series", "h"], [76, 1, 1, "c._nmod_poly_tanh_series", "mod"], [76, 1, 1, "c._nmod_poly_tanh_series", "n"]], "_nmod_poly_taylor_shift": [[76, 1, 1, "c._nmod_poly_taylor_shift", "c"], [76, 1, 1, "c._nmod_poly_taylor_shift", "len"], [76, 1, 1, "c._nmod_poly_taylor_shift", "mod"], [76, 1, 1, "c._nmod_poly_taylor_shift", "poly"]], "_nmod_poly_taylor_shift_convolution": [[76, 1, 1, "c._nmod_poly_taylor_shift_convolution", "c"], [76, 1, 1, "c._nmod_poly_taylor_shift_convolution", "len"], [76, 1, 1, "c._nmod_poly_taylor_shift_convolution", "mod"], [76, 1, 1, "c._nmod_poly_taylor_shift_convolution", "poly"]], "_nmod_poly_taylor_shift_horner": [[76, 1, 1, "c._nmod_poly_taylor_shift_horner", "c"], [76, 1, 1, "c._nmod_poly_taylor_shift_horner", "len"], [76, 1, 1, "c._nmod_poly_taylor_shift_horner", "mod"], [76, 1, 1, "c._nmod_poly_taylor_shift_horner", "poly"]], "_nmod_poly_tree_alloc": [[76, 1, 1, "c._nmod_poly_tree_alloc", "len"]], "_nmod_poly_tree_build": [[76, 1, 1, "c._nmod_poly_tree_build", "len"], [76, 1, 1, "c._nmod_poly_tree_build", "mod"], [76, 1, 1, "c._nmod_poly_tree_build", "roots"], [76, 1, 1, "c._nmod_poly_tree_build", "tree"]], "_nmod_poly_tree_free": [[76, 1, 1, "c._nmod_poly_tree_free", "len"], [76, 1, 1, "c._nmod_poly_tree_free", "tree"]], "_nmod_poly_xgcd": [[76, 1, 1, "c._nmod_poly_xgcd", "A"], [76, 1, 1, "c._nmod_poly_xgcd", "B"], [76, 1, 1, "c._nmod_poly_xgcd", "G"], [76, 1, 1, "c._nmod_poly_xgcd", "S"], [76, 1, 1, "c._nmod_poly_xgcd", "T"], [76, 1, 1, "c._nmod_poly_xgcd", "lenA"], [76, 1, 1, "c._nmod_poly_xgcd", "lenB"], [76, 1, 1, "c._nmod_poly_xgcd", "mod"]], "_nmod_poly_xgcd_euclidean": [[76, 1, 1, "c._nmod_poly_xgcd_euclidean", "A"], [76, 1, 1, "c._nmod_poly_xgcd_euclidean", "A_len"], [76, 1, 1, "c._nmod_poly_xgcd_euclidean", "B"], [76, 1, 1, "c._nmod_poly_xgcd_euclidean", "B_len"], [76, 1, 1, "c._nmod_poly_xgcd_euclidean", "G"], [76, 1, 1, "c._nmod_poly_xgcd_euclidean", "S"], [76, 1, 1, "c._nmod_poly_xgcd_euclidean", "T"], [76, 1, 1, "c._nmod_poly_xgcd_euclidean", "mod"]], "_nmod_poly_xgcd_hgcd": [[76, 1, 1, "c._nmod_poly_xgcd_hgcd", "A"], [76, 1, 1, "c._nmod_poly_xgcd_hgcd", "A_len"], [76, 1, 1, "c._nmod_poly_xgcd_hgcd", "B"], [76, 1, 1, "c._nmod_poly_xgcd_hgcd", "B_len"], [76, 1, 1, "c._nmod_poly_xgcd_hgcd", "G"], [76, 1, 1, "c._nmod_poly_xgcd_hgcd", "S"], [76, 1, 1, "c._nmod_poly_xgcd_hgcd", "T"], [76, 1, 1, "c._nmod_poly_xgcd_hgcd", "mod"]], "_nmod_sub": [[72, 1, 1, "c._nmod_sub", "a"], [72, 1, 1, "c._nmod_sub", "b"], [72, 1, 1, "c._nmod_sub", "mod"]], "_nmod_vec_add": [[79, 1, 1, "c._nmod_vec_add", "len"], [79, 1, 1, "c._nmod_vec_add", "mod"], [79, 1, 1, "c._nmod_vec_add", "res"], [79, 1, 1, "c._nmod_vec_add", "vec1"], [79, 1, 1, "c._nmod_vec_add", "vec2"]], "_nmod_vec_clear": [[79, 1, 1, "c._nmod_vec_clear", "vec"]], "_nmod_vec_dot": [[79, 1, 1, "c._nmod_vec_dot", "len"], [79, 1, 1, "c._nmod_vec_dot", "mod"], [79, 1, 1, "c._nmod_vec_dot", "nlimbs"], [79, 1, 1, "c._nmod_vec_dot", "vec1"], [79, 1, 1, "c._nmod_vec_dot", "vec2"]], "_nmod_vec_dot_bound_limbs": [[79, 1, 1, "c._nmod_vec_dot_bound_limbs", "len"], [79, 1, 1, "c._nmod_vec_dot_bound_limbs", "mod"]], "_nmod_vec_dot_ptr": [[79, 1, 1, "c._nmod_vec_dot_ptr", "len"], [79, 1, 1, "c._nmod_vec_dot_ptr", "mod"], [79, 1, 1, "c._nmod_vec_dot_ptr", "nlimbs"], [79, 1, 1, "c._nmod_vec_dot_ptr", "offset"], [79, 1, 1, "c._nmod_vec_dot_ptr", "vec1"], [79, 1, 1, "c._nmod_vec_dot_ptr", "vec2"]], "_nmod_vec_dot_rev": [[79, 1, 1, "c._nmod_vec_dot_rev", "len"], [79, 1, 1, "c._nmod_vec_dot_rev", "mod"], [79, 1, 1, "c._nmod_vec_dot_rev", "nlimbs"], [79, 1, 1, "c._nmod_vec_dot_rev", "vec1"], [79, 1, 1, "c._nmod_vec_dot_rev", "vec2"]], "_nmod_vec_equal": [[79, 1, 1, "c._nmod_vec_equal", "len"], [79, 1, 1, "c._nmod_vec_equal", "vec"], [79, 1, 1, "c._nmod_vec_equal", "vec2"]], "_nmod_vec_init": [[79, 1, 1, "c._nmod_vec_init", "len"]], "_nmod_vec_max_bits": [[79, 1, 1, "c._nmod_vec_max_bits", "len"], [79, 1, 1, "c._nmod_vec_max_bits", "vec"]], "_nmod_vec_neg": [[79, 1, 1, "c._nmod_vec_neg", "len"], [79, 1, 1, "c._nmod_vec_neg", "mod"], [79, 1, 1, "c._nmod_vec_neg", "res"], [79, 1, 1, "c._nmod_vec_neg", "vec"]], "_nmod_vec_randtest": [[79, 1, 1, "c._nmod_vec_randtest", "len"], [79, 1, 1, "c._nmod_vec_randtest", "mod"], [79, 1, 1, "c._nmod_vec_randtest", "state"], [79, 1, 1, "c._nmod_vec_randtest", "vec"]], "_nmod_vec_reduce": [[79, 1, 1, "c._nmod_vec_reduce", "len"], [79, 1, 1, "c._nmod_vec_reduce", "mod"], [79, 1, 1, "c._nmod_vec_reduce", "res"], [79, 1, 1, "c._nmod_vec_reduce", "vec"]], "_nmod_vec_scalar_addmul_nmod": [[79, 1, 1, "c._nmod_vec_scalar_addmul_nmod", "c"], [79, 1, 1, "c._nmod_vec_scalar_addmul_nmod", "len"], [79, 1, 1, "c._nmod_vec_scalar_addmul_nmod", "mod"], [79, 1, 1, "c._nmod_vec_scalar_addmul_nmod", "res"], [79, 1, 1, "c._nmod_vec_scalar_addmul_nmod", "vec"]], "_nmod_vec_scalar_mul_nmod": [[79, 1, 1, "c._nmod_vec_scalar_mul_nmod", "c"], [79, 1, 1, "c._nmod_vec_scalar_mul_nmod", "len"], [79, 1, 1, "c._nmod_vec_scalar_mul_nmod", "mod"], [79, 1, 1, "c._nmod_vec_scalar_mul_nmod", "res"], [79, 1, 1, "c._nmod_vec_scalar_mul_nmod", "vec"]], "_nmod_vec_scalar_mul_nmod_shoup": [[79, 1, 1, "c._nmod_vec_scalar_mul_nmod_shoup", "c"], [79, 1, 1, "c._nmod_vec_scalar_mul_nmod_shoup", "len"], [79, 1, 1, "c._nmod_vec_scalar_mul_nmod_shoup", "mod"], [79, 1, 1, "c._nmod_vec_scalar_mul_nmod_shoup", "res"], [79, 1, 1, "c._nmod_vec_scalar_mul_nmod_shoup", "vec"]], "_nmod_vec_set": [[79, 1, 1, "c._nmod_vec_set", "len"], [79, 1, 1, "c._nmod_vec_set", "res"], [79, 1, 1, "c._nmod_vec_set", "vec"]], "_nmod_vec_sub": [[79, 1, 1, "c._nmod_vec_sub", "len"], [79, 1, 1, "c._nmod_vec_sub", "mod"], [79, 1, 1, "c._nmod_vec_sub", "res"], [79, 1, 1, "c._nmod_vec_sub", "vec1"], [79, 1, 1, "c._nmod_vec_sub", "vec2"]], "_nmod_vec_swap": [[79, 1, 1, "c._nmod_vec_swap", "a"], [79, 1, 1, "c._nmod_vec_swap", "b"], [79, 1, 1, "c._nmod_vec_swap", "length"]], "_nmod_vec_zero": [[79, 1, 1, "c._nmod_vec_zero", "len"], [79, 1, 1, "c._nmod_vec_zero", "vec"]], "_padic_canonicalise": [[80, 1, 1, "c._padic_canonicalise", "ctx"], [80, 1, 1, "c._padic_canonicalise", "rop"]], "_padic_ctx_pow_ui": [[80, 1, 1, "c._padic_ctx_pow_ui", "ctx"], [80, 1, 1, "c._padic_ctx_pow_ui", "e"], [80, 1, 1, "c._padic_ctx_pow_ui", "rop"]], "_padic_exp": [[80, 1, 1, "c._padic_exp", "N"], [80, 1, 1, "c._padic_exp", "p"], [80, 1, 1, "c._padic_exp", "rop"], [80, 1, 1, "c._padic_exp", "u"], [80, 1, 1, "c._padic_exp", "v"]], "_padic_exp_balanced": [[80, 1, 1, "c._padic_exp_balanced", "N"], [80, 1, 1, "c._padic_exp_balanced", "p"], [80, 1, 1, "c._padic_exp_balanced", "rop"], [80, 1, 1, "c._padic_exp_balanced", "u"], [80, 1, 1, "c._padic_exp_balanced", "v"]], "_padic_exp_bound": [[80, 1, 1, "c._padic_exp_bound", "N"], [80, 1, 1, "c._padic_exp_bound", "p"], [80, 1, 1, "c._padic_exp_bound", "v"]], "_padic_exp_rectangular": [[80, 1, 1, "c._padic_exp_rectangular", "N"], [80, 1, 1, "c._padic_exp_rectangular", "p"], [80, 1, 1, "c._padic_exp_rectangular", "rop"], [80, 1, 1, "c._padic_exp_rectangular", "u"], [80, 1, 1, "c._padic_exp_rectangular", "v"]], "_padic_fprint": [[80, 1, 1, "c._padic_fprint", "ctx"], [80, 1, 1, "c._padic_fprint", "file"], [80, 1, 1, "c._padic_fprint", "u"], [80, 1, 1, "c._padic_fprint", "v"]], "_padic_inv": [[80, 1, 1, "c._padic_inv", "N"], [80, 1, 1, "c._padic_inv", "op"], [80, 1, 1, "c._padic_inv", "p"], [80, 1, 1, "c._padic_inv", "rop"]], "_padic_inv_clear": [[80, 1, 1, "c._padic_inv_clear", "S"]], "_padic_inv_precomp": [[80, 1, 1, "c._padic_inv_precomp", "S"], [80, 1, 1, "c._padic_inv_precomp", "op"], [80, 1, 1, "c._padic_inv_precomp", "rop"]], "_padic_inv_precompute": [[80, 1, 1, "c._padic_inv_precompute", "N"], [80, 1, 1, "c._padic_inv_precompute", "S"], [80, 1, 1, "c._padic_inv_precompute", "p"]], "_padic_lifts_exps": [[80, 1, 1, "c._padic_lifts_exps", "N"], [80, 1, 1, "c._padic_lifts_exps", "n"]], "_padic_lifts_pows": [[80, 1, 1, "c._padic_lifts_pows", "a"], [80, 1, 1, "c._padic_lifts_pows", "n"], [80, 1, 1, "c._padic_lifts_pows", "p"], [80, 1, 1, "c._padic_lifts_pows", "pow"]], "_padic_log": [[80, 1, 1, "c._padic_log", "N"], [80, 1, 1, "c._padic_log", "p"], [80, 1, 1, "c._padic_log", "v"], [80, 1, 1, "c._padic_log", "y"], [80, 1, 1, "c._padic_log", "z"]], "_padic_log_balanced": [[80, 1, 1, "c._padic_log_balanced", "N"], [80, 1, 1, "c._padic_log_balanced", "p"], [80, 1, 1, "c._padic_log_balanced", "v"], [80, 1, 1, "c._padic_log_balanced", "y"], [80, 1, 1, "c._padic_log_balanced", "z"]], "_padic_log_bound": [[80, 1, 1, "c._padic_log_bound", "N"], [80, 1, 1, "c._padic_log_bound", "p"], [80, 1, 1, "c._padic_log_bound", "v"]], "_padic_log_rectangular": [[80, 1, 1, "c._padic_log_rectangular", "N"], [80, 1, 1, "c._padic_log_rectangular", "p"], [80, 1, 1, "c._padic_log_rectangular", "v"], [80, 1, 1, "c._padic_log_rectangular", "y"], [80, 1, 1, "c._padic_log_rectangular", "z"]], "_padic_log_satoh": [[80, 1, 1, "c._padic_log_satoh", "N"], [80, 1, 1, "c._padic_log_satoh", "p"], [80, 1, 1, "c._padic_log_satoh", "v"], [80, 1, 1, "c._padic_log_satoh", "y"], [80, 1, 1, "c._padic_log_satoh", "z"]], "_padic_mat_add": [[81, 1, 1, "c._padic_mat_add", "A"], [81, 1, 1, "c._padic_mat_add", "B"], [81, 1, 1, "c._padic_mat_add", "C"], [81, 1, 1, "c._padic_mat_add", "ctx"]], "_padic_mat_canonicalise": [[81, 1, 1, "c._padic_mat_canonicalise", "A"], [81, 1, 1, "c._padic_mat_canonicalise", "ctx"]], "_padic_mat_mul": [[81, 1, 1, "c._padic_mat_mul", "A"], [81, 1, 1, "c._padic_mat_mul", "B"], [81, 1, 1, "c._padic_mat_mul", "C"], [81, 1, 1, "c._padic_mat_mul", "ctx"]], "_padic_mat_neg": [[81, 1, 1, "c._padic_mat_neg", "A"], [81, 1, 1, "c._padic_mat_neg", "B"]], "_padic_mat_reduce": [[81, 1, 1, "c._padic_mat_reduce", "A"], [81, 1, 1, "c._padic_mat_reduce", "ctx"]], "_padic_mat_scalar_mul_fmpz": [[81, 1, 1, "c._padic_mat_scalar_mul_fmpz", "A"], [81, 1, 1, "c._padic_mat_scalar_mul_fmpz", "B"], [81, 1, 1, "c._padic_mat_scalar_mul_fmpz", "c"], [81, 1, 1, "c._padic_mat_scalar_mul_fmpz", "ctx"]], "_padic_mat_scalar_mul_padic": [[81, 1, 1, "c._padic_mat_scalar_mul_padic", "A"], [81, 1, 1, "c._padic_mat_scalar_mul_padic", "B"], [81, 1, 1, "c._padic_mat_scalar_mul_padic", "c"], [81, 1, 1, "c._padic_mat_scalar_mul_padic", "ctx"]], "_padic_mat_sub": [[81, 1, 1, "c._padic_mat_sub", "A"], [81, 1, 1, "c._padic_mat_sub", "B"], [81, 1, 1, "c._padic_mat_sub", "C"], [81, 1, 1, "c._padic_mat_sub", "ctx"]], "_padic_poly_add": [[82, 1, 1, "c._padic_poly_add", "N"], [82, 1, 1, "c._padic_poly_add", "N1"], [82, 1, 1, "c._padic_poly_add", "N2"], [82, 1, 1, "c._padic_poly_add", "ctx"], [82, 1, 1, "c._padic_poly_add", "len1"], [82, 1, 1, "c._padic_poly_add", "len2"], [82, 1, 1, "c._padic_poly_add", "op1"], [82, 1, 1, "c._padic_poly_add", "op2"], [82, 1, 1, "c._padic_poly_add", "rop"], [82, 1, 1, "c._padic_poly_add", "rval"], [82, 1, 1, "c._padic_poly_add", "val1"], [82, 1, 1, "c._padic_poly_add", "val2"]], "_padic_poly_canonicalise": [[82, 1, 1, "c._padic_poly_canonicalise", "len"], [82, 1, 1, "c._padic_poly_canonicalise", "p"], [82, 1, 1, "c._padic_poly_canonicalise", "poly"], [82, 1, 1, "c._padic_poly_canonicalise", "v"]], "_padic_poly_compose": [[82, 1, 1, "c._padic_poly_compose", "N"], [82, 1, 1, "c._padic_poly_compose", "ctx"], [82, 1, 1, "c._padic_poly_compose", "len1"], [82, 1, 1, "c._padic_poly_compose", "len2"], [82, 1, 1, "c._padic_poly_compose", "op1"], [82, 1, 1, "c._padic_poly_compose", "op2"], [82, 1, 1, "c._padic_poly_compose", "rop"], [82, 1, 1, "c._padic_poly_compose", "rval"], [82, 1, 1, "c._padic_poly_compose", "val1"], [82, 1, 1, "c._padic_poly_compose", "val2"]], "_padic_poly_compose_pow": [[82, 1, 1, "c._padic_poly_compose_pow", "N"], [82, 1, 1, "c._padic_poly_compose_pow", "ctx"], [82, 1, 1, "c._padic_poly_compose_pow", "k"], [82, 1, 1, "c._padic_poly_compose_pow", "len"], [82, 1, 1, "c._padic_poly_compose_pow", "op"], [82, 1, 1, "c._padic_poly_compose_pow", "rop"], [82, 1, 1, "c._padic_poly_compose_pow", "rval"], [82, 1, 1, "c._padic_poly_compose_pow", "val"]], "_padic_poly_derivative": [[82, 1, 1, "c._padic_poly_derivative", "N"], [82, 1, 1, "c._padic_poly_derivative", "ctx"], [82, 1, 1, "c._padic_poly_derivative", "len"], [82, 1, 1, "c._padic_poly_derivative", "op"], [82, 1, 1, "c._padic_poly_derivative", "rop"], [82, 1, 1, "c._padic_poly_derivative", "rval"], [82, 1, 1, "c._padic_poly_derivative", "val"]], "_padic_poly_evaluate_padic": [[82, 1, 1, "c._padic_poly_evaluate_padic", "N"], [82, 1, 1, "c._padic_poly_evaluate_padic", "a"], [82, 1, 1, "c._padic_poly_evaluate_padic", "b"], [82, 1, 1, "c._padic_poly_evaluate_padic", "ctx"], [82, 1, 1, "c._padic_poly_evaluate_padic", "len"], [82, 1, 1, "c._padic_poly_evaluate_padic", "poly"], [82, 1, 1, "c._padic_poly_evaluate_padic", "u"], [82, 1, 1, "c._padic_poly_evaluate_padic", "v"], [82, 1, 1, "c._padic_poly_evaluate_padic", "val"]], "_padic_poly_fprint": [[82, 1, 1, "c._padic_poly_fprint", "ctx"], [82, 1, 1, "c._padic_poly_fprint", "file"], [82, 1, 1, "c._padic_poly_fprint", "len"], [82, 1, 1, "c._padic_poly_fprint", "poly"], [82, 1, 1, "c._padic_poly_fprint", "val"]], "_padic_poly_fprint_pretty": [[82, 1, 1, "c._padic_poly_fprint_pretty", "ctx"], [82, 1, 1, "c._padic_poly_fprint_pretty", "file"], [82, 1, 1, "c._padic_poly_fprint_pretty", "len"], [82, 1, 1, "c._padic_poly_fprint_pretty", "poly"], [82, 1, 1, "c._padic_poly_fprint_pretty", "val"], [82, 1, 1, "c._padic_poly_fprint_pretty", "var"]], "_padic_poly_is_canonical": [[82, 1, 1, "c._padic_poly_is_canonical", "ctx"], [82, 1, 1, "c._padic_poly_is_canonical", "len"], [82, 1, 1, "c._padic_poly_is_canonical", "op"], [82, 1, 1, "c._padic_poly_is_canonical", "val"]], "_padic_poly_is_reduced": [[82, 1, 1, "c._padic_poly_is_reduced", "N"], [82, 1, 1, "c._padic_poly_is_reduced", "ctx"], [82, 1, 1, "c._padic_poly_is_reduced", "len"], [82, 1, 1, "c._padic_poly_is_reduced", "op"], [82, 1, 1, "c._padic_poly_is_reduced", "val"]], "_padic_poly_mul": [[82, 1, 1, "c._padic_poly_mul", "N"], [82, 1, 1, "c._padic_poly_mul", "ctx"], [82, 1, 1, "c._padic_poly_mul", "len1"], [82, 1, 1, "c._padic_poly_mul", "len2"], [82, 1, 1, "c._padic_poly_mul", "op1"], [82, 1, 1, "c._padic_poly_mul", "op2"], [82, 1, 1, "c._padic_poly_mul", "rop"], [82, 1, 1, "c._padic_poly_mul", "rval"], [82, 1, 1, "c._padic_poly_mul", "val1"], [82, 1, 1, "c._padic_poly_mul", "val2"]], "_padic_poly_normalise": [[82, 1, 1, "c._padic_poly_normalise", "poly"]], "_padic_poly_pow": [[82, 1, 1, "c._padic_poly_pow", "N"], [82, 1, 1, "c._padic_poly_pow", "ctx"], [82, 1, 1, "c._padic_poly_pow", "e"], [82, 1, 1, "c._padic_poly_pow", "len"], [82, 1, 1, "c._padic_poly_pow", "op"], [82, 1, 1, "c._padic_poly_pow", "rop"], [82, 1, 1, "c._padic_poly_pow", "rval"], [82, 1, 1, "c._padic_poly_pow", "val"]], "_padic_poly_print": [[82, 1, 1, "c._padic_poly_print", "ctx"], [82, 1, 1, "c._padic_poly_print", "len"], [82, 1, 1, "c._padic_poly_print", "poly"], [82, 1, 1, "c._padic_poly_print", "val"]], "_padic_poly_print_pretty": [[82, 1, 1, "c._padic_poly_print_pretty", "ctx"], [82, 1, 1, "c._padic_poly_print_pretty", "file"], [82, 1, 1, "c._padic_poly_print_pretty", "len"], [82, 1, 1, "c._padic_poly_print_pretty", "poly"], [82, 1, 1, "c._padic_poly_print_pretty", "val"], [82, 1, 1, "c._padic_poly_print_pretty", "var"]], "_padic_poly_scalar_mul_padic": [[82, 1, 1, "c._padic_poly_scalar_mul_padic", "c"], [82, 1, 1, "c._padic_poly_scalar_mul_padic", "ctx"], [82, 1, 1, "c._padic_poly_scalar_mul_padic", "len"], [82, 1, 1, "c._padic_poly_scalar_mul_padic", "op"], [82, 1, 1, "c._padic_poly_scalar_mul_padic", "rop"], [82, 1, 1, "c._padic_poly_scalar_mul_padic", "rval"], [82, 1, 1, "c._padic_poly_scalar_mul_padic", "val"]], "_padic_poly_set_length": [[82, 1, 1, "c._padic_poly_set_length", "len"], [82, 1, 1, "c._padic_poly_set_length", "poly"]], "_padic_poly_sub": [[82, 1, 1, "c._padic_poly_sub", "ctx"], [82, 1, 1, "c._padic_poly_sub", "len1"], [82, 1, 1, "c._padic_poly_sub", "len2"], [82, 1, 1, "c._padic_poly_sub", "op1"], [82, 1, 1, "c._padic_poly_sub", "op2"], [82, 1, 1, "c._padic_poly_sub", "rop"], [82, 1, 1, "c._padic_poly_sub", "rval"], [82, 1, 1, "c._padic_poly_sub", "val1"], [82, 1, 1, "c._padic_poly_sub", "val2"]], "_padic_print": [[80, 1, 1, "c._padic_print", "ctx"], [80, 1, 1, "c._padic_print", "u"], [80, 1, 1, "c._padic_print", "v"]], "_padic_reduce": [[80, 1, 1, "c._padic_reduce", "ctx"], [80, 1, 1, "c._padic_reduce", "rop"]], "_padic_teichmuller": [[80, 1, 1, "c._padic_teichmuller", "N"], [80, 1, 1, "c._padic_teichmuller", "op"], [80, 1, 1, "c._padic_teichmuller", "p"], [80, 1, 1, "c._padic_teichmuller", "rop"]], "_perm_clear": [[83, 1, 1, "c._perm_clear", "vec"]], "_perm_compose": [[83, 1, 1, "c._perm_compose", "n"], [83, 1, 1, "c._perm_compose", "res"], [83, 1, 1, "c._perm_compose", "vec1"], [83, 1, 1, "c._perm_compose", "vec2"]], "_perm_init": [[83, 1, 1, "c._perm_init", "n"]], "_perm_inv": [[83, 1, 1, "c._perm_inv", "n"], [83, 1, 1, "c._perm_inv", "res"], [83, 1, 1, "c._perm_inv", "vec"]], "_perm_parity": [[83, 1, 1, "c._perm_parity", "n"], [83, 1, 1, "c._perm_parity", "vec"]], "_perm_print": [[83, 1, 1, "c._perm_print", "n"], [83, 1, 1, "c._perm_print", "vec"]], "_perm_randtest": [[83, 1, 1, "c._perm_randtest", "n"], [83, 1, 1, "c._perm_randtest", "state"], [83, 1, 1, "c._perm_randtest", "vec"]], "_perm_set": [[83, 1, 1, "c._perm_set", "n"], [83, 1, 1, "c._perm_set", "res"], [83, 1, 1, "c._perm_set", "vec"]], "_perm_set_one": [[83, 1, 1, "c._perm_set_one", "n"], [83, 1, 1, "c._perm_set_one", "vec"]], "_qadic_exp": [[86, 1, 1, "c._qadic_exp", "N"], [86, 1, 1, "c._qadic_exp", "a"], [86, 1, 1, "c._qadic_exp", "j"], [86, 1, 1, "c._qadic_exp", "len"], [86, 1, 1, "c._qadic_exp", "lena"], [86, 1, 1, "c._qadic_exp", "op"], [86, 1, 1, "c._qadic_exp", "p"], [86, 1, 1, "c._qadic_exp", "rop"], [86, 1, 1, "c._qadic_exp", "v"]], "_qadic_exp_balanced": [[86, 1, 1, "c._qadic_exp_balanced", "N"], [86, 1, 1, "c._qadic_exp_balanced", "a"], [86, 1, 1, "c._qadic_exp_balanced", "j"], [86, 1, 1, "c._qadic_exp_balanced", "len"], [86, 1, 1, "c._qadic_exp_balanced", "lena"], [86, 1, 1, "c._qadic_exp_balanced", "p"], [86, 1, 1, "c._qadic_exp_balanced", "pN"], [86, 1, 1, "c._qadic_exp_balanced", "rop"], [86, 1, 1, "c._qadic_exp_balanced", "v"], [86, 1, 1, "c._qadic_exp_balanced", "x"]], "_qadic_exp_rectangular": [[86, 1, 1, "c._qadic_exp_rectangular", "N"], [86, 1, 1, "c._qadic_exp_rectangular", "a"], [86, 1, 1, "c._qadic_exp_rectangular", "j"], [86, 1, 1, "c._qadic_exp_rectangular", "len"], [86, 1, 1, "c._qadic_exp_rectangular", "lena"], [86, 1, 1, "c._qadic_exp_rectangular", "op"], [86, 1, 1, "c._qadic_exp_rectangular", "p"], [86, 1, 1, "c._qadic_exp_rectangular", "pN"], [86, 1, 1, "c._qadic_exp_rectangular", "rop"], [86, 1, 1, "c._qadic_exp_rectangular", "v"]], "_qadic_frobenius": [[86, 1, 1, "c._qadic_frobenius", "N"], [86, 1, 1, "c._qadic_frobenius", "a"], [86, 1, 1, "c._qadic_frobenius", "e"], [86, 1, 1, "c._qadic_frobenius", "j"], [86, 1, 1, "c._qadic_frobenius", "len"], [86, 1, 1, "c._qadic_frobenius", "lena"], [86, 1, 1, "c._qadic_frobenius", "op"], [86, 1, 1, "c._qadic_frobenius", "p"], [86, 1, 1, "c._qadic_frobenius", "rop"]], "_qadic_frobenius_a": [[86, 1, 1, "c._qadic_frobenius_a", "N"], [86, 1, 1, "c._qadic_frobenius_a", "a"], [86, 1, 1, "c._qadic_frobenius_a", "e"], [86, 1, 1, "c._qadic_frobenius_a", "j"], [86, 1, 1, "c._qadic_frobenius_a", "lena"], [86, 1, 1, "c._qadic_frobenius_a", "p"], [86, 1, 1, "c._qadic_frobenius_a", "rop"]], "_qadic_inv": [[86, 1, 1, "c._qadic_inv", "N"], [86, 1, 1, "c._qadic_inv", "a"], [86, 1, 1, "c._qadic_inv", "j"], [86, 1, 1, "c._qadic_inv", "len"], [86, 1, 1, "c._qadic_inv", "lena"], [86, 1, 1, "c._qadic_inv", "op"], [86, 1, 1, "c._qadic_inv", "p"], [86, 1, 1, "c._qadic_inv", "rop"]], "_qadic_log": [[86, 1, 1, "c._qadic_log", "N"], [86, 1, 1, "c._qadic_log", "a"], [86, 1, 1, "c._qadic_log", "j"], [86, 1, 1, "c._qadic_log", "len"], [86, 1, 1, "c._qadic_log", "lena"], [86, 1, 1, "c._qadic_log", "p"], [86, 1, 1, "c._qadic_log", "pN"], [86, 1, 1, "c._qadic_log", "v"], [86, 1, 1, "c._qadic_log", "y"], [86, 1, 1, "c._qadic_log", "z"]], "_qadic_log_balanced": [[86, 1, 1, "c._qadic_log_balanced", "N"], [86, 1, 1, "c._qadic_log_balanced", "a"], [86, 1, 1, "c._qadic_log_balanced", "j"], [86, 1, 1, "c._qadic_log_balanced", "len"], [86, 1, 1, "c._qadic_log_balanced", "lena"], [86, 1, 1, "c._qadic_log_balanced", "p"], [86, 1, 1, "c._qadic_log_balanced", "pN"], [86, 1, 1, "c._qadic_log_balanced", "y"], [86, 1, 1, "c._qadic_log_balanced", "z"]], "_qadic_log_rectangular": [[86, 1, 1, "c._qadic_log_rectangular", "N"], [86, 1, 1, "c._qadic_log_rectangular", "a"], [86, 1, 1, "c._qadic_log_rectangular", "j"], [86, 1, 1, "c._qadic_log_rectangular", "len"], [86, 1, 1, "c._qadic_log_rectangular", "lena"], [86, 1, 1, "c._qadic_log_rectangular", "p"], [86, 1, 1, "c._qadic_log_rectangular", "pN"], [86, 1, 1, "c._qadic_log_rectangular", "v"], [86, 1, 1, "c._qadic_log_rectangular", "y"], [86, 1, 1, "c._qadic_log_rectangular", "z"]], "_qadic_norm": [[86, 1, 1, "c._qadic_norm", "N"], [86, 1, 1, "c._qadic_norm", "a"], [86, 1, 1, "c._qadic_norm", "j"], [86, 1, 1, "c._qadic_norm", "len"], [86, 1, 1, "c._qadic_norm", "lena"], [86, 1, 1, "c._qadic_norm", "op"], [86, 1, 1, "c._qadic_norm", "p"], [86, 1, 1, "c._qadic_norm", "rop"]], "_qadic_pow": [[86, 1, 1, "c._qadic_pow", "a"], [86, 1, 1, "c._qadic_pow", "e"], [86, 1, 1, "c._qadic_pow", "j"], [86, 1, 1, "c._qadic_pow", "len"], [86, 1, 1, "c._qadic_pow", "lena"], [86, 1, 1, "c._qadic_pow", "op"], [86, 1, 1, "c._qadic_pow", "p"], [86, 1, 1, "c._qadic_pow", "rop"]], "_qadic_teichmuller": [[86, 1, 1, "c._qadic_teichmuller", "N"], [86, 1, 1, "c._qadic_teichmuller", "a"], [86, 1, 1, "c._qadic_teichmuller", "j"], [86, 1, 1, "c._qadic_teichmuller", "len"], [86, 1, 1, "c._qadic_teichmuller", "lena"], [86, 1, 1, "c._qadic_teichmuller", "op"], [86, 1, 1, "c._qadic_teichmuller", "p"], [86, 1, 1, "c._qadic_teichmuller", "rop"]], "_qadic_trace": [[86, 1, 1, "c._qadic_trace", "a"], [86, 1, 1, "c._qadic_trace", "j"], [86, 1, 1, "c._qadic_trace", "len"], [86, 1, 1, "c._qadic_trace", "lena"], [86, 1, 1, "c._qadic_trace", "op"], [86, 1, 1, "c._qadic_trace", "pN"], [86, 1, 1, "c._qadic_trace", "rop"]], "_unity_zp_pow_select_k": [[0, 1, 1, "c._unity_zp_pow_select_k", "n"]], "_unity_zp_reduce_cyclotomic": [[0, 1, 1, "c._unity_zp_reduce_cyclotomic", "f"]], "_unity_zp_reduce_cyclotomic_divmod": [[0, 1, 1, "c._unity_zp_reduce_cyclotomic_divmod", "f"]], "_unity_zpq_mul_unity_p": [[0, 1, 1, "c._unity_zpq_mul_unity_p", "f"]], "aprcl_R_value": [[0, 1, 1, "c.aprcl_R_value", "n"]], "aprcl_config_gauss_clear": [[0, 1, 1, "c.aprcl_config_gauss_clear", "conf"]], "aprcl_config_gauss_init": [[0, 1, 1, "c.aprcl_config_gauss_init", "conf"], [0, 1, 1, "c.aprcl_config_gauss_init", "n"]], "aprcl_config_gauss_init_min_R": [[0, 1, 1, "c.aprcl_config_gauss_init_min_R", "R"], [0, 1, 1, "c.aprcl_config_gauss_init_min_R", "conf"], [0, 1, 1, "c.aprcl_config_gauss_init_min_R", "n"]], "aprcl_config_jacobi_clear": [[0, 1, 1, "c.aprcl_config_jacobi_clear", "conf"]], "aprcl_config_jacobi_init": [[0, 1, 1, "c.aprcl_config_jacobi_init", "conf"], [0, 1, 1, "c.aprcl_config_jacobi_init", "n"]], "aprcl_is_prime": [[0, 1, 1, "c.aprcl_is_prime", "n"]], "aprcl_is_prime_final_division": [[0, 1, 1, "c.aprcl_is_prime_final_division", "n"], [0, 1, 1, "c.aprcl_is_prime_final_division", "r"], [0, 1, 1, "c.aprcl_is_prime_final_division", "s"]], "aprcl_is_prime_gauss": [[0, 1, 1, "c.aprcl_is_prime_gauss", "n"]], "aprcl_is_prime_gauss_min_R": [[0, 1, 1, "c.aprcl_is_prime_gauss_min_R", "R"], [0, 1, 1, "c.aprcl_is_prime_gauss_min_R", "n"]], "aprcl_is_prime_jacobi": [[0, 1, 1, "c.aprcl_is_prime_jacobi", "n"]], "arith_bell_number": [[1, 1, 1, "c.arith_bell_number", "b"], [1, 1, 1, "c.arith_bell_number", "n"]], "arith_bell_number_dobinski": [[1, 1, 1, "c.arith_bell_number_dobinski", "n"], [1, 1, 1, "c.arith_bell_number_dobinski", "res"]], "arith_bell_number_multi_mod": [[1, 1, 1, "c.arith_bell_number_multi_mod", "n"], [1, 1, 1, "c.arith_bell_number_multi_mod", "res"]], "arith_bell_number_nmod": [[1, 1, 1, "c.arith_bell_number_nmod", "mod"], [1, 1, 1, "c.arith_bell_number_nmod", "n"]], "arith_bell_number_nmod_vec": [[1, 1, 1, "c.arith_bell_number_nmod_vec", "b"], [1, 1, 1, "c.arith_bell_number_nmod_vec", "mod"], [1, 1, 1, "c.arith_bell_number_nmod_vec", "n"]], "arith_bell_number_nmod_vec_ogf": [[1, 1, 1, "c.arith_bell_number_nmod_vec_ogf", "b"], [1, 1, 1, "c.arith_bell_number_nmod_vec_ogf", "mod"], [1, 1, 1, "c.arith_bell_number_nmod_vec_ogf", "n"]], "arith_bell_number_nmod_vec_recursive": [[1, 1, 1, "c.arith_bell_number_nmod_vec_recursive", "b"], [1, 1, 1, "c.arith_bell_number_nmod_vec_recursive", "mod"], [1, 1, 1, "c.arith_bell_number_nmod_vec_recursive", "n"]], "arith_bell_number_nmod_vec_series": [[1, 1, 1, "c.arith_bell_number_nmod_vec_series", "b"], [1, 1, 1, "c.arith_bell_number_nmod_vec_series", "mod"], [1, 1, 1, "c.arith_bell_number_nmod_vec_series", "n"]], "arith_bell_number_size": [[1, 1, 1, "c.arith_bell_number_size", "n"]], "arith_bell_number_vec": [[1, 1, 1, "c.arith_bell_number_vec", "b"], [1, 1, 1, "c.arith_bell_number_vec", "n"]], "arith_bell_number_vec_multi_mod": [[1, 1, 1, "c.arith_bell_number_vec_multi_mod", "b"], [1, 1, 1, "c.arith_bell_number_vec_multi_mod", "n"]], "arith_bell_number_vec_recursive": [[1, 1, 1, "c.arith_bell_number_vec_recursive", "b"], [1, 1, 1, "c.arith_bell_number_vec_recursive", "n"]], "arith_bernoulli_number": [[1, 1, 1, "c.arith_bernoulli_number", "n"], [1, 1, 1, "c.arith_bernoulli_number", "x"]], "arith_bernoulli_number_denom": [[1, 1, 1, "c.arith_bernoulli_number_denom", "den"], [1, 1, 1, "c.arith_bernoulli_number_denom", "n"]], "arith_bernoulli_number_size": [[1, 1, 1, "c.arith_bernoulli_number_size", "n"]], "arith_bernoulli_number_vec": [[1, 1, 1, "c.arith_bernoulli_number_vec", "n"], [1, 1, 1, "c.arith_bernoulli_number_vec", "x"]], "arith_bernoulli_polynomial": [[1, 1, 1, "c.arith_bernoulli_polynomial", "n"], [1, 1, 1, "c.arith_bernoulli_polynomial", "poly"]], "arith_cos_minpoly": [[1, 1, 1, "c.arith_cos_minpoly", "n"], [1, 1, 1, "c.arith_cos_minpoly", "poly"]], "arith_dedekind_sum": [[1, 1, 1, "c.arith_dedekind_sum", "h"], [1, 1, 1, "c.arith_dedekind_sum", "k"], [1, 1, 1, "c.arith_dedekind_sum", "s"]], "arith_dedekind_sum_coprime": [[1, 1, 1, "c.arith_dedekind_sum_coprime", "h"], [1, 1, 1, "c.arith_dedekind_sum_coprime", "k"], [1, 1, 1, "c.arith_dedekind_sum_coprime", "s"]], "arith_dedekind_sum_coprime_d": [[1, 1, 1, "c.arith_dedekind_sum_coprime_d", "h"], [1, 1, 1, "c.arith_dedekind_sum_coprime_d", "k"]], "arith_dedekind_sum_coprime_large": [[1, 1, 1, "c.arith_dedekind_sum_coprime_large", "h"], [1, 1, 1, "c.arith_dedekind_sum_coprime_large", "k"], [1, 1, 1, "c.arith_dedekind_sum_coprime_large", "s"]], "arith_dedekind_sum_naive": [[1, 1, 1, "c.arith_dedekind_sum_naive", "h"], [1, 1, 1, "c.arith_dedekind_sum_naive", "k"], [1, 1, 1, "c.arith_dedekind_sum_naive", "s"]], "arith_divisor_sigma": [[1, 1, 1, "c.arith_divisor_sigma", "k"], [1, 1, 1, "c.arith_divisor_sigma", "n"], [1, 1, 1, "c.arith_divisor_sigma", "res"]], "arith_divisors": [[1, 1, 1, "c.arith_divisors", "n"], [1, 1, 1, "c.arith_divisors", "res"]], "arith_euler_number": [[1, 1, 1, "c.arith_euler_number", "n"], [1, 1, 1, "c.arith_euler_number", "res"]], "arith_euler_number_size": [[1, 1, 1, "c.arith_euler_number_size", "n"]], "arith_euler_number_vec": [[1, 1, 1, "c.arith_euler_number_vec", "n"], [1, 1, 1, "c.arith_euler_number_vec", "res"]], "arith_euler_phi": [[1, 1, 1, "c.arith_euler_phi", "n"], [1, 1, 1, "c.arith_euler_phi", "res"]], "arith_euler_polynomial": [[1, 1, 1, "c.arith_euler_polynomial", "n"], [1, 1, 1, "c.arith_euler_polynomial", "poly"]], "arith_eulerian_polynomial": [[31, 1, 1, "c.arith_eulerian_polynomial", "n"], [31, 1, 1, "c.arith_eulerian_polynomial", "res"]], "arith_harmonic_number": [[1, 1, 1, "c.arith_harmonic_number", "n"], [1, 1, 1, "c.arith_harmonic_number", "x"]], "arith_hrr_expsum_factored": [[1, 1, 1, "c.arith_hrr_expsum_factored", "k"], [1, 1, 1, "c.arith_hrr_expsum_factored", "n"], [1, 1, 1, "c.arith_hrr_expsum_factored", "prod"]], "arith_landau_function_vec": [[1, 1, 1, "c.arith_landau_function_vec", "len"], [1, 1, 1, "c.arith_landau_function_vec", "res"]], "arith_moebius_mu": [[1, 1, 1, "c.arith_moebius_mu", "n"]], "arith_number_of_partitions": [[1, 1, 1, "c.arith_number_of_partitions", "n"], [1, 1, 1, "c.arith_number_of_partitions", "x"]], "arith_number_of_partitions_mpfr": [[1, 1, 1, "c.arith_number_of_partitions_mpfr", "n"], [1, 1, 1, "c.arith_number_of_partitions_mpfr", "x"]], "arith_number_of_partitions_nmod_vec": [[1, 1, 1, "c.arith_number_of_partitions_nmod_vec", "len"], [1, 1, 1, "c.arith_number_of_partitions_nmod_vec", "mod"], [1, 1, 1, "c.arith_number_of_partitions_nmod_vec", "res"]], "arith_number_of_partitions_vec": [[1, 1, 1, "c.arith_number_of_partitions_vec", "len"], [1, 1, 1, "c.arith_number_of_partitions_vec", "res"]], "arith_primorial": [[1, 1, 1, "c.arith_primorial", "n"], [1, 1, 1, "c.arith_primorial", "res"]], "arith_ramanujan_tau": [[1, 1, 1, "c.arith_ramanujan_tau", "n"], [1, 1, 1, "c.arith_ramanujan_tau", "res"]], "arith_ramanujan_tau_series": [[1, 1, 1, "c.arith_ramanujan_tau_series", "n"], [1, 1, 1, "c.arith_ramanujan_tau_series", "res"]], "arith_stirling_matrix_1": [[1, 1, 1, "c.arith_stirling_matrix_1", "mat"]], "arith_stirling_matrix_1u": [[1, 1, 1, "c.arith_stirling_matrix_1u", "mat"]], "arith_stirling_matrix_2": [[1, 1, 1, "c.arith_stirling_matrix_2", "mat"]], "arith_stirling_number_1": [[1, 1, 1, "c.arith_stirling_number_1", "k"], [1, 1, 1, "c.arith_stirling_number_1", "n"], [1, 1, 1, "c.arith_stirling_number_1", "s"]], "arith_stirling_number_1_vec": [[1, 1, 1, "c.arith_stirling_number_1_vec", "klen"], [1, 1, 1, "c.arith_stirling_number_1_vec", "n"], [1, 1, 1, "c.arith_stirling_number_1_vec", "row"]], "arith_stirling_number_1_vec_next": [[1, 1, 1, "c.arith_stirling_number_1_vec_next", "klen"], [1, 1, 1, "c.arith_stirling_number_1_vec_next", "n"], [1, 1, 1, "c.arith_stirling_number_1_vec_next", "prev"], [1, 1, 1, "c.arith_stirling_number_1_vec_next", "row"]], "arith_stirling_number_1u": [[1, 1, 1, "c.arith_stirling_number_1u", "k"], [1, 1, 1, "c.arith_stirling_number_1u", "n"], [1, 1, 1, "c.arith_stirling_number_1u", "s"]], "arith_stirling_number_1u_vec": [[1, 1, 1, "c.arith_stirling_number_1u_vec", "klen"], [1, 1, 1, "c.arith_stirling_number_1u_vec", "n"], [1, 1, 1, "c.arith_stirling_number_1u_vec", "row"]], "arith_stirling_number_1u_vec_next": [[1, 1, 1, "c.arith_stirling_number_1u_vec_next", "klen"], [1, 1, 1, "c.arith_stirling_number_1u_vec_next", "n"], [1, 1, 1, "c.arith_stirling_number_1u_vec_next", "prev"], [1, 1, 1, "c.arith_stirling_number_1u_vec_next", "row"]], "arith_stirling_number_2": [[1, 1, 1, "c.arith_stirling_number_2", "k"], [1, 1, 1, "c.arith_stirling_number_2", "n"], [1, 1, 1, "c.arith_stirling_number_2", "s"]], "arith_stirling_number_2_vec": [[1, 1, 1, "c.arith_stirling_number_2_vec", "klen"], [1, 1, 1, "c.arith_stirling_number_2_vec", "n"], [1, 1, 1, "c.arith_stirling_number_2_vec", "row"]], "arith_stirling_number_2_vec_next": [[1, 1, 1, "c.arith_stirling_number_2_vec_next", "klen"], [1, 1, 1, "c.arith_stirling_number_2_vec_next", "n"], [1, 1, 1, "c.arith_stirling_number_2_vec_next", "prev"], [1, 1, 1, "c.arith_stirling_number_2_vec_next", "row"]], "arith_sum_of_squares": [[1, 1, 1, "c.arith_sum_of_squares", "k"], [1, 1, 1, "c.arith_sum_of_squares", "n"], [1, 1, 1, "c.arith_sum_of_squares", "r"]], "arith_sum_of_squares_vec": [[1, 1, 1, "c.arith_sum_of_squares_vec", "k"], [1, 1, 1, "c.arith_sum_of_squares_vec", "n"], [1, 1, 1, "c.arith_sum_of_squares_vec", "r"]], "butterfly_lshB": [[9, 1, 1, "c.butterfly_lshB", "i1"], [9, 1, 1, "c.butterfly_lshB", "i2"], [9, 1, 1, "c.butterfly_lshB", "limbs"], [9, 1, 1, "c.butterfly_lshB", "t"], [9, 1, 1, "c.butterfly_lshB", "u"], [9, 1, 1, "c.butterfly_lshB", "x"], [9, 1, 1, "c.butterfly_lshB", "y"]], "butterfly_rshB": [[9, 1, 1, "c.butterfly_rshB", "i1"], [9, 1, 1, "c.butterfly_rshB", "i2"], [9, 1, 1, "c.butterfly_rshB", "limbs"], [9, 1, 1, "c.butterfly_rshB", "t"], [9, 1, 1, "c.butterfly_rshB", "u"], [9, 1, 1, "c.butterfly_rshB", "x"], [9, 1, 1, "c.butterfly_rshB", "y"]], "d_is_nan": [[7, 1, 1, "c.d_is_nan", "x"]], "d_lambertw": [[7, 1, 1, "c.d_lambertw", "x"]], "d_log2": [[7, 1, 1, "c.d_log2", "x"]], "d_mat_approx_equal": [[5, 1, 1, "c.d_mat_approx_equal", "eps"], [5, 1, 1, "c.d_mat_approx_equal", "mat1"], [5, 1, 1, "c.d_mat_approx_equal", "mat2"]], "d_mat_clear": [[5, 1, 1, "c.d_mat_clear", "mat"]], "d_mat_entry": [[5, 1, 1, "c.d_mat_entry", "i"], [5, 1, 1, "c.d_mat_entry", "j"], [5, 1, 1, "c.d_mat_entry", "mat"]], "d_mat_entry_ptr": [[5, 1, 1, "c.d_mat_entry_ptr", "i"], [5, 1, 1, "c.d_mat_entry_ptr", "j"], [5, 1, 1, "c.d_mat_entry_ptr", "mat"]], "d_mat_equal": [[5, 1, 1, "c.d_mat_equal", "mat1"], [5, 1, 1, "c.d_mat_equal", "mat2"]], "d_mat_get_entry": [[5, 1, 1, "c.d_mat_get_entry", "i"], [5, 1, 1, "c.d_mat_get_entry", "j"], [5, 1, 1, "c.d_mat_get_entry", "mat"]], "d_mat_gso": [[5, 1, 1, "c.d_mat_gso", "A"], [5, 1, 1, "c.d_mat_gso", "B"]], "d_mat_init": [[5, 1, 1, "c.d_mat_init", "cols"], [5, 1, 1, "c.d_mat_init", "mat"], [5, 1, 1, "c.d_mat_init", "rows"]], "d_mat_is_approx_zero": [[5, 1, 1, "c.d_mat_is_approx_zero", "eps"], [5, 1, 1, "c.d_mat_is_approx_zero", "mat"]], "d_mat_is_empty": [[5, 1, 1, "c.d_mat_is_empty", "mat"]], "d_mat_is_square": [[5, 1, 1, "c.d_mat_is_square", "mat"]], "d_mat_is_zero": [[5, 1, 1, "c.d_mat_is_zero", "mat"]], "d_mat_mul_classical": [[5, 1, 1, "c.d_mat_mul_classical", "A"], [5, 1, 1, "c.d_mat_mul_classical", "B"], [5, 1, 1, "c.d_mat_mul_classical", "C"]], "d_mat_one": [[5, 1, 1, "c.d_mat_one", "mat"]], "d_mat_print": [[5, 1, 1, "c.d_mat_print", "mat"]], "d_mat_qr": [[5, 1, 1, "c.d_mat_qr", "A"], [5, 1, 1, "c.d_mat_qr", "Q"], [5, 1, 1, "c.d_mat_qr", "R"]], "d_mat_randtest": [[5, 1, 1, "c.d_mat_randtest", "mat"], [5, 1, 1, "c.d_mat_randtest", "maxexp"], [5, 1, 1, "c.d_mat_randtest", "minexp"], [5, 1, 1, "c.d_mat_randtest", "state"]], "d_mat_set": [[5, 1, 1, "c.d_mat_set", "mat1"], [5, 1, 1, "c.d_mat_set", "mat2"]], "d_mat_swap": [[5, 1, 1, "c.d_mat_swap", "mat1"], [5, 1, 1, "c.d_mat_swap", "mat2"]], "d_mat_swap_entrywise": [[5, 1, 1, "c.d_mat_swap_entrywise", "mat1"], [5, 1, 1, "c.d_mat_swap_entrywise", "mat2"]], "d_mat_transpose": [[5, 1, 1, "c.d_mat_transpose", "A"], [5, 1, 1, "c.d_mat_transpose", "B"]], "d_mat_zero": [[5, 1, 1, "c.d_mat_zero", "mat"]], "d_polyval": [[7, 1, 1, "c.d_polyval", "len"], [7, 1, 1, "c.d_polyval", "poly"], [7, 1, 1, "c.d_polyval", "x"]], "d_randtest": [[7, 1, 1, "c.d_randtest", "state"]], "d_randtest_signed": [[7, 1, 1, "c.d_randtest_signed", "maxexp"], [7, 1, 1, "c.d_randtest_signed", "minexp"], [7, 1, 1, "c.d_randtest_signed", "state"]], "d_randtest_special": [[7, 1, 1, "c.d_randtest_special", "maxexp"], [7, 1, 1, "c.d_randtest_special", "minexp"], [7, 1, 1, "c.d_randtest_special", "state"]], "fermat_to_mpz": [[9, 1, 1, "c.fermat_to_mpz", "i"], [9, 1, 1, "c.fermat_to_mpz", "limbs"], [9, 1, 1, "c.fermat_to_mpz", "m"]], "fft_adjust": [[9, 1, 1, "c.fft_adjust", "i"], [9, 1, 1, "c.fft_adjust", "i1"], [9, 1, 1, "c.fft_adjust", "limbs"], [9, 1, 1, "c.fft_adjust", "r"], [9, 1, 1, "c.fft_adjust", "w"]], "fft_adjust_limbs": [[9, 1, 1, "c.fft_adjust_limbs", "limbs"]], "fft_adjust_sqrt2": [[9, 1, 1, "c.fft_adjust_sqrt2", "i"], [9, 1, 1, "c.fft_adjust_sqrt2", "i1"], [9, 1, 1, "c.fft_adjust_sqrt2", "limbs"], [9, 1, 1, "c.fft_adjust_sqrt2", "r"], [9, 1, 1, "c.fft_adjust_sqrt2", "temp"], [9, 1, 1, "c.fft_adjust_sqrt2", "w"]], "fft_butterfly": [[9, 1, 1, "c.fft_butterfly", "i"], [9, 1, 1, "c.fft_butterfly", "i1"], [9, 1, 1, "c.fft_butterfly", "i2"], [9, 1, 1, "c.fft_butterfly", "limbs"], [9, 1, 1, "c.fft_butterfly", "s"], [9, 1, 1, "c.fft_butterfly", "t"], [9, 1, 1, "c.fft_butterfly", "w"]], "fft_butterfly_sqrt2": [[9, 1, 1, "c.fft_butterfly_sqrt2", "i"], [9, 1, 1, "c.fft_butterfly_sqrt2", "i1"], [9, 1, 1, "c.fft_butterfly_sqrt2", "i2"], [9, 1, 1, "c.fft_butterfly_sqrt2", "limbs"], [9, 1, 1, "c.fft_butterfly_sqrt2", "s"], [9, 1, 1, "c.fft_butterfly_sqrt2", "t"], [9, 1, 1, "c.fft_butterfly_sqrt2", "temp"], [9, 1, 1, "c.fft_butterfly_sqrt2", "w"]], "fft_butterfly_twiddle": [[9, 1, 1, "c.fft_butterfly_twiddle", "b1"], [9, 1, 1, "c.fft_butterfly_twiddle", "b2"], [9, 1, 1, "c.fft_butterfly_twiddle", "limbs"], [9, 1, 1, "c.fft_butterfly_twiddle", "s"], [9, 1, 1, "c.fft_butterfly_twiddle", "t"], [9, 1, 1, "c.fft_butterfly_twiddle", "u"], [9, 1, 1, "c.fft_butterfly_twiddle", "v"]], "fft_combine_bits": [[9, 1, 1, "c.fft_combine_bits", "bits"], [9, 1, 1, "c.fft_combine_bits", "length"], [9, 1, 1, "c.fft_combine_bits", "output_limbs"], [9, 1, 1, "c.fft_combine_bits", "poly"], [9, 1, 1, "c.fft_combine_bits", "res"], [9, 1, 1, "c.fft_combine_bits", "total_limbs"]], "fft_combine_limbs": [[9, 1, 1, "c.fft_combine_limbs", "coeff_limbs"], [9, 1, 1, "c.fft_combine_limbs", "length"], [9, 1, 1, "c.fft_combine_limbs", "output_limbs"], [9, 1, 1, "c.fft_combine_limbs", "poly"], [9, 1, 1, "c.fft_combine_limbs", "res"], [9, 1, 1, "c.fft_combine_limbs", "total_limbs"]], "fft_convolution": [[9, 1, 1, "c.fft_convolution", "depth"], [9, 1, 1, "c.fft_convolution", "ii"], [9, 1, 1, "c.fft_convolution", "jj"], [9, 1, 1, "c.fft_convolution", "limbs"], [9, 1, 1, "c.fft_convolution", "s1"], [9, 1, 1, "c.fft_convolution", "t1"], [9, 1, 1, "c.fft_convolution", "t2"], [9, 1, 1, "c.fft_convolution", "trunc"], [9, 1, 1, "c.fft_convolution", "tt"]], "fft_convolution_precache": [[9, 1, 1, "c.fft_convolution_precache", "depth"], [9, 1, 1, "c.fft_convolution_precache", "ii"], [9, 1, 1, "c.fft_convolution_precache", "jj"], [9, 1, 1, "c.fft_convolution_precache", "limbs"], [9, 1, 1, "c.fft_convolution_precache", "s1"], [9, 1, 1, "c.fft_convolution_precache", "t1"], [9, 1, 1, "c.fft_convolution_precache", "t2"], [9, 1, 1, "c.fft_convolution_precache", "trunc"], [9, 1, 1, "c.fft_convolution_precache", "tt"]], "fft_mfa_truncate_sqrt2": [[9, 1, 1, "c.fft_mfa_truncate_sqrt2", "ii"], [9, 1, 1, "c.fft_mfa_truncate_sqrt2", "n"], [9, 1, 1, "c.fft_mfa_truncate_sqrt2", "n1"], [9, 1, 1, "c.fft_mfa_truncate_sqrt2", "t1"], [9, 1, 1, "c.fft_mfa_truncate_sqrt2", "t2"], [9, 1, 1, "c.fft_mfa_truncate_sqrt2", "temp"], [9, 1, 1, "c.fft_mfa_truncate_sqrt2", "trunc"], [9, 1, 1, "c.fft_mfa_truncate_sqrt2", "w"]], "fft_mfa_truncate_sqrt2_inner": [[9, 1, 1, "c.fft_mfa_truncate_sqrt2_inner", "ii"], [9, 1, 1, "c.fft_mfa_truncate_sqrt2_inner", "jj"], [9, 1, 1, "c.fft_mfa_truncate_sqrt2_inner", "n"], [9, 1, 1, "c.fft_mfa_truncate_sqrt2_inner", "n1"], [9, 1, 1, "c.fft_mfa_truncate_sqrt2_inner", "t1"], [9, 1, 1, "c.fft_mfa_truncate_sqrt2_inner", "t2"], [9, 1, 1, "c.fft_mfa_truncate_sqrt2_inner", "temp"], [9, 1, 1, "c.fft_mfa_truncate_sqrt2_inner", "trunc"], [9, 1, 1, "c.fft_mfa_truncate_sqrt2_inner", "tt"], [9, 1, 1, "c.fft_mfa_truncate_sqrt2_inner", "w"]], "fft_mfa_truncate_sqrt2_outer": [[9, 1, 1, "c.fft_mfa_truncate_sqrt2_outer", "ii"], [9, 1, 1, "c.fft_mfa_truncate_sqrt2_outer", "n"], [9, 1, 1, "c.fft_mfa_truncate_sqrt2_outer", "n1"], [9, 1, 1, "c.fft_mfa_truncate_sqrt2_outer", "t1"], [9, 1, 1, "c.fft_mfa_truncate_sqrt2_outer", "t2"], [9, 1, 1, "c.fft_mfa_truncate_sqrt2_outer", "temp"], [9, 1, 1, "c.fft_mfa_truncate_sqrt2_outer", "trunc"], [9, 1, 1, "c.fft_mfa_truncate_sqrt2_outer", "w"]], "fft_mulmod_2expp1": [[9, 1, 1, "c.fft_mulmod_2expp1", "i1"], [9, 1, 1, "c.fft_mulmod_2expp1", "i2"], [9, 1, 1, "c.fft_mulmod_2expp1", "n"], [9, 1, 1, "c.fft_mulmod_2expp1", "r"], [9, 1, 1, "c.fft_mulmod_2expp1", "tt"], [9, 1, 1, "c.fft_mulmod_2expp1", "w"]], "fft_naive_convolution_1": [[9, 1, 1, "c.fft_naive_convolution_1", "ii"], [9, 1, 1, "c.fft_naive_convolution_1", "jj"], [9, 1, 1, "c.fft_naive_convolution_1", "m"], [9, 1, 1, "c.fft_naive_convolution_1", "r"]], "fft_negacyclic": [[9, 1, 1, "c.fft_negacyclic", "ii"], [9, 1, 1, "c.fft_negacyclic", "n"], [9, 1, 1, "c.fft_negacyclic", "t1"], [9, 1, 1, "c.fft_negacyclic", "t2"], [9, 1, 1, "c.fft_negacyclic", "temp"], [9, 1, 1, "c.fft_negacyclic", "w"]], "fft_precache": [[9, 1, 1, "c.fft_precache", "depth"], [9, 1, 1, "c.fft_precache", "jj"], [9, 1, 1, "c.fft_precache", "limbs"], [9, 1, 1, "c.fft_precache", "s1"], [9, 1, 1, "c.fft_precache", "t1"], [9, 1, 1, "c.fft_precache", "t2"], [9, 1, 1, "c.fft_precache", "trunc"]], "fft_radix2": [[9, 1, 1, "c.fft_radix2", "ii"], [9, 1, 1, "c.fft_radix2", "n"], [9, 1, 1, "c.fft_radix2", "t1"], [9, 1, 1, "c.fft_radix2", "t2"], [9, 1, 1, "c.fft_radix2", "w"]], "fft_radix2_twiddle": [[9, 1, 1, "c.fft_radix2_twiddle", "c"], [9, 1, 1, "c.fft_radix2_twiddle", "ii"], [9, 1, 1, "c.fft_radix2_twiddle", "is"], [9, 1, 1, "c.fft_radix2_twiddle", "n"], [9, 1, 1, "c.fft_radix2_twiddle", "r"], [9, 1, 1, "c.fft_radix2_twiddle", "rs"], [9, 1, 1, "c.fft_radix2_twiddle", "t1"], [9, 1, 1, "c.fft_radix2_twiddle", "t2"], [9, 1, 1, "c.fft_radix2_twiddle", "w"], [9, 1, 1, "c.fft_radix2_twiddle", "ws"]], "fft_split_bits": [[9, 1, 1, "c.fft_split_bits", "bits"], [9, 1, 1, "c.fft_split_bits", "limbs"], [9, 1, 1, "c.fft_split_bits", "output_limbs"], [9, 1, 1, "c.fft_split_bits", "poly"], [9, 1, 1, "c.fft_split_bits", "total_limbs"]], "fft_split_limbs": [[9, 1, 1, "c.fft_split_limbs", "coeff_limbs"], [9, 1, 1, "c.fft_split_limbs", "limbs"], [9, 1, 1, "c.fft_split_limbs", "output_limbs"], [9, 1, 1, "c.fft_split_limbs", "poly"], [9, 1, 1, "c.fft_split_limbs", "total_limbs"]], "fft_truncate": [[9, 1, 1, "c.fft_truncate", "ii"], [9, 1, 1, "c.fft_truncate", "n"], [9, 1, 1, "c.fft_truncate", "t1"], [9, 1, 1, "c.fft_truncate", "t2"], [9, 1, 1, "c.fft_truncate", "trunc"], [9, 1, 1, "c.fft_truncate", "w"]], "fft_truncate1": [[9, 1, 1, "c.fft_truncate1", "ii"], [9, 1, 1, "c.fft_truncate1", "n"], [9, 1, 1, "c.fft_truncate1", "t1"], [9, 1, 1, "c.fft_truncate1", "t2"], [9, 1, 1, "c.fft_truncate1", "trunc"], [9, 1, 1, "c.fft_truncate1", "w"]], "fft_truncate1_twiddle": [[9, 1, 1, "c.fft_truncate1_twiddle", "c"], [9, 1, 1, "c.fft_truncate1_twiddle", "ii"], [9, 1, 1, "c.fft_truncate1_twiddle", "is"], [9, 1, 1, "c.fft_truncate1_twiddle", "n"], [9, 1, 1, "c.fft_truncate1_twiddle", "r"], [9, 1, 1, "c.fft_truncate1_twiddle", "rs"], [9, 1, 1, "c.fft_truncate1_twiddle", "t1"], [9, 1, 1, "c.fft_truncate1_twiddle", "t2"], [9, 1, 1, "c.fft_truncate1_twiddle", "trunc"], [9, 1, 1, "c.fft_truncate1_twiddle", "w"], [9, 1, 1, "c.fft_truncate1_twiddle", "ws"]], "fft_truncate_sqrt2": [[9, 1, 1, "c.fft_truncate_sqrt2", "ii"], [9, 1, 1, "c.fft_truncate_sqrt2", "n"], [9, 1, 1, "c.fft_truncate_sqrt2", "t1"], [9, 1, 1, "c.fft_truncate_sqrt2", "t2"], [9, 1, 1, "c.fft_truncate_sqrt2", "temp"], [9, 1, 1, "c.fft_truncate_sqrt2", "trunc"], [9, 1, 1, "c.fft_truncate_sqrt2", "w"]], "flint_calloc": [[10, 1, 1, "c.flint_calloc", "num"], [10, 1, 1, "c.flint_calloc", "size"]], "flint_fprintf": [[10, 1, 1, "c.flint_fprintf", "f"], [10, 1, 1, "c.flint_fprintf", "str"]], "flint_free": [[10, 1, 1, "c.flint_free", "ptr"]], "flint_fscanf": [[10, 1, 1, "c.flint_fscanf", "f"], [10, 1, 1, "c.flint_fscanf", "str"]], "flint_malloc": [[10, 1, 1, "c.flint_malloc", "size"]], "flint_mpn_debug": [[70, 1, 1, "c.flint_mpn_debug", "x"], [70, 1, 1, "c.flint_mpn_debug", "xsize"]], "flint_mpn_divexact_1": [[70, 1, 1, "c.flint_mpn_divexact_1", "d"], [70, 1, 1, "c.flint_mpn_divexact_1", "x"], [70, 1, 1, "c.flint_mpn_divexact_1", "xsize"]], "flint_mpn_divides": [[70, 1, 1, "c.flint_mpn_divides", "array1"], [70, 1, 1, "c.flint_mpn_divides", "arrayg"], [70, 1, 1, "c.flint_mpn_divides", "limbs1"], [70, 1, 1, "c.flint_mpn_divides", "limbsg"], [70, 1, 1, "c.flint_mpn_divides", "q"], [70, 1, 1, "c.flint_mpn_divides", "temp"]], "flint_mpn_divrem_preinv1": [[70, 1, 1, "c.flint_mpn_divrem_preinv1", "a"], [70, 1, 1, "c.flint_mpn_divrem_preinv1", "b"], [70, 1, 1, "c.flint_mpn_divrem_preinv1", "dinv"], [70, 1, 1, "c.flint_mpn_divrem_preinv1", "m"], [70, 1, 1, "c.flint_mpn_divrem_preinv1", "n"], [70, 1, 1, "c.flint_mpn_divrem_preinv1", "q"]], "flint_mpn_divrem_preinvn": [[70, 1, 1, "c.flint_mpn_divrem_preinvn", "a"], [70, 1, 1, "c.flint_mpn_divrem_preinvn", "d"], [70, 1, 1, "c.flint_mpn_divrem_preinvn", "dinv"], [70, 1, 1, "c.flint_mpn_divrem_preinvn", "m"], [70, 1, 1, "c.flint_mpn_divrem_preinvn", "n"], [70, 1, 1, "c.flint_mpn_divrem_preinvn", "q"], [70, 1, 1, "c.flint_mpn_divrem_preinvn", "r"]], "flint_mpn_factor_trial": [[70, 1, 1, "c.flint_mpn_factor_trial", "start"], [70, 1, 1, "c.flint_mpn_factor_trial", "stop"], [70, 1, 1, "c.flint_mpn_factor_trial", "x"], [70, 1, 1, "c.flint_mpn_factor_trial", "xsize"]], "flint_mpn_factor_trial_tree": [[70, 1, 1, "c.flint_mpn_factor_trial_tree", "factors"], [70, 1, 1, "c.flint_mpn_factor_trial_tree", "num_primes"], [70, 1, 1, "c.flint_mpn_factor_trial_tree", "x"], [70, 1, 1, "c.flint_mpn_factor_trial_tree", "xsize"]], "flint_mpn_fmms1": [[70, 1, 1, "c.flint_mpn_fmms1", "a1"], [70, 1, 1, "c.flint_mpn_fmms1", "a2"], [70, 1, 1, "c.flint_mpn_fmms1", "n"], [70, 1, 1, "c.flint_mpn_fmms1", "x1"], [70, 1, 1, "c.flint_mpn_fmms1", "x2"], [70, 1, 1, "c.flint_mpn_fmms1", "y"]], "flint_mpn_gcd_full": [[70, 1, 1, "c.flint_mpn_gcd_full", "array1"], [70, 1, 1, "c.flint_mpn_gcd_full", "array2"], [70, 1, 1, "c.flint_mpn_gcd_full", "arrayg"], [70, 1, 1, "c.flint_mpn_gcd_full", "limbs1"], [70, 1, 1, "c.flint_mpn_gcd_full", "limbs2"]], "flint_mpn_gcd_full2": [[70, 1, 1, "c.flint_mpn_gcd_full2", "array1"], [70, 1, 1, "c.flint_mpn_gcd_full2", "array2"], [70, 1, 1, "c.flint_mpn_gcd_full2", "arrayg"], [70, 1, 1, "c.flint_mpn_gcd_full2", "limbs1"], [70, 1, 1, "c.flint_mpn_gcd_full2", "limbs2"], [70, 1, 1, "c.flint_mpn_gcd_full2", "temp"]], "flint_mpn_mod_preinvn": [[70, 1, 1, "c.flint_mpn_mod_preinvn", "a"], [70, 1, 1, "c.flint_mpn_mod_preinvn", "d"], [70, 1, 1, "c.flint_mpn_mod_preinvn", "dinv"], [70, 1, 1, "c.flint_mpn_mod_preinvn", "m"], [70, 1, 1, "c.flint_mpn_mod_preinvn", "n"], [70, 1, 1, "c.flint_mpn_mod_preinvn", "r"]], "flint_mpn_mul_fft_main": [[9, 1, 1, "c.flint_mpn_mul_fft_main", "i1"], [9, 1, 1, "c.flint_mpn_mul_fft_main", "i2"], [9, 1, 1, "c.flint_mpn_mul_fft_main", "n1"], [9, 1, 1, "c.flint_mpn_mul_fft_main", "n2"], [9, 1, 1, "c.flint_mpn_mul_fft_main", "r1"]], "flint_mpn_mulmod_preinv1": [[70, 1, 1, "c.flint_mpn_mulmod_preinv1", "a"], [70, 1, 1, "c.flint_mpn_mulmod_preinv1", "b"], [70, 1, 1, "c.flint_mpn_mulmod_preinv1", "d"], [70, 1, 1, "c.flint_mpn_mulmod_preinv1", "dinv"], [70, 1, 1, "c.flint_mpn_mulmod_preinv1", "n"], [70, 1, 1, "c.flint_mpn_mulmod_preinv1", "norm"], [70, 1, 1, "c.flint_mpn_mulmod_preinv1", "r"]], "flint_mpn_mulmod_preinvn": [[70, 1, 1, "c.flint_mpn_mulmod_preinvn", "a"], [70, 1, 1, "c.flint_mpn_mulmod_preinvn", "b"], [70, 1, 1, "c.flint_mpn_mulmod_preinvn", "d"], [70, 1, 1, "c.flint_mpn_mulmod_preinvn", "dinv"], [70, 1, 1, "c.flint_mpn_mulmod_preinvn", "n"], [70, 1, 1, "c.flint_mpn_mulmod_preinvn", "norm"], [70, 1, 1, "c.flint_mpn_mulmod_preinvn", "r"]], "flint_mpn_preinv1": [[70, 1, 1, "c.flint_mpn_preinv1", "d"], [70, 1, 1, "c.flint_mpn_preinv1", "d2"]], "flint_mpn_preinvn": [[70, 1, 1, "c.flint_mpn_preinvn", "d"], [70, 1, 1, "c.flint_mpn_preinvn", "dinv"], [70, 1, 1, "c.flint_mpn_preinvn", "n"]], "flint_mpn_remove_2exp": [[70, 1, 1, "c.flint_mpn_remove_2exp", "bits"], [70, 1, 1, "c.flint_mpn_remove_2exp", "x"], [70, 1, 1, "c.flint_mpn_remove_2exp", "xsize"]], "flint_mpn_remove_power_ascending": [[70, 1, 1, "c.flint_mpn_remove_power_ascending", "exp"], [70, 1, 1, "c.flint_mpn_remove_power_ascending", "p"], [70, 1, 1, "c.flint_mpn_remove_power_ascending", "psize"], [70, 1, 1, "c.flint_mpn_remove_power_ascending", "x"], [70, 1, 1, "c.flint_mpn_remove_power_ascending", "xsize"]], "flint_mpn_rrandom": [[70, 1, 1, "c.flint_mpn_rrandom", "n"], [70, 1, 1, "c.flint_mpn_rrandom", "rp"], [70, 1, 1, "c.flint_mpn_rrandom", "state"]], "flint_mpn_urandomb": [[70, 1, 1, "c.flint_mpn_urandomb", "n"], [70, 1, 1, "c.flint_mpn_urandomb", "rp"], [70, 1, 1, "c.flint_mpn_urandomb", "state"]], "flint_mpn_zero_p": [[70, 1, 1, "c.flint_mpn_zero_p", "x"], [70, 1, 1, "c.flint_mpn_zero_p", "xsize"]], "flint_mpq_clear_readonly": [[12, 1, 1, "c.flint_mpq_clear_readonly", "z"]], "flint_mpq_init_set_readonly": [[12, 1, 1, "c.flint_mpq_init_set_readonly", "f"], [12, 1, 1, "c.flint_mpq_init_set_readonly", "z"]], "flint_mpz_clear_readonly": [[18, 1, 1, "c.flint_mpz_clear_readonly", "z"]], "flint_mpz_init_set_readonly": [[18, 1, 1, "c.flint_mpz_init_set_readonly", "f"], [18, 1, 1, "c.flint_mpz_init_set_readonly", "z"]], "flint_parallel_binary_splitting": [[90, 1, 1, "c.flint_parallel_binary_splitting", "a"], [90, 1, 1, "c.flint_parallel_binary_splitting", "args"], [90, 1, 1, "c.flint_parallel_binary_splitting", "b"], [90, 1, 1, "c.flint_parallel_binary_splitting", "basecase"], [90, 1, 1, "c.flint_parallel_binary_splitting", "basecase_cutoff"], [90, 1, 1, "c.flint_parallel_binary_splitting", "clear"], [90, 1, 1, "c.flint_parallel_binary_splitting", "flags"], [90, 1, 1, "c.flint_parallel_binary_splitting", "init"], [90, 1, 1, "c.flint_parallel_binary_splitting", "merge"], [90, 1, 1, "c.flint_parallel_binary_splitting", "res"], [90, 1, 1, "c.flint_parallel_binary_splitting", "sizeof_res"], [90, 1, 1, "c.flint_parallel_binary_splitting", "thread_limit"]], "flint_parallel_do": [[90, 1, 1, "c.flint_parallel_do", "args"], [90, 1, 1, "c.flint_parallel_do", "f"], [90, 1, 1, "c.flint_parallel_do", "flags"], [90, 1, 1, "c.flint_parallel_do", "n"], [90, 1, 1, "c.flint_parallel_do", "thread_limit"]], "flint_printf": [[10, 1, 1, "c.flint_printf", "str"]], "flint_rand_free": [[10, 1, 1, "c.flint_rand_free", "state"]], "flint_randclear": [[10, 1, 1, "c.flint_randclear", "state"]], "flint_randinit": [[10, 1, 1, "c.flint_randinit", "state"]], "flint_realloc": [[10, 1, 1, "c.flint_realloc", "ptr"], [10, 1, 1, "c.flint_realloc", "size"]], "flint_reset_num_workers": [[10, 1, 1, "c.flint_reset_num_workers", "num_workers"]], "flint_scanf": [[10, 1, 1, "c.flint_scanf", "str"]], "flint_set_num_threads": [[10, 1, 1, "c.flint_set_num_threads", "num_threads"]], "flint_set_num_workers": [[10, 1, 1, "c.flint_set_num_workers", "num_workers"]], "flint_sprintf": [[10, 1, 1, "c.flint_sprintf", "s"], [10, 1, 1, "c.flint_sprintf", "str"]], "flint_sscanf": [[10, 1, 1, "c.flint_sscanf", "s"], [10, 1, 1, "c.flint_sscanf", "str"]], "flint_vprintf": [[10, 1, 1, "c.flint_vprintf", "ap"], [10, 1, 1, "c.flint_vprintf", "str"]], "fmpq_abs": [[12, 1, 1, "c.fmpq_abs", "dest"], [12, 1, 1, "c.fmpq_abs", "src"]], "fmpq_add": [[12, 1, 1, "c.fmpq_add", "op1"], [12, 1, 1, "c.fmpq_add", "op2"], [12, 1, 1, "c.fmpq_add", "res"]], "fmpq_add_fmpz": [[12, 1, 1, "c.fmpq_add_fmpz", "c"], [12, 1, 1, "c.fmpq_add_fmpz", "op1"], [12, 1, 1, "c.fmpq_add_fmpz", "res"]], "fmpq_add_si": [[12, 1, 1, "c.fmpq_add_si", "c"], [12, 1, 1, "c.fmpq_add_si", "op1"], [12, 1, 1, "c.fmpq_add_si", "res"]], "fmpq_add_ui": [[12, 1, 1, "c.fmpq_add_ui", "c"], [12, 1, 1, "c.fmpq_add_ui", "op1"], [12, 1, 1, "c.fmpq_add_ui", "res"]], "fmpq_addmul": [[12, 1, 1, "c.fmpq_addmul", "op1"], [12, 1, 1, "c.fmpq_addmul", "op2"], [12, 1, 1, "c.fmpq_addmul", "res"]], "fmpq_canonicalise": [[12, 1, 1, "c.fmpq_canonicalise", "res"]], "fmpq_cfrac_bound": [[12, 1, 1, "c.fmpq_cfrac_bound", "x"]], "fmpq_clear": [[12, 1, 1, "c.fmpq_clear", "x"]], "fmpq_clear_readonly": [[12, 1, 1, "c.fmpq_clear_readonly", "f"]], "fmpq_cmp": [[12, 1, 1, "c.fmpq_cmp", "x"], [12, 1, 1, "c.fmpq_cmp", "y"]], "fmpq_cmp_fmpz": [[12, 1, 1, "c.fmpq_cmp_fmpz", "x"], [12, 1, 1, "c.fmpq_cmp_fmpz", "y"]], "fmpq_cmp_si": [[12, 1, 1, "c.fmpq_cmp_si", "x"], [12, 1, 1, "c.fmpq_cmp_si", "y"]], "fmpq_cmp_ui": [[12, 1, 1, "c.fmpq_cmp_ui", "x"], [12, 1, 1, "c.fmpq_cmp_ui", "y"]], "fmpq_dedekind_sum": [[12, 1, 1, "c.fmpq_dedekind_sum", "h"], [12, 1, 1, "c.fmpq_dedekind_sum", "k"], [12, 1, 1, "c.fmpq_dedekind_sum", "s"]], "fmpq_dedekind_sum_naive": [[12, 1, 1, "c.fmpq_dedekind_sum_naive", "h"], [12, 1, 1, "c.fmpq_dedekind_sum_naive", "k"], [12, 1, 1, "c.fmpq_dedekind_sum_naive", "s"]], "fmpq_div": [[12, 1, 1, "c.fmpq_div", "op1"], [12, 1, 1, "c.fmpq_div", "op2"], [12, 1, 1, "c.fmpq_div", "res"]], "fmpq_div_2exp": [[12, 1, 1, "c.fmpq_div_2exp", "exp"], [12, 1, 1, "c.fmpq_div_2exp", "res"], [12, 1, 1, "c.fmpq_div_2exp", "x"]], "fmpq_div_fmpz": [[12, 1, 1, "c.fmpq_div_fmpz", "op"], [12, 1, 1, "c.fmpq_div_fmpz", "res"], [12, 1, 1, "c.fmpq_div_fmpz", "x"]], "fmpq_equal": [[12, 1, 1, "c.fmpq_equal", "x"], [12, 1, 1, "c.fmpq_equal", "y"]], "fmpq_equal_si": [[12, 1, 1, "c.fmpq_equal_si", "x"], [12, 1, 1, "c.fmpq_equal_si", "y"]], "fmpq_equal_ui": [[12, 1, 1, "c.fmpq_equal_ui", "x"], [12, 1, 1, "c.fmpq_equal_ui", "y"]], "fmpq_farey_neighbors": [[12, 1, 1, "c.fmpq_farey_neighbors", "Q"], [12, 1, 1, "c.fmpq_farey_neighbors", "l"], [12, 1, 1, "c.fmpq_farey_neighbors", "r"], [12, 1, 1, "c.fmpq_farey_neighbors", "x"]], "fmpq_fprint": [[12, 1, 1, "c.fmpq_fprint", "file"], [12, 1, 1, "c.fmpq_fprint", "x"]], "fmpq_gcd": [[12, 1, 1, "c.fmpq_gcd", "op1"], [12, 1, 1, "c.fmpq_gcd", "op2"], [12, 1, 1, "c.fmpq_gcd", "res"]], "fmpq_gcd_cofactors": [[12, 1, 1, "c.fmpq_gcd_cofactors", "a"], [12, 1, 1, "c.fmpq_gcd_cofactors", "abar"], [12, 1, 1, "c.fmpq_gcd_cofactors", "b"], [12, 1, 1, "c.fmpq_gcd_cofactors", "bbar"], [12, 1, 1, "c.fmpq_gcd_cofactors", "g"]], "fmpq_get_cfrac": [[12, 1, 1, "c.fmpq_get_cfrac", "c"], [12, 1, 1, "c.fmpq_get_cfrac", "n"], [12, 1, 1, "c.fmpq_get_cfrac", "rem"], [12, 1, 1, "c.fmpq_get_cfrac", "x"]], "fmpq_get_cfrac_naive": [[12, 1, 1, "c.fmpq_get_cfrac_naive", "c"], [12, 1, 1, "c.fmpq_get_cfrac_naive", "n"], [12, 1, 1, "c.fmpq_get_cfrac_naive", "rem"], [12, 1, 1, "c.fmpq_get_cfrac_naive", "x"]], "fmpq_get_d": [[12, 1, 1, "c.fmpq_get_d", "f"]], "fmpq_get_mpfr": [[12, 1, 1, "c.fmpq_get_mpfr", "dest"], [12, 1, 1, "c.fmpq_get_mpfr", "rnd"], [12, 1, 1, "c.fmpq_get_mpfr", "src"]], "fmpq_get_mpq": [[12, 1, 1, "c.fmpq_get_mpq", "dest"], [12, 1, 1, "c.fmpq_get_mpq", "src"]], "fmpq_get_mpz_frac": [[12, 1, 1, "c.fmpq_get_mpz_frac", "a"], [12, 1, 1, "c.fmpq_get_mpz_frac", "b"], [12, 1, 1, "c.fmpq_get_mpz_frac", "c"]], "fmpq_get_str": [[12, 1, 1, "c.fmpq_get_str", "b"], [12, 1, 1, "c.fmpq_get_str", "str"], [12, 1, 1, "c.fmpq_get_str", "x"]], "fmpq_harmonic_ui": [[12, 1, 1, "c.fmpq_harmonic_ui", "n"], [12, 1, 1, "c.fmpq_harmonic_ui", "x"]], "fmpq_height": [[12, 1, 1, "c.fmpq_height", "height"], [12, 1, 1, "c.fmpq_height", "x"]], "fmpq_height_bits": [[12, 1, 1, "c.fmpq_height_bits", "x"]], "fmpq_init": [[12, 1, 1, "c.fmpq_init", "x"]], "fmpq_init_set_mpz_frac_readonly": [[12, 1, 1, "c.fmpq_init_set_mpz_frac_readonly", "p"], [12, 1, 1, "c.fmpq_init_set_mpz_frac_readonly", "q"], [12, 1, 1, "c.fmpq_init_set_mpz_frac_readonly", "z"]], "fmpq_init_set_readonly": [[12, 1, 1, "c.fmpq_init_set_readonly", "f"], [12, 1, 1, "c.fmpq_init_set_readonly", "z"]], "fmpq_inv": [[12, 1, 1, "c.fmpq_inv", "dest"], [12, 1, 1, "c.fmpq_inv", "src"]], "fmpq_is_canonical": [[12, 1, 1, "c.fmpq_is_canonical", "x"]], "fmpq_is_one": [[12, 1, 1, "c.fmpq_is_one", "res"]], "fmpq_is_pm1": [[12, 1, 1, "c.fmpq_is_pm1", "res"]], "fmpq_is_zero": [[12, 1, 1, "c.fmpq_is_zero", "res"]], "fmpq_mat_add": [[13, 1, 1, "c.fmpq_mat_add", "mat"], [13, 1, 1, "c.fmpq_mat_add", "mat1"], [13, 1, 1, "c.fmpq_mat_add", "mat2"]], "fmpq_mat_can_solve": [[13, 1, 1, "c.fmpq_mat_can_solve", "A"], [13, 1, 1, "c.fmpq_mat_can_solve", "B"], [13, 1, 1, "c.fmpq_mat_can_solve", "X"]], "fmpq_mat_can_solve_fraction_free": [[13, 1, 1, "c.fmpq_mat_can_solve_fraction_free", "A"], [13, 1, 1, "c.fmpq_mat_can_solve_fraction_free", "B"], [13, 1, 1, "c.fmpq_mat_can_solve_fraction_free", "X"]], "fmpq_mat_can_solve_multi_mod": [[13, 1, 1, "c.fmpq_mat_can_solve_multi_mod", "A"], [13, 1, 1, "c.fmpq_mat_can_solve_multi_mod", "B"], [13, 1, 1, "c.fmpq_mat_can_solve_multi_mod", "X"]], "fmpq_mat_charpoly": [[13, 1, 1, "c.fmpq_mat_charpoly", "mat"], [13, 1, 1, "c.fmpq_mat_charpoly", "pol"]], "fmpq_mat_clear": [[13, 1, 1, "c.fmpq_mat_clear", "mat"]], "fmpq_mat_concat_horizontal": [[13, 1, 1, "c.fmpq_mat_concat_horizontal", "mat1"], [13, 1, 1, "c.fmpq_mat_concat_horizontal", "mat2"], [13, 1, 1, "c.fmpq_mat_concat_horizontal", "res"]], "fmpq_mat_concat_vertical": [[13, 1, 1, "c.fmpq_mat_concat_vertical", "mat1"], [13, 1, 1, "c.fmpq_mat_concat_vertical", "mat2"], [13, 1, 1, "c.fmpq_mat_concat_vertical", "res"]], "fmpq_mat_det": [[13, 1, 1, "c.fmpq_mat_det", "det"], [13, 1, 1, "c.fmpq_mat_det", "mat"]], "fmpq_mat_entry": [[13, 1, 1, "c.fmpq_mat_entry", "i"], [13, 1, 1, "c.fmpq_mat_entry", "j"], [13, 1, 1, "c.fmpq_mat_entry", "mat"]], "fmpq_mat_entry_den": [[13, 1, 1, "c.fmpq_mat_entry_den", "i"], [13, 1, 1, "c.fmpq_mat_entry_den", "j"], [13, 1, 1, "c.fmpq_mat_entry_den", "mat"]], "fmpq_mat_entry_num": [[13, 1, 1, "c.fmpq_mat_entry_num", "i"], [13, 1, 1, "c.fmpq_mat_entry_num", "j"], [13, 1, 1, "c.fmpq_mat_entry_num", "mat"]], "fmpq_mat_equal": [[13, 1, 1, "c.fmpq_mat_equal", "mat1"], [13, 1, 1, "c.fmpq_mat_equal", "mat2"]], "fmpq_mat_fmpq_vec_mul": [[13, 1, 1, "c.fmpq_mat_fmpq_vec_mul", "B"], [13, 1, 1, "c.fmpq_mat_fmpq_vec_mul", "a"], [13, 1, 1, "c.fmpq_mat_fmpq_vec_mul", "alen"], [13, 1, 1, "c.fmpq_mat_fmpq_vec_mul", "c"]], "fmpq_mat_fmpq_vec_mul_ptr": [[13, 1, 1, "c.fmpq_mat_fmpq_vec_mul_ptr", "B"], [13, 1, 1, "c.fmpq_mat_fmpq_vec_mul_ptr", "a"], [13, 1, 1, "c.fmpq_mat_fmpq_vec_mul_ptr", "alen"], [13, 1, 1, "c.fmpq_mat_fmpq_vec_mul_ptr", "c"]], "fmpq_mat_fmpz_vec_mul": [[13, 1, 1, "c.fmpq_mat_fmpz_vec_mul", "B"], [13, 1, 1, "c.fmpq_mat_fmpz_vec_mul", "a"], [13, 1, 1, "c.fmpq_mat_fmpz_vec_mul", "alen"], [13, 1, 1, "c.fmpq_mat_fmpz_vec_mul", "c"]], "fmpq_mat_fmpz_vec_mul_ptr": [[13, 1, 1, "c.fmpq_mat_fmpz_vec_mul_ptr", "B"], [13, 1, 1, "c.fmpq_mat_fmpz_vec_mul_ptr", "a"], [13, 1, 1, "c.fmpq_mat_fmpz_vec_mul_ptr", "alen"], [13, 1, 1, "c.fmpq_mat_fmpz_vec_mul_ptr", "c"]], "fmpq_mat_get_fmpz_mat": [[13, 1, 1, "c.fmpq_mat_get_fmpz_mat", "dest"], [13, 1, 1, "c.fmpq_mat_get_fmpz_mat", "mat"]], "fmpq_mat_get_fmpz_mat_colwise": [[13, 1, 1, "c.fmpq_mat_get_fmpz_mat_colwise", "den"], [13, 1, 1, "c.fmpq_mat_get_fmpz_mat_colwise", "mat"], [13, 1, 1, "c.fmpq_mat_get_fmpz_mat_colwise", "num"]], "fmpq_mat_get_fmpz_mat_entrywise": [[13, 1, 1, "c.fmpq_mat_get_fmpz_mat_entrywise", "den"], [13, 1, 1, "c.fmpq_mat_get_fmpz_mat_entrywise", "mat"], [13, 1, 1, "c.fmpq_mat_get_fmpz_mat_entrywise", "num"]], "fmpq_mat_get_fmpz_mat_matwise": [[13, 1, 1, "c.fmpq_mat_get_fmpz_mat_matwise", "den"], [13, 1, 1, "c.fmpq_mat_get_fmpz_mat_matwise", "mat"], [13, 1, 1, "c.fmpq_mat_get_fmpz_mat_matwise", "num"]], "fmpq_mat_get_fmpz_mat_mod_fmpz": [[13, 1, 1, "c.fmpq_mat_get_fmpz_mat_mod_fmpz", "dest"], [13, 1, 1, "c.fmpq_mat_get_fmpz_mat_mod_fmpz", "mat"], [13, 1, 1, "c.fmpq_mat_get_fmpz_mat_mod_fmpz", "mod"]], "fmpq_mat_get_fmpz_mat_rowwise": [[13, 1, 1, "c.fmpq_mat_get_fmpz_mat_rowwise", "den"], [13, 1, 1, "c.fmpq_mat_get_fmpz_mat_rowwise", "mat"], [13, 1, 1, "c.fmpq_mat_get_fmpz_mat_rowwise", "num"]], "fmpq_mat_get_fmpz_mat_rowwise_2": [[13, 1, 1, "c.fmpq_mat_get_fmpz_mat_rowwise_2", "den"], [13, 1, 1, "c.fmpq_mat_get_fmpz_mat_rowwise_2", "mat"], [13, 1, 1, "c.fmpq_mat_get_fmpz_mat_rowwise_2", "mat2"], [13, 1, 1, "c.fmpq_mat_get_fmpz_mat_rowwise_2", "num"], [13, 1, 1, "c.fmpq_mat_get_fmpz_mat_rowwise_2", "num2"]], "fmpq_mat_gso": [[13, 1, 1, "c.fmpq_mat_gso", "A"], [13, 1, 1, "c.fmpq_mat_gso", "B"]], "fmpq_mat_hilbert_matrix": [[13, 1, 1, "c.fmpq_mat_hilbert_matrix", "mat"]], "fmpq_mat_init": [[13, 1, 1, "c.fmpq_mat_init", "cols"], [13, 1, 1, "c.fmpq_mat_init", "mat"], [13, 1, 1, "c.fmpq_mat_init", "rows"]], "fmpq_mat_init_set": [[13, 1, 1, "c.fmpq_mat_init_set", "mat1"], [13, 1, 1, "c.fmpq_mat_init_set", "mat2"]], "fmpq_mat_inv": [[13, 1, 1, "c.fmpq_mat_inv", "A"], [13, 1, 1, "c.fmpq_mat_inv", "B"]], "fmpq_mat_invert_cols": [[13, 1, 1, "c.fmpq_mat_invert_cols", "mat"], [13, 1, 1, "c.fmpq_mat_invert_cols", "perm"]], "fmpq_mat_invert_rows": [[13, 1, 1, "c.fmpq_mat_invert_rows", "mat"], [13, 1, 1, "c.fmpq_mat_invert_rows", "perm"]], "fmpq_mat_is_empty": [[13, 1, 1, "c.fmpq_mat_is_empty", "mat"]], "fmpq_mat_is_integral": [[13, 1, 1, "c.fmpq_mat_is_integral", "mat"]], "fmpq_mat_is_one": [[13, 1, 1, "c.fmpq_mat_is_one", "mat"]], "fmpq_mat_is_square": [[13, 1, 1, "c.fmpq_mat_is_square", "mat"]], "fmpq_mat_is_zero": [[13, 1, 1, "c.fmpq_mat_is_zero", "mat"]], "fmpq_mat_kronecker_product": [[13, 1, 1, "c.fmpq_mat_kronecker_product", "A"], [13, 1, 1, "c.fmpq_mat_kronecker_product", "B"], [13, 1, 1, "c.fmpq_mat_kronecker_product", "C"]], "fmpq_mat_minpoly": [[13, 1, 1, "c.fmpq_mat_minpoly", "mat"], [13, 1, 1, "c.fmpq_mat_minpoly", "pol"]], "fmpq_mat_mul": [[13, 1, 1, "c.fmpq_mat_mul", "A"], [13, 1, 1, "c.fmpq_mat_mul", "B"], [13, 1, 1, "c.fmpq_mat_mul", "C"]], "fmpq_mat_mul_cleared": [[13, 1, 1, "c.fmpq_mat_mul_cleared", "A"], [13, 1, 1, "c.fmpq_mat_mul_cleared", "B"], [13, 1, 1, "c.fmpq_mat_mul_cleared", "C"]], "fmpq_mat_mul_direct": [[13, 1, 1, "c.fmpq_mat_mul_direct", "A"], [13, 1, 1, "c.fmpq_mat_mul_direct", "B"], [13, 1, 1, "c.fmpq_mat_mul_direct", "C"]], "fmpq_mat_mul_fmpq_vec": [[13, 1, 1, "c.fmpq_mat_mul_fmpq_vec", "A"], [13, 1, 1, "c.fmpq_mat_mul_fmpq_vec", "b"], [13, 1, 1, "c.fmpq_mat_mul_fmpq_vec", "blen"], [13, 1, 1, "c.fmpq_mat_mul_fmpq_vec", "c"]], "fmpq_mat_mul_fmpq_vec_ptr": [[13, 1, 1, "c.fmpq_mat_mul_fmpq_vec_ptr", "A"], [13, 1, 1, "c.fmpq_mat_mul_fmpq_vec_ptr", "b"], [13, 1, 1, "c.fmpq_mat_mul_fmpq_vec_ptr", "blen"], [13, 1, 1, "c.fmpq_mat_mul_fmpq_vec_ptr", "c"]], "fmpq_mat_mul_fmpz_mat": [[13, 1, 1, "c.fmpq_mat_mul_fmpz_mat", "A"], [13, 1, 1, "c.fmpq_mat_mul_fmpz_mat", "B"], [13, 1, 1, "c.fmpq_mat_mul_fmpz_mat", "C"]], "fmpq_mat_mul_fmpz_vec": [[13, 1, 1, "c.fmpq_mat_mul_fmpz_vec", "A"], [13, 1, 1, "c.fmpq_mat_mul_fmpz_vec", "b"], [13, 1, 1, "c.fmpq_mat_mul_fmpz_vec", "blen"], [13, 1, 1, "c.fmpq_mat_mul_fmpz_vec", "c"]], "fmpq_mat_mul_fmpz_vec_ptr": [[13, 1, 1, "c.fmpq_mat_mul_fmpz_vec_ptr", "A"], [13, 1, 1, "c.fmpq_mat_mul_fmpz_vec_ptr", "b"], [13, 1, 1, "c.fmpq_mat_mul_fmpz_vec_ptr", "blen"], [13, 1, 1, "c.fmpq_mat_mul_fmpz_vec_ptr", "c"]], "fmpq_mat_mul_r_fmpz_mat": [[13, 1, 1, "c.fmpq_mat_mul_r_fmpz_mat", "A"], [13, 1, 1, "c.fmpq_mat_mul_r_fmpz_mat", "B"], [13, 1, 1, "c.fmpq_mat_mul_r_fmpz_mat", "C"]], "fmpq_mat_ncols": [[13, 1, 1, "c.fmpq_mat_ncols", "mat"]], "fmpq_mat_neg": [[13, 1, 1, "c.fmpq_mat_neg", "op"], [13, 1, 1, "c.fmpq_mat_neg", "rop"]], "fmpq_mat_nrows": [[13, 1, 1, "c.fmpq_mat_nrows", "mat"]], "fmpq_mat_one": [[13, 1, 1, "c.fmpq_mat_one", "mat"]], "fmpq_mat_pivot": [[13, 1, 1, "c.fmpq_mat_pivot", "c"], [13, 1, 1, "c.fmpq_mat_pivot", "mat"], [13, 1, 1, "c.fmpq_mat_pivot", "perm"], [13, 1, 1, "c.fmpq_mat_pivot", "r"]], "fmpq_mat_print": [[13, 1, 1, "c.fmpq_mat_print", "mat"]], "fmpq_mat_randbits": [[13, 1, 1, "c.fmpq_mat_randbits", "bits"], [13, 1, 1, "c.fmpq_mat_randbits", "mat"], [13, 1, 1, "c.fmpq_mat_randbits", "state"]], "fmpq_mat_randtest": [[13, 1, 1, "c.fmpq_mat_randtest", "bits"], [13, 1, 1, "c.fmpq_mat_randtest", "mat"], [13, 1, 1, "c.fmpq_mat_randtest", "state"]], "fmpq_mat_rref": [[13, 1, 1, "c.fmpq_mat_rref", "A"], [13, 1, 1, "c.fmpq_mat_rref", "B"]], "fmpq_mat_rref_classical": [[13, 1, 1, "c.fmpq_mat_rref_classical", "A"], [13, 1, 1, "c.fmpq_mat_rref_classical", "B"]], "fmpq_mat_rref_fraction_free": [[13, 1, 1, "c.fmpq_mat_rref_fraction_free", "A"], [13, 1, 1, "c.fmpq_mat_rref_fraction_free", "B"]], "fmpq_mat_scalar_div_fmpz": [[13, 1, 1, "c.fmpq_mat_scalar_div_fmpz", "op"], [13, 1, 1, "c.fmpq_mat_scalar_div_fmpz", "rop"], [13, 1, 1, "c.fmpq_mat_scalar_div_fmpz", "x"]], "fmpq_mat_scalar_mul_fmpq": [[13, 1, 1, "c.fmpq_mat_scalar_mul_fmpq", "op"], [13, 1, 1, "c.fmpq_mat_scalar_mul_fmpq", "rop"], [13, 1, 1, "c.fmpq_mat_scalar_mul_fmpq", "x"]], "fmpq_mat_scalar_mul_fmpz": [[13, 1, 1, "c.fmpq_mat_scalar_mul_fmpz", "op"], [13, 1, 1, "c.fmpq_mat_scalar_mul_fmpz", "rop"], [13, 1, 1, "c.fmpq_mat_scalar_mul_fmpz", "x"]], "fmpq_mat_set": [[13, 1, 1, "c.fmpq_mat_set", "dest"], [13, 1, 1, "c.fmpq_mat_set", "src"]], "fmpq_mat_set_fmpz_mat": [[13, 1, 1, "c.fmpq_mat_set_fmpz_mat", "dest"], [13, 1, 1, "c.fmpq_mat_set_fmpz_mat", "src"]], "fmpq_mat_set_fmpz_mat_div_fmpz": [[13, 1, 1, "c.fmpq_mat_set_fmpz_mat_div_fmpz", "den"], [13, 1, 1, "c.fmpq_mat_set_fmpz_mat_div_fmpz", "mat"], [13, 1, 1, "c.fmpq_mat_set_fmpz_mat_div_fmpz", "num"]], "fmpq_mat_set_fmpz_mat_mod_fmpz": [[13, 1, 1, "c.fmpq_mat_set_fmpz_mat_mod_fmpz", "X"], [13, 1, 1, "c.fmpq_mat_set_fmpz_mat_mod_fmpz", "Xmod"], [13, 1, 1, "c.fmpq_mat_set_fmpz_mat_mod_fmpz", "mod"]], "fmpq_mat_similarity": [[13, 1, 1, "c.fmpq_mat_similarity", "A"], [13, 1, 1, "c.fmpq_mat_similarity", "d"], [13, 1, 1, "c.fmpq_mat_similarity", "r"]], "fmpq_mat_solve": [[13, 1, 1, "c.fmpq_mat_solve", "A"], [13, 1, 1, "c.fmpq_mat_solve", "B"], [13, 1, 1, "c.fmpq_mat_solve", "X"]], "fmpq_mat_solve_dixon": [[13, 1, 1, "c.fmpq_mat_solve_dixon", "A"], [13, 1, 1, "c.fmpq_mat_solve_dixon", "B"], [13, 1, 1, "c.fmpq_mat_solve_dixon", "X"]], "fmpq_mat_solve_fmpz_mat": [[13, 1, 1, "c.fmpq_mat_solve_fmpz_mat", "A"], [13, 1, 1, "c.fmpq_mat_solve_fmpz_mat", "B"], [13, 1, 1, "c.fmpq_mat_solve_fmpz_mat", "X"]], "fmpq_mat_solve_fmpz_mat_dixon": [[13, 1, 1, "c.fmpq_mat_solve_fmpz_mat_dixon", "A"], [13, 1, 1, "c.fmpq_mat_solve_fmpz_mat_dixon", "B"], [13, 1, 1, "c.fmpq_mat_solve_fmpz_mat_dixon", "X"]], "fmpq_mat_solve_fmpz_mat_fraction_free": [[13, 1, 1, "c.fmpq_mat_solve_fmpz_mat_fraction_free", "A"], [13, 1, 1, "c.fmpq_mat_solve_fmpz_mat_fraction_free", "B"], [13, 1, 1, "c.fmpq_mat_solve_fmpz_mat_fraction_free", "X"]], "fmpq_mat_solve_fmpz_mat_multi_mod": [[13, 1, 1, "c.fmpq_mat_solve_fmpz_mat_multi_mod", "A"], [13, 1, 1, "c.fmpq_mat_solve_fmpz_mat_multi_mod", "B"], [13, 1, 1, "c.fmpq_mat_solve_fmpz_mat_multi_mod", "X"]], "fmpq_mat_solve_fraction_free": [[13, 1, 1, "c.fmpq_mat_solve_fraction_free", "A"], [13, 1, 1, "c.fmpq_mat_solve_fraction_free", "B"], [13, 1, 1, "c.fmpq_mat_solve_fraction_free", "X"]], "fmpq_mat_solve_multi_mod": [[13, 1, 1, "c.fmpq_mat_solve_multi_mod", "A"], [13, 1, 1, "c.fmpq_mat_solve_multi_mod", "B"], [13, 1, 1, "c.fmpq_mat_solve_multi_mod", "X"]], "fmpq_mat_sub": [[13, 1, 1, "c.fmpq_mat_sub", "mat"], [13, 1, 1, "c.fmpq_mat_sub", "mat1"], [13, 1, 1, "c.fmpq_mat_sub", "mat2"]], "fmpq_mat_swap": [[13, 1, 1, "c.fmpq_mat_swap", "mat1"], [13, 1, 1, "c.fmpq_mat_swap", "mat2"]], "fmpq_mat_swap_cols": [[13, 1, 1, "c.fmpq_mat_swap_cols", "mat"], [13, 1, 1, "c.fmpq_mat_swap_cols", "perm"], [13, 1, 1, "c.fmpq_mat_swap_cols", "r"], [13, 1, 1, "c.fmpq_mat_swap_cols", "s"]], "fmpq_mat_swap_entrywise": [[13, 1, 1, "c.fmpq_mat_swap_entrywise", "mat1"], [13, 1, 1, "c.fmpq_mat_swap_entrywise", "mat2"]], "fmpq_mat_swap_rows": [[13, 1, 1, "c.fmpq_mat_swap_rows", "mat"], [13, 1, 1, "c.fmpq_mat_swap_rows", "perm"], [13, 1, 1, "c.fmpq_mat_swap_rows", "r"], [13, 1, 1, "c.fmpq_mat_swap_rows", "s"]], "fmpq_mat_trace": [[13, 1, 1, "c.fmpq_mat_trace", "mat"], [13, 1, 1, "c.fmpq_mat_trace", "trace"]], "fmpq_mat_transpose": [[13, 1, 1, "c.fmpq_mat_transpose", "op"], [13, 1, 1, "c.fmpq_mat_transpose", "rop"]], "fmpq_mat_window_clear": [[13, 1, 1, "c.fmpq_mat_window_clear", "window"]], "fmpq_mat_window_init": [[13, 1, 1, "c.fmpq_mat_window_init", "c1"], [13, 1, 1, "c.fmpq_mat_window_init", "c2"], [13, 1, 1, "c.fmpq_mat_window_init", "mat"], [13, 1, 1, "c.fmpq_mat_window_init", "r1"], [13, 1, 1, "c.fmpq_mat_window_init", "r2"], [13, 1, 1, "c.fmpq_mat_window_init", "window"]], "fmpq_mat_zero": [[13, 1, 1, "c.fmpq_mat_zero", "mat"]], "fmpq_mod_fmpz": [[12, 1, 1, "c.fmpq_mod_fmpz", "mod"], [12, 1, 1, "c.fmpq_mod_fmpz", "res"], [12, 1, 1, "c.fmpq_mod_fmpz", "x"]], "fmpq_mpoly_add": [[14, 1, 1, "c.fmpq_mpoly_add", "A"], [14, 1, 1, "c.fmpq_mpoly_add", "B"], [14, 1, 1, "c.fmpq_mpoly_add", "C"], [14, 1, 1, "c.fmpq_mpoly_add", "ctx"]], "fmpq_mpoly_add_fmpq": [[14, 1, 1, "c.fmpq_mpoly_add_fmpq", "A"], [14, 1, 1, "c.fmpq_mpoly_add_fmpq", "B"], [14, 1, 1, "c.fmpq_mpoly_add_fmpq", "c"], [14, 1, 1, "c.fmpq_mpoly_add_fmpq", "ctx"]], "fmpq_mpoly_add_fmpz": [[14, 1, 1, "c.fmpq_mpoly_add_fmpz", "A"], [14, 1, 1, "c.fmpq_mpoly_add_fmpz", "B"], [14, 1, 1, "c.fmpq_mpoly_add_fmpz", "c"], [14, 1, 1, "c.fmpq_mpoly_add_fmpz", "ctx"]], "fmpq_mpoly_add_si": [[14, 1, 1, "c.fmpq_mpoly_add_si", "A"], [14, 1, 1, "c.fmpq_mpoly_add_si", "B"], [14, 1, 1, "c.fmpq_mpoly_add_si", "c"], [14, 1, 1, "c.fmpq_mpoly_add_si", "ctx"]], "fmpq_mpoly_add_ui": [[14, 1, 1, "c.fmpq_mpoly_add_ui", "A"], [14, 1, 1, "c.fmpq_mpoly_add_ui", "B"], [14, 1, 1, "c.fmpq_mpoly_add_ui", "c"], [14, 1, 1, "c.fmpq_mpoly_add_ui", "ctx"]], "fmpq_mpoly_clear": [[14, 1, 1, "c.fmpq_mpoly_clear", "A"], [14, 1, 1, "c.fmpq_mpoly_clear", "ctx"]], "fmpq_mpoly_cmp": [[14, 1, 1, "c.fmpq_mpoly_cmp", "A"], [14, 1, 1, "c.fmpq_mpoly_cmp", "B"], [14, 1, 1, "c.fmpq_mpoly_cmp", "ctx"]], "fmpq_mpoly_combine_like_terms": [[14, 1, 1, "c.fmpq_mpoly_combine_like_terms", "A"], [14, 1, 1, "c.fmpq_mpoly_combine_like_terms", "ctx"]], "fmpq_mpoly_compose_fmpq_mpoly": [[14, 1, 1, "c.fmpq_mpoly_compose_fmpq_mpoly", "A"], [14, 1, 1, "c.fmpq_mpoly_compose_fmpq_mpoly", "B"], [14, 1, 1, "c.fmpq_mpoly_compose_fmpq_mpoly", "C"], [14, 1, 1, "c.fmpq_mpoly_compose_fmpq_mpoly", "ctxAC"], [14, 1, 1, "c.fmpq_mpoly_compose_fmpq_mpoly", "ctxB"]], "fmpq_mpoly_compose_fmpq_mpoly_gen": [[14, 1, 1, "c.fmpq_mpoly_compose_fmpq_mpoly_gen", "A"], [14, 1, 1, "c.fmpq_mpoly_compose_fmpq_mpoly_gen", "B"], [14, 1, 1, "c.fmpq_mpoly_compose_fmpq_mpoly_gen", "c"], [14, 1, 1, "c.fmpq_mpoly_compose_fmpq_mpoly_gen", "ctxAC"], [14, 1, 1, "c.fmpq_mpoly_compose_fmpq_mpoly_gen", "ctxB"]], "fmpq_mpoly_compose_fmpq_poly": [[14, 1, 1, "c.fmpq_mpoly_compose_fmpq_poly", "A"], [14, 1, 1, "c.fmpq_mpoly_compose_fmpq_poly", "B"], [14, 1, 1, "c.fmpq_mpoly_compose_fmpq_poly", "C"], [14, 1, 1, "c.fmpq_mpoly_compose_fmpq_poly", "ctxB"]], "fmpq_mpoly_content": [[14, 1, 1, "c.fmpq_mpoly_content", "A"], [14, 1, 1, "c.fmpq_mpoly_content", "ctx"], [14, 1, 1, "c.fmpq_mpoly_content", "g"]], "fmpq_mpoly_content_ref": [[14, 1, 1, "c.fmpq_mpoly_content_ref", "A"], [14, 1, 1, "c.fmpq_mpoly_content_ref", "ctx"]], "fmpq_mpoly_content_vars": [[14, 1, 1, "c.fmpq_mpoly_content_vars", "A"], [14, 1, 1, "c.fmpq_mpoly_content_vars", "ctx"], [14, 1, 1, "c.fmpq_mpoly_content_vars", "g"], [14, 1, 1, "c.fmpq_mpoly_content_vars", "vars"], [14, 1, 1, "c.fmpq_mpoly_content_vars", "vars_length"]], "fmpq_mpoly_ctx_clear": [[14, 1, 1, "c.fmpq_mpoly_ctx_clear", "ctx"]], "fmpq_mpoly_ctx_init": [[14, 1, 1, "c.fmpq_mpoly_ctx_init", "ctx"], [14, 1, 1, "c.fmpq_mpoly_ctx_init", "nvars"], [14, 1, 1, "c.fmpq_mpoly_ctx_init", "ord"]], "fmpq_mpoly_ctx_nvars": [[14, 1, 1, "c.fmpq_mpoly_ctx_nvars", "ctx"]], "fmpq_mpoly_ctx_ord": [[14, 1, 1, "c.fmpq_mpoly_ctx_ord", "ctx"]], "fmpq_mpoly_degree_fmpz": [[14, 1, 1, "c.fmpq_mpoly_degree_fmpz", "A"], [14, 1, 1, "c.fmpq_mpoly_degree_fmpz", "ctx"], [14, 1, 1, "c.fmpq_mpoly_degree_fmpz", "deg"], [14, 1, 1, "c.fmpq_mpoly_degree_fmpz", "var"]], "fmpq_mpoly_degree_si": [[14, 1, 1, "c.fmpq_mpoly_degree_si", "A"], [14, 1, 1, "c.fmpq_mpoly_degree_si", "ctx"], [14, 1, 1, "c.fmpq_mpoly_degree_si", "var"]], "fmpq_mpoly_degrees_fit_si": [[14, 1, 1, "c.fmpq_mpoly_degrees_fit_si", "A"], [14, 1, 1, "c.fmpq_mpoly_degrees_fit_si", "ctx"]], "fmpq_mpoly_degrees_fmpz": [[14, 1, 1, "c.fmpq_mpoly_degrees_fmpz", "A"], [14, 1, 1, "c.fmpq_mpoly_degrees_fmpz", "ctx"], [14, 1, 1, "c.fmpq_mpoly_degrees_fmpz", "degs"]], "fmpq_mpoly_degrees_si": [[14, 1, 1, "c.fmpq_mpoly_degrees_si", "A"], [14, 1, 1, "c.fmpq_mpoly_degrees_si", "ctx"], [14, 1, 1, "c.fmpq_mpoly_degrees_si", "degs"]], "fmpq_mpoly_derivative": [[14, 1, 1, "c.fmpq_mpoly_derivative", "A"], [14, 1, 1, "c.fmpq_mpoly_derivative", "B"], [14, 1, 1, "c.fmpq_mpoly_derivative", "ctx"], [14, 1, 1, "c.fmpq_mpoly_derivative", "var"]], "fmpq_mpoly_discriminant": [[14, 1, 1, "c.fmpq_mpoly_discriminant", "A"], [14, 1, 1, "c.fmpq_mpoly_discriminant", "D"], [14, 1, 1, "c.fmpq_mpoly_discriminant", "ctx"], [14, 1, 1, "c.fmpq_mpoly_discriminant", "var"]], "fmpq_mpoly_div": [[14, 1, 1, "c.fmpq_mpoly_div", "A"], [14, 1, 1, "c.fmpq_mpoly_div", "B"], [14, 1, 1, "c.fmpq_mpoly_div", "Q"], [14, 1, 1, "c.fmpq_mpoly_div", "ctx"]], "fmpq_mpoly_divides": [[14, 1, 1, "c.fmpq_mpoly_divides", "A"], [14, 1, 1, "c.fmpq_mpoly_divides", "B"], [14, 1, 1, "c.fmpq_mpoly_divides", "Q"], [14, 1, 1, "c.fmpq_mpoly_divides", "ctx"]], "fmpq_mpoly_divrem": [[14, 1, 1, "c.fmpq_mpoly_divrem", "A"], [14, 1, 1, "c.fmpq_mpoly_divrem", "B"], [14, 1, 1, "c.fmpq_mpoly_divrem", "Q"], [14, 1, 1, "c.fmpq_mpoly_divrem", "R"], [14, 1, 1, "c.fmpq_mpoly_divrem", "ctx"]], "fmpq_mpoly_divrem_ideal": [[14, 1, 1, "c.fmpq_mpoly_divrem_ideal", "A"], [14, 1, 1, "c.fmpq_mpoly_divrem_ideal", "B"], [14, 1, 1, "c.fmpq_mpoly_divrem_ideal", "Q"], [14, 1, 1, "c.fmpq_mpoly_divrem_ideal", "R"], [14, 1, 1, "c.fmpq_mpoly_divrem_ideal", "ctx"], [14, 1, 1, "c.fmpq_mpoly_divrem_ideal", "len"]], "fmpq_mpoly_equal": [[14, 1, 1, "c.fmpq_mpoly_equal", "A"], [14, 1, 1, "c.fmpq_mpoly_equal", "B"], [14, 1, 1, "c.fmpq_mpoly_equal", "ctx"]], "fmpq_mpoly_equal_fmpq": [[14, 1, 1, "c.fmpq_mpoly_equal_fmpq", "A"], [14, 1, 1, "c.fmpq_mpoly_equal_fmpq", "c"], [14, 1, 1, "c.fmpq_mpoly_equal_fmpq", "ctx"]], "fmpq_mpoly_equal_fmpz": [[14, 1, 1, "c.fmpq_mpoly_equal_fmpz", "A"], [14, 1, 1, "c.fmpq_mpoly_equal_fmpz", "c"], [14, 1, 1, "c.fmpq_mpoly_equal_fmpz", "ctx"]], "fmpq_mpoly_equal_si": [[14, 1, 1, "c.fmpq_mpoly_equal_si", "A"], [14, 1, 1, "c.fmpq_mpoly_equal_si", "c"], [14, 1, 1, "c.fmpq_mpoly_equal_si", "ctx"]], "fmpq_mpoly_equal_ui": [[14, 1, 1, "c.fmpq_mpoly_equal_ui", "A"], [14, 1, 1, "c.fmpq_mpoly_equal_ui", "c"], [14, 1, 1, "c.fmpq_mpoly_equal_ui", "ctx"]], "fmpq_mpoly_evaluate_all_fmpq": [[14, 1, 1, "c.fmpq_mpoly_evaluate_all_fmpq", "A"], [14, 1, 1, "c.fmpq_mpoly_evaluate_all_fmpq", "ctx"], [14, 1, 1, "c.fmpq_mpoly_evaluate_all_fmpq", "ev"], [14, 1, 1, "c.fmpq_mpoly_evaluate_all_fmpq", "vals"]], "fmpq_mpoly_evaluate_one_fmpq": [[14, 1, 1, "c.fmpq_mpoly_evaluate_one_fmpq", "A"], [14, 1, 1, "c.fmpq_mpoly_evaluate_one_fmpq", "B"], [14, 1, 1, "c.fmpq_mpoly_evaluate_one_fmpq", "ctx"], [14, 1, 1, "c.fmpq_mpoly_evaluate_one_fmpq", "val"], [14, 1, 1, "c.fmpq_mpoly_evaluate_one_fmpq", "var"]], "fmpq_mpoly_factor": [[15, 1, 1, "c.fmpq_mpoly_factor", "A"], [15, 1, 1, "c.fmpq_mpoly_factor", "ctx"], [15, 1, 1, "c.fmpq_mpoly_factor", "f"]], "fmpq_mpoly_factor_clear": [[15, 1, 1, "c.fmpq_mpoly_factor_clear", "ctx"], [15, 1, 1, "c.fmpq_mpoly_factor_clear", "f"]], "fmpq_mpoly_factor_get_base": [[15, 1, 1, "c.fmpq_mpoly_factor_get_base", "B"], [15, 1, 1, "c.fmpq_mpoly_factor_get_base", "ctx"], [15, 1, 1, "c.fmpq_mpoly_factor_get_base", "f"], [15, 1, 1, "c.fmpq_mpoly_factor_get_base", "i"]], "fmpq_mpoly_factor_get_constant_fmpq": [[15, 1, 1, "c.fmpq_mpoly_factor_get_constant_fmpq", "c"], [15, 1, 1, "c.fmpq_mpoly_factor_get_constant_fmpq", "ctx"], [15, 1, 1, "c.fmpq_mpoly_factor_get_constant_fmpq", "f"]], "fmpq_mpoly_factor_get_exp_si": [[15, 1, 1, "c.fmpq_mpoly_factor_get_exp_si", "ctx"], [15, 1, 1, "c.fmpq_mpoly_factor_get_exp_si", "f"], [15, 1, 1, "c.fmpq_mpoly_factor_get_exp_si", "i"]], "fmpq_mpoly_factor_init": [[15, 1, 1, "c.fmpq_mpoly_factor_init", "ctx"], [15, 1, 1, "c.fmpq_mpoly_factor_init", "f"]], "fmpq_mpoly_factor_length": [[15, 1, 1, "c.fmpq_mpoly_factor_length", "ctx"], [15, 1, 1, "c.fmpq_mpoly_factor_length", "f"]], "fmpq_mpoly_factor_make_integral": [[15, 1, 1, "c.fmpq_mpoly_factor_make_integral", "ctx"], [15, 1, 1, "c.fmpq_mpoly_factor_make_integral", "f"]], "fmpq_mpoly_factor_make_monic": [[15, 1, 1, "c.fmpq_mpoly_factor_make_monic", "ctx"], [15, 1, 1, "c.fmpq_mpoly_factor_make_monic", "f"]], "fmpq_mpoly_factor_sort": [[15, 1, 1, "c.fmpq_mpoly_factor_sort", "ctx"], [15, 1, 1, "c.fmpq_mpoly_factor_sort", "f"]], "fmpq_mpoly_factor_squarefree": [[15, 1, 1, "c.fmpq_mpoly_factor_squarefree", "A"], [15, 1, 1, "c.fmpq_mpoly_factor_squarefree", "ctx"], [15, 1, 1, "c.fmpq_mpoly_factor_squarefree", "f"]], "fmpq_mpoly_factor_swap": [[15, 1, 1, "c.fmpq_mpoly_factor_swap", "ctx"], [15, 1, 1, "c.fmpq_mpoly_factor_swap", "f"], [15, 1, 1, "c.fmpq_mpoly_factor_swap", "g"]], "fmpq_mpoly_factor_swap_base": [[15, 1, 1, "c.fmpq_mpoly_factor_swap_base", "B"], [15, 1, 1, "c.fmpq_mpoly_factor_swap_base", "ctx"], [15, 1, 1, "c.fmpq_mpoly_factor_swap_base", "f"], [15, 1, 1, "c.fmpq_mpoly_factor_swap_base", "i"]], "fmpq_mpoly_fit_bits": [[14, 1, 1, "c.fmpq_mpoly_fit_bits", "A"], [14, 1, 1, "c.fmpq_mpoly_fit_bits", "bits"], [14, 1, 1, "c.fmpq_mpoly_fit_bits", "ctx"]], "fmpq_mpoly_fit_length": [[14, 1, 1, "c.fmpq_mpoly_fit_length", "A"], [14, 1, 1, "c.fmpq_mpoly_fit_length", "ctx"], [14, 1, 1, "c.fmpq_mpoly_fit_length", "len"]], "fmpq_mpoly_fprint_pretty": [[14, 1, 1, "c.fmpq_mpoly_fprint_pretty", "A"], [14, 1, 1, "c.fmpq_mpoly_fprint_pretty", "ctx"], [14, 1, 1, "c.fmpq_mpoly_fprint_pretty", "file"], [14, 1, 1, "c.fmpq_mpoly_fprint_pretty", "x"]], "fmpq_mpoly_from_univar": [[14, 1, 1, "c.fmpq_mpoly_from_univar", "A"], [14, 1, 1, "c.fmpq_mpoly_from_univar", "B"], [14, 1, 1, "c.fmpq_mpoly_from_univar", "ctx"], [14, 1, 1, "c.fmpq_mpoly_from_univar", "var"]], "fmpq_mpoly_gcd": [[14, 1, 1, "c.fmpq_mpoly_gcd", "A"], [14, 1, 1, "c.fmpq_mpoly_gcd", "B"], [14, 1, 1, "c.fmpq_mpoly_gcd", "G"], [14, 1, 1, "c.fmpq_mpoly_gcd", "ctx"]], "fmpq_mpoly_gcd_brown": [[14, 1, 1, "c.fmpq_mpoly_gcd_brown", "A"], [14, 1, 1, "c.fmpq_mpoly_gcd_brown", "B"], [14, 1, 1, "c.fmpq_mpoly_gcd_brown", "G"], [14, 1, 1, "c.fmpq_mpoly_gcd_brown", "ctx"]], "fmpq_mpoly_gcd_cofactors": [[14, 1, 1, "c.fmpq_mpoly_gcd_cofactors", "A"], [14, 1, 1, "c.fmpq_mpoly_gcd_cofactors", "Abar"], [14, 1, 1, "c.fmpq_mpoly_gcd_cofactors", "B"], [14, 1, 1, "c.fmpq_mpoly_gcd_cofactors", "Bbar"], [14, 1, 1, "c.fmpq_mpoly_gcd_cofactors", "G"], [14, 1, 1, "c.fmpq_mpoly_gcd_cofactors", "ctx"]], "fmpq_mpoly_gcd_hensel": [[14, 1, 1, "c.fmpq_mpoly_gcd_hensel", "A"], [14, 1, 1, "c.fmpq_mpoly_gcd_hensel", "B"], [14, 1, 1, "c.fmpq_mpoly_gcd_hensel", "G"], [14, 1, 1, "c.fmpq_mpoly_gcd_hensel", "ctx"]], "fmpq_mpoly_gcd_subresultant": [[14, 1, 1, "c.fmpq_mpoly_gcd_subresultant", "A"], [14, 1, 1, "c.fmpq_mpoly_gcd_subresultant", "B"], [14, 1, 1, "c.fmpq_mpoly_gcd_subresultant", "G"], [14, 1, 1, "c.fmpq_mpoly_gcd_subresultant", "ctx"]], "fmpq_mpoly_gcd_zippel": [[14, 1, 1, "c.fmpq_mpoly_gcd_zippel", "A"], [14, 1, 1, "c.fmpq_mpoly_gcd_zippel", "B"], [14, 1, 1, "c.fmpq_mpoly_gcd_zippel", "G"], [14, 1, 1, "c.fmpq_mpoly_gcd_zippel", "ctx"]], "fmpq_mpoly_gcd_zippel2": [[14, 1, 1, "c.fmpq_mpoly_gcd_zippel2", "A"], [14, 1, 1, "c.fmpq_mpoly_gcd_zippel2", "B"], [14, 1, 1, "c.fmpq_mpoly_gcd_zippel2", "G"], [14, 1, 1, "c.fmpq_mpoly_gcd_zippel2", "ctx"]], "fmpq_mpoly_gen": [[14, 1, 1, "c.fmpq_mpoly_gen", "A"], [14, 1, 1, "c.fmpq_mpoly_gen", "ctx"], [14, 1, 1, "c.fmpq_mpoly_gen", "var"]], "fmpq_mpoly_get_coeff_fmpq_fmpz": [[14, 1, 1, "c.fmpq_mpoly_get_coeff_fmpq_fmpz", "A"], [14, 1, 1, "c.fmpq_mpoly_get_coeff_fmpq_fmpz", "c"], [14, 1, 1, "c.fmpq_mpoly_get_coeff_fmpq_fmpz", "ctx"], [14, 1, 1, "c.fmpq_mpoly_get_coeff_fmpq_fmpz", "exp"]], "fmpq_mpoly_get_coeff_fmpq_monomial": [[14, 1, 1, "c.fmpq_mpoly_get_coeff_fmpq_monomial", "A"], [14, 1, 1, "c.fmpq_mpoly_get_coeff_fmpq_monomial", "M"], [14, 1, 1, "c.fmpq_mpoly_get_coeff_fmpq_monomial", "c"], [14, 1, 1, "c.fmpq_mpoly_get_coeff_fmpq_monomial", "ctx"]], "fmpq_mpoly_get_coeff_fmpq_ui": [[14, 1, 1, "c.fmpq_mpoly_get_coeff_fmpq_ui", "A"], [14, 1, 1, "c.fmpq_mpoly_get_coeff_fmpq_ui", "c"], [14, 1, 1, "c.fmpq_mpoly_get_coeff_fmpq_ui", "ctx"], [14, 1, 1, "c.fmpq_mpoly_get_coeff_fmpq_ui", "exp"]], "fmpq_mpoly_get_coeff_vars_ui": [[14, 1, 1, "c.fmpq_mpoly_get_coeff_vars_ui", "A"], [14, 1, 1, "c.fmpq_mpoly_get_coeff_vars_ui", "C"], [14, 1, 1, "c.fmpq_mpoly_get_coeff_vars_ui", "ctx"], [14, 1, 1, "c.fmpq_mpoly_get_coeff_vars_ui", "exps"], [14, 1, 1, "c.fmpq_mpoly_get_coeff_vars_ui", "length"], [14, 1, 1, "c.fmpq_mpoly_get_coeff_vars_ui", "vars"]], "fmpq_mpoly_get_denominator": [[14, 1, 1, "c.fmpq_mpoly_get_denominator", "A"], [14, 1, 1, "c.fmpq_mpoly_get_denominator", "ctx"], [14, 1, 1, "c.fmpq_mpoly_get_denominator", "d"]], "fmpq_mpoly_get_fmpq": [[14, 1, 1, "c.fmpq_mpoly_get_fmpq", "A"], [14, 1, 1, "c.fmpq_mpoly_get_fmpq", "c"], [14, 1, 1, "c.fmpq_mpoly_get_fmpq", "ctx"]], "fmpq_mpoly_get_str_pretty": [[14, 1, 1, "c.fmpq_mpoly_get_str_pretty", "A"], [14, 1, 1, "c.fmpq_mpoly_get_str_pretty", "ctx"], [14, 1, 1, "c.fmpq_mpoly_get_str_pretty", "x"]], "fmpq_mpoly_get_term": [[14, 1, 1, "c.fmpq_mpoly_get_term", "A"], [14, 1, 1, "c.fmpq_mpoly_get_term", "M"], [14, 1, 1, "c.fmpq_mpoly_get_term", "ctx"], [14, 1, 1, "c.fmpq_mpoly_get_term", "i"]], "fmpq_mpoly_get_term_coeff_fmpq": [[14, 1, 1, "c.fmpq_mpoly_get_term_coeff_fmpq", "A"], [14, 1, 1, "c.fmpq_mpoly_get_term_coeff_fmpq", "c"], [14, 1, 1, "c.fmpq_mpoly_get_term_coeff_fmpq", "ctx"], [14, 1, 1, "c.fmpq_mpoly_get_term_coeff_fmpq", "i"]], "fmpq_mpoly_get_term_exp_fmpz": [[14, 1, 1, "c.fmpq_mpoly_get_term_exp_fmpz", "A"], [14, 1, 1, "c.fmpq_mpoly_get_term_exp_fmpz", "ctx"], [14, 1, 1, "c.fmpq_mpoly_get_term_exp_fmpz", "exps"], [14, 1, 1, "c.fmpq_mpoly_get_term_exp_fmpz", "i"]], "fmpq_mpoly_get_term_exp_si": [[14, 1, 1, "c.fmpq_mpoly_get_term_exp_si", "A"], [14, 1, 1, "c.fmpq_mpoly_get_term_exp_si", "ctx"], [14, 1, 1, "c.fmpq_mpoly_get_term_exp_si", "exps"], [14, 1, 1, "c.fmpq_mpoly_get_term_exp_si", "i"]], "fmpq_mpoly_get_term_exp_ui": [[14, 1, 1, "c.fmpq_mpoly_get_term_exp_ui", "A"], [14, 1, 1, "c.fmpq_mpoly_get_term_exp_ui", "ctx"], [14, 1, 1, "c.fmpq_mpoly_get_term_exp_ui", "exps"], [14, 1, 1, "c.fmpq_mpoly_get_term_exp_ui", "i"]], "fmpq_mpoly_get_term_monomial": [[14, 1, 1, "c.fmpq_mpoly_get_term_monomial", "A"], [14, 1, 1, "c.fmpq_mpoly_get_term_monomial", "M"], [14, 1, 1, "c.fmpq_mpoly_get_term_monomial", "ctx"], [14, 1, 1, "c.fmpq_mpoly_get_term_monomial", "i"]], "fmpq_mpoly_get_term_var_exp_si": [[14, 1, 1, "c.fmpq_mpoly_get_term_var_exp_si", "A"], [14, 1, 1, "c.fmpq_mpoly_get_term_var_exp_si", "ctx"], [14, 1, 1, "c.fmpq_mpoly_get_term_var_exp_si", "i"], [14, 1, 1, "c.fmpq_mpoly_get_term_var_exp_si", "var"]], "fmpq_mpoly_get_term_var_exp_ui": [[14, 1, 1, "c.fmpq_mpoly_get_term_var_exp_ui", "A"], [14, 1, 1, "c.fmpq_mpoly_get_term_var_exp_ui", "ctx"], [14, 1, 1, "c.fmpq_mpoly_get_term_var_exp_ui", "i"], [14, 1, 1, "c.fmpq_mpoly_get_term_var_exp_ui", "var"]], "fmpq_mpoly_init": [[14, 1, 1, "c.fmpq_mpoly_init", "A"], [14, 1, 1, "c.fmpq_mpoly_init", "ctx"]], "fmpq_mpoly_init2": [[14, 1, 1, "c.fmpq_mpoly_init2", "A"], [14, 1, 1, "c.fmpq_mpoly_init2", "alloc"], [14, 1, 1, "c.fmpq_mpoly_init2", "ctx"]], "fmpq_mpoly_init3": [[14, 1, 1, "c.fmpq_mpoly_init3", "A"], [14, 1, 1, "c.fmpq_mpoly_init3", "alloc"], [14, 1, 1, "c.fmpq_mpoly_init3", "bits"], [14, 1, 1, "c.fmpq_mpoly_init3", "ctx"]], "fmpq_mpoly_integral": [[14, 1, 1, "c.fmpq_mpoly_integral", "A"], [14, 1, 1, "c.fmpq_mpoly_integral", "B"], [14, 1, 1, "c.fmpq_mpoly_integral", "ctx"], [14, 1, 1, "c.fmpq_mpoly_integral", "var"]], "fmpq_mpoly_is_canonical": [[14, 1, 1, "c.fmpq_mpoly_is_canonical", "A"], [14, 1, 1, "c.fmpq_mpoly_is_canonical", "ctx"]], "fmpq_mpoly_is_fmpq": [[14, 1, 1, "c.fmpq_mpoly_is_fmpq", "A"], [14, 1, 1, "c.fmpq_mpoly_is_fmpq", "ctx"]], "fmpq_mpoly_is_gen": [[14, 1, 1, "c.fmpq_mpoly_is_gen", "A"], [14, 1, 1, "c.fmpq_mpoly_is_gen", "ctx"], [14, 1, 1, "c.fmpq_mpoly_is_gen", "var"]], "fmpq_mpoly_is_one": [[14, 1, 1, "c.fmpq_mpoly_is_one", "A"], [14, 1, 1, "c.fmpq_mpoly_is_one", "ctx"]], "fmpq_mpoly_is_square": [[14, 1, 1, "c.fmpq_mpoly_is_square", "A"], [14, 1, 1, "c.fmpq_mpoly_is_square", "ctx"]], "fmpq_mpoly_is_zero": [[14, 1, 1, "c.fmpq_mpoly_is_zero", "A"], [14, 1, 1, "c.fmpq_mpoly_is_zero", "ctx"]], "fmpq_mpoly_length": [[14, 1, 1, "c.fmpq_mpoly_length", "A"], [14, 1, 1, "c.fmpq_mpoly_length", "ctx"]], "fmpq_mpoly_make_monic": [[14, 1, 1, "c.fmpq_mpoly_make_monic", "A"], [14, 1, 1, "c.fmpq_mpoly_make_monic", "B"], [14, 1, 1, "c.fmpq_mpoly_make_monic", "ctx"]], "fmpq_mpoly_mul": [[14, 1, 1, "c.fmpq_mpoly_mul", "A"], [14, 1, 1, "c.fmpq_mpoly_mul", "B"], [14, 1, 1, "c.fmpq_mpoly_mul", "C"], [14, 1, 1, "c.fmpq_mpoly_mul", "ctx"]], "fmpq_mpoly_neg": [[14, 1, 1, "c.fmpq_mpoly_neg", "A"], [14, 1, 1, "c.fmpq_mpoly_neg", "B"], [14, 1, 1, "c.fmpq_mpoly_neg", "ctx"]], "fmpq_mpoly_one": [[14, 1, 1, "c.fmpq_mpoly_one", "A"], [14, 1, 1, "c.fmpq_mpoly_one", "ctx"]], "fmpq_mpoly_pow_fmpz": [[14, 1, 1, "c.fmpq_mpoly_pow_fmpz", "A"], [14, 1, 1, "c.fmpq_mpoly_pow_fmpz", "B"], [14, 1, 1, "c.fmpq_mpoly_pow_fmpz", "ctx"], [14, 1, 1, "c.fmpq_mpoly_pow_fmpz", "k"]], "fmpq_mpoly_pow_ui": [[14, 1, 1, "c.fmpq_mpoly_pow_ui", "A"], [14, 1, 1, "c.fmpq_mpoly_pow_ui", "B"], [14, 1, 1, "c.fmpq_mpoly_pow_ui", "ctx"], [14, 1, 1, "c.fmpq_mpoly_pow_ui", "k"]], "fmpq_mpoly_print_pretty": [[14, 1, 1, "c.fmpq_mpoly_print_pretty", "A"], [14, 1, 1, "c.fmpq_mpoly_print_pretty", "ctx"], [14, 1, 1, "c.fmpq_mpoly_print_pretty", "x"]], "fmpq_mpoly_push_term_fmpq_fmpz": [[14, 1, 1, "c.fmpq_mpoly_push_term_fmpq_fmpz", "A"], [14, 1, 1, "c.fmpq_mpoly_push_term_fmpq_fmpz", "c"], [14, 1, 1, "c.fmpq_mpoly_push_term_fmpq_fmpz", "ctx"], [14, 1, 1, "c.fmpq_mpoly_push_term_fmpq_fmpz", "exp"]], "fmpq_mpoly_push_term_fmpq_ui": [[14, 1, 1, "c.fmpq_mpoly_push_term_fmpq_ui", "A"], [14, 1, 1, "c.fmpq_mpoly_push_term_fmpq_ui", "c"], [14, 1, 1, "c.fmpq_mpoly_push_term_fmpq_ui", "ctx"], [14, 1, 1, "c.fmpq_mpoly_push_term_fmpq_ui", "exp"]], "fmpq_mpoly_push_term_fmpz_fmpz": [[14, 1, 1, "c.fmpq_mpoly_push_term_fmpz_fmpz", "A"], [14, 1, 1, "c.fmpq_mpoly_push_term_fmpz_fmpz", "c"], [14, 1, 1, "c.fmpq_mpoly_push_term_fmpz_fmpz", "ctx"], [14, 1, 1, "c.fmpq_mpoly_push_term_fmpz_fmpz", "exp"]], "fmpq_mpoly_push_term_fmpz_ui": [[14, 1, 1, "c.fmpq_mpoly_push_term_fmpz_ui", "A"], [14, 1, 1, "c.fmpq_mpoly_push_term_fmpz_ui", "c"], [14, 1, 1, "c.fmpq_mpoly_push_term_fmpz_ui", "ctx"], [14, 1, 1, "c.fmpq_mpoly_push_term_fmpz_ui", "exp"]], "fmpq_mpoly_push_term_si_fmpz": [[14, 1, 1, "c.fmpq_mpoly_push_term_si_fmpz", "A"], [14, 1, 1, "c.fmpq_mpoly_push_term_si_fmpz", "c"], [14, 1, 1, "c.fmpq_mpoly_push_term_si_fmpz", "ctx"], [14, 1, 1, "c.fmpq_mpoly_push_term_si_fmpz", "exp"]], "fmpq_mpoly_push_term_si_ui": [[14, 1, 1, "c.fmpq_mpoly_push_term_si_ui", "A"], [14, 1, 1, "c.fmpq_mpoly_push_term_si_ui", "c"], [14, 1, 1, "c.fmpq_mpoly_push_term_si_ui", "ctx"], [14, 1, 1, "c.fmpq_mpoly_push_term_si_ui", "exp"]], "fmpq_mpoly_push_term_ui_fmpz": [[14, 1, 1, "c.fmpq_mpoly_push_term_ui_fmpz", "A"], [14, 1, 1, "c.fmpq_mpoly_push_term_ui_fmpz", "c"], [14, 1, 1, "c.fmpq_mpoly_push_term_ui_fmpz", "ctx"], [14, 1, 1, "c.fmpq_mpoly_push_term_ui_fmpz", "exp"]], "fmpq_mpoly_push_term_ui_ui": [[14, 1, 1, "c.fmpq_mpoly_push_term_ui_ui", "A"], [14, 1, 1, "c.fmpq_mpoly_push_term_ui_ui", "c"], [14, 1, 1, "c.fmpq_mpoly_push_term_ui_ui", "ctx"], [14, 1, 1, "c.fmpq_mpoly_push_term_ui_ui", "exp"]], "fmpq_mpoly_randtest_bits": [[14, 1, 1, "c.fmpq_mpoly_randtest_bits", "A"], [14, 1, 1, "c.fmpq_mpoly_randtest_bits", "coeff_bits"], [14, 1, 1, "c.fmpq_mpoly_randtest_bits", "ctx"], [14, 1, 1, "c.fmpq_mpoly_randtest_bits", "exp_bits"], [14, 1, 1, "c.fmpq_mpoly_randtest_bits", "length"], [14, 1, 1, "c.fmpq_mpoly_randtest_bits", "state"]], "fmpq_mpoly_randtest_bound": [[14, 1, 1, "c.fmpq_mpoly_randtest_bound", "A"], [14, 1, 1, "c.fmpq_mpoly_randtest_bound", "coeff_bits"], [14, 1, 1, "c.fmpq_mpoly_randtest_bound", "ctx"], [14, 1, 1, "c.fmpq_mpoly_randtest_bound", "exp_bound"], [14, 1, 1, "c.fmpq_mpoly_randtest_bound", "length"], [14, 1, 1, "c.fmpq_mpoly_randtest_bound", "state"]], "fmpq_mpoly_randtest_bounds": [[14, 1, 1, "c.fmpq_mpoly_randtest_bounds", "A"], [14, 1, 1, "c.fmpq_mpoly_randtest_bounds", "coeff_bits"], [14, 1, 1, "c.fmpq_mpoly_randtest_bounds", "ctx"], [14, 1, 1, "c.fmpq_mpoly_randtest_bounds", "exp_bounds"], [14, 1, 1, "c.fmpq_mpoly_randtest_bounds", "length"], [14, 1, 1, "c.fmpq_mpoly_randtest_bounds", "state"]], "fmpq_mpoly_realloc": [[14, 1, 1, "c.fmpq_mpoly_realloc", "A"], [14, 1, 1, "c.fmpq_mpoly_realloc", "alloc"], [14, 1, 1, "c.fmpq_mpoly_realloc", "ctx"]], "fmpq_mpoly_reduce": [[14, 1, 1, "c.fmpq_mpoly_reduce", "A"], [14, 1, 1, "c.fmpq_mpoly_reduce", "ctx"]], "fmpq_mpoly_resize": [[14, 1, 1, "c.fmpq_mpoly_resize", "A"], [14, 1, 1, "c.fmpq_mpoly_resize", "ctx"], [14, 1, 1, "c.fmpq_mpoly_resize", "new_length"]], "fmpq_mpoly_resultant": [[14, 1, 1, "c.fmpq_mpoly_resultant", "A"], [14, 1, 1, "c.fmpq_mpoly_resultant", "B"], [14, 1, 1, "c.fmpq_mpoly_resultant", "R"], [14, 1, 1, "c.fmpq_mpoly_resultant", "ctx"], [14, 1, 1, "c.fmpq_mpoly_resultant", "var"]], "fmpq_mpoly_reverse": [[14, 1, 1, "c.fmpq_mpoly_reverse", "A"], [14, 1, 1, "c.fmpq_mpoly_reverse", "B"], [14, 1, 1, "c.fmpq_mpoly_reverse", "ctx"]], "fmpq_mpoly_scalar_div_fmpq": [[14, 1, 1, "c.fmpq_mpoly_scalar_div_fmpq", "A"], [14, 1, 1, "c.fmpq_mpoly_scalar_div_fmpq", "B"], [14, 1, 1, "c.fmpq_mpoly_scalar_div_fmpq", "c"], [14, 1, 1, "c.fmpq_mpoly_scalar_div_fmpq", "ctx"]], "fmpq_mpoly_scalar_div_fmpz": [[14, 1, 1, "c.fmpq_mpoly_scalar_div_fmpz", "A"], [14, 1, 1, "c.fmpq_mpoly_scalar_div_fmpz", "B"], [14, 1, 1, "c.fmpq_mpoly_scalar_div_fmpz", "c"], [14, 1, 1, "c.fmpq_mpoly_scalar_div_fmpz", "ctx"]], "fmpq_mpoly_scalar_div_si": [[14, 1, 1, "c.fmpq_mpoly_scalar_div_si", "A"], [14, 1, 1, "c.fmpq_mpoly_scalar_div_si", "B"], [14, 1, 1, "c.fmpq_mpoly_scalar_div_si", "c"], [14, 1, 1, "c.fmpq_mpoly_scalar_div_si", "ctx"]], "fmpq_mpoly_scalar_div_ui": [[14, 1, 1, "c.fmpq_mpoly_scalar_div_ui", "A"], [14, 1, 1, "c.fmpq_mpoly_scalar_div_ui", "B"], [14, 1, 1, "c.fmpq_mpoly_scalar_div_ui", "c"], [14, 1, 1, "c.fmpq_mpoly_scalar_div_ui", "ctx"]], "fmpq_mpoly_scalar_mul_fmpq": [[14, 1, 1, "c.fmpq_mpoly_scalar_mul_fmpq", "A"], [14, 1, 1, "c.fmpq_mpoly_scalar_mul_fmpq", "B"], [14, 1, 1, "c.fmpq_mpoly_scalar_mul_fmpq", "c"], [14, 1, 1, "c.fmpq_mpoly_scalar_mul_fmpq", "ctx"]], "fmpq_mpoly_scalar_mul_fmpz": [[14, 1, 1, "c.fmpq_mpoly_scalar_mul_fmpz", "A"], [14, 1, 1, "c.fmpq_mpoly_scalar_mul_fmpz", "B"], [14, 1, 1, "c.fmpq_mpoly_scalar_mul_fmpz", "c"], [14, 1, 1, "c.fmpq_mpoly_scalar_mul_fmpz", "ctx"]], "fmpq_mpoly_scalar_mul_si": [[14, 1, 1, "c.fmpq_mpoly_scalar_mul_si", "A"], [14, 1, 1, "c.fmpq_mpoly_scalar_mul_si", "B"], [14, 1, 1, "c.fmpq_mpoly_scalar_mul_si", "c"], [14, 1, 1, "c.fmpq_mpoly_scalar_mul_si", "ctx"]], "fmpq_mpoly_scalar_mul_ui": [[14, 1, 1, "c.fmpq_mpoly_scalar_mul_ui", "A"], [14, 1, 1, "c.fmpq_mpoly_scalar_mul_ui", "B"], [14, 1, 1, "c.fmpq_mpoly_scalar_mul_ui", "c"], [14, 1, 1, "c.fmpq_mpoly_scalar_mul_ui", "ctx"]], "fmpq_mpoly_set": [[14, 1, 1, "c.fmpq_mpoly_set", "A"], [14, 1, 1, "c.fmpq_mpoly_set", "B"], [14, 1, 1, "c.fmpq_mpoly_set", "ctx"]], "fmpq_mpoly_set_coeff_fmpq_fmpz": [[14, 1, 1, "c.fmpq_mpoly_set_coeff_fmpq_fmpz", "A"], [14, 1, 1, "c.fmpq_mpoly_set_coeff_fmpq_fmpz", "c"], [14, 1, 1, "c.fmpq_mpoly_set_coeff_fmpq_fmpz", "ctx"], [14, 1, 1, "c.fmpq_mpoly_set_coeff_fmpq_fmpz", "exp"]], "fmpq_mpoly_set_coeff_fmpq_monomial": [[14, 1, 1, "c.fmpq_mpoly_set_coeff_fmpq_monomial", "A"], [14, 1, 1, "c.fmpq_mpoly_set_coeff_fmpq_monomial", "M"], [14, 1, 1, "c.fmpq_mpoly_set_coeff_fmpq_monomial", "c"], [14, 1, 1, "c.fmpq_mpoly_set_coeff_fmpq_monomial", "ctx"]], "fmpq_mpoly_set_coeff_fmpq_ui": [[14, 1, 1, "c.fmpq_mpoly_set_coeff_fmpq_ui", "A"], [14, 1, 1, "c.fmpq_mpoly_set_coeff_fmpq_ui", "c"], [14, 1, 1, "c.fmpq_mpoly_set_coeff_fmpq_ui", "ctx"], [14, 1, 1, "c.fmpq_mpoly_set_coeff_fmpq_ui", "exp"]], "fmpq_mpoly_set_fmpq": [[14, 1, 1, "c.fmpq_mpoly_set_fmpq", "A"], [14, 1, 1, "c.fmpq_mpoly_set_fmpq", "c"], [14, 1, 1, "c.fmpq_mpoly_set_fmpq", "ctx"]], "fmpq_mpoly_set_fmpz": [[14, 1, 1, "c.fmpq_mpoly_set_fmpz", "A"], [14, 1, 1, "c.fmpq_mpoly_set_fmpz", "c"], [14, 1, 1, "c.fmpq_mpoly_set_fmpz", "ctx"]], "fmpq_mpoly_set_si": [[14, 1, 1, "c.fmpq_mpoly_set_si", "A"], [14, 1, 1, "c.fmpq_mpoly_set_si", "c"], [14, 1, 1, "c.fmpq_mpoly_set_si", "ctx"]], "fmpq_mpoly_set_str_pretty": [[14, 1, 1, "c.fmpq_mpoly_set_str_pretty", "A"], [14, 1, 1, "c.fmpq_mpoly_set_str_pretty", "ctx"], [14, 1, 1, "c.fmpq_mpoly_set_str_pretty", "str"], [14, 1, 1, "c.fmpq_mpoly_set_str_pretty", "x"]], "fmpq_mpoly_set_term_coeff_fmpq": [[14, 1, 1, "c.fmpq_mpoly_set_term_coeff_fmpq", "A"], [14, 1, 1, "c.fmpq_mpoly_set_term_coeff_fmpq", "c"], [14, 1, 1, "c.fmpq_mpoly_set_term_coeff_fmpq", "ctx"], [14, 1, 1, "c.fmpq_mpoly_set_term_coeff_fmpq", "i"]], "fmpq_mpoly_set_term_exp_fmpz": [[14, 1, 1, "c.fmpq_mpoly_set_term_exp_fmpz", "A"], [14, 1, 1, "c.fmpq_mpoly_set_term_exp_fmpz", "ctx"], [14, 1, 1, "c.fmpq_mpoly_set_term_exp_fmpz", "exps"], [14, 1, 1, "c.fmpq_mpoly_set_term_exp_fmpz", "i"]], "fmpq_mpoly_set_term_exp_ui": [[14, 1, 1, "c.fmpq_mpoly_set_term_exp_ui", "A"], [14, 1, 1, "c.fmpq_mpoly_set_term_exp_ui", "ctx"], [14, 1, 1, "c.fmpq_mpoly_set_term_exp_ui", "exps"], [14, 1, 1, "c.fmpq_mpoly_set_term_exp_ui", "i"]], "fmpq_mpoly_set_ui": [[14, 1, 1, "c.fmpq_mpoly_set_ui", "A"], [14, 1, 1, "c.fmpq_mpoly_set_ui", "c"], [14, 1, 1, "c.fmpq_mpoly_set_ui", "ctx"]], "fmpq_mpoly_sort_terms": [[14, 1, 1, "c.fmpq_mpoly_sort_terms", "A"], [14, 1, 1, "c.fmpq_mpoly_sort_terms", "ctx"]], "fmpq_mpoly_sqrt": [[14, 1, 1, "c.fmpq_mpoly_sqrt", "A"], [14, 1, 1, "c.fmpq_mpoly_sqrt", "Q"], [14, 1, 1, "c.fmpq_mpoly_sqrt", "ctx"]], "fmpq_mpoly_sub": [[14, 1, 1, "c.fmpq_mpoly_sub", "A"], [14, 1, 1, "c.fmpq_mpoly_sub", "B"], [14, 1, 1, "c.fmpq_mpoly_sub", "C"], [14, 1, 1, "c.fmpq_mpoly_sub", "ctx"]], "fmpq_mpoly_sub_fmpq": [[14, 1, 1, "c.fmpq_mpoly_sub_fmpq", "A"], [14, 1, 1, "c.fmpq_mpoly_sub_fmpq", "B"], [14, 1, 1, "c.fmpq_mpoly_sub_fmpq", "c"], [14, 1, 1, "c.fmpq_mpoly_sub_fmpq", "ctx"]], "fmpq_mpoly_sub_fmpz": [[14, 1, 1, "c.fmpq_mpoly_sub_fmpz", "A"], [14, 1, 1, "c.fmpq_mpoly_sub_fmpz", "B"], [14, 1, 1, "c.fmpq_mpoly_sub_fmpz", "c"], [14, 1, 1, "c.fmpq_mpoly_sub_fmpz", "ctx"]], "fmpq_mpoly_sub_si": [[14, 1, 1, "c.fmpq_mpoly_sub_si", "A"], [14, 1, 1, "c.fmpq_mpoly_sub_si", "B"], [14, 1, 1, "c.fmpq_mpoly_sub_si", "c"], [14, 1, 1, "c.fmpq_mpoly_sub_si", "ctx"]], "fmpq_mpoly_sub_ui": [[14, 1, 1, "c.fmpq_mpoly_sub_ui", "A"], [14, 1, 1, "c.fmpq_mpoly_sub_ui", "B"], [14, 1, 1, "c.fmpq_mpoly_sub_ui", "c"], [14, 1, 1, "c.fmpq_mpoly_sub_ui", "ctx"]], "fmpq_mpoly_swap": [[14, 1, 1, "c.fmpq_mpoly_swap", "A"], [14, 1, 1, "c.fmpq_mpoly_swap", "B"], [14, 1, 1, "c.fmpq_mpoly_swap", "ctx"]], "fmpq_mpoly_term_content": [[14, 1, 1, "c.fmpq_mpoly_term_content", "A"], [14, 1, 1, "c.fmpq_mpoly_term_content", "M"], [14, 1, 1, "c.fmpq_mpoly_term_content", "ctx"]], "fmpq_mpoly_term_exp_fits_si": [[14, 1, 1, "c.fmpq_mpoly_term_exp_fits_si", "A"], [14, 1, 1, "c.fmpq_mpoly_term_exp_fits_si", "ctx"], [14, 1, 1, "c.fmpq_mpoly_term_exp_fits_si", "i"]], "fmpq_mpoly_term_exp_fits_ui": [[14, 1, 1, "c.fmpq_mpoly_term_exp_fits_ui", "A"], [14, 1, 1, "c.fmpq_mpoly_term_exp_fits_ui", "ctx"], [14, 1, 1, "c.fmpq_mpoly_term_exp_fits_ui", "i"]], "fmpq_mpoly_to_univar": [[14, 1, 1, "c.fmpq_mpoly_to_univar", "A"], [14, 1, 1, "c.fmpq_mpoly_to_univar", "B"], [14, 1, 1, "c.fmpq_mpoly_to_univar", "ctx"], [14, 1, 1, "c.fmpq_mpoly_to_univar", "var"]], "fmpq_mpoly_total_degree_fits_si": [[14, 1, 1, "c.fmpq_mpoly_total_degree_fits_si", "A"], [14, 1, 1, "c.fmpq_mpoly_total_degree_fits_si", "ctx"]], "fmpq_mpoly_total_degree_fmpz": [[14, 1, 1, "c.fmpq_mpoly_total_degree_fmpz", "A"], [14, 1, 1, "c.fmpq_mpoly_total_degree_fmpz", "ctx"], [14, 1, 1, "c.fmpq_mpoly_total_degree_fmpz", "tdeg"]], "fmpq_mpoly_total_degree_si": [[14, 1, 1, "c.fmpq_mpoly_total_degree_si", "A"], [14, 1, 1, "c.fmpq_mpoly_total_degree_si", "ctx"]], "fmpq_mpoly_univar_clear": [[14, 1, 1, "c.fmpq_mpoly_univar_clear", "A"], [14, 1, 1, "c.fmpq_mpoly_univar_clear", "ctx"]], "fmpq_mpoly_univar_degree_fits_si": [[14, 1, 1, "c.fmpq_mpoly_univar_degree_fits_si", "A"], [14, 1, 1, "c.fmpq_mpoly_univar_degree_fits_si", "ctx"]], "fmpq_mpoly_univar_get_term_coeff": [[14, 1, 1, "c.fmpq_mpoly_univar_get_term_coeff", "A"], [14, 1, 1, "c.fmpq_mpoly_univar_get_term_coeff", "c"], [14, 1, 1, "c.fmpq_mpoly_univar_get_term_coeff", "ctx"], [14, 1, 1, "c.fmpq_mpoly_univar_get_term_coeff", "i"]], "fmpq_mpoly_univar_get_term_exp_si": [[14, 1, 1, "c.fmpq_mpoly_univar_get_term_exp_si", "A"], [14, 1, 1, "c.fmpq_mpoly_univar_get_term_exp_si", "ctx"], [14, 1, 1, "c.fmpq_mpoly_univar_get_term_exp_si", "i"]], "fmpq_mpoly_univar_init": [[14, 1, 1, "c.fmpq_mpoly_univar_init", "A"], [14, 1, 1, "c.fmpq_mpoly_univar_init", "ctx"]], "fmpq_mpoly_univar_length": [[14, 1, 1, "c.fmpq_mpoly_univar_length", "A"], [14, 1, 1, "c.fmpq_mpoly_univar_length", "ctx"]], "fmpq_mpoly_univar_swap": [[14, 1, 1, "c.fmpq_mpoly_univar_swap", "A"], [14, 1, 1, "c.fmpq_mpoly_univar_swap", "B"], [14, 1, 1, "c.fmpq_mpoly_univar_swap", "ctx"]], "fmpq_mpoly_univar_swap_term_coeff": [[14, 1, 1, "c.fmpq_mpoly_univar_swap_term_coeff", "A"], [14, 1, 1, "c.fmpq_mpoly_univar_swap_term_coeff", "c"], [14, 1, 1, "c.fmpq_mpoly_univar_swap_term_coeff", "ctx"], [14, 1, 1, "c.fmpq_mpoly_univar_swap_term_coeff", "i"]], "fmpq_mpoly_used_vars": [[14, 1, 1, "c.fmpq_mpoly_used_vars", "A"], [14, 1, 1, "c.fmpq_mpoly_used_vars", "ctx"], [14, 1, 1, "c.fmpq_mpoly_used_vars", "used"]], "fmpq_mpoly_zero": [[14, 1, 1, "c.fmpq_mpoly_zero", "A"], [14, 1, 1, "c.fmpq_mpoly_zero", "ctx"]], "fmpq_mpoly_zpoly_ref": [[14, 1, 1, "c.fmpq_mpoly_zpoly_ref", "A"], [14, 1, 1, "c.fmpq_mpoly_zpoly_ref", "ctx"]], "fmpq_mpoly_zpoly_term_coeff_ref": [[14, 1, 1, "c.fmpq_mpoly_zpoly_term_coeff_ref", "A"], [14, 1, 1, "c.fmpq_mpoly_zpoly_term_coeff_ref", "ctx"], [14, 1, 1, "c.fmpq_mpoly_zpoly_term_coeff_ref", "i"]], "fmpq_mul": [[12, 1, 1, "c.fmpq_mul", "op1"], [12, 1, 1, "c.fmpq_mul", "op2"], [12, 1, 1, "c.fmpq_mul", "res"]], "fmpq_mul_2exp": [[12, 1, 1, "c.fmpq_mul_2exp", "exp"], [12, 1, 1, "c.fmpq_mul_2exp", "res"], [12, 1, 1, "c.fmpq_mul_2exp", "x"]], "fmpq_mul_fmpz": [[12, 1, 1, "c.fmpq_mul_fmpz", "op"], [12, 1, 1, "c.fmpq_mul_fmpz", "res"], [12, 1, 1, "c.fmpq_mul_fmpz", "x"]], "fmpq_mul_si": [[12, 1, 1, "c.fmpq_mul_si", "c"], [12, 1, 1, "c.fmpq_mul_si", "op1"], [12, 1, 1, "c.fmpq_mul_si", "res"]], "fmpq_mul_ui": [[12, 1, 1, "c.fmpq_mul_ui", "c"], [12, 1, 1, "c.fmpq_mul_ui", "op1"], [12, 1, 1, "c.fmpq_mul_ui", "res"]], "fmpq_neg": [[12, 1, 1, "c.fmpq_neg", "dest"], [12, 1, 1, "c.fmpq_neg", "src"]], "fmpq_next_calkin_wilf": [[12, 1, 1, "c.fmpq_next_calkin_wilf", "res"], [12, 1, 1, "c.fmpq_next_calkin_wilf", "x"]], "fmpq_next_minimal": [[12, 1, 1, "c.fmpq_next_minimal", "res"], [12, 1, 1, "c.fmpq_next_minimal", "x"]], "fmpq_next_signed_calkin_wilf": [[12, 1, 1, "c.fmpq_next_signed_calkin_wilf", "res"], [12, 1, 1, "c.fmpq_next_signed_calkin_wilf", "x"]], "fmpq_next_signed_minimal": [[12, 1, 1, "c.fmpq_next_signed_minimal", "res"], [12, 1, 1, "c.fmpq_next_signed_minimal", "x"]], "fmpq_one": [[12, 1, 1, "c.fmpq_one", "res"]], "fmpq_poly_add": [[16, 1, 1, "c.fmpq_poly_add", "poly1"], [16, 1, 1, "c.fmpq_poly_add", "poly2"], [16, 1, 1, "c.fmpq_poly_add", "res"]], "fmpq_poly_add_can": [[16, 1, 1, "c.fmpq_poly_add_can", "can"], [16, 1, 1, "c.fmpq_poly_add_can", "poly1"], [16, 1, 1, "c.fmpq_poly_add_can", "poly2"], [16, 1, 1, "c.fmpq_poly_add_can", "res"]], "fmpq_poly_add_series": [[16, 1, 1, "c.fmpq_poly_add_series", "n"], [16, 1, 1, "c.fmpq_poly_add_series", "poly1"], [16, 1, 1, "c.fmpq_poly_add_series", "poly2"], [16, 1, 1, "c.fmpq_poly_add_series", "res"]], "fmpq_poly_add_series_can": [[16, 1, 1, "c.fmpq_poly_add_series_can", "can"], [16, 1, 1, "c.fmpq_poly_add_series_can", "n"], [16, 1, 1, "c.fmpq_poly_add_series_can", "poly1"], [16, 1, 1, "c.fmpq_poly_add_series_can", "poly2"], [16, 1, 1, "c.fmpq_poly_add_series_can", "res"]], "fmpq_poly_addmul": [[16, 1, 1, "c.fmpq_poly_addmul", "op1"], [16, 1, 1, "c.fmpq_poly_addmul", "op2"], [16, 1, 1, "c.fmpq_poly_addmul", "rop"]], "fmpq_poly_asin_series": [[16, 1, 1, "c.fmpq_poly_asin_series", "f"], [16, 1, 1, "c.fmpq_poly_asin_series", "n"], [16, 1, 1, "c.fmpq_poly_asin_series", "res"]], "fmpq_poly_asinh_series": [[16, 1, 1, "c.fmpq_poly_asinh_series", "f"], [16, 1, 1, "c.fmpq_poly_asinh_series", "n"], [16, 1, 1, "c.fmpq_poly_asinh_series", "res"]], "fmpq_poly_atan_series": [[16, 1, 1, "c.fmpq_poly_atan_series", "f"], [16, 1, 1, "c.fmpq_poly_atan_series", "n"], [16, 1, 1, "c.fmpq_poly_atan_series", "res"]], "fmpq_poly_atanh_series": [[16, 1, 1, "c.fmpq_poly_atanh_series", "f"], [16, 1, 1, "c.fmpq_poly_atanh_series", "n"], [16, 1, 1, "c.fmpq_poly_atanh_series", "res"]], "fmpq_poly_canonicalise": [[16, 1, 1, "c.fmpq_poly_canonicalise", "poly"]], "fmpq_poly_clear": [[16, 1, 1, "c.fmpq_poly_clear", "poly"]], "fmpq_poly_cmp": [[16, 1, 1, "c.fmpq_poly_cmp", "left"], [16, 1, 1, "c.fmpq_poly_cmp", "right"]], "fmpq_poly_compose": [[16, 1, 1, "c.fmpq_poly_compose", "poly1"], [16, 1, 1, "c.fmpq_poly_compose", "poly2"], [16, 1, 1, "c.fmpq_poly_compose", "res"]], "fmpq_poly_compose_series": [[16, 1, 1, "c.fmpq_poly_compose_series", "n"], [16, 1, 1, "c.fmpq_poly_compose_series", "poly1"], [16, 1, 1, "c.fmpq_poly_compose_series", "poly2"], [16, 1, 1, "c.fmpq_poly_compose_series", "res"]], "fmpq_poly_compose_series_brent_kung": [[16, 1, 1, "c.fmpq_poly_compose_series_brent_kung", "n"], [16, 1, 1, "c.fmpq_poly_compose_series_brent_kung", "poly1"], [16, 1, 1, "c.fmpq_poly_compose_series_brent_kung", "poly2"], [16, 1, 1, "c.fmpq_poly_compose_series_brent_kung", "res"]], "fmpq_poly_compose_series_horner": [[16, 1, 1, "c.fmpq_poly_compose_series_horner", "n"], [16, 1, 1, "c.fmpq_poly_compose_series_horner", "poly1"], [16, 1, 1, "c.fmpq_poly_compose_series_horner", "poly2"], [16, 1, 1, "c.fmpq_poly_compose_series_horner", "res"]], "fmpq_poly_content": [[16, 1, 1, "c.fmpq_poly_content", "poly"], [16, 1, 1, "c.fmpq_poly_content", "res"]], "fmpq_poly_cos_series": [[16, 1, 1, "c.fmpq_poly_cos_series", "f"], [16, 1, 1, "c.fmpq_poly_cos_series", "n"], [16, 1, 1, "c.fmpq_poly_cos_series", "res"]], "fmpq_poly_cosh_series": [[16, 1, 1, "c.fmpq_poly_cosh_series", "f"], [16, 1, 1, "c.fmpq_poly_cosh_series", "n"], [16, 1, 1, "c.fmpq_poly_cosh_series", "res"]], "fmpq_poly_degree": [[16, 1, 1, "c.fmpq_poly_degree", "poly"]], "fmpq_poly_denref": [[16, 1, 1, "c.fmpq_poly_denref", "poly"]], "fmpq_poly_derivative": [[16, 1, 1, "c.fmpq_poly_derivative", "poly"], [16, 1, 1, "c.fmpq_poly_derivative", "res"]], "fmpq_poly_div": [[16, 1, 1, "c.fmpq_poly_div", "Q"], [16, 1, 1, "c.fmpq_poly_div", "poly1"], [16, 1, 1, "c.fmpq_poly_div", "poly2"]], "fmpq_poly_div_series": [[16, 1, 1, "c.fmpq_poly_div_series", "A"], [16, 1, 1, "c.fmpq_poly_div_series", "B"], [16, 1, 1, "c.fmpq_poly_div_series", "Q"], [16, 1, 1, "c.fmpq_poly_div_series", "n"]], "fmpq_poly_divides": [[16, 1, 1, "c.fmpq_poly_divides", "poly1"], [16, 1, 1, "c.fmpq_poly_divides", "poly2"], [16, 1, 1, "c.fmpq_poly_divides", "q"]], "fmpq_poly_divrem": [[16, 1, 1, "c.fmpq_poly_divrem", "Q"], [16, 1, 1, "c.fmpq_poly_divrem", "R"], [16, 1, 1, "c.fmpq_poly_divrem", "poly1"], [16, 1, 1, "c.fmpq_poly_divrem", "poly2"]], "fmpq_poly_equal": [[16, 1, 1, "c.fmpq_poly_equal", "poly1"], [16, 1, 1, "c.fmpq_poly_equal", "poly2"]], "fmpq_poly_equal_trunc": [[16, 1, 1, "c.fmpq_poly_equal_trunc", "n"], [16, 1, 1, "c.fmpq_poly_equal_trunc", "poly1"], [16, 1, 1, "c.fmpq_poly_equal_trunc", "poly2"]], "fmpq_poly_evaluate_fmpq": [[16, 1, 1, "c.fmpq_poly_evaluate_fmpq", "a"], [16, 1, 1, "c.fmpq_poly_evaluate_fmpq", "poly"], [16, 1, 1, "c.fmpq_poly_evaluate_fmpq", "res"]], "fmpq_poly_evaluate_fmpz": [[16, 1, 1, "c.fmpq_poly_evaluate_fmpz", "a"], [16, 1, 1, "c.fmpq_poly_evaluate_fmpz", "poly"], [16, 1, 1, "c.fmpq_poly_evaluate_fmpz", "res"]], "fmpq_poly_evaluate_mpq": [[16, 1, 1, "c.fmpq_poly_evaluate_mpq", "a"], [16, 1, 1, "c.fmpq_poly_evaluate_mpq", "poly"], [16, 1, 1, "c.fmpq_poly_evaluate_mpq", "res"]], "fmpq_poly_evaluate_mpz": [[16, 1, 1, "c.fmpq_poly_evaluate_mpz", "a"], [16, 1, 1, "c.fmpq_poly_evaluate_mpz", "poly"], [16, 1, 1, "c.fmpq_poly_evaluate_mpz", "res"]], "fmpq_poly_exp_expinv_series": [[16, 1, 1, "c.fmpq_poly_exp_expinv_series", "h"], [16, 1, 1, "c.fmpq_poly_exp_expinv_series", "n"], [16, 1, 1, "c.fmpq_poly_exp_expinv_series", "res1"], [16, 1, 1, "c.fmpq_poly_exp_expinv_series", "res2"]], "fmpq_poly_exp_series": [[16, 1, 1, "c.fmpq_poly_exp_series", "h"], [16, 1, 1, "c.fmpq_poly_exp_series", "n"], [16, 1, 1, "c.fmpq_poly_exp_series", "res"]], "fmpq_poly_fit_length": [[16, 1, 1, "c.fmpq_poly_fit_length", "len"], [16, 1, 1, "c.fmpq_poly_fit_length", "poly"]], "fmpq_poly_fprint": [[16, 1, 1, "c.fmpq_poly_fprint", "file"], [16, 1, 1, "c.fmpq_poly_fprint", "poly"]], "fmpq_poly_fprint_pretty": [[16, 1, 1, "c.fmpq_poly_fprint_pretty", "file"], [16, 1, 1, "c.fmpq_poly_fprint_pretty", "poly"], [16, 1, 1, "c.fmpq_poly_fprint_pretty", "var"]], "fmpq_poly_fread": [[16, 1, 1, "c.fmpq_poly_fread", "file"], [16, 1, 1, "c.fmpq_poly_fread", "poly"]], "fmpq_poly_gcd": [[16, 1, 1, "c.fmpq_poly_gcd", "A"], [16, 1, 1, "c.fmpq_poly_gcd", "B"], [16, 1, 1, "c.fmpq_poly_gcd", "G"]], "fmpq_poly_gegenbauer_c": [[16, 1, 1, "c.fmpq_poly_gegenbauer_c", "a"], [16, 1, 1, "c.fmpq_poly_gegenbauer_c", "n"], [16, 1, 1, "c.fmpq_poly_gegenbauer_c", "poly"]], "fmpq_poly_get_coeff_fmpq": [[16, 1, 1, "c.fmpq_poly_get_coeff_fmpq", "n"], [16, 1, 1, "c.fmpq_poly_get_coeff_fmpq", "poly"], [16, 1, 1, "c.fmpq_poly_get_coeff_fmpq", "x"]], "fmpq_poly_get_coeff_fmpz": [[16, 1, 1, "c.fmpq_poly_get_coeff_fmpz", "n"], [16, 1, 1, "c.fmpq_poly_get_coeff_fmpz", "poly"], [16, 1, 1, "c.fmpq_poly_get_coeff_fmpz", "x"]], "fmpq_poly_get_coeff_mpq": [[16, 1, 1, "c.fmpq_poly_get_coeff_mpq", "n"], [16, 1, 1, "c.fmpq_poly_get_coeff_mpq", "poly"], [16, 1, 1, "c.fmpq_poly_get_coeff_mpq", "x"]], "fmpq_poly_get_denominator": [[16, 1, 1, "c.fmpq_poly_get_denominator", "den"], [16, 1, 1, "c.fmpq_poly_get_denominator", "poly"]], "fmpq_poly_get_nmod_poly": [[16, 1, 1, "c.fmpq_poly_get_nmod_poly", "op"], [16, 1, 1, "c.fmpq_poly_get_nmod_poly", "rop"]], "fmpq_poly_get_nmod_poly_den": [[16, 1, 1, "c.fmpq_poly_get_nmod_poly_den", "den"], [16, 1, 1, "c.fmpq_poly_get_nmod_poly_den", "op"], [16, 1, 1, "c.fmpq_poly_get_nmod_poly_den", "rop"]], "fmpq_poly_get_numerator": [[16, 1, 1, "c.fmpq_poly_get_numerator", "poly"], [16, 1, 1, "c.fmpq_poly_get_numerator", "res"]], "fmpq_poly_get_slice": [[16, 1, 1, "c.fmpq_poly_get_slice", "i"], [16, 1, 1, "c.fmpq_poly_get_slice", "j"], [16, 1, 1, "c.fmpq_poly_get_slice", "op"], [16, 1, 1, "c.fmpq_poly_get_slice", "rop"]], "fmpq_poly_get_str": [[16, 1, 1, "c.fmpq_poly_get_str", "poly"]], "fmpq_poly_get_str_pretty": [[16, 1, 1, "c.fmpq_poly_get_str_pretty", "poly"], [16, 1, 1, "c.fmpq_poly_get_str_pretty", "var"]], "fmpq_poly_init": [[16, 1, 1, "c.fmpq_poly_init", "poly"]], "fmpq_poly_init2": [[16, 1, 1, "c.fmpq_poly_init2", "alloc"], [16, 1, 1, "c.fmpq_poly_init2", "poly"]], "fmpq_poly_integral": [[16, 1, 1, "c.fmpq_poly_integral", "poly"], [16, 1, 1, "c.fmpq_poly_integral", "res"]], "fmpq_poly_interpolate_fmpz_vec": [[16, 1, 1, "c.fmpq_poly_interpolate_fmpz_vec", "n"], [16, 1, 1, "c.fmpq_poly_interpolate_fmpz_vec", "poly"], [16, 1, 1, "c.fmpq_poly_interpolate_fmpz_vec", "xs"], [16, 1, 1, "c.fmpq_poly_interpolate_fmpz_vec", "ys"]], "fmpq_poly_inv": [[16, 1, 1, "c.fmpq_poly_inv", "poly1"], [16, 1, 1, "c.fmpq_poly_inv", "poly2"]], "fmpq_poly_inv_series": [[16, 1, 1, "c.fmpq_poly_inv_series", "n"], [16, 1, 1, "c.fmpq_poly_inv_series", "poly"], [16, 1, 1, "c.fmpq_poly_inv_series", "res"]], "fmpq_poly_inv_series_newton": [[16, 1, 1, "c.fmpq_poly_inv_series_newton", "n"], [16, 1, 1, "c.fmpq_poly_inv_series_newton", "poly"], [16, 1, 1, "c.fmpq_poly_inv_series_newton", "res"]], "fmpq_poly_invsqrt_series": [[16, 1, 1, "c.fmpq_poly_invsqrt_series", "f"], [16, 1, 1, "c.fmpq_poly_invsqrt_series", "n"], [16, 1, 1, "c.fmpq_poly_invsqrt_series", "res"]], "fmpq_poly_is_canonical": [[16, 1, 1, "c.fmpq_poly_is_canonical", "poly"]], "fmpq_poly_is_gen": [[16, 1, 1, "c.fmpq_poly_is_gen", "poly"]], "fmpq_poly_is_monic": [[16, 1, 1, "c.fmpq_poly_is_monic", "poly"]], "fmpq_poly_is_one": [[16, 1, 1, "c.fmpq_poly_is_one", "poly"]], "fmpq_poly_is_squarefree": [[16, 1, 1, "c.fmpq_poly_is_squarefree", "poly"]], "fmpq_poly_is_zero": [[16, 1, 1, "c.fmpq_poly_is_zero", "poly"]], "fmpq_poly_laguerre_l": [[16, 1, 1, "c.fmpq_poly_laguerre_l", "n"], [16, 1, 1, "c.fmpq_poly_laguerre_l", "poly"]], "fmpq_poly_lcm": [[16, 1, 1, "c.fmpq_poly_lcm", "A"], [16, 1, 1, "c.fmpq_poly_lcm", "B"], [16, 1, 1, "c.fmpq_poly_lcm", "L"]], "fmpq_poly_legendre_p": [[16, 1, 1, "c.fmpq_poly_legendre_p", "n"], [16, 1, 1, "c.fmpq_poly_legendre_p", "poly"]], "fmpq_poly_length": [[16, 1, 1, "c.fmpq_poly_length", "poly"]], "fmpq_poly_log_series": [[16, 1, 1, "c.fmpq_poly_log_series", "f"], [16, 1, 1, "c.fmpq_poly_log_series", "n"], [16, 1, 1, "c.fmpq_poly_log_series", "res"]], "fmpq_poly_make_monic": [[16, 1, 1, "c.fmpq_poly_make_monic", "poly"], [16, 1, 1, "c.fmpq_poly_make_monic", "res"]], "fmpq_poly_mul": [[16, 1, 1, "c.fmpq_poly_mul", "poly1"], [16, 1, 1, "c.fmpq_poly_mul", "poly2"], [16, 1, 1, "c.fmpq_poly_mul", "res"]], "fmpq_poly_mullow": [[16, 1, 1, "c.fmpq_poly_mullow", "n"], [16, 1, 1, "c.fmpq_poly_mullow", "poly1"], [16, 1, 1, "c.fmpq_poly_mullow", "poly2"], [16, 1, 1, "c.fmpq_poly_mullow", "res"]], "fmpq_poly_neg": [[16, 1, 1, "c.fmpq_poly_neg", "poly1"], [16, 1, 1, "c.fmpq_poly_neg", "poly2"]], "fmpq_poly_nth_derivative": [[16, 1, 1, "c.fmpq_poly_nth_derivative", "n"], [16, 1, 1, "c.fmpq_poly_nth_derivative", "poly"], [16, 1, 1, "c.fmpq_poly_nth_derivative", "res"]], "fmpq_poly_numref": [[16, 1, 1, "c.fmpq_poly_numref", "poly"]], "fmpq_poly_one": [[16, 1, 1, "c.fmpq_poly_one", "poly"]], "fmpq_poly_pow": [[16, 1, 1, "c.fmpq_poly_pow", "e"], [16, 1, 1, "c.fmpq_poly_pow", "poly"], [16, 1, 1, "c.fmpq_poly_pow", "res"]], "fmpq_poly_pow_trunc": [[16, 1, 1, "c.fmpq_poly_pow_trunc", "e"], [16, 1, 1, "c.fmpq_poly_pow_trunc", "n"], [16, 1, 1, "c.fmpq_poly_pow_trunc", "poly"], [16, 1, 1, "c.fmpq_poly_pow_trunc", "res"]], "fmpq_poly_power_sums": [[16, 1, 1, "c.fmpq_poly_power_sums", "n"], [16, 1, 1, "c.fmpq_poly_power_sums", "poly"], [16, 1, 1, "c.fmpq_poly_power_sums", "res"]], "fmpq_poly_power_sums_to_fmpz_poly": [[16, 1, 1, "c.fmpq_poly_power_sums_to_fmpz_poly", "Q"], [16, 1, 1, "c.fmpq_poly_power_sums_to_fmpz_poly", "res"]], "fmpq_poly_power_sums_to_poly": [[16, 1, 1, "c.fmpq_poly_power_sums_to_poly", "Q"], [16, 1, 1, "c.fmpq_poly_power_sums_to_poly", "res"]], "fmpq_poly_powers_clear": [[16, 1, 1, "c.fmpq_poly_powers_clear", "pinv"]], "fmpq_poly_powers_precompute": [[16, 1, 1, "c.fmpq_poly_powers_precompute", "pinv"], [16, 1, 1, "c.fmpq_poly_powers_precompute", "poly"]], "fmpq_poly_primitive_part": [[16, 1, 1, "c.fmpq_poly_primitive_part", "poly"], [16, 1, 1, "c.fmpq_poly_primitive_part", "res"]], "fmpq_poly_print": [[16, 1, 1, "c.fmpq_poly_print", "poly"]], "fmpq_poly_print_pretty": [[16, 1, 1, "c.fmpq_poly_print_pretty", "poly"], [16, 1, 1, "c.fmpq_poly_print_pretty", "var"]], "fmpq_poly_randtest": [[16, 1, 1, "c.fmpq_poly_randtest", "bits"], [16, 1, 1, "c.fmpq_poly_randtest", "f"], [16, 1, 1, "c.fmpq_poly_randtest", "len"], [16, 1, 1, "c.fmpq_poly_randtest", "state"]], "fmpq_poly_randtest_not_zero": [[16, 1, 1, "c.fmpq_poly_randtest_not_zero", "bits"], [16, 1, 1, "c.fmpq_poly_randtest_not_zero", "f"], [16, 1, 1, "c.fmpq_poly_randtest_not_zero", "len"], [16, 1, 1, "c.fmpq_poly_randtest_not_zero", "state"]], "fmpq_poly_randtest_unsigned": [[16, 1, 1, "c.fmpq_poly_randtest_unsigned", "bits"], [16, 1, 1, "c.fmpq_poly_randtest_unsigned", "f"], [16, 1, 1, "c.fmpq_poly_randtest_unsigned", "len"], [16, 1, 1, "c.fmpq_poly_randtest_unsigned", "state"]], "fmpq_poly_read": [[16, 1, 1, "c.fmpq_poly_read", "poly"]], "fmpq_poly_realloc": [[16, 1, 1, "c.fmpq_poly_realloc", "alloc"], [16, 1, 1, "c.fmpq_poly_realloc", "poly"]], "fmpq_poly_rem": [[16, 1, 1, "c.fmpq_poly_rem", "R"], [16, 1, 1, "c.fmpq_poly_rem", "poly1"], [16, 1, 1, "c.fmpq_poly_rem", "poly2"]], "fmpq_poly_rem_powers_precomp": [[16, 1, 1, "c.fmpq_poly_rem_powers_precomp", "A"], [16, 1, 1, "c.fmpq_poly_rem_powers_precomp", "B"], [16, 1, 1, "c.fmpq_poly_rem_powers_precomp", "B_inv"], [16, 1, 1, "c.fmpq_poly_rem_powers_precomp", "R"]], "fmpq_poly_remove": [[16, 1, 1, "c.fmpq_poly_remove", "poly1"], [16, 1, 1, "c.fmpq_poly_remove", "poly2"], [16, 1, 1, "c.fmpq_poly_remove", "q"]], "fmpq_poly_rescale": [[16, 1, 1, "c.fmpq_poly_rescale", "a"], [16, 1, 1, "c.fmpq_poly_rescale", "poly"], [16, 1, 1, "c.fmpq_poly_rescale", "res"]], "fmpq_poly_resultant": [[16, 1, 1, "c.fmpq_poly_resultant", "f"], [16, 1, 1, "c.fmpq_poly_resultant", "g"], [16, 1, 1, "c.fmpq_poly_resultant", "r"]], "fmpq_poly_resultant_div": [[16, 1, 1, "c.fmpq_poly_resultant_div", "div"], [16, 1, 1, "c.fmpq_poly_resultant_div", "f"], [16, 1, 1, "c.fmpq_poly_resultant_div", "g"], [16, 1, 1, "c.fmpq_poly_resultant_div", "nbits"], [16, 1, 1, "c.fmpq_poly_resultant_div", "r"]], "fmpq_poly_reverse": [[16, 1, 1, "c.fmpq_poly_reverse", "n"], [16, 1, 1, "c.fmpq_poly_reverse", "poly"], [16, 1, 1, "c.fmpq_poly_reverse", "res"]], "fmpq_poly_revert_series": [[16, 1, 1, "c.fmpq_poly_revert_series", "n"], [16, 1, 1, "c.fmpq_poly_revert_series", "poly"], [16, 1, 1, "c.fmpq_poly_revert_series", "res"]], "fmpq_poly_revert_series_lagrange": [[16, 1, 1, "c.fmpq_poly_revert_series_lagrange", "n"], [16, 1, 1, "c.fmpq_poly_revert_series_lagrange", "poly"], [16, 1, 1, "c.fmpq_poly_revert_series_lagrange", "res"]], "fmpq_poly_revert_series_lagrange_fast": [[16, 1, 1, "c.fmpq_poly_revert_series_lagrange_fast", "n"], [16, 1, 1, "c.fmpq_poly_revert_series_lagrange_fast", "poly"], [16, 1, 1, "c.fmpq_poly_revert_series_lagrange_fast", "res"]], "fmpq_poly_revert_series_newton": [[16, 1, 1, "c.fmpq_poly_revert_series_newton", "n"], [16, 1, 1, "c.fmpq_poly_revert_series_newton", "poly"], [16, 1, 1, "c.fmpq_poly_revert_series_newton", "res"]], "fmpq_poly_scalar_div_fmpq": [[16, 1, 1, "c.fmpq_poly_scalar_div_fmpq", "c"], [16, 1, 1, "c.fmpq_poly_scalar_div_fmpq", "op"], [16, 1, 1, "c.fmpq_poly_scalar_div_fmpq", "rop"]], "fmpq_poly_scalar_div_fmpz": [[16, 1, 1, "c.fmpq_poly_scalar_div_fmpz", "c"], [16, 1, 1, "c.fmpq_poly_scalar_div_fmpz", "op"], [16, 1, 1, "c.fmpq_poly_scalar_div_fmpz", "rop"]], "fmpq_poly_scalar_div_mpq": [[16, 1, 1, "c.fmpq_poly_scalar_div_mpq", "c"], [16, 1, 1, "c.fmpq_poly_scalar_div_mpq", "op"], [16, 1, 1, "c.fmpq_poly_scalar_div_mpq", "rop"]], "fmpq_poly_scalar_div_mpz": [[16, 1, 1, "c.fmpq_poly_scalar_div_mpz", "c"], [16, 1, 1, "c.fmpq_poly_scalar_div_mpz", "op"], [16, 1, 1, "c.fmpq_poly_scalar_div_mpz", "rop"]], "fmpq_poly_scalar_div_si": [[16, 1, 1, "c.fmpq_poly_scalar_div_si", "c"], [16, 1, 1, "c.fmpq_poly_scalar_div_si", "op"], [16, 1, 1, "c.fmpq_poly_scalar_div_si", "rop"]], "fmpq_poly_scalar_div_ui": [[16, 1, 1, "c.fmpq_poly_scalar_div_ui", "c"], [16, 1, 1, "c.fmpq_poly_scalar_div_ui", "op"], [16, 1, 1, "c.fmpq_poly_scalar_div_ui", "rop"]], "fmpq_poly_scalar_mul_fmpq": [[16, 1, 1, "c.fmpq_poly_scalar_mul_fmpq", "c"], [16, 1, 1, "c.fmpq_poly_scalar_mul_fmpq", "op"], [16, 1, 1, "c.fmpq_poly_scalar_mul_fmpq", "rop"]], "fmpq_poly_scalar_mul_fmpz": [[16, 1, 1, "c.fmpq_poly_scalar_mul_fmpz", "c"], [16, 1, 1, "c.fmpq_poly_scalar_mul_fmpz", "op"], [16, 1, 1, "c.fmpq_poly_scalar_mul_fmpz", "rop"]], "fmpq_poly_scalar_mul_mpq": [[16, 1, 1, "c.fmpq_poly_scalar_mul_mpq", "c"], [16, 1, 1, "c.fmpq_poly_scalar_mul_mpq", "op"], [16, 1, 1, "c.fmpq_poly_scalar_mul_mpq", "rop"]], "fmpq_poly_scalar_mul_mpz": [[16, 1, 1, "c.fmpq_poly_scalar_mul_mpz", "c"], [16, 1, 1, "c.fmpq_poly_scalar_mul_mpz", "op"], [16, 1, 1, "c.fmpq_poly_scalar_mul_mpz", "rop"]], "fmpq_poly_scalar_mul_si": [[16, 1, 1, "c.fmpq_poly_scalar_mul_si", "c"], [16, 1, 1, "c.fmpq_poly_scalar_mul_si", "op"], [16, 1, 1, "c.fmpq_poly_scalar_mul_si", "rop"]], "fmpq_poly_scalar_mul_ui": [[16, 1, 1, "c.fmpq_poly_scalar_mul_ui", "c"], [16, 1, 1, "c.fmpq_poly_scalar_mul_ui", "op"], [16, 1, 1, "c.fmpq_poly_scalar_mul_ui", "rop"]], "fmpq_poly_set": [[16, 1, 1, "c.fmpq_poly_set", "poly1"], [16, 1, 1, "c.fmpq_poly_set", "poly2"]], "fmpq_poly_set_array_mpq": [[16, 1, 1, "c.fmpq_poly_set_array_mpq", "a"], [16, 1, 1, "c.fmpq_poly_set_array_mpq", "n"], [16, 1, 1, "c.fmpq_poly_set_array_mpq", "poly"]], "fmpq_poly_set_coeff_fmpq": [[16, 1, 1, "c.fmpq_poly_set_coeff_fmpq", "n"], [16, 1, 1, "c.fmpq_poly_set_coeff_fmpq", "poly"], [16, 1, 1, "c.fmpq_poly_set_coeff_fmpq", "x"]], "fmpq_poly_set_coeff_fmpz": [[16, 1, 1, "c.fmpq_poly_set_coeff_fmpz", "n"], [16, 1, 1, "c.fmpq_poly_set_coeff_fmpz", "poly"], [16, 1, 1, "c.fmpq_poly_set_coeff_fmpz", "x"]], "fmpq_poly_set_coeff_mpq": [[16, 1, 1, "c.fmpq_poly_set_coeff_mpq", "n"], [16, 1, 1, "c.fmpq_poly_set_coeff_mpq", "rop"], [16, 1, 1, "c.fmpq_poly_set_coeff_mpq", "x"]], "fmpq_poly_set_coeff_mpz": [[16, 1, 1, "c.fmpq_poly_set_coeff_mpz", "n"], [16, 1, 1, "c.fmpq_poly_set_coeff_mpz", "rop"], [16, 1, 1, "c.fmpq_poly_set_coeff_mpz", "x"]], "fmpq_poly_set_coeff_si": [[16, 1, 1, "c.fmpq_poly_set_coeff_si", "n"], [16, 1, 1, "c.fmpq_poly_set_coeff_si", "poly"], [16, 1, 1, "c.fmpq_poly_set_coeff_si", "x"]], "fmpq_poly_set_coeff_ui": [[16, 1, 1, "c.fmpq_poly_set_coeff_ui", "n"], [16, 1, 1, "c.fmpq_poly_set_coeff_ui", "poly"], [16, 1, 1, "c.fmpq_poly_set_coeff_ui", "x"]], "fmpq_poly_set_fmpq": [[16, 1, 1, "c.fmpq_poly_set_fmpq", "poly"], [16, 1, 1, "c.fmpq_poly_set_fmpq", "x"]], "fmpq_poly_set_fmpz": [[16, 1, 1, "c.fmpq_poly_set_fmpz", "poly"], [16, 1, 1, "c.fmpq_poly_set_fmpz", "x"]], "fmpq_poly_set_fmpz_poly": [[16, 1, 1, "c.fmpq_poly_set_fmpz_poly", "op"], [16, 1, 1, "c.fmpq_poly_set_fmpz_poly", "rop"]], "fmpq_poly_set_mpq": [[16, 1, 1, "c.fmpq_poly_set_mpq", "poly"], [16, 1, 1, "c.fmpq_poly_set_mpq", "x"]], "fmpq_poly_set_mpz": [[16, 1, 1, "c.fmpq_poly_set_mpz", "poly"], [16, 1, 1, "c.fmpq_poly_set_mpz", "x"]], "fmpq_poly_set_nmod_poly": [[16, 1, 1, "c.fmpq_poly_set_nmod_poly", "op"], [16, 1, 1, "c.fmpq_poly_set_nmod_poly", "rop"]], "fmpq_poly_set_si": [[16, 1, 1, "c.fmpq_poly_set_si", "poly"], [16, 1, 1, "c.fmpq_poly_set_si", "x"]], "fmpq_poly_set_str": [[16, 1, 1, "c.fmpq_poly_set_str", "poly"], [16, 1, 1, "c.fmpq_poly_set_str", "str"]], "fmpq_poly_set_trunc": [[16, 1, 1, "c.fmpq_poly_set_trunc", "n"], [16, 1, 1, "c.fmpq_poly_set_trunc", "poly"], [16, 1, 1, "c.fmpq_poly_set_trunc", "res"]], "fmpq_poly_set_ui": [[16, 1, 1, "c.fmpq_poly_set_ui", "poly"], [16, 1, 1, "c.fmpq_poly_set_ui", "x"]], "fmpq_poly_shift_left": [[16, 1, 1, "c.fmpq_poly_shift_left", "n"], [16, 1, 1, "c.fmpq_poly_shift_left", "poly"], [16, 1, 1, "c.fmpq_poly_shift_left", "res"]], "fmpq_poly_shift_right": [[16, 1, 1, "c.fmpq_poly_shift_right", "n"], [16, 1, 1, "c.fmpq_poly_shift_right", "poly"], [16, 1, 1, "c.fmpq_poly_shift_right", "res"]], "fmpq_poly_sin_cos_series": [[16, 1, 1, "c.fmpq_poly_sin_cos_series", "f"], [16, 1, 1, "c.fmpq_poly_sin_cos_series", "n"], [16, 1, 1, "c.fmpq_poly_sin_cos_series", "res1"], [16, 1, 1, "c.fmpq_poly_sin_cos_series", "res2"]], "fmpq_poly_sin_series": [[16, 1, 1, "c.fmpq_poly_sin_series", "f"], [16, 1, 1, "c.fmpq_poly_sin_series", "n"], [16, 1, 1, "c.fmpq_poly_sin_series", "res"]], "fmpq_poly_sinh_cosh_series": [[16, 1, 1, "c.fmpq_poly_sinh_cosh_series", "f"], [16, 1, 1, "c.fmpq_poly_sinh_cosh_series", "n"], [16, 1, 1, "c.fmpq_poly_sinh_cosh_series", "res1"], [16, 1, 1, "c.fmpq_poly_sinh_cosh_series", "res2"]], "fmpq_poly_sinh_series": [[16, 1, 1, "c.fmpq_poly_sinh_series", "f"], [16, 1, 1, "c.fmpq_poly_sinh_series", "n"], [16, 1, 1, "c.fmpq_poly_sinh_series", "res"]], "fmpq_poly_sqrt_series": [[16, 1, 1, "c.fmpq_poly_sqrt_series", "f"], [16, 1, 1, "c.fmpq_poly_sqrt_series", "n"], [16, 1, 1, "c.fmpq_poly_sqrt_series", "res"]], "fmpq_poly_sub": [[16, 1, 1, "c.fmpq_poly_sub", "poly1"], [16, 1, 1, "c.fmpq_poly_sub", "poly2"], [16, 1, 1, "c.fmpq_poly_sub", "res"]], "fmpq_poly_sub_can": [[16, 1, 1, "c.fmpq_poly_sub_can", "can"], [16, 1, 1, "c.fmpq_poly_sub_can", "poly1"], [16, 1, 1, "c.fmpq_poly_sub_can", "poly2"], [16, 1, 1, "c.fmpq_poly_sub_can", "res"]], "fmpq_poly_sub_series": [[16, 1, 1, "c.fmpq_poly_sub_series", "n"], [16, 1, 1, "c.fmpq_poly_sub_series", "poly1"], [16, 1, 1, "c.fmpq_poly_sub_series", "poly2"], [16, 1, 1, "c.fmpq_poly_sub_series", "res"]], "fmpq_poly_sub_series_can": [[16, 1, 1, "c.fmpq_poly_sub_series_can", "can"], [16, 1, 1, "c.fmpq_poly_sub_series_can", "n"], [16, 1, 1, "c.fmpq_poly_sub_series_can", "poly1"], [16, 1, 1, "c.fmpq_poly_sub_series_can", "poly2"], [16, 1, 1, "c.fmpq_poly_sub_series_can", "res"]], "fmpq_poly_submul": [[16, 1, 1, "c.fmpq_poly_submul", "op1"], [16, 1, 1, "c.fmpq_poly_submul", "op2"], [16, 1, 1, "c.fmpq_poly_submul", "rop"]], "fmpq_poly_swap": [[16, 1, 1, "c.fmpq_poly_swap", "poly1"], [16, 1, 1, "c.fmpq_poly_swap", "poly2"]], "fmpq_poly_tan_series": [[16, 1, 1, "c.fmpq_poly_tan_series", "f"], [16, 1, 1, "c.fmpq_poly_tan_series", "n"], [16, 1, 1, "c.fmpq_poly_tan_series", "res"]], "fmpq_poly_tanh_series": [[16, 1, 1, "c.fmpq_poly_tanh_series", "f"], [16, 1, 1, "c.fmpq_poly_tanh_series", "n"], [16, 1, 1, "c.fmpq_poly_tanh_series", "res"]], "fmpq_poly_truncate": [[16, 1, 1, "c.fmpq_poly_truncate", "n"], [16, 1, 1, "c.fmpq_poly_truncate", "poly"]], "fmpq_poly_xgcd": [[16, 1, 1, "c.fmpq_poly_xgcd", "A"], [16, 1, 1, "c.fmpq_poly_xgcd", "B"], [16, 1, 1, "c.fmpq_poly_xgcd", "G"], [16, 1, 1, "c.fmpq_poly_xgcd", "S"], [16, 1, 1, "c.fmpq_poly_xgcd", "T"]], "fmpq_poly_zero": [[16, 1, 1, "c.fmpq_poly_zero", "poly"]], "fmpq_pow_fmpz": [[12, 1, 1, "c.fmpq_pow_fmpz", "a"], [12, 1, 1, "c.fmpq_pow_fmpz", "b"], [12, 1, 1, "c.fmpq_pow_fmpz", "e"]], "fmpq_pow_si": [[12, 1, 1, "c.fmpq_pow_si", "e"], [12, 1, 1, "c.fmpq_pow_si", "op"], [12, 1, 1, "c.fmpq_pow_si", "res"]], "fmpq_print": [[12, 1, 1, "c.fmpq_print", "x"]], "fmpq_randbits": [[12, 1, 1, "c.fmpq_randbits", "bits"], [12, 1, 1, "c.fmpq_randbits", "res"], [12, 1, 1, "c.fmpq_randbits", "state"]], "fmpq_randtest": [[12, 1, 1, "c.fmpq_randtest", "bits"], [12, 1, 1, "c.fmpq_randtest", "res"], [12, 1, 1, "c.fmpq_randtest", "state"]], "fmpq_randtest_not_zero": [[12, 1, 1, "c.fmpq_randtest_not_zero", "bits"], [12, 1, 1, "c.fmpq_randtest_not_zero", "res"], [12, 1, 1, "c.fmpq_randtest_not_zero", "state"]], "fmpq_reconstruct_fmpz": [[12, 1, 1, "c.fmpq_reconstruct_fmpz", "a"], [12, 1, 1, "c.fmpq_reconstruct_fmpz", "m"], [12, 1, 1, "c.fmpq_reconstruct_fmpz", "res"]], "fmpq_reconstruct_fmpz_2": [[12, 1, 1, "c.fmpq_reconstruct_fmpz_2", "D"], [12, 1, 1, "c.fmpq_reconstruct_fmpz_2", "N"], [12, 1, 1, "c.fmpq_reconstruct_fmpz_2", "a"], [12, 1, 1, "c.fmpq_reconstruct_fmpz_2", "m"], [12, 1, 1, "c.fmpq_reconstruct_fmpz_2", "res"]], "fmpq_set": [[12, 1, 1, "c.fmpq_set", "dest"], [12, 1, 1, "c.fmpq_set", "src"]], "fmpq_set_cfrac": [[12, 1, 1, "c.fmpq_set_cfrac", "c"], [12, 1, 1, "c.fmpq_set_cfrac", "n"], [12, 1, 1, "c.fmpq_set_cfrac", "x"]], "fmpq_set_fmpz_frac": [[12, 1, 1, "c.fmpq_set_fmpz_frac", "p"], [12, 1, 1, "c.fmpq_set_fmpz_frac", "q"], [12, 1, 1, "c.fmpq_set_fmpz_frac", "res"]], "fmpq_set_mpq": [[12, 1, 1, "c.fmpq_set_mpq", "dest"], [12, 1, 1, "c.fmpq_set_mpq", "src"]], "fmpq_set_si": [[12, 1, 1, "c.fmpq_set_si", "p"], [12, 1, 1, "c.fmpq_set_si", "q"], [12, 1, 1, "c.fmpq_set_si", "res"]], "fmpq_set_str": [[12, 1, 1, "c.fmpq_set_str", "base"], [12, 1, 1, "c.fmpq_set_str", "dest"], [12, 1, 1, "c.fmpq_set_str", "s"]], "fmpq_set_ui": [[12, 1, 1, "c.fmpq_set_ui", "p"], [12, 1, 1, "c.fmpq_set_ui", "q"], [12, 1, 1, "c.fmpq_set_ui", "res"]], "fmpq_sgn": [[12, 1, 1, "c.fmpq_sgn", "x"]], "fmpq_simplest_between": [[12, 1, 1, "c.fmpq_simplest_between", "l"], [12, 1, 1, "c.fmpq_simplest_between", "r"], [12, 1, 1, "c.fmpq_simplest_between", "x"]], "fmpq_sub": [[12, 1, 1, "c.fmpq_sub", "op1"], [12, 1, 1, "c.fmpq_sub", "op2"], [12, 1, 1, "c.fmpq_sub", "res"]], "fmpq_sub_fmpz": [[12, 1, 1, "c.fmpq_sub_fmpz", "c"], [12, 1, 1, "c.fmpq_sub_fmpz", "op1"], [12, 1, 1, "c.fmpq_sub_fmpz", "res"]], "fmpq_sub_si": [[12, 1, 1, "c.fmpq_sub_si", "c"], [12, 1, 1, "c.fmpq_sub_si", "op1"], [12, 1, 1, "c.fmpq_sub_si", "res"]], "fmpq_sub_ui": [[12, 1, 1, "c.fmpq_sub_ui", "c"], [12, 1, 1, "c.fmpq_sub_ui", "op1"], [12, 1, 1, "c.fmpq_sub_ui", "res"]], "fmpq_submul": [[12, 1, 1, "c.fmpq_submul", "op1"], [12, 1, 1, "c.fmpq_submul", "op2"], [12, 1, 1, "c.fmpq_submul", "res"]], "fmpq_swap": [[12, 1, 1, "c.fmpq_swap", "op1"], [12, 1, 1, "c.fmpq_swap", "op2"]], "fmpq_zero": [[12, 1, 1, "c.fmpq_zero", "res"]], "fmpz_CRT": [[18, 1, 1, "c.fmpz_CRT", "m1"], [18, 1, 1, "c.fmpz_CRT", "m2"], [18, 1, 1, "c.fmpz_CRT", "out"], [18, 1, 1, "c.fmpz_CRT", "r1"], [18, 1, 1, "c.fmpz_CRT", "r2"], [18, 1, 1, "c.fmpz_CRT", "sign"]], "fmpz_CRT_ui": [[18, 1, 1, "c.fmpz_CRT_ui", "m1"], [18, 1, 1, "c.fmpz_CRT_ui", "m2"], [18, 1, 1, "c.fmpz_CRT_ui", "out"], [18, 1, 1, "c.fmpz_CRT_ui", "r1"], [18, 1, 1, "c.fmpz_CRT_ui", "r2"], [18, 1, 1, "c.fmpz_CRT_ui", "sign"]], "fmpz_abs": [[18, 1, 1, "c.fmpz_abs", "f1"], [18, 1, 1, "c.fmpz_abs", "f2"]], "fmpz_abs_fits_ui": [[18, 1, 1, "c.fmpz_abs_fits_ui", "f"]], "fmpz_abs_lbound_ui_2exp": [[18, 1, 1, "c.fmpz_abs_lbound_ui_2exp", "bits"], [18, 1, 1, "c.fmpz_abs_lbound_ui_2exp", "exp"], [18, 1, 1, "c.fmpz_abs_lbound_ui_2exp", "x"]], "fmpz_abs_ubound_ui_2exp": [[18, 1, 1, "c.fmpz_abs_ubound_ui_2exp", "bits"], [18, 1, 1, "c.fmpz_abs_ubound_ui_2exp", "exp"], [18, 1, 1, "c.fmpz_abs_ubound_ui_2exp", "x"]], "fmpz_add": [[18, 1, 1, "c.fmpz_add", "f"], [18, 1, 1, "c.fmpz_add", "g"], [18, 1, 1, "c.fmpz_add", "h"]], "fmpz_add_si": [[18, 1, 1, "c.fmpz_add_si", "f"], [18, 1, 1, "c.fmpz_add_si", "g"], [18, 1, 1, "c.fmpz_add_si", "h"]], "fmpz_add_ui": [[18, 1, 1, "c.fmpz_add_ui", "f"], [18, 1, 1, "c.fmpz_add_ui", "g"], [18, 1, 1, "c.fmpz_add_ui", "h"]], "fmpz_addmul": [[18, 1, 1, "c.fmpz_addmul", "f"], [18, 1, 1, "c.fmpz_addmul", "g"], [18, 1, 1, "c.fmpz_addmul", "h"]], "fmpz_addmul_si": [[18, 1, 1, "c.fmpz_addmul_si", "f"], [18, 1, 1, "c.fmpz_addmul_si", "g"], [18, 1, 1, "c.fmpz_addmul_si", "h"]], "fmpz_addmul_ui": [[18, 1, 1, "c.fmpz_addmul_ui", "f"], [18, 1, 1, "c.fmpz_addmul_ui", "g"], [18, 1, 1, "c.fmpz_addmul_ui", "h"]], "fmpz_and": [[18, 1, 1, "c.fmpz_and", "a"], [18, 1, 1, "c.fmpz_and", "b"], [18, 1, 1, "c.fmpz_and", "r"]], "fmpz_bin_uiui": [[18, 1, 1, "c.fmpz_bin_uiui", "f"], [18, 1, 1, "c.fmpz_bin_uiui", "k"], [18, 1, 1, "c.fmpz_bin_uiui", "n"]], "fmpz_bit_pack": [[18, 1, 1, "c.fmpz_bit_pack", "arr"], [18, 1, 1, "c.fmpz_bit_pack", "bits"], [18, 1, 1, "c.fmpz_bit_pack", "borrow"], [18, 1, 1, "c.fmpz_bit_pack", "coeff"], [18, 1, 1, "c.fmpz_bit_pack", "negate"], [18, 1, 1, "c.fmpz_bit_pack", "shift"]], "fmpz_bit_unpack": [[18, 1, 1, "c.fmpz_bit_unpack", "arr"], [18, 1, 1, "c.fmpz_bit_unpack", "bits"], [18, 1, 1, "c.fmpz_bit_unpack", "borrow"], [18, 1, 1, "c.fmpz_bit_unpack", "coeff"], [18, 1, 1, "c.fmpz_bit_unpack", "negate"], [18, 1, 1, "c.fmpz_bit_unpack", "shift"]], "fmpz_bit_unpack_unsigned": [[18, 1, 1, "c.fmpz_bit_unpack_unsigned", "arr"], [18, 1, 1, "c.fmpz_bit_unpack_unsigned", "bits"], [18, 1, 1, "c.fmpz_bit_unpack_unsigned", "coeff"], [18, 1, 1, "c.fmpz_bit_unpack_unsigned", "shift"]], "fmpz_bits": [[18, 1, 1, "c.fmpz_bits", "f"]], "fmpz_cdiv_q": [[18, 1, 1, "c.fmpz_cdiv_q", "f"], [18, 1, 1, "c.fmpz_cdiv_q", "g"], [18, 1, 1, "c.fmpz_cdiv_q", "h"]], "fmpz_cdiv_q_2exp": [[18, 1, 1, "c.fmpz_cdiv_q_2exp", "exp"], [18, 1, 1, "c.fmpz_cdiv_q_2exp", "f"], [18, 1, 1, "c.fmpz_cdiv_q_2exp", "g"]], "fmpz_cdiv_q_si": [[18, 1, 1, "c.fmpz_cdiv_q_si", "f"], [18, 1, 1, "c.fmpz_cdiv_q_si", "g"], [18, 1, 1, "c.fmpz_cdiv_q_si", "h"]], "fmpz_cdiv_q_ui": [[18, 1, 1, "c.fmpz_cdiv_q_ui", "f"], [18, 1, 1, "c.fmpz_cdiv_q_ui", "g"], [18, 1, 1, "c.fmpz_cdiv_q_ui", "h"]], "fmpz_cdiv_qr": [[18, 1, 1, "c.fmpz_cdiv_qr", "f"], [18, 1, 1, "c.fmpz_cdiv_qr", "g"], [18, 1, 1, "c.fmpz_cdiv_qr", "h"], [18, 1, 1, "c.fmpz_cdiv_qr", "s"]], "fmpz_cdiv_r_2exp": [[18, 1, 1, "c.fmpz_cdiv_r_2exp", "exp"], [18, 1, 1, "c.fmpz_cdiv_r_2exp", "g"], [18, 1, 1, "c.fmpz_cdiv_r_2exp", "s"]], "fmpz_cdiv_ui": [[18, 1, 1, "c.fmpz_cdiv_ui", "g"], [18, 1, 1, "c.fmpz_cdiv_ui", "h"]], "fmpz_clear": [[18, 1, 1, "c.fmpz_clear", "f"]], "fmpz_clear_readonly": [[18, 1, 1, "c.fmpz_clear_readonly", "f"]], "fmpz_clog": [[18, 1, 1, "c.fmpz_clog", "b"], [18, 1, 1, "c.fmpz_clog", "x"]], "fmpz_clog_ui": [[18, 1, 1, "c.fmpz_clog_ui", "b"], [18, 1, 1, "c.fmpz_clog_ui", "x"]], "fmpz_clrbit": [[18, 1, 1, "c.fmpz_clrbit", "f"], [18, 1, 1, "c.fmpz_clrbit", "i"]], "fmpz_cmp": [[18, 1, 1, "c.fmpz_cmp", "f"], [18, 1, 1, "c.fmpz_cmp", "g"]], "fmpz_cmp2abs": [[18, 1, 1, "c.fmpz_cmp2abs", "f"], [18, 1, 1, "c.fmpz_cmp2abs", "g"]], "fmpz_cmp_si": [[18, 1, 1, "c.fmpz_cmp_si", "f"], [18, 1, 1, "c.fmpz_cmp_si", "g"]], "fmpz_cmp_ui": [[18, 1, 1, "c.fmpz_cmp_ui", "f"], [18, 1, 1, "c.fmpz_cmp_ui", "g"]], "fmpz_cmpabs": [[18, 1, 1, "c.fmpz_cmpabs", "f"], [18, 1, 1, "c.fmpz_cmpabs", "g"]], "fmpz_comb_clear": [[18, 1, 1, "c.fmpz_comb_clear", "comb"]], "fmpz_comb_init": [[18, 1, 1, "c.fmpz_comb_init", "comb"], [18, 1, 1, "c.fmpz_comb_init", "num_primes"], [18, 1, 1, "c.fmpz_comb_init", "primes"]], "fmpz_comb_temp_clear": [[18, 1, 1, "c.fmpz_comb_temp_clear", "temp"]], "fmpz_comb_temp_init": [[18, 1, 1, "c.fmpz_comb_temp_init", "comb"], [18, 1, 1, "c.fmpz_comb_temp_init", "temp"]], "fmpz_combit": [[18, 1, 1, "c.fmpz_combit", "f"], [18, 1, 1, "c.fmpz_combit", "i"]], "fmpz_complement": [[18, 1, 1, "c.fmpz_complement", "f"], [18, 1, 1, "c.fmpz_complement", "r"]], "fmpz_divexact": [[18, 1, 1, "c.fmpz_divexact", "f"], [18, 1, 1, "c.fmpz_divexact", "g"], [18, 1, 1, "c.fmpz_divexact", "h"]], "fmpz_divexact2_uiui": [[18, 1, 1, "c.fmpz_divexact2_uiui", "f"], [18, 1, 1, "c.fmpz_divexact2_uiui", "g"], [18, 1, 1, "c.fmpz_divexact2_uiui", "x"], [18, 1, 1, "c.fmpz_divexact2_uiui", "y"]], "fmpz_divexact_si": [[18, 1, 1, "c.fmpz_divexact_si", "f"], [18, 1, 1, "c.fmpz_divexact_si", "g"], [18, 1, 1, "c.fmpz_divexact_si", "h"]], "fmpz_divexact_ui": [[18, 1, 1, "c.fmpz_divexact_ui", "f"], [18, 1, 1, "c.fmpz_divexact_ui", "g"], [18, 1, 1, "c.fmpz_divexact_ui", "h"]], "fmpz_divides": [[18, 1, 1, "c.fmpz_divides", "g"], [18, 1, 1, "c.fmpz_divides", "h"], [18, 1, 1, "c.fmpz_divides", "q"]], "fmpz_divides_mod_list": [[18, 1, 1, "c.fmpz_divides_mod_list", "a"], [18, 1, 1, "c.fmpz_divides_mod_list", "b"], [18, 1, 1, "c.fmpz_divides_mod_list", "n"], [18, 1, 1, "c.fmpz_divides_mod_list", "xlength"], [18, 1, 1, "c.fmpz_divides_mod_list", "xstart"], [18, 1, 1, "c.fmpz_divides_mod_list", "xstride"]], "fmpz_divisible": [[18, 1, 1, "c.fmpz_divisible", "f"], [18, 1, 1, "c.fmpz_divisible", "g"]], "fmpz_divisible_si": [[18, 1, 1, "c.fmpz_divisible_si", "f"], [18, 1, 1, "c.fmpz_divisible_si", "g"]], "fmpz_divisor_in_residue_class_lenstra": [[18, 1, 1, "c.fmpz_divisor_in_residue_class_lenstra", "fac"], [18, 1, 1, "c.fmpz_divisor_in_residue_class_lenstra", "n"], [18, 1, 1, "c.fmpz_divisor_in_residue_class_lenstra", "r"], [18, 1, 1, "c.fmpz_divisor_in_residue_class_lenstra", "s"]], "fmpz_divisor_sigma": [[18, 1, 1, "c.fmpz_divisor_sigma", "k"], [18, 1, 1, "c.fmpz_divisor_sigma", "n"], [18, 1, 1, "c.fmpz_divisor_sigma", "res"]], "fmpz_dlog": [[18, 1, 1, "c.fmpz_dlog", "x"]], "fmpz_equal": [[18, 1, 1, "c.fmpz_equal", "f"], [18, 1, 1, "c.fmpz_equal", "g"]], "fmpz_equal_si": [[18, 1, 1, "c.fmpz_equal_si", "f"], [18, 1, 1, "c.fmpz_equal_si", "g"]], "fmpz_equal_ui": [[18, 1, 1, "c.fmpz_equal_ui", "f"], [18, 1, 1, "c.fmpz_equal_ui", "g"]], "fmpz_euler_phi": [[18, 1, 1, "c.fmpz_euler_phi", "n"], [18, 1, 1, "c.fmpz_euler_phi", "res"]], "fmpz_fac_ui": [[18, 1, 1, "c.fmpz_fac_ui", "f"], [18, 1, 1, "c.fmpz_fac_ui", "n"]], "fmpz_factor": [[19, 1, 1, "c.fmpz_factor", "factor"], [19, 1, 1, "c.fmpz_factor", "n"]], "fmpz_factor_clear": [[19, 1, 1, "c.fmpz_factor_clear", "factor"]], "fmpz_factor_divisor_sigma": [[18, 1, 1, "c.fmpz_factor_divisor_sigma", "fac"], [18, 1, 1, "c.fmpz_factor_divisor_sigma", "k"], [18, 1, 1, "c.fmpz_factor_divisor_sigma", "res"]], "fmpz_factor_ecm": [[19, 1, 1, "c.fmpz_factor_ecm", "B1"], [19, 1, 1, "c.fmpz_factor_ecm", "B2"], [19, 1, 1, "c.fmpz_factor_ecm", "curves"], [19, 1, 1, "c.fmpz_factor_ecm", "f"], [19, 1, 1, "c.fmpz_factor_ecm", "n_in"], [19, 1, 1, "c.fmpz_factor_ecm", "state"]], "fmpz_factor_ecm_add": [[19, 1, 1, "c.fmpz_factor_ecm_add", "ecm_inf"], [19, 1, 1, "c.fmpz_factor_ecm_add", "n"], [19, 1, 1, "c.fmpz_factor_ecm_add", "x"], [19, 1, 1, "c.fmpz_factor_ecm_add", "x0"], [19, 1, 1, "c.fmpz_factor_ecm_add", "x1"], [19, 1, 1, "c.fmpz_factor_ecm_add", "x2"], [19, 1, 1, "c.fmpz_factor_ecm_add", "z"], [19, 1, 1, "c.fmpz_factor_ecm_add", "z0"], [19, 1, 1, "c.fmpz_factor_ecm_add", "z1"], [19, 1, 1, "c.fmpz_factor_ecm_add", "z2"]], "fmpz_factor_ecm_addmod": [[19, 1, 1, "c.fmpz_factor_ecm_addmod", "a"], [19, 1, 1, "c.fmpz_factor_ecm_addmod", "b"], [19, 1, 1, "c.fmpz_factor_ecm_addmod", "c"], [19, 1, 1, "c.fmpz_factor_ecm_addmod", "n"], [19, 1, 1, "c.fmpz_factor_ecm_addmod", "n_size"]], "fmpz_factor_ecm_clear": [[19, 1, 1, "c.fmpz_factor_ecm_clear", "ecm_inf"]], "fmpz_factor_ecm_double": [[19, 1, 1, "c.fmpz_factor_ecm_double", "ecm_inf"], [19, 1, 1, "c.fmpz_factor_ecm_double", "n"], [19, 1, 1, "c.fmpz_factor_ecm_double", "x"], [19, 1, 1, "c.fmpz_factor_ecm_double", "x0"], [19, 1, 1, "c.fmpz_factor_ecm_double", "z"], [19, 1, 1, "c.fmpz_factor_ecm_double", "z0"]], "fmpz_factor_ecm_init": [[19, 1, 1, "c.fmpz_factor_ecm_init", "ecm_inf"], [19, 1, 1, "c.fmpz_factor_ecm_init", "sz"]], "fmpz_factor_ecm_mul_montgomery_ladder": [[19, 1, 1, "c.fmpz_factor_ecm_mul_montgomery_ladder", "ecm_inf"], [19, 1, 1, "c.fmpz_factor_ecm_mul_montgomery_ladder", "k"], [19, 1, 1, "c.fmpz_factor_ecm_mul_montgomery_ladder", "n"], [19, 1, 1, "c.fmpz_factor_ecm_mul_montgomery_ladder", "x"], [19, 1, 1, "c.fmpz_factor_ecm_mul_montgomery_ladder", "x0"], [19, 1, 1, "c.fmpz_factor_ecm_mul_montgomery_ladder", "z"], [19, 1, 1, "c.fmpz_factor_ecm_mul_montgomery_ladder", "z0"]], "fmpz_factor_ecm_select_curve": [[19, 1, 1, "c.fmpz_factor_ecm_select_curve", "ecm_inf"], [19, 1, 1, "c.fmpz_factor_ecm_select_curve", "f"], [19, 1, 1, "c.fmpz_factor_ecm_select_curve", "n"], [19, 1, 1, "c.fmpz_factor_ecm_select_curve", "sigma"]], "fmpz_factor_ecm_stage_I": [[19, 1, 1, "c.fmpz_factor_ecm_stage_I", "B1"], [19, 1, 1, "c.fmpz_factor_ecm_stage_I", "ecm_inf"], [19, 1, 1, "c.fmpz_factor_ecm_stage_I", "f"], [19, 1, 1, "c.fmpz_factor_ecm_stage_I", "n"], [19, 1, 1, "c.fmpz_factor_ecm_stage_I", "num"], [19, 1, 1, "c.fmpz_factor_ecm_stage_I", "prime_array"]], "fmpz_factor_ecm_stage_II": [[19, 1, 1, "c.fmpz_factor_ecm_stage_II", "B1"], [19, 1, 1, "c.fmpz_factor_ecm_stage_II", "B2"], [19, 1, 1, "c.fmpz_factor_ecm_stage_II", "P"], [19, 1, 1, "c.fmpz_factor_ecm_stage_II", "ecm_inf"], [19, 1, 1, "c.fmpz_factor_ecm_stage_II", "f"], [19, 1, 1, "c.fmpz_factor_ecm_stage_II", "n"]], "fmpz_factor_ecm_submod": [[19, 1, 1, "c.fmpz_factor_ecm_submod", "a"], [19, 1, 1, "c.fmpz_factor_ecm_submod", "b"], [19, 1, 1, "c.fmpz_factor_ecm_submod", "n"], [19, 1, 1, "c.fmpz_factor_ecm_submod", "n_size"], [19, 1, 1, "c.fmpz_factor_ecm_submod", "x"]], "fmpz_factor_euler_phi": [[18, 1, 1, "c.fmpz_factor_euler_phi", "fac"], [18, 1, 1, "c.fmpz_factor_euler_phi", "res"]], "fmpz_factor_expand_iterative": [[19, 1, 1, "c.fmpz_factor_expand_iterative", "factor"], [19, 1, 1, "c.fmpz_factor_expand_iterative", "n"]], "fmpz_factor_init": [[19, 1, 1, "c.fmpz_factor_init", "factor"]], "fmpz_factor_moebius_mu": [[18, 1, 1, "c.fmpz_factor_moebius_mu", "fac"]], "fmpz_factor_pollard_brent": [[19, 1, 1, "c.fmpz_factor_pollard_brent", "factor"], [19, 1, 1, "c.fmpz_factor_pollard_brent", "max_iters"], [19, 1, 1, "c.fmpz_factor_pollard_brent", "max_tries"], [19, 1, 1, "c.fmpz_factor_pollard_brent", "n"], [19, 1, 1, "c.fmpz_factor_pollard_brent", "state"]], "fmpz_factor_pollard_brent_single": [[19, 1, 1, "c.fmpz_factor_pollard_brent_single", "ai"], [19, 1, 1, "c.fmpz_factor_pollard_brent_single", "max_iters"], [19, 1, 1, "c.fmpz_factor_pollard_brent_single", "n_in"], [19, 1, 1, "c.fmpz_factor_pollard_brent_single", "p_factor"], [19, 1, 1, "c.fmpz_factor_pollard_brent_single", "yi"]], "fmpz_factor_pp1": [[19, 1, 1, "c.fmpz_factor_pp1", "B1"], [19, 1, 1, "c.fmpz_factor_pp1", "B2_sqrt"], [19, 1, 1, "c.fmpz_factor_pp1", "c"], [19, 1, 1, "c.fmpz_factor_pp1", "factor"], [19, 1, 1, "c.fmpz_factor_pp1", "n"]], "fmpz_factor_refine": [[19, 1, 1, "c.fmpz_factor_refine", "f"], [19, 1, 1, "c.fmpz_factor_refine", "res"]], "fmpz_factor_si": [[19, 1, 1, "c.fmpz_factor_si", "factor"], [19, 1, 1, "c.fmpz_factor_si", "n"]], "fmpz_factor_smooth": [[19, 1, 1, "c.fmpz_factor_smooth", "bits"], [19, 1, 1, "c.fmpz_factor_smooth", "factor"], [19, 1, 1, "c.fmpz_factor_smooth", "n"], [19, 1, 1, "c.fmpz_factor_smooth", "proved"]], "fmpz_factor_trial": [[19, 1, 1, "c.fmpz_factor_trial", "factor"], [19, 1, 1, "c.fmpz_factor_trial", "n"], [19, 1, 1, "c.fmpz_factor_trial", "num_primes"]], "fmpz_factor_trial_range": [[19, 1, 1, "c.fmpz_factor_trial_range", "factor"], [19, 1, 1, "c.fmpz_factor_trial_range", "n"], [19, 1, 1, "c.fmpz_factor_trial_range", "num_primes"], [19, 1, 1, "c.fmpz_factor_trial_range", "start"]], "fmpz_fdiv_q": [[18, 1, 1, "c.fmpz_fdiv_q", "f"], [18, 1, 1, "c.fmpz_fdiv_q", "g"], [18, 1, 1, "c.fmpz_fdiv_q", "h"]], "fmpz_fdiv_q_2exp": [[18, 1, 1, "c.fmpz_fdiv_q_2exp", "exp"], [18, 1, 1, "c.fmpz_fdiv_q_2exp", "f"], [18, 1, 1, "c.fmpz_fdiv_q_2exp", "g"]], "fmpz_fdiv_q_si": [[18, 1, 1, "c.fmpz_fdiv_q_si", "f"], [18, 1, 1, "c.fmpz_fdiv_q_si", "g"], [18, 1, 1, "c.fmpz_fdiv_q_si", "h"]], "fmpz_fdiv_q_ui": [[18, 1, 1, "c.fmpz_fdiv_q_ui", "f"], [18, 1, 1, "c.fmpz_fdiv_q_ui", "g"], [18, 1, 1, "c.fmpz_fdiv_q_ui", "h"]], "fmpz_fdiv_qr": [[18, 1, 1, "c.fmpz_fdiv_qr", "f"], [18, 1, 1, "c.fmpz_fdiv_qr", "g"], [18, 1, 1, "c.fmpz_fdiv_qr", "h"], [18, 1, 1, "c.fmpz_fdiv_qr", "s"]], "fmpz_fdiv_qr_preinvn": [[18, 1, 1, "c.fmpz_fdiv_qr_preinvn", "f"], [18, 1, 1, "c.fmpz_fdiv_qr_preinvn", "g"], [18, 1, 1, "c.fmpz_fdiv_qr_preinvn", "h"], [18, 1, 1, "c.fmpz_fdiv_qr_preinvn", "hinv"], [18, 1, 1, "c.fmpz_fdiv_qr_preinvn", "s"]], "fmpz_fdiv_r": [[18, 1, 1, "c.fmpz_fdiv_r", "g"], [18, 1, 1, "c.fmpz_fdiv_r", "h"], [18, 1, 1, "c.fmpz_fdiv_r", "s"]], "fmpz_fdiv_r_2exp": [[18, 1, 1, "c.fmpz_fdiv_r_2exp", "exp"], [18, 1, 1, "c.fmpz_fdiv_r_2exp", "g"], [18, 1, 1, "c.fmpz_fdiv_r_2exp", "s"]], "fmpz_fdiv_ui": [[18, 1, 1, "c.fmpz_fdiv_ui", "g"], [18, 1, 1, "c.fmpz_fdiv_ui", "h"]], "fmpz_fib_ui": [[18, 1, 1, "c.fmpz_fib_ui", "f"], [18, 1, 1, "c.fmpz_fib_ui", "n"]], "fmpz_fits_si": [[18, 1, 1, "c.fmpz_fits_si", "f"]], "fmpz_flog": [[18, 1, 1, "c.fmpz_flog", "b"], [18, 1, 1, "c.fmpz_flog", "x"]], "fmpz_flog_ui": [[18, 1, 1, "c.fmpz_flog_ui", "b"], [18, 1, 1, "c.fmpz_flog_ui", "x"]], "fmpz_fmma": [[18, 1, 1, "c.fmpz_fmma", "a"], [18, 1, 1, "c.fmpz_fmma", "b"], [18, 1, 1, "c.fmpz_fmma", "c"], [18, 1, 1, "c.fmpz_fmma", "d"], [18, 1, 1, "c.fmpz_fmma", "f"]], "fmpz_fmms": [[18, 1, 1, "c.fmpz_fmms", "a"], [18, 1, 1, "c.fmpz_fmms", "b"], [18, 1, 1, "c.fmpz_fmms", "c"], [18, 1, 1, "c.fmpz_fmms", "d"], [18, 1, 1, "c.fmpz_fmms", "f"]], "fmpz_fprint": [[18, 1, 1, "c.fmpz_fprint", "file"], [18, 1, 1, "c.fmpz_fprint", "x"]], "fmpz_fread": [[18, 1, 1, "c.fmpz_fread", "f"], [18, 1, 1, "c.fmpz_fread", "file"]], "fmpz_gcd": [[18, 1, 1, "c.fmpz_gcd", "f"], [18, 1, 1, "c.fmpz_gcd", "g"], [18, 1, 1, "c.fmpz_gcd", "h"]], "fmpz_gcd3": [[18, 1, 1, "c.fmpz_gcd3", "a"], [18, 1, 1, "c.fmpz_gcd3", "b"], [18, 1, 1, "c.fmpz_gcd3", "c"], [18, 1, 1, "c.fmpz_gcd3", "f"]], "fmpz_gcd_ui": [[18, 1, 1, "c.fmpz_gcd_ui", "f"], [18, 1, 1, "c.fmpz_gcd_ui", "g"], [18, 1, 1, "c.fmpz_gcd_ui", "h"]], "fmpz_gcdinv": [[18, 1, 1, "c.fmpz_gcdinv", "a"], [18, 1, 1, "c.fmpz_gcdinv", "d"], [18, 1, 1, "c.fmpz_gcdinv", "f"], [18, 1, 1, "c.fmpz_gcdinv", "g"]], "fmpz_get_d": [[18, 1, 1, "c.fmpz_get_d", "f"]], "fmpz_get_d_2exp": [[18, 1, 1, "c.fmpz_get_d_2exp", "exp"], [18, 1, 1, "c.fmpz_get_d_2exp", "f"]], "fmpz_get_mpf": [[18, 1, 1, "c.fmpz_get_mpf", "f"], [18, 1, 1, "c.fmpz_get_mpf", "x"]], "fmpz_get_mpfr": [[18, 1, 1, "c.fmpz_get_mpfr", "f"], [18, 1, 1, "c.fmpz_get_mpfr", "rnd"], [18, 1, 1, "c.fmpz_get_mpfr", "x"]], "fmpz_get_mpn": [[18, 1, 1, "c.fmpz_get_mpn", "n"], [18, 1, 1, "c.fmpz_get_mpn", "n_in"]], "fmpz_get_mpz": [[18, 1, 1, "c.fmpz_get_mpz", "f"], [18, 1, 1, "c.fmpz_get_mpz", "x"]], "fmpz_get_nmod": [[18, 1, 1, "c.fmpz_get_nmod", "f"], [18, 1, 1, "c.fmpz_get_nmod", "mod"]], "fmpz_get_si": [[18, 1, 1, "c.fmpz_get_si", "f"]], "fmpz_get_str": [[18, 1, 1, "c.fmpz_get_str", "b"], [18, 1, 1, "c.fmpz_get_str", "f"], [18, 1, 1, "c.fmpz_get_str", "str"]], "fmpz_get_ui": [[18, 1, 1, "c.fmpz_get_ui", "f"]], "fmpz_get_ui_array": [[18, 1, 1, "c.fmpz_get_ui_array", "in"], [18, 1, 1, "c.fmpz_get_ui_array", "n"], [18, 1, 1, "c.fmpz_get_ui_array", "out"]], "fmpz_get_uiui": [[18, 1, 1, "c.fmpz_get_uiui", "f"], [18, 1, 1, "c.fmpz_get_uiui", "hi"], [18, 1, 1, "c.fmpz_get_uiui", "low"]], "fmpz_init": [[18, 1, 1, "c.fmpz_init", "f"]], "fmpz_init2": [[18, 1, 1, "c.fmpz_init2", "f"], [18, 1, 1, "c.fmpz_init2", "limbs"]], "fmpz_init_set": [[18, 1, 1, "c.fmpz_init_set", "f"], [18, 1, 1, "c.fmpz_init_set", "g"]], "fmpz_init_set_readonly": [[18, 1, 1, "c.fmpz_init_set_readonly", "f"], [18, 1, 1, "c.fmpz_init_set_readonly", "z"]], "fmpz_init_set_si": [[18, 1, 1, "c.fmpz_init_set_si", "f"], [18, 1, 1, "c.fmpz_init_set_si", "g"]], "fmpz_init_set_ui": [[18, 1, 1, "c.fmpz_init_set_ui", "f"], [18, 1, 1, "c.fmpz_init_set_ui", "g"]], "fmpz_inp_raw": [[18, 1, 1, "c.fmpz_inp_raw", "fin"], [18, 1, 1, "c.fmpz_inp_raw", "x"]], "fmpz_invmod": [[18, 1, 1, "c.fmpz_invmod", "f"], [18, 1, 1, "c.fmpz_invmod", "g"], [18, 1, 1, "c.fmpz_invmod", "h"]], "fmpz_is_even": [[18, 1, 1, "c.fmpz_is_even", "f"]], "fmpz_is_odd": [[18, 1, 1, "c.fmpz_is_odd", "f"]], "fmpz_is_one": [[18, 1, 1, "c.fmpz_is_one", "f"]], "fmpz_is_perfect_power": [[18, 1, 1, "c.fmpz_is_perfect_power", "f"], [18, 1, 1, "c.fmpz_is_perfect_power", "root"]], "fmpz_is_pm1": [[18, 1, 1, "c.fmpz_is_pm1", "f"]], "fmpz_is_prime": [[18, 1, 1, "c.fmpz_is_prime", "n"]], "fmpz_is_prime_morrison": [[18, 1, 1, "c.fmpz_is_prime_morrison", "F"], [18, 1, 1, "c.fmpz_is_prime_morrison", "R"], [18, 1, 1, "c.fmpz_is_prime_morrison", "n"], [18, 1, 1, "c.fmpz_is_prime_morrison", "num_pp1"], [18, 1, 1, "c.fmpz_is_prime_morrison", "pp1"]], "fmpz_is_prime_pocklington": [[18, 1, 1, "c.fmpz_is_prime_pocklington", "F"], [18, 1, 1, "c.fmpz_is_prime_pocklington", "R"], [18, 1, 1, "c.fmpz_is_prime_pocklington", "n"], [18, 1, 1, "c.fmpz_is_prime_pocklington", "num_pm1"], [18, 1, 1, "c.fmpz_is_prime_pocklington", "pm1"]], "fmpz_is_prime_pseudosquare": [[18, 1, 1, "c.fmpz_is_prime_pseudosquare", "n"]], "fmpz_is_probabprime": [[18, 1, 1, "c.fmpz_is_probabprime", "p"]], "fmpz_is_probabprime_BPSW": [[18, 1, 1, "c.fmpz_is_probabprime_BPSW", "n"]], "fmpz_is_probabprime_lucas": [[18, 1, 1, "c.fmpz_is_probabprime_lucas", "n"]], "fmpz_is_square": [[18, 1, 1, "c.fmpz_is_square", "f"]], "fmpz_is_strong_probabprime": [[18, 1, 1, "c.fmpz_is_strong_probabprime", "a"], [18, 1, 1, "c.fmpz_is_strong_probabprime", "n"]], "fmpz_is_zero": [[18, 1, 1, "c.fmpz_is_zero", "f"]], "fmpz_jacobi": [[18, 1, 1, "c.fmpz_jacobi", "a"], [18, 1, 1, "c.fmpz_jacobi", "n"]], "fmpz_kronecker": [[18, 1, 1, "c.fmpz_kronecker", "a"], [18, 1, 1, "c.fmpz_kronecker", "n"]], "fmpz_lcm": [[18, 1, 1, "c.fmpz_lcm", "f"], [18, 1, 1, "c.fmpz_lcm", "g"], [18, 1, 1, "c.fmpz_lcm", "h"]], "fmpz_lll": [[20, 1, 1, "c.fmpz_lll", "B"], [20, 1, 1, "c.fmpz_lll", "U"], [20, 1, 1, "c.fmpz_lll", "fl"]], "fmpz_lll_advance_check_babai": [[20, 1, 1, "c.fmpz_lll_advance_check_babai", "A"], [20, 1, 1, "c.fmpz_lll_advance_check_babai", "B"], [20, 1, 1, "c.fmpz_lll_advance_check_babai", "U"], [20, 1, 1, "c.fmpz_lll_advance_check_babai", "a"], [20, 1, 1, "c.fmpz_lll_advance_check_babai", "appB"], [20, 1, 1, "c.fmpz_lll_advance_check_babai", "cur_kappa"], [20, 1, 1, "c.fmpz_lll_advance_check_babai", "expo"], [20, 1, 1, "c.fmpz_lll_advance_check_babai", "fl"], [20, 1, 1, "c.fmpz_lll_advance_check_babai", "kappa"], [20, 1, 1, "c.fmpz_lll_advance_check_babai", "kappamax"], [20, 1, 1, "c.fmpz_lll_advance_check_babai", "mu"], [20, 1, 1, "c.fmpz_lll_advance_check_babai", "n"], [20, 1, 1, "c.fmpz_lll_advance_check_babai", "r"], [20, 1, 1, "c.fmpz_lll_advance_check_babai", "s"], [20, 1, 1, "c.fmpz_lll_advance_check_babai", "zeros"]], "fmpz_lll_advance_check_babai_heuristic_d": [[20, 1, 1, "c.fmpz_lll_advance_check_babai_heuristic_d", "A"], [20, 1, 1, "c.fmpz_lll_advance_check_babai_heuristic_d", "B"], [20, 1, 1, "c.fmpz_lll_advance_check_babai_heuristic_d", "U"], [20, 1, 1, "c.fmpz_lll_advance_check_babai_heuristic_d", "a"], [20, 1, 1, "c.fmpz_lll_advance_check_babai_heuristic_d", "appB"], [20, 1, 1, "c.fmpz_lll_advance_check_babai_heuristic_d", "cur_kappa"], [20, 1, 1, "c.fmpz_lll_advance_check_babai_heuristic_d", "expo"], [20, 1, 1, "c.fmpz_lll_advance_check_babai_heuristic_d", "fl"], [20, 1, 1, "c.fmpz_lll_advance_check_babai_heuristic_d", "kappa"], [20, 1, 1, "c.fmpz_lll_advance_check_babai_heuristic_d", "kappamax"], [20, 1, 1, "c.fmpz_lll_advance_check_babai_heuristic_d", "mu"], [20, 1, 1, "c.fmpz_lll_advance_check_babai_heuristic_d", "n"], [20, 1, 1, "c.fmpz_lll_advance_check_babai_heuristic_d", "r"], [20, 1, 1, "c.fmpz_lll_advance_check_babai_heuristic_d", "s"], [20, 1, 1, "c.fmpz_lll_advance_check_babai_heuristic_d", "zeros"]], "fmpz_lll_check_babai": [[20, 1, 1, "c.fmpz_lll_check_babai", "A"], [20, 1, 1, "c.fmpz_lll_check_babai", "B"], [20, 1, 1, "c.fmpz_lll_check_babai", "U"], [20, 1, 1, "c.fmpz_lll_check_babai", "a"], [20, 1, 1, "c.fmpz_lll_check_babai", "appB"], [20, 1, 1, "c.fmpz_lll_check_babai", "expo"], [20, 1, 1, "c.fmpz_lll_check_babai", "fl"], [20, 1, 1, "c.fmpz_lll_check_babai", "kappa"], [20, 1, 1, "c.fmpz_lll_check_babai", "kappamax"], [20, 1, 1, "c.fmpz_lll_check_babai", "mu"], [20, 1, 1, "c.fmpz_lll_check_babai", "n"], [20, 1, 1, "c.fmpz_lll_check_babai", "r"], [20, 1, 1, "c.fmpz_lll_check_babai", "s"], [20, 1, 1, "c.fmpz_lll_check_babai", "zeros"]], "fmpz_lll_check_babai_heuristic": [[20, 1, 1, "c.fmpz_lll_check_babai_heuristic", "A"], [20, 1, 1, "c.fmpz_lll_check_babai_heuristic", "B"], [20, 1, 1, "c.fmpz_lll_check_babai_heuristic", "U"], [20, 1, 1, "c.fmpz_lll_check_babai_heuristic", "a"], [20, 1, 1, "c.fmpz_lll_check_babai_heuristic", "appB"], [20, 1, 1, "c.fmpz_lll_check_babai_heuristic", "fl"], [20, 1, 1, "c.fmpz_lll_check_babai_heuristic", "kappa"], [20, 1, 1, "c.fmpz_lll_check_babai_heuristic", "kappamax"], [20, 1, 1, "c.fmpz_lll_check_babai_heuristic", "mu"], [20, 1, 1, "c.fmpz_lll_check_babai_heuristic", "n"], [20, 1, 1, "c.fmpz_lll_check_babai_heuristic", "prec"], [20, 1, 1, "c.fmpz_lll_check_babai_heuristic", "r"], [20, 1, 1, "c.fmpz_lll_check_babai_heuristic", "rtmp"], [20, 1, 1, "c.fmpz_lll_check_babai_heuristic", "s"], [20, 1, 1, "c.fmpz_lll_check_babai_heuristic", "tmp"], [20, 1, 1, "c.fmpz_lll_check_babai_heuristic", "zeros"]], "fmpz_lll_check_babai_heuristic_d": [[20, 1, 1, "c.fmpz_lll_check_babai_heuristic_d", "A"], [20, 1, 1, "c.fmpz_lll_check_babai_heuristic_d", "B"], [20, 1, 1, "c.fmpz_lll_check_babai_heuristic_d", "U"], [20, 1, 1, "c.fmpz_lll_check_babai_heuristic_d", "a"], [20, 1, 1, "c.fmpz_lll_check_babai_heuristic_d", "appB"], [20, 1, 1, "c.fmpz_lll_check_babai_heuristic_d", "expo"], [20, 1, 1, "c.fmpz_lll_check_babai_heuristic_d", "fl"], [20, 1, 1, "c.fmpz_lll_check_babai_heuristic_d", "kappa"], [20, 1, 1, "c.fmpz_lll_check_babai_heuristic_d", "kappamax"], [20, 1, 1, "c.fmpz_lll_check_babai_heuristic_d", "mu"], [20, 1, 1, "c.fmpz_lll_check_babai_heuristic_d", "n"], [20, 1, 1, "c.fmpz_lll_check_babai_heuristic_d", "r"], [20, 1, 1, "c.fmpz_lll_check_babai_heuristic_d", "s"], [20, 1, 1, "c.fmpz_lll_check_babai_heuristic_d", "zeros"]], "fmpz_lll_context_init": [[20, 1, 1, "c.fmpz_lll_context_init", "delta"], [20, 1, 1, "c.fmpz_lll_context_init", "eta"], [20, 1, 1, "c.fmpz_lll_context_init", "fl"], [20, 1, 1, "c.fmpz_lll_context_init", "gt"], [20, 1, 1, "c.fmpz_lll_context_init", "rt"]], "fmpz_lll_context_init_default": [[20, 1, 1, "c.fmpz_lll_context_init_default", "fl"]], "fmpz_lll_d": [[20, 1, 1, "c.fmpz_lll_d", "B"], [20, 1, 1, "c.fmpz_lll_d", "U"], [20, 1, 1, "c.fmpz_lll_d", "fl"]], "fmpz_lll_d_heuristic": [[20, 1, 1, "c.fmpz_lll_d_heuristic", "B"], [20, 1, 1, "c.fmpz_lll_d_heuristic", "U"], [20, 1, 1, "c.fmpz_lll_d_heuristic", "fl"]], "fmpz_lll_d_heuristic_with_removal": [[20, 1, 1, "c.fmpz_lll_d_heuristic_with_removal", "B"], [20, 1, 1, "c.fmpz_lll_d_heuristic_with_removal", "U"], [20, 1, 1, "c.fmpz_lll_d_heuristic_with_removal", "fl"], [20, 1, 1, "c.fmpz_lll_d_heuristic_with_removal", "gs_B"]], "fmpz_lll_d_with_removal": [[20, 1, 1, "c.fmpz_lll_d_with_removal", "B"], [20, 1, 1, "c.fmpz_lll_d_with_removal", "U"], [20, 1, 1, "c.fmpz_lll_d_with_removal", "fl"], [20, 1, 1, "c.fmpz_lll_d_with_removal", "gs_B"]], "fmpz_lll_d_with_removal_knapsack": [[20, 1, 1, "c.fmpz_lll_d_with_removal_knapsack", "B"], [20, 1, 1, "c.fmpz_lll_d_with_removal_knapsack", "U"], [20, 1, 1, "c.fmpz_lll_d_with_removal_knapsack", "fl"], [20, 1, 1, "c.fmpz_lll_d_with_removal_knapsack", "gs_B"]], "fmpz_lll_heuristic_dot": [[20, 1, 1, "c.fmpz_lll_heuristic_dot", "B"], [20, 1, 1, "c.fmpz_lll_heuristic_dot", "exp_adj"], [20, 1, 1, "c.fmpz_lll_heuristic_dot", "j"], [20, 1, 1, "c.fmpz_lll_heuristic_dot", "k"], [20, 1, 1, "c.fmpz_lll_heuristic_dot", "len2"], [20, 1, 1, "c.fmpz_lll_heuristic_dot", "vec1"], [20, 1, 1, "c.fmpz_lll_heuristic_dot", "vec2"]], "fmpz_lll_is_reduced": [[20, 1, 1, "c.fmpz_lll_is_reduced", "B"], [20, 1, 1, "c.fmpz_lll_is_reduced", "fl"], [20, 1, 1, "c.fmpz_lll_is_reduced", "prec"]], "fmpz_lll_is_reduced_d": [[20, 1, 1, "c.fmpz_lll_is_reduced_d", "B"], [20, 1, 1, "c.fmpz_lll_is_reduced_d", "fl"]], "fmpz_lll_is_reduced_d_with_removal": [[20, 1, 1, "c.fmpz_lll_is_reduced_d_with_removal", "B"], [20, 1, 1, "c.fmpz_lll_is_reduced_d_with_removal", "fl"], [20, 1, 1, "c.fmpz_lll_is_reduced_d_with_removal", "gs_B"], [20, 1, 1, "c.fmpz_lll_is_reduced_d_with_removal", "newd"]], "fmpz_lll_is_reduced_mpfr": [[20, 1, 1, "c.fmpz_lll_is_reduced_mpfr", "B"], [20, 1, 1, "c.fmpz_lll_is_reduced_mpfr", "fl"], [20, 1, 1, "c.fmpz_lll_is_reduced_mpfr", "prec"]], "fmpz_lll_is_reduced_mpfr_with_removal": [[20, 1, 1, "c.fmpz_lll_is_reduced_mpfr_with_removal", "B"], [20, 1, 1, "c.fmpz_lll_is_reduced_mpfr_with_removal", "fl"], [20, 1, 1, "c.fmpz_lll_is_reduced_mpfr_with_removal", "gs_B"], [20, 1, 1, "c.fmpz_lll_is_reduced_mpfr_with_removal", "newd"], [20, 1, 1, "c.fmpz_lll_is_reduced_mpfr_with_removal", "prec"]], "fmpz_lll_is_reduced_with_removal": [[20, 1, 1, "c.fmpz_lll_is_reduced_with_removal", "B"], [20, 1, 1, "c.fmpz_lll_is_reduced_with_removal", "fl"], [20, 1, 1, "c.fmpz_lll_is_reduced_with_removal", "gs_B"], [20, 1, 1, "c.fmpz_lll_is_reduced_with_removal", "newd"], [20, 1, 1, "c.fmpz_lll_is_reduced_with_removal", "prec"]], "fmpz_lll_mpf": [[20, 1, 1, "c.fmpz_lll_mpf", "B"], [20, 1, 1, "c.fmpz_lll_mpf", "U"], [20, 1, 1, "c.fmpz_lll_mpf", "fl"]], "fmpz_lll_mpf2": [[20, 1, 1, "c.fmpz_lll_mpf2", "B"], [20, 1, 1, "c.fmpz_lll_mpf2", "U"], [20, 1, 1, "c.fmpz_lll_mpf2", "fl"], [20, 1, 1, "c.fmpz_lll_mpf2", "prec"]], "fmpz_lll_mpf2_with_removal": [[20, 1, 1, "c.fmpz_lll_mpf2_with_removal", "B"], [20, 1, 1, "c.fmpz_lll_mpf2_with_removal", "U"], [20, 1, 1, "c.fmpz_lll_mpf2_with_removal", "fl"], [20, 1, 1, "c.fmpz_lll_mpf2_with_removal", "gs_B"], [20, 1, 1, "c.fmpz_lll_mpf2_with_removal", "prec"]], "fmpz_lll_mpf_with_removal": [[20, 1, 1, "c.fmpz_lll_mpf_with_removal", "B"], [20, 1, 1, "c.fmpz_lll_mpf_with_removal", "U"], [20, 1, 1, "c.fmpz_lll_mpf_with_removal", "fl"], [20, 1, 1, "c.fmpz_lll_mpf_with_removal", "gs_B"]], "fmpz_lll_randtest": [[20, 1, 1, "c.fmpz_lll_randtest", "fl"], [20, 1, 1, "c.fmpz_lll_randtest", "state"]], "fmpz_lll_shift": [[20, 1, 1, "c.fmpz_lll_shift", "B"]], "fmpz_lll_storjohann_ulll": [[20, 1, 1, "c.fmpz_lll_storjohann_ulll", "FM"], [20, 1, 1, "c.fmpz_lll_storjohann_ulll", "fl"], [20, 1, 1, "c.fmpz_lll_storjohann_ulll", "new_size"]], "fmpz_lll_with_removal": [[20, 1, 1, "c.fmpz_lll_with_removal", "B"], [20, 1, 1, "c.fmpz_lll_with_removal", "U"], [20, 1, 1, "c.fmpz_lll_with_removal", "fl"], [20, 1, 1, "c.fmpz_lll_with_removal", "gs_B"]], "fmpz_lll_with_removal_ulll": [[20, 1, 1, "c.fmpz_lll_with_removal_ulll", "FM"], [20, 1, 1, "c.fmpz_lll_with_removal_ulll", "UM"], [20, 1, 1, "c.fmpz_lll_with_removal_ulll", "fl"], [20, 1, 1, "c.fmpz_lll_with_removal_ulll", "gs_B"], [20, 1, 1, "c.fmpz_lll_with_removal_ulll", "new_size"]], "fmpz_lll_wrapper": [[20, 1, 1, "c.fmpz_lll_wrapper", "B"], [20, 1, 1, "c.fmpz_lll_wrapper", "U"], [20, 1, 1, "c.fmpz_lll_wrapper", "fl"]], "fmpz_lll_wrapper_with_removal": [[20, 1, 1, "c.fmpz_lll_wrapper_with_removal", "B"], [20, 1, 1, "c.fmpz_lll_wrapper_with_removal", "U"], [20, 1, 1, "c.fmpz_lll_wrapper_with_removal", "fl"], [20, 1, 1, "c.fmpz_lll_wrapper_with_removal", "gs_B"]], "fmpz_lll_wrapper_with_removal_knapsack": [[20, 1, 1, "c.fmpz_lll_wrapper_with_removal_knapsack", "B"], [20, 1, 1, "c.fmpz_lll_wrapper_with_removal_knapsack", "U"], [20, 1, 1, "c.fmpz_lll_wrapper_with_removal_knapsack", "fl"], [20, 1, 1, "c.fmpz_lll_wrapper_with_removal_knapsack", "gs_B"]], "fmpz_lucas_chain": [[18, 1, 1, "c.fmpz_lucas_chain", "A"], [18, 1, 1, "c.fmpz_lucas_chain", "Vm"], [18, 1, 1, "c.fmpz_lucas_chain", "Vm1"], [18, 1, 1, "c.fmpz_lucas_chain", "m"], [18, 1, 1, "c.fmpz_lucas_chain", "n"]], "fmpz_lucas_chain_VtoU": [[18, 1, 1, "c.fmpz_lucas_chain_VtoU", "A"], [18, 1, 1, "c.fmpz_lucas_chain_VtoU", "B"], [18, 1, 1, "c.fmpz_lucas_chain_VtoU", "Dinv"], [18, 1, 1, "c.fmpz_lucas_chain_VtoU", "Um"], [18, 1, 1, "c.fmpz_lucas_chain_VtoU", "Um1"], [18, 1, 1, "c.fmpz_lucas_chain_VtoU", "Vm"], [18, 1, 1, "c.fmpz_lucas_chain_VtoU", "Vm1"], [18, 1, 1, "c.fmpz_lucas_chain_VtoU", "n"]], "fmpz_lucas_chain_add": [[18, 1, 1, "c.fmpz_lucas_chain_add", "A"], [18, 1, 1, "c.fmpz_lucas_chain_add", "B"], [18, 1, 1, "c.fmpz_lucas_chain_add", "Um"], [18, 1, 1, "c.fmpz_lucas_chain_add", "Um1"], [18, 1, 1, "c.fmpz_lucas_chain_add", "Umn"], [18, 1, 1, "c.fmpz_lucas_chain_add", "Umn1"], [18, 1, 1, "c.fmpz_lucas_chain_add", "Un"], [18, 1, 1, "c.fmpz_lucas_chain_add", "Un1"], [18, 1, 1, "c.fmpz_lucas_chain_add", "n"]], "fmpz_lucas_chain_double": [[18, 1, 1, "c.fmpz_lucas_chain_double", "A"], [18, 1, 1, "c.fmpz_lucas_chain_double", "B"], [18, 1, 1, "c.fmpz_lucas_chain_double", "U2m"], [18, 1, 1, "c.fmpz_lucas_chain_double", "U2m1"], [18, 1, 1, "c.fmpz_lucas_chain_double", "Um"], [18, 1, 1, "c.fmpz_lucas_chain_double", "Um1"], [18, 1, 1, "c.fmpz_lucas_chain_double", "n"]], "fmpz_lucas_chain_full": [[18, 1, 1, "c.fmpz_lucas_chain_full", "A"], [18, 1, 1, "c.fmpz_lucas_chain_full", "B"], [18, 1, 1, "c.fmpz_lucas_chain_full", "Vm"], [18, 1, 1, "c.fmpz_lucas_chain_full", "Vm1"], [18, 1, 1, "c.fmpz_lucas_chain_full", "m"], [18, 1, 1, "c.fmpz_lucas_chain_full", "n"]], "fmpz_lucas_chain_mul": [[18, 1, 1, "c.fmpz_lucas_chain_mul", "A"], [18, 1, 1, "c.fmpz_lucas_chain_mul", "B"], [18, 1, 1, "c.fmpz_lucas_chain_mul", "Ukm"], [18, 1, 1, "c.fmpz_lucas_chain_mul", "Ukm1"], [18, 1, 1, "c.fmpz_lucas_chain_mul", "Um"], [18, 1, 1, "c.fmpz_lucas_chain_mul", "Um1"], [18, 1, 1, "c.fmpz_lucas_chain_mul", "k"], [18, 1, 1, "c.fmpz_lucas_chain_mul", "n"]], "fmpz_mat_CRT_ui": [[21, 1, 1, "c.fmpz_mat_CRT_ui", "m1"], [21, 1, 1, "c.fmpz_mat_CRT_ui", "mat1"], [21, 1, 1, "c.fmpz_mat_CRT_ui", "mat2"], [21, 1, 1, "c.fmpz_mat_CRT_ui", "res"], [21, 1, 1, "c.fmpz_mat_CRT_ui", "sign"]], "fmpz_mat_add": [[21, 1, 1, "c.fmpz_mat_add", "A"], [21, 1, 1, "c.fmpz_mat_add", "B"], [21, 1, 1, "c.fmpz_mat_add", "C"]], "fmpz_mat_can_solve": [[21, 1, 1, "c.fmpz_mat_can_solve", "A"], [21, 1, 1, "c.fmpz_mat_can_solve", "B"], [21, 1, 1, "c.fmpz_mat_can_solve", "X"], [21, 1, 1, "c.fmpz_mat_can_solve", "den"]], "fmpz_mat_can_solve_fflu": [[21, 1, 1, "c.fmpz_mat_can_solve_fflu", "A"], [21, 1, 1, "c.fmpz_mat_can_solve_fflu", "B"], [21, 1, 1, "c.fmpz_mat_can_solve_fflu", "X"], [21, 1, 1, "c.fmpz_mat_can_solve_fflu", "den"]], "fmpz_mat_can_solve_multi_mod_den": [[21, 1, 1, "c.fmpz_mat_can_solve_multi_mod_den", "A"], [21, 1, 1, "c.fmpz_mat_can_solve_multi_mod_den", "B"], [21, 1, 1, "c.fmpz_mat_can_solve_multi_mod_den", "X"], [21, 1, 1, "c.fmpz_mat_can_solve_multi_mod_den", "den"]], "fmpz_mat_charpoly": [[21, 1, 1, "c.fmpz_mat_charpoly", "cp"], [21, 1, 1, "c.fmpz_mat_charpoly", "mat"]], "fmpz_mat_charpoly_berkowitz": [[21, 1, 1, "c.fmpz_mat_charpoly_berkowitz", "cp"], [21, 1, 1, "c.fmpz_mat_charpoly_berkowitz", "mat"]], "fmpz_mat_charpoly_modular": [[21, 1, 1, "c.fmpz_mat_charpoly_modular", "cp"], [21, 1, 1, "c.fmpz_mat_charpoly_modular", "mat"]], "fmpz_mat_chol_d": [[21, 1, 1, "c.fmpz_mat_chol_d", "A"], [21, 1, 1, "c.fmpz_mat_chol_d", "R"]], "fmpz_mat_clear": [[21, 1, 1, "c.fmpz_mat_clear", "mat"]], "fmpz_mat_col_equal": [[21, 1, 1, "c.fmpz_mat_col_equal", "M"], [21, 1, 1, "c.fmpz_mat_col_equal", "m"], [21, 1, 1, "c.fmpz_mat_col_equal", "n"]], "fmpz_mat_col_partition": [[21, 1, 1, "c.fmpz_mat_col_partition", "M"], [21, 1, 1, "c.fmpz_mat_col_partition", "part"], [21, 1, 1, "c.fmpz_mat_col_partition", "short_circuit"]], "fmpz_mat_concat_horizontal": [[21, 1, 1, "c.fmpz_mat_concat_horizontal", "mat1"], [21, 1, 1, "c.fmpz_mat_concat_horizontal", "mat2"], [21, 1, 1, "c.fmpz_mat_concat_horizontal", "res"]], "fmpz_mat_concat_vertical": [[21, 1, 1, "c.fmpz_mat_concat_vertical", "mat1"], [21, 1, 1, "c.fmpz_mat_concat_vertical", "mat2"], [21, 1, 1, "c.fmpz_mat_concat_vertical", "res"]], "fmpz_mat_content": [[21, 1, 1, "c.fmpz_mat_content", "A"], [21, 1, 1, "c.fmpz_mat_content", "mat_gcd"]], "fmpz_mat_det": [[21, 1, 1, "c.fmpz_mat_det", "A"], [21, 1, 1, "c.fmpz_mat_det", "det"]], "fmpz_mat_det_bareiss": [[21, 1, 1, "c.fmpz_mat_det_bareiss", "A"], [21, 1, 1, "c.fmpz_mat_det_bareiss", "det"]], "fmpz_mat_det_bound": [[21, 1, 1, "c.fmpz_mat_det_bound", "A"], [21, 1, 1, "c.fmpz_mat_det_bound", "bound"]], "fmpz_mat_det_cofactor": [[21, 1, 1, "c.fmpz_mat_det_cofactor", "A"], [21, 1, 1, "c.fmpz_mat_det_cofactor", "det"]], "fmpz_mat_det_divisor": [[21, 1, 1, "c.fmpz_mat_det_divisor", "A"], [21, 1, 1, "c.fmpz_mat_det_divisor", "d"]], "fmpz_mat_det_modular": [[21, 1, 1, "c.fmpz_mat_det_modular", "A"], [21, 1, 1, "c.fmpz_mat_det_modular", "det"], [21, 1, 1, "c.fmpz_mat_det_modular", "proved"]], "fmpz_mat_det_modular_accelerated": [[21, 1, 1, "c.fmpz_mat_det_modular_accelerated", "A"], [21, 1, 1, "c.fmpz_mat_det_modular_accelerated", "det"], [21, 1, 1, "c.fmpz_mat_det_modular_accelerated", "proved"]], "fmpz_mat_det_modular_given_divisor": [[21, 1, 1, "c.fmpz_mat_det_modular_given_divisor", "A"], [21, 1, 1, "c.fmpz_mat_det_modular_given_divisor", "d"], [21, 1, 1, "c.fmpz_mat_det_modular_given_divisor", "det"], [21, 1, 1, "c.fmpz_mat_det_modular_given_divisor", "proved"]], "fmpz_mat_entry": [[21, 1, 1, "c.fmpz_mat_entry", "i"], [21, 1, 1, "c.fmpz_mat_entry", "j"], [21, 1, 1, "c.fmpz_mat_entry", "mat"]], "fmpz_mat_equal": [[21, 1, 1, "c.fmpz_mat_equal", "mat1"], [21, 1, 1, "c.fmpz_mat_equal", "mat2"]], "fmpz_mat_fflu": [[21, 1, 1, "c.fmpz_mat_fflu", "A"], [21, 1, 1, "c.fmpz_mat_fflu", "B"], [21, 1, 1, "c.fmpz_mat_fflu", "den"], [21, 1, 1, "c.fmpz_mat_fflu", "perm"], [21, 1, 1, "c.fmpz_mat_fflu", "rank_check"]], "fmpz_mat_find_pivot_any": [[21, 1, 1, "c.fmpz_mat_find_pivot_any", "c"], [21, 1, 1, "c.fmpz_mat_find_pivot_any", "end_row"], [21, 1, 1, "c.fmpz_mat_find_pivot_any", "mat"], [21, 1, 1, "c.fmpz_mat_find_pivot_any", "start_row"]], "fmpz_mat_fmpz_vec_mul": [[21, 1, 1, "c.fmpz_mat_fmpz_vec_mul", "B"], [21, 1, 1, "c.fmpz_mat_fmpz_vec_mul", "a"], [21, 1, 1, "c.fmpz_mat_fmpz_vec_mul", "alen"], [21, 1, 1, "c.fmpz_mat_fmpz_vec_mul", "c"]], "fmpz_mat_fmpz_vec_mul_ptr": [[21, 1, 1, "c.fmpz_mat_fmpz_vec_mul_ptr", "B"], [21, 1, 1, "c.fmpz_mat_fmpz_vec_mul_ptr", "a"], [21, 1, 1, "c.fmpz_mat_fmpz_vec_mul_ptr", "alen"], [21, 1, 1, "c.fmpz_mat_fmpz_vec_mul_ptr", "c"]], "fmpz_mat_fprint": [[21, 1, 1, "c.fmpz_mat_fprint", "file"], [21, 1, 1, "c.fmpz_mat_fprint", "mat"]], "fmpz_mat_fprint_pretty": [[21, 1, 1, "c.fmpz_mat_fprint_pretty", "file"], [21, 1, 1, "c.fmpz_mat_fprint_pretty", "mat"]], "fmpz_mat_fread": [[21, 1, 1, "c.fmpz_mat_fread", "file"], [21, 1, 1, "c.fmpz_mat_fread", "mat"]], "fmpz_mat_get_d_mat": [[21, 1, 1, "c.fmpz_mat_get_d_mat", "A"], [21, 1, 1, "c.fmpz_mat_get_d_mat", "B"]], "fmpz_mat_get_d_mat_transpose": [[21, 1, 1, "c.fmpz_mat_get_d_mat_transpose", "A"], [21, 1, 1, "c.fmpz_mat_get_d_mat_transpose", "B"]], "fmpz_mat_get_mpf_mat": [[21, 1, 1, "c.fmpz_mat_get_mpf_mat", "A"], [21, 1, 1, "c.fmpz_mat_get_mpf_mat", "B"]], "fmpz_mat_get_nmod_mat": [[21, 1, 1, "c.fmpz_mat_get_nmod_mat", "A"], [21, 1, 1, "c.fmpz_mat_get_nmod_mat", "Amod"]], "fmpz_mat_gram": [[21, 1, 1, "c.fmpz_mat_gram", "A"], [21, 1, 1, "c.fmpz_mat_gram", "B"]], "fmpz_mat_hadamard": [[21, 1, 1, "c.fmpz_mat_hadamard", "H"]], "fmpz_mat_hnf": [[21, 1, 1, "c.fmpz_mat_hnf", "A"], [21, 1, 1, "c.fmpz_mat_hnf", "H"]], "fmpz_mat_hnf_classical": [[21, 1, 1, "c.fmpz_mat_hnf_classical", "A"], [21, 1, 1, "c.fmpz_mat_hnf_classical", "H"]], "fmpz_mat_hnf_minors": [[21, 1, 1, "c.fmpz_mat_hnf_minors", "A"], [21, 1, 1, "c.fmpz_mat_hnf_minors", "H"]], "fmpz_mat_hnf_modular": [[21, 1, 1, "c.fmpz_mat_hnf_modular", "A"], [21, 1, 1, "c.fmpz_mat_hnf_modular", "D"], [21, 1, 1, "c.fmpz_mat_hnf_modular", "H"]], "fmpz_mat_hnf_modular_eldiv": [[21, 1, 1, "c.fmpz_mat_hnf_modular_eldiv", "A"], [21, 1, 1, "c.fmpz_mat_hnf_modular_eldiv", "D"]], "fmpz_mat_hnf_pernet_stein": [[21, 1, 1, "c.fmpz_mat_hnf_pernet_stein", "A"], [21, 1, 1, "c.fmpz_mat_hnf_pernet_stein", "H"], [21, 1, 1, "c.fmpz_mat_hnf_pernet_stein", "state"]], "fmpz_mat_hnf_transform": [[21, 1, 1, "c.fmpz_mat_hnf_transform", "A"], [21, 1, 1, "c.fmpz_mat_hnf_transform", "H"], [21, 1, 1, "c.fmpz_mat_hnf_transform", "U"]], "fmpz_mat_hnf_xgcd": [[21, 1, 1, "c.fmpz_mat_hnf_xgcd", "A"], [21, 1, 1, "c.fmpz_mat_hnf_xgcd", "H"]], "fmpz_mat_howell_form_mod": [[21, 1, 1, "c.fmpz_mat_howell_form_mod", "A"], [21, 1, 1, "c.fmpz_mat_howell_form_mod", "mod"]], "fmpz_mat_init": [[21, 1, 1, "c.fmpz_mat_init", "cols"], [21, 1, 1, "c.fmpz_mat_init", "mat"], [21, 1, 1, "c.fmpz_mat_init", "rows"]], "fmpz_mat_init_set": [[21, 1, 1, "c.fmpz_mat_init_set", "mat"], [21, 1, 1, "c.fmpz_mat_init_set", "src"]], "fmpz_mat_inv": [[21, 1, 1, "c.fmpz_mat_inv", "A"], [21, 1, 1, "c.fmpz_mat_inv", "Ainv"], [21, 1, 1, "c.fmpz_mat_inv", "den"]], "fmpz_mat_invert_cols": [[21, 1, 1, "c.fmpz_mat_invert_cols", "mat"], [21, 1, 1, "c.fmpz_mat_invert_cols", "perm"]], "fmpz_mat_invert_rows": [[21, 1, 1, "c.fmpz_mat_invert_rows", "mat"], [21, 1, 1, "c.fmpz_mat_invert_rows", "perm"]], "fmpz_mat_is_empty": [[21, 1, 1, "c.fmpz_mat_is_empty", "mat"]], "fmpz_mat_is_hadamard": [[21, 1, 1, "c.fmpz_mat_is_hadamard", "H"]], "fmpz_mat_is_in_hnf": [[21, 1, 1, "c.fmpz_mat_is_in_hnf", "A"]], "fmpz_mat_is_in_rref_with_rank": [[21, 1, 1, "c.fmpz_mat_is_in_rref_with_rank", "A"], [21, 1, 1, "c.fmpz_mat_is_in_rref_with_rank", "den"], [21, 1, 1, "c.fmpz_mat_is_in_rref_with_rank", "rank"]], "fmpz_mat_is_in_snf": [[21, 1, 1, "c.fmpz_mat_is_in_snf", "A"]], "fmpz_mat_is_one": [[21, 1, 1, "c.fmpz_mat_is_one", "mat"]], "fmpz_mat_is_reduced": [[21, 1, 1, "c.fmpz_mat_is_reduced", "A"], [21, 1, 1, "c.fmpz_mat_is_reduced", "delta"], [21, 1, 1, "c.fmpz_mat_is_reduced", "eta"]], "fmpz_mat_is_reduced_gram": [[21, 1, 1, "c.fmpz_mat_is_reduced_gram", "A"], [21, 1, 1, "c.fmpz_mat_is_reduced_gram", "delta"], [21, 1, 1, "c.fmpz_mat_is_reduced_gram", "eta"]], "fmpz_mat_is_reduced_gram_with_removal": [[21, 1, 1, "c.fmpz_mat_is_reduced_gram_with_removal", "A"], [21, 1, 1, "c.fmpz_mat_is_reduced_gram_with_removal", "delta"], [21, 1, 1, "c.fmpz_mat_is_reduced_gram_with_removal", "eta"], [21, 1, 1, "c.fmpz_mat_is_reduced_gram_with_removal", "gs_B"], [21, 1, 1, "c.fmpz_mat_is_reduced_gram_with_removal", "newd"]], "fmpz_mat_is_reduced_with_removal": [[21, 1, 1, "c.fmpz_mat_is_reduced_with_removal", "A"], [21, 1, 1, "c.fmpz_mat_is_reduced_with_removal", "delta"], [21, 1, 1, "c.fmpz_mat_is_reduced_with_removal", "eta"], [21, 1, 1, "c.fmpz_mat_is_reduced_with_removal", "gs_B"], [21, 1, 1, "c.fmpz_mat_is_reduced_with_removal", "newd"]], "fmpz_mat_is_square": [[21, 1, 1, "c.fmpz_mat_is_square", "mat"]], "fmpz_mat_is_zero": [[21, 1, 1, "c.fmpz_mat_is_zero", "mat"]], "fmpz_mat_is_zero_row": [[21, 1, 1, "c.fmpz_mat_is_zero_row", "i"], [21, 1, 1, "c.fmpz_mat_is_zero_row", "mat"]], "fmpz_mat_kronecker_product": [[21, 1, 1, "c.fmpz_mat_kronecker_product", "A"], [21, 1, 1, "c.fmpz_mat_kronecker_product", "B"], [21, 1, 1, "c.fmpz_mat_kronecker_product", "C"]], "fmpz_mat_lll_original": [[21, 1, 1, "c.fmpz_mat_lll_original", "A"], [21, 1, 1, "c.fmpz_mat_lll_original", "delta"], [21, 1, 1, "c.fmpz_mat_lll_original", "eta"]], "fmpz_mat_lll_storjohann": [[21, 1, 1, "c.fmpz_mat_lll_storjohann", "A"], [21, 1, 1, "c.fmpz_mat_lll_storjohann", "delta"], [21, 1, 1, "c.fmpz_mat_lll_storjohann", "eta"]], "fmpz_mat_minpoly": [[21, 1, 1, "c.fmpz_mat_minpoly", "cp"], [21, 1, 1, "c.fmpz_mat_minpoly", "mat"]], "fmpz_mat_minpoly_modular": [[21, 1, 1, "c.fmpz_mat_minpoly_modular", "cp"], [21, 1, 1, "c.fmpz_mat_minpoly_modular", "mat"]], "fmpz_mat_mul": [[21, 1, 1, "c.fmpz_mat_mul", "A"], [21, 1, 1, "c.fmpz_mat_mul", "B"], [21, 1, 1, "c.fmpz_mat_mul", "C"]], "fmpz_mat_mul_blas": [[21, 1, 1, "c.fmpz_mat_mul_blas", "A"], [21, 1, 1, "c.fmpz_mat_mul_blas", "B"], [21, 1, 1, "c.fmpz_mat_mul_blas", "C"]], "fmpz_mat_mul_classical": [[21, 1, 1, "c.fmpz_mat_mul_classical", "A"], [21, 1, 1, "c.fmpz_mat_mul_classical", "B"], [21, 1, 1, "c.fmpz_mat_mul_classical", "C"]], "fmpz_mat_mul_fft": [[21, 1, 1, "c.fmpz_mat_mul_fft", "A"], [21, 1, 1, "c.fmpz_mat_mul_fft", "B"], [21, 1, 1, "c.fmpz_mat_mul_fft", "C"]], "fmpz_mat_mul_fmpz_vec": [[21, 1, 1, "c.fmpz_mat_mul_fmpz_vec", "A"], [21, 1, 1, "c.fmpz_mat_mul_fmpz_vec", "b"], [21, 1, 1, "c.fmpz_mat_mul_fmpz_vec", "blen"], [21, 1, 1, "c.fmpz_mat_mul_fmpz_vec", "c"]], "fmpz_mat_mul_fmpz_vec_ptr": [[21, 1, 1, "c.fmpz_mat_mul_fmpz_vec_ptr", "A"], [21, 1, 1, "c.fmpz_mat_mul_fmpz_vec_ptr", "b"], [21, 1, 1, "c.fmpz_mat_mul_fmpz_vec_ptr", "blen"], [21, 1, 1, "c.fmpz_mat_mul_fmpz_vec_ptr", "c"]], "fmpz_mat_mul_multi_mod": [[21, 1, 1, "c.fmpz_mat_mul_multi_mod", "A"], [21, 1, 1, "c.fmpz_mat_mul_multi_mod", "B"], [21, 1, 1, "c.fmpz_mat_mul_multi_mod", "C"]], "fmpz_mat_mul_strassen": [[21, 1, 1, "c.fmpz_mat_mul_strassen", "A"], [21, 1, 1, "c.fmpz_mat_mul_strassen", "B"], [21, 1, 1, "c.fmpz_mat_mul_strassen", "C"]], "fmpz_mat_multi_CRT_ui": [[21, 1, 1, "c.fmpz_mat_multi_CRT_ui", "mat"], [21, 1, 1, "c.fmpz_mat_multi_CRT_ui", "nres"], [21, 1, 1, "c.fmpz_mat_multi_CRT_ui", "residues"], [21, 1, 1, "c.fmpz_mat_multi_CRT_ui", "sign"]], "fmpz_mat_multi_CRT_ui_precomp": [[21, 1, 1, "c.fmpz_mat_multi_CRT_ui_precomp", "comb"], [21, 1, 1, "c.fmpz_mat_multi_CRT_ui_precomp", "mat"], [21, 1, 1, "c.fmpz_mat_multi_CRT_ui_precomp", "nres"], [21, 1, 1, "c.fmpz_mat_multi_CRT_ui_precomp", "residues"], [21, 1, 1, "c.fmpz_mat_multi_CRT_ui_precomp", "sign"], [21, 1, 1, "c.fmpz_mat_multi_CRT_ui_precomp", "temp"]], "fmpz_mat_multi_mod_ui": [[21, 1, 1, "c.fmpz_mat_multi_mod_ui", "mat"], [21, 1, 1, "c.fmpz_mat_multi_mod_ui", "nres"], [21, 1, 1, "c.fmpz_mat_multi_mod_ui", "residues"]], "fmpz_mat_multi_mod_ui_precomp": [[21, 1, 1, "c.fmpz_mat_multi_mod_ui_precomp", "comb"], [21, 1, 1, "c.fmpz_mat_multi_mod_ui_precomp", "mat"], [21, 1, 1, "c.fmpz_mat_multi_mod_ui_precomp", "nres"], [21, 1, 1, "c.fmpz_mat_multi_mod_ui_precomp", "residues"], [21, 1, 1, "c.fmpz_mat_multi_mod_ui_precomp", "temp"]], "fmpz_mat_neg": [[21, 1, 1, "c.fmpz_mat_neg", "A"], [21, 1, 1, "c.fmpz_mat_neg", "B"]], "fmpz_mat_nullspace": [[21, 1, 1, "c.fmpz_mat_nullspace", "A"], [21, 1, 1, "c.fmpz_mat_nullspace", "B"]], "fmpz_mat_one": [[21, 1, 1, "c.fmpz_mat_one", "mat"]], "fmpz_mat_pow": [[21, 1, 1, "c.fmpz_mat_pow", "A"], [21, 1, 1, "c.fmpz_mat_pow", "B"], [21, 1, 1, "c.fmpz_mat_pow", "e"]], "fmpz_mat_print": [[21, 1, 1, "c.fmpz_mat_print", "mat"]], "fmpz_mat_print_pretty": [[21, 1, 1, "c.fmpz_mat_print_pretty", "mat"]], "fmpz_mat_randajtai": [[21, 1, 1, "c.fmpz_mat_randajtai", "alpha"], [21, 1, 1, "c.fmpz_mat_randajtai", "mat"], [21, 1, 1, "c.fmpz_mat_randajtai", "state"]], "fmpz_mat_randbits": [[21, 1, 1, "c.fmpz_mat_randbits", "bits"], [21, 1, 1, "c.fmpz_mat_randbits", "mat"], [21, 1, 1, "c.fmpz_mat_randbits", "state"]], "fmpz_mat_randdet": [[21, 1, 1, "c.fmpz_mat_randdet", "det"], [21, 1, 1, "c.fmpz_mat_randdet", "mat"], [21, 1, 1, "c.fmpz_mat_randdet", "state"]], "fmpz_mat_randintrel": [[21, 1, 1, "c.fmpz_mat_randintrel", "bits"], [21, 1, 1, "c.fmpz_mat_randintrel", "mat"], [21, 1, 1, "c.fmpz_mat_randintrel", "state"]], "fmpz_mat_randntrulike": [[21, 1, 1, "c.fmpz_mat_randntrulike", "bits"], [21, 1, 1, "c.fmpz_mat_randntrulike", "mat"], [21, 1, 1, "c.fmpz_mat_randntrulike", "q"], [21, 1, 1, "c.fmpz_mat_randntrulike", "state"]], "fmpz_mat_randntrulike2": [[21, 1, 1, "c.fmpz_mat_randntrulike2", "bits"], [21, 1, 1, "c.fmpz_mat_randntrulike2", "mat"], [21, 1, 1, "c.fmpz_mat_randntrulike2", "q"], [21, 1, 1, "c.fmpz_mat_randntrulike2", "state"]], "fmpz_mat_randops": [[21, 1, 1, "c.fmpz_mat_randops", "count"], [21, 1, 1, "c.fmpz_mat_randops", "mat"], [21, 1, 1, "c.fmpz_mat_randops", "state"]], "fmpz_mat_randpermdiag": [[21, 1, 1, "c.fmpz_mat_randpermdiag", "diag"], [21, 1, 1, "c.fmpz_mat_randpermdiag", "mat"], [21, 1, 1, "c.fmpz_mat_randpermdiag", "n"], [21, 1, 1, "c.fmpz_mat_randpermdiag", "state"]], "fmpz_mat_randrank": [[21, 1, 1, "c.fmpz_mat_randrank", "bits"], [21, 1, 1, "c.fmpz_mat_randrank", "mat"], [21, 1, 1, "c.fmpz_mat_randrank", "rank"], [21, 1, 1, "c.fmpz_mat_randrank", "state"]], "fmpz_mat_randsimdioph": [[21, 1, 1, "c.fmpz_mat_randsimdioph", "bits"], [21, 1, 1, "c.fmpz_mat_randsimdioph", "bits2"], [21, 1, 1, "c.fmpz_mat_randsimdioph", "mat"], [21, 1, 1, "c.fmpz_mat_randsimdioph", "state"]], "fmpz_mat_randtest": [[21, 1, 1, "c.fmpz_mat_randtest", "bits"], [21, 1, 1, "c.fmpz_mat_randtest", "mat"], [21, 1, 1, "c.fmpz_mat_randtest", "state"]], "fmpz_mat_rank": [[21, 1, 1, "c.fmpz_mat_rank", "A"]], "fmpz_mat_read": [[21, 1, 1, "c.fmpz_mat_read", "mat"]], "fmpz_mat_row_equal": [[21, 1, 1, "c.fmpz_mat_row_equal", "M"], [21, 1, 1, "c.fmpz_mat_row_equal", "m"], [21, 1, 1, "c.fmpz_mat_row_equal", "n"]], "fmpz_mat_rref": [[21, 1, 1, "c.fmpz_mat_rref", "A"], [21, 1, 1, "c.fmpz_mat_rref", "B"], [21, 1, 1, "c.fmpz_mat_rref", "den"]], "fmpz_mat_rref_fflu": [[21, 1, 1, "c.fmpz_mat_rref_fflu", "A"], [21, 1, 1, "c.fmpz_mat_rref_fflu", "B"], [21, 1, 1, "c.fmpz_mat_rref_fflu", "den"]], "fmpz_mat_rref_fraction_free": [[21, 1, 1, "c.fmpz_mat_rref_fraction_free", "A"], [21, 1, 1, "c.fmpz_mat_rref_fraction_free", "B"], [21, 1, 1, "c.fmpz_mat_rref_fraction_free", "den"], [21, 1, 1, "c.fmpz_mat_rref_fraction_free", "perm"]], "fmpz_mat_rref_mod": [[21, 1, 1, "c.fmpz_mat_rref_mod", "A"], [21, 1, 1, "c.fmpz_mat_rref_mod", "p"], [21, 1, 1, "c.fmpz_mat_rref_mod", "perm"]], "fmpz_mat_rref_mul": [[21, 1, 1, "c.fmpz_mat_rref_mul", "A"], [21, 1, 1, "c.fmpz_mat_rref_mul", "B"], [21, 1, 1, "c.fmpz_mat_rref_mul", "den"]], "fmpz_mat_scalar_addmul_fmpz": [[21, 1, 1, "c.fmpz_mat_scalar_addmul_fmpz", "A"], [21, 1, 1, "c.fmpz_mat_scalar_addmul_fmpz", "B"], [21, 1, 1, "c.fmpz_mat_scalar_addmul_fmpz", "c"]], "fmpz_mat_scalar_addmul_nmod_mat_fmpz": [[21, 1, 1, "c.fmpz_mat_scalar_addmul_nmod_mat_fmpz", "A"], [21, 1, 1, "c.fmpz_mat_scalar_addmul_nmod_mat_fmpz", "B"], [21, 1, 1, "c.fmpz_mat_scalar_addmul_nmod_mat_fmpz", "c"]], "fmpz_mat_scalar_addmul_nmod_mat_ui": [[21, 1, 1, "c.fmpz_mat_scalar_addmul_nmod_mat_ui", "A"], [21, 1, 1, "c.fmpz_mat_scalar_addmul_nmod_mat_ui", "B"], [21, 1, 1, "c.fmpz_mat_scalar_addmul_nmod_mat_ui", "c"]], "fmpz_mat_scalar_addmul_si": [[21, 1, 1, "c.fmpz_mat_scalar_addmul_si", "A"], [21, 1, 1, "c.fmpz_mat_scalar_addmul_si", "B"], [21, 1, 1, "c.fmpz_mat_scalar_addmul_si", "c"]], "fmpz_mat_scalar_addmul_ui": [[21, 1, 1, "c.fmpz_mat_scalar_addmul_ui", "A"], [21, 1, 1, "c.fmpz_mat_scalar_addmul_ui", "B"], [21, 1, 1, "c.fmpz_mat_scalar_addmul_ui", "c"]], "fmpz_mat_scalar_divexact_fmpz": [[21, 1, 1, "c.fmpz_mat_scalar_divexact_fmpz", "A"], [21, 1, 1, "c.fmpz_mat_scalar_divexact_fmpz", "B"], [21, 1, 1, "c.fmpz_mat_scalar_divexact_fmpz", "c"]], "fmpz_mat_scalar_divexact_si": [[21, 1, 1, "c.fmpz_mat_scalar_divexact_si", "A"], [21, 1, 1, "c.fmpz_mat_scalar_divexact_si", "B"], [21, 1, 1, "c.fmpz_mat_scalar_divexact_si", "c"]], "fmpz_mat_scalar_divexact_ui": [[21, 1, 1, "c.fmpz_mat_scalar_divexact_ui", "A"], [21, 1, 1, "c.fmpz_mat_scalar_divexact_ui", "B"], [21, 1, 1, "c.fmpz_mat_scalar_divexact_ui", "c"]], "fmpz_mat_scalar_mul_2exp": [[21, 1, 1, "c.fmpz_mat_scalar_mul_2exp", "A"], [21, 1, 1, "c.fmpz_mat_scalar_mul_2exp", "B"], [21, 1, 1, "c.fmpz_mat_scalar_mul_2exp", "exp"]], "fmpz_mat_scalar_mul_fmpz": [[21, 1, 1, "c.fmpz_mat_scalar_mul_fmpz", "A"], [21, 1, 1, "c.fmpz_mat_scalar_mul_fmpz", "B"], [21, 1, 1, "c.fmpz_mat_scalar_mul_fmpz", "c"]], "fmpz_mat_scalar_mul_si": [[21, 1, 1, "c.fmpz_mat_scalar_mul_si", "A"], [21, 1, 1, "c.fmpz_mat_scalar_mul_si", "B"], [21, 1, 1, "c.fmpz_mat_scalar_mul_si", "c"]], "fmpz_mat_scalar_mul_ui": [[21, 1, 1, "c.fmpz_mat_scalar_mul_ui", "A"], [21, 1, 1, "c.fmpz_mat_scalar_mul_ui", "B"], [21, 1, 1, "c.fmpz_mat_scalar_mul_ui", "c"]], "fmpz_mat_scalar_smod": [[21, 1, 1, "c.fmpz_mat_scalar_smod", "A"], [21, 1, 1, "c.fmpz_mat_scalar_smod", "B"], [21, 1, 1, "c.fmpz_mat_scalar_smod", "P"]], "fmpz_mat_scalar_submul_fmpz": [[21, 1, 1, "c.fmpz_mat_scalar_submul_fmpz", "A"], [21, 1, 1, "c.fmpz_mat_scalar_submul_fmpz", "B"], [21, 1, 1, "c.fmpz_mat_scalar_submul_fmpz", "c"]], "fmpz_mat_scalar_submul_si": [[21, 1, 1, "c.fmpz_mat_scalar_submul_si", "A"], [21, 1, 1, "c.fmpz_mat_scalar_submul_si", "B"], [21, 1, 1, "c.fmpz_mat_scalar_submul_si", "c"]], "fmpz_mat_scalar_submul_ui": [[21, 1, 1, "c.fmpz_mat_scalar_submul_ui", "A"], [21, 1, 1, "c.fmpz_mat_scalar_submul_ui", "B"], [21, 1, 1, "c.fmpz_mat_scalar_submul_ui", "c"]], "fmpz_mat_scalar_tdiv_q_2exp": [[21, 1, 1, "c.fmpz_mat_scalar_tdiv_q_2exp", "A"], [21, 1, 1, "c.fmpz_mat_scalar_tdiv_q_2exp", "B"], [21, 1, 1, "c.fmpz_mat_scalar_tdiv_q_2exp", "exp"]], "fmpz_mat_set": [[21, 1, 1, "c.fmpz_mat_set", "mat1"], [21, 1, 1, "c.fmpz_mat_set", "mat2"]], "fmpz_mat_set_nmod_mat": [[21, 1, 1, "c.fmpz_mat_set_nmod_mat", "A"], [21, 1, 1, "c.fmpz_mat_set_nmod_mat", "Amod"]], "fmpz_mat_set_nmod_mat_unsigned": [[21, 1, 1, "c.fmpz_mat_set_nmod_mat_unsigned", "A"], [21, 1, 1, "c.fmpz_mat_set_nmod_mat_unsigned", "Amod"]], "fmpz_mat_similarity": [[21, 1, 1, "c.fmpz_mat_similarity", "A"], [21, 1, 1, "c.fmpz_mat_similarity", "d"], [21, 1, 1, "c.fmpz_mat_similarity", "r"]], "fmpz_mat_snf": [[21, 1, 1, "c.fmpz_mat_snf", "A"], [21, 1, 1, "c.fmpz_mat_snf", "S"]], "fmpz_mat_snf_diagonal": [[21, 1, 1, "c.fmpz_mat_snf_diagonal", "A"], [21, 1, 1, "c.fmpz_mat_snf_diagonal", "S"]], "fmpz_mat_snf_iliopoulos": [[21, 1, 1, "c.fmpz_mat_snf_iliopoulos", "A"], [21, 1, 1, "c.fmpz_mat_snf_iliopoulos", "S"], [21, 1, 1, "c.fmpz_mat_snf_iliopoulos", "mod"]], "fmpz_mat_snf_kannan_bachem": [[21, 1, 1, "c.fmpz_mat_snf_kannan_bachem", "A"], [21, 1, 1, "c.fmpz_mat_snf_kannan_bachem", "S"]], "fmpz_mat_solve": [[21, 1, 1, "c.fmpz_mat_solve", "A"], [21, 1, 1, "c.fmpz_mat_solve", "B"], [21, 1, 1, "c.fmpz_mat_solve", "X"], [21, 1, 1, "c.fmpz_mat_solve", "den"]], "fmpz_mat_solve_bound": [[21, 1, 1, "c.fmpz_mat_solve_bound", "A"], [21, 1, 1, "c.fmpz_mat_solve_bound", "B"], [21, 1, 1, "c.fmpz_mat_solve_bound", "D"], [21, 1, 1, "c.fmpz_mat_solve_bound", "N"]], "fmpz_mat_solve_cramer": [[21, 1, 1, "c.fmpz_mat_solve_cramer", "A"], [21, 1, 1, "c.fmpz_mat_solve_cramer", "B"], [21, 1, 1, "c.fmpz_mat_solve_cramer", "X"], [21, 1, 1, "c.fmpz_mat_solve_cramer", "den"]], "fmpz_mat_solve_dixon": [[21, 1, 1, "c.fmpz_mat_solve_dixon", "A"], [21, 1, 1, "c.fmpz_mat_solve_dixon", "B"], [21, 1, 1, "c.fmpz_mat_solve_dixon", "M"], [21, 1, 1, "c.fmpz_mat_solve_dixon", "X"]], "fmpz_mat_solve_dixon_den": [[21, 1, 1, "c.fmpz_mat_solve_dixon_den", "A"], [21, 1, 1, "c.fmpz_mat_solve_dixon_den", "B"], [21, 1, 1, "c.fmpz_mat_solve_dixon_den", "X"], [21, 1, 1, "c.fmpz_mat_solve_dixon_den", "den"]], "fmpz_mat_solve_fflu": [[21, 1, 1, "c.fmpz_mat_solve_fflu", "A"], [21, 1, 1, "c.fmpz_mat_solve_fflu", "B"], [21, 1, 1, "c.fmpz_mat_solve_fflu", "X"], [21, 1, 1, "c.fmpz_mat_solve_fflu", "den"]], "fmpz_mat_solve_fflu_precomp": [[21, 1, 1, "c.fmpz_mat_solve_fflu_precomp", "B"], [21, 1, 1, "c.fmpz_mat_solve_fflu_precomp", "FFLU"], [21, 1, 1, "c.fmpz_mat_solve_fflu_precomp", "X"], [21, 1, 1, "c.fmpz_mat_solve_fflu_precomp", "perm"]], "fmpz_mat_solve_multi_mod_den": [[21, 1, 1, "c.fmpz_mat_solve_multi_mod_den", "A"], [21, 1, 1, "c.fmpz_mat_solve_multi_mod_den", "B"], [21, 1, 1, "c.fmpz_mat_solve_multi_mod_den", "X"], [21, 1, 1, "c.fmpz_mat_solve_multi_mod_den", "den"]], "fmpz_mat_sqr": [[21, 1, 1, "c.fmpz_mat_sqr", "A"], [21, 1, 1, "c.fmpz_mat_sqr", "B"]], "fmpz_mat_sqr_bodrato": [[21, 1, 1, "c.fmpz_mat_sqr_bodrato", "A"], [21, 1, 1, "c.fmpz_mat_sqr_bodrato", "B"]], "fmpz_mat_strong_echelon_form_mod": [[21, 1, 1, "c.fmpz_mat_strong_echelon_form_mod", "A"], [21, 1, 1, "c.fmpz_mat_strong_echelon_form_mod", "mod"]], "fmpz_mat_sub": [[21, 1, 1, "c.fmpz_mat_sub", "A"], [21, 1, 1, "c.fmpz_mat_sub", "B"], [21, 1, 1, "c.fmpz_mat_sub", "C"]], "fmpz_mat_swap": [[21, 1, 1, "c.fmpz_mat_swap", "mat1"], [21, 1, 1, "c.fmpz_mat_swap", "mat2"]], "fmpz_mat_swap_cols": [[21, 1, 1, "c.fmpz_mat_swap_cols", "mat"], [21, 1, 1, "c.fmpz_mat_swap_cols", "perm"], [21, 1, 1, "c.fmpz_mat_swap_cols", "r"], [21, 1, 1, "c.fmpz_mat_swap_cols", "s"]], "fmpz_mat_swap_entrywise": [[21, 1, 1, "c.fmpz_mat_swap_entrywise", "mat1"], [21, 1, 1, "c.fmpz_mat_swap_entrywise", "mat2"]], "fmpz_mat_swap_rows": [[21, 1, 1, "c.fmpz_mat_swap_rows", "mat"], [21, 1, 1, "c.fmpz_mat_swap_rows", "perm"], [21, 1, 1, "c.fmpz_mat_swap_rows", "r"], [21, 1, 1, "c.fmpz_mat_swap_rows", "s"]], "fmpz_mat_trace": [[21, 1, 1, "c.fmpz_mat_trace", "mat"], [21, 1, 1, "c.fmpz_mat_trace", "trace"]], "fmpz_mat_transpose": [[21, 1, 1, "c.fmpz_mat_transpose", "A"], [21, 1, 1, "c.fmpz_mat_transpose", "B"]], "fmpz_mat_window_clear": [[21, 1, 1, "c.fmpz_mat_window_clear", "window"]], "fmpz_mat_window_init": [[21, 1, 1, "c.fmpz_mat_window_init", "c1"], [21, 1, 1, "c.fmpz_mat_window_init", "c2"], [21, 1, 1, "c.fmpz_mat_window_init", "mat"], [21, 1, 1, "c.fmpz_mat_window_init", "r1"], [21, 1, 1, "c.fmpz_mat_window_init", "r2"], [21, 1, 1, "c.fmpz_mat_window_init", "window"]], "fmpz_mat_zero": [[21, 1, 1, "c.fmpz_mat_zero", "mat"]], "fmpz_mod": [[18, 1, 1, "c.fmpz_mod", "f"], [18, 1, 1, "c.fmpz_mod", "g"], [18, 1, 1, "c.fmpz_mod", "h"]], "fmpz_mod_add": [[22, 1, 1, "c.fmpz_mod_add", "a"], [22, 1, 1, "c.fmpz_mod_add", "b"], [22, 1, 1, "c.fmpz_mod_add", "c"], [22, 1, 1, "c.fmpz_mod_add", "ctx"]], "fmpz_mod_add_fmpz": [[22, 1, 1, "c.fmpz_mod_add_fmpz", "a"], [22, 1, 1, "c.fmpz_mod_add_fmpz", "b"], [22, 1, 1, "c.fmpz_mod_add_fmpz", "c"], [22, 1, 1, "c.fmpz_mod_add_fmpz", "ctx"]], "fmpz_mod_add_si": [[22, 1, 1, "c.fmpz_mod_add_si", "a"], [22, 1, 1, "c.fmpz_mod_add_si", "b"], [22, 1, 1, "c.fmpz_mod_add_si", "c"], [22, 1, 1, "c.fmpz_mod_add_si", "ctx"]], "fmpz_mod_add_ui": [[22, 1, 1, "c.fmpz_mod_add_ui", "a"], [22, 1, 1, "c.fmpz_mod_add_ui", "b"], [22, 1, 1, "c.fmpz_mod_add_ui", "c"], [22, 1, 1, "c.fmpz_mod_add_ui", "ctx"]], "fmpz_mod_berlekamp_massey_R_poly": [[26, 1, 1, "c.fmpz_mod_berlekamp_massey_R_poly", "B"]], "fmpz_mod_berlekamp_massey_V_poly": [[26, 1, 1, "c.fmpz_mod_berlekamp_massey_V_poly", "B"]], "fmpz_mod_berlekamp_massey_add_point": [[26, 1, 1, "c.fmpz_mod_berlekamp_massey_add_point", "B"], [26, 1, 1, "c.fmpz_mod_berlekamp_massey_add_point", "a"], [26, 1, 1, "c.fmpz_mod_berlekamp_massey_add_point", "ctx"]], "fmpz_mod_berlekamp_massey_add_points": [[26, 1, 1, "c.fmpz_mod_berlekamp_massey_add_points", "B"], [26, 1, 1, "c.fmpz_mod_berlekamp_massey_add_points", "a"], [26, 1, 1, "c.fmpz_mod_berlekamp_massey_add_points", "count"], [26, 1, 1, "c.fmpz_mod_berlekamp_massey_add_points", "ctx"]], "fmpz_mod_berlekamp_massey_add_zeros": [[26, 1, 1, "c.fmpz_mod_berlekamp_massey_add_zeros", "B"], [26, 1, 1, "c.fmpz_mod_berlekamp_massey_add_zeros", "count"], [26, 1, 1, "c.fmpz_mod_berlekamp_massey_add_zeros", "ctx"]], "fmpz_mod_berlekamp_massey_clear": [[26, 1, 1, "c.fmpz_mod_berlekamp_massey_clear", "B"], [26, 1, 1, "c.fmpz_mod_berlekamp_massey_clear", "ctx"]], "fmpz_mod_berlekamp_massey_init": [[26, 1, 1, "c.fmpz_mod_berlekamp_massey_init", "B"], [26, 1, 1, "c.fmpz_mod_berlekamp_massey_init", "ctx"]], "fmpz_mod_berlekamp_massey_point_count": [[26, 1, 1, "c.fmpz_mod_berlekamp_massey_point_count", "B"]], "fmpz_mod_berlekamp_massey_points": [[26, 1, 1, "c.fmpz_mod_berlekamp_massey_points", "B"]], "fmpz_mod_berlekamp_massey_reduce": [[26, 1, 1, "c.fmpz_mod_berlekamp_massey_reduce", "B"], [26, 1, 1, "c.fmpz_mod_berlekamp_massey_reduce", "ctx"]], "fmpz_mod_berlekamp_massey_start_over": [[26, 1, 1, "c.fmpz_mod_berlekamp_massey_start_over", "B"], [26, 1, 1, "c.fmpz_mod_berlekamp_massey_start_over", "ctx"]], "fmpz_mod_ctx_clear": [[22, 1, 1, "c.fmpz_mod_ctx_clear", "ctx"]], "fmpz_mod_ctx_init": [[22, 1, 1, "c.fmpz_mod_ctx_init", "ctx"], [22, 1, 1, "c.fmpz_mod_ctx_init", "n"]], "fmpz_mod_ctx_set_modulus": [[22, 1, 1, "c.fmpz_mod_ctx_set_modulus", "ctx"], [22, 1, 1, "c.fmpz_mod_ctx_set_modulus", "n"]], "fmpz_mod_discrete_log_pohlig_hellman_clear": [[22, 1, 1, "c.fmpz_mod_discrete_log_pohlig_hellman_clear", "L"]], "fmpz_mod_discrete_log_pohlig_hellman_init": [[22, 1, 1, "c.fmpz_mod_discrete_log_pohlig_hellman_init", "L"]], "fmpz_mod_discrete_log_pohlig_hellman_precompute_prime": [[22, 1, 1, "c.fmpz_mod_discrete_log_pohlig_hellman_precompute_prime", "L"], [22, 1, 1, "c.fmpz_mod_discrete_log_pohlig_hellman_precompute_prime", "p"]], "fmpz_mod_discrete_log_pohlig_hellman_primitive_root": [[22, 1, 1, "c.fmpz_mod_discrete_log_pohlig_hellman_primitive_root", "L"]], "fmpz_mod_discrete_log_pohlig_hellman_run": [[22, 1, 1, "c.fmpz_mod_discrete_log_pohlig_hellman_run", "L"], [22, 1, 1, "c.fmpz_mod_discrete_log_pohlig_hellman_run", "x"], [22, 1, 1, "c.fmpz_mod_discrete_log_pohlig_hellman_run", "y"]], "fmpz_mod_divides": [[22, 1, 1, "c.fmpz_mod_divides", "a"], [22, 1, 1, "c.fmpz_mod_divides", "b"], [22, 1, 1, "c.fmpz_mod_divides", "c"], [22, 1, 1, "c.fmpz_mod_divides", "ctx"]], "fmpz_mod_fmpz_sub": [[22, 1, 1, "c.fmpz_mod_fmpz_sub", "a"], [22, 1, 1, "c.fmpz_mod_fmpz_sub", "b"], [22, 1, 1, "c.fmpz_mod_fmpz_sub", "c"], [22, 1, 1, "c.fmpz_mod_fmpz_sub", "ctx"]], "fmpz_mod_inv": [[22, 1, 1, "c.fmpz_mod_inv", "a"], [22, 1, 1, "c.fmpz_mod_inv", "b"], [22, 1, 1, "c.fmpz_mod_inv", "ctx"]], "fmpz_mod_is_canonical": [[22, 1, 1, "c.fmpz_mod_is_canonical", "a"], [22, 1, 1, "c.fmpz_mod_is_canonical", "ctx"]], "fmpz_mod_is_one": [[22, 1, 1, "c.fmpz_mod_is_one", "a"], [22, 1, 1, "c.fmpz_mod_is_one", "ctx"]], "fmpz_mod_mat_add": [[23, 1, 1, "c.fmpz_mod_mat_add", "A"], [23, 1, 1, "c.fmpz_mod_mat_add", "B"], [23, 1, 1, "c.fmpz_mod_mat_add", "C"]], "fmpz_mod_mat_can_solve": [[23, 1, 1, "c.fmpz_mod_mat_can_solve", "A"], [23, 1, 1, "c.fmpz_mod_mat_can_solve", "B"], [23, 1, 1, "c.fmpz_mod_mat_can_solve", "X"], [23, 1, 1, "c.fmpz_mod_mat_can_solve", "ctx"]], "fmpz_mod_mat_charpoly": [[23, 1, 1, "c.fmpz_mod_mat_charpoly", "M"], [23, 1, 1, "c.fmpz_mod_mat_charpoly", "ctx"], [23, 1, 1, "c.fmpz_mod_mat_charpoly", "p"]], "fmpz_mod_mat_clear": [[23, 1, 1, "c.fmpz_mod_mat_clear", "mat"]], "fmpz_mod_mat_concat_horizontal": [[23, 1, 1, "c.fmpz_mod_mat_concat_horizontal", "mat1"], [23, 1, 1, "c.fmpz_mod_mat_concat_horizontal", "mat2"], [23, 1, 1, "c.fmpz_mod_mat_concat_horizontal", "res"]], "fmpz_mod_mat_concat_vertical": [[23, 1, 1, "c.fmpz_mod_mat_concat_vertical", "mat1"], [23, 1, 1, "c.fmpz_mod_mat_concat_vertical", "mat2"], [23, 1, 1, "c.fmpz_mod_mat_concat_vertical", "res"]], "fmpz_mod_mat_entry": [[23, 1, 1, "c.fmpz_mod_mat_entry", "i"], [23, 1, 1, "c.fmpz_mod_mat_entry", "j"], [23, 1, 1, "c.fmpz_mod_mat_entry", "mat"]], "fmpz_mod_mat_fmpz_vec_mul": [[23, 1, 1, "c.fmpz_mod_mat_fmpz_vec_mul", "B"], [23, 1, 1, "c.fmpz_mod_mat_fmpz_vec_mul", "a"], [23, 1, 1, "c.fmpz_mod_mat_fmpz_vec_mul", "alen"], [23, 1, 1, "c.fmpz_mod_mat_fmpz_vec_mul", "c"]], "fmpz_mod_mat_fmpz_vec_mul_ptr": [[23, 1, 1, "c.fmpz_mod_mat_fmpz_vec_mul_ptr", "B"], [23, 1, 1, "c.fmpz_mod_mat_fmpz_vec_mul_ptr", "a"], [23, 1, 1, "c.fmpz_mod_mat_fmpz_vec_mul_ptr", "alen"], [23, 1, 1, "c.fmpz_mod_mat_fmpz_vec_mul_ptr", "c"]], "fmpz_mod_mat_get_fmpz_mat": [[23, 1, 1, "c.fmpz_mod_mat_get_fmpz_mat", "A"], [23, 1, 1, "c.fmpz_mod_mat_get_fmpz_mat", "B"]], "fmpz_mod_mat_howell_form": [[23, 1, 1, "c.fmpz_mod_mat_howell_form", "mat"]], "fmpz_mod_mat_init": [[23, 1, 1, "c.fmpz_mod_mat_init", "cols"], [23, 1, 1, "c.fmpz_mod_mat_init", "mat"], [23, 1, 1, "c.fmpz_mod_mat_init", "n"], [23, 1, 1, "c.fmpz_mod_mat_init", "rows"]], "fmpz_mod_mat_init_set": [[23, 1, 1, "c.fmpz_mod_mat_init_set", "mat"], [23, 1, 1, "c.fmpz_mod_mat_init_set", "src"]], "fmpz_mod_mat_inv": [[23, 1, 1, "c.fmpz_mod_mat_inv", "A"], [23, 1, 1, "c.fmpz_mod_mat_inv", "B"], [23, 1, 1, "c.fmpz_mod_mat_inv", "ctx"]], "fmpz_mod_mat_is_empty": [[23, 1, 1, "c.fmpz_mod_mat_is_empty", "mat"]], "fmpz_mod_mat_is_square": [[23, 1, 1, "c.fmpz_mod_mat_is_square", "mat"]], "fmpz_mod_mat_is_zero": [[23, 1, 1, "c.fmpz_mod_mat_is_zero", "mat"]], "fmpz_mod_mat_lu": [[23, 1, 1, "c.fmpz_mod_mat_lu", "A"], [23, 1, 1, "c.fmpz_mod_mat_lu", "P"], [23, 1, 1, "c.fmpz_mod_mat_lu", "ctx"], [23, 1, 1, "c.fmpz_mod_mat_lu", "rank_check"]], "fmpz_mod_mat_minpoly": [[23, 1, 1, "c.fmpz_mod_mat_minpoly", "M"], [23, 1, 1, "c.fmpz_mod_mat_minpoly", "ctx"], [23, 1, 1, "c.fmpz_mod_mat_minpoly", "p"]], "fmpz_mod_mat_mul": [[23, 1, 1, "c.fmpz_mod_mat_mul", "A"], [23, 1, 1, "c.fmpz_mod_mat_mul", "B"], [23, 1, 1, "c.fmpz_mod_mat_mul", "C"]], "fmpz_mod_mat_mul_classical_threaded": [[23, 1, 1, "c.fmpz_mod_mat_mul_classical_threaded", "A"], [23, 1, 1, "c.fmpz_mod_mat_mul_classical_threaded", "B"], [23, 1, 1, "c.fmpz_mod_mat_mul_classical_threaded", "C"]], "fmpz_mod_mat_mul_fmpz_vec": [[23, 1, 1, "c.fmpz_mod_mat_mul_fmpz_vec", "A"], [23, 1, 1, "c.fmpz_mod_mat_mul_fmpz_vec", "b"], [23, 1, 1, "c.fmpz_mod_mat_mul_fmpz_vec", "blen"], [23, 1, 1, "c.fmpz_mod_mat_mul_fmpz_vec", "c"]], "fmpz_mod_mat_mul_fmpz_vec_ptr": [[23, 1, 1, "c.fmpz_mod_mat_mul_fmpz_vec_ptr", "A"], [23, 1, 1, "c.fmpz_mod_mat_mul_fmpz_vec_ptr", "b"], [23, 1, 1, "c.fmpz_mod_mat_mul_fmpz_vec_ptr", "blen"], [23, 1, 1, "c.fmpz_mod_mat_mul_fmpz_vec_ptr", "c"]], "fmpz_mod_mat_ncols": [[23, 1, 1, "c.fmpz_mod_mat_ncols", "mat"]], "fmpz_mod_mat_neg": [[23, 1, 1, "c.fmpz_mod_mat_neg", "A"], [23, 1, 1, "c.fmpz_mod_mat_neg", "B"]], "fmpz_mod_mat_nrows": [[23, 1, 1, "c.fmpz_mod_mat_nrows", "mat"]], "fmpz_mod_mat_one": [[23, 1, 1, "c.fmpz_mod_mat_one", "mat"]], "fmpz_mod_mat_print_pretty": [[23, 1, 1, "c.fmpz_mod_mat_print_pretty", "mat"]], "fmpz_mod_mat_randtest": [[23, 1, 1, "c.fmpz_mod_mat_randtest", "mat"], [23, 1, 1, "c.fmpz_mod_mat_randtest", "state"]], "fmpz_mod_mat_rref": [[23, 1, 1, "c.fmpz_mod_mat_rref", "mat"], [23, 1, 1, "c.fmpz_mod_mat_rref", "perm"]], "fmpz_mod_mat_scalar_mul_fmpz": [[23, 1, 1, "c.fmpz_mod_mat_scalar_mul_fmpz", "A"], [23, 1, 1, "c.fmpz_mod_mat_scalar_mul_fmpz", "B"], [23, 1, 1, "c.fmpz_mod_mat_scalar_mul_fmpz", "c"]], "fmpz_mod_mat_scalar_mul_si": [[23, 1, 1, "c.fmpz_mod_mat_scalar_mul_si", "A"], [23, 1, 1, "c.fmpz_mod_mat_scalar_mul_si", "B"], [23, 1, 1, "c.fmpz_mod_mat_scalar_mul_si", "c"]], "fmpz_mod_mat_scalar_mul_ui": [[23, 1, 1, "c.fmpz_mod_mat_scalar_mul_ui", "A"], [23, 1, 1, "c.fmpz_mod_mat_scalar_mul_ui", "B"], [23, 1, 1, "c.fmpz_mod_mat_scalar_mul_ui", "c"]], "fmpz_mod_mat_set": [[23, 1, 1, "c.fmpz_mod_mat_set", "A"], [23, 1, 1, "c.fmpz_mod_mat_set", "B"]], "fmpz_mod_mat_set_entry": [[23, 1, 1, "c.fmpz_mod_mat_set_entry", "i"], [23, 1, 1, "c.fmpz_mod_mat_set_entry", "j"], [23, 1, 1, "c.fmpz_mod_mat_set_entry", "mat"], [23, 1, 1, "c.fmpz_mod_mat_set_entry", "val"]], "fmpz_mod_mat_set_fmpz_mat": [[23, 1, 1, "c.fmpz_mod_mat_set_fmpz_mat", "A"], [23, 1, 1, "c.fmpz_mod_mat_set_fmpz_mat", "B"]], "fmpz_mod_mat_similarity": [[23, 1, 1, "c.fmpz_mod_mat_similarity", "M"], [23, 1, 1, "c.fmpz_mod_mat_similarity", "ctx"], [23, 1, 1, "c.fmpz_mod_mat_similarity", "d"], [23, 1, 1, "c.fmpz_mod_mat_similarity", "r"]], "fmpz_mod_mat_solve": [[23, 1, 1, "c.fmpz_mod_mat_solve", "A"], [23, 1, 1, "c.fmpz_mod_mat_solve", "B"], [23, 1, 1, "c.fmpz_mod_mat_solve", "X"], [23, 1, 1, "c.fmpz_mod_mat_solve", "ctx"]], "fmpz_mod_mat_solve_tril": [[23, 1, 1, "c.fmpz_mod_mat_solve_tril", "B"], [23, 1, 1, "c.fmpz_mod_mat_solve_tril", "L"], [23, 1, 1, "c.fmpz_mod_mat_solve_tril", "X"], [23, 1, 1, "c.fmpz_mod_mat_solve_tril", "ctx"], [23, 1, 1, "c.fmpz_mod_mat_solve_tril", "unit"]], "fmpz_mod_mat_solve_triu": [[23, 1, 1, "c.fmpz_mod_mat_solve_triu", "B"], [23, 1, 1, "c.fmpz_mod_mat_solve_triu", "U"], [23, 1, 1, "c.fmpz_mod_mat_solve_triu", "X"], [23, 1, 1, "c.fmpz_mod_mat_solve_triu", "ctx"], [23, 1, 1, "c.fmpz_mod_mat_solve_triu", "unit"]], "fmpz_mod_mat_sqr": [[23, 1, 1, "c.fmpz_mod_mat_sqr", "A"], [23, 1, 1, "c.fmpz_mod_mat_sqr", "B"]], "fmpz_mod_mat_strong_echelon_form": [[23, 1, 1, "c.fmpz_mod_mat_strong_echelon_form", "mat"]], "fmpz_mod_mat_sub": [[23, 1, 1, "c.fmpz_mod_mat_sub", "A"], [23, 1, 1, "c.fmpz_mod_mat_sub", "B"], [23, 1, 1, "c.fmpz_mod_mat_sub", "C"]], "fmpz_mod_mat_swap": [[23, 1, 1, "c.fmpz_mod_mat_swap", "mat1"], [23, 1, 1, "c.fmpz_mod_mat_swap", "mat2"]], "fmpz_mod_mat_swap_entrywise": [[23, 1, 1, "c.fmpz_mod_mat_swap_entrywise", "mat1"], [23, 1, 1, "c.fmpz_mod_mat_swap_entrywise", "mat2"]], "fmpz_mod_mat_t": [[23, 3, 1, "c.fmpz_mod_mat_t.fmpz_mod_mat_struct", "fmpz_mod_mat_struct"], [23, 3, 1, "c.fmpz_mod_mat_t.fmpz_mod_mat_t", "fmpz_mod_mat_t"]], "fmpz_mod_mat_trace": [[23, 1, 1, "c.fmpz_mod_mat_trace", "mat"], [23, 1, 1, "c.fmpz_mod_mat_trace", "trace"]], "fmpz_mod_mat_transpose": [[23, 1, 1, "c.fmpz_mod_mat_transpose", "A"], [23, 1, 1, "c.fmpz_mod_mat_transpose", "B"]], "fmpz_mod_mat_window_clear": [[23, 1, 1, "c.fmpz_mod_mat_window_clear", "window"]], "fmpz_mod_mat_window_init": [[23, 1, 1, "c.fmpz_mod_mat_window_init", "c1"], [23, 1, 1, "c.fmpz_mod_mat_window_init", "c2"], [23, 1, 1, "c.fmpz_mod_mat_window_init", "mat"], [23, 1, 1, "c.fmpz_mod_mat_window_init", "r1"], [23, 1, 1, "c.fmpz_mod_mat_window_init", "r2"], [23, 1, 1, "c.fmpz_mod_mat_window_init", "window"]], "fmpz_mod_mat_zero": [[23, 1, 1, "c.fmpz_mod_mat_zero", "mat"]], "fmpz_mod_mpoly_add": [[24, 1, 1, "c.fmpz_mod_mpoly_add", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_add", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_add", "C"], [24, 1, 1, "c.fmpz_mod_mpoly_add", "ctx"]], "fmpz_mod_mpoly_add_fmpz": [[24, 1, 1, "c.fmpz_mod_mpoly_add_fmpz", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_add_fmpz", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_add_fmpz", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_add_fmpz", "ctx"]], "fmpz_mod_mpoly_add_si": [[24, 1, 1, "c.fmpz_mod_mpoly_add_si", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_add_si", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_add_si", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_add_si", "ctx"]], "fmpz_mod_mpoly_add_ui": [[24, 1, 1, "c.fmpz_mod_mpoly_add_ui", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_add_ui", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_add_ui", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_add_ui", "ctx"]], "fmpz_mod_mpoly_clear": [[24, 1, 1, "c.fmpz_mod_mpoly_clear", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_clear", "ctx"]], "fmpz_mod_mpoly_cmp": [[24, 1, 1, "c.fmpz_mod_mpoly_cmp", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_cmp", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_cmp", "ctx"]], "fmpz_mod_mpoly_combine_like_terms": [[24, 1, 1, "c.fmpz_mod_mpoly_combine_like_terms", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_combine_like_terms", "ctx"]], "fmpz_mod_mpoly_compose_fmpz_mod_mpoly": [[24, 1, 1, "c.fmpz_mod_mpoly_compose_fmpz_mod_mpoly", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_compose_fmpz_mod_mpoly", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_compose_fmpz_mod_mpoly", "C"], [24, 1, 1, "c.fmpz_mod_mpoly_compose_fmpz_mod_mpoly", "ctxAC"], [24, 1, 1, "c.fmpz_mod_mpoly_compose_fmpz_mod_mpoly", "ctxB"]], "fmpz_mod_mpoly_compose_fmpz_mod_mpoly_gen": [[24, 1, 1, "c.fmpz_mod_mpoly_compose_fmpz_mod_mpoly_gen", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_compose_fmpz_mod_mpoly_gen", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_compose_fmpz_mod_mpoly_gen", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_compose_fmpz_mod_mpoly_gen", "ctxAC"], [24, 1, 1, "c.fmpz_mod_mpoly_compose_fmpz_mod_mpoly_gen", "ctxB"]], "fmpz_mod_mpoly_compose_fmpz_mod_mpoly_geobucket": [[24, 1, 1, "c.fmpz_mod_mpoly_compose_fmpz_mod_mpoly_geobucket", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_compose_fmpz_mod_mpoly_geobucket", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_compose_fmpz_mod_mpoly_geobucket", "C"], [24, 1, 1, "c.fmpz_mod_mpoly_compose_fmpz_mod_mpoly_geobucket", "ctxAC"], [24, 1, 1, "c.fmpz_mod_mpoly_compose_fmpz_mod_mpoly_geobucket", "ctxB"]], "fmpz_mod_mpoly_compose_fmpz_poly": [[24, 1, 1, "c.fmpz_mod_mpoly_compose_fmpz_poly", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_compose_fmpz_poly", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_compose_fmpz_poly", "C"], [24, 1, 1, "c.fmpz_mod_mpoly_compose_fmpz_poly", "ctxB"]], "fmpz_mod_mpoly_content_vars": [[24, 1, 1, "c.fmpz_mod_mpoly_content_vars", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_content_vars", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_content_vars", "g"], [24, 1, 1, "c.fmpz_mod_mpoly_content_vars", "vars"], [24, 1, 1, "c.fmpz_mod_mpoly_content_vars", "vars_length"]], "fmpz_mod_mpoly_ctx_clear": [[24, 1, 1, "c.fmpz_mod_mpoly_ctx_clear", "ctx"]], "fmpz_mod_mpoly_ctx_get_modulus": [[24, 1, 1, "c.fmpz_mod_mpoly_ctx_get_modulus", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_ctx_get_modulus", "n"]], "fmpz_mod_mpoly_ctx_init": [[24, 1, 1, "c.fmpz_mod_mpoly_ctx_init", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_ctx_init", "nvars"], [24, 1, 1, "c.fmpz_mod_mpoly_ctx_init", "ord"], [24, 1, 1, "c.fmpz_mod_mpoly_ctx_init", "p"]], "fmpz_mod_mpoly_ctx_nvars": [[24, 1, 1, "c.fmpz_mod_mpoly_ctx_nvars", "ctx"]], "fmpz_mod_mpoly_ctx_ord": [[24, 1, 1, "c.fmpz_mod_mpoly_ctx_ord", "ctx"]], "fmpz_mod_mpoly_deflate": [[24, 1, 1, "c.fmpz_mod_mpoly_deflate", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_deflate", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_deflate", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_deflate", "shift"], [24, 1, 1, "c.fmpz_mod_mpoly_deflate", "stride"]], "fmpz_mod_mpoly_deflation": [[24, 1, 1, "c.fmpz_mod_mpoly_deflation", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_deflation", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_deflation", "shift"], [24, 1, 1, "c.fmpz_mod_mpoly_deflation", "stride"]], "fmpz_mod_mpoly_degree_fmpz": [[24, 1, 1, "c.fmpz_mod_mpoly_degree_fmpz", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_degree_fmpz", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_degree_fmpz", "deg"], [24, 1, 1, "c.fmpz_mod_mpoly_degree_fmpz", "var"]], "fmpz_mod_mpoly_degree_si": [[24, 1, 1, "c.fmpz_mod_mpoly_degree_si", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_degree_si", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_degree_si", "var"]], "fmpz_mod_mpoly_degrees_fit_si": [[24, 1, 1, "c.fmpz_mod_mpoly_degrees_fit_si", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_degrees_fit_si", "ctx"]], "fmpz_mod_mpoly_degrees_fmpz": [[24, 1, 1, "c.fmpz_mod_mpoly_degrees_fmpz", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_degrees_fmpz", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_degrees_fmpz", "degs"]], "fmpz_mod_mpoly_degrees_si": [[24, 1, 1, "c.fmpz_mod_mpoly_degrees_si", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_degrees_si", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_degrees_si", "degs"]], "fmpz_mod_mpoly_derivative": [[24, 1, 1, "c.fmpz_mod_mpoly_derivative", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_derivative", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_derivative", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_derivative", "var"]], "fmpz_mod_mpoly_discriminant": [[24, 1, 1, "c.fmpz_mod_mpoly_discriminant", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_discriminant", "D"], [24, 1, 1, "c.fmpz_mod_mpoly_discriminant", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_discriminant", "var"]], "fmpz_mod_mpoly_div": [[24, 1, 1, "c.fmpz_mod_mpoly_div", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_div", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_div", "Q"], [24, 1, 1, "c.fmpz_mod_mpoly_div", "ctx"]], "fmpz_mod_mpoly_divides": [[24, 1, 1, "c.fmpz_mod_mpoly_divides", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_divides", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_divides", "Q"], [24, 1, 1, "c.fmpz_mod_mpoly_divides", "ctx"]], "fmpz_mod_mpoly_divrem": [[24, 1, 1, "c.fmpz_mod_mpoly_divrem", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_divrem", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_divrem", "Q"], [24, 1, 1, "c.fmpz_mod_mpoly_divrem", "R"], [24, 1, 1, "c.fmpz_mod_mpoly_divrem", "ctx"]], "fmpz_mod_mpoly_divrem_ideal": [[24, 1, 1, "c.fmpz_mod_mpoly_divrem_ideal", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_divrem_ideal", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_divrem_ideal", "Q"], [24, 1, 1, "c.fmpz_mod_mpoly_divrem_ideal", "R"], [24, 1, 1, "c.fmpz_mod_mpoly_divrem_ideal", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_divrem_ideal", "len"]], "fmpz_mod_mpoly_equal": [[24, 1, 1, "c.fmpz_mod_mpoly_equal", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_equal", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_equal", "ctx"]], "fmpz_mod_mpoly_equal_fmpz": [[24, 1, 1, "c.fmpz_mod_mpoly_equal_fmpz", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_equal_fmpz", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_equal_fmpz", "ctx"]], "fmpz_mod_mpoly_equal_si": [[24, 1, 1, "c.fmpz_mod_mpoly_equal_si", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_equal_si", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_equal_si", "ctx"]], "fmpz_mod_mpoly_equal_ui": [[24, 1, 1, "c.fmpz_mod_mpoly_equal_ui", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_equal_ui", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_equal_ui", "ctx"]], "fmpz_mod_mpoly_evaluate_all_fmpz": [[24, 1, 1, "c.fmpz_mod_mpoly_evaluate_all_fmpz", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_evaluate_all_fmpz", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_evaluate_all_fmpz", "eval"], [24, 1, 1, "c.fmpz_mod_mpoly_evaluate_all_fmpz", "vals"]], "fmpz_mod_mpoly_evaluate_one_fmpz": [[24, 1, 1, "c.fmpz_mod_mpoly_evaluate_one_fmpz", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_evaluate_one_fmpz", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_evaluate_one_fmpz", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_evaluate_one_fmpz", "val"], [24, 1, 1, "c.fmpz_mod_mpoly_evaluate_one_fmpz", "var"]], "fmpz_mod_mpoly_factor": [[25, 1, 1, "c.fmpz_mod_mpoly_factor", "A"], [25, 1, 1, "c.fmpz_mod_mpoly_factor", "ctx"], [25, 1, 1, "c.fmpz_mod_mpoly_factor", "f"]], "fmpz_mod_mpoly_factor_clear": [[25, 1, 1, "c.fmpz_mod_mpoly_factor_clear", "ctx"], [25, 1, 1, "c.fmpz_mod_mpoly_factor_clear", "f"]], "fmpz_mod_mpoly_factor_get_base": [[25, 1, 1, "c.fmpz_mod_mpoly_factor_get_base", "B"], [25, 1, 1, "c.fmpz_mod_mpoly_factor_get_base", "ctx"], [25, 1, 1, "c.fmpz_mod_mpoly_factor_get_base", "f"], [25, 1, 1, "c.fmpz_mod_mpoly_factor_get_base", "i"]], "fmpz_mod_mpoly_factor_get_constant_fmpz": [[25, 1, 1, "c.fmpz_mod_mpoly_factor_get_constant_fmpz", "c"], [25, 1, 1, "c.fmpz_mod_mpoly_factor_get_constant_fmpz", "ctx"], [25, 1, 1, "c.fmpz_mod_mpoly_factor_get_constant_fmpz", "f"]], "fmpz_mod_mpoly_factor_get_exp_si": [[25, 1, 1, "c.fmpz_mod_mpoly_factor_get_exp_si", "ctx"], [25, 1, 1, "c.fmpz_mod_mpoly_factor_get_exp_si", "f"], [25, 1, 1, "c.fmpz_mod_mpoly_factor_get_exp_si", "i"]], "fmpz_mod_mpoly_factor_init": [[25, 1, 1, "c.fmpz_mod_mpoly_factor_init", "ctx"], [25, 1, 1, "c.fmpz_mod_mpoly_factor_init", "f"]], "fmpz_mod_mpoly_factor_length": [[25, 1, 1, "c.fmpz_mod_mpoly_factor_length", "ctx"], [25, 1, 1, "c.fmpz_mod_mpoly_factor_length", "f"]], "fmpz_mod_mpoly_factor_sort": [[25, 1, 1, "c.fmpz_mod_mpoly_factor_sort", "ctx"], [25, 1, 1, "c.fmpz_mod_mpoly_factor_sort", "f"]], "fmpz_mod_mpoly_factor_squarefree": [[25, 1, 1, "c.fmpz_mod_mpoly_factor_squarefree", "A"], [25, 1, 1, "c.fmpz_mod_mpoly_factor_squarefree", "ctx"], [25, 1, 1, "c.fmpz_mod_mpoly_factor_squarefree", "f"]], "fmpz_mod_mpoly_factor_swap": [[25, 1, 1, "c.fmpz_mod_mpoly_factor_swap", "ctx"], [25, 1, 1, "c.fmpz_mod_mpoly_factor_swap", "f"], [25, 1, 1, "c.fmpz_mod_mpoly_factor_swap", "g"]], "fmpz_mod_mpoly_factor_swap_base": [[25, 1, 1, "c.fmpz_mod_mpoly_factor_swap_base", "B"], [25, 1, 1, "c.fmpz_mod_mpoly_factor_swap_base", "ctx"], [25, 1, 1, "c.fmpz_mod_mpoly_factor_swap_base", "f"], [25, 1, 1, "c.fmpz_mod_mpoly_factor_swap_base", "i"]], "fmpz_mod_mpoly_fprint_pretty": [[24, 1, 1, "c.fmpz_mod_mpoly_fprint_pretty", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_fprint_pretty", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_fprint_pretty", "file"], [24, 1, 1, "c.fmpz_mod_mpoly_fprint_pretty", "x"]], "fmpz_mod_mpoly_from_univar": [[24, 1, 1, "c.fmpz_mod_mpoly_from_univar", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_from_univar", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_from_univar", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_from_univar", "var"]], "fmpz_mod_mpoly_gcd": [[24, 1, 1, "c.fmpz_mod_mpoly_gcd", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_gcd", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_gcd", "G"], [24, 1, 1, "c.fmpz_mod_mpoly_gcd", "ctx"]], "fmpz_mod_mpoly_gcd_brown": [[24, 1, 1, "c.fmpz_mod_mpoly_gcd_brown", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_gcd_brown", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_gcd_brown", "G"], [24, 1, 1, "c.fmpz_mod_mpoly_gcd_brown", "ctx"]], "fmpz_mod_mpoly_gcd_cofactors": [[24, 1, 1, "c.fmpz_mod_mpoly_gcd_cofactors", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_gcd_cofactors", "Abar"], [24, 1, 1, "c.fmpz_mod_mpoly_gcd_cofactors", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_gcd_cofactors", "Bbar"], [24, 1, 1, "c.fmpz_mod_mpoly_gcd_cofactors", "G"], [24, 1, 1, "c.fmpz_mod_mpoly_gcd_cofactors", "ctx"]], "fmpz_mod_mpoly_gcd_hensel": [[24, 1, 1, "c.fmpz_mod_mpoly_gcd_hensel", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_gcd_hensel", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_gcd_hensel", "G"], [24, 1, 1, "c.fmpz_mod_mpoly_gcd_hensel", "ctx"]], "fmpz_mod_mpoly_gcd_subresultant": [[24, 1, 1, "c.fmpz_mod_mpoly_gcd_subresultant", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_gcd_subresultant", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_gcd_subresultant", "G"], [24, 1, 1, "c.fmpz_mod_mpoly_gcd_subresultant", "ctx"]], "fmpz_mod_mpoly_gcd_zippel": [[24, 1, 1, "c.fmpz_mod_mpoly_gcd_zippel", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_gcd_zippel", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_gcd_zippel", "G"], [24, 1, 1, "c.fmpz_mod_mpoly_gcd_zippel", "ctx"]], "fmpz_mod_mpoly_gcd_zippel2": [[24, 1, 1, "c.fmpz_mod_mpoly_gcd_zippel2", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_gcd_zippel2", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_gcd_zippel2", "G"], [24, 1, 1, "c.fmpz_mod_mpoly_gcd_zippel2", "ctx"]], "fmpz_mod_mpoly_gen": [[24, 1, 1, "c.fmpz_mod_mpoly_gen", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_gen", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_gen", "var"]], "fmpz_mod_mpoly_get_coeff_fmpz_fmpz": [[24, 1, 1, "c.fmpz_mod_mpoly_get_coeff_fmpz_fmpz", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_get_coeff_fmpz_fmpz", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_get_coeff_fmpz_fmpz", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_get_coeff_fmpz_fmpz", "exp"]], "fmpz_mod_mpoly_get_coeff_fmpz_monomial": [[24, 1, 1, "c.fmpz_mod_mpoly_get_coeff_fmpz_monomial", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_get_coeff_fmpz_monomial", "M"], [24, 1, 1, "c.fmpz_mod_mpoly_get_coeff_fmpz_monomial", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_get_coeff_fmpz_monomial", "ctx"]], "fmpz_mod_mpoly_get_coeff_fmpz_ui": [[24, 1, 1, "c.fmpz_mod_mpoly_get_coeff_fmpz_ui", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_get_coeff_fmpz_ui", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_get_coeff_fmpz_ui", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_get_coeff_fmpz_ui", "exp"]], "fmpz_mod_mpoly_get_coeff_vars_ui": [[24, 1, 1, "c.fmpz_mod_mpoly_get_coeff_vars_ui", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_get_coeff_vars_ui", "C"], [24, 1, 1, "c.fmpz_mod_mpoly_get_coeff_vars_ui", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_get_coeff_vars_ui", "exps"], [24, 1, 1, "c.fmpz_mod_mpoly_get_coeff_vars_ui", "length"], [24, 1, 1, "c.fmpz_mod_mpoly_get_coeff_vars_ui", "vars"]], "fmpz_mod_mpoly_get_fmpz": [[24, 1, 1, "c.fmpz_mod_mpoly_get_fmpz", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_get_fmpz", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_get_fmpz", "ctx"]], "fmpz_mod_mpoly_get_str_pretty": [[24, 1, 1, "c.fmpz_mod_mpoly_get_str_pretty", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_get_str_pretty", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_get_str_pretty", "x"]], "fmpz_mod_mpoly_get_term": [[24, 1, 1, "c.fmpz_mod_mpoly_get_term", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_get_term", "M"], [24, 1, 1, "c.fmpz_mod_mpoly_get_term", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_get_term", "i"]], "fmpz_mod_mpoly_get_term_coeff_fmpz": [[24, 1, 1, "c.fmpz_mod_mpoly_get_term_coeff_fmpz", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_get_term_coeff_fmpz", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_get_term_coeff_fmpz", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_get_term_coeff_fmpz", "i"]], "fmpz_mod_mpoly_get_term_exp_fmpz": [[24, 1, 1, "c.fmpz_mod_mpoly_get_term_exp_fmpz", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_get_term_exp_fmpz", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_get_term_exp_fmpz", "exp"], [24, 1, 1, "c.fmpz_mod_mpoly_get_term_exp_fmpz", "i"]], "fmpz_mod_mpoly_get_term_exp_si": [[24, 1, 1, "c.fmpz_mod_mpoly_get_term_exp_si", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_get_term_exp_si", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_get_term_exp_si", "exp"], [24, 1, 1, "c.fmpz_mod_mpoly_get_term_exp_si", "i"]], "fmpz_mod_mpoly_get_term_exp_ui": [[24, 1, 1, "c.fmpz_mod_mpoly_get_term_exp_ui", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_get_term_exp_ui", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_get_term_exp_ui", "exp"], [24, 1, 1, "c.fmpz_mod_mpoly_get_term_exp_ui", "i"]], "fmpz_mod_mpoly_get_term_monomial": [[24, 1, 1, "c.fmpz_mod_mpoly_get_term_monomial", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_get_term_monomial", "M"], [24, 1, 1, "c.fmpz_mod_mpoly_get_term_monomial", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_get_term_monomial", "i"]], "fmpz_mod_mpoly_get_term_var_exp_si": [[24, 1, 1, "c.fmpz_mod_mpoly_get_term_var_exp_si", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_get_term_var_exp_si", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_get_term_var_exp_si", "i"], [24, 1, 1, "c.fmpz_mod_mpoly_get_term_var_exp_si", "var"]], "fmpz_mod_mpoly_get_term_var_exp_ui": [[24, 1, 1, "c.fmpz_mod_mpoly_get_term_var_exp_ui", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_get_term_var_exp_ui", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_get_term_var_exp_ui", "i"], [24, 1, 1, "c.fmpz_mod_mpoly_get_term_var_exp_ui", "var"]], "fmpz_mod_mpoly_inflate": [[24, 1, 1, "c.fmpz_mod_mpoly_inflate", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_inflate", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_inflate", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_inflate", "shift"], [24, 1, 1, "c.fmpz_mod_mpoly_inflate", "stride"]], "fmpz_mod_mpoly_init": [[24, 1, 1, "c.fmpz_mod_mpoly_init", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_init", "ctx"]], "fmpz_mod_mpoly_init2": [[24, 1, 1, "c.fmpz_mod_mpoly_init2", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_init2", "alloc"], [24, 1, 1, "c.fmpz_mod_mpoly_init2", "ctx"]], "fmpz_mod_mpoly_init3": [[24, 1, 1, "c.fmpz_mod_mpoly_init3", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_init3", "alloc"], [24, 1, 1, "c.fmpz_mod_mpoly_init3", "bits"], [24, 1, 1, "c.fmpz_mod_mpoly_init3", "ctx"]], "fmpz_mod_mpoly_is_canonical": [[24, 1, 1, "c.fmpz_mod_mpoly_is_canonical", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_is_canonical", "ctx"]], "fmpz_mod_mpoly_is_fmpz": [[24, 1, 1, "c.fmpz_mod_mpoly_is_fmpz", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_is_fmpz", "ctx"]], "fmpz_mod_mpoly_is_gen": [[24, 1, 1, "c.fmpz_mod_mpoly_is_gen", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_is_gen", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_is_gen", "var"]], "fmpz_mod_mpoly_is_one": [[24, 1, 1, "c.fmpz_mod_mpoly_is_one", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_is_one", "ctx"]], "fmpz_mod_mpoly_is_square": [[24, 1, 1, "c.fmpz_mod_mpoly_is_square", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_is_square", "ctx"]], "fmpz_mod_mpoly_is_zero": [[24, 1, 1, "c.fmpz_mod_mpoly_is_zero", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_is_zero", "ctx"]], "fmpz_mod_mpoly_length": [[24, 1, 1, "c.fmpz_mod_mpoly_length", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_length", "ctx"]], "fmpz_mod_mpoly_make_monic": [[24, 1, 1, "c.fmpz_mod_mpoly_make_monic", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_make_monic", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_make_monic", "ctx"]], "fmpz_mod_mpoly_mul": [[24, 1, 1, "c.fmpz_mod_mpoly_mul", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_mul", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_mul", "C"], [24, 1, 1, "c.fmpz_mod_mpoly_mul", "ctx"]], "fmpz_mod_mpoly_mul_dense": [[24, 1, 1, "c.fmpz_mod_mpoly_mul_dense", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_mul_dense", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_mul_dense", "C"], [24, 1, 1, "c.fmpz_mod_mpoly_mul_dense", "ctx"]], "fmpz_mod_mpoly_mul_johnson": [[24, 1, 1, "c.fmpz_mod_mpoly_mul_johnson", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_mul_johnson", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_mul_johnson", "C"], [24, 1, 1, "c.fmpz_mod_mpoly_mul_johnson", "ctx"]], "fmpz_mod_mpoly_neg": [[24, 1, 1, "c.fmpz_mod_mpoly_neg", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_neg", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_neg", "ctx"]], "fmpz_mod_mpoly_one": [[24, 1, 1, "c.fmpz_mod_mpoly_one", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_one", "ctx"]], "fmpz_mod_mpoly_pow_fmpz": [[24, 1, 1, "c.fmpz_mod_mpoly_pow_fmpz", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_pow_fmpz", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_pow_fmpz", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_pow_fmpz", "k"]], "fmpz_mod_mpoly_pow_ui": [[24, 1, 1, "c.fmpz_mod_mpoly_pow_ui", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_pow_ui", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_pow_ui", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_pow_ui", "k"]], "fmpz_mod_mpoly_print_pretty": [[24, 1, 1, "c.fmpz_mod_mpoly_print_pretty", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_print_pretty", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_print_pretty", "x"]], "fmpz_mod_mpoly_push_term_fmpz_fmpz": [[24, 1, 1, "c.fmpz_mod_mpoly_push_term_fmpz_fmpz", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_push_term_fmpz_fmpz", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_push_term_fmpz_fmpz", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_push_term_fmpz_fmpz", "exp"]], "fmpz_mod_mpoly_push_term_fmpz_ui": [[24, 1, 1, "c.fmpz_mod_mpoly_push_term_fmpz_ui", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_push_term_fmpz_ui", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_push_term_fmpz_ui", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_push_term_fmpz_ui", "exp"]], "fmpz_mod_mpoly_push_term_si_fmpz": [[24, 1, 1, "c.fmpz_mod_mpoly_push_term_si_fmpz", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_push_term_si_fmpz", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_push_term_si_fmpz", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_push_term_si_fmpz", "exp"]], "fmpz_mod_mpoly_push_term_si_ui": [[24, 1, 1, "c.fmpz_mod_mpoly_push_term_si_ui", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_push_term_si_ui", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_push_term_si_ui", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_push_term_si_ui", "exp"]], "fmpz_mod_mpoly_push_term_ui_fmpz": [[24, 1, 1, "c.fmpz_mod_mpoly_push_term_ui_fmpz", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_push_term_ui_fmpz", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_push_term_ui_fmpz", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_push_term_ui_fmpz", "exp"]], "fmpz_mod_mpoly_push_term_ui_ui": [[24, 1, 1, "c.fmpz_mod_mpoly_push_term_ui_ui", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_push_term_ui_ui", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_push_term_ui_ui", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_push_term_ui_ui", "exp"]], "fmpz_mod_mpoly_quadratic_root": [[24, 1, 1, "c.fmpz_mod_mpoly_quadratic_root", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_quadratic_root", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_quadratic_root", "Q"], [24, 1, 1, "c.fmpz_mod_mpoly_quadratic_root", "ctx"]], "fmpz_mod_mpoly_randtest_bits": [[24, 1, 1, "c.fmpz_mod_mpoly_randtest_bits", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_randtest_bits", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_randtest_bits", "exp_bits"], [24, 1, 1, "c.fmpz_mod_mpoly_randtest_bits", "length"], [24, 1, 1, "c.fmpz_mod_mpoly_randtest_bits", "state"]], "fmpz_mod_mpoly_randtest_bound": [[24, 1, 1, "c.fmpz_mod_mpoly_randtest_bound", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_randtest_bound", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_randtest_bound", "exp_bound"], [24, 1, 1, "c.fmpz_mod_mpoly_randtest_bound", "length"], [24, 1, 1, "c.fmpz_mod_mpoly_randtest_bound", "state"]], "fmpz_mod_mpoly_randtest_bounds": [[24, 1, 1, "c.fmpz_mod_mpoly_randtest_bounds", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_randtest_bounds", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_randtest_bounds", "exp_bounds"], [24, 1, 1, "c.fmpz_mod_mpoly_randtest_bounds", "length"], [24, 1, 1, "c.fmpz_mod_mpoly_randtest_bounds", "state"]], "fmpz_mod_mpoly_resize": [[24, 1, 1, "c.fmpz_mod_mpoly_resize", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_resize", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_resize", "new_length"]], "fmpz_mod_mpoly_resultant": [[24, 1, 1, "c.fmpz_mod_mpoly_resultant", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_resultant", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_resultant", "R"], [24, 1, 1, "c.fmpz_mod_mpoly_resultant", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_resultant", "var"]], "fmpz_mod_mpoly_reverse": [[24, 1, 1, "c.fmpz_mod_mpoly_reverse", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_reverse", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_reverse", "ctx"]], "fmpz_mod_mpoly_scalar_addmul_fmpz": [[24, 1, 1, "c.fmpz_mod_mpoly_scalar_addmul_fmpz", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_scalar_addmul_fmpz", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_scalar_addmul_fmpz", "C"], [24, 1, 1, "c.fmpz_mod_mpoly_scalar_addmul_fmpz", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_scalar_addmul_fmpz", "d"]], "fmpz_mod_mpoly_scalar_mul_fmpz": [[24, 1, 1, "c.fmpz_mod_mpoly_scalar_mul_fmpz", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_scalar_mul_fmpz", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_scalar_mul_fmpz", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_scalar_mul_fmpz", "ctx"]], "fmpz_mod_mpoly_scalar_mul_si": [[24, 1, 1, "c.fmpz_mod_mpoly_scalar_mul_si", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_scalar_mul_si", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_scalar_mul_si", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_scalar_mul_si", "ctx"]], "fmpz_mod_mpoly_scalar_mul_ui": [[24, 1, 1, "c.fmpz_mod_mpoly_scalar_mul_ui", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_scalar_mul_ui", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_scalar_mul_ui", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_scalar_mul_ui", "ctx"]], "fmpz_mod_mpoly_set": [[24, 1, 1, "c.fmpz_mod_mpoly_set", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_set", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_set", "ctx"]], "fmpz_mod_mpoly_set_coeff_fmpz_fmpz": [[24, 1, 1, "c.fmpz_mod_mpoly_set_coeff_fmpz_fmpz", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_set_coeff_fmpz_fmpz", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_set_coeff_fmpz_fmpz", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_set_coeff_fmpz_fmpz", "exp"]], "fmpz_mod_mpoly_set_coeff_fmpz_monomial": [[24, 1, 1, "c.fmpz_mod_mpoly_set_coeff_fmpz_monomial", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_set_coeff_fmpz_monomial", "M"], [24, 1, 1, "c.fmpz_mod_mpoly_set_coeff_fmpz_monomial", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_set_coeff_fmpz_monomial", "ctx"]], "fmpz_mod_mpoly_set_coeff_fmpz_ui": [[24, 1, 1, "c.fmpz_mod_mpoly_set_coeff_fmpz_ui", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_set_coeff_fmpz_ui", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_set_coeff_fmpz_ui", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_set_coeff_fmpz_ui", "exp"]], "fmpz_mod_mpoly_set_coeff_si_fmpz": [[24, 1, 1, "c.fmpz_mod_mpoly_set_coeff_si_fmpz", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_set_coeff_si_fmpz", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_set_coeff_si_fmpz", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_set_coeff_si_fmpz", "exp"]], "fmpz_mod_mpoly_set_coeff_si_ui": [[24, 1, 1, "c.fmpz_mod_mpoly_set_coeff_si_ui", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_set_coeff_si_ui", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_set_coeff_si_ui", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_set_coeff_si_ui", "exp"]], "fmpz_mod_mpoly_set_coeff_ui_fmpz": [[24, 1, 1, "c.fmpz_mod_mpoly_set_coeff_ui_fmpz", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_set_coeff_ui_fmpz", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_set_coeff_ui_fmpz", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_set_coeff_ui_fmpz", "exp"]], "fmpz_mod_mpoly_set_coeff_ui_ui": [[24, 1, 1, "c.fmpz_mod_mpoly_set_coeff_ui_ui", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_set_coeff_ui_ui", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_set_coeff_ui_ui", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_set_coeff_ui_ui", "exp"]], "fmpz_mod_mpoly_set_fmpz": [[24, 1, 1, "c.fmpz_mod_mpoly_set_fmpz", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_set_fmpz", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_set_fmpz", "ctx"]], "fmpz_mod_mpoly_set_si": [[24, 1, 1, "c.fmpz_mod_mpoly_set_si", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_set_si", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_set_si", "ctx"]], "fmpz_mod_mpoly_set_str_pretty": [[24, 1, 1, "c.fmpz_mod_mpoly_set_str_pretty", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_set_str_pretty", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_set_str_pretty", "str"], [24, 1, 1, "c.fmpz_mod_mpoly_set_str_pretty", "x"]], "fmpz_mod_mpoly_set_term_coeff_fmpz": [[24, 1, 1, "c.fmpz_mod_mpoly_set_term_coeff_fmpz", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_set_term_coeff_fmpz", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_set_term_coeff_fmpz", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_set_term_coeff_fmpz", "i"]], "fmpz_mod_mpoly_set_term_coeff_si": [[24, 1, 1, "c.fmpz_mod_mpoly_set_term_coeff_si", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_set_term_coeff_si", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_set_term_coeff_si", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_set_term_coeff_si", "i"]], "fmpz_mod_mpoly_set_term_coeff_ui": [[24, 1, 1, "c.fmpz_mod_mpoly_set_term_coeff_ui", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_set_term_coeff_ui", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_set_term_coeff_ui", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_set_term_coeff_ui", "i"]], "fmpz_mod_mpoly_set_term_exp_fmpz": [[24, 1, 1, "c.fmpz_mod_mpoly_set_term_exp_fmpz", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_set_term_exp_fmpz", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_set_term_exp_fmpz", "exp"], [24, 1, 1, "c.fmpz_mod_mpoly_set_term_exp_fmpz", "i"]], "fmpz_mod_mpoly_set_term_exp_ui": [[24, 1, 1, "c.fmpz_mod_mpoly_set_term_exp_ui", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_set_term_exp_ui", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_set_term_exp_ui", "exp"], [24, 1, 1, "c.fmpz_mod_mpoly_set_term_exp_ui", "i"]], "fmpz_mod_mpoly_set_ui": [[24, 1, 1, "c.fmpz_mod_mpoly_set_ui", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_set_ui", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_set_ui", "ctx"]], "fmpz_mod_mpoly_sort_terms": [[24, 1, 1, "c.fmpz_mod_mpoly_sort_terms", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_sort_terms", "ctx"]], "fmpz_mod_mpoly_sqrt": [[24, 1, 1, "c.fmpz_mod_mpoly_sqrt", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_sqrt", "Q"], [24, 1, 1, "c.fmpz_mod_mpoly_sqrt", "ctx"]], "fmpz_mod_mpoly_sub": [[24, 1, 1, "c.fmpz_mod_mpoly_sub", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_sub", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_sub", "C"], [24, 1, 1, "c.fmpz_mod_mpoly_sub", "ctx"]], "fmpz_mod_mpoly_sub_fmpz": [[24, 1, 1, "c.fmpz_mod_mpoly_sub_fmpz", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_sub_fmpz", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_sub_fmpz", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_sub_fmpz", "ctx"]], "fmpz_mod_mpoly_sub_si": [[24, 1, 1, "c.fmpz_mod_mpoly_sub_si", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_sub_si", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_sub_si", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_sub_si", "ctx"]], "fmpz_mod_mpoly_sub_ui": [[24, 1, 1, "c.fmpz_mod_mpoly_sub_ui", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_sub_ui", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_sub_ui", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_sub_ui", "ctx"]], "fmpz_mod_mpoly_swap": [[24, 1, 1, "c.fmpz_mod_mpoly_swap", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_swap", "poly1"], [24, 1, 1, "c.fmpz_mod_mpoly_swap", "poly2"]], "fmpz_mod_mpoly_term_content": [[24, 1, 1, "c.fmpz_mod_mpoly_term_content", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_term_content", "M"], [24, 1, 1, "c.fmpz_mod_mpoly_term_content", "ctx"]], "fmpz_mod_mpoly_term_exp_fits_si": [[24, 1, 1, "c.fmpz_mod_mpoly_term_exp_fits_si", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_term_exp_fits_si", "i"], [24, 1, 1, "c.fmpz_mod_mpoly_term_exp_fits_si", "poly"]], "fmpz_mod_mpoly_term_exp_fits_ui": [[24, 1, 1, "c.fmpz_mod_mpoly_term_exp_fits_ui", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_term_exp_fits_ui", "i"], [24, 1, 1, "c.fmpz_mod_mpoly_term_exp_fits_ui", "poly"]], "fmpz_mod_mpoly_to_univar": [[24, 1, 1, "c.fmpz_mod_mpoly_to_univar", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_to_univar", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_to_univar", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_to_univar", "var"]], "fmpz_mod_mpoly_total_degree_fits_si": [[24, 1, 1, "c.fmpz_mod_mpoly_total_degree_fits_si", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_total_degree_fits_si", "ctx"]], "fmpz_mod_mpoly_total_degree_fmpz": [[24, 1, 1, "c.fmpz_mod_mpoly_total_degree_fmpz", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_total_degree_fmpz", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_total_degree_fmpz", "tdeg"]], "fmpz_mod_mpoly_total_degree_si": [[24, 1, 1, "c.fmpz_mod_mpoly_total_degree_si", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_total_degree_si", "ctx"]], "fmpz_mod_mpoly_univar_clear": [[24, 1, 1, "c.fmpz_mod_mpoly_univar_clear", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_univar_clear", "ctx"]], "fmpz_mod_mpoly_univar_degree_fits_si": [[24, 1, 1, "c.fmpz_mod_mpoly_univar_degree_fits_si", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_univar_degree_fits_si", "ctx"]], "fmpz_mod_mpoly_univar_discriminant": [[24, 1, 1, "c.fmpz_mod_mpoly_univar_discriminant", "Ax"], [24, 1, 1, "c.fmpz_mod_mpoly_univar_discriminant", "D"], [24, 1, 1, "c.fmpz_mod_mpoly_univar_discriminant", "ctx"]], "fmpz_mod_mpoly_univar_get_term_coeff": [[24, 1, 1, "c.fmpz_mod_mpoly_univar_get_term_coeff", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_univar_get_term_coeff", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_univar_get_term_coeff", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_univar_get_term_coeff", "i"]], "fmpz_mod_mpoly_univar_get_term_exp_si": [[24, 1, 1, "c.fmpz_mod_mpoly_univar_get_term_exp_si", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_univar_get_term_exp_si", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_univar_get_term_exp_si", "i"]], "fmpz_mod_mpoly_univar_init": [[24, 1, 1, "c.fmpz_mod_mpoly_univar_init", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_univar_init", "ctx"]], "fmpz_mod_mpoly_univar_length": [[24, 1, 1, "c.fmpz_mod_mpoly_univar_length", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_univar_length", "ctx"]], "fmpz_mod_mpoly_univar_resultant": [[24, 1, 1, "c.fmpz_mod_mpoly_univar_resultant", "Ax"], [24, 1, 1, "c.fmpz_mod_mpoly_univar_resultant", "Bx"], [24, 1, 1, "c.fmpz_mod_mpoly_univar_resultant", "R"], [24, 1, 1, "c.fmpz_mod_mpoly_univar_resultant", "ctx"]], "fmpz_mod_mpoly_univar_set_coeff_ui": [[24, 1, 1, "c.fmpz_mod_mpoly_univar_set_coeff_ui", "Ax"], [24, 1, 1, "c.fmpz_mod_mpoly_univar_set_coeff_ui", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_univar_set_coeff_ui", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_univar_set_coeff_ui", "e"]], "fmpz_mod_mpoly_univar_swap": [[24, 1, 1, "c.fmpz_mod_mpoly_univar_swap", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_univar_swap", "B"], [24, 1, 1, "c.fmpz_mod_mpoly_univar_swap", "ctx"]], "fmpz_mod_mpoly_univar_swap_term_coeff": [[24, 1, 1, "c.fmpz_mod_mpoly_univar_swap_term_coeff", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_univar_swap_term_coeff", "c"], [24, 1, 1, "c.fmpz_mod_mpoly_univar_swap_term_coeff", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_univar_swap_term_coeff", "i"]], "fmpz_mod_mpoly_used_vars": [[24, 1, 1, "c.fmpz_mod_mpoly_used_vars", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_used_vars", "ctx"], [24, 1, 1, "c.fmpz_mod_mpoly_used_vars", "used"]], "fmpz_mod_mpoly_zero": [[24, 1, 1, "c.fmpz_mod_mpoly_zero", "A"], [24, 1, 1, "c.fmpz_mod_mpoly_zero", "ctx"]], "fmpz_mod_mul": [[22, 1, 1, "c.fmpz_mod_mul", "a"], [22, 1, 1, "c.fmpz_mod_mul", "b"], [22, 1, 1, "c.fmpz_mod_mul", "c"], [22, 1, 1, "c.fmpz_mod_mul", "ctx"]], "fmpz_mod_neg": [[22, 1, 1, "c.fmpz_mod_neg", "a"], [22, 1, 1, "c.fmpz_mod_neg", "b"], [22, 1, 1, "c.fmpz_mod_neg", "ctx"]], "fmpz_mod_poly_add": [[26, 1, 1, "c.fmpz_mod_poly_add", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_add", "poly1"], [26, 1, 1, "c.fmpz_mod_poly_add", "poly2"], [26, 1, 1, "c.fmpz_mod_poly_add", "res"]], "fmpz_mod_poly_add_series": [[26, 1, 1, "c.fmpz_mod_poly_add_series", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_add_series", "n"], [26, 1, 1, "c.fmpz_mod_poly_add_series", "poly1"], [26, 1, 1, "c.fmpz_mod_poly_add_series", "poly2"], [26, 1, 1, "c.fmpz_mod_poly_add_series", "res"]], "fmpz_mod_poly_clear": [[26, 1, 1, "c.fmpz_mod_poly_clear", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_clear", "poly"]], "fmpz_mod_poly_compose": [[26, 1, 1, "c.fmpz_mod_poly_compose", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_compose", "poly1"], [26, 1, 1, "c.fmpz_mod_poly_compose", "poly2"], [26, 1, 1, "c.fmpz_mod_poly_compose", "res"]], "fmpz_mod_poly_compose_divconquer": [[26, 1, 1, "c.fmpz_mod_poly_compose_divconquer", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_compose_divconquer", "poly1"], [26, 1, 1, "c.fmpz_mod_poly_compose_divconquer", "poly2"], [26, 1, 1, "c.fmpz_mod_poly_compose_divconquer", "res"]], "fmpz_mod_poly_compose_horner": [[26, 1, 1, "c.fmpz_mod_poly_compose_horner", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_compose_horner", "poly1"], [26, 1, 1, "c.fmpz_mod_poly_compose_horner", "poly2"], [26, 1, 1, "c.fmpz_mod_poly_compose_horner", "res"]], "fmpz_mod_poly_compose_mod": [[26, 1, 1, "c.fmpz_mod_poly_compose_mod", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod", "f"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod", "g"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod", "h"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod", "res"]], "fmpz_mod_poly_compose_mod_brent_kung": [[26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung", "f"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung", "g"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung", "h"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung", "res"]], "fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv": [[26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv", "A"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv", "f"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv", "h"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv", "hinv"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv", "res"]], "fmpz_mod_poly_compose_mod_brent_kung_preinv": [[26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_preinv", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_preinv", "f"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_preinv", "g"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_preinv", "h"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_preinv", "hinv"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_preinv", "res"]], "fmpz_mod_poly_compose_mod_brent_kung_vec_preinv": [[26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv", "g"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv", "h"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv", "hinv"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv", "len1"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv", "n"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv", "polys"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv", "res"]], "fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded": [[26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded", "g"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded", "len1"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded", "n"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded", "poly"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded", "polyinv"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded", "polys"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded", "res"]], "fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool": [[26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "g"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "len1"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "n"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "num_threads"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "poly"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "polyinv"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "polys"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "res"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "threads"]], "fmpz_mod_poly_compose_mod_horner": [[26, 1, 1, "c.fmpz_mod_poly_compose_mod_horner", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_horner", "f"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_horner", "g"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_horner", "h"], [26, 1, 1, "c.fmpz_mod_poly_compose_mod_horner", "res"]], "fmpz_mod_poly_deflate": [[26, 1, 1, "c.fmpz_mod_poly_deflate", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_deflate", "deflation"], [26, 1, 1, "c.fmpz_mod_poly_deflate", "input"], [26, 1, 1, "c.fmpz_mod_poly_deflate", "result"]], "fmpz_mod_poly_deflation": [[26, 1, 1, "c.fmpz_mod_poly_deflation", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_deflation", "input"]], "fmpz_mod_poly_degree": [[26, 1, 1, "c.fmpz_mod_poly_degree", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_degree", "poly"]], "fmpz_mod_poly_derivative": [[26, 1, 1, "c.fmpz_mod_poly_derivative", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_derivative", "poly"], [26, 1, 1, "c.fmpz_mod_poly_derivative", "res"]], "fmpz_mod_poly_discriminant": [[26, 1, 1, "c.fmpz_mod_poly_discriminant", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_discriminant", "d"], [26, 1, 1, "c.fmpz_mod_poly_discriminant", "f"]], "fmpz_mod_poly_div": [[26, 1, 1, "c.fmpz_mod_poly_div", "A"], [26, 1, 1, "c.fmpz_mod_poly_div", "B"], [26, 1, 1, "c.fmpz_mod_poly_div", "Q"], [26, 1, 1, "c.fmpz_mod_poly_div", "ctx"]], "fmpz_mod_poly_div_basecase": [[26, 1, 1, "c.fmpz_mod_poly_div_basecase", "A"], [26, 1, 1, "c.fmpz_mod_poly_div_basecase", "B"], [26, 1, 1, "c.fmpz_mod_poly_div_basecase", "Q"], [26, 1, 1, "c.fmpz_mod_poly_div_basecase", "ctx"]], "fmpz_mod_poly_div_divconquer": [[26, 1, 1, "c.fmpz_mod_poly_div_divconquer", "A"], [26, 1, 1, "c.fmpz_mod_poly_div_divconquer", "B"], [26, 1, 1, "c.fmpz_mod_poly_div_divconquer", "Q"], [26, 1, 1, "c.fmpz_mod_poly_div_divconquer", "ctx"]], "fmpz_mod_poly_div_newton": [[26, 1, 1, "c.fmpz_mod_poly_div_newton", "A"], [26, 1, 1, "c.fmpz_mod_poly_div_newton", "B"], [26, 1, 1, "c.fmpz_mod_poly_div_newton", "Q"], [26, 1, 1, "c.fmpz_mod_poly_div_newton", "ctx"]], "fmpz_mod_poly_div_newton_n_preinv": [[26, 1, 1, "c.fmpz_mod_poly_div_newton_n_preinv", "A"], [26, 1, 1, "c.fmpz_mod_poly_div_newton_n_preinv", "B"], [26, 1, 1, "c.fmpz_mod_poly_div_newton_n_preinv", "Binv"], [26, 1, 1, "c.fmpz_mod_poly_div_newton_n_preinv", "Q"], [26, 1, 1, "c.fmpz_mod_poly_div_newton_n_preinv", "ctx"]], "fmpz_mod_poly_div_series": [[26, 1, 1, "c.fmpz_mod_poly_div_series", "A"], [26, 1, 1, "c.fmpz_mod_poly_div_series", "B"], [26, 1, 1, "c.fmpz_mod_poly_div_series", "Q"], [26, 1, 1, "c.fmpz_mod_poly_div_series", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_div_series", "n"]], "fmpz_mod_poly_divides": [[26, 1, 1, "c.fmpz_mod_poly_divides", "A"], [26, 1, 1, "c.fmpz_mod_poly_divides", "B"], [26, 1, 1, "c.fmpz_mod_poly_divides", "Q"], [26, 1, 1, "c.fmpz_mod_poly_divides", "ctx"]], "fmpz_mod_poly_divides_classical": [[26, 1, 1, "c.fmpz_mod_poly_divides_classical", "A"], [26, 1, 1, "c.fmpz_mod_poly_divides_classical", "B"], [26, 1, 1, "c.fmpz_mod_poly_divides_classical", "Q"], [26, 1, 1, "c.fmpz_mod_poly_divides_classical", "ctx"]], "fmpz_mod_poly_divrem": [[26, 1, 1, "c.fmpz_mod_poly_divrem", "A"], [26, 1, 1, "c.fmpz_mod_poly_divrem", "B"], [26, 1, 1, "c.fmpz_mod_poly_divrem", "Q"], [26, 1, 1, "c.fmpz_mod_poly_divrem", "R"], [26, 1, 1, "c.fmpz_mod_poly_divrem", "ctx"]], "fmpz_mod_poly_divrem_basecase": [[26, 1, 1, "c.fmpz_mod_poly_divrem_basecase", "A"], [26, 1, 1, "c.fmpz_mod_poly_divrem_basecase", "B"], [26, 1, 1, "c.fmpz_mod_poly_divrem_basecase", "Q"], [26, 1, 1, "c.fmpz_mod_poly_divrem_basecase", "R"], [26, 1, 1, "c.fmpz_mod_poly_divrem_basecase", "ctx"]], "fmpz_mod_poly_divrem_divconquer": [[26, 1, 1, "c.fmpz_mod_poly_divrem_divconquer", "A"], [26, 1, 1, "c.fmpz_mod_poly_divrem_divconquer", "B"], [26, 1, 1, "c.fmpz_mod_poly_divrem_divconquer", "Q"], [26, 1, 1, "c.fmpz_mod_poly_divrem_divconquer", "R"], [26, 1, 1, "c.fmpz_mod_poly_divrem_divconquer", "ctx"]], "fmpz_mod_poly_divrem_f": [[26, 1, 1, "c.fmpz_mod_poly_divrem_f", "A"], [26, 1, 1, "c.fmpz_mod_poly_divrem_f", "B"], [26, 1, 1, "c.fmpz_mod_poly_divrem_f", "Q"], [26, 1, 1, "c.fmpz_mod_poly_divrem_f", "R"], [26, 1, 1, "c.fmpz_mod_poly_divrem_f", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_divrem_f", "f"]], "fmpz_mod_poly_divrem_newton_n_preinv": [[26, 1, 1, "c.fmpz_mod_poly_divrem_newton_n_preinv", "A"], [26, 1, 1, "c.fmpz_mod_poly_divrem_newton_n_preinv", "B"], [26, 1, 1, "c.fmpz_mod_poly_divrem_newton_n_preinv", "Binv"], [26, 1, 1, "c.fmpz_mod_poly_divrem_newton_n_preinv", "Q"], [26, 1, 1, "c.fmpz_mod_poly_divrem_newton_n_preinv", "R"], [26, 1, 1, "c.fmpz_mod_poly_divrem_newton_n_preinv", "ctx"]], "fmpz_mod_poly_equal": [[26, 1, 1, "c.fmpz_mod_poly_equal", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_equal", "poly1"], [26, 1, 1, "c.fmpz_mod_poly_equal", "poly2"]], "fmpz_mod_poly_equal_trunc": [[26, 1, 1, "c.fmpz_mod_poly_equal_trunc", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_equal_trunc", "n"], [26, 1, 1, "c.fmpz_mod_poly_equal_trunc", "poly1"], [26, 1, 1, "c.fmpz_mod_poly_equal_trunc", "poly2"]], "fmpz_mod_poly_evaluate_fmpz": [[26, 1, 1, "c.fmpz_mod_poly_evaluate_fmpz", "a"], [26, 1, 1, "c.fmpz_mod_poly_evaluate_fmpz", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_evaluate_fmpz", "poly"], [26, 1, 1, "c.fmpz_mod_poly_evaluate_fmpz", "res"]], "fmpz_mod_poly_evaluate_fmpz_vec": [[26, 1, 1, "c.fmpz_mod_poly_evaluate_fmpz_vec", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_evaluate_fmpz_vec", "n"], [26, 1, 1, "c.fmpz_mod_poly_evaluate_fmpz_vec", "poly"], [26, 1, 1, "c.fmpz_mod_poly_evaluate_fmpz_vec", "xs"], [26, 1, 1, "c.fmpz_mod_poly_evaluate_fmpz_vec", "ys"]], "fmpz_mod_poly_evaluate_fmpz_vec_fast": [[26, 1, 1, "c.fmpz_mod_poly_evaluate_fmpz_vec_fast", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_evaluate_fmpz_vec_fast", "n"], [26, 1, 1, "c.fmpz_mod_poly_evaluate_fmpz_vec_fast", "poly"], [26, 1, 1, "c.fmpz_mod_poly_evaluate_fmpz_vec_fast", "xs"], [26, 1, 1, "c.fmpz_mod_poly_evaluate_fmpz_vec_fast", "ys"]], "fmpz_mod_poly_evaluate_fmpz_vec_iter": [[26, 1, 1, "c.fmpz_mod_poly_evaluate_fmpz_vec_iter", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_evaluate_fmpz_vec_iter", "n"], [26, 1, 1, "c.fmpz_mod_poly_evaluate_fmpz_vec_iter", "poly"], [26, 1, 1, "c.fmpz_mod_poly_evaluate_fmpz_vec_iter", "xs"], [26, 1, 1, "c.fmpz_mod_poly_evaluate_fmpz_vec_iter", "ys"]], "fmpz_mod_poly_factor": [[27, 1, 1, "c.fmpz_mod_poly_factor", "ctx"], [27, 1, 1, "c.fmpz_mod_poly_factor", "f"], [27, 1, 1, "c.fmpz_mod_poly_factor", "res"]], "fmpz_mod_poly_factor_berlekamp": [[27, 1, 1, "c.fmpz_mod_poly_factor_berlekamp", "ctx"], [27, 1, 1, "c.fmpz_mod_poly_factor_berlekamp", "f"], [27, 1, 1, "c.fmpz_mod_poly_factor_berlekamp", "factors"]], "fmpz_mod_poly_factor_cantor_zassenhaus": [[27, 1, 1, "c.fmpz_mod_poly_factor_cantor_zassenhaus", "ctx"], [27, 1, 1, "c.fmpz_mod_poly_factor_cantor_zassenhaus", "f"], [27, 1, 1, "c.fmpz_mod_poly_factor_cantor_zassenhaus", "res"]], "fmpz_mod_poly_factor_clear": [[27, 1, 1, "c.fmpz_mod_poly_factor_clear", "ctx"], [27, 1, 1, "c.fmpz_mod_poly_factor_clear", "fac"]], "fmpz_mod_poly_factor_concat": [[27, 1, 1, "c.fmpz_mod_poly_factor_concat", "ctx"], [27, 1, 1, "c.fmpz_mod_poly_factor_concat", "fac"], [27, 1, 1, "c.fmpz_mod_poly_factor_concat", "res"]], "fmpz_mod_poly_factor_distinct_deg": [[27, 1, 1, "c.fmpz_mod_poly_factor_distinct_deg", "ctx"], [27, 1, 1, "c.fmpz_mod_poly_factor_distinct_deg", "degs"], [27, 1, 1, "c.fmpz_mod_poly_factor_distinct_deg", "poly"], [27, 1, 1, "c.fmpz_mod_poly_factor_distinct_deg", "res"]], "fmpz_mod_poly_factor_distinct_deg_threaded": [[27, 1, 1, "c.fmpz_mod_poly_factor_distinct_deg_threaded", "ctx"], [27, 1, 1, "c.fmpz_mod_poly_factor_distinct_deg_threaded", "degs"], [27, 1, 1, "c.fmpz_mod_poly_factor_distinct_deg_threaded", "poly"], [27, 1, 1, "c.fmpz_mod_poly_factor_distinct_deg_threaded", "res"]], "fmpz_mod_poly_factor_equal_deg": [[27, 1, 1, "c.fmpz_mod_poly_factor_equal_deg", "ctx"], [27, 1, 1, "c.fmpz_mod_poly_factor_equal_deg", "d"], [27, 1, 1, "c.fmpz_mod_poly_factor_equal_deg", "factors"], [27, 1, 1, "c.fmpz_mod_poly_factor_equal_deg", "pol"]], "fmpz_mod_poly_factor_equal_deg_prob": [[27, 1, 1, "c.fmpz_mod_poly_factor_equal_deg_prob", "ctx"], [27, 1, 1, "c.fmpz_mod_poly_factor_equal_deg_prob", "d"], [27, 1, 1, "c.fmpz_mod_poly_factor_equal_deg_prob", "factor"], [27, 1, 1, "c.fmpz_mod_poly_factor_equal_deg_prob", "pol"], [27, 1, 1, "c.fmpz_mod_poly_factor_equal_deg_prob", "state"]], "fmpz_mod_poly_factor_fit_length": [[27, 1, 1, "c.fmpz_mod_poly_factor_fit_length", "ctx"], [27, 1, 1, "c.fmpz_mod_poly_factor_fit_length", "fac"], [27, 1, 1, "c.fmpz_mod_poly_factor_fit_length", "len"]], "fmpz_mod_poly_factor_init": [[27, 1, 1, "c.fmpz_mod_poly_factor_init", "ctx"], [27, 1, 1, "c.fmpz_mod_poly_factor_init", "fac"]], "fmpz_mod_poly_factor_insert": [[27, 1, 1, "c.fmpz_mod_poly_factor_insert", "ctx"], [27, 1, 1, "c.fmpz_mod_poly_factor_insert", "exp"], [27, 1, 1, "c.fmpz_mod_poly_factor_insert", "fac"], [27, 1, 1, "c.fmpz_mod_poly_factor_insert", "poly"]], "fmpz_mod_poly_factor_kaltofen_shoup": [[27, 1, 1, "c.fmpz_mod_poly_factor_kaltofen_shoup", "ctx"], [27, 1, 1, "c.fmpz_mod_poly_factor_kaltofen_shoup", "poly"], [27, 1, 1, "c.fmpz_mod_poly_factor_kaltofen_shoup", "res"]], "fmpz_mod_poly_factor_pow": [[27, 1, 1, "c.fmpz_mod_poly_factor_pow", "ctx"], [27, 1, 1, "c.fmpz_mod_poly_factor_pow", "exp"], [27, 1, 1, "c.fmpz_mod_poly_factor_pow", "fac"]], "fmpz_mod_poly_factor_print": [[27, 1, 1, "c.fmpz_mod_poly_factor_print", "ctx"], [27, 1, 1, "c.fmpz_mod_poly_factor_print", "fac"]], "fmpz_mod_poly_factor_realloc": [[27, 1, 1, "c.fmpz_mod_poly_factor_realloc", "alloc"], [27, 1, 1, "c.fmpz_mod_poly_factor_realloc", "ctx"], [27, 1, 1, "c.fmpz_mod_poly_factor_realloc", "fac"]], "fmpz_mod_poly_factor_set": [[27, 1, 1, "c.fmpz_mod_poly_factor_set", "ctx"], [27, 1, 1, "c.fmpz_mod_poly_factor_set", "fac"], [27, 1, 1, "c.fmpz_mod_poly_factor_set", "res"]], "fmpz_mod_poly_factor_squarefree": [[27, 1, 1, "c.fmpz_mod_poly_factor_squarefree", "ctx"], [27, 1, 1, "c.fmpz_mod_poly_factor_squarefree", "f"], [27, 1, 1, "c.fmpz_mod_poly_factor_squarefree", "res"]], "fmpz_mod_poly_find_distinct_nonzero_roots": [[26, 1, 1, "c.fmpz_mod_poly_find_distinct_nonzero_roots", "A"], [26, 1, 1, "c.fmpz_mod_poly_find_distinct_nonzero_roots", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_find_distinct_nonzero_roots", "roots"]], "fmpz_mod_poly_fit_length": [[26, 1, 1, "c.fmpz_mod_poly_fit_length", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_fit_length", "len"], [26, 1, 1, "c.fmpz_mod_poly_fit_length", "poly"]], "fmpz_mod_poly_fprint": [[26, 1, 1, "c.fmpz_mod_poly_fprint", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_fprint", "file"], [26, 1, 1, "c.fmpz_mod_poly_fprint", "poly"]], "fmpz_mod_poly_fprint_pretty": [[26, 1, 1, "c.fmpz_mod_poly_fprint_pretty", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_fprint_pretty", "file"], [26, 1, 1, "c.fmpz_mod_poly_fprint_pretty", "poly"], [26, 1, 1, "c.fmpz_mod_poly_fprint_pretty", "x"]], "fmpz_mod_poly_frobenius_power": [[26, 1, 1, "c.fmpz_mod_poly_frobenius_power", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_frobenius_power", "f"], [26, 1, 1, "c.fmpz_mod_poly_frobenius_power", "m"], [26, 1, 1, "c.fmpz_mod_poly_frobenius_power", "pow"], [26, 1, 1, "c.fmpz_mod_poly_frobenius_power", "res"]], "fmpz_mod_poly_frobenius_powers_2exp_clear": [[26, 1, 1, "c.fmpz_mod_poly_frobenius_powers_2exp_clear", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_frobenius_powers_2exp_clear", "pow"]], "fmpz_mod_poly_frobenius_powers_2exp_precomp": [[26, 1, 1, "c.fmpz_mod_poly_frobenius_powers_2exp_precomp", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_frobenius_powers_2exp_precomp", "f"], [26, 1, 1, "c.fmpz_mod_poly_frobenius_powers_2exp_precomp", "finv"], [26, 1, 1, "c.fmpz_mod_poly_frobenius_powers_2exp_precomp", "m"], [26, 1, 1, "c.fmpz_mod_poly_frobenius_powers_2exp_precomp", "pow"]], "fmpz_mod_poly_frobenius_powers_clear": [[26, 1, 1, "c.fmpz_mod_poly_frobenius_powers_clear", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_frobenius_powers_clear", "pow"]], "fmpz_mod_poly_frobenius_powers_precomp": [[26, 1, 1, "c.fmpz_mod_poly_frobenius_powers_precomp", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_frobenius_powers_precomp", "f"], [26, 1, 1, "c.fmpz_mod_poly_frobenius_powers_precomp", "finv"], [26, 1, 1, "c.fmpz_mod_poly_frobenius_powers_precomp", "m"], [26, 1, 1, "c.fmpz_mod_poly_frobenius_powers_precomp", "pow"]], "fmpz_mod_poly_gcd": [[26, 1, 1, "c.fmpz_mod_poly_gcd", "A"], [26, 1, 1, "c.fmpz_mod_poly_gcd", "B"], [26, 1, 1, "c.fmpz_mod_poly_gcd", "G"], [26, 1, 1, "c.fmpz_mod_poly_gcd", "ctx"]], "fmpz_mod_poly_gcd_euclidean": [[26, 1, 1, "c.fmpz_mod_poly_gcd_euclidean", "A"], [26, 1, 1, "c.fmpz_mod_poly_gcd_euclidean", "B"], [26, 1, 1, "c.fmpz_mod_poly_gcd_euclidean", "G"], [26, 1, 1, "c.fmpz_mod_poly_gcd_euclidean", "ctx"]], "fmpz_mod_poly_gcd_euclidean_f": [[26, 1, 1, "c.fmpz_mod_poly_gcd_euclidean_f", "A"], [26, 1, 1, "c.fmpz_mod_poly_gcd_euclidean_f", "B"], [26, 1, 1, "c.fmpz_mod_poly_gcd_euclidean_f", "G"], [26, 1, 1, "c.fmpz_mod_poly_gcd_euclidean_f", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_gcd_euclidean_f", "f"]], "fmpz_mod_poly_gcd_f": [[26, 1, 1, "c.fmpz_mod_poly_gcd_f", "A"], [26, 1, 1, "c.fmpz_mod_poly_gcd_f", "B"], [26, 1, 1, "c.fmpz_mod_poly_gcd_f", "G"], [26, 1, 1, "c.fmpz_mod_poly_gcd_f", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_gcd_f", "f"]], "fmpz_mod_poly_gcd_hgcd": [[26, 1, 1, "c.fmpz_mod_poly_gcd_hgcd", "A"], [26, 1, 1, "c.fmpz_mod_poly_gcd_hgcd", "B"], [26, 1, 1, "c.fmpz_mod_poly_gcd_hgcd", "G"], [26, 1, 1, "c.fmpz_mod_poly_gcd_hgcd", "ctx"]], "fmpz_mod_poly_gcdinv": [[26, 1, 1, "c.fmpz_mod_poly_gcdinv", "A"], [26, 1, 1, "c.fmpz_mod_poly_gcdinv", "B"], [26, 1, 1, "c.fmpz_mod_poly_gcdinv", "G"], [26, 1, 1, "c.fmpz_mod_poly_gcdinv", "S"], [26, 1, 1, "c.fmpz_mod_poly_gcdinv", "ctx"]], "fmpz_mod_poly_gcdinv_euclidean": [[26, 1, 1, "c.fmpz_mod_poly_gcdinv_euclidean", "A"], [26, 1, 1, "c.fmpz_mod_poly_gcdinv_euclidean", "B"], [26, 1, 1, "c.fmpz_mod_poly_gcdinv_euclidean", "G"], [26, 1, 1, "c.fmpz_mod_poly_gcdinv_euclidean", "S"], [26, 1, 1, "c.fmpz_mod_poly_gcdinv_euclidean", "ctx"]], "fmpz_mod_poly_gcdinv_euclidean_f": [[26, 1, 1, "c.fmpz_mod_poly_gcdinv_euclidean_f", "A"], [26, 1, 1, "c.fmpz_mod_poly_gcdinv_euclidean_f", "B"], [26, 1, 1, "c.fmpz_mod_poly_gcdinv_euclidean_f", "G"], [26, 1, 1, "c.fmpz_mod_poly_gcdinv_euclidean_f", "S"], [26, 1, 1, "c.fmpz_mod_poly_gcdinv_euclidean_f", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_gcdinv_euclidean_f", "f"]], "fmpz_mod_poly_gcdinv_f": [[26, 1, 1, "c.fmpz_mod_poly_gcdinv_f", "A"], [26, 1, 1, "c.fmpz_mod_poly_gcdinv_f", "B"], [26, 1, 1, "c.fmpz_mod_poly_gcdinv_f", "G"], [26, 1, 1, "c.fmpz_mod_poly_gcdinv_f", "S"], [26, 1, 1, "c.fmpz_mod_poly_gcdinv_f", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_gcdinv_f", "f"]], "fmpz_mod_poly_get_coeff_fmpz": [[26, 1, 1, "c.fmpz_mod_poly_get_coeff_fmpz", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_get_coeff_fmpz", "n"], [26, 1, 1, "c.fmpz_mod_poly_get_coeff_fmpz", "poly"], [26, 1, 1, "c.fmpz_mod_poly_get_coeff_fmpz", "x"]], "fmpz_mod_poly_get_coeff_mpz": [[26, 1, 1, "c.fmpz_mod_poly_get_coeff_mpz", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_get_coeff_mpz", "n"], [26, 1, 1, "c.fmpz_mod_poly_get_coeff_mpz", "poly"], [26, 1, 1, "c.fmpz_mod_poly_get_coeff_mpz", "x"]], "fmpz_mod_poly_get_fmpz_poly": [[26, 1, 1, "c.fmpz_mod_poly_get_fmpz_poly", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_get_fmpz_poly", "f"], [26, 1, 1, "c.fmpz_mod_poly_get_fmpz_poly", "g"]], "fmpz_mod_poly_get_nmod_poly": [[26, 1, 1, "c.fmpz_mod_poly_get_nmod_poly", "f"], [26, 1, 1, "c.fmpz_mod_poly_get_nmod_poly", "g"]], "fmpz_mod_poly_inflate": [[26, 1, 1, "c.fmpz_mod_poly_inflate", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_inflate", "inflation"], [26, 1, 1, "c.fmpz_mod_poly_inflate", "input"], [26, 1, 1, "c.fmpz_mod_poly_inflate", "result"]], "fmpz_mod_poly_init": [[26, 1, 1, "c.fmpz_mod_poly_init", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_init", "poly"]], "fmpz_mod_poly_init2": [[26, 1, 1, "c.fmpz_mod_poly_init2", "alloc"], [26, 1, 1, "c.fmpz_mod_poly_init2", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_init2", "poly"]], "fmpz_mod_poly_inv_series": [[26, 1, 1, "c.fmpz_mod_poly_inv_series", "Q"], [26, 1, 1, "c.fmpz_mod_poly_inv_series", "Qinv"], [26, 1, 1, "c.fmpz_mod_poly_inv_series", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_inv_series", "n"]], "fmpz_mod_poly_inv_series_f": [[26, 1, 1, "c.fmpz_mod_poly_inv_series_f", "Q"], [26, 1, 1, "c.fmpz_mod_poly_inv_series_f", "Qinv"], [26, 1, 1, "c.fmpz_mod_poly_inv_series_f", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_inv_series_f", "f"], [26, 1, 1, "c.fmpz_mod_poly_inv_series_f", "n"]], "fmpz_mod_poly_inv_series_newton": [[26, 1, 1, "c.fmpz_mod_poly_inv_series_newton", "Q"], [26, 1, 1, "c.fmpz_mod_poly_inv_series_newton", "Qinv"], [26, 1, 1, "c.fmpz_mod_poly_inv_series_newton", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_inv_series_newton", "n"]], "fmpz_mod_poly_inv_series_newton_f": [[26, 1, 1, "c.fmpz_mod_poly_inv_series_newton_f", "Q"], [26, 1, 1, "c.fmpz_mod_poly_inv_series_newton_f", "Qinv"], [26, 1, 1, "c.fmpz_mod_poly_inv_series_newton_f", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_inv_series_newton_f", "f"], [26, 1, 1, "c.fmpz_mod_poly_inv_series_newton_f", "n"]], "fmpz_mod_poly_invmod": [[26, 1, 1, "c.fmpz_mod_poly_invmod", "A"], [26, 1, 1, "c.fmpz_mod_poly_invmod", "B"], [26, 1, 1, "c.fmpz_mod_poly_invmod", "P"], [26, 1, 1, "c.fmpz_mod_poly_invmod", "ctx"]], "fmpz_mod_poly_invmod_f": [[26, 1, 1, "c.fmpz_mod_poly_invmod_f", "A"], [26, 1, 1, "c.fmpz_mod_poly_invmod_f", "B"], [26, 1, 1, "c.fmpz_mod_poly_invmod_f", "P"], [26, 1, 1, "c.fmpz_mod_poly_invmod_f", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_invmod_f", "f"]], "fmpz_mod_poly_invsqrt_series": [[26, 1, 1, "c.fmpz_mod_poly_invsqrt_series", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_invsqrt_series", "g"], [26, 1, 1, "c.fmpz_mod_poly_invsqrt_series", "h"], [26, 1, 1, "c.fmpz_mod_poly_invsqrt_series", "n"]], "fmpz_mod_poly_is_gen": [[26, 1, 1, "c.fmpz_mod_poly_is_gen", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_is_gen", "poly"]], "fmpz_mod_poly_is_irreducible": [[27, 1, 1, "c.fmpz_mod_poly_is_irreducible", "ctx"], [27, 1, 1, "c.fmpz_mod_poly_is_irreducible", "f"]], "fmpz_mod_poly_is_irreducible_ddf": [[27, 1, 1, "c.fmpz_mod_poly_is_irreducible_ddf", "ctx"], [27, 1, 1, "c.fmpz_mod_poly_is_irreducible_ddf", "f"]], "fmpz_mod_poly_is_irreducible_rabin": [[27, 1, 1, "c.fmpz_mod_poly_is_irreducible_rabin", "ctx"], [27, 1, 1, "c.fmpz_mod_poly_is_irreducible_rabin", "f"]], "fmpz_mod_poly_is_irreducible_rabin_f": [[27, 1, 1, "c.fmpz_mod_poly_is_irreducible_rabin_f", "ctx"], [27, 1, 1, "c.fmpz_mod_poly_is_irreducible_rabin_f", "f"], [27, 1, 1, "c.fmpz_mod_poly_is_irreducible_rabin_f", "r"]], "fmpz_mod_poly_is_one": [[26, 1, 1, "c.fmpz_mod_poly_is_one", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_is_one", "poly"]], "fmpz_mod_poly_is_squarefree": [[27, 1, 1, "c.fmpz_mod_poly_is_squarefree", "ctx"], [27, 1, 1, "c.fmpz_mod_poly_is_squarefree", "f"]], "fmpz_mod_poly_is_squarefree_f": [[27, 1, 1, "c.fmpz_mod_poly_is_squarefree_f", "ctx"], [27, 1, 1, "c.fmpz_mod_poly_is_squarefree_f", "f"], [27, 1, 1, "c.fmpz_mod_poly_is_squarefree_f", "fac"]], "fmpz_mod_poly_is_zero": [[26, 1, 1, "c.fmpz_mod_poly_is_zero", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_is_zero", "poly"]], "fmpz_mod_poly_lead": [[26, 1, 1, "c.fmpz_mod_poly_lead", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_lead", "poly"]], "fmpz_mod_poly_length": [[26, 1, 1, "c.fmpz_mod_poly_length", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_length", "poly"]], "fmpz_mod_poly_make_monic": [[26, 1, 1, "c.fmpz_mod_poly_make_monic", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_make_monic", "poly"], [26, 1, 1, "c.fmpz_mod_poly_make_monic", "res"]], "fmpz_mod_poly_make_monic_f": [[26, 1, 1, "c.fmpz_mod_poly_make_monic_f", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_make_monic_f", "f"], [26, 1, 1, "c.fmpz_mod_poly_make_monic_f", "poly"], [26, 1, 1, "c.fmpz_mod_poly_make_monic_f", "res"]], "fmpz_mod_poly_minpoly": [[26, 1, 1, "c.fmpz_mod_poly_minpoly", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_minpoly", "len"], [26, 1, 1, "c.fmpz_mod_poly_minpoly", "poly"], [26, 1, 1, "c.fmpz_mod_poly_minpoly", "seq"]], "fmpz_mod_poly_minpoly_bm": [[26, 1, 1, "c.fmpz_mod_poly_minpoly_bm", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_minpoly_bm", "len"], [26, 1, 1, "c.fmpz_mod_poly_minpoly_bm", "poly"], [26, 1, 1, "c.fmpz_mod_poly_minpoly_bm", "seq"]], "fmpz_mod_poly_minpoly_hgcd": [[26, 1, 1, "c.fmpz_mod_poly_minpoly_hgcd", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_minpoly_hgcd", "len"], [26, 1, 1, "c.fmpz_mod_poly_minpoly_hgcd", "poly"], [26, 1, 1, "c.fmpz_mod_poly_minpoly_hgcd", "seq"]], "fmpz_mod_poly_mul": [[26, 1, 1, "c.fmpz_mod_poly_mul", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_mul", "poly1"], [26, 1, 1, "c.fmpz_mod_poly_mul", "poly2"], [26, 1, 1, "c.fmpz_mod_poly_mul", "res"]], "fmpz_mod_poly_mulhigh": [[26, 1, 1, "c.fmpz_mod_poly_mulhigh", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_mulhigh", "poly1"], [26, 1, 1, "c.fmpz_mod_poly_mulhigh", "poly2"], [26, 1, 1, "c.fmpz_mod_poly_mulhigh", "res"], [26, 1, 1, "c.fmpz_mod_poly_mulhigh", "start"]], "fmpz_mod_poly_mullow": [[26, 1, 1, "c.fmpz_mod_poly_mullow", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_mullow", "n"], [26, 1, 1, "c.fmpz_mod_poly_mullow", "poly1"], [26, 1, 1, "c.fmpz_mod_poly_mullow", "poly2"], [26, 1, 1, "c.fmpz_mod_poly_mullow", "res"]], "fmpz_mod_poly_mulmod": [[26, 1, 1, "c.fmpz_mod_poly_mulmod", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_mulmod", "f"], [26, 1, 1, "c.fmpz_mod_poly_mulmod", "poly1"], [26, 1, 1, "c.fmpz_mod_poly_mulmod", "poly2"], [26, 1, 1, "c.fmpz_mod_poly_mulmod", "res"]], "fmpz_mod_poly_mulmod_preinv": [[26, 1, 1, "c.fmpz_mod_poly_mulmod_preinv", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_mulmod_preinv", "f"], [26, 1, 1, "c.fmpz_mod_poly_mulmod_preinv", "finv"], [26, 1, 1, "c.fmpz_mod_poly_mulmod_preinv", "poly1"], [26, 1, 1, "c.fmpz_mod_poly_mulmod_preinv", "poly2"], [26, 1, 1, "c.fmpz_mod_poly_mulmod_preinv", "res"]], "fmpz_mod_poly_neg": [[26, 1, 1, "c.fmpz_mod_poly_neg", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_neg", "poly"], [26, 1, 1, "c.fmpz_mod_poly_neg", "res"]], "fmpz_mod_poly_one": [[26, 1, 1, "c.fmpz_mod_poly_one", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_one", "poly"]], "fmpz_mod_poly_pow": [[26, 1, 1, "c.fmpz_mod_poly_pow", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_pow", "e"], [26, 1, 1, "c.fmpz_mod_poly_pow", "op"], [26, 1, 1, "c.fmpz_mod_poly_pow", "rop"]], "fmpz_mod_poly_pow_trunc": [[26, 1, 1, "c.fmpz_mod_poly_pow_trunc", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_pow_trunc", "e"], [26, 1, 1, "c.fmpz_mod_poly_pow_trunc", "poly"], [26, 1, 1, "c.fmpz_mod_poly_pow_trunc", "res"], [26, 1, 1, "c.fmpz_mod_poly_pow_trunc", "trunc"]], "fmpz_mod_poly_pow_trunc_binexp": [[26, 1, 1, "c.fmpz_mod_poly_pow_trunc_binexp", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_pow_trunc_binexp", "e"], [26, 1, 1, "c.fmpz_mod_poly_pow_trunc_binexp", "poly"], [26, 1, 1, "c.fmpz_mod_poly_pow_trunc_binexp", "res"], [26, 1, 1, "c.fmpz_mod_poly_pow_trunc_binexp", "trunc"]], "fmpz_mod_poly_powers_mod_bsgs": [[26, 1, 1, "c.fmpz_mod_poly_powers_mod_bsgs", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_powers_mod_bsgs", "f"], [26, 1, 1, "c.fmpz_mod_poly_powers_mod_bsgs", "g"], [26, 1, 1, "c.fmpz_mod_poly_powers_mod_bsgs", "n"], [26, 1, 1, "c.fmpz_mod_poly_powers_mod_bsgs", "res"]], "fmpz_mod_poly_powers_mod_naive": [[26, 1, 1, "c.fmpz_mod_poly_powers_mod_naive", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_powers_mod_naive", "f"], [26, 1, 1, "c.fmpz_mod_poly_powers_mod_naive", "g"], [26, 1, 1, "c.fmpz_mod_poly_powers_mod_naive", "n"], [26, 1, 1, "c.fmpz_mod_poly_powers_mod_naive", "res"]], "fmpz_mod_poly_powmod_fmpz_binexp": [[26, 1, 1, "c.fmpz_mod_poly_powmod_fmpz_binexp", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_powmod_fmpz_binexp", "e"], [26, 1, 1, "c.fmpz_mod_poly_powmod_fmpz_binexp", "f"], [26, 1, 1, "c.fmpz_mod_poly_powmod_fmpz_binexp", "poly"], [26, 1, 1, "c.fmpz_mod_poly_powmod_fmpz_binexp", "res"]], "fmpz_mod_poly_powmod_fmpz_binexp_preinv": [[26, 1, 1, "c.fmpz_mod_poly_powmod_fmpz_binexp_preinv", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_powmod_fmpz_binexp_preinv", "e"], [26, 1, 1, "c.fmpz_mod_poly_powmod_fmpz_binexp_preinv", "f"], [26, 1, 1, "c.fmpz_mod_poly_powmod_fmpz_binexp_preinv", "finv"], [26, 1, 1, "c.fmpz_mod_poly_powmod_fmpz_binexp_preinv", "poly"], [26, 1, 1, "c.fmpz_mod_poly_powmod_fmpz_binexp_preinv", "res"]], "fmpz_mod_poly_powmod_ui_binexp": [[26, 1, 1, "c.fmpz_mod_poly_powmod_ui_binexp", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_powmod_ui_binexp", "e"], [26, 1, 1, "c.fmpz_mod_poly_powmod_ui_binexp", "f"], [26, 1, 1, "c.fmpz_mod_poly_powmod_ui_binexp", "poly"], [26, 1, 1, "c.fmpz_mod_poly_powmod_ui_binexp", "res"]], "fmpz_mod_poly_powmod_ui_binexp_preinv": [[26, 1, 1, "c.fmpz_mod_poly_powmod_ui_binexp_preinv", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_powmod_ui_binexp_preinv", "e"], [26, 1, 1, "c.fmpz_mod_poly_powmod_ui_binexp_preinv", "f"], [26, 1, 1, "c.fmpz_mod_poly_powmod_ui_binexp_preinv", "finv"], [26, 1, 1, "c.fmpz_mod_poly_powmod_ui_binexp_preinv", "poly"], [26, 1, 1, "c.fmpz_mod_poly_powmod_ui_binexp_preinv", "res"]], "fmpz_mod_poly_powmod_x_fmpz_preinv": [[26, 1, 1, "c.fmpz_mod_poly_powmod_x_fmpz_preinv", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_powmod_x_fmpz_preinv", "e"], [26, 1, 1, "c.fmpz_mod_poly_powmod_x_fmpz_preinv", "f"], [26, 1, 1, "c.fmpz_mod_poly_powmod_x_fmpz_preinv", "finv"], [26, 1, 1, "c.fmpz_mod_poly_powmod_x_fmpz_preinv", "res"]], "fmpz_mod_poly_precompute_matrix": [[26, 1, 1, "c.fmpz_mod_poly_precompute_matrix", "A"], [26, 1, 1, "c.fmpz_mod_poly_precompute_matrix", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_precompute_matrix", "f"], [26, 1, 1, "c.fmpz_mod_poly_precompute_matrix", "g"], [26, 1, 1, "c.fmpz_mod_poly_precompute_matrix", "ginv"]], "fmpz_mod_poly_print": [[26, 1, 1, "c.fmpz_mod_poly_print", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_print", "poly"]], "fmpz_mod_poly_print_pretty": [[26, 1, 1, "c.fmpz_mod_poly_print_pretty", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_print_pretty", "poly"], [26, 1, 1, "c.fmpz_mod_poly_print_pretty", "x"]], "fmpz_mod_poly_product_roots_fmpz_vec": [[26, 1, 1, "c.fmpz_mod_poly_product_roots_fmpz_vec", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_product_roots_fmpz_vec", "f"], [26, 1, 1, "c.fmpz_mod_poly_product_roots_fmpz_vec", "n"], [26, 1, 1, "c.fmpz_mod_poly_product_roots_fmpz_vec", "poly"], [26, 1, 1, "c.fmpz_mod_poly_product_roots_fmpz_vec", "xs"]], "fmpz_mod_poly_radix": [[26, 1, 1, "c.fmpz_mod_poly_radix", "B"], [26, 1, 1, "c.fmpz_mod_poly_radix", "D"], [26, 1, 1, "c.fmpz_mod_poly_radix", "F"], [26, 1, 1, "c.fmpz_mod_poly_radix", "ctx"]], "fmpz_mod_poly_radix_init": [[26, 1, 1, "c.fmpz_mod_poly_radix_init", "D"], [26, 1, 1, "c.fmpz_mod_poly_radix_init", "R"], [26, 1, 1, "c.fmpz_mod_poly_radix_init", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_radix_init", "degF"]], "fmpz_mod_poly_randtest": [[26, 1, 1, "c.fmpz_mod_poly_randtest", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_randtest", "f"], [26, 1, 1, "c.fmpz_mod_poly_randtest", "len"], [26, 1, 1, "c.fmpz_mod_poly_randtest", "state"]], "fmpz_mod_poly_randtest_irreducible": [[26, 1, 1, "c.fmpz_mod_poly_randtest_irreducible", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_randtest_irreducible", "f"], [26, 1, 1, "c.fmpz_mod_poly_randtest_irreducible", "len"], [26, 1, 1, "c.fmpz_mod_poly_randtest_irreducible", "state"]], "fmpz_mod_poly_randtest_monic": [[26, 1, 1, "c.fmpz_mod_poly_randtest_monic", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_randtest_monic", "len"], [26, 1, 1, "c.fmpz_mod_poly_randtest_monic", "poly"], [26, 1, 1, "c.fmpz_mod_poly_randtest_monic", "state"]], "fmpz_mod_poly_randtest_monic_irreducible": [[26, 1, 1, "c.fmpz_mod_poly_randtest_monic_irreducible", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_randtest_monic_irreducible", "len"], [26, 1, 1, "c.fmpz_mod_poly_randtest_monic_irreducible", "poly"], [26, 1, 1, "c.fmpz_mod_poly_randtest_monic_irreducible", "state"]], "fmpz_mod_poly_randtest_monic_primitive": [[26, 1, 1, "c.fmpz_mod_poly_randtest_monic_primitive", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_randtest_monic_primitive", "len"], [26, 1, 1, "c.fmpz_mod_poly_randtest_monic_primitive", "poly"], [26, 1, 1, "c.fmpz_mod_poly_randtest_monic_primitive", "state"]], "fmpz_mod_poly_randtest_not_zero": [[26, 1, 1, "c.fmpz_mod_poly_randtest_not_zero", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_randtest_not_zero", "f"], [26, 1, 1, "c.fmpz_mod_poly_randtest_not_zero", "len"], [26, 1, 1, "c.fmpz_mod_poly_randtest_not_zero", "state"]], "fmpz_mod_poly_randtest_pentomial": [[26, 1, 1, "c.fmpz_mod_poly_randtest_pentomial", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_randtest_pentomial", "len"], [26, 1, 1, "c.fmpz_mod_poly_randtest_pentomial", "poly"], [26, 1, 1, "c.fmpz_mod_poly_randtest_pentomial", "state"]], "fmpz_mod_poly_randtest_pentomial_irreducible": [[26, 1, 1, "c.fmpz_mod_poly_randtest_pentomial_irreducible", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_randtest_pentomial_irreducible", "len"], [26, 1, 1, "c.fmpz_mod_poly_randtest_pentomial_irreducible", "max_attempts"], [26, 1, 1, "c.fmpz_mod_poly_randtest_pentomial_irreducible", "poly"], [26, 1, 1, "c.fmpz_mod_poly_randtest_pentomial_irreducible", "state"]], "fmpz_mod_poly_randtest_sparse_irreducible": [[26, 1, 1, "c.fmpz_mod_poly_randtest_sparse_irreducible", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_randtest_sparse_irreducible", "len"], [26, 1, 1, "c.fmpz_mod_poly_randtest_sparse_irreducible", "poly"], [26, 1, 1, "c.fmpz_mod_poly_randtest_sparse_irreducible", "state"]], "fmpz_mod_poly_randtest_trinomial": [[26, 1, 1, "c.fmpz_mod_poly_randtest_trinomial", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_randtest_trinomial", "len"], [26, 1, 1, "c.fmpz_mod_poly_randtest_trinomial", "poly"], [26, 1, 1, "c.fmpz_mod_poly_randtest_trinomial", "state"]], "fmpz_mod_poly_randtest_trinomial_irreducible": [[26, 1, 1, "c.fmpz_mod_poly_randtest_trinomial_irreducible", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_randtest_trinomial_irreducible", "len"], [26, 1, 1, "c.fmpz_mod_poly_randtest_trinomial_irreducible", "max_attempts"], [26, 1, 1, "c.fmpz_mod_poly_randtest_trinomial_irreducible", "poly"], [26, 1, 1, "c.fmpz_mod_poly_randtest_trinomial_irreducible", "state"]], "fmpz_mod_poly_realloc": [[26, 1, 1, "c.fmpz_mod_poly_realloc", "alloc"], [26, 1, 1, "c.fmpz_mod_poly_realloc", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_realloc", "poly"]], "fmpz_mod_poly_rem": [[26, 1, 1, "c.fmpz_mod_poly_rem", "A"], [26, 1, 1, "c.fmpz_mod_poly_rem", "B"], [26, 1, 1, "c.fmpz_mod_poly_rem", "R"], [26, 1, 1, "c.fmpz_mod_poly_rem", "ctx"]], "fmpz_mod_poly_rem_basecase": [[26, 1, 1, "c.fmpz_mod_poly_rem_basecase", "A"], [26, 1, 1, "c.fmpz_mod_poly_rem_basecase", "B"], [26, 1, 1, "c.fmpz_mod_poly_rem_basecase", "R"], [26, 1, 1, "c.fmpz_mod_poly_rem_basecase", "ctx"]], "fmpz_mod_poly_remove": [[26, 1, 1, "c.fmpz_mod_poly_remove", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_remove", "f"], [26, 1, 1, "c.fmpz_mod_poly_remove", "g"]], "fmpz_mod_poly_resultant": [[26, 1, 1, "c.fmpz_mod_poly_resultant", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_resultant", "f"], [26, 1, 1, "c.fmpz_mod_poly_resultant", "g"], [26, 1, 1, "c.fmpz_mod_poly_resultant", "res"]], "fmpz_mod_poly_resultant_euclidean": [[26, 1, 1, "c.fmpz_mod_poly_resultant_euclidean", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_resultant_euclidean", "f"], [26, 1, 1, "c.fmpz_mod_poly_resultant_euclidean", "g"], [26, 1, 1, "c.fmpz_mod_poly_resultant_euclidean", "r"]], "fmpz_mod_poly_resultant_hgcd": [[26, 1, 1, "c.fmpz_mod_poly_resultant_hgcd", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_resultant_hgcd", "f"], [26, 1, 1, "c.fmpz_mod_poly_resultant_hgcd", "g"], [26, 1, 1, "c.fmpz_mod_poly_resultant_hgcd", "res"]], "fmpz_mod_poly_reverse": [[26, 1, 1, "c.fmpz_mod_poly_reverse", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_reverse", "n"], [26, 1, 1, "c.fmpz_mod_poly_reverse", "poly"], [26, 1, 1, "c.fmpz_mod_poly_reverse", "res"]], "fmpz_mod_poly_roots": [[27, 1, 1, "c.fmpz_mod_poly_roots", "ctx"], [27, 1, 1, "c.fmpz_mod_poly_roots", "f"], [27, 1, 1, "c.fmpz_mod_poly_roots", "r"], [27, 1, 1, "c.fmpz_mod_poly_roots", "with_multiplicity"]], "fmpz_mod_poly_roots_factored": [[27, 1, 1, "c.fmpz_mod_poly_roots_factored", "ctx"], [27, 1, 1, "c.fmpz_mod_poly_roots_factored", "f"], [27, 1, 1, "c.fmpz_mod_poly_roots_factored", "n"], [27, 1, 1, "c.fmpz_mod_poly_roots_factored", "r"], [27, 1, 1, "c.fmpz_mod_poly_roots_factored", "with_multiplicity"]], "fmpz_mod_poly_scalar_addmul_fmpz": [[26, 1, 1, "c.fmpz_mod_poly_scalar_addmul_fmpz", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_scalar_addmul_fmpz", "op"], [26, 1, 1, "c.fmpz_mod_poly_scalar_addmul_fmpz", "rop"], [26, 1, 1, "c.fmpz_mod_poly_scalar_addmul_fmpz", "x"]], "fmpz_mod_poly_scalar_div_fmpz": [[26, 1, 1, "c.fmpz_mod_poly_scalar_div_fmpz", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_scalar_div_fmpz", "poly"], [26, 1, 1, "c.fmpz_mod_poly_scalar_div_fmpz", "res"], [26, 1, 1, "c.fmpz_mod_poly_scalar_div_fmpz", "x"]], "fmpz_mod_poly_scalar_mul_fmpz": [[26, 1, 1, "c.fmpz_mod_poly_scalar_mul_fmpz", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_scalar_mul_fmpz", "poly"], [26, 1, 1, "c.fmpz_mod_poly_scalar_mul_fmpz", "res"], [26, 1, 1, "c.fmpz_mod_poly_scalar_mul_fmpz", "x"]], "fmpz_mod_poly_set": [[26, 1, 1, "c.fmpz_mod_poly_set", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_set", "poly1"], [26, 1, 1, "c.fmpz_mod_poly_set", "poly2"]], "fmpz_mod_poly_set_coeff_fmpz": [[26, 1, 1, "c.fmpz_mod_poly_set_coeff_fmpz", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_set_coeff_fmpz", "n"], [26, 1, 1, "c.fmpz_mod_poly_set_coeff_fmpz", "poly"], [26, 1, 1, "c.fmpz_mod_poly_set_coeff_fmpz", "x"]], "fmpz_mod_poly_set_coeff_mpz": [[26, 1, 1, "c.fmpz_mod_poly_set_coeff_mpz", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_set_coeff_mpz", "n"], [26, 1, 1, "c.fmpz_mod_poly_set_coeff_mpz", "poly"], [26, 1, 1, "c.fmpz_mod_poly_set_coeff_mpz", "x"]], "fmpz_mod_poly_set_coeff_ui": [[26, 1, 1, "c.fmpz_mod_poly_set_coeff_ui", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_set_coeff_ui", "n"], [26, 1, 1, "c.fmpz_mod_poly_set_coeff_ui", "poly"], [26, 1, 1, "c.fmpz_mod_poly_set_coeff_ui", "x"]], "fmpz_mod_poly_set_fmpz": [[26, 1, 1, "c.fmpz_mod_poly_set_fmpz", "c"], [26, 1, 1, "c.fmpz_mod_poly_set_fmpz", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_set_fmpz", "f"]], "fmpz_mod_poly_set_fmpz_poly": [[26, 1, 1, "c.fmpz_mod_poly_set_fmpz_poly", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_set_fmpz_poly", "f"], [26, 1, 1, "c.fmpz_mod_poly_set_fmpz_poly", "g"]], "fmpz_mod_poly_set_nmod_poly": [[26, 1, 1, "c.fmpz_mod_poly_set_nmod_poly", "f"], [26, 1, 1, "c.fmpz_mod_poly_set_nmod_poly", "g"]], "fmpz_mod_poly_set_trunc": [[26, 1, 1, "c.fmpz_mod_poly_set_trunc", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_set_trunc", "n"], [26, 1, 1, "c.fmpz_mod_poly_set_trunc", "poly"], [26, 1, 1, "c.fmpz_mod_poly_set_trunc", "res"]], "fmpz_mod_poly_set_ui": [[26, 1, 1, "c.fmpz_mod_poly_set_ui", "c"], [26, 1, 1, "c.fmpz_mod_poly_set_ui", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_set_ui", "f"]], "fmpz_mod_poly_shift_left": [[26, 1, 1, "c.fmpz_mod_poly_shift_left", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_shift_left", "f"], [26, 1, 1, "c.fmpz_mod_poly_shift_left", "g"], [26, 1, 1, "c.fmpz_mod_poly_shift_left", "n"]], "fmpz_mod_poly_shift_right": [[26, 1, 1, "c.fmpz_mod_poly_shift_right", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_shift_right", "f"], [26, 1, 1, "c.fmpz_mod_poly_shift_right", "g"], [26, 1, 1, "c.fmpz_mod_poly_shift_right", "n"]], "fmpz_mod_poly_sqr": [[26, 1, 1, "c.fmpz_mod_poly_sqr", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_sqr", "poly"], [26, 1, 1, "c.fmpz_mod_poly_sqr", "res"]], "fmpz_mod_poly_sqrt": [[26, 1, 1, "c.fmpz_mod_poly_sqrt", "mod"], [26, 1, 1, "c.fmpz_mod_poly_sqrt", "p"], [26, 1, 1, "c.fmpz_mod_poly_sqrt", "s"]], "fmpz_mod_poly_sqrt_series": [[26, 1, 1, "c.fmpz_mod_poly_sqrt_series", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_sqrt_series", "g"], [26, 1, 1, "c.fmpz_mod_poly_sqrt_series", "h"], [26, 1, 1, "c.fmpz_mod_poly_sqrt_series", "n"]], "fmpz_mod_poly_sub": [[26, 1, 1, "c.fmpz_mod_poly_sub", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_sub", "poly1"], [26, 1, 1, "c.fmpz_mod_poly_sub", "poly2"], [26, 1, 1, "c.fmpz_mod_poly_sub", "res"]], "fmpz_mod_poly_sub_series": [[26, 1, 1, "c.fmpz_mod_poly_sub_series", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_sub_series", "n"], [26, 1, 1, "c.fmpz_mod_poly_sub_series", "poly1"], [26, 1, 1, "c.fmpz_mod_poly_sub_series", "poly2"], [26, 1, 1, "c.fmpz_mod_poly_sub_series", "res"]], "fmpz_mod_poly_swap": [[26, 1, 1, "c.fmpz_mod_poly_swap", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_swap", "poly1"], [26, 1, 1, "c.fmpz_mod_poly_swap", "poly2"]], "fmpz_mod_poly_truncate": [[26, 1, 1, "c.fmpz_mod_poly_truncate", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_truncate", "len"], [26, 1, 1, "c.fmpz_mod_poly_truncate", "poly"]], "fmpz_mod_poly_xgcd": [[26, 1, 1, "c.fmpz_mod_poly_xgcd", "A"], [26, 1, 1, "c.fmpz_mod_poly_xgcd", "B"], [26, 1, 1, "c.fmpz_mod_poly_xgcd", "G"], [26, 1, 1, "c.fmpz_mod_poly_xgcd", "S"], [26, 1, 1, "c.fmpz_mod_poly_xgcd", "T"], [26, 1, 1, "c.fmpz_mod_poly_xgcd", "ctx"]], "fmpz_mod_poly_xgcd_euclidean": [[26, 1, 1, "c.fmpz_mod_poly_xgcd_euclidean", "A"], [26, 1, 1, "c.fmpz_mod_poly_xgcd_euclidean", "B"], [26, 1, 1, "c.fmpz_mod_poly_xgcd_euclidean", "G"], [26, 1, 1, "c.fmpz_mod_poly_xgcd_euclidean", "S"], [26, 1, 1, "c.fmpz_mod_poly_xgcd_euclidean", "T"], [26, 1, 1, "c.fmpz_mod_poly_xgcd_euclidean", "ctx"]], "fmpz_mod_poly_xgcd_euclidean_f": [[26, 1, 1, "c.fmpz_mod_poly_xgcd_euclidean_f", "A"], [26, 1, 1, "c.fmpz_mod_poly_xgcd_euclidean_f", "B"], [26, 1, 1, "c.fmpz_mod_poly_xgcd_euclidean_f", "G"], [26, 1, 1, "c.fmpz_mod_poly_xgcd_euclidean_f", "S"], [26, 1, 1, "c.fmpz_mod_poly_xgcd_euclidean_f", "T"], [26, 1, 1, "c.fmpz_mod_poly_xgcd_euclidean_f", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_xgcd_euclidean_f", "f"]], "fmpz_mod_poly_xgcd_f": [[26, 1, 1, "c.fmpz_mod_poly_xgcd_f", "A"], [26, 1, 1, "c.fmpz_mod_poly_xgcd_f", "B"], [26, 1, 1, "c.fmpz_mod_poly_xgcd_f", "G"], [26, 1, 1, "c.fmpz_mod_poly_xgcd_f", "S"], [26, 1, 1, "c.fmpz_mod_poly_xgcd_f", "T"], [26, 1, 1, "c.fmpz_mod_poly_xgcd_f", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_xgcd_f", "f"]], "fmpz_mod_poly_xgcd_hgcd": [[26, 1, 1, "c.fmpz_mod_poly_xgcd_hgcd", "A"], [26, 1, 1, "c.fmpz_mod_poly_xgcd_hgcd", "B"], [26, 1, 1, "c.fmpz_mod_poly_xgcd_hgcd", "G"], [26, 1, 1, "c.fmpz_mod_poly_xgcd_hgcd", "S"], [26, 1, 1, "c.fmpz_mod_poly_xgcd_hgcd", "T"], [26, 1, 1, "c.fmpz_mod_poly_xgcd_hgcd", "ctx"]], "fmpz_mod_poly_zero": [[26, 1, 1, "c.fmpz_mod_poly_zero", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_zero", "poly"]], "fmpz_mod_poly_zero_coeffs": [[26, 1, 1, "c.fmpz_mod_poly_zero_coeffs", "ctx"], [26, 1, 1, "c.fmpz_mod_poly_zero_coeffs", "i"], [26, 1, 1, "c.fmpz_mod_poly_zero_coeffs", "j"], [26, 1, 1, "c.fmpz_mod_poly_zero_coeffs", "poly"]], "fmpz_mod_pow_fmpz": [[22, 1, 1, "c.fmpz_mod_pow_fmpz", "a"], [22, 1, 1, "c.fmpz_mod_pow_fmpz", "b"], [22, 1, 1, "c.fmpz_mod_pow_fmpz", "ctx"], [22, 1, 1, "c.fmpz_mod_pow_fmpz", "e"]], "fmpz_mod_pow_ui": [[22, 1, 1, "c.fmpz_mod_pow_ui", "a"], [22, 1, 1, "c.fmpz_mod_pow_ui", "b"], [22, 1, 1, "c.fmpz_mod_pow_ui", "ctx"], [22, 1, 1, "c.fmpz_mod_pow_ui", "e"]], "fmpz_mod_set_fmpz": [[22, 1, 1, "c.fmpz_mod_set_fmpz", "a"], [22, 1, 1, "c.fmpz_mod_set_fmpz", "b"], [22, 1, 1, "c.fmpz_mod_set_fmpz", "ctx"]], "fmpz_mod_si_sub": [[22, 1, 1, "c.fmpz_mod_si_sub", "a"], [22, 1, 1, "c.fmpz_mod_si_sub", "b"], [22, 1, 1, "c.fmpz_mod_si_sub", "c"], [22, 1, 1, "c.fmpz_mod_si_sub", "ctx"]], "fmpz_mod_sub": [[22, 1, 1, "c.fmpz_mod_sub", "a"], [22, 1, 1, "c.fmpz_mod_sub", "b"], [22, 1, 1, "c.fmpz_mod_sub", "c"], [22, 1, 1, "c.fmpz_mod_sub", "ctx"]], "fmpz_mod_sub_fmpz": [[22, 1, 1, "c.fmpz_mod_sub_fmpz", "a"], [22, 1, 1, "c.fmpz_mod_sub_fmpz", "b"], [22, 1, 1, "c.fmpz_mod_sub_fmpz", "c"], [22, 1, 1, "c.fmpz_mod_sub_fmpz", "ctx"]], "fmpz_mod_sub_si": [[22, 1, 1, "c.fmpz_mod_sub_si", "a"], [22, 1, 1, "c.fmpz_mod_sub_si", "b"], [22, 1, 1, "c.fmpz_mod_sub_si", "c"], [22, 1, 1, "c.fmpz_mod_sub_si", "ctx"]], "fmpz_mod_sub_ui": [[22, 1, 1, "c.fmpz_mod_sub_ui", "a"], [22, 1, 1, "c.fmpz_mod_sub_ui", "b"], [22, 1, 1, "c.fmpz_mod_sub_ui", "c"], [22, 1, 1, "c.fmpz_mod_sub_ui", "ctx"]], "fmpz_mod_ui": [[18, 1, 1, "c.fmpz_mod_ui", "f"], [18, 1, 1, "c.fmpz_mod_ui", "g"], [18, 1, 1, "c.fmpz_mod_ui", "h"]], "fmpz_mod_ui_sub": [[22, 1, 1, "c.fmpz_mod_ui_sub", "a"], [22, 1, 1, "c.fmpz_mod_ui_sub", "b"], [22, 1, 1, "c.fmpz_mod_ui_sub", "c"], [22, 1, 1, "c.fmpz_mod_ui_sub", "ctx"]], "fmpz_moebius_mu": [[18, 1, 1, "c.fmpz_moebius_mu", "n"]], "fmpz_mpoly_add": [[29, 1, 1, "c.fmpz_mpoly_add", "A"], [29, 1, 1, "c.fmpz_mpoly_add", "B"], [29, 1, 1, "c.fmpz_mpoly_add", "C"], [29, 1, 1, "c.fmpz_mpoly_add", "ctx"]], "fmpz_mpoly_add_fmpz": [[29, 1, 1, "c.fmpz_mpoly_add_fmpz", "A"], [29, 1, 1, "c.fmpz_mpoly_add_fmpz", "B"], [29, 1, 1, "c.fmpz_mpoly_add_fmpz", "c"], [29, 1, 1, "c.fmpz_mpoly_add_fmpz", "ctx"]], "fmpz_mpoly_add_si": [[29, 1, 1, "c.fmpz_mpoly_add_si", "A"], [29, 1, 1, "c.fmpz_mpoly_add_si", "B"], [29, 1, 1, "c.fmpz_mpoly_add_si", "c"], [29, 1, 1, "c.fmpz_mpoly_add_si", "ctx"]], "fmpz_mpoly_add_ui": [[29, 1, 1, "c.fmpz_mpoly_add_ui", "A"], [29, 1, 1, "c.fmpz_mpoly_add_ui", "B"], [29, 1, 1, "c.fmpz_mpoly_add_ui", "c"], [29, 1, 1, "c.fmpz_mpoly_add_ui", "ctx"]], "fmpz_mpoly_clear": [[29, 1, 1, "c.fmpz_mpoly_clear", "A"], [29, 1, 1, "c.fmpz_mpoly_clear", "ctx"]], "fmpz_mpoly_cmp": [[29, 1, 1, "c.fmpz_mpoly_cmp", "A"], [29, 1, 1, "c.fmpz_mpoly_cmp", "B"], [29, 1, 1, "c.fmpz_mpoly_cmp", "ctx"]], "fmpz_mpoly_combine_like_terms": [[29, 1, 1, "c.fmpz_mpoly_combine_like_terms", "A"], [29, 1, 1, "c.fmpz_mpoly_combine_like_terms", "ctx"]], "fmpz_mpoly_compose_fmpz_mpoly": [[29, 1, 1, "c.fmpz_mpoly_compose_fmpz_mpoly", "A"], [29, 1, 1, "c.fmpz_mpoly_compose_fmpz_mpoly", "B"], [29, 1, 1, "c.fmpz_mpoly_compose_fmpz_mpoly", "C"], [29, 1, 1, "c.fmpz_mpoly_compose_fmpz_mpoly", "ctxAC"], [29, 1, 1, "c.fmpz_mpoly_compose_fmpz_mpoly", "ctxB"]], "fmpz_mpoly_compose_fmpz_mpoly_gen": [[29, 1, 1, "c.fmpz_mpoly_compose_fmpz_mpoly_gen", "A"], [29, 1, 1, "c.fmpz_mpoly_compose_fmpz_mpoly_gen", "B"], [29, 1, 1, "c.fmpz_mpoly_compose_fmpz_mpoly_gen", "c"], [29, 1, 1, "c.fmpz_mpoly_compose_fmpz_mpoly_gen", "ctxAC"], [29, 1, 1, "c.fmpz_mpoly_compose_fmpz_mpoly_gen", "ctxB"]], "fmpz_mpoly_compose_fmpz_mpoly_geobucket": [[29, 1, 1, "c.fmpz_mpoly_compose_fmpz_mpoly_geobucket", "A"], [29, 1, 1, "c.fmpz_mpoly_compose_fmpz_mpoly_geobucket", "B"], [29, 1, 1, "c.fmpz_mpoly_compose_fmpz_mpoly_geobucket", "C"], [29, 1, 1, "c.fmpz_mpoly_compose_fmpz_mpoly_geobucket", "ctxAC"], [29, 1, 1, "c.fmpz_mpoly_compose_fmpz_mpoly_geobucket", "ctxB"]], "fmpz_mpoly_compose_fmpz_mpoly_horner": [[29, 1, 1, "c.fmpz_mpoly_compose_fmpz_mpoly_horner", "A"], [29, 1, 1, "c.fmpz_mpoly_compose_fmpz_mpoly_horner", "B"], [29, 1, 1, "c.fmpz_mpoly_compose_fmpz_mpoly_horner", "C"], [29, 1, 1, "c.fmpz_mpoly_compose_fmpz_mpoly_horner", "ctxAC"], [29, 1, 1, "c.fmpz_mpoly_compose_fmpz_mpoly_horner", "ctxB"]], "fmpz_mpoly_compose_fmpz_poly": [[29, 1, 1, "c.fmpz_mpoly_compose_fmpz_poly", "A"], [29, 1, 1, "c.fmpz_mpoly_compose_fmpz_poly", "B"], [29, 1, 1, "c.fmpz_mpoly_compose_fmpz_poly", "C"], [29, 1, 1, "c.fmpz_mpoly_compose_fmpz_poly", "ctxB"]], "fmpz_mpoly_content_vars": [[29, 1, 1, "c.fmpz_mpoly_content_vars", "A"], [29, 1, 1, "c.fmpz_mpoly_content_vars", "ctx"], [29, 1, 1, "c.fmpz_mpoly_content_vars", "g"], [29, 1, 1, "c.fmpz_mpoly_content_vars", "vars"], [29, 1, 1, "c.fmpz_mpoly_content_vars", "vars_length"]], "fmpz_mpoly_ctx_clear": [[29, 1, 1, "c.fmpz_mpoly_ctx_clear", "ctx"]], "fmpz_mpoly_ctx_init": [[29, 1, 1, "c.fmpz_mpoly_ctx_init", "ctx"], [29, 1, 1, "c.fmpz_mpoly_ctx_init", "nvars"], [29, 1, 1, "c.fmpz_mpoly_ctx_init", "ord"]], "fmpz_mpoly_ctx_nvars": [[29, 1, 1, "c.fmpz_mpoly_ctx_nvars", "ctx"]], "fmpz_mpoly_ctx_ord": [[29, 1, 1, "c.fmpz_mpoly_ctx_ord", "ctx"]], "fmpz_mpoly_deflate": [[29, 1, 1, "c.fmpz_mpoly_deflate", "A"], [29, 1, 1, "c.fmpz_mpoly_deflate", "B"], [29, 1, 1, "c.fmpz_mpoly_deflate", "ctx"], [29, 1, 1, "c.fmpz_mpoly_deflate", "shift"], [29, 1, 1, "c.fmpz_mpoly_deflate", "stride"]], "fmpz_mpoly_deflation": [[29, 1, 1, "c.fmpz_mpoly_deflation", "A"], [29, 1, 1, "c.fmpz_mpoly_deflation", "ctx"], [29, 1, 1, "c.fmpz_mpoly_deflation", "shift"], [29, 1, 1, "c.fmpz_mpoly_deflation", "stride"]], "fmpz_mpoly_degree_fmpz": [[29, 1, 1, "c.fmpz_mpoly_degree_fmpz", "A"], [29, 1, 1, "c.fmpz_mpoly_degree_fmpz", "ctx"], [29, 1, 1, "c.fmpz_mpoly_degree_fmpz", "deg"], [29, 1, 1, "c.fmpz_mpoly_degree_fmpz", "var"]], "fmpz_mpoly_degree_si": [[29, 1, 1, "c.fmpz_mpoly_degree_si", "A"], [29, 1, 1, "c.fmpz_mpoly_degree_si", "ctx"], [29, 1, 1, "c.fmpz_mpoly_degree_si", "var"]], "fmpz_mpoly_degrees_fit_si": [[29, 1, 1, "c.fmpz_mpoly_degrees_fit_si", "A"], [29, 1, 1, "c.fmpz_mpoly_degrees_fit_si", "ctx"]], "fmpz_mpoly_degrees_fmpz": [[29, 1, 1, "c.fmpz_mpoly_degrees_fmpz", "A"], [29, 1, 1, "c.fmpz_mpoly_degrees_fmpz", "ctx"], [29, 1, 1, "c.fmpz_mpoly_degrees_fmpz", "degs"]], "fmpz_mpoly_degrees_si": [[29, 1, 1, "c.fmpz_mpoly_degrees_si", "A"], [29, 1, 1, "c.fmpz_mpoly_degrees_si", "ctx"], [29, 1, 1, "c.fmpz_mpoly_degrees_si", "degs"]], "fmpz_mpoly_derivative": [[29, 1, 1, "c.fmpz_mpoly_derivative", "A"], [29, 1, 1, "c.fmpz_mpoly_derivative", "B"], [29, 1, 1, "c.fmpz_mpoly_derivative", "ctx"], [29, 1, 1, "c.fmpz_mpoly_derivative", "var"]], "fmpz_mpoly_discriminant": [[29, 1, 1, "c.fmpz_mpoly_discriminant", "A"], [29, 1, 1, "c.fmpz_mpoly_discriminant", "D"], [29, 1, 1, "c.fmpz_mpoly_discriminant", "ctx"], [29, 1, 1, "c.fmpz_mpoly_discriminant", "var"]], "fmpz_mpoly_div": [[29, 1, 1, "c.fmpz_mpoly_div", "A"], [29, 1, 1, "c.fmpz_mpoly_div", "B"], [29, 1, 1, "c.fmpz_mpoly_div", "Q"], [29, 1, 1, "c.fmpz_mpoly_div", "ctx"]], "fmpz_mpoly_div_monagan_pearce": [[29, 1, 1, "c.fmpz_mpoly_div_monagan_pearce", "ctx"], [29, 1, 1, "c.fmpz_mpoly_div_monagan_pearce", "poly2"], [29, 1, 1, "c.fmpz_mpoly_div_monagan_pearce", "poly3"], [29, 1, 1, "c.fmpz_mpoly_div_monagan_pearce", "polyq"]], "fmpz_mpoly_divides": [[29, 1, 1, "c.fmpz_mpoly_divides", "A"], [29, 1, 1, "c.fmpz_mpoly_divides", "B"], [29, 1, 1, "c.fmpz_mpoly_divides", "Q"], [29, 1, 1, "c.fmpz_mpoly_divides", "ctx"]], "fmpz_mpoly_divides_array": [[29, 1, 1, "c.fmpz_mpoly_divides_array", "ctx"], [29, 1, 1, "c.fmpz_mpoly_divides_array", "poly1"], [29, 1, 1, "c.fmpz_mpoly_divides_array", "poly2"], [29, 1, 1, "c.fmpz_mpoly_divides_array", "poly3"]], "fmpz_mpoly_divides_heap_threaded": [[29, 1, 1, "c.fmpz_mpoly_divides_heap_threaded", "A"], [29, 1, 1, "c.fmpz_mpoly_divides_heap_threaded", "B"], [29, 1, 1, "c.fmpz_mpoly_divides_heap_threaded", "Q"], [29, 1, 1, "c.fmpz_mpoly_divides_heap_threaded", "ctx"], [29, 1, 1, "c.fmpz_mpoly_divides_heap_threaded", "thread_limit"]], "fmpz_mpoly_divides_monagan_pearce": [[29, 1, 1, "c.fmpz_mpoly_divides_monagan_pearce", "ctx"], [29, 1, 1, "c.fmpz_mpoly_divides_monagan_pearce", "poly1"], [29, 1, 1, "c.fmpz_mpoly_divides_monagan_pearce", "poly2"], [29, 1, 1, "c.fmpz_mpoly_divides_monagan_pearce", "poly3"]], "fmpz_mpoly_divrem": [[29, 1, 1, "c.fmpz_mpoly_divrem", "A"], [29, 1, 1, "c.fmpz_mpoly_divrem", "B"], [29, 1, 1, "c.fmpz_mpoly_divrem", "Q"], [29, 1, 1, "c.fmpz_mpoly_divrem", "R"], [29, 1, 1, "c.fmpz_mpoly_divrem", "ctx"]], "fmpz_mpoly_divrem_array": [[29, 1, 1, "c.fmpz_mpoly_divrem_array", "ctx"], [29, 1, 1, "c.fmpz_mpoly_divrem_array", "poly2"], [29, 1, 1, "c.fmpz_mpoly_divrem_array", "poly3"], [29, 1, 1, "c.fmpz_mpoly_divrem_array", "q"], [29, 1, 1, "c.fmpz_mpoly_divrem_array", "r"]], "fmpz_mpoly_divrem_ideal": [[29, 1, 1, "c.fmpz_mpoly_divrem_ideal", "A"], [29, 1, 1, "c.fmpz_mpoly_divrem_ideal", "B"], [29, 1, 1, "c.fmpz_mpoly_divrem_ideal", "Q"], [29, 1, 1, "c.fmpz_mpoly_divrem_ideal", "R"], [29, 1, 1, "c.fmpz_mpoly_divrem_ideal", "ctx"], [29, 1, 1, "c.fmpz_mpoly_divrem_ideal", "len"]], "fmpz_mpoly_divrem_ideal_monagan_pearce": [[29, 1, 1, "c.fmpz_mpoly_divrem_ideal_monagan_pearce", "ctx"], [29, 1, 1, "c.fmpz_mpoly_divrem_ideal_monagan_pearce", "len"], [29, 1, 1, "c.fmpz_mpoly_divrem_ideal_monagan_pearce", "poly2"], [29, 1, 1, "c.fmpz_mpoly_divrem_ideal_monagan_pearce", "poly3"], [29, 1, 1, "c.fmpz_mpoly_divrem_ideal_monagan_pearce", "q"], [29, 1, 1, "c.fmpz_mpoly_divrem_ideal_monagan_pearce", "r"]], "fmpz_mpoly_divrem_monagan_pearce": [[29, 1, 1, "c.fmpz_mpoly_divrem_monagan_pearce", "ctx"], [29, 1, 1, "c.fmpz_mpoly_divrem_monagan_pearce", "poly2"], [29, 1, 1, "c.fmpz_mpoly_divrem_monagan_pearce", "poly3"], [29, 1, 1, "c.fmpz_mpoly_divrem_monagan_pearce", "q"], [29, 1, 1, "c.fmpz_mpoly_divrem_monagan_pearce", "r"]], "fmpz_mpoly_equal": [[29, 1, 1, "c.fmpz_mpoly_equal", "A"], [29, 1, 1, "c.fmpz_mpoly_equal", "B"], [29, 1, 1, "c.fmpz_mpoly_equal", "ctx"]], "fmpz_mpoly_equal_fmpz": [[29, 1, 1, "c.fmpz_mpoly_equal_fmpz", "A"], [29, 1, 1, "c.fmpz_mpoly_equal_fmpz", "c"], [29, 1, 1, "c.fmpz_mpoly_equal_fmpz", "ctx"]], "fmpz_mpoly_equal_si": [[29, 1, 1, "c.fmpz_mpoly_equal_si", "A"], [29, 1, 1, "c.fmpz_mpoly_equal_si", "c"], [29, 1, 1, "c.fmpz_mpoly_equal_si", "ctx"]], "fmpz_mpoly_equal_ui": [[29, 1, 1, "c.fmpz_mpoly_equal_ui", "A"], [29, 1, 1, "c.fmpz_mpoly_equal_ui", "c"], [29, 1, 1, "c.fmpz_mpoly_equal_ui", "ctx"]], "fmpz_mpoly_evaluate_all_fmpz": [[29, 1, 1, "c.fmpz_mpoly_evaluate_all_fmpz", "A"], [29, 1, 1, "c.fmpz_mpoly_evaluate_all_fmpz", "ctx"], [29, 1, 1, "c.fmpz_mpoly_evaluate_all_fmpz", "ev"], [29, 1, 1, "c.fmpz_mpoly_evaluate_all_fmpz", "vals"]], "fmpz_mpoly_evaluate_one_fmpz": [[29, 1, 1, "c.fmpz_mpoly_evaluate_one_fmpz", "A"], [29, 1, 1, "c.fmpz_mpoly_evaluate_one_fmpz", "B"], [29, 1, 1, "c.fmpz_mpoly_evaluate_one_fmpz", "ctx"], [29, 1, 1, "c.fmpz_mpoly_evaluate_one_fmpz", "val"], [29, 1, 1, "c.fmpz_mpoly_evaluate_one_fmpz", "var"]], "fmpz_mpoly_factor": [[30, 1, 1, "c.fmpz_mpoly_factor", "A"], [30, 1, 1, "c.fmpz_mpoly_factor", "ctx"], [30, 1, 1, "c.fmpz_mpoly_factor", "f"]], "fmpz_mpoly_factor_clear": [[30, 1, 1, "c.fmpz_mpoly_factor_clear", "ctx"], [30, 1, 1, "c.fmpz_mpoly_factor_clear", "f"]], "fmpz_mpoly_factor_get_base": [[30, 1, 1, "c.fmpz_mpoly_factor_get_base", "B"], [30, 1, 1, "c.fmpz_mpoly_factor_get_base", "ctx"], [30, 1, 1, "c.fmpz_mpoly_factor_get_base", "f"], [30, 1, 1, "c.fmpz_mpoly_factor_get_base", "i"]], "fmpz_mpoly_factor_get_constant_fmpq": [[30, 1, 1, "c.fmpz_mpoly_factor_get_constant_fmpq", "c"], [30, 1, 1, "c.fmpz_mpoly_factor_get_constant_fmpq", "ctx"], [30, 1, 1, "c.fmpz_mpoly_factor_get_constant_fmpq", "f"]], "fmpz_mpoly_factor_get_constant_fmpz": [[30, 1, 1, "c.fmpz_mpoly_factor_get_constant_fmpz", "c"], [30, 1, 1, "c.fmpz_mpoly_factor_get_constant_fmpz", "ctx"], [30, 1, 1, "c.fmpz_mpoly_factor_get_constant_fmpz", "f"]], "fmpz_mpoly_factor_get_exp_si": [[30, 1, 1, "c.fmpz_mpoly_factor_get_exp_si", "ctx"], [30, 1, 1, "c.fmpz_mpoly_factor_get_exp_si", "f"], [30, 1, 1, "c.fmpz_mpoly_factor_get_exp_si", "i"]], "fmpz_mpoly_factor_init": [[30, 1, 1, "c.fmpz_mpoly_factor_init", "ctx"], [30, 1, 1, "c.fmpz_mpoly_factor_init", "f"]], "fmpz_mpoly_factor_length": [[30, 1, 1, "c.fmpz_mpoly_factor_length", "ctx"], [30, 1, 1, "c.fmpz_mpoly_factor_length", "f"]], "fmpz_mpoly_factor_sort": [[30, 1, 1, "c.fmpz_mpoly_factor_sort", "ctx"], [30, 1, 1, "c.fmpz_mpoly_factor_sort", "f"]], "fmpz_mpoly_factor_squarefree": [[30, 1, 1, "c.fmpz_mpoly_factor_squarefree", "A"], [30, 1, 1, "c.fmpz_mpoly_factor_squarefree", "ctx"], [30, 1, 1, "c.fmpz_mpoly_factor_squarefree", "f"]], "fmpz_mpoly_factor_swap": [[30, 1, 1, "c.fmpz_mpoly_factor_swap", "ctx"], [30, 1, 1, "c.fmpz_mpoly_factor_swap", "f"], [30, 1, 1, "c.fmpz_mpoly_factor_swap", "g"]], "fmpz_mpoly_factor_swap_base": [[30, 1, 1, "c.fmpz_mpoly_factor_swap_base", "B"], [30, 1, 1, "c.fmpz_mpoly_factor_swap_base", "ctx"], [30, 1, 1, "c.fmpz_mpoly_factor_swap_base", "f"], [30, 1, 1, "c.fmpz_mpoly_factor_swap_base", "i"]], "fmpz_mpoly_fit_bits": [[29, 1, 1, "c.fmpz_mpoly_fit_bits", "A"], [29, 1, 1, "c.fmpz_mpoly_fit_bits", "bits"], [29, 1, 1, "c.fmpz_mpoly_fit_bits", "ctx"]], "fmpz_mpoly_fit_length": [[29, 1, 1, "c.fmpz_mpoly_fit_length", "A"], [29, 1, 1, "c.fmpz_mpoly_fit_length", "ctx"], [29, 1, 1, "c.fmpz_mpoly_fit_length", "len"]], "fmpz_mpoly_fprint_pretty": [[29, 1, 1, "c.fmpz_mpoly_fprint_pretty", "A"], [29, 1, 1, "c.fmpz_mpoly_fprint_pretty", "ctx"], [29, 1, 1, "c.fmpz_mpoly_fprint_pretty", "file"], [29, 1, 1, "c.fmpz_mpoly_fprint_pretty", "x"]], "fmpz_mpoly_from_univar": [[29, 1, 1, "c.fmpz_mpoly_from_univar", "A"], [29, 1, 1, "c.fmpz_mpoly_from_univar", "B"], [29, 1, 1, "c.fmpz_mpoly_from_univar", "ctx"], [29, 1, 1, "c.fmpz_mpoly_from_univar", "var"]], "fmpz_mpoly_gcd": [[29, 1, 1, "c.fmpz_mpoly_gcd", "A"], [29, 1, 1, "c.fmpz_mpoly_gcd", "B"], [29, 1, 1, "c.fmpz_mpoly_gcd", "G"], [29, 1, 1, "c.fmpz_mpoly_gcd", "ctx"]], "fmpz_mpoly_gcd_brown": [[29, 1, 1, "c.fmpz_mpoly_gcd_brown", "A"], [29, 1, 1, "c.fmpz_mpoly_gcd_brown", "B"], [29, 1, 1, "c.fmpz_mpoly_gcd_brown", "G"], [29, 1, 1, "c.fmpz_mpoly_gcd_brown", "ctx"]], "fmpz_mpoly_gcd_cofactors": [[29, 1, 1, "c.fmpz_mpoly_gcd_cofactors", "A"], [29, 1, 1, "c.fmpz_mpoly_gcd_cofactors", "Abar"], [29, 1, 1, "c.fmpz_mpoly_gcd_cofactors", "B"], [29, 1, 1, "c.fmpz_mpoly_gcd_cofactors", "Bbar"], [29, 1, 1, "c.fmpz_mpoly_gcd_cofactors", "G"], [29, 1, 1, "c.fmpz_mpoly_gcd_cofactors", "ctx"]], "fmpz_mpoly_gcd_hensel": [[29, 1, 1, "c.fmpz_mpoly_gcd_hensel", "A"], [29, 1, 1, "c.fmpz_mpoly_gcd_hensel", "B"], [29, 1, 1, "c.fmpz_mpoly_gcd_hensel", "G"], [29, 1, 1, "c.fmpz_mpoly_gcd_hensel", "ctx"]], "fmpz_mpoly_gcd_subresultant": [[29, 1, 1, "c.fmpz_mpoly_gcd_subresultant", "A"], [29, 1, 1, "c.fmpz_mpoly_gcd_subresultant", "B"], [29, 1, 1, "c.fmpz_mpoly_gcd_subresultant", "G"], [29, 1, 1, "c.fmpz_mpoly_gcd_subresultant", "ctx"]], "fmpz_mpoly_gcd_zippel": [[29, 1, 1, "c.fmpz_mpoly_gcd_zippel", "A"], [29, 1, 1, "c.fmpz_mpoly_gcd_zippel", "B"], [29, 1, 1, "c.fmpz_mpoly_gcd_zippel", "G"], [29, 1, 1, "c.fmpz_mpoly_gcd_zippel", "ctx"]], "fmpz_mpoly_gcd_zippel2": [[29, 1, 1, "c.fmpz_mpoly_gcd_zippel2", "A"], [29, 1, 1, "c.fmpz_mpoly_gcd_zippel2", "B"], [29, 1, 1, "c.fmpz_mpoly_gcd_zippel2", "G"], [29, 1, 1, "c.fmpz_mpoly_gcd_zippel2", "ctx"]], "fmpz_mpoly_gen": [[29, 1, 1, "c.fmpz_mpoly_gen", "A"], [29, 1, 1, "c.fmpz_mpoly_gen", "ctx"], [29, 1, 1, "c.fmpz_mpoly_gen", "var"]], "fmpz_mpoly_get_coeff_fmpz_fmpz": [[29, 1, 1, "c.fmpz_mpoly_get_coeff_fmpz_fmpz", "A"], [29, 1, 1, "c.fmpz_mpoly_get_coeff_fmpz_fmpz", "c"], [29, 1, 1, "c.fmpz_mpoly_get_coeff_fmpz_fmpz", "ctx"], [29, 1, 1, "c.fmpz_mpoly_get_coeff_fmpz_fmpz", "exp"]], "fmpz_mpoly_get_coeff_fmpz_monomial": [[29, 1, 1, "c.fmpz_mpoly_get_coeff_fmpz_monomial", "A"], [29, 1, 1, "c.fmpz_mpoly_get_coeff_fmpz_monomial", "M"], [29, 1, 1, "c.fmpz_mpoly_get_coeff_fmpz_monomial", "c"], [29, 1, 1, "c.fmpz_mpoly_get_coeff_fmpz_monomial", "ctx"]], "fmpz_mpoly_get_coeff_fmpz_ui": [[29, 1, 1, "c.fmpz_mpoly_get_coeff_fmpz_ui", "A"], [29, 1, 1, "c.fmpz_mpoly_get_coeff_fmpz_ui", "c"], [29, 1, 1, "c.fmpz_mpoly_get_coeff_fmpz_ui", "ctx"], [29, 1, 1, "c.fmpz_mpoly_get_coeff_fmpz_ui", "exp"]], "fmpz_mpoly_get_coeff_si_fmpz": [[29, 1, 1, "c.fmpz_mpoly_get_coeff_si_fmpz", "A"], [29, 1, 1, "c.fmpz_mpoly_get_coeff_si_fmpz", "ctx"], [29, 1, 1, "c.fmpz_mpoly_get_coeff_si_fmpz", "exp"]], "fmpz_mpoly_get_coeff_si_ui": [[29, 1, 1, "c.fmpz_mpoly_get_coeff_si_ui", "A"], [29, 1, 1, "c.fmpz_mpoly_get_coeff_si_ui", "ctx"], [29, 1, 1, "c.fmpz_mpoly_get_coeff_si_ui", "exp"]], "fmpz_mpoly_get_coeff_ui_fmpz": [[29, 1, 1, "c.fmpz_mpoly_get_coeff_ui_fmpz", "A"], [29, 1, 1, "c.fmpz_mpoly_get_coeff_ui_fmpz", "ctx"], [29, 1, 1, "c.fmpz_mpoly_get_coeff_ui_fmpz", "exp"]], "fmpz_mpoly_get_coeff_ui_ui": [[29, 1, 1, "c.fmpz_mpoly_get_coeff_ui_ui", "A"], [29, 1, 1, "c.fmpz_mpoly_get_coeff_ui_ui", "ctx"], [29, 1, 1, "c.fmpz_mpoly_get_coeff_ui_ui", "exp"]], "fmpz_mpoly_get_coeff_vars_ui": [[29, 1, 1, "c.fmpz_mpoly_get_coeff_vars_ui", "A"], [29, 1, 1, "c.fmpz_mpoly_get_coeff_vars_ui", "C"], [29, 1, 1, "c.fmpz_mpoly_get_coeff_vars_ui", "ctx"], [29, 1, 1, "c.fmpz_mpoly_get_coeff_vars_ui", "exps"], [29, 1, 1, "c.fmpz_mpoly_get_coeff_vars_ui", "length"], [29, 1, 1, "c.fmpz_mpoly_get_coeff_vars_ui", "vars"]], "fmpz_mpoly_get_fmpz": [[29, 1, 1, "c.fmpz_mpoly_get_fmpz", "A"], [29, 1, 1, "c.fmpz_mpoly_get_fmpz", "c"], [29, 1, 1, "c.fmpz_mpoly_get_fmpz", "ctx"]], "fmpz_mpoly_get_str_pretty": [[29, 1, 1, "c.fmpz_mpoly_get_str_pretty", "A"], [29, 1, 1, "c.fmpz_mpoly_get_str_pretty", "ctx"], [29, 1, 1, "c.fmpz_mpoly_get_str_pretty", "x"]], "fmpz_mpoly_get_term": [[29, 1, 1, "c.fmpz_mpoly_get_term", "A"], [29, 1, 1, "c.fmpz_mpoly_get_term", "M"], [29, 1, 1, "c.fmpz_mpoly_get_term", "ctx"], [29, 1, 1, "c.fmpz_mpoly_get_term", "i"]], "fmpz_mpoly_get_term_coeff_fmpz": [[29, 1, 1, "c.fmpz_mpoly_get_term_coeff_fmpz", "A"], [29, 1, 1, "c.fmpz_mpoly_get_term_coeff_fmpz", "c"], [29, 1, 1, "c.fmpz_mpoly_get_term_coeff_fmpz", "ctx"], [29, 1, 1, "c.fmpz_mpoly_get_term_coeff_fmpz", "i"]], "fmpz_mpoly_get_term_coeff_si": [[29, 1, 1, "c.fmpz_mpoly_get_term_coeff_si", "ctx"], [29, 1, 1, "c.fmpz_mpoly_get_term_coeff_si", "i"], [29, 1, 1, "c.fmpz_mpoly_get_term_coeff_si", "poly"]], "fmpz_mpoly_get_term_coeff_ui": [[29, 1, 1, "c.fmpz_mpoly_get_term_coeff_ui", "A"], [29, 1, 1, "c.fmpz_mpoly_get_term_coeff_ui", "ctx"], [29, 1, 1, "c.fmpz_mpoly_get_term_coeff_ui", "i"]], "fmpz_mpoly_get_term_exp_fmpz": [[29, 1, 1, "c.fmpz_mpoly_get_term_exp_fmpz", "A"], [29, 1, 1, "c.fmpz_mpoly_get_term_exp_fmpz", "ctx"], [29, 1, 1, "c.fmpz_mpoly_get_term_exp_fmpz", "exp"], [29, 1, 1, "c.fmpz_mpoly_get_term_exp_fmpz", "i"]], "fmpz_mpoly_get_term_exp_si": [[29, 1, 1, "c.fmpz_mpoly_get_term_exp_si", "A"], [29, 1, 1, "c.fmpz_mpoly_get_term_exp_si", "ctx"], [29, 1, 1, "c.fmpz_mpoly_get_term_exp_si", "exp"], [29, 1, 1, "c.fmpz_mpoly_get_term_exp_si", "i"]], "fmpz_mpoly_get_term_exp_ui": [[29, 1, 1, "c.fmpz_mpoly_get_term_exp_ui", "A"], [29, 1, 1, "c.fmpz_mpoly_get_term_exp_ui", "ctx"], [29, 1, 1, "c.fmpz_mpoly_get_term_exp_ui", "exp"], [29, 1, 1, "c.fmpz_mpoly_get_term_exp_ui", "i"]], "fmpz_mpoly_get_term_monomial": [[29, 1, 1, "c.fmpz_mpoly_get_term_monomial", "A"], [29, 1, 1, "c.fmpz_mpoly_get_term_monomial", "M"], [29, 1, 1, "c.fmpz_mpoly_get_term_monomial", "ctx"], [29, 1, 1, "c.fmpz_mpoly_get_term_monomial", "i"]], "fmpz_mpoly_get_term_var_exp_si": [[29, 1, 1, "c.fmpz_mpoly_get_term_var_exp_si", "A"], [29, 1, 1, "c.fmpz_mpoly_get_term_var_exp_si", "ctx"], [29, 1, 1, "c.fmpz_mpoly_get_term_var_exp_si", "i"], [29, 1, 1, "c.fmpz_mpoly_get_term_var_exp_si", "var"]], "fmpz_mpoly_get_term_var_exp_ui": [[29, 1, 1, "c.fmpz_mpoly_get_term_var_exp_ui", "A"], [29, 1, 1, "c.fmpz_mpoly_get_term_var_exp_ui", "ctx"], [29, 1, 1, "c.fmpz_mpoly_get_term_var_exp_ui", "i"], [29, 1, 1, "c.fmpz_mpoly_get_term_var_exp_ui", "var"]], "fmpz_mpoly_inflate": [[29, 1, 1, "c.fmpz_mpoly_inflate", "A"], [29, 1, 1, "c.fmpz_mpoly_inflate", "B"], [29, 1, 1, "c.fmpz_mpoly_inflate", "ctx"], [29, 1, 1, "c.fmpz_mpoly_inflate", "shift"], [29, 1, 1, "c.fmpz_mpoly_inflate", "stride"]], "fmpz_mpoly_init": [[29, 1, 1, "c.fmpz_mpoly_init", "A"], [29, 1, 1, "c.fmpz_mpoly_init", "ctx"]], "fmpz_mpoly_init2": [[29, 1, 1, "c.fmpz_mpoly_init2", "A"], [29, 1, 1, "c.fmpz_mpoly_init2", "alloc"], [29, 1, 1, "c.fmpz_mpoly_init2", "ctx"]], "fmpz_mpoly_init3": [[29, 1, 1, "c.fmpz_mpoly_init3", "A"], [29, 1, 1, "c.fmpz_mpoly_init3", "alloc"], [29, 1, 1, "c.fmpz_mpoly_init3", "bits"], [29, 1, 1, "c.fmpz_mpoly_init3", "ctx"]], "fmpz_mpoly_integral": [[29, 1, 1, "c.fmpz_mpoly_integral", "A"], [29, 1, 1, "c.fmpz_mpoly_integral", "B"], [29, 1, 1, "c.fmpz_mpoly_integral", "ctx"], [29, 1, 1, "c.fmpz_mpoly_integral", "scale"], [29, 1, 1, "c.fmpz_mpoly_integral", "var"]], "fmpz_mpoly_is_canonical": [[29, 1, 1, "c.fmpz_mpoly_is_canonical", "A"], [29, 1, 1, "c.fmpz_mpoly_is_canonical", "ctx"]], "fmpz_mpoly_is_fmpz": [[29, 1, 1, "c.fmpz_mpoly_is_fmpz", "A"], [29, 1, 1, "c.fmpz_mpoly_is_fmpz", "ctx"]], "fmpz_mpoly_is_gen": [[29, 1, 1, "c.fmpz_mpoly_is_gen", "A"], [29, 1, 1, "c.fmpz_mpoly_is_gen", "ctx"], [29, 1, 1, "c.fmpz_mpoly_is_gen", "var"]], "fmpz_mpoly_is_one": [[29, 1, 1, "c.fmpz_mpoly_is_one", "A"], [29, 1, 1, "c.fmpz_mpoly_is_one", "ctx"]], "fmpz_mpoly_is_square": [[29, 1, 1, "c.fmpz_mpoly_is_square", "A"], [29, 1, 1, "c.fmpz_mpoly_is_square", "ctx"]], "fmpz_mpoly_is_zero": [[29, 1, 1, "c.fmpz_mpoly_is_zero", "A"], [29, 1, 1, "c.fmpz_mpoly_is_zero", "ctx"]], "fmpz_mpoly_length": [[29, 1, 1, "c.fmpz_mpoly_length", "A"], [29, 1, 1, "c.fmpz_mpoly_length", "ctx"]], "fmpz_mpoly_max_bits": [[29, 1, 1, "c.fmpz_mpoly_max_bits", "A"]], "fmpz_mpoly_mul": [[29, 1, 1, "c.fmpz_mpoly_mul", "A"], [29, 1, 1, "c.fmpz_mpoly_mul", "B"], [29, 1, 1, "c.fmpz_mpoly_mul", "C"], [29, 1, 1, "c.fmpz_mpoly_mul", "ctx"]], "fmpz_mpoly_mul_array": [[29, 1, 1, "c.fmpz_mpoly_mul_array", "A"], [29, 1, 1, "c.fmpz_mpoly_mul_array", "B"], [29, 1, 1, "c.fmpz_mpoly_mul_array", "C"], [29, 1, 1, "c.fmpz_mpoly_mul_array", "ctx"]], "fmpz_mpoly_mul_array_threaded": [[29, 1, 1, "c.fmpz_mpoly_mul_array_threaded", "A"], [29, 1, 1, "c.fmpz_mpoly_mul_array_threaded", "B"], [29, 1, 1, "c.fmpz_mpoly_mul_array_threaded", "C"], [29, 1, 1, "c.fmpz_mpoly_mul_array_threaded", "ctx"]], "fmpz_mpoly_mul_dense": [[29, 1, 1, "c.fmpz_mpoly_mul_dense", "A"], [29, 1, 1, "c.fmpz_mpoly_mul_dense", "B"], [29, 1, 1, "c.fmpz_mpoly_mul_dense", "C"], [29, 1, 1, "c.fmpz_mpoly_mul_dense", "ctx"]], "fmpz_mpoly_mul_heap_threaded": [[29, 1, 1, "c.fmpz_mpoly_mul_heap_threaded", "A"], [29, 1, 1, "c.fmpz_mpoly_mul_heap_threaded", "B"], [29, 1, 1, "c.fmpz_mpoly_mul_heap_threaded", "C"], [29, 1, 1, "c.fmpz_mpoly_mul_heap_threaded", "ctx"]], "fmpz_mpoly_mul_johnson": [[29, 1, 1, "c.fmpz_mpoly_mul_johnson", "A"], [29, 1, 1, "c.fmpz_mpoly_mul_johnson", "B"], [29, 1, 1, "c.fmpz_mpoly_mul_johnson", "C"], [29, 1, 1, "c.fmpz_mpoly_mul_johnson", "ctx"]], "fmpz_mpoly_mul_threaded": [[29, 1, 1, "c.fmpz_mpoly_mul_threaded", "A"], [29, 1, 1, "c.fmpz_mpoly_mul_threaded", "B"], [29, 1, 1, "c.fmpz_mpoly_mul_threaded", "C"], [29, 1, 1, "c.fmpz_mpoly_mul_threaded", "ctx"], [29, 1, 1, "c.fmpz_mpoly_mul_threaded", "thread_limit"]], "fmpz_mpoly_neg": [[29, 1, 1, "c.fmpz_mpoly_neg", "A"], [29, 1, 1, "c.fmpz_mpoly_neg", "B"], [29, 1, 1, "c.fmpz_mpoly_neg", "ctx"]], "fmpz_mpoly_one": [[29, 1, 1, "c.fmpz_mpoly_one", "A"], [29, 1, 1, "c.fmpz_mpoly_one", "ctx"]], "fmpz_mpoly_pow_fmpz": [[29, 1, 1, "c.fmpz_mpoly_pow_fmpz", "A"], [29, 1, 1, "c.fmpz_mpoly_pow_fmpz", "B"], [29, 1, 1, "c.fmpz_mpoly_pow_fmpz", "ctx"], [29, 1, 1, "c.fmpz_mpoly_pow_fmpz", "k"]], "fmpz_mpoly_pow_fps": [[29, 1, 1, "c.fmpz_mpoly_pow_fps", "A"], [29, 1, 1, "c.fmpz_mpoly_pow_fps", "B"], [29, 1, 1, "c.fmpz_mpoly_pow_fps", "ctx"], [29, 1, 1, "c.fmpz_mpoly_pow_fps", "k"]], "fmpz_mpoly_pow_ui": [[29, 1, 1, "c.fmpz_mpoly_pow_ui", "A"], [29, 1, 1, "c.fmpz_mpoly_pow_ui", "B"], [29, 1, 1, "c.fmpz_mpoly_pow_ui", "ctx"], [29, 1, 1, "c.fmpz_mpoly_pow_ui", "k"]], "fmpz_mpoly_print_pretty": [[29, 1, 1, "c.fmpz_mpoly_print_pretty", "A"], [29, 1, 1, "c.fmpz_mpoly_print_pretty", "ctx"], [29, 1, 1, "c.fmpz_mpoly_print_pretty", "x"]], "fmpz_mpoly_push_term_fmpz_fmpz": [[29, 1, 1, "c.fmpz_mpoly_push_term_fmpz_fmpz", "A"], [29, 1, 1, "c.fmpz_mpoly_push_term_fmpz_fmpz", "c"], [29, 1, 1, "c.fmpz_mpoly_push_term_fmpz_fmpz", "ctx"], [29, 1, 1, "c.fmpz_mpoly_push_term_fmpz_fmpz", "exp"]], "fmpz_mpoly_push_term_fmpz_ui": [[29, 1, 1, "c.fmpz_mpoly_push_term_fmpz_ui", "A"], [29, 1, 1, "c.fmpz_mpoly_push_term_fmpz_ui", "c"], [29, 1, 1, "c.fmpz_mpoly_push_term_fmpz_ui", "ctx"], [29, 1, 1, "c.fmpz_mpoly_push_term_fmpz_ui", "exp"]], "fmpz_mpoly_push_term_si_fmpz": [[29, 1, 1, "c.fmpz_mpoly_push_term_si_fmpz", "A"], [29, 1, 1, "c.fmpz_mpoly_push_term_si_fmpz", "c"], [29, 1, 1, "c.fmpz_mpoly_push_term_si_fmpz", "ctx"], [29, 1, 1, "c.fmpz_mpoly_push_term_si_fmpz", "exp"]], "fmpz_mpoly_push_term_si_ui": [[29, 1, 1, "c.fmpz_mpoly_push_term_si_ui", "A"], [29, 1, 1, "c.fmpz_mpoly_push_term_si_ui", "c"], [29, 1, 1, "c.fmpz_mpoly_push_term_si_ui", "ctx"], [29, 1, 1, "c.fmpz_mpoly_push_term_si_ui", "exp"]], "fmpz_mpoly_push_term_ui_fmpz": [[29, 1, 1, "c.fmpz_mpoly_push_term_ui_fmpz", "A"], [29, 1, 1, "c.fmpz_mpoly_push_term_ui_fmpz", "c"], [29, 1, 1, "c.fmpz_mpoly_push_term_ui_fmpz", "ctx"], [29, 1, 1, "c.fmpz_mpoly_push_term_ui_fmpz", "exp"]], "fmpz_mpoly_push_term_ui_ui": [[29, 1, 1, "c.fmpz_mpoly_push_term_ui_ui", "A"], [29, 1, 1, "c.fmpz_mpoly_push_term_ui_ui", "c"], [29, 1, 1, "c.fmpz_mpoly_push_term_ui_ui", "ctx"], [29, 1, 1, "c.fmpz_mpoly_push_term_ui_ui", "exp"]], "fmpz_mpoly_quasidiv": [[29, 1, 1, "c.fmpz_mpoly_quasidiv", "A"], [29, 1, 1, "c.fmpz_mpoly_quasidiv", "B"], [29, 1, 1, "c.fmpz_mpoly_quasidiv", "Q"], [29, 1, 1, "c.fmpz_mpoly_quasidiv", "ctx"], [29, 1, 1, "c.fmpz_mpoly_quasidiv", "scale"]], "fmpz_mpoly_quasidivrem": [[29, 1, 1, "c.fmpz_mpoly_quasidivrem", "A"], [29, 1, 1, "c.fmpz_mpoly_quasidivrem", "B"], [29, 1, 1, "c.fmpz_mpoly_quasidivrem", "Q"], [29, 1, 1, "c.fmpz_mpoly_quasidivrem", "R"], [29, 1, 1, "c.fmpz_mpoly_quasidivrem", "ctx"], [29, 1, 1, "c.fmpz_mpoly_quasidivrem", "scale"]], "fmpz_mpoly_quasidivrem_heap": [[29, 1, 1, "c.fmpz_mpoly_quasidivrem_heap", "ctx"], [29, 1, 1, "c.fmpz_mpoly_quasidivrem_heap", "poly2"], [29, 1, 1, "c.fmpz_mpoly_quasidivrem_heap", "poly3"], [29, 1, 1, "c.fmpz_mpoly_quasidivrem_heap", "q"], [29, 1, 1, "c.fmpz_mpoly_quasidivrem_heap", "r"], [29, 1, 1, "c.fmpz_mpoly_quasidivrem_heap", "scale"]], "fmpz_mpoly_quasidivrem_ideal": [[29, 1, 1, "c.fmpz_mpoly_quasidivrem_ideal", "A"], [29, 1, 1, "c.fmpz_mpoly_quasidivrem_ideal", "B"], [29, 1, 1, "c.fmpz_mpoly_quasidivrem_ideal", "Q"], [29, 1, 1, "c.fmpz_mpoly_quasidivrem_ideal", "R"], [29, 1, 1, "c.fmpz_mpoly_quasidivrem_ideal", "ctx"], [29, 1, 1, "c.fmpz_mpoly_quasidivrem_ideal", "len"], [29, 1, 1, "c.fmpz_mpoly_quasidivrem_ideal", "scale"]], "fmpz_mpoly_randtest_bits": [[29, 1, 1, "c.fmpz_mpoly_randtest_bits", "A"], [29, 1, 1, "c.fmpz_mpoly_randtest_bits", "coeff_bits"], [29, 1, 1, "c.fmpz_mpoly_randtest_bits", "ctx"], [29, 1, 1, "c.fmpz_mpoly_randtest_bits", "exp_bits"], [29, 1, 1, "c.fmpz_mpoly_randtest_bits", "length"], [29, 1, 1, "c.fmpz_mpoly_randtest_bits", "state"]], "fmpz_mpoly_randtest_bound": [[29, 1, 1, "c.fmpz_mpoly_randtest_bound", "A"], [29, 1, 1, "c.fmpz_mpoly_randtest_bound", "coeff_bits"], [29, 1, 1, "c.fmpz_mpoly_randtest_bound", "ctx"], [29, 1, 1, "c.fmpz_mpoly_randtest_bound", "exp_bound"], [29, 1, 1, "c.fmpz_mpoly_randtest_bound", "length"], [29, 1, 1, "c.fmpz_mpoly_randtest_bound", "state"]], "fmpz_mpoly_randtest_bounds": [[29, 1, 1, "c.fmpz_mpoly_randtest_bounds", "A"], [29, 1, 1, "c.fmpz_mpoly_randtest_bounds", "coeff_bits"], [29, 1, 1, "c.fmpz_mpoly_randtest_bounds", "ctx"], [29, 1, 1, "c.fmpz_mpoly_randtest_bounds", "exp_bounds"], [29, 1, 1, "c.fmpz_mpoly_randtest_bounds", "length"], [29, 1, 1, "c.fmpz_mpoly_randtest_bounds", "state"]], "fmpz_mpoly_realloc": [[29, 1, 1, "c.fmpz_mpoly_realloc", "A"], [29, 1, 1, "c.fmpz_mpoly_realloc", "alloc"], [29, 1, 1, "c.fmpz_mpoly_realloc", "ctx"]], "fmpz_mpoly_resize": [[29, 1, 1, "c.fmpz_mpoly_resize", "A"], [29, 1, 1, "c.fmpz_mpoly_resize", "ctx"], [29, 1, 1, "c.fmpz_mpoly_resize", "new_length"]], "fmpz_mpoly_resultant": [[29, 1, 1, "c.fmpz_mpoly_resultant", "A"], [29, 1, 1, "c.fmpz_mpoly_resultant", "B"], [29, 1, 1, "c.fmpz_mpoly_resultant", "R"], [29, 1, 1, "c.fmpz_mpoly_resultant", "ctx"], [29, 1, 1, "c.fmpz_mpoly_resultant", "var"]], "fmpz_mpoly_reverse": [[29, 1, 1, "c.fmpz_mpoly_reverse", "A"], [29, 1, 1, "c.fmpz_mpoly_reverse", "B"], [29, 1, 1, "c.fmpz_mpoly_reverse", "ctx"]], "fmpz_mpoly_scalar_divexact_fmpz": [[29, 1, 1, "c.fmpz_mpoly_scalar_divexact_fmpz", "A"], [29, 1, 1, "c.fmpz_mpoly_scalar_divexact_fmpz", "B"], [29, 1, 1, "c.fmpz_mpoly_scalar_divexact_fmpz", "c"], [29, 1, 1, "c.fmpz_mpoly_scalar_divexact_fmpz", "ctx"]], "fmpz_mpoly_scalar_divexact_si": [[29, 1, 1, "c.fmpz_mpoly_scalar_divexact_si", "A"], [29, 1, 1, "c.fmpz_mpoly_scalar_divexact_si", "B"], [29, 1, 1, "c.fmpz_mpoly_scalar_divexact_si", "c"], [29, 1, 1, "c.fmpz_mpoly_scalar_divexact_si", "ctx"]], "fmpz_mpoly_scalar_divexact_ui": [[29, 1, 1, "c.fmpz_mpoly_scalar_divexact_ui", "A"], [29, 1, 1, "c.fmpz_mpoly_scalar_divexact_ui", "B"], [29, 1, 1, "c.fmpz_mpoly_scalar_divexact_ui", "c"], [29, 1, 1, "c.fmpz_mpoly_scalar_divexact_ui", "ctx"]], "fmpz_mpoly_scalar_divides_fmpz": [[29, 1, 1, "c.fmpz_mpoly_scalar_divides_fmpz", "A"], [29, 1, 1, "c.fmpz_mpoly_scalar_divides_fmpz", "B"], [29, 1, 1, "c.fmpz_mpoly_scalar_divides_fmpz", "c"], [29, 1, 1, "c.fmpz_mpoly_scalar_divides_fmpz", "ctx"]], "fmpz_mpoly_scalar_divides_si": [[29, 1, 1, "c.fmpz_mpoly_scalar_divides_si", "A"], [29, 1, 1, "c.fmpz_mpoly_scalar_divides_si", "B"], [29, 1, 1, "c.fmpz_mpoly_scalar_divides_si", "c"], [29, 1, 1, "c.fmpz_mpoly_scalar_divides_si", "ctx"]], "fmpz_mpoly_scalar_divides_ui": [[29, 1, 1, "c.fmpz_mpoly_scalar_divides_ui", "A"], [29, 1, 1, "c.fmpz_mpoly_scalar_divides_ui", "B"], [29, 1, 1, "c.fmpz_mpoly_scalar_divides_ui", "c"], [29, 1, 1, "c.fmpz_mpoly_scalar_divides_ui", "ctx"]], "fmpz_mpoly_scalar_fmma": [[29, 1, 1, "c.fmpz_mpoly_scalar_fmma", "A"], [29, 1, 1, "c.fmpz_mpoly_scalar_fmma", "B"], [29, 1, 1, "c.fmpz_mpoly_scalar_fmma", "D"], [29, 1, 1, "c.fmpz_mpoly_scalar_fmma", "c"], [29, 1, 1, "c.fmpz_mpoly_scalar_fmma", "ctx"], [29, 1, 1, "c.fmpz_mpoly_scalar_fmma", "e"]], "fmpz_mpoly_scalar_mul_fmpz": [[29, 1, 1, "c.fmpz_mpoly_scalar_mul_fmpz", "A"], [29, 1, 1, "c.fmpz_mpoly_scalar_mul_fmpz", "B"], [29, 1, 1, "c.fmpz_mpoly_scalar_mul_fmpz", "c"], [29, 1, 1, "c.fmpz_mpoly_scalar_mul_fmpz", "ctx"]], "fmpz_mpoly_scalar_mul_si": [[29, 1, 1, "c.fmpz_mpoly_scalar_mul_si", "A"], [29, 1, 1, "c.fmpz_mpoly_scalar_mul_si", "B"], [29, 1, 1, "c.fmpz_mpoly_scalar_mul_si", "c"], [29, 1, 1, "c.fmpz_mpoly_scalar_mul_si", "ctx"]], "fmpz_mpoly_scalar_mul_ui": [[29, 1, 1, "c.fmpz_mpoly_scalar_mul_ui", "A"], [29, 1, 1, "c.fmpz_mpoly_scalar_mul_ui", "B"], [29, 1, 1, "c.fmpz_mpoly_scalar_mul_ui", "c"], [29, 1, 1, "c.fmpz_mpoly_scalar_mul_ui", "ctx"]], "fmpz_mpoly_set": [[29, 1, 1, "c.fmpz_mpoly_set", "A"], [29, 1, 1, "c.fmpz_mpoly_set", "B"], [29, 1, 1, "c.fmpz_mpoly_set", "ctx"]], "fmpz_mpoly_set_coeff_fmpz_fmpz": [[29, 1, 1, "c.fmpz_mpoly_set_coeff_fmpz_fmpz", "A"], [29, 1, 1, "c.fmpz_mpoly_set_coeff_fmpz_fmpz", "c"], [29, 1, 1, "c.fmpz_mpoly_set_coeff_fmpz_fmpz", "ctx"], [29, 1, 1, "c.fmpz_mpoly_set_coeff_fmpz_fmpz", "exp"]], "fmpz_mpoly_set_coeff_fmpz_monomial": [[29, 1, 1, "c.fmpz_mpoly_set_coeff_fmpz_monomial", "c"], [29, 1, 1, "c.fmpz_mpoly_set_coeff_fmpz_monomial", "ctx"], [29, 1, 1, "c.fmpz_mpoly_set_coeff_fmpz_monomial", "poly"], [29, 1, 1, "c.fmpz_mpoly_set_coeff_fmpz_monomial", "poly2"]], "fmpz_mpoly_set_coeff_fmpz_ui": [[29, 1, 1, "c.fmpz_mpoly_set_coeff_fmpz_ui", "A"], [29, 1, 1, "c.fmpz_mpoly_set_coeff_fmpz_ui", "c"], [29, 1, 1, "c.fmpz_mpoly_set_coeff_fmpz_ui", "ctx"], [29, 1, 1, "c.fmpz_mpoly_set_coeff_fmpz_ui", "exp"]], "fmpz_mpoly_set_coeff_si_fmpz": [[29, 1, 1, "c.fmpz_mpoly_set_coeff_si_fmpz", "A"], [29, 1, 1, "c.fmpz_mpoly_set_coeff_si_fmpz", "c"], [29, 1, 1, "c.fmpz_mpoly_set_coeff_si_fmpz", "ctx"], [29, 1, 1, "c.fmpz_mpoly_set_coeff_si_fmpz", "exp"]], "fmpz_mpoly_set_coeff_si_ui": [[29, 1, 1, "c.fmpz_mpoly_set_coeff_si_ui", "A"], [29, 1, 1, "c.fmpz_mpoly_set_coeff_si_ui", "c"], [29, 1, 1, "c.fmpz_mpoly_set_coeff_si_ui", "ctx"], [29, 1, 1, "c.fmpz_mpoly_set_coeff_si_ui", "exp"]], "fmpz_mpoly_set_coeff_ui_fmpz": [[29, 1, 1, "c.fmpz_mpoly_set_coeff_ui_fmpz", "A"], [29, 1, 1, "c.fmpz_mpoly_set_coeff_ui_fmpz", "c"], [29, 1, 1, "c.fmpz_mpoly_set_coeff_ui_fmpz", "ctx"], [29, 1, 1, "c.fmpz_mpoly_set_coeff_ui_fmpz", "exp"]], "fmpz_mpoly_set_coeff_ui_ui": [[29, 1, 1, "c.fmpz_mpoly_set_coeff_ui_ui", "A"], [29, 1, 1, "c.fmpz_mpoly_set_coeff_ui_ui", "c"], [29, 1, 1, "c.fmpz_mpoly_set_coeff_ui_ui", "ctx"], [29, 1, 1, "c.fmpz_mpoly_set_coeff_ui_ui", "exp"]], "fmpz_mpoly_set_fmpz": [[29, 1, 1, "c.fmpz_mpoly_set_fmpz", "A"], [29, 1, 1, "c.fmpz_mpoly_set_fmpz", "c"], [29, 1, 1, "c.fmpz_mpoly_set_fmpz", "ctx"]], "fmpz_mpoly_set_si": [[29, 1, 1, "c.fmpz_mpoly_set_si", "A"], [29, 1, 1, "c.fmpz_mpoly_set_si", "c"], [29, 1, 1, "c.fmpz_mpoly_set_si", "ctx"]], "fmpz_mpoly_set_str_pretty": [[29, 1, 1, "c.fmpz_mpoly_set_str_pretty", "A"], [29, 1, 1, "c.fmpz_mpoly_set_str_pretty", "ctx"], [29, 1, 1, "c.fmpz_mpoly_set_str_pretty", "str"], [29, 1, 1, "c.fmpz_mpoly_set_str_pretty", "x"]], "fmpz_mpoly_set_term_coeff_fmpz": [[29, 1, 1, "c.fmpz_mpoly_set_term_coeff_fmpz", "A"], [29, 1, 1, "c.fmpz_mpoly_set_term_coeff_fmpz", "c"], [29, 1, 1, "c.fmpz_mpoly_set_term_coeff_fmpz", "ctx"], [29, 1, 1, "c.fmpz_mpoly_set_term_coeff_fmpz", "i"]], "fmpz_mpoly_set_term_coeff_si": [[29, 1, 1, "c.fmpz_mpoly_set_term_coeff_si", "A"], [29, 1, 1, "c.fmpz_mpoly_set_term_coeff_si", "c"], [29, 1, 1, "c.fmpz_mpoly_set_term_coeff_si", "ctx"], [29, 1, 1, "c.fmpz_mpoly_set_term_coeff_si", "i"]], "fmpz_mpoly_set_term_coeff_ui": [[29, 1, 1, "c.fmpz_mpoly_set_term_coeff_ui", "A"], [29, 1, 1, "c.fmpz_mpoly_set_term_coeff_ui", "c"], [29, 1, 1, "c.fmpz_mpoly_set_term_coeff_ui", "ctx"], [29, 1, 1, "c.fmpz_mpoly_set_term_coeff_ui", "i"]], "fmpz_mpoly_set_term_exp_fmpz": [[29, 1, 1, "c.fmpz_mpoly_set_term_exp_fmpz", "A"], [29, 1, 1, "c.fmpz_mpoly_set_term_exp_fmpz", "ctx"], [29, 1, 1, "c.fmpz_mpoly_set_term_exp_fmpz", "exp"], [29, 1, 1, "c.fmpz_mpoly_set_term_exp_fmpz", "i"]], "fmpz_mpoly_set_term_exp_ui": [[29, 1, 1, "c.fmpz_mpoly_set_term_exp_ui", "A"], [29, 1, 1, "c.fmpz_mpoly_set_term_exp_ui", "ctx"], [29, 1, 1, "c.fmpz_mpoly_set_term_exp_ui", "exp"], [29, 1, 1, "c.fmpz_mpoly_set_term_exp_ui", "i"]], "fmpz_mpoly_set_ui": [[29, 1, 1, "c.fmpz_mpoly_set_ui", "A"], [29, 1, 1, "c.fmpz_mpoly_set_ui", "c"], [29, 1, 1, "c.fmpz_mpoly_set_ui", "ctx"]], "fmpz_mpoly_sort_terms": [[29, 1, 1, "c.fmpz_mpoly_sort_terms", "A"], [29, 1, 1, "c.fmpz_mpoly_sort_terms", "ctx"]], "fmpz_mpoly_sqrt": [[29, 1, 1, "c.fmpz_mpoly_sqrt", "A"], [29, 1, 1, "c.fmpz_mpoly_sqrt", "ctx"], [29, 1, 1, "c.fmpz_mpoly_sqrt", "q"]], "fmpz_mpoly_sqrt_heap": [[29, 1, 1, "c.fmpz_mpoly_sqrt_heap", "A"], [29, 1, 1, "c.fmpz_mpoly_sqrt_heap", "Q"], [29, 1, 1, "c.fmpz_mpoly_sqrt_heap", "check"], [29, 1, 1, "c.fmpz_mpoly_sqrt_heap", "ctx"]], "fmpz_mpoly_sub": [[29, 1, 1, "c.fmpz_mpoly_sub", "A"], [29, 1, 1, "c.fmpz_mpoly_sub", "B"], [29, 1, 1, "c.fmpz_mpoly_sub", "C"], [29, 1, 1, "c.fmpz_mpoly_sub", "ctx"]], "fmpz_mpoly_sub_fmpz": [[29, 1, 1, "c.fmpz_mpoly_sub_fmpz", "A"], [29, 1, 1, "c.fmpz_mpoly_sub_fmpz", "B"], [29, 1, 1, "c.fmpz_mpoly_sub_fmpz", "c"], [29, 1, 1, "c.fmpz_mpoly_sub_fmpz", "ctx"]], "fmpz_mpoly_sub_si": [[29, 1, 1, "c.fmpz_mpoly_sub_si", "A"], [29, 1, 1, "c.fmpz_mpoly_sub_si", "B"], [29, 1, 1, "c.fmpz_mpoly_sub_si", "c"], [29, 1, 1, "c.fmpz_mpoly_sub_si", "ctx"]], "fmpz_mpoly_sub_ui": [[29, 1, 1, "c.fmpz_mpoly_sub_ui", "A"], [29, 1, 1, "c.fmpz_mpoly_sub_ui", "B"], [29, 1, 1, "c.fmpz_mpoly_sub_ui", "c"], [29, 1, 1, "c.fmpz_mpoly_sub_ui", "ctx"]], "fmpz_mpoly_swap": [[29, 1, 1, "c.fmpz_mpoly_swap", "ctx"], [29, 1, 1, "c.fmpz_mpoly_swap", "poly1"], [29, 1, 1, "c.fmpz_mpoly_swap", "poly2"]], "fmpz_mpoly_term_coeff_ref": [[29, 1, 1, "c.fmpz_mpoly_term_coeff_ref", "A"], [29, 1, 1, "c.fmpz_mpoly_term_coeff_ref", "ctx"], [29, 1, 1, "c.fmpz_mpoly_term_coeff_ref", "i"]], "fmpz_mpoly_term_content": [[29, 1, 1, "c.fmpz_mpoly_term_content", "A"], [29, 1, 1, "c.fmpz_mpoly_term_content", "M"], [29, 1, 1, "c.fmpz_mpoly_term_content", "ctx"]], "fmpz_mpoly_term_exp_fits_si": [[29, 1, 1, "c.fmpz_mpoly_term_exp_fits_si", "ctx"], [29, 1, 1, "c.fmpz_mpoly_term_exp_fits_si", "i"], [29, 1, 1, "c.fmpz_mpoly_term_exp_fits_si", "poly"]], "fmpz_mpoly_term_exp_fits_ui": [[29, 1, 1, "c.fmpz_mpoly_term_exp_fits_ui", "ctx"], [29, 1, 1, "c.fmpz_mpoly_term_exp_fits_ui", "i"], [29, 1, 1, "c.fmpz_mpoly_term_exp_fits_ui", "poly"]], "fmpz_mpoly_to_univar": [[29, 1, 1, "c.fmpz_mpoly_to_univar", "A"], [29, 1, 1, "c.fmpz_mpoly_to_univar", "B"], [29, 1, 1, "c.fmpz_mpoly_to_univar", "ctx"], [29, 1, 1, "c.fmpz_mpoly_to_univar", "var"]], "fmpz_mpoly_total_degree_fits_si": [[29, 1, 1, "c.fmpz_mpoly_total_degree_fits_si", "A"], [29, 1, 1, "c.fmpz_mpoly_total_degree_fits_si", "ctx"]], "fmpz_mpoly_total_degree_fmpz": [[29, 1, 1, "c.fmpz_mpoly_total_degree_fmpz", "A"], [29, 1, 1, "c.fmpz_mpoly_total_degree_fmpz", "ctx"], [29, 1, 1, "c.fmpz_mpoly_total_degree_fmpz", "tdeg"]], "fmpz_mpoly_total_degree_si": [[29, 1, 1, "c.fmpz_mpoly_total_degree_si", "A"], [29, 1, 1, "c.fmpz_mpoly_total_degree_si", "ctx"]], "fmpz_mpoly_univar_clear": [[29, 1, 1, "c.fmpz_mpoly_univar_clear", "A"], [29, 1, 1, "c.fmpz_mpoly_univar_clear", "ctx"]], "fmpz_mpoly_univar_degree_fits_si": [[29, 1, 1, "c.fmpz_mpoly_univar_degree_fits_si", "A"], [29, 1, 1, "c.fmpz_mpoly_univar_degree_fits_si", "ctx"]], "fmpz_mpoly_univar_get_term_coeff": [[29, 1, 1, "c.fmpz_mpoly_univar_get_term_coeff", "A"], [29, 1, 1, "c.fmpz_mpoly_univar_get_term_coeff", "c"], [29, 1, 1, "c.fmpz_mpoly_univar_get_term_coeff", "ctx"], [29, 1, 1, "c.fmpz_mpoly_univar_get_term_coeff", "i"]], "fmpz_mpoly_univar_get_term_exp_si": [[29, 1, 1, "c.fmpz_mpoly_univar_get_term_exp_si", "A"], [29, 1, 1, "c.fmpz_mpoly_univar_get_term_exp_si", "ctx"], [29, 1, 1, "c.fmpz_mpoly_univar_get_term_exp_si", "i"]], "fmpz_mpoly_univar_init": [[29, 1, 1, "c.fmpz_mpoly_univar_init", "A"], [29, 1, 1, "c.fmpz_mpoly_univar_init", "ctx"]], "fmpz_mpoly_univar_length": [[29, 1, 1, "c.fmpz_mpoly_univar_length", "A"], [29, 1, 1, "c.fmpz_mpoly_univar_length", "ctx"]], "fmpz_mpoly_univar_swap": [[29, 1, 1, "c.fmpz_mpoly_univar_swap", "A"], [29, 1, 1, "c.fmpz_mpoly_univar_swap", "B"], [29, 1, 1, "c.fmpz_mpoly_univar_swap", "ctx"]], "fmpz_mpoly_univar_swap_term_coeff": [[29, 1, 1, "c.fmpz_mpoly_univar_swap_term_coeff", "A"], [29, 1, 1, "c.fmpz_mpoly_univar_swap_term_coeff", "c"], [29, 1, 1, "c.fmpz_mpoly_univar_swap_term_coeff", "ctx"], [29, 1, 1, "c.fmpz_mpoly_univar_swap_term_coeff", "i"]], "fmpz_mpoly_used_vars": [[29, 1, 1, "c.fmpz_mpoly_used_vars", "A"], [29, 1, 1, "c.fmpz_mpoly_used_vars", "ctx"], [29, 1, 1, "c.fmpz_mpoly_used_vars", "used"]], "fmpz_mpoly_zero": [[29, 1, 1, "c.fmpz_mpoly_zero", "A"], [29, 1, 1, "c.fmpz_mpoly_zero", "ctx"]], "fmpz_mul": [[18, 1, 1, "c.fmpz_mul", "f"], [18, 1, 1, "c.fmpz_mul", "g"], [18, 1, 1, "c.fmpz_mul", "h"]], "fmpz_mul2_uiui": [[18, 1, 1, "c.fmpz_mul2_uiui", "f"], [18, 1, 1, "c.fmpz_mul2_uiui", "g"], [18, 1, 1, "c.fmpz_mul2_uiui", "x"], [18, 1, 1, "c.fmpz_mul2_uiui", "y"]], "fmpz_mul_2exp": [[18, 1, 1, "c.fmpz_mul_2exp", "e"], [18, 1, 1, "c.fmpz_mul_2exp", "f"], [18, 1, 1, "c.fmpz_mul_2exp", "g"]], "fmpz_mul_si": [[18, 1, 1, "c.fmpz_mul_si", "f"], [18, 1, 1, "c.fmpz_mul_si", "g"], [18, 1, 1, "c.fmpz_mul_si", "h"]], "fmpz_mul_si_tdiv_q_2exp": [[18, 1, 1, "c.fmpz_mul_si_tdiv_q_2exp", "exp"], [18, 1, 1, "c.fmpz_mul_si_tdiv_q_2exp", "f"], [18, 1, 1, "c.fmpz_mul_si_tdiv_q_2exp", "g"], [18, 1, 1, "c.fmpz_mul_si_tdiv_q_2exp", "x"]], "fmpz_mul_tdiv_q_2exp": [[18, 1, 1, "c.fmpz_mul_tdiv_q_2exp", "exp"], [18, 1, 1, "c.fmpz_mul_tdiv_q_2exp", "f"], [18, 1, 1, "c.fmpz_mul_tdiv_q_2exp", "g"], [18, 1, 1, "c.fmpz_mul_tdiv_q_2exp", "h"]], "fmpz_mul_ui": [[18, 1, 1, "c.fmpz_mul_ui", "f"], [18, 1, 1, "c.fmpz_mul_ui", "g"], [18, 1, 1, "c.fmpz_mul_ui", "h"]], "fmpz_multi_CRT_ui": [[18, 1, 1, "c.fmpz_multi_CRT_ui", "comb"], [18, 1, 1, "c.fmpz_multi_CRT_ui", "ctemp"], [18, 1, 1, "c.fmpz_multi_CRT_ui", "output"], [18, 1, 1, "c.fmpz_multi_CRT_ui", "residues"], [18, 1, 1, "c.fmpz_multi_CRT_ui", "sign"]], "fmpz_multi_crt": [[18, 1, 1, "c.fmpz_multi_crt", "len"], [18, 1, 1, "c.fmpz_multi_crt", "moduli"], [18, 1, 1, "c.fmpz_multi_crt", "output"], [18, 1, 1, "c.fmpz_multi_crt", "values"]], "fmpz_multi_crt_clear": [[18, 1, 1, "c.fmpz_multi_crt_clear", "P"]], "fmpz_multi_crt_init": [[18, 1, 1, "c.fmpz_multi_crt_init", "CRT"]], "fmpz_multi_crt_precomp": [[18, 1, 1, "c.fmpz_multi_crt_precomp", "P"], [18, 1, 1, "c.fmpz_multi_crt_precomp", "inputs"], [18, 1, 1, "c.fmpz_multi_crt_precomp", "output"]], "fmpz_multi_crt_precomp_p": [[18, 1, 1, "c.fmpz_multi_crt_precomp_p", "P"], [18, 1, 1, "c.fmpz_multi_crt_precomp_p", "inputs"], [18, 1, 1, "c.fmpz_multi_crt_precomp_p", "output"]], "fmpz_multi_crt_precompute": [[18, 1, 1, "c.fmpz_multi_crt_precompute", "CRT"], [18, 1, 1, "c.fmpz_multi_crt_precompute", "len"], [18, 1, 1, "c.fmpz_multi_crt_precompute", "moduli"]], "fmpz_multi_crt_precompute_p": [[18, 1, 1, "c.fmpz_multi_crt_precompute_p", "CRT"], [18, 1, 1, "c.fmpz_multi_crt_precompute_p", "len"], [18, 1, 1, "c.fmpz_multi_crt_precompute_p", "moduli"]], "fmpz_multi_mod_ui": [[18, 1, 1, "c.fmpz_multi_mod_ui", "comb"], [18, 1, 1, "c.fmpz_multi_mod_ui", "in"], [18, 1, 1, "c.fmpz_multi_mod_ui", "out"], [18, 1, 1, "c.fmpz_multi_mod_ui", "temp"]], "fmpz_ndiv_qr": [[18, 1, 1, "c.fmpz_ndiv_qr", "f"], [18, 1, 1, "c.fmpz_ndiv_qr", "g"], [18, 1, 1, "c.fmpz_ndiv_qr", "h"], [18, 1, 1, "c.fmpz_ndiv_qr", "s"]], "fmpz_neg": [[18, 1, 1, "c.fmpz_neg", "f1"], [18, 1, 1, "c.fmpz_neg", "f2"]], "fmpz_neg_ui": [[18, 1, 1, "c.fmpz_neg_ui", "f"], [18, 1, 1, "c.fmpz_neg_ui", "val"]], "fmpz_neg_uiui": [[18, 1, 1, "c.fmpz_neg_uiui", "f"], [18, 1, 1, "c.fmpz_neg_uiui", "hi"], [18, 1, 1, "c.fmpz_neg_uiui", "lo"]], "fmpz_negmod": [[18, 1, 1, "c.fmpz_negmod", "f"], [18, 1, 1, "c.fmpz_negmod", "g"], [18, 1, 1, "c.fmpz_negmod", "h"]], "fmpz_next_smooth_prime": [[22, 1, 1, "c.fmpz_next_smooth_prime", "a"], [22, 1, 1, "c.fmpz_next_smooth_prime", "b"]], "fmpz_nextprime": [[18, 1, 1, "c.fmpz_nextprime", "n"], [18, 1, 1, "c.fmpz_nextprime", "proved"], [18, 1, 1, "c.fmpz_nextprime", "res"]], "fmpz_one": [[18, 1, 1, "c.fmpz_one", "f"]], "fmpz_one_2exp": [[18, 1, 1, "c.fmpz_one_2exp", "e"], [18, 1, 1, "c.fmpz_one_2exp", "f"]], "fmpz_or": [[18, 1, 1, "c.fmpz_or", "a"], [18, 1, 1, "c.fmpz_or", "b"], [18, 1, 1, "c.fmpz_or", "r"]], "fmpz_out_raw": [[18, 1, 1, "c.fmpz_out_raw", "fout"], [18, 1, 1, "c.fmpz_out_raw", "x"]], "fmpz_poly_2norm": [[31, 1, 1, "c.fmpz_poly_2norm", "poly"], [31, 1, 1, "c.fmpz_poly_2norm", "res"]], "fmpz_poly_CLD_bound": [[31, 1, 1, "c.fmpz_poly_CLD_bound", "f"], [31, 1, 1, "c.fmpz_poly_CLD_bound", "n"], [31, 1, 1, "c.fmpz_poly_CLD_bound", "res"]], "fmpz_poly_CRT_ui": [[31, 1, 1, "c.fmpz_poly_CRT_ui", "m"], [31, 1, 1, "c.fmpz_poly_CRT_ui", "poly1"], [31, 1, 1, "c.fmpz_poly_CRT_ui", "poly2"], [31, 1, 1, "c.fmpz_poly_CRT_ui", "res"], [31, 1, 1, "c.fmpz_poly_CRT_ui", "sign"]], "fmpz_poly_add": [[31, 1, 1, "c.fmpz_poly_add", "poly1"], [31, 1, 1, "c.fmpz_poly_add", "poly2"], [31, 1, 1, "c.fmpz_poly_add", "res"]], "fmpz_poly_add_series": [[31, 1, 1, "c.fmpz_poly_add_series", "n"], [31, 1, 1, "c.fmpz_poly_add_series", "poly1"], [31, 1, 1, "c.fmpz_poly_add_series", "poly2"], [31, 1, 1, "c.fmpz_poly_add_series", "res"]], "fmpz_poly_attach_shift": [[31, 1, 1, "c.fmpz_poly_attach_shift", "n"], [31, 1, 1, "c.fmpz_poly_attach_shift", "poly"], [31, 1, 1, "c.fmpz_poly_attach_shift", "trunc"]], "fmpz_poly_attach_truncate": [[31, 1, 1, "c.fmpz_poly_attach_truncate", "n"], [31, 1, 1, "c.fmpz_poly_attach_truncate", "poly"], [31, 1, 1, "c.fmpz_poly_attach_truncate", "trunc"]], "fmpz_poly_bit_pack": [[31, 1, 1, "c.fmpz_poly_bit_pack", "bit_size"], [31, 1, 1, "c.fmpz_poly_bit_pack", "f"], [31, 1, 1, "c.fmpz_poly_bit_pack", "poly"]], "fmpz_poly_bit_unpack": [[31, 1, 1, "c.fmpz_poly_bit_unpack", "bit_size"], [31, 1, 1, "c.fmpz_poly_bit_unpack", "f"], [31, 1, 1, "c.fmpz_poly_bit_unpack", "poly"]], "fmpz_poly_bit_unpack_unsigned": [[31, 1, 1, "c.fmpz_poly_bit_unpack_unsigned", "bit_size"], [31, 1, 1, "c.fmpz_poly_bit_unpack_unsigned", "f"], [31, 1, 1, "c.fmpz_poly_bit_unpack_unsigned", "poly"]], "fmpz_poly_bound_roots": [[31, 1, 1, "c.fmpz_poly_bound_roots", "bound"], [31, 1, 1, "c.fmpz_poly_bound_roots", "poly"]], "fmpz_poly_chebyshev_t": [[31, 1, 1, "c.fmpz_poly_chebyshev_t", "n"], [31, 1, 1, "c.fmpz_poly_chebyshev_t", "poly"]], "fmpz_poly_chebyshev_u": [[31, 1, 1, "c.fmpz_poly_chebyshev_u", "n"], [31, 1, 1, "c.fmpz_poly_chebyshev_u", "poly"]], "fmpz_poly_clear": [[31, 1, 1, "c.fmpz_poly_clear", "poly"]], "fmpz_poly_compose": [[31, 1, 1, "c.fmpz_poly_compose", "poly1"], [31, 1, 1, "c.fmpz_poly_compose", "poly2"], [31, 1, 1, "c.fmpz_poly_compose", "res"]], "fmpz_poly_compose_divconquer": [[31, 1, 1, "c.fmpz_poly_compose_divconquer", "poly1"], [31, 1, 1, "c.fmpz_poly_compose_divconquer", "poly2"], [31, 1, 1, "c.fmpz_poly_compose_divconquer", "res"]], "fmpz_poly_compose_horner": [[31, 1, 1, "c.fmpz_poly_compose_horner", "poly1"], [31, 1, 1, "c.fmpz_poly_compose_horner", "poly2"], [31, 1, 1, "c.fmpz_poly_compose_horner", "res"]], "fmpz_poly_compose_series": [[31, 1, 1, "c.fmpz_poly_compose_series", "n"], [31, 1, 1, "c.fmpz_poly_compose_series", "poly1"], [31, 1, 1, "c.fmpz_poly_compose_series", "poly2"], [31, 1, 1, "c.fmpz_poly_compose_series", "res"]], "fmpz_poly_compose_series_brent_kung": [[31, 1, 1, "c.fmpz_poly_compose_series_brent_kung", "n"], [31, 1, 1, "c.fmpz_poly_compose_series_brent_kung", "poly1"], [31, 1, 1, "c.fmpz_poly_compose_series_brent_kung", "poly2"], [31, 1, 1, "c.fmpz_poly_compose_series_brent_kung", "res"]], "fmpz_poly_compose_series_horner": [[31, 1, 1, "c.fmpz_poly_compose_series_horner", "n"], [31, 1, 1, "c.fmpz_poly_compose_series_horner", "poly1"], [31, 1, 1, "c.fmpz_poly_compose_series_horner", "poly2"], [31, 1, 1, "c.fmpz_poly_compose_series_horner", "res"]], "fmpz_poly_content": [[31, 1, 1, "c.fmpz_poly_content", "poly"], [31, 1, 1, "c.fmpz_poly_content", "res"]], "fmpz_poly_cos_minpoly": [[31, 1, 1, "c.fmpz_poly_cos_minpoly", "n"], [31, 1, 1, "c.fmpz_poly_cos_minpoly", "poly"]], "fmpz_poly_cyclotomic": [[31, 1, 1, "c.fmpz_poly_cyclotomic", "n"], [31, 1, 1, "c.fmpz_poly_cyclotomic", "poly"]], "fmpz_poly_deflate": [[31, 1, 1, "c.fmpz_poly_deflate", "deflation"], [31, 1, 1, "c.fmpz_poly_deflate", "input"], [31, 1, 1, "c.fmpz_poly_deflate", "result"]], "fmpz_poly_deflation": [[31, 1, 1, "c.fmpz_poly_deflation", "input"]], "fmpz_poly_degree": [[31, 1, 1, "c.fmpz_poly_degree", "poly"]], "fmpz_poly_derivative": [[31, 1, 1, "c.fmpz_poly_derivative", "poly"], [31, 1, 1, "c.fmpz_poly_derivative", "res"]], "fmpz_poly_discriminant": [[31, 1, 1, "c.fmpz_poly_discriminant", "poly"], [31, 1, 1, "c.fmpz_poly_discriminant", "res"]], "fmpz_poly_div": [[31, 1, 1, "c.fmpz_poly_div", "A"], [31, 1, 1, "c.fmpz_poly_div", "B"], [31, 1, 1, "c.fmpz_poly_div", "Q"]], "fmpz_poly_div_basecase": [[31, 1, 1, "c.fmpz_poly_div_basecase", "A"], [31, 1, 1, "c.fmpz_poly_div_basecase", "B"], [31, 1, 1, "c.fmpz_poly_div_basecase", "Q"]], "fmpz_poly_div_divconquer": [[31, 1, 1, "c.fmpz_poly_div_divconquer", "A"], [31, 1, 1, "c.fmpz_poly_div_divconquer", "B"], [31, 1, 1, "c.fmpz_poly_div_divconquer", "Q"]], "fmpz_poly_div_preinv": [[31, 1, 1, "c.fmpz_poly_div_preinv", "A"], [31, 1, 1, "c.fmpz_poly_div_preinv", "B"], [31, 1, 1, "c.fmpz_poly_div_preinv", "B_inv"], [31, 1, 1, "c.fmpz_poly_div_preinv", "Q"]], "fmpz_poly_div_root": [[31, 1, 1, "c.fmpz_poly_div_root", "A"], [31, 1, 1, "c.fmpz_poly_div_root", "Q"], [31, 1, 1, "c.fmpz_poly_div_root", "c"]], "fmpz_poly_div_series": [[31, 1, 1, "c.fmpz_poly_div_series", "A"], [31, 1, 1, "c.fmpz_poly_div_series", "B"], [31, 1, 1, "c.fmpz_poly_div_series", "Q"], [31, 1, 1, "c.fmpz_poly_div_series", "n"]], "fmpz_poly_div_series_basecase": [[31, 1, 1, "c.fmpz_poly_div_series_basecase", "A"], [31, 1, 1, "c.fmpz_poly_div_series_basecase", "B"], [31, 1, 1, "c.fmpz_poly_div_series_basecase", "Q"], [31, 1, 1, "c.fmpz_poly_div_series_basecase", "n"]], "fmpz_poly_div_series_divconquer": [[31, 1, 1, "c.fmpz_poly_div_series_divconquer", "A"], [31, 1, 1, "c.fmpz_poly_div_series_divconquer", "B"], [31, 1, 1, "c.fmpz_poly_div_series_divconquer", "Q"], [31, 1, 1, "c.fmpz_poly_div_series_divconquer", "n"]], "fmpz_poly_divhigh_smodp": [[31, 1, 1, "c.fmpz_poly_divhigh_smodp", "f"], [31, 1, 1, "c.fmpz_poly_divhigh_smodp", "g"], [31, 1, 1, "c.fmpz_poly_divhigh_smodp", "n"], [31, 1, 1, "c.fmpz_poly_divhigh_smodp", "p"], [31, 1, 1, "c.fmpz_poly_divhigh_smodp", "res"]], "fmpz_poly_divides": [[31, 1, 1, "c.fmpz_poly_divides", "A"], [31, 1, 1, "c.fmpz_poly_divides", "B"], [31, 1, 1, "c.fmpz_poly_divides", "Q"]], "fmpz_poly_divlow_smodp": [[31, 1, 1, "c.fmpz_poly_divlow_smodp", "f"], [31, 1, 1, "c.fmpz_poly_divlow_smodp", "g"], [31, 1, 1, "c.fmpz_poly_divlow_smodp", "n"], [31, 1, 1, "c.fmpz_poly_divlow_smodp", "p"], [31, 1, 1, "c.fmpz_poly_divlow_smodp", "res"]], "fmpz_poly_divrem": [[31, 1, 1, "c.fmpz_poly_divrem", "A"], [31, 1, 1, "c.fmpz_poly_divrem", "B"], [31, 1, 1, "c.fmpz_poly_divrem", "Q"], [31, 1, 1, "c.fmpz_poly_divrem", "R"]], "fmpz_poly_divrem_basecase": [[31, 1, 1, "c.fmpz_poly_divrem_basecase", "A"], [31, 1, 1, "c.fmpz_poly_divrem_basecase", "B"], [31, 1, 1, "c.fmpz_poly_divrem_basecase", "Q"], [31, 1, 1, "c.fmpz_poly_divrem_basecase", "R"]], "fmpz_poly_divrem_divconquer": [[31, 1, 1, "c.fmpz_poly_divrem_divconquer", "A"], [31, 1, 1, "c.fmpz_poly_divrem_divconquer", "B"], [31, 1, 1, "c.fmpz_poly_divrem_divconquer", "Q"], [31, 1, 1, "c.fmpz_poly_divrem_divconquer", "R"]], "fmpz_poly_divrem_preinv": [[31, 1, 1, "c.fmpz_poly_divrem_preinv", "A"], [31, 1, 1, "c.fmpz_poly_divrem_preinv", "B"], [31, 1, 1, "c.fmpz_poly_divrem_preinv", "B_inv"], [31, 1, 1, "c.fmpz_poly_divrem_preinv", "Q"], [31, 1, 1, "c.fmpz_poly_divrem_preinv", "R"]], "fmpz_poly_equal": [[31, 1, 1, "c.fmpz_poly_equal", "poly1"], [31, 1, 1, "c.fmpz_poly_equal", "poly2"]], "fmpz_poly_equal_trunc": [[31, 1, 1, "c.fmpz_poly_equal_trunc", "n"], [31, 1, 1, "c.fmpz_poly_equal_trunc", "poly1"], [31, 1, 1, "c.fmpz_poly_equal_trunc", "poly2"]], "fmpz_poly_eta_qexp": [[31, 1, 1, "c.fmpz_poly_eta_qexp", "f"], [31, 1, 1, "c.fmpz_poly_eta_qexp", "n"], [31, 1, 1, "c.fmpz_poly_eta_qexp", "r"]], "fmpz_poly_evaluate_divconquer_fmpq": [[31, 1, 1, "c.fmpz_poly_evaluate_divconquer_fmpq", "a"], [31, 1, 1, "c.fmpz_poly_evaluate_divconquer_fmpq", "f"], [31, 1, 1, "c.fmpz_poly_evaluate_divconquer_fmpq", "res"]], "fmpz_poly_evaluate_divconquer_fmpz": [[31, 1, 1, "c.fmpz_poly_evaluate_divconquer_fmpz", "a"], [31, 1, 1, "c.fmpz_poly_evaluate_divconquer_fmpz", "poly"], [31, 1, 1, "c.fmpz_poly_evaluate_divconquer_fmpz", "res"]], "fmpz_poly_evaluate_fmpq": [[31, 1, 1, "c.fmpz_poly_evaluate_fmpq", "a"], [31, 1, 1, "c.fmpz_poly_evaluate_fmpq", "f"], [31, 1, 1, "c.fmpz_poly_evaluate_fmpq", "res"]], "fmpz_poly_evaluate_fmpz": [[31, 1, 1, "c.fmpz_poly_evaluate_fmpz", "a"], [31, 1, 1, "c.fmpz_poly_evaluate_fmpz", "f"], [31, 1, 1, "c.fmpz_poly_evaluate_fmpz", "res"]], "fmpz_poly_evaluate_fmpz_vec": [[31, 1, 1, "c.fmpz_poly_evaluate_fmpz_vec", "a"], [31, 1, 1, "c.fmpz_poly_evaluate_fmpz_vec", "f"], [31, 1, 1, "c.fmpz_poly_evaluate_fmpz_vec", "n"], [31, 1, 1, "c.fmpz_poly_evaluate_fmpz_vec", "res"]], "fmpz_poly_evaluate_horner_d": [[31, 1, 1, "c.fmpz_poly_evaluate_horner_d", "d"], [31, 1, 1, "c.fmpz_poly_evaluate_horner_d", "poly"]], "fmpz_poly_evaluate_horner_d_2exp": [[31, 1, 1, "c.fmpz_poly_evaluate_horner_d_2exp", "d"], [31, 1, 1, "c.fmpz_poly_evaluate_horner_d_2exp", "exp"], [31, 1, 1, "c.fmpz_poly_evaluate_horner_d_2exp", "poly"]], "fmpz_poly_evaluate_horner_fmpq": [[31, 1, 1, "c.fmpz_poly_evaluate_horner_fmpq", "a"], [31, 1, 1, "c.fmpz_poly_evaluate_horner_fmpq", "f"], [31, 1, 1, "c.fmpz_poly_evaluate_horner_fmpq", "res"]], "fmpz_poly_evaluate_horner_fmpz": [[31, 1, 1, "c.fmpz_poly_evaluate_horner_fmpz", "a"], [31, 1, 1, "c.fmpz_poly_evaluate_horner_fmpz", "f"], [31, 1, 1, "c.fmpz_poly_evaluate_horner_fmpz", "res"]], "fmpz_poly_evaluate_mod": [[31, 1, 1, "c.fmpz_poly_evaluate_mod", "a"], [31, 1, 1, "c.fmpz_poly_evaluate_mod", "n"], [31, 1, 1, "c.fmpz_poly_evaluate_mod", "poly"]], "fmpz_poly_evaluate_mpq": [[31, 1, 1, "c.fmpz_poly_evaluate_mpq", "a"], [31, 1, 1, "c.fmpz_poly_evaluate_mpq", "f"], [31, 1, 1, "c.fmpz_poly_evaluate_mpq", "res"]], "fmpz_poly_factor": [[32, 1, 1, "c.fmpz_poly_factor", "F"], [32, 1, 1, "c.fmpz_poly_factor", "final_fac"]], "fmpz_poly_factor_clear": [[32, 1, 1, "c.fmpz_poly_factor_clear", "fac"]], "fmpz_poly_factor_concat": [[32, 1, 1, "c.fmpz_poly_factor_concat", "fac"], [32, 1, 1, "c.fmpz_poly_factor_concat", "res"]], "fmpz_poly_factor_fit_length": [[32, 1, 1, "c.fmpz_poly_factor_fit_length", "fac"], [32, 1, 1, "c.fmpz_poly_factor_fit_length", "len"]], "fmpz_poly_factor_init": [[32, 1, 1, "c.fmpz_poly_factor_init", "fac"]], "fmpz_poly_factor_init2": [[32, 1, 1, "c.fmpz_poly_factor_init2", "alloc"], [32, 1, 1, "c.fmpz_poly_factor_init2", "fac"]], "fmpz_poly_factor_insert": [[32, 1, 1, "c.fmpz_poly_factor_insert", "e"], [32, 1, 1, "c.fmpz_poly_factor_insert", "fac"], [32, 1, 1, "c.fmpz_poly_factor_insert", "p"]], "fmpz_poly_factor_print": [[32, 1, 1, "c.fmpz_poly_factor_print", "fac"]], "fmpz_poly_factor_realloc": [[32, 1, 1, "c.fmpz_poly_factor_realloc", "alloc"], [32, 1, 1, "c.fmpz_poly_factor_realloc", "fac"]], "fmpz_poly_factor_set": [[32, 1, 1, "c.fmpz_poly_factor_set", "fac"], [32, 1, 1, "c.fmpz_poly_factor_set", "res"]], "fmpz_poly_factor_squarefree": [[32, 1, 1, "c.fmpz_poly_factor_squarefree", "F"], [32, 1, 1, "c.fmpz_poly_factor_squarefree", "fac"]], "fmpz_poly_factor_zassenhaus": [[32, 1, 1, "c.fmpz_poly_factor_zassenhaus", "F"], [32, 1, 1, "c.fmpz_poly_factor_zassenhaus", "final_fac"]], "fmpz_poly_factor_zassenhaus_recombination": [[32, 1, 1, "c.fmpz_poly_factor_zassenhaus_recombination", "F"], [32, 1, 1, "c.fmpz_poly_factor_zassenhaus_recombination", "P"], [32, 1, 1, "c.fmpz_poly_factor_zassenhaus_recombination", "exp"], [32, 1, 1, "c.fmpz_poly_factor_zassenhaus_recombination", "final_fac"], [32, 1, 1, "c.fmpz_poly_factor_zassenhaus_recombination", "lifted_fac"]], "fmpz_poly_fibonacci": [[31, 1, 1, "c.fmpz_poly_fibonacci", "n"], [31, 1, 1, "c.fmpz_poly_fibonacci", "poly"]], "fmpz_poly_fit_length": [[31, 1, 1, "c.fmpz_poly_fit_length", "len"], [31, 1, 1, "c.fmpz_poly_fit_length", "poly"]], "fmpz_poly_fprint": [[31, 1, 1, "c.fmpz_poly_fprint", "file"], [31, 1, 1, "c.fmpz_poly_fprint", "poly"]], "fmpz_poly_fprint_pretty": [[31, 1, 1, "c.fmpz_poly_fprint_pretty", "file"], [31, 1, 1, "c.fmpz_poly_fprint_pretty", "poly"], [31, 1, 1, "c.fmpz_poly_fprint_pretty", "x"]], "fmpz_poly_fread": [[31, 1, 1, "c.fmpz_poly_fread", "file"], [31, 1, 1, "c.fmpz_poly_fread", "poly"]], "fmpz_poly_fread_pretty": [[31, 1, 1, "c.fmpz_poly_fread_pretty", "file"], [31, 1, 1, "c.fmpz_poly_fread_pretty", "poly"], [31, 1, 1, "c.fmpz_poly_fread_pretty", "x"]], "fmpz_poly_gcd": [[31, 1, 1, "c.fmpz_poly_gcd", "poly1"], [31, 1, 1, "c.fmpz_poly_gcd", "poly2"], [31, 1, 1, "c.fmpz_poly_gcd", "res"]], "fmpz_poly_gcd_heuristic": [[31, 1, 1, "c.fmpz_poly_gcd_heuristic", "poly1"], [31, 1, 1, "c.fmpz_poly_gcd_heuristic", "poly2"], [31, 1, 1, "c.fmpz_poly_gcd_heuristic", "res"]], "fmpz_poly_gcd_modular": [[31, 1, 1, "c.fmpz_poly_gcd_modular", "poly1"], [31, 1, 1, "c.fmpz_poly_gcd_modular", "poly2"], [31, 1, 1, "c.fmpz_poly_gcd_modular", "res"]], "fmpz_poly_gcd_subresultant": [[31, 1, 1, "c.fmpz_poly_gcd_subresultant", "poly1"], [31, 1, 1, "c.fmpz_poly_gcd_subresultant", "poly2"], [31, 1, 1, "c.fmpz_poly_gcd_subresultant", "res"]], "fmpz_poly_get_coeff_fmpz": [[31, 1, 1, "c.fmpz_poly_get_coeff_fmpz", "n"], [31, 1, 1, "c.fmpz_poly_get_coeff_fmpz", "poly"], [31, 1, 1, "c.fmpz_poly_get_coeff_fmpz", "x"]], "fmpz_poly_get_coeff_ptr": [[31, 1, 1, "c.fmpz_poly_get_coeff_ptr", "n"], [31, 1, 1, "c.fmpz_poly_get_coeff_ptr", "poly"]], "fmpz_poly_get_coeff_si": [[31, 1, 1, "c.fmpz_poly_get_coeff_si", "n"], [31, 1, 1, "c.fmpz_poly_get_coeff_si", "poly"]], "fmpz_poly_get_coeff_ui": [[31, 1, 1, "c.fmpz_poly_get_coeff_ui", "n"], [31, 1, 1, "c.fmpz_poly_get_coeff_ui", "poly"]], "fmpz_poly_get_nmod_poly": [[31, 1, 1, "c.fmpz_poly_get_nmod_poly", "A"], [31, 1, 1, "c.fmpz_poly_get_nmod_poly", "Amod"]], "fmpz_poly_get_str": [[31, 1, 1, "c.fmpz_poly_get_str", "poly"]], "fmpz_poly_get_str_pretty": [[31, 1, 1, "c.fmpz_poly_get_str_pretty", "poly"], [31, 1, 1, "c.fmpz_poly_get_str_pretty", "x"]], "fmpz_poly_height": [[31, 1, 1, "c.fmpz_poly_height", "height"], [31, 1, 1, "c.fmpz_poly_height", "poly"]], "fmpz_poly_hensel_build_tree": [[31, 1, 1, "c.fmpz_poly_hensel_build_tree", "fac"], [31, 1, 1, "c.fmpz_poly_hensel_build_tree", "link"], [31, 1, 1, "c.fmpz_poly_hensel_build_tree", "v"], [31, 1, 1, "c.fmpz_poly_hensel_build_tree", "w"]], "fmpz_poly_hensel_lift": [[31, 1, 1, "c.fmpz_poly_hensel_lift", "A"], [31, 1, 1, "c.fmpz_poly_hensel_lift", "B"], [31, 1, 1, "c.fmpz_poly_hensel_lift", "G"], [31, 1, 1, "c.fmpz_poly_hensel_lift", "H"], [31, 1, 1, "c.fmpz_poly_hensel_lift", "a"], [31, 1, 1, "c.fmpz_poly_hensel_lift", "b"], [31, 1, 1, "c.fmpz_poly_hensel_lift", "f"], [31, 1, 1, "c.fmpz_poly_hensel_lift", "g"], [31, 1, 1, "c.fmpz_poly_hensel_lift", "h"], [31, 1, 1, "c.fmpz_poly_hensel_lift", "p"], [31, 1, 1, "c.fmpz_poly_hensel_lift", "p1"]], "fmpz_poly_hensel_lift_once": [[31, 1, 1, "c.fmpz_poly_hensel_lift_once", "N"], [31, 1, 1, "c.fmpz_poly_hensel_lift_once", "f"], [31, 1, 1, "c.fmpz_poly_hensel_lift_once", "lifted_fac"], [31, 1, 1, "c.fmpz_poly_hensel_lift_once", "local_fac"]], "fmpz_poly_hensel_lift_only_inverse": [[31, 1, 1, "c.fmpz_poly_hensel_lift_only_inverse", "Aout"], [31, 1, 1, "c.fmpz_poly_hensel_lift_only_inverse", "Bout"], [31, 1, 1, "c.fmpz_poly_hensel_lift_only_inverse", "G"], [31, 1, 1, "c.fmpz_poly_hensel_lift_only_inverse", "H"], [31, 1, 1, "c.fmpz_poly_hensel_lift_only_inverse", "a"], [31, 1, 1, "c.fmpz_poly_hensel_lift_only_inverse", "b"], [31, 1, 1, "c.fmpz_poly_hensel_lift_only_inverse", "p"], [31, 1, 1, "c.fmpz_poly_hensel_lift_only_inverse", "p1"]], "fmpz_poly_hensel_lift_tree": [[31, 1, 1, "c.fmpz_poly_hensel_lift_tree", "e0"], [31, 1, 1, "c.fmpz_poly_hensel_lift_tree", "e1"], [31, 1, 1, "c.fmpz_poly_hensel_lift_tree", "f"], [31, 1, 1, "c.fmpz_poly_hensel_lift_tree", "inv"], [31, 1, 1, "c.fmpz_poly_hensel_lift_tree", "link"], [31, 1, 1, "c.fmpz_poly_hensel_lift_tree", "p"], [31, 1, 1, "c.fmpz_poly_hensel_lift_tree", "r"], [31, 1, 1, "c.fmpz_poly_hensel_lift_tree", "v"], [31, 1, 1, "c.fmpz_poly_hensel_lift_tree", "w"]], "fmpz_poly_hensel_lift_tree_recursive": [[31, 1, 1, "c.fmpz_poly_hensel_lift_tree_recursive", "f"], [31, 1, 1, "c.fmpz_poly_hensel_lift_tree_recursive", "inv"], [31, 1, 1, "c.fmpz_poly_hensel_lift_tree_recursive", "j"], [31, 1, 1, "c.fmpz_poly_hensel_lift_tree_recursive", "link"], [31, 1, 1, "c.fmpz_poly_hensel_lift_tree_recursive", "p0"], [31, 1, 1, "c.fmpz_poly_hensel_lift_tree_recursive", "p1"], [31, 1, 1, "c.fmpz_poly_hensel_lift_tree_recursive", "v"], [31, 1, 1, "c.fmpz_poly_hensel_lift_tree_recursive", "w"]], "fmpz_poly_hensel_lift_without_inverse": [[31, 1, 1, "c.fmpz_poly_hensel_lift_without_inverse", "Gout"], [31, 1, 1, "c.fmpz_poly_hensel_lift_without_inverse", "Hout"], [31, 1, 1, "c.fmpz_poly_hensel_lift_without_inverse", "a"], [31, 1, 1, "c.fmpz_poly_hensel_lift_without_inverse", "b"], [31, 1, 1, "c.fmpz_poly_hensel_lift_without_inverse", "f"], [31, 1, 1, "c.fmpz_poly_hensel_lift_without_inverse", "g"], [31, 1, 1, "c.fmpz_poly_hensel_lift_without_inverse", "h"], [31, 1, 1, "c.fmpz_poly_hensel_lift_without_inverse", "p"], [31, 1, 1, "c.fmpz_poly_hensel_lift_without_inverse", "p1"]], "fmpz_poly_hermite_h": [[31, 1, 1, "c.fmpz_poly_hermite_h", "n"], [31, 1, 1, "c.fmpz_poly_hermite_h", "poly"]], "fmpz_poly_hermite_he": [[31, 1, 1, "c.fmpz_poly_hermite_he", "n"], [31, 1, 1, "c.fmpz_poly_hermite_he", "poly"]], "fmpz_poly_inflate": [[31, 1, 1, "c.fmpz_poly_inflate", "inflation"], [31, 1, 1, "c.fmpz_poly_inflate", "input"], [31, 1, 1, "c.fmpz_poly_inflate", "result"]], "fmpz_poly_init": [[31, 1, 1, "c.fmpz_poly_init", "poly"]], "fmpz_poly_init2": [[31, 1, 1, "c.fmpz_poly_init2", "alloc"], [31, 1, 1, "c.fmpz_poly_init2", "poly"]], "fmpz_poly_interpolate_fmpz_vec": [[31, 1, 1, "c.fmpz_poly_interpolate_fmpz_vec", "n"], [31, 1, 1, "c.fmpz_poly_interpolate_fmpz_vec", "poly"], [31, 1, 1, "c.fmpz_poly_interpolate_fmpz_vec", "xs"], [31, 1, 1, "c.fmpz_poly_interpolate_fmpz_vec", "ys"]], "fmpz_poly_inv_series": [[31, 1, 1, "c.fmpz_poly_inv_series", "Q"], [31, 1, 1, "c.fmpz_poly_inv_series", "Qinv"], [31, 1, 1, "c.fmpz_poly_inv_series", "n"]], "fmpz_poly_inv_series_basecase": [[31, 1, 1, "c.fmpz_poly_inv_series_basecase", "Q"], [31, 1, 1, "c.fmpz_poly_inv_series_basecase", "Qinv"], [31, 1, 1, "c.fmpz_poly_inv_series_basecase", "n"]], "fmpz_poly_inv_series_newton": [[31, 1, 1, "c.fmpz_poly_inv_series_newton", "Q"], [31, 1, 1, "c.fmpz_poly_inv_series_newton", "Qinv"], [31, 1, 1, "c.fmpz_poly_inv_series_newton", "Qlen"], [31, 1, 1, "c.fmpz_poly_inv_series_newton", "n"]], "fmpz_poly_is_cyclotomic": [[31, 1, 1, "c.fmpz_poly_is_cyclotomic", "poly"]], "fmpz_poly_is_gen": [[31, 1, 1, "c.fmpz_poly_is_gen", "poly"]], "fmpz_poly_is_one": [[31, 1, 1, "c.fmpz_poly_is_one", "poly"]], "fmpz_poly_is_squarefree": [[31, 1, 1, "c.fmpz_poly_is_squarefree", "poly"]], "fmpz_poly_is_unit": [[31, 1, 1, "c.fmpz_poly_is_unit", "poly"]], "fmpz_poly_is_zero": [[31, 1, 1, "c.fmpz_poly_is_zero", "poly"]], "fmpz_poly_lcm": [[31, 1, 1, "c.fmpz_poly_lcm", "poly1"], [31, 1, 1, "c.fmpz_poly_lcm", "poly2"], [31, 1, 1, "c.fmpz_poly_lcm", "res"]], "fmpz_poly_lead": [[31, 1, 1, "c.fmpz_poly_lead", "poly"]], "fmpz_poly_legendre_pt": [[31, 1, 1, "c.fmpz_poly_legendre_pt", "n"], [31, 1, 1, "c.fmpz_poly_legendre_pt", "poly"]], "fmpz_poly_length": [[31, 1, 1, "c.fmpz_poly_length", "poly"]], "fmpz_poly_mat_add": [[33, 1, 1, "c.fmpz_poly_mat_add", "A"], [33, 1, 1, "c.fmpz_poly_mat_add", "B"], [33, 1, 1, "c.fmpz_poly_mat_add", "C"]], "fmpz_poly_mat_clear": [[33, 1, 1, "c.fmpz_poly_mat_clear", "mat"]], "fmpz_poly_mat_det": [[33, 1, 1, "c.fmpz_poly_mat_det", "A"], [33, 1, 1, "c.fmpz_poly_mat_det", "det"]], "fmpz_poly_mat_det_fflu": [[33, 1, 1, "c.fmpz_poly_mat_det_fflu", "A"], [33, 1, 1, "c.fmpz_poly_mat_det_fflu", "det"]], "fmpz_poly_mat_det_interpolate": [[33, 1, 1, "c.fmpz_poly_mat_det_interpolate", "A"], [33, 1, 1, "c.fmpz_poly_mat_det_interpolate", "det"]], "fmpz_poly_mat_entry": [[33, 1, 1, "c.fmpz_poly_mat_entry", "i"], [33, 1, 1, "c.fmpz_poly_mat_entry", "j"], [33, 1, 1, "c.fmpz_poly_mat_entry", "mat"]], "fmpz_poly_mat_equal": [[33, 1, 1, "c.fmpz_poly_mat_equal", "mat1"], [33, 1, 1, "c.fmpz_poly_mat_equal", "mat2"]], "fmpz_poly_mat_evaluate_fmpz": [[33, 1, 1, "c.fmpz_poly_mat_evaluate_fmpz", "A"], [33, 1, 1, "c.fmpz_poly_mat_evaluate_fmpz", "B"], [33, 1, 1, "c.fmpz_poly_mat_evaluate_fmpz", "x"]], "fmpz_poly_mat_fflu": [[33, 1, 1, "c.fmpz_poly_mat_fflu", "A"], [33, 1, 1, "c.fmpz_poly_mat_fflu", "B"], [33, 1, 1, "c.fmpz_poly_mat_fflu", "den"], [33, 1, 1, "c.fmpz_poly_mat_fflu", "perm"], [33, 1, 1, "c.fmpz_poly_mat_fflu", "rank_check"]], "fmpz_poly_mat_find_pivot_any": [[33, 1, 1, "c.fmpz_poly_mat_find_pivot_any", "c"], [33, 1, 1, "c.fmpz_poly_mat_find_pivot_any", "end_row"], [33, 1, 1, "c.fmpz_poly_mat_find_pivot_any", "mat"], [33, 1, 1, "c.fmpz_poly_mat_find_pivot_any", "start_row"]], "fmpz_poly_mat_find_pivot_partial": [[33, 1, 1, "c.fmpz_poly_mat_find_pivot_partial", "c"], [33, 1, 1, "c.fmpz_poly_mat_find_pivot_partial", "end_row"], [33, 1, 1, "c.fmpz_poly_mat_find_pivot_partial", "mat"], [33, 1, 1, "c.fmpz_poly_mat_find_pivot_partial", "start_row"]], "fmpz_poly_mat_init": [[33, 1, 1, "c.fmpz_poly_mat_init", "cols"], [33, 1, 1, "c.fmpz_poly_mat_init", "mat"], [33, 1, 1, "c.fmpz_poly_mat_init", "rows"]], "fmpz_poly_mat_init_set": [[33, 1, 1, "c.fmpz_poly_mat_init_set", "mat"], [33, 1, 1, "c.fmpz_poly_mat_init_set", "src"]], "fmpz_poly_mat_inv": [[33, 1, 1, "c.fmpz_poly_mat_inv", "A"], [33, 1, 1, "c.fmpz_poly_mat_inv", "Ainv"], [33, 1, 1, "c.fmpz_poly_mat_inv", "den"]], "fmpz_poly_mat_is_empty": [[33, 1, 1, "c.fmpz_poly_mat_is_empty", "mat"]], "fmpz_poly_mat_is_one": [[33, 1, 1, "c.fmpz_poly_mat_is_one", "mat"]], "fmpz_poly_mat_is_square": [[33, 1, 1, "c.fmpz_poly_mat_is_square", "mat"]], "fmpz_poly_mat_is_zero": [[33, 1, 1, "c.fmpz_poly_mat_is_zero", "mat"]], "fmpz_poly_mat_max_bits": [[33, 1, 1, "c.fmpz_poly_mat_max_bits", "A"]], "fmpz_poly_mat_max_length": [[33, 1, 1, "c.fmpz_poly_mat_max_length", "A"]], "fmpz_poly_mat_mul": [[33, 1, 1, "c.fmpz_poly_mat_mul", "A"], [33, 1, 1, "c.fmpz_poly_mat_mul", "B"], [33, 1, 1, "c.fmpz_poly_mat_mul", "C"]], "fmpz_poly_mat_mul_KS": [[33, 1, 1, "c.fmpz_poly_mat_mul_KS", "A"], [33, 1, 1, "c.fmpz_poly_mat_mul_KS", "B"], [33, 1, 1, "c.fmpz_poly_mat_mul_KS", "C"]], "fmpz_poly_mat_mul_classical": [[33, 1, 1, "c.fmpz_poly_mat_mul_classical", "A"], [33, 1, 1, "c.fmpz_poly_mat_mul_classical", "B"], [33, 1, 1, "c.fmpz_poly_mat_mul_classical", "C"]], "fmpz_poly_mat_mullow": [[33, 1, 1, "c.fmpz_poly_mat_mullow", "A"], [33, 1, 1, "c.fmpz_poly_mat_mullow", "B"], [33, 1, 1, "c.fmpz_poly_mat_mullow", "C"], [33, 1, 1, "c.fmpz_poly_mat_mullow", "len"]], "fmpz_poly_mat_ncols": [[33, 1, 1, "c.fmpz_poly_mat_ncols", "mat"]], "fmpz_poly_mat_neg": [[33, 1, 1, "c.fmpz_poly_mat_neg", "A"], [33, 1, 1, "c.fmpz_poly_mat_neg", "B"]], "fmpz_poly_mat_nrows": [[33, 1, 1, "c.fmpz_poly_mat_nrows", "mat"]], "fmpz_poly_mat_nullspace": [[33, 1, 1, "c.fmpz_poly_mat_nullspace", "mat"], [33, 1, 1, "c.fmpz_poly_mat_nullspace", "res"]], "fmpz_poly_mat_one": [[33, 1, 1, "c.fmpz_poly_mat_one", "mat"]], "fmpz_poly_mat_pow": [[33, 1, 1, "c.fmpz_poly_mat_pow", "A"], [33, 1, 1, "c.fmpz_poly_mat_pow", "B"], [33, 1, 1, "c.fmpz_poly_mat_pow", "exp"]], "fmpz_poly_mat_pow_trunc": [[33, 1, 1, "c.fmpz_poly_mat_pow_trunc", "A"], [33, 1, 1, "c.fmpz_poly_mat_pow_trunc", "B"], [33, 1, 1, "c.fmpz_poly_mat_pow_trunc", "exp"], [33, 1, 1, "c.fmpz_poly_mat_pow_trunc", "len"]], "fmpz_poly_mat_print": [[33, 1, 1, "c.fmpz_poly_mat_print", "mat"], [33, 1, 1, "c.fmpz_poly_mat_print", "x"]], "fmpz_poly_mat_prod": [[33, 1, 1, "c.fmpz_poly_mat_prod", "factors"], [33, 1, 1, "c.fmpz_poly_mat_prod", "n"], [33, 1, 1, "c.fmpz_poly_mat_prod", "res"]], "fmpz_poly_mat_randtest": [[33, 1, 1, "c.fmpz_poly_mat_randtest", "bits"], [33, 1, 1, "c.fmpz_poly_mat_randtest", "len"], [33, 1, 1, "c.fmpz_poly_mat_randtest", "mat"], [33, 1, 1, "c.fmpz_poly_mat_randtest", "state"]], "fmpz_poly_mat_randtest_sparse": [[33, 1, 1, "c.fmpz_poly_mat_randtest_sparse", "A"], [33, 1, 1, "c.fmpz_poly_mat_randtest_sparse", "bits"], [33, 1, 1, "c.fmpz_poly_mat_randtest_sparse", "density"], [33, 1, 1, "c.fmpz_poly_mat_randtest_sparse", "len"], [33, 1, 1, "c.fmpz_poly_mat_randtest_sparse", "state"]], "fmpz_poly_mat_randtest_unsigned": [[33, 1, 1, "c.fmpz_poly_mat_randtest_unsigned", "bits"], [33, 1, 1, "c.fmpz_poly_mat_randtest_unsigned", "len"], [33, 1, 1, "c.fmpz_poly_mat_randtest_unsigned", "mat"], [33, 1, 1, "c.fmpz_poly_mat_randtest_unsigned", "state"]], "fmpz_poly_mat_rank": [[33, 1, 1, "c.fmpz_poly_mat_rank", "A"]], "fmpz_poly_mat_rref": [[33, 1, 1, "c.fmpz_poly_mat_rref", "A"], [33, 1, 1, "c.fmpz_poly_mat_rref", "B"], [33, 1, 1, "c.fmpz_poly_mat_rref", "den"]], "fmpz_poly_mat_scalar_mul_fmpz": [[33, 1, 1, "c.fmpz_poly_mat_scalar_mul_fmpz", "A"], [33, 1, 1, "c.fmpz_poly_mat_scalar_mul_fmpz", "B"], [33, 1, 1, "c.fmpz_poly_mat_scalar_mul_fmpz", "c"]], "fmpz_poly_mat_scalar_mul_fmpz_poly": [[33, 1, 1, "c.fmpz_poly_mat_scalar_mul_fmpz_poly", "A"], [33, 1, 1, "c.fmpz_poly_mat_scalar_mul_fmpz_poly", "B"], [33, 1, 1, "c.fmpz_poly_mat_scalar_mul_fmpz_poly", "c"]], "fmpz_poly_mat_set": [[33, 1, 1, "c.fmpz_poly_mat_set", "mat1"], [33, 1, 1, "c.fmpz_poly_mat_set", "mat2"]], "fmpz_poly_mat_solve": [[33, 1, 1, "c.fmpz_poly_mat_solve", "A"], [33, 1, 1, "c.fmpz_poly_mat_solve", "B"], [33, 1, 1, "c.fmpz_poly_mat_solve", "X"], [33, 1, 1, "c.fmpz_poly_mat_solve", "den"]], "fmpz_poly_mat_solve_fflu": [[33, 1, 1, "c.fmpz_poly_mat_solve_fflu", "A"], [33, 1, 1, "c.fmpz_poly_mat_solve_fflu", "B"], [33, 1, 1, "c.fmpz_poly_mat_solve_fflu", "X"], [33, 1, 1, "c.fmpz_poly_mat_solve_fflu", "den"]], "fmpz_poly_mat_solve_fflu_precomp": [[33, 1, 1, "c.fmpz_poly_mat_solve_fflu_precomp", "B"], [33, 1, 1, "c.fmpz_poly_mat_solve_fflu_precomp", "FFLU"], [33, 1, 1, "c.fmpz_poly_mat_solve_fflu_precomp", "X"], [33, 1, 1, "c.fmpz_poly_mat_solve_fflu_precomp", "perm"]], "fmpz_poly_mat_sqr": [[33, 1, 1, "c.fmpz_poly_mat_sqr", "A"], [33, 1, 1, "c.fmpz_poly_mat_sqr", "B"]], "fmpz_poly_mat_sqr_KS": [[33, 1, 1, "c.fmpz_poly_mat_sqr_KS", "A"], [33, 1, 1, "c.fmpz_poly_mat_sqr_KS", "B"]], "fmpz_poly_mat_sqr_classical": [[33, 1, 1, "c.fmpz_poly_mat_sqr_classical", "A"], [33, 1, 1, "c.fmpz_poly_mat_sqr_classical", "B"]], "fmpz_poly_mat_sqrlow": [[33, 1, 1, "c.fmpz_poly_mat_sqrlow", "A"], [33, 1, 1, "c.fmpz_poly_mat_sqrlow", "B"], [33, 1, 1, "c.fmpz_poly_mat_sqrlow", "len"]], "fmpz_poly_mat_sub": [[33, 1, 1, "c.fmpz_poly_mat_sub", "A"], [33, 1, 1, "c.fmpz_poly_mat_sub", "B"], [33, 1, 1, "c.fmpz_poly_mat_sub", "C"]], "fmpz_poly_mat_swap": [[33, 1, 1, "c.fmpz_poly_mat_swap", "mat1"], [33, 1, 1, "c.fmpz_poly_mat_swap", "mat2"]], "fmpz_poly_mat_swap_entrywise": [[33, 1, 1, "c.fmpz_poly_mat_swap_entrywise", "mat1"], [33, 1, 1, "c.fmpz_poly_mat_swap_entrywise", "mat2"]], "fmpz_poly_mat_trace": [[33, 1, 1, "c.fmpz_poly_mat_trace", "mat"], [33, 1, 1, "c.fmpz_poly_mat_trace", "trace"]], "fmpz_poly_mat_transpose": [[33, 1, 1, "c.fmpz_poly_mat_transpose", "A"], [33, 1, 1, "c.fmpz_poly_mat_transpose", "B"]], "fmpz_poly_mat_zero": [[33, 1, 1, "c.fmpz_poly_mat_zero", "mat"]], "fmpz_poly_max_bits": [[31, 1, 1, "c.fmpz_poly_max_bits", "poly"]], "fmpz_poly_max_limbs": [[31, 1, 1, "c.fmpz_poly_max_limbs", "poly"]], "fmpz_poly_mul": [[31, 1, 1, "c.fmpz_poly_mul", "poly1"], [31, 1, 1, "c.fmpz_poly_mul", "poly2"], [31, 1, 1, "c.fmpz_poly_mul", "res"]], "fmpz_poly_mul_KS": [[31, 1, 1, "c.fmpz_poly_mul_KS", "poly1"], [31, 1, 1, "c.fmpz_poly_mul_KS", "poly2"], [31, 1, 1, "c.fmpz_poly_mul_KS", "res"]], "fmpz_poly_mul_SS": [[31, 1, 1, "c.fmpz_poly_mul_SS", "poly1"], [31, 1, 1, "c.fmpz_poly_mul_SS", "poly2"], [31, 1, 1, "c.fmpz_poly_mul_SS", "res"]], "fmpz_poly_mul_SS_precache": [[31, 1, 1, "c.fmpz_poly_mul_SS_precache", "poly1"], [31, 1, 1, "c.fmpz_poly_mul_SS_precache", "pre"], [31, 1, 1, "c.fmpz_poly_mul_SS_precache", "res"]], "fmpz_poly_mul_SS_precache_init": [[31, 1, 1, "c.fmpz_poly_mul_SS_precache_init", "bits1"], [31, 1, 1, "c.fmpz_poly_mul_SS_precache_init", "len1"], [31, 1, 1, "c.fmpz_poly_mul_SS_precache_init", "poly2"], [31, 1, 1, "c.fmpz_poly_mul_SS_precache_init", "pre"]], "fmpz_poly_mul_classical": [[31, 1, 1, "c.fmpz_poly_mul_classical", "poly1"], [31, 1, 1, "c.fmpz_poly_mul_classical", "poly2"], [31, 1, 1, "c.fmpz_poly_mul_classical", "res"]], "fmpz_poly_mul_karatsuba": [[31, 1, 1, "c.fmpz_poly_mul_karatsuba", "poly1"], [31, 1, 1, "c.fmpz_poly_mul_karatsuba", "poly2"], [31, 1, 1, "c.fmpz_poly_mul_karatsuba", "res"]], "fmpz_poly_mul_precache_clear": [[31, 1, 1, "c.fmpz_poly_mul_precache_clear", "pre"]], "fmpz_poly_mulhigh_classical": [[31, 1, 1, "c.fmpz_poly_mulhigh_classical", "poly1"], [31, 1, 1, "c.fmpz_poly_mulhigh_classical", "poly2"], [31, 1, 1, "c.fmpz_poly_mulhigh_classical", "res"], [31, 1, 1, "c.fmpz_poly_mulhigh_classical", "start"]], "fmpz_poly_mulhigh_karatsuba_n": [[31, 1, 1, "c.fmpz_poly_mulhigh_karatsuba_n", "len"], [31, 1, 1, "c.fmpz_poly_mulhigh_karatsuba_n", "poly1"], [31, 1, 1, "c.fmpz_poly_mulhigh_karatsuba_n", "poly2"], [31, 1, 1, "c.fmpz_poly_mulhigh_karatsuba_n", "res"]], "fmpz_poly_mulhigh_n": [[31, 1, 1, "c.fmpz_poly_mulhigh_n", "n"], [31, 1, 1, "c.fmpz_poly_mulhigh_n", "poly1"], [31, 1, 1, "c.fmpz_poly_mulhigh_n", "poly2"], [31, 1, 1, "c.fmpz_poly_mulhigh_n", "res"]], "fmpz_poly_mullow": [[31, 1, 1, "c.fmpz_poly_mullow", "n"], [31, 1, 1, "c.fmpz_poly_mullow", "poly1"], [31, 1, 1, "c.fmpz_poly_mullow", "poly2"], [31, 1, 1, "c.fmpz_poly_mullow", "res"]], "fmpz_poly_mullow_KS": [[31, 1, 1, "c.fmpz_poly_mullow_KS", "n"], [31, 1, 1, "c.fmpz_poly_mullow_KS", "poly1"], [31, 1, 1, "c.fmpz_poly_mullow_KS", "poly2"], [31, 1, 1, "c.fmpz_poly_mullow_KS", "res"]], "fmpz_poly_mullow_SS": [[31, 1, 1, "c.fmpz_poly_mullow_SS", "n"], [31, 1, 1, "c.fmpz_poly_mullow_SS", "poly1"], [31, 1, 1, "c.fmpz_poly_mullow_SS", "poly2"], [31, 1, 1, "c.fmpz_poly_mullow_SS", "res"]], "fmpz_poly_mullow_SS_precache": [[31, 1, 1, "c.fmpz_poly_mullow_SS_precache", "n"], [31, 1, 1, "c.fmpz_poly_mullow_SS_precache", "poly1"], [31, 1, 1, "c.fmpz_poly_mullow_SS_precache", "pre"], [31, 1, 1, "c.fmpz_poly_mullow_SS_precache", "res"]], "fmpz_poly_mullow_classical": [[31, 1, 1, "c.fmpz_poly_mullow_classical", "n"], [31, 1, 1, "c.fmpz_poly_mullow_classical", "poly1"], [31, 1, 1, "c.fmpz_poly_mullow_classical", "poly2"], [31, 1, 1, "c.fmpz_poly_mullow_classical", "res"]], "fmpz_poly_mullow_karatsuba_n": [[31, 1, 1, "c.fmpz_poly_mullow_karatsuba_n", "n"], [31, 1, 1, "c.fmpz_poly_mullow_karatsuba_n", "poly1"], [31, 1, 1, "c.fmpz_poly_mullow_karatsuba_n", "poly2"], [31, 1, 1, "c.fmpz_poly_mullow_karatsuba_n", "res"]], "fmpz_poly_mulmid_classical": [[31, 1, 1, "c.fmpz_poly_mulmid_classical", "poly1"], [31, 1, 1, "c.fmpz_poly_mulmid_classical", "poly2"], [31, 1, 1, "c.fmpz_poly_mulmid_classical", "res"]], "fmpz_poly_neg": [[31, 1, 1, "c.fmpz_poly_neg", "poly"], [31, 1, 1, "c.fmpz_poly_neg", "res"]], "fmpz_poly_nth_derivative": [[31, 1, 1, "c.fmpz_poly_nth_derivative", "n"], [31, 1, 1, "c.fmpz_poly_nth_derivative", "poly"], [31, 1, 1, "c.fmpz_poly_nth_derivative", "res"]], "fmpz_poly_num_real_roots": [[31, 1, 1, "c.fmpz_poly_num_real_roots", "pol"]], "fmpz_poly_num_real_roots_sturm": [[31, 1, 1, "c.fmpz_poly_num_real_roots_sturm", "pol"]], "fmpz_poly_one": [[31, 1, 1, "c.fmpz_poly_one", "poly"]], "fmpz_poly_pow": [[31, 1, 1, "c.fmpz_poly_pow", "e"], [31, 1, 1, "c.fmpz_poly_pow", "poly"], [31, 1, 1, "c.fmpz_poly_pow", "res"]], "fmpz_poly_pow_addchains": [[31, 1, 1, "c.fmpz_poly_pow_addchains", "e"], [31, 1, 1, "c.fmpz_poly_pow_addchains", "poly"], [31, 1, 1, "c.fmpz_poly_pow_addchains", "res"]], "fmpz_poly_pow_binexp": [[31, 1, 1, "c.fmpz_poly_pow_binexp", "e"], [31, 1, 1, "c.fmpz_poly_pow_binexp", "poly"], [31, 1, 1, "c.fmpz_poly_pow_binexp", "res"]], "fmpz_poly_pow_binomial": [[31, 1, 1, "c.fmpz_poly_pow_binomial", "e"], [31, 1, 1, "c.fmpz_poly_pow_binomial", "poly"], [31, 1, 1, "c.fmpz_poly_pow_binomial", "res"]], "fmpz_poly_pow_multinomial": [[31, 1, 1, "c.fmpz_poly_pow_multinomial", "e"], [31, 1, 1, "c.fmpz_poly_pow_multinomial", "poly"], [31, 1, 1, "c.fmpz_poly_pow_multinomial", "res"]], "fmpz_poly_pow_trunc": [[31, 1, 1, "c.fmpz_poly_pow_trunc", "e"], [31, 1, 1, "c.fmpz_poly_pow_trunc", "n"], [31, 1, 1, "c.fmpz_poly_pow_trunc", "poly"], [31, 1, 1, "c.fmpz_poly_pow_trunc", "res"]], "fmpz_poly_power_sums": [[31, 1, 1, "c.fmpz_poly_power_sums", "n"], [31, 1, 1, "c.fmpz_poly_power_sums", "poly"], [31, 1, 1, "c.fmpz_poly_power_sums", "res"]], "fmpz_poly_power_sums_naive": [[31, 1, 1, "c.fmpz_poly_power_sums_naive", "n"], [31, 1, 1, "c.fmpz_poly_power_sums_naive", "poly"], [31, 1, 1, "c.fmpz_poly_power_sums_naive", "res"]], "fmpz_poly_power_sums_to_poly": [[31, 1, 1, "c.fmpz_poly_power_sums_to_poly", "Q"], [31, 1, 1, "c.fmpz_poly_power_sums_to_poly", "res"]], "fmpz_poly_powers_clear": [[31, 1, 1, "c.fmpz_poly_powers_clear", "pinv"]], "fmpz_poly_powers_precompute": [[31, 1, 1, "c.fmpz_poly_powers_precompute", "pinv"], [31, 1, 1, "c.fmpz_poly_powers_precompute", "poly"]], "fmpz_poly_preinvert": [[31, 1, 1, "c.fmpz_poly_preinvert", "B"], [31, 1, 1, "c.fmpz_poly_preinvert", "B_inv"]], "fmpz_poly_primitive_part": [[31, 1, 1, "c.fmpz_poly_primitive_part", "poly"], [31, 1, 1, "c.fmpz_poly_primitive_part", "res"]], "fmpz_poly_print": [[31, 1, 1, "c.fmpz_poly_print", "poly"]], "fmpz_poly_print_pretty": [[31, 1, 1, "c.fmpz_poly_print_pretty", "poly"], [31, 1, 1, "c.fmpz_poly_print_pretty", "x"]], "fmpz_poly_product_roots_fmpq_vec": [[31, 1, 1, "c.fmpz_poly_product_roots_fmpq_vec", "n"], [31, 1, 1, "c.fmpz_poly_product_roots_fmpq_vec", "poly"], [31, 1, 1, "c.fmpz_poly_product_roots_fmpq_vec", "xs"]], "fmpz_poly_product_roots_fmpz_vec": [[31, 1, 1, "c.fmpz_poly_product_roots_fmpz_vec", "n"], [31, 1, 1, "c.fmpz_poly_product_roots_fmpz_vec", "poly"], [31, 1, 1, "c.fmpz_poly_product_roots_fmpz_vec", "xs"]], "fmpz_poly_pseudo_div": [[31, 1, 1, "c.fmpz_poly_pseudo_div", "A"], [31, 1, 1, "c.fmpz_poly_pseudo_div", "B"], [31, 1, 1, "c.fmpz_poly_pseudo_div", "Q"], [31, 1, 1, "c.fmpz_poly_pseudo_div", "d"]], "fmpz_poly_pseudo_divrem": [[31, 1, 1, "c.fmpz_poly_pseudo_divrem", "A"], [31, 1, 1, "c.fmpz_poly_pseudo_divrem", "B"], [31, 1, 1, "c.fmpz_poly_pseudo_divrem", "Q"], [31, 1, 1, "c.fmpz_poly_pseudo_divrem", "R"], [31, 1, 1, "c.fmpz_poly_pseudo_divrem", "d"]], "fmpz_poly_pseudo_divrem_basecase": [[31, 1, 1, "c.fmpz_poly_pseudo_divrem_basecase", "A"], [31, 1, 1, "c.fmpz_poly_pseudo_divrem_basecase", "B"], [31, 1, 1, "c.fmpz_poly_pseudo_divrem_basecase", "Q"], [31, 1, 1, "c.fmpz_poly_pseudo_divrem_basecase", "R"], [31, 1, 1, "c.fmpz_poly_pseudo_divrem_basecase", "d"]], "fmpz_poly_pseudo_divrem_cohen": [[31, 1, 1, "c.fmpz_poly_pseudo_divrem_cohen", "A"], [31, 1, 1, "c.fmpz_poly_pseudo_divrem_cohen", "B"], [31, 1, 1, "c.fmpz_poly_pseudo_divrem_cohen", "Q"], [31, 1, 1, "c.fmpz_poly_pseudo_divrem_cohen", "R"]], "fmpz_poly_pseudo_divrem_divconquer": [[31, 1, 1, "c.fmpz_poly_pseudo_divrem_divconquer", "A"], [31, 1, 1, "c.fmpz_poly_pseudo_divrem_divconquer", "B"], [31, 1, 1, "c.fmpz_poly_pseudo_divrem_divconquer", "Q"], [31, 1, 1, "c.fmpz_poly_pseudo_divrem_divconquer", "R"], [31, 1, 1, "c.fmpz_poly_pseudo_divrem_divconquer", "d"]], "fmpz_poly_pseudo_rem": [[31, 1, 1, "c.fmpz_poly_pseudo_rem", "A"], [31, 1, 1, "c.fmpz_poly_pseudo_rem", "B"], [31, 1, 1, "c.fmpz_poly_pseudo_rem", "R"], [31, 1, 1, "c.fmpz_poly_pseudo_rem", "d"]], "fmpz_poly_pseudo_rem_cohen": [[31, 1, 1, "c.fmpz_poly_pseudo_rem_cohen", "A"], [31, 1, 1, "c.fmpz_poly_pseudo_rem_cohen", "B"], [31, 1, 1, "c.fmpz_poly_pseudo_rem_cohen", "R"]], "fmpz_poly_q_add": [[34, 1, 1, "c.fmpz_poly_q_add", "op1"], [34, 1, 1, "c.fmpz_poly_q_add", "op2"], [34, 1, 1, "c.fmpz_poly_q_add", "rop"]], "fmpz_poly_q_addmul": [[34, 1, 1, "c.fmpz_poly_q_addmul", "op1"], [34, 1, 1, "c.fmpz_poly_q_addmul", "op2"], [34, 1, 1, "c.fmpz_poly_q_addmul", "rop"]], "fmpz_poly_q_canonicalise": [[34, 1, 1, "c.fmpz_poly_q_canonicalise", "rop"]], "fmpz_poly_q_clear": [[34, 1, 1, "c.fmpz_poly_q_clear", "rop"]], "fmpz_poly_q_denref": [[34, 1, 1, "c.fmpz_poly_q_denref", "op"]], "fmpz_poly_q_derivative": [[34, 1, 1, "c.fmpz_poly_q_derivative", "op"], [34, 1, 1, "c.fmpz_poly_q_derivative", "rop"]], "fmpz_poly_q_div": [[34, 1, 1, "c.fmpz_poly_q_div", "op1"], [34, 1, 1, "c.fmpz_poly_q_div", "op2"], [34, 1, 1, "c.fmpz_poly_q_div", "rop"]], "fmpz_poly_q_equal": [[34, 1, 1, "c.fmpz_poly_q_equal", "op1"], [34, 1, 1, "c.fmpz_poly_q_equal", "op2"]], "fmpz_poly_q_evaluate": [[34, 1, 1, "c.fmpz_poly_q_evaluate", "a"], [34, 1, 1, "c.fmpz_poly_q_evaluate", "f"], [34, 1, 1, "c.fmpz_poly_q_evaluate", "rop"]], "fmpz_poly_q_get_str": [[34, 1, 1, "c.fmpz_poly_q_get_str", "op"]], "fmpz_poly_q_get_str_pretty": [[34, 1, 1, "c.fmpz_poly_q_get_str_pretty", "op"], [34, 1, 1, "c.fmpz_poly_q_get_str_pretty", "x"]], "fmpz_poly_q_init": [[34, 1, 1, "c.fmpz_poly_q_init", "rop"]], "fmpz_poly_q_inv": [[34, 1, 1, "c.fmpz_poly_q_inv", "op"], [34, 1, 1, "c.fmpz_poly_q_inv", "rop"]], "fmpz_poly_q_is_canonical": [[34, 1, 1, "c.fmpz_poly_q_is_canonical", "op"]], "fmpz_poly_q_is_one": [[34, 1, 1, "c.fmpz_poly_q_is_one", "op"]], "fmpz_poly_q_is_zero": [[34, 1, 1, "c.fmpz_poly_q_is_zero", "op"]], "fmpz_poly_q_mul": [[34, 1, 1, "c.fmpz_poly_q_mul", "op1"], [34, 1, 1, "c.fmpz_poly_q_mul", "op2"], [34, 1, 1, "c.fmpz_poly_q_mul", "rop"]], "fmpz_poly_q_neg": [[34, 1, 1, "c.fmpz_poly_q_neg", "op"], [34, 1, 1, "c.fmpz_poly_q_neg", "rop"]], "fmpz_poly_q_numref": [[34, 1, 1, "c.fmpz_poly_q_numref", "op"]], "fmpz_poly_q_one": [[34, 1, 1, "c.fmpz_poly_q_one", "rop"]], "fmpz_poly_q_pow": [[34, 1, 1, "c.fmpz_poly_q_pow", "exp"], [34, 1, 1, "c.fmpz_poly_q_pow", "op"], [34, 1, 1, "c.fmpz_poly_q_pow", "rop"]], "fmpz_poly_q_print": [[34, 1, 1, "c.fmpz_poly_q_print", "op"]], "fmpz_poly_q_print_pretty": [[34, 1, 1, "c.fmpz_poly_q_print_pretty", "op"], [34, 1, 1, "c.fmpz_poly_q_print_pretty", "x"]], "fmpz_poly_q_randtest": [[34, 1, 1, "c.fmpz_poly_q_randtest", "bits1"], [34, 1, 1, "c.fmpz_poly_q_randtest", "bits2"], [34, 1, 1, "c.fmpz_poly_q_randtest", "len1"], [34, 1, 1, "c.fmpz_poly_q_randtest", "len2"], [34, 1, 1, "c.fmpz_poly_q_randtest", "poly"], [34, 1, 1, "c.fmpz_poly_q_randtest", "state"]], "fmpz_poly_q_randtest_not_zero": [[34, 1, 1, "c.fmpz_poly_q_randtest_not_zero", "bits1"], [34, 1, 1, "c.fmpz_poly_q_randtest_not_zero", "bits2"], [34, 1, 1, "c.fmpz_poly_q_randtest_not_zero", "len1"], [34, 1, 1, "c.fmpz_poly_q_randtest_not_zero", "len2"], [34, 1, 1, "c.fmpz_poly_q_randtest_not_zero", "poly"], [34, 1, 1, "c.fmpz_poly_q_randtest_not_zero", "state"]], "fmpz_poly_q_scalar_div_mpq": [[34, 1, 1, "c.fmpz_poly_q_scalar_div_mpq", "op"], [34, 1, 1, "c.fmpz_poly_q_scalar_div_mpq", "rop"], [34, 1, 1, "c.fmpz_poly_q_scalar_div_mpq", "x"]], "fmpz_poly_q_scalar_div_mpz": [[34, 1, 1, "c.fmpz_poly_q_scalar_div_mpz", "op"], [34, 1, 1, "c.fmpz_poly_q_scalar_div_mpz", "rop"], [34, 1, 1, "c.fmpz_poly_q_scalar_div_mpz", "x"]], "fmpz_poly_q_scalar_div_si": [[34, 1, 1, "c.fmpz_poly_q_scalar_div_si", "op"], [34, 1, 1, "c.fmpz_poly_q_scalar_div_si", "rop"], [34, 1, 1, "c.fmpz_poly_q_scalar_div_si", "x"]], "fmpz_poly_q_scalar_mul_mpq": [[34, 1, 1, "c.fmpz_poly_q_scalar_mul_mpq", "op"], [34, 1, 1, "c.fmpz_poly_q_scalar_mul_mpq", "rop"], [34, 1, 1, "c.fmpz_poly_q_scalar_mul_mpq", "x"]], "fmpz_poly_q_scalar_mul_mpz": [[34, 1, 1, "c.fmpz_poly_q_scalar_mul_mpz", "op"], [34, 1, 1, "c.fmpz_poly_q_scalar_mul_mpz", "rop"], [34, 1, 1, "c.fmpz_poly_q_scalar_mul_mpz", "x"]], "fmpz_poly_q_scalar_mul_si": [[34, 1, 1, "c.fmpz_poly_q_scalar_mul_si", "op"], [34, 1, 1, "c.fmpz_poly_q_scalar_mul_si", "rop"], [34, 1, 1, "c.fmpz_poly_q_scalar_mul_si", "x"]], "fmpz_poly_q_set": [[34, 1, 1, "c.fmpz_poly_q_set", "op"], [34, 1, 1, "c.fmpz_poly_q_set", "rop"]], "fmpz_poly_q_set_si": [[34, 1, 1, "c.fmpz_poly_q_set_si", "op"], [34, 1, 1, "c.fmpz_poly_q_set_si", "rop"]], "fmpz_poly_q_set_str": [[34, 1, 1, "c.fmpz_poly_q_set_str", "rop"], [34, 1, 1, "c.fmpz_poly_q_set_str", "s"]], "fmpz_poly_q_sub": [[34, 1, 1, "c.fmpz_poly_q_sub", "op1"], [34, 1, 1, "c.fmpz_poly_q_sub", "op2"], [34, 1, 1, "c.fmpz_poly_q_sub", "rop"]], "fmpz_poly_q_submul": [[34, 1, 1, "c.fmpz_poly_q_submul", "op1"], [34, 1, 1, "c.fmpz_poly_q_submul", "op2"], [34, 1, 1, "c.fmpz_poly_q_submul", "rop"]], "fmpz_poly_q_swap": [[34, 1, 1, "c.fmpz_poly_q_swap", "op1"], [34, 1, 1, "c.fmpz_poly_q_swap", "op2"]], "fmpz_poly_q_zero": [[34, 1, 1, "c.fmpz_poly_q_zero", "rop"]], "fmpz_poly_randtest": [[31, 1, 1, "c.fmpz_poly_randtest", "bits"], [31, 1, 1, "c.fmpz_poly_randtest", "f"], [31, 1, 1, "c.fmpz_poly_randtest", "len"], [31, 1, 1, "c.fmpz_poly_randtest", "state"]], "fmpz_poly_randtest_no_real_root": [[31, 1, 1, "c.fmpz_poly_randtest_no_real_root", "bits"], [31, 1, 1, "c.fmpz_poly_randtest_no_real_root", "len"], [31, 1, 1, "c.fmpz_poly_randtest_no_real_root", "p"], [31, 1, 1, "c.fmpz_poly_randtest_no_real_root", "state"]], "fmpz_poly_randtest_not_zero": [[31, 1, 1, "c.fmpz_poly_randtest_not_zero", "bits"], [31, 1, 1, "c.fmpz_poly_randtest_not_zero", "f"], [31, 1, 1, "c.fmpz_poly_randtest_not_zero", "len"], [31, 1, 1, "c.fmpz_poly_randtest_not_zero", "state"]], "fmpz_poly_randtest_unsigned": [[31, 1, 1, "c.fmpz_poly_randtest_unsigned", "bits"], [31, 1, 1, "c.fmpz_poly_randtest_unsigned", "f"], [31, 1, 1, "c.fmpz_poly_randtest_unsigned", "len"], [31, 1, 1, "c.fmpz_poly_randtest_unsigned", "state"]], "fmpz_poly_read": [[31, 1, 1, "c.fmpz_poly_read", "poly"]], "fmpz_poly_read_pretty": [[31, 1, 1, "c.fmpz_poly_read_pretty", "poly"], [31, 1, 1, "c.fmpz_poly_read_pretty", "x"]], "fmpz_poly_realloc": [[31, 1, 1, "c.fmpz_poly_realloc", "alloc"], [31, 1, 1, "c.fmpz_poly_realloc", "poly"]], "fmpz_poly_rem": [[31, 1, 1, "c.fmpz_poly_rem", "A"], [31, 1, 1, "c.fmpz_poly_rem", "B"], [31, 1, 1, "c.fmpz_poly_rem", "R"]], "fmpz_poly_rem_basecase": [[31, 1, 1, "c.fmpz_poly_rem_basecase", "A"], [31, 1, 1, "c.fmpz_poly_rem_basecase", "B"], [31, 1, 1, "c.fmpz_poly_rem_basecase", "R"]], "fmpz_poly_rem_powers_precomp": [[31, 1, 1, "c.fmpz_poly_rem_powers_precomp", "A"], [31, 1, 1, "c.fmpz_poly_rem_powers_precomp", "B"], [31, 1, 1, "c.fmpz_poly_rem_powers_precomp", "B_inv"], [31, 1, 1, "c.fmpz_poly_rem_powers_precomp", "R"]], "fmpz_poly_remove": [[31, 1, 1, "c.fmpz_poly_remove", "poly1"], [31, 1, 1, "c.fmpz_poly_remove", "poly2"], [31, 1, 1, "c.fmpz_poly_remove", "res"]], "fmpz_poly_resultant": [[31, 1, 1, "c.fmpz_poly_resultant", "poly1"], [31, 1, 1, "c.fmpz_poly_resultant", "poly2"], [31, 1, 1, "c.fmpz_poly_resultant", "res"]], "fmpz_poly_resultant_euclidean": [[31, 1, 1, "c.fmpz_poly_resultant_euclidean", "poly1"], [31, 1, 1, "c.fmpz_poly_resultant_euclidean", "poly2"], [31, 1, 1, "c.fmpz_poly_resultant_euclidean", "res"]], "fmpz_poly_resultant_modular": [[31, 1, 1, "c.fmpz_poly_resultant_modular", "poly1"], [31, 1, 1, "c.fmpz_poly_resultant_modular", "poly2"], [31, 1, 1, "c.fmpz_poly_resultant_modular", "res"]], "fmpz_poly_resultant_modular_div": [[31, 1, 1, "c.fmpz_poly_resultant_modular_div", "div"], [31, 1, 1, "c.fmpz_poly_resultant_modular_div", "nbits"], [31, 1, 1, "c.fmpz_poly_resultant_modular_div", "poly1"], [31, 1, 1, "c.fmpz_poly_resultant_modular_div", "poly2"], [31, 1, 1, "c.fmpz_poly_resultant_modular_div", "res"]], "fmpz_poly_reverse": [[31, 1, 1, "c.fmpz_poly_reverse", "n"], [31, 1, 1, "c.fmpz_poly_reverse", "poly"], [31, 1, 1, "c.fmpz_poly_reverse", "res"]], "fmpz_poly_revert_series": [[31, 1, 1, "c.fmpz_poly_revert_series", "Q"], [31, 1, 1, "c.fmpz_poly_revert_series", "Qinv"], [31, 1, 1, "c.fmpz_poly_revert_series", "n"]], "fmpz_poly_revert_series_lagrange": [[31, 1, 1, "c.fmpz_poly_revert_series_lagrange", "Q"], [31, 1, 1, "c.fmpz_poly_revert_series_lagrange", "Qinv"], [31, 1, 1, "c.fmpz_poly_revert_series_lagrange", "n"]], "fmpz_poly_revert_series_lagrange_fast": [[31, 1, 1, "c.fmpz_poly_revert_series_lagrange_fast", "Q"], [31, 1, 1, "c.fmpz_poly_revert_series_lagrange_fast", "Qinv"], [31, 1, 1, "c.fmpz_poly_revert_series_lagrange_fast", "n"]], "fmpz_poly_revert_series_newton": [[31, 1, 1, "c.fmpz_poly_revert_series_newton", "Q"], [31, 1, 1, "c.fmpz_poly_revert_series_newton", "Qinv"], [31, 1, 1, "c.fmpz_poly_revert_series_newton", "n"]], "fmpz_poly_scalar_abs": [[31, 1, 1, "c.fmpz_poly_scalar_abs", "poly"], [31, 1, 1, "c.fmpz_poly_scalar_abs", "res"]], "fmpz_poly_scalar_addmul_fmpz": [[31, 1, 1, "c.fmpz_poly_scalar_addmul_fmpz", "poly1"], [31, 1, 1, "c.fmpz_poly_scalar_addmul_fmpz", "poly2"], [31, 1, 1, "c.fmpz_poly_scalar_addmul_fmpz", "x"]], "fmpz_poly_scalar_addmul_si": [[31, 1, 1, "c.fmpz_poly_scalar_addmul_si", "poly1"], [31, 1, 1, "c.fmpz_poly_scalar_addmul_si", "poly2"], [31, 1, 1, "c.fmpz_poly_scalar_addmul_si", "x"]], "fmpz_poly_scalar_addmul_ui": [[31, 1, 1, "c.fmpz_poly_scalar_addmul_ui", "poly1"], [31, 1, 1, "c.fmpz_poly_scalar_addmul_ui", "poly2"], [31, 1, 1, "c.fmpz_poly_scalar_addmul_ui", "x"]], "fmpz_poly_scalar_divexact_fmpz": [[31, 1, 1, "c.fmpz_poly_scalar_divexact_fmpz", "poly1"], [31, 1, 1, "c.fmpz_poly_scalar_divexact_fmpz", "poly2"], [31, 1, 1, "c.fmpz_poly_scalar_divexact_fmpz", "x"]], "fmpz_poly_scalar_divexact_mpz": [[31, 1, 1, "c.fmpz_poly_scalar_divexact_mpz", "poly1"], [31, 1, 1, "c.fmpz_poly_scalar_divexact_mpz", "poly2"], [31, 1, 1, "c.fmpz_poly_scalar_divexact_mpz", "x"]], "fmpz_poly_scalar_divexact_si": [[31, 1, 1, "c.fmpz_poly_scalar_divexact_si", "poly1"], [31, 1, 1, "c.fmpz_poly_scalar_divexact_si", "poly2"], [31, 1, 1, "c.fmpz_poly_scalar_divexact_si", "x"]], "fmpz_poly_scalar_divexact_ui": [[31, 1, 1, "c.fmpz_poly_scalar_divexact_ui", "poly1"], [31, 1, 1, "c.fmpz_poly_scalar_divexact_ui", "poly2"], [31, 1, 1, "c.fmpz_poly_scalar_divexact_ui", "x"]], "fmpz_poly_scalar_fdiv_2exp": [[31, 1, 1, "c.fmpz_poly_scalar_fdiv_2exp", "poly1"], [31, 1, 1, "c.fmpz_poly_scalar_fdiv_2exp", "poly2"], [31, 1, 1, "c.fmpz_poly_scalar_fdiv_2exp", "x"]], "fmpz_poly_scalar_fdiv_fmpz": [[31, 1, 1, "c.fmpz_poly_scalar_fdiv_fmpz", "poly1"], [31, 1, 1, "c.fmpz_poly_scalar_fdiv_fmpz", "poly2"], [31, 1, 1, "c.fmpz_poly_scalar_fdiv_fmpz", "x"]], "fmpz_poly_scalar_fdiv_mpz": [[31, 1, 1, "c.fmpz_poly_scalar_fdiv_mpz", "poly1"], [31, 1, 1, "c.fmpz_poly_scalar_fdiv_mpz", "poly2"], [31, 1, 1, "c.fmpz_poly_scalar_fdiv_mpz", "x"]], "fmpz_poly_scalar_fdiv_si": [[31, 1, 1, "c.fmpz_poly_scalar_fdiv_si", "poly1"], [31, 1, 1, "c.fmpz_poly_scalar_fdiv_si", "poly2"], [31, 1, 1, "c.fmpz_poly_scalar_fdiv_si", "x"]], "fmpz_poly_scalar_fdiv_ui": [[31, 1, 1, "c.fmpz_poly_scalar_fdiv_ui", "poly1"], [31, 1, 1, "c.fmpz_poly_scalar_fdiv_ui", "poly2"], [31, 1, 1, "c.fmpz_poly_scalar_fdiv_ui", "x"]], "fmpz_poly_scalar_mod_fmpz": [[31, 1, 1, "c.fmpz_poly_scalar_mod_fmpz", "p"], [31, 1, 1, "c.fmpz_poly_scalar_mod_fmpz", "poly1"], [31, 1, 1, "c.fmpz_poly_scalar_mod_fmpz", "poly2"]], "fmpz_poly_scalar_mul_2exp": [[31, 1, 1, "c.fmpz_poly_scalar_mul_2exp", "exp"], [31, 1, 1, "c.fmpz_poly_scalar_mul_2exp", "poly1"], [31, 1, 1, "c.fmpz_poly_scalar_mul_2exp", "poly2"]], "fmpz_poly_scalar_mul_fmpz": [[31, 1, 1, "c.fmpz_poly_scalar_mul_fmpz", "poly1"], [31, 1, 1, "c.fmpz_poly_scalar_mul_fmpz", "poly2"], [31, 1, 1, "c.fmpz_poly_scalar_mul_fmpz", "x"]], "fmpz_poly_scalar_mul_mpz": [[31, 1, 1, "c.fmpz_poly_scalar_mul_mpz", "poly1"], [31, 1, 1, "c.fmpz_poly_scalar_mul_mpz", "poly2"], [31, 1, 1, "c.fmpz_poly_scalar_mul_mpz", "x"]], "fmpz_poly_scalar_mul_si": [[31, 1, 1, "c.fmpz_poly_scalar_mul_si", "poly1"], [31, 1, 1, "c.fmpz_poly_scalar_mul_si", "poly2"], [31, 1, 1, "c.fmpz_poly_scalar_mul_si", "x"]], "fmpz_poly_scalar_mul_ui": [[31, 1, 1, "c.fmpz_poly_scalar_mul_ui", "poly1"], [31, 1, 1, "c.fmpz_poly_scalar_mul_ui", "poly2"], [31, 1, 1, "c.fmpz_poly_scalar_mul_ui", "x"]], "fmpz_poly_scalar_smod_fmpz": [[31, 1, 1, "c.fmpz_poly_scalar_smod_fmpz", "p"], [31, 1, 1, "c.fmpz_poly_scalar_smod_fmpz", "poly1"], [31, 1, 1, "c.fmpz_poly_scalar_smod_fmpz", "poly2"]], "fmpz_poly_scalar_submul_fmpz": [[31, 1, 1, "c.fmpz_poly_scalar_submul_fmpz", "poly1"], [31, 1, 1, "c.fmpz_poly_scalar_submul_fmpz", "poly2"], [31, 1, 1, "c.fmpz_poly_scalar_submul_fmpz", "x"]], "fmpz_poly_scalar_tdiv_2exp": [[31, 1, 1, "c.fmpz_poly_scalar_tdiv_2exp", "poly1"], [31, 1, 1, "c.fmpz_poly_scalar_tdiv_2exp", "poly2"], [31, 1, 1, "c.fmpz_poly_scalar_tdiv_2exp", "x"]], "fmpz_poly_scalar_tdiv_fmpz": [[31, 1, 1, "c.fmpz_poly_scalar_tdiv_fmpz", "poly1"], [31, 1, 1, "c.fmpz_poly_scalar_tdiv_fmpz", "poly2"], [31, 1, 1, "c.fmpz_poly_scalar_tdiv_fmpz", "x"]], "fmpz_poly_scalar_tdiv_si": [[31, 1, 1, "c.fmpz_poly_scalar_tdiv_si", "poly1"], [31, 1, 1, "c.fmpz_poly_scalar_tdiv_si", "poly2"], [31, 1, 1, "c.fmpz_poly_scalar_tdiv_si", "x"]], "fmpz_poly_scalar_tdiv_ui": [[31, 1, 1, "c.fmpz_poly_scalar_tdiv_ui", "poly1"], [31, 1, 1, "c.fmpz_poly_scalar_tdiv_ui", "poly2"], [31, 1, 1, "c.fmpz_poly_scalar_tdiv_ui", "x"]], "fmpz_poly_set": [[31, 1, 1, "c.fmpz_poly_set", "poly1"], [31, 1, 1, "c.fmpz_poly_set", "poly2"]], "fmpz_poly_set_coeff_fmpz": [[31, 1, 1, "c.fmpz_poly_set_coeff_fmpz", "n"], [31, 1, 1, "c.fmpz_poly_set_coeff_fmpz", "poly"], [31, 1, 1, "c.fmpz_poly_set_coeff_fmpz", "x"]], "fmpz_poly_set_coeff_si": [[31, 1, 1, "c.fmpz_poly_set_coeff_si", "n"], [31, 1, 1, "c.fmpz_poly_set_coeff_si", "poly"], [31, 1, 1, "c.fmpz_poly_set_coeff_si", "x"]], "fmpz_poly_set_coeff_ui": [[31, 1, 1, "c.fmpz_poly_set_coeff_ui", "n"], [31, 1, 1, "c.fmpz_poly_set_coeff_ui", "poly"], [31, 1, 1, "c.fmpz_poly_set_coeff_ui", "x"]], "fmpz_poly_set_fmpz": [[31, 1, 1, "c.fmpz_poly_set_fmpz", "c"], [31, 1, 1, "c.fmpz_poly_set_fmpz", "poly"]], "fmpz_poly_set_mpz": [[31, 1, 1, "c.fmpz_poly_set_mpz", "c"], [31, 1, 1, "c.fmpz_poly_set_mpz", "poly"]], "fmpz_poly_set_nmod_poly": [[31, 1, 1, "c.fmpz_poly_set_nmod_poly", "A"], [31, 1, 1, "c.fmpz_poly_set_nmod_poly", "Amod"]], "fmpz_poly_set_nmod_poly_unsigned": [[31, 1, 1, "c.fmpz_poly_set_nmod_poly_unsigned", "A"], [31, 1, 1, "c.fmpz_poly_set_nmod_poly_unsigned", "Amod"]], "fmpz_poly_set_si": [[31, 1, 1, "c.fmpz_poly_set_si", "c"], [31, 1, 1, "c.fmpz_poly_set_si", "poly"]], "fmpz_poly_set_str": [[31, 1, 1, "c.fmpz_poly_set_str", "poly"], [31, 1, 1, "c.fmpz_poly_set_str", "str"]], "fmpz_poly_set_trunc": [[31, 1, 1, "c.fmpz_poly_set_trunc", "n"], [31, 1, 1, "c.fmpz_poly_set_trunc", "poly"], [31, 1, 1, "c.fmpz_poly_set_trunc", "res"]], "fmpz_poly_set_ui": [[31, 1, 1, "c.fmpz_poly_set_ui", "c"], [31, 1, 1, "c.fmpz_poly_set_ui", "poly"]], "fmpz_poly_shift_left": [[31, 1, 1, "c.fmpz_poly_shift_left", "n"], [31, 1, 1, "c.fmpz_poly_shift_left", "poly"], [31, 1, 1, "c.fmpz_poly_shift_left", "res"]], "fmpz_poly_shift_right": [[31, 1, 1, "c.fmpz_poly_shift_right", "n"], [31, 1, 1, "c.fmpz_poly_shift_right", "poly"], [31, 1, 1, "c.fmpz_poly_shift_right", "res"]], "fmpz_poly_signature": [[31, 1, 1, "c.fmpz_poly_signature", "poly"], [31, 1, 1, "c.fmpz_poly_signature", "r1"], [31, 1, 1, "c.fmpz_poly_signature", "r2"]], "fmpz_poly_sqr": [[31, 1, 1, "c.fmpz_poly_sqr", "op"], [31, 1, 1, "c.fmpz_poly_sqr", "rop"]], "fmpz_poly_sqr_KS": [[31, 1, 1, "c.fmpz_poly_sqr_KS", "op"], [31, 1, 1, "c.fmpz_poly_sqr_KS", "rop"]], "fmpz_poly_sqr_classical": [[31, 1, 1, "c.fmpz_poly_sqr_classical", "op"], [31, 1, 1, "c.fmpz_poly_sqr_classical", "rop"]], "fmpz_poly_sqr_karatsuba": [[31, 1, 1, "c.fmpz_poly_sqr_karatsuba", "op"], [31, 1, 1, "c.fmpz_poly_sqr_karatsuba", "rop"]], "fmpz_poly_sqrlow": [[31, 1, 1, "c.fmpz_poly_sqrlow", "n"], [31, 1, 1, "c.fmpz_poly_sqrlow", "poly"], [31, 1, 1, "c.fmpz_poly_sqrlow", "res"]], "fmpz_poly_sqrlow_KS": [[31, 1, 1, "c.fmpz_poly_sqrlow_KS", "n"], [31, 1, 1, "c.fmpz_poly_sqrlow_KS", "poly"], [31, 1, 1, "c.fmpz_poly_sqrlow_KS", "res"]], "fmpz_poly_sqrlow_classical": [[31, 1, 1, "c.fmpz_poly_sqrlow_classical", "n"], [31, 1, 1, "c.fmpz_poly_sqrlow_classical", "poly"], [31, 1, 1, "c.fmpz_poly_sqrlow_classical", "res"]], "fmpz_poly_sqrlow_karatsuba_n": [[31, 1, 1, "c.fmpz_poly_sqrlow_karatsuba_n", "n"], [31, 1, 1, "c.fmpz_poly_sqrlow_karatsuba_n", "poly"], [31, 1, 1, "c.fmpz_poly_sqrlow_karatsuba_n", "res"]], "fmpz_poly_sqrt": [[31, 1, 1, "c.fmpz_poly_sqrt", "a"], [31, 1, 1, "c.fmpz_poly_sqrt", "b"]], "fmpz_poly_sqrt_KS": [[31, 1, 1, "c.fmpz_poly_sqrt_KS", "a"], [31, 1, 1, "c.fmpz_poly_sqrt_KS", "b"]], "fmpz_poly_sqrt_classical": [[31, 1, 1, "c.fmpz_poly_sqrt_classical", "a"], [31, 1, 1, "c.fmpz_poly_sqrt_classical", "b"]], "fmpz_poly_sqrt_divconquer": [[31, 1, 1, "c.fmpz_poly_sqrt_divconquer", "a"], [31, 1, 1, "c.fmpz_poly_sqrt_divconquer", "b"]], "fmpz_poly_sqrt_series": [[31, 1, 1, "c.fmpz_poly_sqrt_series", "a"], [31, 1, 1, "c.fmpz_poly_sqrt_series", "b"], [31, 1, 1, "c.fmpz_poly_sqrt_series", "n"]], "fmpz_poly_sqrtrem_classical": [[31, 1, 1, "c.fmpz_poly_sqrtrem_classical", "a"], [31, 1, 1, "c.fmpz_poly_sqrtrem_classical", "b"], [31, 1, 1, "c.fmpz_poly_sqrtrem_classical", "r"]], "fmpz_poly_sqrtrem_divconquer": [[31, 1, 1, "c.fmpz_poly_sqrtrem_divconquer", "a"], [31, 1, 1, "c.fmpz_poly_sqrtrem_divconquer", "b"], [31, 1, 1, "c.fmpz_poly_sqrtrem_divconquer", "r"]], "fmpz_poly_sub": [[31, 1, 1, "c.fmpz_poly_sub", "poly1"], [31, 1, 1, "c.fmpz_poly_sub", "poly2"], [31, 1, 1, "c.fmpz_poly_sub", "res"]], "fmpz_poly_sub_series": [[31, 1, 1, "c.fmpz_poly_sub_series", "n"], [31, 1, 1, "c.fmpz_poly_sub_series", "poly1"], [31, 1, 1, "c.fmpz_poly_sub_series", "poly2"], [31, 1, 1, "c.fmpz_poly_sub_series", "res"]], "fmpz_poly_swap": [[31, 1, 1, "c.fmpz_poly_swap", "poly1"], [31, 1, 1, "c.fmpz_poly_swap", "poly2"]], "fmpz_poly_swinnerton_dyer": [[31, 1, 1, "c.fmpz_poly_swinnerton_dyer", "n"], [31, 1, 1, "c.fmpz_poly_swinnerton_dyer", "poly"]], "fmpz_poly_taylor_shift": [[31, 1, 1, "c.fmpz_poly_taylor_shift", "c"], [31, 1, 1, "c.fmpz_poly_taylor_shift", "f"], [31, 1, 1, "c.fmpz_poly_taylor_shift", "g"]], "fmpz_poly_taylor_shift_divconquer": [[31, 1, 1, "c.fmpz_poly_taylor_shift_divconquer", "c"], [31, 1, 1, "c.fmpz_poly_taylor_shift_divconquer", "f"], [31, 1, 1, "c.fmpz_poly_taylor_shift_divconquer", "g"]], "fmpz_poly_taylor_shift_horner": [[31, 1, 1, "c.fmpz_poly_taylor_shift_horner", "c"], [31, 1, 1, "c.fmpz_poly_taylor_shift_horner", "f"], [31, 1, 1, "c.fmpz_poly_taylor_shift_horner", "g"]], "fmpz_poly_taylor_shift_multi_mod": [[31, 1, 1, "c.fmpz_poly_taylor_shift_multi_mod", "c"], [31, 1, 1, "c.fmpz_poly_taylor_shift_multi_mod", "f"], [31, 1, 1, "c.fmpz_poly_taylor_shift_multi_mod", "g"]], "fmpz_poly_theta_qexp": [[31, 1, 1, "c.fmpz_poly_theta_qexp", "f"], [31, 1, 1, "c.fmpz_poly_theta_qexp", "n"], [31, 1, 1, "c.fmpz_poly_theta_qexp", "r"]], "fmpz_poly_truncate": [[31, 1, 1, "c.fmpz_poly_truncate", "newlen"], [31, 1, 1, "c.fmpz_poly_truncate", "poly"]], "fmpz_poly_xgcd": [[31, 1, 1, "c.fmpz_poly_xgcd", "f"], [31, 1, 1, "c.fmpz_poly_xgcd", "g"], [31, 1, 1, "c.fmpz_poly_xgcd", "r"], [31, 1, 1, "c.fmpz_poly_xgcd", "s"], [31, 1, 1, "c.fmpz_poly_xgcd", "t"]], "fmpz_poly_xgcd_modular": [[31, 1, 1, "c.fmpz_poly_xgcd_modular", "f"], [31, 1, 1, "c.fmpz_poly_xgcd_modular", "g"], [31, 1, 1, "c.fmpz_poly_xgcd_modular", "r"], [31, 1, 1, "c.fmpz_poly_xgcd_modular", "s"], [31, 1, 1, "c.fmpz_poly_xgcd_modular", "t"]], "fmpz_poly_zero": [[31, 1, 1, "c.fmpz_poly_zero", "poly"]], "fmpz_poly_zero_coeffs": [[31, 1, 1, "c.fmpz_poly_zero_coeffs", "i"], [31, 1, 1, "c.fmpz_poly_zero_coeffs", "j"], [31, 1, 1, "c.fmpz_poly_zero_coeffs", "poly"]], "fmpz_popcnt": [[18, 1, 1, "c.fmpz_popcnt", "a"]], "fmpz_pow_fmpz": [[18, 1, 1, "c.fmpz_pow_fmpz", "f"], [18, 1, 1, "c.fmpz_pow_fmpz", "g"], [18, 1, 1, "c.fmpz_pow_fmpz", "x"]], "fmpz_pow_ui": [[18, 1, 1, "c.fmpz_pow_ui", "f"], [18, 1, 1, "c.fmpz_pow_ui", "g"], [18, 1, 1, "c.fmpz_pow_ui", "x"]], "fmpz_powm": [[18, 1, 1, "c.fmpz_powm", "e"], [18, 1, 1, "c.fmpz_powm", "f"], [18, 1, 1, "c.fmpz_powm", "g"], [18, 1, 1, "c.fmpz_powm", "m"]], "fmpz_powm_ui": [[18, 1, 1, "c.fmpz_powm_ui", "e"], [18, 1, 1, "c.fmpz_powm_ui", "f"], [18, 1, 1, "c.fmpz_powm_ui", "g"], [18, 1, 1, "c.fmpz_powm_ui", "m"]], "fmpz_preinvn_clear": [[18, 1, 1, "c.fmpz_preinvn_clear", "inv"]], "fmpz_preinvn_init": [[18, 1, 1, "c.fmpz_preinvn_init", "f"], [18, 1, 1, "c.fmpz_preinvn_init", "inv"]], "fmpz_primorial": [[18, 1, 1, "c.fmpz_primorial", "n"], [18, 1, 1, "c.fmpz_primorial", "res"]], "fmpz_print": [[18, 1, 1, "c.fmpz_print", "x"]], "fmpz_randbits": [[18, 1, 1, "c.fmpz_randbits", "bits"], [18, 1, 1, "c.fmpz_randbits", "f"], [18, 1, 1, "c.fmpz_randbits", "state"]], "fmpz_randm": [[18, 1, 1, "c.fmpz_randm", "f"], [18, 1, 1, "c.fmpz_randm", "m"], [18, 1, 1, "c.fmpz_randm", "state"]], "fmpz_randprime": [[18, 1, 1, "c.fmpz_randprime", "bits"], [18, 1, 1, "c.fmpz_randprime", "f"], [18, 1, 1, "c.fmpz_randprime", "proved"], [18, 1, 1, "c.fmpz_randprime", "state"]], "fmpz_randtest": [[18, 1, 1, "c.fmpz_randtest", "bits"], [18, 1, 1, "c.fmpz_randtest", "f"], [18, 1, 1, "c.fmpz_randtest", "state"]], "fmpz_randtest_mod": [[18, 1, 1, "c.fmpz_randtest_mod", "f"], [18, 1, 1, "c.fmpz_randtest_mod", "m"], [18, 1, 1, "c.fmpz_randtest_mod", "state"]], "fmpz_randtest_mod_signed": [[18, 1, 1, "c.fmpz_randtest_mod_signed", "f"], [18, 1, 1, "c.fmpz_randtest_mod_signed", "m"], [18, 1, 1, "c.fmpz_randtest_mod_signed", "state"]], "fmpz_randtest_not_zero": [[18, 1, 1, "c.fmpz_randtest_not_zero", "bits"], [18, 1, 1, "c.fmpz_randtest_not_zero", "f"], [18, 1, 1, "c.fmpz_randtest_not_zero", "state"]], "fmpz_randtest_unsigned": [[18, 1, 1, "c.fmpz_randtest_unsigned", "bits"], [18, 1, 1, "c.fmpz_randtest_unsigned", "f"], [18, 1, 1, "c.fmpz_randtest_unsigned", "state"]], "fmpz_read": [[18, 1, 1, "c.fmpz_read", "f"]], "fmpz_remove": [[18, 1, 1, "c.fmpz_remove", "f"], [18, 1, 1, "c.fmpz_remove", "op"], [18, 1, 1, "c.fmpz_remove", "rop"]], "fmpz_rfac_ui": [[18, 1, 1, "c.fmpz_rfac_ui", "k"], [18, 1, 1, "c.fmpz_rfac_ui", "r"], [18, 1, 1, "c.fmpz_rfac_ui", "x"]], "fmpz_rfac_uiui": [[18, 1, 1, "c.fmpz_rfac_uiui", "k"], [18, 1, 1, "c.fmpz_rfac_uiui", "r"], [18, 1, 1, "c.fmpz_rfac_uiui", "x"]], "fmpz_root": [[18, 1, 1, "c.fmpz_root", "f"], [18, 1, 1, "c.fmpz_root", "n"], [18, 1, 1, "c.fmpz_root", "r"]], "fmpz_set": [[18, 1, 1, "c.fmpz_set", "f"], [18, 1, 1, "c.fmpz_set", "g"]], "fmpz_set_d": [[18, 1, 1, "c.fmpz_set_d", "c"], [18, 1, 1, "c.fmpz_set_d", "f"]], "fmpz_set_d_2exp": [[18, 1, 1, "c.fmpz_set_d_2exp", "d"], [18, 1, 1, "c.fmpz_set_d_2exp", "exp"], [18, 1, 1, "c.fmpz_set_d_2exp", "f"]], "fmpz_set_mpf": [[18, 1, 1, "c.fmpz_set_mpf", "f"], [18, 1, 1, "c.fmpz_set_mpf", "x"]], "fmpz_set_mpz": [[18, 1, 1, "c.fmpz_set_mpz", "f"], [18, 1, 1, "c.fmpz_set_mpz", "x"]], "fmpz_set_si": [[18, 1, 1, "c.fmpz_set_si", "f"], [18, 1, 1, "c.fmpz_set_si", "val"]], "fmpz_set_signed_ui_array": [[18, 1, 1, "c.fmpz_set_signed_ui_array", "in"], [18, 1, 1, "c.fmpz_set_signed_ui_array", "n"], [18, 1, 1, "c.fmpz_set_signed_ui_array", "out"]], "fmpz_set_signed_uiui": [[18, 1, 1, "c.fmpz_set_signed_uiui", "f"], [18, 1, 1, "c.fmpz_set_signed_uiui", "hi"], [18, 1, 1, "c.fmpz_set_signed_uiui", "lo"]], "fmpz_set_signed_uiuiui": [[18, 1, 1, "c.fmpz_set_signed_uiuiui", "f"], [18, 1, 1, "c.fmpz_set_signed_uiuiui", "hi"], [18, 1, 1, "c.fmpz_set_signed_uiuiui", "lo"], [18, 1, 1, "c.fmpz_set_signed_uiuiui", "mid"]], "fmpz_set_str": [[18, 1, 1, "c.fmpz_set_str", "b"], [18, 1, 1, "c.fmpz_set_str", "f"], [18, 1, 1, "c.fmpz_set_str", "str"]], "fmpz_set_ui": [[18, 1, 1, "c.fmpz_set_ui", "f"], [18, 1, 1, "c.fmpz_set_ui", "val"]], "fmpz_set_ui_array": [[18, 1, 1, "c.fmpz_set_ui_array", "in"], [18, 1, 1, "c.fmpz_set_ui_array", "n"], [18, 1, 1, "c.fmpz_set_ui_array", "out"]], "fmpz_set_ui_smod": [[18, 1, 1, "c.fmpz_set_ui_smod", "f"], [18, 1, 1, "c.fmpz_set_ui_smod", "m"], [18, 1, 1, "c.fmpz_set_ui_smod", "x"]], "fmpz_set_uiui": [[18, 1, 1, "c.fmpz_set_uiui", "f"], [18, 1, 1, "c.fmpz_set_uiui", "hi"], [18, 1, 1, "c.fmpz_set_uiui", "lo"]], "fmpz_setbit": [[18, 1, 1, "c.fmpz_setbit", "f"], [18, 1, 1, "c.fmpz_setbit", "i"]], "fmpz_sgn": [[18, 1, 1, "c.fmpz_sgn", "f"]], "fmpz_size": [[18, 1, 1, "c.fmpz_size", "f"]], "fmpz_sizeinbase": [[18, 1, 1, "c.fmpz_sizeinbase", "b"], [18, 1, 1, "c.fmpz_sizeinbase", "f"]], "fmpz_smod": [[18, 1, 1, "c.fmpz_smod", "f"], [18, 1, 1, "c.fmpz_smod", "g"], [18, 1, 1, "c.fmpz_smod", "h"]], "fmpz_sqrt": [[18, 1, 1, "c.fmpz_sqrt", "f"], [18, 1, 1, "c.fmpz_sqrt", "g"]], "fmpz_sqrtmod": [[18, 1, 1, "c.fmpz_sqrtmod", "a"], [18, 1, 1, "c.fmpz_sqrtmod", "b"], [18, 1, 1, "c.fmpz_sqrtmod", "p"]], "fmpz_sqrtrem": [[18, 1, 1, "c.fmpz_sqrtrem", "f"], [18, 1, 1, "c.fmpz_sqrtrem", "g"], [18, 1, 1, "c.fmpz_sqrtrem", "r"]], "fmpz_sub": [[18, 1, 1, "c.fmpz_sub", "f"], [18, 1, 1, "c.fmpz_sub", "g"], [18, 1, 1, "c.fmpz_sub", "h"]], "fmpz_sub_si": [[18, 1, 1, "c.fmpz_sub_si", "f"], [18, 1, 1, "c.fmpz_sub_si", "g"], [18, 1, 1, "c.fmpz_sub_si", "h"]], "fmpz_sub_ui": [[18, 1, 1, "c.fmpz_sub_ui", "f"], [18, 1, 1, "c.fmpz_sub_ui", "g"], [18, 1, 1, "c.fmpz_sub_ui", "h"]], "fmpz_submul": [[18, 1, 1, "c.fmpz_submul", "f"], [18, 1, 1, "c.fmpz_submul", "g"], [18, 1, 1, "c.fmpz_submul", "h"]], "fmpz_submul_si": [[18, 1, 1, "c.fmpz_submul_si", "f"], [18, 1, 1, "c.fmpz_submul_si", "g"], [18, 1, 1, "c.fmpz_submul_si", "h"]], "fmpz_submul_ui": [[18, 1, 1, "c.fmpz_submul_ui", "f"], [18, 1, 1, "c.fmpz_submul_ui", "g"], [18, 1, 1, "c.fmpz_submul_ui", "h"]], "fmpz_swap": [[18, 1, 1, "c.fmpz_swap", "f"], [18, 1, 1, "c.fmpz_swap", "g"]], "fmpz_tdiv_q": [[18, 1, 1, "c.fmpz_tdiv_q", "f"], [18, 1, 1, "c.fmpz_tdiv_q", "g"], [18, 1, 1, "c.fmpz_tdiv_q", "h"]], "fmpz_tdiv_q_2exp": [[18, 1, 1, "c.fmpz_tdiv_q_2exp", "exp"], [18, 1, 1, "c.fmpz_tdiv_q_2exp", "f"], [18, 1, 1, "c.fmpz_tdiv_q_2exp", "g"]], "fmpz_tdiv_q_si": [[18, 1, 1, "c.fmpz_tdiv_q_si", "f"], [18, 1, 1, "c.fmpz_tdiv_q_si", "g"], [18, 1, 1, "c.fmpz_tdiv_q_si", "h"]], "fmpz_tdiv_q_ui": [[18, 1, 1, "c.fmpz_tdiv_q_ui", "f"], [18, 1, 1, "c.fmpz_tdiv_q_ui", "g"], [18, 1, 1, "c.fmpz_tdiv_q_ui", "h"]], "fmpz_tdiv_qr": [[18, 1, 1, "c.fmpz_tdiv_qr", "f"], [18, 1, 1, "c.fmpz_tdiv_qr", "g"], [18, 1, 1, "c.fmpz_tdiv_qr", "h"], [18, 1, 1, "c.fmpz_tdiv_qr", "s"]], "fmpz_tdiv_r_2exp": [[18, 1, 1, "c.fmpz_tdiv_r_2exp", "exp"], [18, 1, 1, "c.fmpz_tdiv_r_2exp", "g"], [18, 1, 1, "c.fmpz_tdiv_r_2exp", "s"]], "fmpz_tdiv_ui": [[18, 1, 1, "c.fmpz_tdiv_ui", "g"], [18, 1, 1, "c.fmpz_tdiv_ui", "h"]], "fmpz_tstbit": [[18, 1, 1, "c.fmpz_tstbit", "f"], [18, 1, 1, "c.fmpz_tstbit", "i"]], "fmpz_val2": [[18, 1, 1, "c.fmpz_val2", "f"]], "fmpz_xgcd": [[18, 1, 1, "c.fmpz_xgcd", "a"], [18, 1, 1, "c.fmpz_xgcd", "b"], [18, 1, 1, "c.fmpz_xgcd", "d"], [18, 1, 1, "c.fmpz_xgcd", "f"], [18, 1, 1, "c.fmpz_xgcd", "g"]], "fmpz_xgcd_canonical_bezout": [[18, 1, 1, "c.fmpz_xgcd_canonical_bezout", "a"], [18, 1, 1, "c.fmpz_xgcd_canonical_bezout", "b"], [18, 1, 1, "c.fmpz_xgcd_canonical_bezout", "d"], [18, 1, 1, "c.fmpz_xgcd_canonical_bezout", "f"], [18, 1, 1, "c.fmpz_xgcd_canonical_bezout", "g"]], "fmpz_xgcd_partial": [[18, 1, 1, "c.fmpz_xgcd_partial", "L"], [18, 1, 1, "c.fmpz_xgcd_partial", "co1"], [18, 1, 1, "c.fmpz_xgcd_partial", "co2"], [18, 1, 1, "c.fmpz_xgcd_partial", "r1"], [18, 1, 1, "c.fmpz_xgcd_partial", "r2"]], "fmpz_xor": [[18, 1, 1, "c.fmpz_xor", "a"], [18, 1, 1, "c.fmpz_xor", "b"], [18, 1, 1, "c.fmpz_xor", "r"]], "fmpz_zero": [[18, 1, 1, "c.fmpz_zero", "f"]], "fq_add": [[36, 1, 1, "c.fq_add", "ctx"], [36, 1, 1, "c.fq_add", "op1"], [36, 1, 1, "c.fq_add", "op2"], [36, 1, 1, "c.fq_add", "rop"]], "fq_bit_pack": [[36, 1, 1, "c.fq_bit_pack", "bit_size"], [36, 1, 1, "c.fq_bit_pack", "ctx"], [36, 1, 1, "c.fq_bit_pack", "f"], [36, 1, 1, "c.fq_bit_pack", "op"]], "fq_bit_unpack": [[36, 1, 1, "c.fq_bit_unpack", "bit_size"], [36, 1, 1, "c.fq_bit_unpack", "ctx"], [36, 1, 1, "c.fq_bit_unpack", "f"], [36, 1, 1, "c.fq_bit_unpack", "rop"]], "fq_clear": [[36, 1, 1, "c.fq_clear", "ctx"], [36, 1, 1, "c.fq_clear", "rop"]], "fq_ctx_clear": [[36, 1, 1, "c.fq_ctx_clear", "ctx"]], "fq_ctx_degree": [[36, 1, 1, "c.fq_ctx_degree", "ctx"]], "fq_ctx_fprint": [[36, 1, 1, "c.fq_ctx_fprint", "ctx"], [36, 1, 1, "c.fq_ctx_fprint", "file"]], "fq_ctx_init": [[36, 1, 1, "c.fq_ctx_init", "ctx"], [36, 1, 1, "c.fq_ctx_init", "d"], [36, 1, 1, "c.fq_ctx_init", "p"], [36, 1, 1, "c.fq_ctx_init", "var"]], "fq_ctx_init_conway": [[36, 1, 1, "c.fq_ctx_init_conway", "ctx"], [36, 1, 1, "c.fq_ctx_init_conway", "d"], [36, 1, 1, "c.fq_ctx_init_conway", "p"], [36, 1, 1, "c.fq_ctx_init_conway", "var"]], "fq_ctx_init_modulus": [[36, 1, 1, "c.fq_ctx_init_modulus", "ctx"], [36, 1, 1, "c.fq_ctx_init_modulus", "ctxp"], [36, 1, 1, "c.fq_ctx_init_modulus", "modulus"], [36, 1, 1, "c.fq_ctx_init_modulus", "var"]], "fq_ctx_modulus": [[36, 1, 1, "c.fq_ctx_modulus", "ctx"]], "fq_ctx_order": [[36, 1, 1, "c.fq_ctx_order", "ctx"], [36, 1, 1, "c.fq_ctx_order", "f"]], "fq_ctx_prime": [[36, 1, 1, "c.fq_ctx_prime", "ctx"]], "fq_ctx_print": [[36, 1, 1, "c.fq_ctx_print", "ctx"]], "fq_ctx_randtest": [[36, 1, 1, "c.fq_ctx_randtest", "ctx"]], "fq_ctx_randtest_reducible": [[36, 1, 1, "c.fq_ctx_randtest_reducible", "ctx"]], "fq_default_add": [[37, 1, 1, "c.fq_default_add", "ctx"], [37, 1, 1, "c.fq_default_add", "op1"], [37, 1, 1, "c.fq_default_add", "op2"], [37, 1, 1, "c.fq_default_add", "rop"]], "fq_default_clear": [[37, 1, 1, "c.fq_default_clear", "ctx"], [37, 1, 1, "c.fq_default_clear", "rop"]], "fq_default_ctx_clear": [[37, 1, 1, "c.fq_default_ctx_clear", "ctx"]], "fq_default_ctx_degree": [[37, 1, 1, "c.fq_default_ctx_degree", "ctx"]], "fq_default_ctx_fprint": [[37, 1, 1, "c.fq_default_ctx_fprint", "ctx"], [37, 1, 1, "c.fq_default_ctx_fprint", "file"]], "fq_default_ctx_init": [[37, 1, 1, "c.fq_default_ctx_init", "ctx"], [37, 1, 1, "c.fq_default_ctx_init", "d"], [37, 1, 1, "c.fq_default_ctx_init", "p"], [37, 1, 1, "c.fq_default_ctx_init", "var"]], "fq_default_ctx_init_modulus": [[37, 1, 1, "c.fq_default_ctx_init_modulus", "ctx"], [37, 1, 1, "c.fq_default_ctx_init_modulus", "mod_ctx"], [37, 1, 1, "c.fq_default_ctx_init_modulus", "modulus"], [37, 1, 1, "c.fq_default_ctx_init_modulus", "var"]], "fq_default_ctx_init_modulus_nmod": [[37, 1, 1, "c.fq_default_ctx_init_modulus_nmod", "ctx"], [37, 1, 1, "c.fq_default_ctx_init_modulus_nmod", "modulus"], [37, 1, 1, "c.fq_default_ctx_init_modulus_nmod", "var"]], "fq_default_ctx_init_modulus_nmod_type": [[37, 1, 1, "c.fq_default_ctx_init_modulus_nmod_type", "ctx"], [37, 1, 1, "c.fq_default_ctx_init_modulus_nmod_type", "modulus"], [37, 1, 1, "c.fq_default_ctx_init_modulus_nmod_type", "type"], [37, 1, 1, "c.fq_default_ctx_init_modulus_nmod_type", "var"]], "fq_default_ctx_init_modulus_type": [[37, 1, 1, "c.fq_default_ctx_init_modulus_type", "ctx"], [37, 1, 1, "c.fq_default_ctx_init_modulus_type", "mod_ctx"], [37, 1, 1, "c.fq_default_ctx_init_modulus_type", "modulus"], [37, 1, 1, "c.fq_default_ctx_init_modulus_type", "type"], [37, 1, 1, "c.fq_default_ctx_init_modulus_type", "var"]], "fq_default_ctx_init_type": [[37, 1, 1, "c.fq_default_ctx_init_type", "ctx"], [37, 1, 1, "c.fq_default_ctx_init_type", "d"], [37, 1, 1, "c.fq_default_ctx_init_type", "p"], [37, 1, 1, "c.fq_default_ctx_init_type", "type"], [37, 1, 1, "c.fq_default_ctx_init_type", "var"]], "fq_default_ctx_modulus": [[37, 1, 1, "c.fq_default_ctx_modulus", "ctx"], [37, 1, 1, "c.fq_default_ctx_modulus", "p"]], "fq_default_ctx_order": [[37, 1, 1, "c.fq_default_ctx_order", "ctx"], [37, 1, 1, "c.fq_default_ctx_order", "f"]], "fq_default_ctx_prime": [[37, 1, 1, "c.fq_default_ctx_prime", "ctx"], [37, 1, 1, "c.fq_default_ctx_prime", "prime"]], "fq_default_ctx_print": [[37, 1, 1, "c.fq_default_ctx_print", "ctx"]], "fq_default_ctx_randtest": [[37, 1, 1, "c.fq_default_ctx_randtest", "ctx"]], "fq_default_ctx_type": [[37, 1, 1, "c.fq_default_ctx_type", "ctx"]], "fq_default_div": [[37, 1, 1, "c.fq_default_div", "ctx"], [37, 1, 1, "c.fq_default_div", "op1"], [37, 1, 1, "c.fq_default_div", "op2"], [37, 1, 1, "c.fq_default_div", "rop"]], "fq_default_equal": [[37, 1, 1, "c.fq_default_equal", "ctx"], [37, 1, 1, "c.fq_default_equal", "op1"], [37, 1, 1, "c.fq_default_equal", "op2"]], "fq_default_fprint": [[37, 1, 1, "c.fq_default_fprint", "ctx"], [37, 1, 1, "c.fq_default_fprint", "file"], [37, 1, 1, "c.fq_default_fprint", "op"]], "fq_default_fprint_pretty": [[37, 1, 1, "c.fq_default_fprint_pretty", "ctx"], [37, 1, 1, "c.fq_default_fprint_pretty", "file"], [37, 1, 1, "c.fq_default_fprint_pretty", "op"]], "fq_default_frobenius": [[37, 1, 1, "c.fq_default_frobenius", "ctx"], [37, 1, 1, "c.fq_default_frobenius", "e"], [37, 1, 1, "c.fq_default_frobenius", "op"], [37, 1, 1, "c.fq_default_frobenius", "rop"]], "fq_default_gen": [[37, 1, 1, "c.fq_default_gen", "ctx"], [37, 1, 1, "c.fq_default_gen", "rop"]], "fq_default_get_coeff_fmpz": [[37, 1, 1, "c.fq_default_get_coeff_fmpz", "c"], [37, 1, 1, "c.fq_default_get_coeff_fmpz", "ctx"], [37, 1, 1, "c.fq_default_get_coeff_fmpz", "n"], [37, 1, 1, "c.fq_default_get_coeff_fmpz", "op"]], "fq_default_get_fmpz": [[37, 1, 1, "c.fq_default_get_fmpz", "ctx"], [37, 1, 1, "c.fq_default_get_fmpz", "op"], [37, 1, 1, "c.fq_default_get_fmpz", "rop"]], "fq_default_get_fmpz_mod_poly": [[37, 1, 1, "c.fq_default_get_fmpz_mod_poly", "ctx"], [37, 1, 1, "c.fq_default_get_fmpz_mod_poly", "mod_ctx"], [37, 1, 1, "c.fq_default_get_fmpz_mod_poly", "op"], [37, 1, 1, "c.fq_default_get_fmpz_mod_poly", "poly"]], "fq_default_get_fmpz_poly": [[37, 1, 1, "c.fq_default_get_fmpz_poly", "a"], [37, 1, 1, "c.fq_default_get_fmpz_poly", "b"], [37, 1, 1, "c.fq_default_get_fmpz_poly", "ctx"]], "fq_default_get_nmod_poly": [[37, 1, 1, "c.fq_default_get_nmod_poly", "ctx"], [37, 1, 1, "c.fq_default_get_nmod_poly", "op"], [37, 1, 1, "c.fq_default_get_nmod_poly", "poly"]], "fq_default_get_str": [[37, 1, 1, "c.fq_default_get_str", "ctx"], [37, 1, 1, "c.fq_default_get_str", "op"]], "fq_default_get_str_pretty": [[37, 1, 1, "c.fq_default_get_str_pretty", "ctx"], [37, 1, 1, "c.fq_default_get_str_pretty", "op"]], "fq_default_init": [[37, 1, 1, "c.fq_default_init", "ctx"], [37, 1, 1, "c.fq_default_init", "rop"]], "fq_default_init2": [[37, 1, 1, "c.fq_default_init2", "ctx"], [37, 1, 1, "c.fq_default_init2", "rop"]], "fq_default_inv": [[37, 1, 1, "c.fq_default_inv", "ctx"], [37, 1, 1, "c.fq_default_inv", "op"], [37, 1, 1, "c.fq_default_inv", "rop"]], "fq_default_is_invertible": [[37, 1, 1, "c.fq_default_is_invertible", "ctx"], [37, 1, 1, "c.fq_default_is_invertible", "op"]], "fq_default_is_one": [[37, 1, 1, "c.fq_default_is_one", "ctx"], [37, 1, 1, "c.fq_default_is_one", "op"]], "fq_default_is_square": [[37, 1, 1, "c.fq_default_is_square", "ctx"], [37, 1, 1, "c.fq_default_is_square", "op"]], "fq_default_is_zero": [[37, 1, 1, "c.fq_default_is_zero", "ctx"], [37, 1, 1, "c.fq_default_is_zero", "op"]], "fq_default_mat_add": [[38, 1, 1, "c.fq_default_mat_add", "A"], [38, 1, 1, "c.fq_default_mat_add", "B"], [38, 1, 1, "c.fq_default_mat_add", "C"], [38, 1, 1, "c.fq_default_mat_add", "ctx"]], "fq_default_mat_can_solve": [[38, 1, 1, "c.fq_default_mat_can_solve", "A"], [38, 1, 1, "c.fq_default_mat_can_solve", "B"], [38, 1, 1, "c.fq_default_mat_can_solve", "X"], [38, 1, 1, "c.fq_default_mat_can_solve", "ctx"]], "fq_default_mat_charpoly": [[38, 1, 1, "c.fq_default_mat_charpoly", "M"], [38, 1, 1, "c.fq_default_mat_charpoly", "ctx"], [38, 1, 1, "c.fq_default_mat_charpoly", "p"]], "fq_default_mat_clear": [[38, 1, 1, "c.fq_default_mat_clear", "ctx"], [38, 1, 1, "c.fq_default_mat_clear", "mat"]], "fq_default_mat_concat_horizontal": [[38, 1, 1, "c.fq_default_mat_concat_horizontal", "ctx"], [38, 1, 1, "c.fq_default_mat_concat_horizontal", "mat1"], [38, 1, 1, "c.fq_default_mat_concat_horizontal", "mat2"], [38, 1, 1, "c.fq_default_mat_concat_horizontal", "res"]], "fq_default_mat_concat_vertical": [[38, 1, 1, "c.fq_default_mat_concat_vertical", "ctx"], [38, 1, 1, "c.fq_default_mat_concat_vertical", "mat1"], [38, 1, 1, "c.fq_default_mat_concat_vertical", "mat2"], [38, 1, 1, "c.fq_default_mat_concat_vertical", "res"]], "fq_default_mat_entry": [[38, 1, 1, "c.fq_default_mat_entry", "i"], [38, 1, 1, "c.fq_default_mat_entry", "j"], [38, 1, 1, "c.fq_default_mat_entry", "mat"], [38, 1, 1, "c.fq_default_mat_entry", "val"]], "fq_default_mat_entry_set": [[38, 1, 1, "c.fq_default_mat_entry_set", "ctx"], [38, 1, 1, "c.fq_default_mat_entry_set", "i"], [38, 1, 1, "c.fq_default_mat_entry_set", "j"], [38, 1, 1, "c.fq_default_mat_entry_set", "mat"], [38, 1, 1, "c.fq_default_mat_entry_set", "x"]], "fq_default_mat_entry_set_fmpz": [[38, 1, 1, "c.fq_default_mat_entry_set_fmpz", "ctx"], [38, 1, 1, "c.fq_default_mat_entry_set_fmpz", "i"], [38, 1, 1, "c.fq_default_mat_entry_set_fmpz", "j"], [38, 1, 1, "c.fq_default_mat_entry_set_fmpz", "mat"], [38, 1, 1, "c.fq_default_mat_entry_set_fmpz", "x"]], "fq_default_mat_equal": [[38, 1, 1, "c.fq_default_mat_equal", "ctx"], [38, 1, 1, "c.fq_default_mat_equal", "mat1"], [38, 1, 1, "c.fq_default_mat_equal", "mat2"]], "fq_default_mat_fprint": [[38, 1, 1, "c.fq_default_mat_fprint", "ctx"], [38, 1, 1, "c.fq_default_mat_fprint", "file"], [38, 1, 1, "c.fq_default_mat_fprint", "mat"]], "fq_default_mat_fprint_pretty": [[38, 1, 1, "c.fq_default_mat_fprint_pretty", "ctx"], [38, 1, 1, "c.fq_default_mat_fprint_pretty", "file"], [38, 1, 1, "c.fq_default_mat_fprint_pretty", "mat"]], "fq_default_mat_init": [[38, 1, 1, "c.fq_default_mat_init", "cols"], [38, 1, 1, "c.fq_default_mat_init", "ctx"], [38, 1, 1, "c.fq_default_mat_init", "mat"], [38, 1, 1, "c.fq_default_mat_init", "rows"]], "fq_default_mat_init_set": [[38, 1, 1, "c.fq_default_mat_init_set", "ctx"], [38, 1, 1, "c.fq_default_mat_init_set", "mat"], [38, 1, 1, "c.fq_default_mat_init_set", "src"]], "fq_default_mat_inv": [[38, 1, 1, "c.fq_default_mat_inv", "A"], [38, 1, 1, "c.fq_default_mat_inv", "B"], [38, 1, 1, "c.fq_default_mat_inv", "ctx"]], "fq_default_mat_invert_cols": [[38, 1, 1, "c.fq_default_mat_invert_cols", "mat"], [38, 1, 1, "c.fq_default_mat_invert_cols", "perm"]], "fq_default_mat_invert_rows": [[38, 1, 1, "c.fq_default_mat_invert_rows", "mat"], [38, 1, 1, "c.fq_default_mat_invert_rows", "perm"]], "fq_default_mat_is_empty": [[38, 1, 1, "c.fq_default_mat_is_empty", "ctx"], [38, 1, 1, "c.fq_default_mat_is_empty", "mat"]], "fq_default_mat_is_one": [[38, 1, 1, "c.fq_default_mat_is_one", "ctx"], [38, 1, 1, "c.fq_default_mat_is_one", "mat"]], "fq_default_mat_is_square": [[38, 1, 1, "c.fq_default_mat_is_square", "ctx"], [38, 1, 1, "c.fq_default_mat_is_square", "mat"]], "fq_default_mat_is_zero": [[38, 1, 1, "c.fq_default_mat_is_zero", "ctx"], [38, 1, 1, "c.fq_default_mat_is_zero", "mat"]], "fq_default_mat_lu": [[38, 1, 1, "c.fq_default_mat_lu", "A"], [38, 1, 1, "c.fq_default_mat_lu", "P"], [38, 1, 1, "c.fq_default_mat_lu", "ctx"], [38, 1, 1, "c.fq_default_mat_lu", "rank_check"]], "fq_default_mat_minpoly": [[38, 1, 1, "c.fq_default_mat_minpoly", "M"], [38, 1, 1, "c.fq_default_mat_minpoly", "ctx"], [38, 1, 1, "c.fq_default_mat_minpoly", "p"]], "fq_default_mat_mul": [[38, 1, 1, "c.fq_default_mat_mul", "A"], [38, 1, 1, "c.fq_default_mat_mul", "B"], [38, 1, 1, "c.fq_default_mat_mul", "C"], [38, 1, 1, "c.fq_default_mat_mul", "ctx"]], "fq_default_mat_ncols": [[38, 1, 1, "c.fq_default_mat_ncols", "ctx"], [38, 1, 1, "c.fq_default_mat_ncols", "mat"]], "fq_default_mat_neg": [[38, 1, 1, "c.fq_default_mat_neg", "A"], [38, 1, 1, "c.fq_default_mat_neg", "B"], [38, 1, 1, "c.fq_default_mat_neg", "ctx"]], "fq_default_mat_nrows": [[38, 1, 1, "c.fq_default_mat_nrows", "ctx"], [38, 1, 1, "c.fq_default_mat_nrows", "mat"]], "fq_default_mat_one": [[38, 1, 1, "c.fq_default_mat_one", "ctx"], [38, 1, 1, "c.fq_default_mat_one", "mat"]], "fq_default_mat_print": [[38, 1, 1, "c.fq_default_mat_print", "ctx"], [38, 1, 1, "c.fq_default_mat_print", "mat"]], "fq_default_mat_print_pretty": [[38, 1, 1, "c.fq_default_mat_print_pretty", "ctx"], [38, 1, 1, "c.fq_default_mat_print_pretty", "mat"]], "fq_default_mat_randops": [[38, 1, 1, "c.fq_default_mat_randops", "count"], [38, 1, 1, "c.fq_default_mat_randops", "ctx"], [38, 1, 1, "c.fq_default_mat_randops", "mat"], [38, 1, 1, "c.fq_default_mat_randops", "state"]], "fq_default_mat_randrank": [[38, 1, 1, "c.fq_default_mat_randrank", "ctx"], [38, 1, 1, "c.fq_default_mat_randrank", "mat"], [38, 1, 1, "c.fq_default_mat_randrank", "rank"], [38, 1, 1, "c.fq_default_mat_randrank", "state"]], "fq_default_mat_randtest": [[38, 1, 1, "c.fq_default_mat_randtest", "ctx"], [38, 1, 1, "c.fq_default_mat_randtest", "mat"], [38, 1, 1, "c.fq_default_mat_randtest", "state"]], "fq_default_mat_randtril": [[38, 1, 1, "c.fq_default_mat_randtril", "ctx"], [38, 1, 1, "c.fq_default_mat_randtril", "mat"], [38, 1, 1, "c.fq_default_mat_randtril", "state"], [38, 1, 1, "c.fq_default_mat_randtril", "unit"]], "fq_default_mat_randtriu": [[38, 1, 1, "c.fq_default_mat_randtriu", "ctx"], [38, 1, 1, "c.fq_default_mat_randtriu", "mat"], [38, 1, 1, "c.fq_default_mat_randtriu", "state"], [38, 1, 1, "c.fq_default_mat_randtriu", "unit"]], "fq_default_mat_rref": [[38, 1, 1, "c.fq_default_mat_rref", "A"], [38, 1, 1, "c.fq_default_mat_rref", "ctx"]], "fq_default_mat_set": [[38, 1, 1, "c.fq_default_mat_set", "ctx"], [38, 1, 1, "c.fq_default_mat_set", "mat"], [38, 1, 1, "c.fq_default_mat_set", "src"]], "fq_default_mat_set_fmpz_mat": [[38, 1, 1, "c.fq_default_mat_set_fmpz_mat", "ctx"], [38, 1, 1, "c.fq_default_mat_set_fmpz_mat", "mat1"], [38, 1, 1, "c.fq_default_mat_set_fmpz_mat", "mat2"]], "fq_default_mat_set_fmpz_mod_mat": [[38, 1, 1, "c.fq_default_mat_set_fmpz_mod_mat", "ctx"], [38, 1, 1, "c.fq_default_mat_set_fmpz_mod_mat", "mat1"], [38, 1, 1, "c.fq_default_mat_set_fmpz_mod_mat", "mat2"]], "fq_default_mat_set_nmod_mat": [[38, 1, 1, "c.fq_default_mat_set_nmod_mat", "ctx"], [38, 1, 1, "c.fq_default_mat_set_nmod_mat", "mat1"], [38, 1, 1, "c.fq_default_mat_set_nmod_mat", "mat2"]], "fq_default_mat_similarity": [[38, 1, 1, "c.fq_default_mat_similarity", "M"], [38, 1, 1, "c.fq_default_mat_similarity", "ctx"], [38, 1, 1, "c.fq_default_mat_similarity", "d"], [38, 1, 1, "c.fq_default_mat_similarity", "r"]], "fq_default_mat_solve": [[38, 1, 1, "c.fq_default_mat_solve", "A"], [38, 1, 1, "c.fq_default_mat_solve", "B"], [38, 1, 1, "c.fq_default_mat_solve", "X"], [38, 1, 1, "c.fq_default_mat_solve", "ctx"]], "fq_default_mat_solve_tril": [[38, 1, 1, "c.fq_default_mat_solve_tril", "B"], [38, 1, 1, "c.fq_default_mat_solve_tril", "L"], [38, 1, 1, "c.fq_default_mat_solve_tril", "X"], [38, 1, 1, "c.fq_default_mat_solve_tril", "ctx"], [38, 1, 1, "c.fq_default_mat_solve_tril", "unit"]], "fq_default_mat_solve_triu": [[38, 1, 1, "c.fq_default_mat_solve_triu", "B"], [38, 1, 1, "c.fq_default_mat_solve_triu", "U"], [38, 1, 1, "c.fq_default_mat_solve_triu", "X"], [38, 1, 1, "c.fq_default_mat_solve_triu", "ctx"], [38, 1, 1, "c.fq_default_mat_solve_triu", "unit"]], "fq_default_mat_sub": [[38, 1, 1, "c.fq_default_mat_sub", "A"], [38, 1, 1, "c.fq_default_mat_sub", "B"], [38, 1, 1, "c.fq_default_mat_sub", "C"], [38, 1, 1, "c.fq_default_mat_sub", "ctx"]], "fq_default_mat_submul": [[38, 1, 1, "c.fq_default_mat_submul", "A"], [38, 1, 1, "c.fq_default_mat_submul", "B"], [38, 1, 1, "c.fq_default_mat_submul", "C"], [38, 1, 1, "c.fq_default_mat_submul", "D"], [38, 1, 1, "c.fq_default_mat_submul", "ctx"]], "fq_default_mat_swap": [[38, 1, 1, "c.fq_default_mat_swap", "ctx"], [38, 1, 1, "c.fq_default_mat_swap", "mat1"], [38, 1, 1, "c.fq_default_mat_swap", "mat2"]], "fq_default_mat_swap_cols": [[38, 1, 1, "c.fq_default_mat_swap_cols", "mat"], [38, 1, 1, "c.fq_default_mat_swap_cols", "perm"], [38, 1, 1, "c.fq_default_mat_swap_cols", "r"], [38, 1, 1, "c.fq_default_mat_swap_cols", "s"]], "fq_default_mat_swap_rows": [[38, 1, 1, "c.fq_default_mat_swap_rows", "mat"], [38, 1, 1, "c.fq_default_mat_swap_rows", "perm"], [38, 1, 1, "c.fq_default_mat_swap_rows", "r"], [38, 1, 1, "c.fq_default_mat_swap_rows", "s"]], "fq_default_mat_window_clear": [[38, 1, 1, "c.fq_default_mat_window_clear", "ctx"], [38, 1, 1, "c.fq_default_mat_window_clear", "window"]], "fq_default_mat_window_init": [[38, 1, 1, "c.fq_default_mat_window_init", "c1"], [38, 1, 1, "c.fq_default_mat_window_init", "c2"], [38, 1, 1, "c.fq_default_mat_window_init", "ctx"], [38, 1, 1, "c.fq_default_mat_window_init", "mat"], [38, 1, 1, "c.fq_default_mat_window_init", "r1"], [38, 1, 1, "c.fq_default_mat_window_init", "r2"], [38, 1, 1, "c.fq_default_mat_window_init", "window"]], "fq_default_mat_zero": [[38, 1, 1, "c.fq_default_mat_zero", "ctx"], [38, 1, 1, "c.fq_default_mat_zero", "mat"]], "fq_default_mul": [[37, 1, 1, "c.fq_default_mul", "ctx"], [37, 1, 1, "c.fq_default_mul", "op1"], [37, 1, 1, "c.fq_default_mul", "op2"], [37, 1, 1, "c.fq_default_mul", "rop"]], "fq_default_mul_fmpz": [[37, 1, 1, "c.fq_default_mul_fmpz", "ctx"], [37, 1, 1, "c.fq_default_mul_fmpz", "op"], [37, 1, 1, "c.fq_default_mul_fmpz", "rop"], [37, 1, 1, "c.fq_default_mul_fmpz", "x"]], "fq_default_mul_si": [[37, 1, 1, "c.fq_default_mul_si", "ctx"], [37, 1, 1, "c.fq_default_mul_si", "op"], [37, 1, 1, "c.fq_default_mul_si", "rop"], [37, 1, 1, "c.fq_default_mul_si", "x"]], "fq_default_mul_ui": [[37, 1, 1, "c.fq_default_mul_ui", "ctx"], [37, 1, 1, "c.fq_default_mul_ui", "op"], [37, 1, 1, "c.fq_default_mul_ui", "rop"], [37, 1, 1, "c.fq_default_mul_ui", "x"]], "fq_default_neg": [[37, 1, 1, "c.fq_default_neg", "ctx"], [37, 1, 1, "c.fq_default_neg", "op"], [37, 1, 1, "c.fq_default_neg", "rop"]], "fq_default_norm": [[37, 1, 1, "c.fq_default_norm", "ctx"], [37, 1, 1, "c.fq_default_norm", "op"], [37, 1, 1, "c.fq_default_norm", "rop"]], "fq_default_one": [[37, 1, 1, "c.fq_default_one", "ctx"], [37, 1, 1, "c.fq_default_one", "rop"]], "fq_default_poly_add": [[39, 1, 1, "c.fq_default_poly_add", "ctx"], [39, 1, 1, "c.fq_default_poly_add", "poly1"], [39, 1, 1, "c.fq_default_poly_add", "poly2"], [39, 1, 1, "c.fq_default_poly_add", "res"]], "fq_default_poly_add_series": [[39, 1, 1, "c.fq_default_poly_add_series", "ctx"], [39, 1, 1, "c.fq_default_poly_add_series", "n"], [39, 1, 1, "c.fq_default_poly_add_series", "poly1"], [39, 1, 1, "c.fq_default_poly_add_series", "poly2"], [39, 1, 1, "c.fq_default_poly_add_series", "res"]], "fq_default_poly_add_si": [[39, 1, 1, "c.fq_default_poly_add_si", "c"], [39, 1, 1, "c.fq_default_poly_add_si", "ctx"], [39, 1, 1, "c.fq_default_poly_add_si", "poly1"], [39, 1, 1, "c.fq_default_poly_add_si", "res"]], "fq_default_poly_clear": [[39, 1, 1, "c.fq_default_poly_clear", "ctx"], [39, 1, 1, "c.fq_default_poly_clear", "poly"]], "fq_default_poly_compose": [[39, 1, 1, "c.fq_default_poly_compose", "ctx"], [39, 1, 1, "c.fq_default_poly_compose", "op1"], [39, 1, 1, "c.fq_default_poly_compose", "op2"], [39, 1, 1, "c.fq_default_poly_compose", "rop"]], "fq_default_poly_compose_mod": [[39, 1, 1, "c.fq_default_poly_compose_mod", "ctx"], [39, 1, 1, "c.fq_default_poly_compose_mod", "f"], [39, 1, 1, "c.fq_default_poly_compose_mod", "g"], [39, 1, 1, "c.fq_default_poly_compose_mod", "h"], [39, 1, 1, "c.fq_default_poly_compose_mod", "res"]], "fq_default_poly_deflate": [[39, 1, 1, "c.fq_default_poly_deflate", "ctx"], [39, 1, 1, "c.fq_default_poly_deflate", "deflation"], [39, 1, 1, "c.fq_default_poly_deflate", "input"], [39, 1, 1, "c.fq_default_poly_deflate", "result"]], "fq_default_poly_deflation": [[39, 1, 1, "c.fq_default_poly_deflation", "ctx"], [39, 1, 1, "c.fq_default_poly_deflation", "input"]], "fq_default_poly_degree": [[39, 1, 1, "c.fq_default_poly_degree", "ctx"], [39, 1, 1, "c.fq_default_poly_degree", "poly"]], "fq_default_poly_derivative": [[39, 1, 1, "c.fq_default_poly_derivative", "ctx"], [39, 1, 1, "c.fq_default_poly_derivative", "op"], [39, 1, 1, "c.fq_default_poly_derivative", "rop"]], "fq_default_poly_div_series": [[39, 1, 1, "c.fq_default_poly_div_series", "A"], [39, 1, 1, "c.fq_default_poly_div_series", "B"], [39, 1, 1, "c.fq_default_poly_div_series", "Q"], [39, 1, 1, "c.fq_default_poly_div_series", "ctx"], [39, 1, 1, "c.fq_default_poly_div_series", "n"]], "fq_default_poly_divides": [[39, 1, 1, "c.fq_default_poly_divides", "A"], [39, 1, 1, "c.fq_default_poly_divides", "B"], [39, 1, 1, "c.fq_default_poly_divides", "Q"], [39, 1, 1, "c.fq_default_poly_divides", "ctx"]], "fq_default_poly_divrem": [[39, 1, 1, "c.fq_default_poly_divrem", "A"], [39, 1, 1, "c.fq_default_poly_divrem", "B"], [39, 1, 1, "c.fq_default_poly_divrem", "Q"], [39, 1, 1, "c.fq_default_poly_divrem", "R"], [39, 1, 1, "c.fq_default_poly_divrem", "ctx"]], "fq_default_poly_equal": [[39, 1, 1, "c.fq_default_poly_equal", "ctx"], [39, 1, 1, "c.fq_default_poly_equal", "poly1"], [39, 1, 1, "c.fq_default_poly_equal", "poly2"]], "fq_default_poly_equal_fq_default": [[39, 1, 1, "c.fq_default_poly_equal_fq_default", "c"], [39, 1, 1, "c.fq_default_poly_equal_fq_default", "ctx"], [39, 1, 1, "c.fq_default_poly_equal_fq_default", "poly"]], "fq_default_poly_equal_trunc": [[39, 1, 1, "c.fq_default_poly_equal_trunc", "ctx"], [39, 1, 1, "c.fq_default_poly_equal_trunc", "n"], [39, 1, 1, "c.fq_default_poly_equal_trunc", "poly1"], [39, 1, 1, "c.fq_default_poly_equal_trunc", "poly2"]], "fq_default_poly_evaluate_fq_default": [[39, 1, 1, "c.fq_default_poly_evaluate_fq_default", "a"], [39, 1, 1, "c.fq_default_poly_evaluate_fq_default", "ctx"], [39, 1, 1, "c.fq_default_poly_evaluate_fq_default", "f"], [39, 1, 1, "c.fq_default_poly_evaluate_fq_default", "rop"]], "fq_default_poly_factor": [[40, 1, 1, "c.fq_default_poly_factor", "ctx"], [40, 1, 1, "c.fq_default_poly_factor", "f"], [40, 1, 1, "c.fq_default_poly_factor", "lead"], [40, 1, 1, "c.fq_default_poly_factor", "res"]], "fq_default_poly_factor_clear": [[40, 1, 1, "c.fq_default_poly_factor_clear", "ctx"], [40, 1, 1, "c.fq_default_poly_factor_clear", "fac"]], "fq_default_poly_factor_concat": [[40, 1, 1, "c.fq_default_poly_factor_concat", "ctx"], [40, 1, 1, "c.fq_default_poly_factor_concat", "fac"], [40, 1, 1, "c.fq_default_poly_factor_concat", "res"]], "fq_default_poly_factor_distinct_deg": [[40, 1, 1, "c.fq_default_poly_factor_distinct_deg", "ctx"], [40, 1, 1, "c.fq_default_poly_factor_distinct_deg", "degs"], [40, 1, 1, "c.fq_default_poly_factor_distinct_deg", "poly"], [40, 1, 1, "c.fq_default_poly_factor_distinct_deg", "res"]], "fq_default_poly_factor_equal_deg": [[40, 1, 1, "c.fq_default_poly_factor_equal_deg", "ctx"], [40, 1, 1, "c.fq_default_poly_factor_equal_deg", "d"], [40, 1, 1, "c.fq_default_poly_factor_equal_deg", "factors"], [40, 1, 1, "c.fq_default_poly_factor_equal_deg", "pol"]], "fq_default_poly_factor_exp": [[40, 1, 1, "c.fq_default_poly_factor_exp", "ctx"], [40, 1, 1, "c.fq_default_poly_factor_exp", "fac"], [40, 1, 1, "c.fq_default_poly_factor_exp", "i"]], "fq_default_poly_factor_fit_length": [[40, 1, 1, "c.fq_default_poly_factor_fit_length", "ctx"], [40, 1, 1, "c.fq_default_poly_factor_fit_length", "fac"], [40, 1, 1, "c.fq_default_poly_factor_fit_length", "len"]], "fq_default_poly_factor_get_poly": [[40, 1, 1, "c.fq_default_poly_factor_get_poly", "ctx"], [40, 1, 1, "c.fq_default_poly_factor_get_poly", "fac"], [40, 1, 1, "c.fq_default_poly_factor_get_poly", "i"], [40, 1, 1, "c.fq_default_poly_factor_get_poly", "poly"]], "fq_default_poly_factor_init": [[40, 1, 1, "c.fq_default_poly_factor_init", "ctx"], [40, 1, 1, "c.fq_default_poly_factor_init", "fac"]], "fq_default_poly_factor_insert": [[40, 1, 1, "c.fq_default_poly_factor_insert", "ctx"], [40, 1, 1, "c.fq_default_poly_factor_insert", "exp"], [40, 1, 1, "c.fq_default_poly_factor_insert", "fac"], [40, 1, 1, "c.fq_default_poly_factor_insert", "poly"]], "fq_default_poly_factor_length": [[40, 1, 1, "c.fq_default_poly_factor_length", "ctx"], [40, 1, 1, "c.fq_default_poly_factor_length", "fac"]], "fq_default_poly_factor_pow": [[40, 1, 1, "c.fq_default_poly_factor_pow", "ctx"], [40, 1, 1, "c.fq_default_poly_factor_pow", "exp"], [40, 1, 1, "c.fq_default_poly_factor_pow", "fac"]], "fq_default_poly_factor_print": [[40, 1, 1, "c.fq_default_poly_factor_print", "ctx"], [40, 1, 1, "c.fq_default_poly_factor_print", "fac"]], "fq_default_poly_factor_print_pretty": [[40, 1, 1, "c.fq_default_poly_factor_print_pretty", "ctx"], [40, 1, 1, "c.fq_default_poly_factor_print_pretty", "fac"]], "fq_default_poly_factor_realloc": [[40, 1, 1, "c.fq_default_poly_factor_realloc", "alloc"], [40, 1, 1, "c.fq_default_poly_factor_realloc", "ctx"], [40, 1, 1, "c.fq_default_poly_factor_realloc", "fac"]], "fq_default_poly_factor_set": [[40, 1, 1, "c.fq_default_poly_factor_set", "ctx"], [40, 1, 1, "c.fq_default_poly_factor_set", "fac"], [40, 1, 1, "c.fq_default_poly_factor_set", "res"]], "fq_default_poly_factor_split_single": [[40, 1, 1, "c.fq_default_poly_factor_split_single", "ctx"], [40, 1, 1, "c.fq_default_poly_factor_split_single", "input"], [40, 1, 1, "c.fq_default_poly_factor_split_single", "linfactor"]], "fq_default_poly_factor_squarefree": [[40, 1, 1, "c.fq_default_poly_factor_squarefree", "ctx"], [40, 1, 1, "c.fq_default_poly_factor_squarefree", "f"], [40, 1, 1, "c.fq_default_poly_factor_squarefree", "res"]], "fq_default_poly_fit_length": [[39, 1, 1, "c.fq_default_poly_fit_length", "ctx"], [39, 1, 1, "c.fq_default_poly_fit_length", "len"], [39, 1, 1, "c.fq_default_poly_fit_length", "poly"]], "fq_default_poly_fprint": [[39, 1, 1, "c.fq_default_poly_fprint", "ctx"], [39, 1, 1, "c.fq_default_poly_fprint", "file"], [39, 1, 1, "c.fq_default_poly_fprint", "poly"]], "fq_default_poly_fprint_pretty": [[39, 1, 1, "c.fq_default_poly_fprint_pretty", "ctx"], [39, 1, 1, "c.fq_default_poly_fprint_pretty", "file"], [39, 1, 1, "c.fq_default_poly_fprint_pretty", "poly"], [39, 1, 1, "c.fq_default_poly_fprint_pretty", "x"]], "fq_default_poly_gcd": [[39, 1, 1, "c.fq_default_poly_gcd", "ctx"], [39, 1, 1, "c.fq_default_poly_gcd", "op1"], [39, 1, 1, "c.fq_default_poly_gcd", "op2"], [39, 1, 1, "c.fq_default_poly_gcd", "rop"]], "fq_default_poly_gen": [[39, 1, 1, "c.fq_default_poly_gen", "ctx"], [39, 1, 1, "c.fq_default_poly_gen", "poly"]], "fq_default_poly_get_coeff": [[39, 1, 1, "c.fq_default_poly_get_coeff", "ctx"], [39, 1, 1, "c.fq_default_poly_get_coeff", "n"], [39, 1, 1, "c.fq_default_poly_get_coeff", "poly"], [39, 1, 1, "c.fq_default_poly_get_coeff", "x"]], "fq_default_poly_get_str": [[39, 1, 1, "c.fq_default_poly_get_str", "ctx"], [39, 1, 1, "c.fq_default_poly_get_str", "poly"]], "fq_default_poly_get_str_pretty": [[39, 1, 1, "c.fq_default_poly_get_str_pretty", "ctx"], [39, 1, 1, "c.fq_default_poly_get_str_pretty", "poly"], [39, 1, 1, "c.fq_default_poly_get_str_pretty", "x"]], "fq_default_poly_hamming_weight": [[39, 1, 1, "c.fq_default_poly_hamming_weight", "ctx"], [39, 1, 1, "c.fq_default_poly_hamming_weight", "op"]], "fq_default_poly_inflate": [[39, 1, 1, "c.fq_default_poly_inflate", "ctx"], [39, 1, 1, "c.fq_default_poly_inflate", "inflation"], [39, 1, 1, "c.fq_default_poly_inflate", "input"], [39, 1, 1, "c.fq_default_poly_inflate", "result"]], "fq_default_poly_init": [[39, 1, 1, "c.fq_default_poly_init", "ctx"], [39, 1, 1, "c.fq_default_poly_init", "poly"]], "fq_default_poly_init2": [[39, 1, 1, "c.fq_default_poly_init2", "alloc"], [39, 1, 1, "c.fq_default_poly_init2", "ctx"], [39, 1, 1, "c.fq_default_poly_init2", "poly"]], "fq_default_poly_inv_series": [[39, 1, 1, "c.fq_default_poly_inv_series", "Q"], [39, 1, 1, "c.fq_default_poly_inv_series", "Qinv"], [39, 1, 1, "c.fq_default_poly_inv_series", "ctx"], [39, 1, 1, "c.fq_default_poly_inv_series", "n"]], "fq_default_poly_invsqrt_series": [[39, 1, 1, "c.fq_default_poly_invsqrt_series", "ctx"], [39, 1, 1, "c.fq_default_poly_invsqrt_series", "g"], [39, 1, 1, "c.fq_default_poly_invsqrt_series", "h"], [39, 1, 1, "c.fq_default_poly_invsqrt_series", "n"]], "fq_default_poly_is_gen": [[39, 1, 1, "c.fq_default_poly_is_gen", "ctx"], [39, 1, 1, "c.fq_default_poly_is_gen", "op"]], "fq_default_poly_is_irreducible": [[40, 1, 1, "c.fq_default_poly_is_irreducible", "ctx"], [40, 1, 1, "c.fq_default_poly_is_irreducible", "f"]], "fq_default_poly_is_one": [[39, 1, 1, "c.fq_default_poly_is_one", "op"]], "fq_default_poly_is_squarefree": [[40, 1, 1, "c.fq_default_poly_is_squarefree", "ctx"], [40, 1, 1, "c.fq_default_poly_is_squarefree", "f"]], "fq_default_poly_is_unit": [[39, 1, 1, "c.fq_default_poly_is_unit", "ctx"], [39, 1, 1, "c.fq_default_poly_is_unit", "op"]], "fq_default_poly_is_zero": [[39, 1, 1, "c.fq_default_poly_is_zero", "ctx"], [39, 1, 1, "c.fq_default_poly_is_zero", "poly"]], "fq_default_poly_length": [[39, 1, 1, "c.fq_default_poly_length", "ctx"], [39, 1, 1, "c.fq_default_poly_length", "poly"]], "fq_default_poly_make_monic": [[39, 1, 1, "c.fq_default_poly_make_monic", "ctx"], [39, 1, 1, "c.fq_default_poly_make_monic", "op"], [39, 1, 1, "c.fq_default_poly_make_monic", "rop"]], "fq_default_poly_mul": [[39, 1, 1, "c.fq_default_poly_mul", "ctx"], [39, 1, 1, "c.fq_default_poly_mul", "op1"], [39, 1, 1, "c.fq_default_poly_mul", "op2"], [39, 1, 1, "c.fq_default_poly_mul", "rop"]], "fq_default_poly_mulhigh": [[39, 1, 1, "c.fq_default_poly_mulhigh", "ctx"], [39, 1, 1, "c.fq_default_poly_mulhigh", "poly1"], [39, 1, 1, "c.fq_default_poly_mulhigh", "poly2"], [39, 1, 1, "c.fq_default_poly_mulhigh", "res"], [39, 1, 1, "c.fq_default_poly_mulhigh", "start"]], "fq_default_poly_mullow": [[39, 1, 1, "c.fq_default_poly_mullow", "ctx"], [39, 1, 1, "c.fq_default_poly_mullow", "n"], [39, 1, 1, "c.fq_default_poly_mullow", "op1"], [39, 1, 1, "c.fq_default_poly_mullow", "op2"], [39, 1, 1, "c.fq_default_poly_mullow", "rop"]], "fq_default_poly_mulmod": [[39, 1, 1, "c.fq_default_poly_mulmod", "ctx"], [39, 1, 1, "c.fq_default_poly_mulmod", "f"], [39, 1, 1, "c.fq_default_poly_mulmod", "poly1"], [39, 1, 1, "c.fq_default_poly_mulmod", "poly2"], [39, 1, 1, "c.fq_default_poly_mulmod", "res"]], "fq_default_poly_neg": [[39, 1, 1, "c.fq_default_poly_neg", "ctx"], [39, 1, 1, "c.fq_default_poly_neg", "poly"], [39, 1, 1, "c.fq_default_poly_neg", "res"]], "fq_default_poly_one": [[39, 1, 1, "c.fq_default_poly_one", "ctx"], [39, 1, 1, "c.fq_default_poly_one", "poly"]], "fq_default_poly_pow": [[39, 1, 1, "c.fq_default_poly_pow", "ctx"], [39, 1, 1, "c.fq_default_poly_pow", "e"], [39, 1, 1, "c.fq_default_poly_pow", "op"], [39, 1, 1, "c.fq_default_poly_pow", "rop"]], "fq_default_poly_pow_trunc": [[39, 1, 1, "c.fq_default_poly_pow_trunc", "ctx"], [39, 1, 1, "c.fq_default_poly_pow_trunc", "e"], [39, 1, 1, "c.fq_default_poly_pow_trunc", "poly"], [39, 1, 1, "c.fq_default_poly_pow_trunc", "res"], [39, 1, 1, "c.fq_default_poly_pow_trunc", "trunc"]], "fq_default_poly_powmod_fmpz_binexp": [[39, 1, 1, "c.fq_default_poly_powmod_fmpz_binexp", "ctx"], [39, 1, 1, "c.fq_default_poly_powmod_fmpz_binexp", "e"], [39, 1, 1, "c.fq_default_poly_powmod_fmpz_binexp", "f"], [39, 1, 1, "c.fq_default_poly_powmod_fmpz_binexp", "poly"], [39, 1, 1, "c.fq_default_poly_powmod_fmpz_binexp", "res"]], "fq_default_poly_powmod_ui_binexp": [[39, 1, 1, "c.fq_default_poly_powmod_ui_binexp", "ctx"], [39, 1, 1, "c.fq_default_poly_powmod_ui_binexp", "e"], [39, 1, 1, "c.fq_default_poly_powmod_ui_binexp", "f"], [39, 1, 1, "c.fq_default_poly_powmod_ui_binexp", "poly"], [39, 1, 1, "c.fq_default_poly_powmod_ui_binexp", "res"]], "fq_default_poly_print": [[39, 1, 1, "c.fq_default_poly_print", "ctx"], [39, 1, 1, "c.fq_default_poly_print", "poly"]], "fq_default_poly_print_pretty": [[39, 1, 1, "c.fq_default_poly_print_pretty", "ctx"], [39, 1, 1, "c.fq_default_poly_print_pretty", "poly"], [39, 1, 1, "c.fq_default_poly_print_pretty", "x"]], "fq_default_poly_randtest": [[39, 1, 1, "c.fq_default_poly_randtest", "ctx"], [39, 1, 1, "c.fq_default_poly_randtest", "f"], [39, 1, 1, "c.fq_default_poly_randtest", "len"], [39, 1, 1, "c.fq_default_poly_randtest", "state"]], "fq_default_poly_randtest_irreducible": [[39, 1, 1, "c.fq_default_poly_randtest_irreducible", "ctx"], [39, 1, 1, "c.fq_default_poly_randtest_irreducible", "f"], [39, 1, 1, "c.fq_default_poly_randtest_irreducible", "len"], [39, 1, 1, "c.fq_default_poly_randtest_irreducible", "state"]], "fq_default_poly_randtest_monic": [[39, 1, 1, "c.fq_default_poly_randtest_monic", "ctx"], [39, 1, 1, "c.fq_default_poly_randtest_monic", "f"], [39, 1, 1, "c.fq_default_poly_randtest_monic", "len"], [39, 1, 1, "c.fq_default_poly_randtest_monic", "state"]], "fq_default_poly_randtest_not_zero": [[39, 1, 1, "c.fq_default_poly_randtest_not_zero", "ctx"], [39, 1, 1, "c.fq_default_poly_randtest_not_zero", "f"], [39, 1, 1, "c.fq_default_poly_randtest_not_zero", "len"], [39, 1, 1, "c.fq_default_poly_randtest_not_zero", "state"]], "fq_default_poly_realloc": [[39, 1, 1, "c.fq_default_poly_realloc", "alloc"], [39, 1, 1, "c.fq_default_poly_realloc", "ctx"], [39, 1, 1, "c.fq_default_poly_realloc", "poly"]], "fq_default_poly_rem": [[39, 1, 1, "c.fq_default_poly_rem", "A"], [39, 1, 1, "c.fq_default_poly_rem", "B"], [39, 1, 1, "c.fq_default_poly_rem", "R"], [39, 1, 1, "c.fq_default_poly_rem", "ctx"]], "fq_default_poly_remove": [[40, 1, 1, "c.fq_default_poly_remove", "ctx"], [40, 1, 1, "c.fq_default_poly_remove", "f"], [40, 1, 1, "c.fq_default_poly_remove", "p"]], "fq_default_poly_reverse": [[39, 1, 1, "c.fq_default_poly_reverse", "ctx"], [39, 1, 1, "c.fq_default_poly_reverse", "input"], [39, 1, 1, "c.fq_default_poly_reverse", "m"], [39, 1, 1, "c.fq_default_poly_reverse", "output"]], "fq_default_poly_roots": [[40, 1, 1, "c.fq_default_poly_roots", "ctx"], [40, 1, 1, "c.fq_default_poly_roots", "f"], [40, 1, 1, "c.fq_default_poly_roots", "r"], [40, 1, 1, "c.fq_default_poly_roots", "with_multiplicity"]], "fq_default_poly_scalar_addmul_fq_default": [[39, 1, 1, "c.fq_default_poly_scalar_addmul_fq_default", "ctx"], [39, 1, 1, "c.fq_default_poly_scalar_addmul_fq_default", "op"], [39, 1, 1, "c.fq_default_poly_scalar_addmul_fq_default", "rop"], [39, 1, 1, "c.fq_default_poly_scalar_addmul_fq_default", "x"]], "fq_default_poly_scalar_div_fq_default": [[39, 1, 1, "c.fq_default_poly_scalar_div_fq_default", "ctx"], [39, 1, 1, "c.fq_default_poly_scalar_div_fq_default", "op"], [39, 1, 1, "c.fq_default_poly_scalar_div_fq_default", "rop"], [39, 1, 1, "c.fq_default_poly_scalar_div_fq_default", "x"]], "fq_default_poly_scalar_mul_fq_default": [[39, 1, 1, "c.fq_default_poly_scalar_mul_fq_default", "ctx"], [39, 1, 1, "c.fq_default_poly_scalar_mul_fq_default", "op"], [39, 1, 1, "c.fq_default_poly_scalar_mul_fq_default", "rop"], [39, 1, 1, "c.fq_default_poly_scalar_mul_fq_default", "x"]], "fq_default_poly_scalar_submul_fq_default": [[39, 1, 1, "c.fq_default_poly_scalar_submul_fq_default", "ctx"], [39, 1, 1, "c.fq_default_poly_scalar_submul_fq_default", "op"], [39, 1, 1, "c.fq_default_poly_scalar_submul_fq_default", "rop"], [39, 1, 1, "c.fq_default_poly_scalar_submul_fq_default", "x"]], "fq_default_poly_set": [[39, 1, 1, "c.fq_default_poly_set", "ctx"], [39, 1, 1, "c.fq_default_poly_set", "poly1"], [39, 1, 1, "c.fq_default_poly_set", "poly2"]], "fq_default_poly_set_coeff": [[39, 1, 1, "c.fq_default_poly_set_coeff", "ctx"], [39, 1, 1, "c.fq_default_poly_set_coeff", "n"], [39, 1, 1, "c.fq_default_poly_set_coeff", "poly"], [39, 1, 1, "c.fq_default_poly_set_coeff", "x"]], "fq_default_poly_set_coeff_fmpz": [[39, 1, 1, "c.fq_default_poly_set_coeff_fmpz", "ctx"], [39, 1, 1, "c.fq_default_poly_set_coeff_fmpz", "n"], [39, 1, 1, "c.fq_default_poly_set_coeff_fmpz", "poly"], [39, 1, 1, "c.fq_default_poly_set_coeff_fmpz", "x"]], "fq_default_poly_set_fmpz_mod_poly": [[39, 1, 1, "c.fq_default_poly_set_fmpz_mod_poly", "ctx"], [39, 1, 1, "c.fq_default_poly_set_fmpz_mod_poly", "op"], [39, 1, 1, "c.fq_default_poly_set_fmpz_mod_poly", "rop"]], "fq_default_poly_set_fmpz_poly": [[39, 1, 1, "c.fq_default_poly_set_fmpz_poly", "ctx"], [39, 1, 1, "c.fq_default_poly_set_fmpz_poly", "op"], [39, 1, 1, "c.fq_default_poly_set_fmpz_poly", "rop"]], "fq_default_poly_set_fq_default": [[39, 1, 1, "c.fq_default_poly_set_fq_default", "c"], [39, 1, 1, "c.fq_default_poly_set_fq_default", "ctx"], [39, 1, 1, "c.fq_default_poly_set_fq_default", "poly"]], "fq_default_poly_set_nmod_poly": [[39, 1, 1, "c.fq_default_poly_set_nmod_poly", "ctx"], [39, 1, 1, "c.fq_default_poly_set_nmod_poly", "op"], [39, 1, 1, "c.fq_default_poly_set_nmod_poly", "rop"]], "fq_default_poly_set_trunc": [[39, 1, 1, "c.fq_default_poly_set_trunc", "ctx"], [39, 1, 1, "c.fq_default_poly_set_trunc", "newlen"], [39, 1, 1, "c.fq_default_poly_set_trunc", "poly1"], [39, 1, 1, "c.fq_default_poly_set_trunc", "poly2"]], "fq_default_poly_shift_left": [[39, 1, 1, "c.fq_default_poly_shift_left", "ctx"], [39, 1, 1, "c.fq_default_poly_shift_left", "n"], [39, 1, 1, "c.fq_default_poly_shift_left", "op"], [39, 1, 1, "c.fq_default_poly_shift_left", "rop"]], "fq_default_poly_shift_right": [[39, 1, 1, "c.fq_default_poly_shift_right", "ctx"], [39, 1, 1, "c.fq_default_poly_shift_right", "n"], [39, 1, 1, "c.fq_default_poly_shift_right", "op"], [39, 1, 1, "c.fq_default_poly_shift_right", "rop"]], "fq_default_poly_sqr": [[39, 1, 1, "c.fq_default_poly_sqr", "ctx"], [39, 1, 1, "c.fq_default_poly_sqr", "op"], [39, 1, 1, "c.fq_default_poly_sqr", "rop"]], "fq_default_poly_sqrt": [[39, 1, 1, "c.fq_default_poly_sqrt", "mod"], [39, 1, 1, "c.fq_default_poly_sqrt", "p"], [39, 1, 1, "c.fq_default_poly_sqrt", "s"]], "fq_default_poly_sqrt_series": [[39, 1, 1, "c.fq_default_poly_sqrt_series", "ctx"], [39, 1, 1, "c.fq_default_poly_sqrt_series", "g"], [39, 1, 1, "c.fq_default_poly_sqrt_series", "h"], [39, 1, 1, "c.fq_default_poly_sqrt_series", "n"]], "fq_default_poly_sub": [[39, 1, 1, "c.fq_default_poly_sub", "ctx"], [39, 1, 1, "c.fq_default_poly_sub", "poly1"], [39, 1, 1, "c.fq_default_poly_sub", "poly2"], [39, 1, 1, "c.fq_default_poly_sub", "res"]], "fq_default_poly_sub_series": [[39, 1, 1, "c.fq_default_poly_sub_series", "ctx"], [39, 1, 1, "c.fq_default_poly_sub_series", "n"], [39, 1, 1, "c.fq_default_poly_sub_series", "poly1"], [39, 1, 1, "c.fq_default_poly_sub_series", "poly2"], [39, 1, 1, "c.fq_default_poly_sub_series", "res"]], "fq_default_poly_swap": [[39, 1, 1, "c.fq_default_poly_swap", "ctx"], [39, 1, 1, "c.fq_default_poly_swap", "op1"], [39, 1, 1, "c.fq_default_poly_swap", "op2"]], "fq_default_poly_truncate": [[39, 1, 1, "c.fq_default_poly_truncate", "ctx"], [39, 1, 1, "c.fq_default_poly_truncate", "newlen"], [39, 1, 1, "c.fq_default_poly_truncate", "poly"]], "fq_default_poly_xgcd": [[39, 1, 1, "c.fq_default_poly_xgcd", "A"], [39, 1, 1, "c.fq_default_poly_xgcd", "B"], [39, 1, 1, "c.fq_default_poly_xgcd", "G"], [39, 1, 1, "c.fq_default_poly_xgcd", "S"], [39, 1, 1, "c.fq_default_poly_xgcd", "T"], [39, 1, 1, "c.fq_default_poly_xgcd", "ctx"]], "fq_default_poly_zero": [[39, 1, 1, "c.fq_default_poly_zero", "ctx"], [39, 1, 1, "c.fq_default_poly_zero", "poly"]], "fq_default_pow": [[37, 1, 1, "c.fq_default_pow", "ctx"], [37, 1, 1, "c.fq_default_pow", "e"], [37, 1, 1, "c.fq_default_pow", "op"], [37, 1, 1, "c.fq_default_pow", "rop"]], "fq_default_pow_ui": [[37, 1, 1, "c.fq_default_pow_ui", "ctx"], [37, 1, 1, "c.fq_default_pow_ui", "e"], [37, 1, 1, "c.fq_default_pow_ui", "op"], [37, 1, 1, "c.fq_default_pow_ui", "rop"]], "fq_default_print": [[37, 1, 1, "c.fq_default_print", "ctx"], [37, 1, 1, "c.fq_default_print", "op"]], "fq_default_print_pretty": [[37, 1, 1, "c.fq_default_print_pretty", "ctx"], [37, 1, 1, "c.fq_default_print_pretty", "op"]], "fq_default_pth_root": [[37, 1, 1, "c.fq_default_pth_root", "ctx"], [37, 1, 1, "c.fq_default_pth_root", "op1"], [37, 1, 1, "c.fq_default_pth_root", "rop"]], "fq_default_rand": [[37, 1, 1, "c.fq_default_rand", "ctx"], [37, 1, 1, "c.fq_default_rand", "rop"], [37, 1, 1, "c.fq_default_rand", "state"]], "fq_default_rand_not_zero": [[37, 1, 1, "c.fq_default_rand_not_zero", "ctx"], [37, 1, 1, "c.fq_default_rand_not_zero", "rop"], [37, 1, 1, "c.fq_default_rand_not_zero", "state"]], "fq_default_randtest": [[37, 1, 1, "c.fq_default_randtest", "ctx"], [37, 1, 1, "c.fq_default_randtest", "rop"], [37, 1, 1, "c.fq_default_randtest", "state"]], "fq_default_randtest_not_zero": [[37, 1, 1, "c.fq_default_randtest_not_zero", "ctx"], [37, 1, 1, "c.fq_default_randtest_not_zero", "rop"], [37, 1, 1, "c.fq_default_randtest_not_zero", "state"]], "fq_default_set": [[37, 1, 1, "c.fq_default_set", "ctx"], [37, 1, 1, "c.fq_default_set", "op"], [37, 1, 1, "c.fq_default_set", "rop"]], "fq_default_set_fmpz": [[37, 1, 1, "c.fq_default_set_fmpz", "ctx"], [37, 1, 1, "c.fq_default_set_fmpz", "rop"], [37, 1, 1, "c.fq_default_set_fmpz", "x"]], "fq_default_set_fmpz_mod_poly": [[37, 1, 1, "c.fq_default_set_fmpz_mod_poly", "ctx"], [37, 1, 1, "c.fq_default_set_fmpz_mod_poly", "mod_ctx"], [37, 1, 1, "c.fq_default_set_fmpz_mod_poly", "op"], [37, 1, 1, "c.fq_default_set_fmpz_mod_poly", "poly"]], "fq_default_set_fmpz_poly": [[37, 1, 1, "c.fq_default_set_fmpz_poly", "a"], [37, 1, 1, "c.fq_default_set_fmpz_poly", "b"], [37, 1, 1, "c.fq_default_set_fmpz_poly", "ctx"]], "fq_default_set_nmod_poly": [[37, 1, 1, "c.fq_default_set_nmod_poly", "ctx"], [37, 1, 1, "c.fq_default_set_nmod_poly", "op"], [37, 1, 1, "c.fq_default_set_nmod_poly", "poly"]], "fq_default_set_si": [[37, 1, 1, "c.fq_default_set_si", "ctx"], [37, 1, 1, "c.fq_default_set_si", "rop"], [37, 1, 1, "c.fq_default_set_si", "x"]], "fq_default_set_ui": [[37, 1, 1, "c.fq_default_set_ui", "ctx"], [37, 1, 1, "c.fq_default_set_ui", "rop"], [37, 1, 1, "c.fq_default_set_ui", "x"]], "fq_default_sqr": [[37, 1, 1, "c.fq_default_sqr", "ctx"], [37, 1, 1, "c.fq_default_sqr", "op"], [37, 1, 1, "c.fq_default_sqr", "rop"]], "fq_default_sqrt": [[37, 1, 1, "c.fq_default_sqrt", "ctx"], [37, 1, 1, "c.fq_default_sqrt", "op1"], [37, 1, 1, "c.fq_default_sqrt", "rop"]], "fq_default_sub": [[37, 1, 1, "c.fq_default_sub", "ctx"], [37, 1, 1, "c.fq_default_sub", "op1"], [37, 1, 1, "c.fq_default_sub", "op2"], [37, 1, 1, "c.fq_default_sub", "rop"]], "fq_default_sub_one": [[37, 1, 1, "c.fq_default_sub_one", "ctx"], [37, 1, 1, "c.fq_default_sub_one", "op1"], [37, 1, 1, "c.fq_default_sub_one", "rop"]], "fq_default_swap": [[37, 1, 1, "c.fq_default_swap", "ctx"], [37, 1, 1, "c.fq_default_swap", "op1"], [37, 1, 1, "c.fq_default_swap", "op2"]], "fq_default_trace": [[37, 1, 1, "c.fq_default_trace", "ctx"], [37, 1, 1, "c.fq_default_trace", "op"], [37, 1, 1, "c.fq_default_trace", "rop"]], "fq_default_zero": [[37, 1, 1, "c.fq_default_zero", "ctx"], [37, 1, 1, "c.fq_default_zero", "rop"]], "fq_div": [[36, 1, 1, "c.fq_div", "ctx"], [36, 1, 1, "c.fq_div", "op1"], [36, 1, 1, "c.fq_div", "op2"], [36, 1, 1, "c.fq_div", "rop"]], "fq_embed_composition_matrix": [[41, 1, 1, "c.fq_embed_composition_matrix", "ctx"], [41, 1, 1, "c.fq_embed_composition_matrix", "gen"], [41, 1, 1, "c.fq_embed_composition_matrix", "matrix"]], "fq_embed_composition_matrix_sub": [[41, 1, 1, "c.fq_embed_composition_matrix_sub", "ctx"], [41, 1, 1, "c.fq_embed_composition_matrix_sub", "gen"], [41, 1, 1, "c.fq_embed_composition_matrix_sub", "matrix"], [41, 1, 1, "c.fq_embed_composition_matrix_sub", "trunc"]], "fq_embed_dual_to_mono_matrix": [[41, 1, 1, "c.fq_embed_dual_to_mono_matrix", "ctx"], [41, 1, 1, "c.fq_embed_dual_to_mono_matrix", "res"]], "fq_embed_gens": [[41, 1, 1, "c.fq_embed_gens", "gen_sub"], [41, 1, 1, "c.fq_embed_gens", "gen_sup"], [41, 1, 1, "c.fq_embed_gens", "minpoly"], [41, 1, 1, "c.fq_embed_gens", "sub_ctx"], [41, 1, 1, "c.fq_embed_gens", "sup_ctx"]], "fq_embed_matrices": [[41, 1, 1, "c.fq_embed_matrices", "embed"], [41, 1, 1, "c.fq_embed_matrices", "gen_minpoly"], [41, 1, 1, "c.fq_embed_matrices", "gen_sub"], [41, 1, 1, "c.fq_embed_matrices", "gen_sup"], [41, 1, 1, "c.fq_embed_matrices", "project"], [41, 1, 1, "c.fq_embed_matrices", "sub_ctx"], [41, 1, 1, "c.fq_embed_matrices", "sup_ctx"]], "fq_embed_mono_to_dual_matrix": [[41, 1, 1, "c.fq_embed_mono_to_dual_matrix", "ctx"], [41, 1, 1, "c.fq_embed_mono_to_dual_matrix", "res"]], "fq_embed_mul_matrix": [[41, 1, 1, "c.fq_embed_mul_matrix", "ctx"], [41, 1, 1, "c.fq_embed_mul_matrix", "gen"], [41, 1, 1, "c.fq_embed_mul_matrix", "matrix"]], "fq_embed_trace_matrix": [[41, 1, 1, "c.fq_embed_trace_matrix", "basis"], [41, 1, 1, "c.fq_embed_trace_matrix", "res"], [41, 1, 1, "c.fq_embed_trace_matrix", "sub_ctx"], [41, 1, 1, "c.fq_embed_trace_matrix", "sup_ctx"]], "fq_equal": [[36, 1, 1, "c.fq_equal", "ctx"], [36, 1, 1, "c.fq_equal", "op1"], [36, 1, 1, "c.fq_equal", "op2"]], "fq_fprint": [[36, 1, 1, "c.fq_fprint", "ctx"], [36, 1, 1, "c.fq_fprint", "file"], [36, 1, 1, "c.fq_fprint", "op"]], "fq_fprint_pretty": [[36, 1, 1, "c.fq_fprint_pretty", "ctx"], [36, 1, 1, "c.fq_fprint_pretty", "file"], [36, 1, 1, "c.fq_fprint_pretty", "op"]], "fq_frobenius": [[36, 1, 1, "c.fq_frobenius", "ctx"], [36, 1, 1, "c.fq_frobenius", "e"], [36, 1, 1, "c.fq_frobenius", "op"], [36, 1, 1, "c.fq_frobenius", "rop"]], "fq_gcdinv": [[36, 1, 1, "c.fq_gcdinv", "ctx"], [36, 1, 1, "c.fq_gcdinv", "f"], [36, 1, 1, "c.fq_gcdinv", "inv"], [36, 1, 1, "c.fq_gcdinv", "op"]], "fq_gen": [[36, 1, 1, "c.fq_gen", "ctx"], [36, 1, 1, "c.fq_gen", "rop"]], "fq_get_fmpz": [[36, 1, 1, "c.fq_get_fmpz", "ctx"], [36, 1, 1, "c.fq_get_fmpz", "op"], [36, 1, 1, "c.fq_get_fmpz", "rop"]], "fq_get_fmpz_mod_mat": [[36, 1, 1, "c.fq_get_fmpz_mod_mat", "a"], [36, 1, 1, "c.fq_get_fmpz_mod_mat", "col"], [36, 1, 1, "c.fq_get_fmpz_mod_mat", "ctx"]], "fq_get_fmpz_mod_poly": [[36, 1, 1, "c.fq_get_fmpz_mod_poly", "a"], [36, 1, 1, "c.fq_get_fmpz_mod_poly", "b"], [36, 1, 1, "c.fq_get_fmpz_mod_poly", "ctx"]], "fq_get_fmpz_poly": [[36, 1, 1, "c.fq_get_fmpz_poly", "a"], [36, 1, 1, "c.fq_get_fmpz_poly", "b"], [36, 1, 1, "c.fq_get_fmpz_poly", "ctx"]], "fq_get_str": [[36, 1, 1, "c.fq_get_str", "ctx"], [36, 1, 1, "c.fq_get_str", "op"]], "fq_get_str_pretty": [[36, 1, 1, "c.fq_get_str_pretty", "ctx"], [36, 1, 1, "c.fq_get_str_pretty", "op"]], "fq_init": [[36, 1, 1, "c.fq_init", "ctx"], [36, 1, 1, "c.fq_init", "rop"]], "fq_init2": [[36, 1, 1, "c.fq_init2", "ctx"], [36, 1, 1, "c.fq_init2", "rop"]], "fq_inv": [[36, 1, 1, "c.fq_inv", "ctx"], [36, 1, 1, "c.fq_inv", "op"], [36, 1, 1, "c.fq_inv", "rop"]], "fq_is_invertible": [[36, 1, 1, "c.fq_is_invertible", "ctx"], [36, 1, 1, "c.fq_is_invertible", "op"]], "fq_is_invertible_f": [[36, 1, 1, "c.fq_is_invertible_f", "ctx"], [36, 1, 1, "c.fq_is_invertible_f", "f"], [36, 1, 1, "c.fq_is_invertible_f", "op"]], "fq_is_one": [[36, 1, 1, "c.fq_is_one", "ctx"], [36, 1, 1, "c.fq_is_one", "op"]], "fq_is_primitive": [[36, 1, 1, "c.fq_is_primitive", "ctx"], [36, 1, 1, "c.fq_is_primitive", "op"]], "fq_is_square": [[36, 1, 1, "c.fq_is_square", "ctx"], [36, 1, 1, "c.fq_is_square", "op"]], "fq_is_zero": [[36, 1, 1, "c.fq_is_zero", "ctx"], [36, 1, 1, "c.fq_is_zero", "op"]], "fq_mat_add": [[42, 1, 1, "c.fq_mat_add", "A"], [42, 1, 1, "c.fq_mat_add", "B"], [42, 1, 1, "c.fq_mat_add", "C"], [42, 1, 1, "c.fq_mat_add", "ctx"]], "fq_mat_can_solve": [[42, 1, 1, "c.fq_mat_can_solve", "A"], [42, 1, 1, "c.fq_mat_can_solve", "B"], [42, 1, 1, "c.fq_mat_can_solve", "X"], [42, 1, 1, "c.fq_mat_can_solve", "ctx"]], "fq_mat_charpoly": [[42, 1, 1, "c.fq_mat_charpoly", "M"], [42, 1, 1, "c.fq_mat_charpoly", "ctx"], [42, 1, 1, "c.fq_mat_charpoly", "p"]], "fq_mat_charpoly_danilevsky": [[42, 1, 1, "c.fq_mat_charpoly_danilevsky", "M"], [42, 1, 1, "c.fq_mat_charpoly_danilevsky", "ctx"], [42, 1, 1, "c.fq_mat_charpoly_danilevsky", "p"]], "fq_mat_clear": [[42, 1, 1, "c.fq_mat_clear", "ctx"], [42, 1, 1, "c.fq_mat_clear", "mat"]], "fq_mat_concat_horizontal": [[42, 1, 1, "c.fq_mat_concat_horizontal", "ctx"], [42, 1, 1, "c.fq_mat_concat_horizontal", "mat1"], [42, 1, 1, "c.fq_mat_concat_horizontal", "mat2"], [42, 1, 1, "c.fq_mat_concat_horizontal", "res"]], "fq_mat_concat_vertical": [[42, 1, 1, "c.fq_mat_concat_vertical", "ctx"], [42, 1, 1, "c.fq_mat_concat_vertical", "mat1"], [42, 1, 1, "c.fq_mat_concat_vertical", "mat2"], [42, 1, 1, "c.fq_mat_concat_vertical", "res"]], "fq_mat_entry": [[42, 1, 1, "c.fq_mat_entry", "i"], [42, 1, 1, "c.fq_mat_entry", "j"], [42, 1, 1, "c.fq_mat_entry", "mat"]], "fq_mat_entry_set": [[42, 1, 1, "c.fq_mat_entry_set", "ctx"], [42, 1, 1, "c.fq_mat_entry_set", "i"], [42, 1, 1, "c.fq_mat_entry_set", "j"], [42, 1, 1, "c.fq_mat_entry_set", "mat"], [42, 1, 1, "c.fq_mat_entry_set", "x"]], "fq_mat_equal": [[42, 1, 1, "c.fq_mat_equal", "ctx"], [42, 1, 1, "c.fq_mat_equal", "mat1"], [42, 1, 1, "c.fq_mat_equal", "mat2"]], "fq_mat_fprint": [[42, 1, 1, "c.fq_mat_fprint", "ctx"], [42, 1, 1, "c.fq_mat_fprint", "file"], [42, 1, 1, "c.fq_mat_fprint", "mat"]], "fq_mat_fprint_pretty": [[42, 1, 1, "c.fq_mat_fprint_pretty", "ctx"], [42, 1, 1, "c.fq_mat_fprint_pretty", "file"], [42, 1, 1, "c.fq_mat_fprint_pretty", "mat"]], "fq_mat_init": [[42, 1, 1, "c.fq_mat_init", "cols"], [42, 1, 1, "c.fq_mat_init", "ctx"], [42, 1, 1, "c.fq_mat_init", "mat"], [42, 1, 1, "c.fq_mat_init", "rows"]], "fq_mat_init_set": [[42, 1, 1, "c.fq_mat_init_set", "ctx"], [42, 1, 1, "c.fq_mat_init_set", "mat"], [42, 1, 1, "c.fq_mat_init_set", "src"]], "fq_mat_inv": [[42, 1, 1, "c.fq_mat_inv", "A"], [42, 1, 1, "c.fq_mat_inv", "B"], [42, 1, 1, "c.fq_mat_inv", "ctx"]], "fq_mat_invert_cols": [[42, 1, 1, "c.fq_mat_invert_cols", "mat"], [42, 1, 1, "c.fq_mat_invert_cols", "perm"]], "fq_mat_invert_rows": [[42, 1, 1, "c.fq_mat_invert_rows", "mat"], [42, 1, 1, "c.fq_mat_invert_rows", "perm"]], "fq_mat_is_empty": [[42, 1, 1, "c.fq_mat_is_empty", "ctx"], [42, 1, 1, "c.fq_mat_is_empty", "mat"]], "fq_mat_is_one": [[42, 1, 1, "c.fq_mat_is_one", "ctx"], [42, 1, 1, "c.fq_mat_is_one", "mat"]], "fq_mat_is_square": [[42, 1, 1, "c.fq_mat_is_square", "ctx"], [42, 1, 1, "c.fq_mat_is_square", "mat"]], "fq_mat_is_zero": [[42, 1, 1, "c.fq_mat_is_zero", "ctx"], [42, 1, 1, "c.fq_mat_is_zero", "mat"]], "fq_mat_lu": [[42, 1, 1, "c.fq_mat_lu", "A"], [42, 1, 1, "c.fq_mat_lu", "P"], [42, 1, 1, "c.fq_mat_lu", "ctx"], [42, 1, 1, "c.fq_mat_lu", "rank_check"]], "fq_mat_lu_classical": [[42, 1, 1, "c.fq_mat_lu_classical", "A"], [42, 1, 1, "c.fq_mat_lu_classical", "P"], [42, 1, 1, "c.fq_mat_lu_classical", "ctx"], [42, 1, 1, "c.fq_mat_lu_classical", "rank_check"]], "fq_mat_lu_recursive": [[42, 1, 1, "c.fq_mat_lu_recursive", "A"], [42, 1, 1, "c.fq_mat_lu_recursive", "P"], [42, 1, 1, "c.fq_mat_lu_recursive", "ctx"], [42, 1, 1, "c.fq_mat_lu_recursive", "rank_check"]], "fq_mat_minpoly": [[42, 1, 1, "c.fq_mat_minpoly", "M"], [42, 1, 1, "c.fq_mat_minpoly", "ctx"], [42, 1, 1, "c.fq_mat_minpoly", "p"]], "fq_mat_mul": [[42, 1, 1, "c.fq_mat_mul", "A"], [42, 1, 1, "c.fq_mat_mul", "B"], [42, 1, 1, "c.fq_mat_mul", "C"], [42, 1, 1, "c.fq_mat_mul", "ctx"]], "fq_mat_mul_KS": [[42, 1, 1, "c.fq_mat_mul_KS", "A"], [42, 1, 1, "c.fq_mat_mul_KS", "B"], [42, 1, 1, "c.fq_mat_mul_KS", "C"], [42, 1, 1, "c.fq_mat_mul_KS", "ctx"]], "fq_mat_mul_classical": [[42, 1, 1, "c.fq_mat_mul_classical", "A"], [42, 1, 1, "c.fq_mat_mul_classical", "B"], [42, 1, 1, "c.fq_mat_mul_classical", "C"], [42, 1, 1, "c.fq_mat_mul_classical", "ctx"]], "fq_mat_mul_vec": [[42, 1, 1, "c.fq_mat_mul_vec", "A"], [42, 1, 1, "c.fq_mat_mul_vec", "b"], [42, 1, 1, "c.fq_mat_mul_vec", "blen"], [42, 1, 1, "c.fq_mat_mul_vec", "c"]], "fq_mat_mul_vec_ptr": [[42, 1, 1, "c.fq_mat_mul_vec_ptr", "A"], [42, 1, 1, "c.fq_mat_mul_vec_ptr", "b"], [42, 1, 1, "c.fq_mat_mul_vec_ptr", "blen"], [42, 1, 1, "c.fq_mat_mul_vec_ptr", "c"]], "fq_mat_ncols": [[42, 1, 1, "c.fq_mat_ncols", "ctx"], [42, 1, 1, "c.fq_mat_ncols", "mat"]], "fq_mat_neg": [[42, 1, 1, "c.fq_mat_neg", "A"], [42, 1, 1, "c.fq_mat_neg", "B"], [42, 1, 1, "c.fq_mat_neg", "ctx"]], "fq_mat_nrows": [[42, 1, 1, "c.fq_mat_nrows", "ctx"], [42, 1, 1, "c.fq_mat_nrows", "mat"]], "fq_mat_one": [[42, 1, 1, "c.fq_mat_one", "ctx"], [42, 1, 1, "c.fq_mat_one", "mat"]], "fq_mat_print": [[42, 1, 1, "c.fq_mat_print", "ctx"], [42, 1, 1, "c.fq_mat_print", "mat"]], "fq_mat_print_pretty": [[42, 1, 1, "c.fq_mat_print_pretty", "ctx"], [42, 1, 1, "c.fq_mat_print_pretty", "mat"]], "fq_mat_randops": [[42, 1, 1, "c.fq_mat_randops", "count"], [42, 1, 1, "c.fq_mat_randops", "ctx"], [42, 1, 1, "c.fq_mat_randops", "mat"], [42, 1, 1, "c.fq_mat_randops", "state"]], "fq_mat_randpermdiag": [[42, 1, 1, "c.fq_mat_randpermdiag", "ctx"], [42, 1, 1, "c.fq_mat_randpermdiag", "diag"], [42, 1, 1, "c.fq_mat_randpermdiag", "mat"], [42, 1, 1, "c.fq_mat_randpermdiag", "n"], [42, 1, 1, "c.fq_mat_randpermdiag", "state"]], "fq_mat_randrank": [[42, 1, 1, "c.fq_mat_randrank", "ctx"], [42, 1, 1, "c.fq_mat_randrank", "mat"], [42, 1, 1, "c.fq_mat_randrank", "rank"], [42, 1, 1, "c.fq_mat_randrank", "state"]], "fq_mat_randtest": [[42, 1, 1, "c.fq_mat_randtest", "ctx"], [42, 1, 1, "c.fq_mat_randtest", "mat"], [42, 1, 1, "c.fq_mat_randtest", "state"]], "fq_mat_randtril": [[42, 1, 1, "c.fq_mat_randtril", "ctx"], [42, 1, 1, "c.fq_mat_randtril", "mat"], [42, 1, 1, "c.fq_mat_randtril", "state"], [42, 1, 1, "c.fq_mat_randtril", "unit"]], "fq_mat_randtriu": [[42, 1, 1, "c.fq_mat_randtriu", "ctx"], [42, 1, 1, "c.fq_mat_randtriu", "mat"], [42, 1, 1, "c.fq_mat_randtriu", "state"], [42, 1, 1, "c.fq_mat_randtriu", "unit"]], "fq_mat_reduce_row": [[42, 1, 1, "c.fq_mat_reduce_row", "A"], [42, 1, 1, "c.fq_mat_reduce_row", "L"], [42, 1, 1, "c.fq_mat_reduce_row", "P"], [42, 1, 1, "c.fq_mat_reduce_row", "ctx"], [42, 1, 1, "c.fq_mat_reduce_row", "n"]], "fq_mat_rref": [[42, 1, 1, "c.fq_mat_rref", "A"], [42, 1, 1, "c.fq_mat_rref", "ctx"]], "fq_mat_set": [[42, 1, 1, "c.fq_mat_set", "ctx"], [42, 1, 1, "c.fq_mat_set", "mat"], [42, 1, 1, "c.fq_mat_set", "src"]], "fq_mat_set_fmpz_mod_mat": [[42, 1, 1, "c.fq_mat_set_fmpz_mod_mat", "ctx"], [42, 1, 1, "c.fq_mat_set_fmpz_mod_mat", "mat1"], [42, 1, 1, "c.fq_mat_set_fmpz_mod_mat", "mat2"]], "fq_mat_set_nmod_mat": [[42, 1, 1, "c.fq_mat_set_nmod_mat", "ctx"], [42, 1, 1, "c.fq_mat_set_nmod_mat", "mat1"], [42, 1, 1, "c.fq_mat_set_nmod_mat", "mat2"]], "fq_mat_similarity": [[42, 1, 1, "c.fq_mat_similarity", "M"], [42, 1, 1, "c.fq_mat_similarity", "ctx"], [42, 1, 1, "c.fq_mat_similarity", "d"], [42, 1, 1, "c.fq_mat_similarity", "r"]], "fq_mat_solve": [[42, 1, 1, "c.fq_mat_solve", "A"], [42, 1, 1, "c.fq_mat_solve", "B"], [42, 1, 1, "c.fq_mat_solve", "X"], [42, 1, 1, "c.fq_mat_solve", "ctx"]], "fq_mat_solve_tril": [[42, 1, 1, "c.fq_mat_solve_tril", "B"], [42, 1, 1, "c.fq_mat_solve_tril", "L"], [42, 1, 1, "c.fq_mat_solve_tril", "X"], [42, 1, 1, "c.fq_mat_solve_tril", "ctx"], [42, 1, 1, "c.fq_mat_solve_tril", "unit"]], "fq_mat_solve_tril_classical": [[42, 1, 1, "c.fq_mat_solve_tril_classical", "B"], [42, 1, 1, "c.fq_mat_solve_tril_classical", "L"], [42, 1, 1, "c.fq_mat_solve_tril_classical", "X"], [42, 1, 1, "c.fq_mat_solve_tril_classical", "ctx"], [42, 1, 1, "c.fq_mat_solve_tril_classical", "unit"]], "fq_mat_solve_tril_recursive": [[42, 1, 1, "c.fq_mat_solve_tril_recursive", "B"], [42, 1, 1, "c.fq_mat_solve_tril_recursive", "L"], [42, 1, 1, "c.fq_mat_solve_tril_recursive", "X"], [42, 1, 1, "c.fq_mat_solve_tril_recursive", "ctx"], [42, 1, 1, "c.fq_mat_solve_tril_recursive", "unit"]], "fq_mat_solve_triu": [[42, 1, 1, "c.fq_mat_solve_triu", "B"], [42, 1, 1, "c.fq_mat_solve_triu", "U"], [42, 1, 1, "c.fq_mat_solve_triu", "X"], [42, 1, 1, "c.fq_mat_solve_triu", "ctx"], [42, 1, 1, "c.fq_mat_solve_triu", "unit"]], "fq_mat_solve_triu_classical": [[42, 1, 1, "c.fq_mat_solve_triu_classical", "B"], [42, 1, 1, "c.fq_mat_solve_triu_classical", "U"], [42, 1, 1, "c.fq_mat_solve_triu_classical", "X"], [42, 1, 1, "c.fq_mat_solve_triu_classical", "ctx"], [42, 1, 1, "c.fq_mat_solve_triu_classical", "unit"]], "fq_mat_solve_triu_recursive": [[42, 1, 1, "c.fq_mat_solve_triu_recursive", "B"], [42, 1, 1, "c.fq_mat_solve_triu_recursive", "U"], [42, 1, 1, "c.fq_mat_solve_triu_recursive", "X"], [42, 1, 1, "c.fq_mat_solve_triu_recursive", "ctx"], [42, 1, 1, "c.fq_mat_solve_triu_recursive", "unit"]], "fq_mat_sub": [[42, 1, 1, "c.fq_mat_sub", "A"], [42, 1, 1, "c.fq_mat_sub", "B"], [42, 1, 1, "c.fq_mat_sub", "C"], [42, 1, 1, "c.fq_mat_sub", "ctx"]], "fq_mat_submul": [[42, 1, 1, "c.fq_mat_submul", "A"], [42, 1, 1, "c.fq_mat_submul", "B"], [42, 1, 1, "c.fq_mat_submul", "C"], [42, 1, 1, "c.fq_mat_submul", "D"], [42, 1, 1, "c.fq_mat_submul", "ctx"]], "fq_mat_swap": [[42, 1, 1, "c.fq_mat_swap", "ctx"], [42, 1, 1, "c.fq_mat_swap", "mat1"], [42, 1, 1, "c.fq_mat_swap", "mat2"]], "fq_mat_swap_cols": [[42, 1, 1, "c.fq_mat_swap_cols", "mat"], [42, 1, 1, "c.fq_mat_swap_cols", "perm"], [42, 1, 1, "c.fq_mat_swap_cols", "r"], [42, 1, 1, "c.fq_mat_swap_cols", "s"]], "fq_mat_swap_entrywise": [[42, 1, 1, "c.fq_mat_swap_entrywise", "mat1"], [42, 1, 1, "c.fq_mat_swap_entrywise", "mat2"]], "fq_mat_swap_rows": [[42, 1, 1, "c.fq_mat_swap_rows", "mat"], [42, 1, 1, "c.fq_mat_swap_rows", "perm"], [42, 1, 1, "c.fq_mat_swap_rows", "r"], [42, 1, 1, "c.fq_mat_swap_rows", "s"]], "fq_mat_vec_mul": [[42, 1, 1, "c.fq_mat_vec_mul", "B"], [42, 1, 1, "c.fq_mat_vec_mul", "a"], [42, 1, 1, "c.fq_mat_vec_mul", "alen"], [42, 1, 1, "c.fq_mat_vec_mul", "c"]], "fq_mat_vec_mul_ptr": [[42, 1, 1, "c.fq_mat_vec_mul_ptr", "B"], [42, 1, 1, "c.fq_mat_vec_mul_ptr", "a"], [42, 1, 1, "c.fq_mat_vec_mul_ptr", "alen"], [42, 1, 1, "c.fq_mat_vec_mul_ptr", "c"]], "fq_mat_window_clear": [[42, 1, 1, "c.fq_mat_window_clear", "ctx"], [42, 1, 1, "c.fq_mat_window_clear", "window"]], "fq_mat_window_init": [[42, 1, 1, "c.fq_mat_window_init", "c1"], [42, 1, 1, "c.fq_mat_window_init", "c2"], [42, 1, 1, "c.fq_mat_window_init", "ctx"], [42, 1, 1, "c.fq_mat_window_init", "mat"], [42, 1, 1, "c.fq_mat_window_init", "r1"], [42, 1, 1, "c.fq_mat_window_init", "r2"], [42, 1, 1, "c.fq_mat_window_init", "window"]], "fq_mat_zero": [[42, 1, 1, "c.fq_mat_zero", "ctx"], [42, 1, 1, "c.fq_mat_zero", "mat"]], "fq_modulus_derivative_inv": [[41, 1, 1, "c.fq_modulus_derivative_inv", "ctx"], [41, 1, 1, "c.fq_modulus_derivative_inv", "m_prime"], [41, 1, 1, "c.fq_modulus_derivative_inv", "m_prime_inv"]], "fq_modulus_pow_series_inv": [[41, 1, 1, "c.fq_modulus_pow_series_inv", "ctx"], [41, 1, 1, "c.fq_modulus_pow_series_inv", "res"], [41, 1, 1, "c.fq_modulus_pow_series_inv", "trunc"]], "fq_mul": [[36, 1, 1, "c.fq_mul", "ctx"], [36, 1, 1, "c.fq_mul", "op1"], [36, 1, 1, "c.fq_mul", "op2"], [36, 1, 1, "c.fq_mul", "rop"]], "fq_mul_fmpz": [[36, 1, 1, "c.fq_mul_fmpz", "ctx"], [36, 1, 1, "c.fq_mul_fmpz", "op"], [36, 1, 1, "c.fq_mul_fmpz", "rop"], [36, 1, 1, "c.fq_mul_fmpz", "x"]], "fq_mul_si": [[36, 1, 1, "c.fq_mul_si", "ctx"], [36, 1, 1, "c.fq_mul_si", "op"], [36, 1, 1, "c.fq_mul_si", "rop"], [36, 1, 1, "c.fq_mul_si", "x"]], "fq_mul_ui": [[36, 1, 1, "c.fq_mul_ui", "ctx"], [36, 1, 1, "c.fq_mul_ui", "op"], [36, 1, 1, "c.fq_mul_ui", "rop"], [36, 1, 1, "c.fq_mul_ui", "x"]], "fq_multiplicative_order": [[36, 1, 1, "c.fq_multiplicative_order", "ctx"], [36, 1, 1, "c.fq_multiplicative_order", "op"], [36, 1, 1, "c.fq_multiplicative_order", "ord"]], "fq_neg": [[36, 1, 1, "c.fq_neg", "ctx"], [36, 1, 1, "c.fq_neg", "op"], [36, 1, 1, "c.fq_neg", "rop"]], "fq_nmod_add": [[43, 1, 1, "c.fq_nmod_add", "ctx"], [43, 1, 1, "c.fq_nmod_add", "op1"], [43, 1, 1, "c.fq_nmod_add", "op2"], [43, 1, 1, "c.fq_nmod_add", "rop"]], "fq_nmod_bit_pack": [[43, 1, 1, "c.fq_nmod_bit_pack", "bit_size"], [43, 1, 1, "c.fq_nmod_bit_pack", "ctx"], [43, 1, 1, "c.fq_nmod_bit_pack", "f"], [43, 1, 1, "c.fq_nmod_bit_pack", "op"]], "fq_nmod_bit_unpack": [[43, 1, 1, "c.fq_nmod_bit_unpack", "bit_size"], [43, 1, 1, "c.fq_nmod_bit_unpack", "ctx"], [43, 1, 1, "c.fq_nmod_bit_unpack", "f"], [43, 1, 1, "c.fq_nmod_bit_unpack", "rop"]], "fq_nmod_clear": [[43, 1, 1, "c.fq_nmod_clear", "ctx"], [43, 1, 1, "c.fq_nmod_clear", "rop"]], "fq_nmod_cmp": [[43, 1, 1, "c.fq_nmod_cmp", "a"], [43, 1, 1, "c.fq_nmod_cmp", "b"], [43, 1, 1, "c.fq_nmod_cmp", "ctx"]], "fq_nmod_ctx_clear": [[43, 1, 1, "c.fq_nmod_ctx_clear", "ctx"]], "fq_nmod_ctx_degree": [[43, 1, 1, "c.fq_nmod_ctx_degree", "ctx"]], "fq_nmod_ctx_fprint": [[43, 1, 1, "c.fq_nmod_ctx_fprint", "ctx"], [43, 1, 1, "c.fq_nmod_ctx_fprint", "file"]], "fq_nmod_ctx_init": [[43, 1, 1, "c.fq_nmod_ctx_init", "ctx"], [43, 1, 1, "c.fq_nmod_ctx_init", "d"], [43, 1, 1, "c.fq_nmod_ctx_init", "p"], [43, 1, 1, "c.fq_nmod_ctx_init", "var"]], "fq_nmod_ctx_init_conway": [[43, 1, 1, "c.fq_nmod_ctx_init_conway", "ctx"], [43, 1, 1, "c.fq_nmod_ctx_init_conway", "d"], [43, 1, 1, "c.fq_nmod_ctx_init_conway", "p"], [43, 1, 1, "c.fq_nmod_ctx_init_conway", "var"]], "fq_nmod_ctx_init_modulus": [[43, 1, 1, "c.fq_nmod_ctx_init_modulus", "ctx"], [43, 1, 1, "c.fq_nmod_ctx_init_modulus", "modulus"], [43, 1, 1, "c.fq_nmod_ctx_init_modulus", "var"]], "fq_nmod_ctx_modulus": [[43, 1, 1, "c.fq_nmod_ctx_modulus", "ctx"]], "fq_nmod_ctx_order": [[43, 1, 1, "c.fq_nmod_ctx_order", "ctx"], [43, 1, 1, "c.fq_nmod_ctx_order", "f"]], "fq_nmod_ctx_prime": [[43, 1, 1, "c.fq_nmod_ctx_prime", "ctx"]], "fq_nmod_ctx_print": [[43, 1, 1, "c.fq_nmod_ctx_print", "ctx"]], "fq_nmod_ctx_randtest": [[43, 1, 1, "c.fq_nmod_ctx_randtest", "ctx"]], "fq_nmod_ctx_randtest_reducible": [[43, 1, 1, "c.fq_nmod_ctx_randtest_reducible", "ctx"]], "fq_nmod_embed_composition_matrix": [[44, 1, 1, "c.fq_nmod_embed_composition_matrix", "ctx"], [44, 1, 1, "c.fq_nmod_embed_composition_matrix", "gen"], [44, 1, 1, "c.fq_nmod_embed_composition_matrix", "matrix"]], "fq_nmod_embed_composition_matrix_sub": [[44, 1, 1, "c.fq_nmod_embed_composition_matrix_sub", "ctx"], [44, 1, 1, "c.fq_nmod_embed_composition_matrix_sub", "gen"], [44, 1, 1, "c.fq_nmod_embed_composition_matrix_sub", "matrix"], [44, 1, 1, "c.fq_nmod_embed_composition_matrix_sub", "trunc"]], "fq_nmod_embed_dual_to_mono_matrix": [[44, 1, 1, "c.fq_nmod_embed_dual_to_mono_matrix", "ctx"], [44, 1, 1, "c.fq_nmod_embed_dual_to_mono_matrix", "res"]], "fq_nmod_embed_gens": [[44, 1, 1, "c.fq_nmod_embed_gens", "gen_sub"], [44, 1, 1, "c.fq_nmod_embed_gens", "gen_sup"], [44, 1, 1, "c.fq_nmod_embed_gens", "minpoly"], [44, 1, 1, "c.fq_nmod_embed_gens", "sub_ctx"], [44, 1, 1, "c.fq_nmod_embed_gens", "sup_ctx"]], "fq_nmod_embed_matrices": [[44, 1, 1, "c.fq_nmod_embed_matrices", "embed"], [44, 1, 1, "c.fq_nmod_embed_matrices", "gen_minpoly"], [44, 1, 1, "c.fq_nmod_embed_matrices", "gen_sub"], [44, 1, 1, "c.fq_nmod_embed_matrices", "gen_sup"], [44, 1, 1, "c.fq_nmod_embed_matrices", "project"], [44, 1, 1, "c.fq_nmod_embed_matrices", "sub_ctx"], [44, 1, 1, "c.fq_nmod_embed_matrices", "sup_ctx"]], "fq_nmod_embed_mono_to_dual_matrix": [[44, 1, 1, "c.fq_nmod_embed_mono_to_dual_matrix", "ctx"], [44, 1, 1, "c.fq_nmod_embed_mono_to_dual_matrix", "res"]], "fq_nmod_embed_mul_matrix": [[44, 1, 1, "c.fq_nmod_embed_mul_matrix", "ctx"], [44, 1, 1, "c.fq_nmod_embed_mul_matrix", "gen"], [44, 1, 1, "c.fq_nmod_embed_mul_matrix", "matrix"]], "fq_nmod_embed_trace_matrix": [[44, 1, 1, "c.fq_nmod_embed_trace_matrix", "basis"], [44, 1, 1, "c.fq_nmod_embed_trace_matrix", "res"], [44, 1, 1, "c.fq_nmod_embed_trace_matrix", "sub_ctx"], [44, 1, 1, "c.fq_nmod_embed_trace_matrix", "sup_ctx"]], "fq_nmod_equal": [[43, 1, 1, "c.fq_nmod_equal", "ctx"], [43, 1, 1, "c.fq_nmod_equal", "op1"], [43, 1, 1, "c.fq_nmod_equal", "op2"]], "fq_nmod_fprint": [[43, 1, 1, "c.fq_nmod_fprint", "ctx"], [43, 1, 1, "c.fq_nmod_fprint", "file"], [43, 1, 1, "c.fq_nmod_fprint", "op"]], "fq_nmod_fprint_pretty": [[43, 1, 1, "c.fq_nmod_fprint_pretty", "ctx"], [43, 1, 1, "c.fq_nmod_fprint_pretty", "file"], [43, 1, 1, "c.fq_nmod_fprint_pretty", "op"]], "fq_nmod_frobenius": [[43, 1, 1, "c.fq_nmod_frobenius", "ctx"], [43, 1, 1, "c.fq_nmod_frobenius", "e"], [43, 1, 1, "c.fq_nmod_frobenius", "op"], [43, 1, 1, "c.fq_nmod_frobenius", "rop"]], "fq_nmod_gcdinv": [[43, 1, 1, "c.fq_nmod_gcdinv", "ctx"], [43, 1, 1, "c.fq_nmod_gcdinv", "f"], [43, 1, 1, "c.fq_nmod_gcdinv", "inv"], [43, 1, 1, "c.fq_nmod_gcdinv", "op"]], "fq_nmod_gen": [[43, 1, 1, "c.fq_nmod_gen", "ctx"], [43, 1, 1, "c.fq_nmod_gen", "rop"]], "fq_nmod_get_fmpz": [[43, 1, 1, "c.fq_nmod_get_fmpz", "ctx"], [43, 1, 1, "c.fq_nmod_get_fmpz", "op"], [43, 1, 1, "c.fq_nmod_get_fmpz", "rop"]], "fq_nmod_get_nmod_mat": [[43, 1, 1, "c.fq_nmod_get_nmod_mat", "a"], [43, 1, 1, "c.fq_nmod_get_nmod_mat", "col"], [43, 1, 1, "c.fq_nmod_get_nmod_mat", "ctx"]], "fq_nmod_get_nmod_poly": [[43, 1, 1, "c.fq_nmod_get_nmod_poly", "a"], [43, 1, 1, "c.fq_nmod_get_nmod_poly", "b"], [43, 1, 1, "c.fq_nmod_get_nmod_poly", "ctx"]], "fq_nmod_get_str": [[43, 1, 1, "c.fq_nmod_get_str", "ctx"], [43, 1, 1, "c.fq_nmod_get_str", "op"]], "fq_nmod_get_str_pretty": [[43, 1, 1, "c.fq_nmod_get_str_pretty", "ctx"], [43, 1, 1, "c.fq_nmod_get_str_pretty", "op"]], "fq_nmod_init": [[43, 1, 1, "c.fq_nmod_init", "ctx"], [43, 1, 1, "c.fq_nmod_init", "rop"]], "fq_nmod_init2": [[43, 1, 1, "c.fq_nmod_init2", "ctx"], [43, 1, 1, "c.fq_nmod_init2", "rop"]], "fq_nmod_inv": [[43, 1, 1, "c.fq_nmod_inv", "ctx"], [43, 1, 1, "c.fq_nmod_inv", "op"], [43, 1, 1, "c.fq_nmod_inv", "rop"]], "fq_nmod_is_invertible": [[43, 1, 1, "c.fq_nmod_is_invertible", "ctx"], [43, 1, 1, "c.fq_nmod_is_invertible", "op"]], "fq_nmod_is_invertible_f": [[43, 1, 1, "c.fq_nmod_is_invertible_f", "ctx"], [43, 1, 1, "c.fq_nmod_is_invertible_f", "f"], [43, 1, 1, "c.fq_nmod_is_invertible_f", "op"]], "fq_nmod_is_one": [[43, 1, 1, "c.fq_nmod_is_one", "ctx"], [43, 1, 1, "c.fq_nmod_is_one", "op"]], "fq_nmod_is_primitive": [[43, 1, 1, "c.fq_nmod_is_primitive", "ctx"], [43, 1, 1, "c.fq_nmod_is_primitive", "op"]], "fq_nmod_is_square": [[43, 1, 1, "c.fq_nmod_is_square", "ctx"], [43, 1, 1, "c.fq_nmod_is_square", "op"]], "fq_nmod_is_zero": [[43, 1, 1, "c.fq_nmod_is_zero", "ctx"], [43, 1, 1, "c.fq_nmod_is_zero", "op"]], "fq_nmod_mat_add": [[45, 1, 1, "c.fq_nmod_mat_add", "A"], [45, 1, 1, "c.fq_nmod_mat_add", "B"], [45, 1, 1, "c.fq_nmod_mat_add", "C"], [45, 1, 1, "c.fq_nmod_mat_add", "ctx"]], "fq_nmod_mat_can_solve": [[45, 1, 1, "c.fq_nmod_mat_can_solve", "A"], [45, 1, 1, "c.fq_nmod_mat_can_solve", "B"], [45, 1, 1, "c.fq_nmod_mat_can_solve", "X"], [45, 1, 1, "c.fq_nmod_mat_can_solve", "ctx"]], "fq_nmod_mat_charpoly": [[45, 1, 1, "c.fq_nmod_mat_charpoly", "M"], [45, 1, 1, "c.fq_nmod_mat_charpoly", "ctx"], [45, 1, 1, "c.fq_nmod_mat_charpoly", "p"]], "fq_nmod_mat_charpoly_danilevsky": [[45, 1, 1, "c.fq_nmod_mat_charpoly_danilevsky", "M"], [45, 1, 1, "c.fq_nmod_mat_charpoly_danilevsky", "ctx"], [45, 1, 1, "c.fq_nmod_mat_charpoly_danilevsky", "p"]], "fq_nmod_mat_clear": [[45, 1, 1, "c.fq_nmod_mat_clear", "ctx"], [45, 1, 1, "c.fq_nmod_mat_clear", "mat"]], "fq_nmod_mat_concat_horizontal": [[45, 1, 1, "c.fq_nmod_mat_concat_horizontal", "ctx"], [45, 1, 1, "c.fq_nmod_mat_concat_horizontal", "mat1"], [45, 1, 1, "c.fq_nmod_mat_concat_horizontal", "mat2"], [45, 1, 1, "c.fq_nmod_mat_concat_horizontal", "res"]], "fq_nmod_mat_concat_vertical": [[45, 1, 1, "c.fq_nmod_mat_concat_vertical", "ctx"], [45, 1, 1, "c.fq_nmod_mat_concat_vertical", "mat1"], [45, 1, 1, "c.fq_nmod_mat_concat_vertical", "mat2"], [45, 1, 1, "c.fq_nmod_mat_concat_vertical", "res"]], "fq_nmod_mat_entry": [[45, 1, 1, "c.fq_nmod_mat_entry", "i"], [45, 1, 1, "c.fq_nmod_mat_entry", "j"], [45, 1, 1, "c.fq_nmod_mat_entry", "mat"]], "fq_nmod_mat_entry_set": [[45, 1, 1, "c.fq_nmod_mat_entry_set", "ctx"], [45, 1, 1, "c.fq_nmod_mat_entry_set", "i"], [45, 1, 1, "c.fq_nmod_mat_entry_set", "j"], [45, 1, 1, "c.fq_nmod_mat_entry_set", "mat"], [45, 1, 1, "c.fq_nmod_mat_entry_set", "x"]], "fq_nmod_mat_equal": [[45, 1, 1, "c.fq_nmod_mat_equal", "ctx"], [45, 1, 1, "c.fq_nmod_mat_equal", "mat1"], [45, 1, 1, "c.fq_nmod_mat_equal", "mat2"]], "fq_nmod_mat_fprint": [[45, 1, 1, "c.fq_nmod_mat_fprint", "ctx"], [45, 1, 1, "c.fq_nmod_mat_fprint", "file"], [45, 1, 1, "c.fq_nmod_mat_fprint", "mat"]], "fq_nmod_mat_fprint_pretty": [[45, 1, 1, "c.fq_nmod_mat_fprint_pretty", "ctx"], [45, 1, 1, "c.fq_nmod_mat_fprint_pretty", "file"], [45, 1, 1, "c.fq_nmod_mat_fprint_pretty", "mat"]], "fq_nmod_mat_init": [[45, 1, 1, "c.fq_nmod_mat_init", "cols"], [45, 1, 1, "c.fq_nmod_mat_init", "ctx"], [45, 1, 1, "c.fq_nmod_mat_init", "mat"], [45, 1, 1, "c.fq_nmod_mat_init", "rows"]], "fq_nmod_mat_init_set": [[45, 1, 1, "c.fq_nmod_mat_init_set", "ctx"], [45, 1, 1, "c.fq_nmod_mat_init_set", "mat"], [45, 1, 1, "c.fq_nmod_mat_init_set", "src"]], "fq_nmod_mat_inv": [[45, 1, 1, "c.fq_nmod_mat_inv", "A"], [45, 1, 1, "c.fq_nmod_mat_inv", "B"], [45, 1, 1, "c.fq_nmod_mat_inv", "ctx"]], "fq_nmod_mat_invert_cols": [[45, 1, 1, "c.fq_nmod_mat_invert_cols", "mat"], [45, 1, 1, "c.fq_nmod_mat_invert_cols", "perm"]], "fq_nmod_mat_invert_rows": [[45, 1, 1, "c.fq_nmod_mat_invert_rows", "mat"], [45, 1, 1, "c.fq_nmod_mat_invert_rows", "perm"]], "fq_nmod_mat_is_empty": [[45, 1, 1, "c.fq_nmod_mat_is_empty", "ctx"], [45, 1, 1, "c.fq_nmod_mat_is_empty", "mat"]], "fq_nmod_mat_is_one": [[45, 1, 1, "c.fq_nmod_mat_is_one", "ctx"], [45, 1, 1, "c.fq_nmod_mat_is_one", "mat"]], "fq_nmod_mat_is_square": [[45, 1, 1, "c.fq_nmod_mat_is_square", "ctx"], [45, 1, 1, "c.fq_nmod_mat_is_square", "mat"]], "fq_nmod_mat_is_zero": [[45, 1, 1, "c.fq_nmod_mat_is_zero", "ctx"], [45, 1, 1, "c.fq_nmod_mat_is_zero", "mat"]], "fq_nmod_mat_lu": [[45, 1, 1, "c.fq_nmod_mat_lu", "A"], [45, 1, 1, "c.fq_nmod_mat_lu", "P"], [45, 1, 1, "c.fq_nmod_mat_lu", "ctx"], [45, 1, 1, "c.fq_nmod_mat_lu", "rank_check"]], "fq_nmod_mat_lu_classical": [[45, 1, 1, "c.fq_nmod_mat_lu_classical", "A"], [45, 1, 1, "c.fq_nmod_mat_lu_classical", "P"], [45, 1, 1, "c.fq_nmod_mat_lu_classical", "ctx"], [45, 1, 1, "c.fq_nmod_mat_lu_classical", "rank_check"]], "fq_nmod_mat_lu_recursive": [[45, 1, 1, "c.fq_nmod_mat_lu_recursive", "A"], [45, 1, 1, "c.fq_nmod_mat_lu_recursive", "P"], [45, 1, 1, "c.fq_nmod_mat_lu_recursive", "ctx"], [45, 1, 1, "c.fq_nmod_mat_lu_recursive", "rank_check"]], "fq_nmod_mat_minpoly": [[45, 1, 1, "c.fq_nmod_mat_minpoly", "M"], [45, 1, 1, "c.fq_nmod_mat_minpoly", "ctx"], [45, 1, 1, "c.fq_nmod_mat_minpoly", "p"]], "fq_nmod_mat_mul": [[45, 1, 1, "c.fq_nmod_mat_mul", "A"], [45, 1, 1, "c.fq_nmod_mat_mul", "B"], [45, 1, 1, "c.fq_nmod_mat_mul", "C"], [45, 1, 1, "c.fq_nmod_mat_mul", "ctx"]], "fq_nmod_mat_mul_KS": [[45, 1, 1, "c.fq_nmod_mat_mul_KS", "A"], [45, 1, 1, "c.fq_nmod_mat_mul_KS", "B"], [45, 1, 1, "c.fq_nmod_mat_mul_KS", "C"], [45, 1, 1, "c.fq_nmod_mat_mul_KS", "ctx"]], "fq_nmod_mat_mul_classical": [[45, 1, 1, "c.fq_nmod_mat_mul_classical", "A"], [45, 1, 1, "c.fq_nmod_mat_mul_classical", "B"], [45, 1, 1, "c.fq_nmod_mat_mul_classical", "C"], [45, 1, 1, "c.fq_nmod_mat_mul_classical", "ctx"]], "fq_nmod_mat_mul_vec": [[45, 1, 1, "c.fq_nmod_mat_mul_vec", "A"], [45, 1, 1, "c.fq_nmod_mat_mul_vec", "b"], [45, 1, 1, "c.fq_nmod_mat_mul_vec", "blen"], [45, 1, 1, "c.fq_nmod_mat_mul_vec", "c"]], "fq_nmod_mat_mul_vec_ptr": [[45, 1, 1, "c.fq_nmod_mat_mul_vec_ptr", "A"], [45, 1, 1, "c.fq_nmod_mat_mul_vec_ptr", "b"], [45, 1, 1, "c.fq_nmod_mat_mul_vec_ptr", "blen"], [45, 1, 1, "c.fq_nmod_mat_mul_vec_ptr", "c"]], "fq_nmod_mat_ncols": [[45, 1, 1, "c.fq_nmod_mat_ncols", "ctx"], [45, 1, 1, "c.fq_nmod_mat_ncols", "mat"]], "fq_nmod_mat_neg": [[45, 1, 1, "c.fq_nmod_mat_neg", "A"], [45, 1, 1, "c.fq_nmod_mat_neg", "B"], [45, 1, 1, "c.fq_nmod_mat_neg", "ctx"]], "fq_nmod_mat_nrows": [[45, 1, 1, "c.fq_nmod_mat_nrows", "ctx"], [45, 1, 1, "c.fq_nmod_mat_nrows", "mat"]], "fq_nmod_mat_one": [[45, 1, 1, "c.fq_nmod_mat_one", "ctx"], [45, 1, 1, "c.fq_nmod_mat_one", "mat"]], "fq_nmod_mat_print": [[45, 1, 1, "c.fq_nmod_mat_print", "ctx"], [45, 1, 1, "c.fq_nmod_mat_print", "mat"]], "fq_nmod_mat_print_pretty": [[45, 1, 1, "c.fq_nmod_mat_print_pretty", "ctx"], [45, 1, 1, "c.fq_nmod_mat_print_pretty", "mat"]], "fq_nmod_mat_randops": [[45, 1, 1, "c.fq_nmod_mat_randops", "count"], [45, 1, 1, "c.fq_nmod_mat_randops", "ctx"], [45, 1, 1, "c.fq_nmod_mat_randops", "mat"], [45, 1, 1, "c.fq_nmod_mat_randops", "state"]], "fq_nmod_mat_randpermdiag": [[45, 1, 1, "c.fq_nmod_mat_randpermdiag", "ctx"], [45, 1, 1, "c.fq_nmod_mat_randpermdiag", "diag"], [45, 1, 1, "c.fq_nmod_mat_randpermdiag", "mat"], [45, 1, 1, "c.fq_nmod_mat_randpermdiag", "n"], [45, 1, 1, "c.fq_nmod_mat_randpermdiag", "state"]], "fq_nmod_mat_randrank": [[45, 1, 1, "c.fq_nmod_mat_randrank", "ctx"], [45, 1, 1, "c.fq_nmod_mat_randrank", "mat"], [45, 1, 1, "c.fq_nmod_mat_randrank", "rank"], [45, 1, 1, "c.fq_nmod_mat_randrank", "state"]], "fq_nmod_mat_randtest": [[45, 1, 1, "c.fq_nmod_mat_randtest", "ctx"], [45, 1, 1, "c.fq_nmod_mat_randtest", "mat"], [45, 1, 1, "c.fq_nmod_mat_randtest", "state"]], "fq_nmod_mat_randtril": [[45, 1, 1, "c.fq_nmod_mat_randtril", "ctx"], [45, 1, 1, "c.fq_nmod_mat_randtril", "mat"], [45, 1, 1, "c.fq_nmod_mat_randtril", "state"], [45, 1, 1, "c.fq_nmod_mat_randtril", "unit"]], "fq_nmod_mat_randtriu": [[45, 1, 1, "c.fq_nmod_mat_randtriu", "ctx"], [45, 1, 1, "c.fq_nmod_mat_randtriu", "mat"], [45, 1, 1, "c.fq_nmod_mat_randtriu", "state"], [45, 1, 1, "c.fq_nmod_mat_randtriu", "unit"]], "fq_nmod_mat_reduce_row": [[45, 1, 1, "c.fq_nmod_mat_reduce_row", "A"], [45, 1, 1, "c.fq_nmod_mat_reduce_row", "L"], [45, 1, 1, "c.fq_nmod_mat_reduce_row", "P"], [45, 1, 1, "c.fq_nmod_mat_reduce_row", "ctx"], [45, 1, 1, "c.fq_nmod_mat_reduce_row", "n"]], "fq_nmod_mat_rref": [[45, 1, 1, "c.fq_nmod_mat_rref", "A"], [45, 1, 1, "c.fq_nmod_mat_rref", "ctx"]], "fq_nmod_mat_set": [[45, 1, 1, "c.fq_nmod_mat_set", "ctx"], [45, 1, 1, "c.fq_nmod_mat_set", "mat"], [45, 1, 1, "c.fq_nmod_mat_set", "src"]], "fq_nmod_mat_set_fmpz_mod_mat": [[45, 1, 1, "c.fq_nmod_mat_set_fmpz_mod_mat", "ctx"], [45, 1, 1, "c.fq_nmod_mat_set_fmpz_mod_mat", "mat1"], [45, 1, 1, "c.fq_nmod_mat_set_fmpz_mod_mat", "mat2"]], "fq_nmod_mat_set_nmod_mat": [[45, 1, 1, "c.fq_nmod_mat_set_nmod_mat", "ctx"], [45, 1, 1, "c.fq_nmod_mat_set_nmod_mat", "mat1"], [45, 1, 1, "c.fq_nmod_mat_set_nmod_mat", "mat2"]], "fq_nmod_mat_similarity": [[45, 1, 1, "c.fq_nmod_mat_similarity", "M"], [45, 1, 1, "c.fq_nmod_mat_similarity", "ctx"], [45, 1, 1, "c.fq_nmod_mat_similarity", "d"], [45, 1, 1, "c.fq_nmod_mat_similarity", "r"]], "fq_nmod_mat_solve": [[45, 1, 1, "c.fq_nmod_mat_solve", "A"], [45, 1, 1, "c.fq_nmod_mat_solve", "B"], [45, 1, 1, "c.fq_nmod_mat_solve", "X"], [45, 1, 1, "c.fq_nmod_mat_solve", "ctx"]], "fq_nmod_mat_solve_tril": [[45, 1, 1, "c.fq_nmod_mat_solve_tril", "B"], [45, 1, 1, "c.fq_nmod_mat_solve_tril", "L"], [45, 1, 1, "c.fq_nmod_mat_solve_tril", "X"], [45, 1, 1, "c.fq_nmod_mat_solve_tril", "ctx"], [45, 1, 1, "c.fq_nmod_mat_solve_tril", "unit"]], "fq_nmod_mat_solve_tril_classical": [[45, 1, 1, "c.fq_nmod_mat_solve_tril_classical", "B"], [45, 1, 1, "c.fq_nmod_mat_solve_tril_classical", "L"], [45, 1, 1, "c.fq_nmod_mat_solve_tril_classical", "X"], [45, 1, 1, "c.fq_nmod_mat_solve_tril_classical", "ctx"], [45, 1, 1, "c.fq_nmod_mat_solve_tril_classical", "unit"]], "fq_nmod_mat_solve_tril_recursive": [[45, 1, 1, "c.fq_nmod_mat_solve_tril_recursive", "B"], [45, 1, 1, "c.fq_nmod_mat_solve_tril_recursive", "L"], [45, 1, 1, "c.fq_nmod_mat_solve_tril_recursive", "X"], [45, 1, 1, "c.fq_nmod_mat_solve_tril_recursive", "ctx"], [45, 1, 1, "c.fq_nmod_mat_solve_tril_recursive", "unit"]], "fq_nmod_mat_solve_triu": [[45, 1, 1, "c.fq_nmod_mat_solve_triu", "B"], [45, 1, 1, "c.fq_nmod_mat_solve_triu", "U"], [45, 1, 1, "c.fq_nmod_mat_solve_triu", "X"], [45, 1, 1, "c.fq_nmod_mat_solve_triu", "ctx"], [45, 1, 1, "c.fq_nmod_mat_solve_triu", "unit"]], "fq_nmod_mat_solve_triu_classical": [[45, 1, 1, "c.fq_nmod_mat_solve_triu_classical", "B"], [45, 1, 1, "c.fq_nmod_mat_solve_triu_classical", "U"], [45, 1, 1, "c.fq_nmod_mat_solve_triu_classical", "X"], [45, 1, 1, "c.fq_nmod_mat_solve_triu_classical", "ctx"], [45, 1, 1, "c.fq_nmod_mat_solve_triu_classical", "unit"]], "fq_nmod_mat_solve_triu_recursive": [[45, 1, 1, "c.fq_nmod_mat_solve_triu_recursive", "B"], [45, 1, 1, "c.fq_nmod_mat_solve_triu_recursive", "U"], [45, 1, 1, "c.fq_nmod_mat_solve_triu_recursive", "X"], [45, 1, 1, "c.fq_nmod_mat_solve_triu_recursive", "ctx"], [45, 1, 1, "c.fq_nmod_mat_solve_triu_recursive", "unit"]], "fq_nmod_mat_sub": [[45, 1, 1, "c.fq_nmod_mat_sub", "A"], [45, 1, 1, "c.fq_nmod_mat_sub", "B"], [45, 1, 1, "c.fq_nmod_mat_sub", "C"], [45, 1, 1, "c.fq_nmod_mat_sub", "ctx"]], "fq_nmod_mat_submul": [[45, 1, 1, "c.fq_nmod_mat_submul", "A"], [45, 1, 1, "c.fq_nmod_mat_submul", "B"], [45, 1, 1, "c.fq_nmod_mat_submul", "C"], [45, 1, 1, "c.fq_nmod_mat_submul", "D"], [45, 1, 1, "c.fq_nmod_mat_submul", "ctx"]], "fq_nmod_mat_swap": [[45, 1, 1, "c.fq_nmod_mat_swap", "ctx"], [45, 1, 1, "c.fq_nmod_mat_swap", "mat1"], [45, 1, 1, "c.fq_nmod_mat_swap", "mat2"]], "fq_nmod_mat_swap_cols": [[45, 1, 1, "c.fq_nmod_mat_swap_cols", "mat"], [45, 1, 1, "c.fq_nmod_mat_swap_cols", "perm"], [45, 1, 1, "c.fq_nmod_mat_swap_cols", "r"], [45, 1, 1, "c.fq_nmod_mat_swap_cols", "s"]], "fq_nmod_mat_swap_entrywise": [[45, 1, 1, "c.fq_nmod_mat_swap_entrywise", "mat1"], [45, 1, 1, "c.fq_nmod_mat_swap_entrywise", "mat2"]], "fq_nmod_mat_swap_rows": [[45, 1, 1, "c.fq_nmod_mat_swap_rows", "mat"], [45, 1, 1, "c.fq_nmod_mat_swap_rows", "perm"], [45, 1, 1, "c.fq_nmod_mat_swap_rows", "r"], [45, 1, 1, "c.fq_nmod_mat_swap_rows", "s"]], "fq_nmod_mat_vec_mul": [[45, 1, 1, "c.fq_nmod_mat_vec_mul", "B"], [45, 1, 1, "c.fq_nmod_mat_vec_mul", "a"], [45, 1, 1, "c.fq_nmod_mat_vec_mul", "alen"], [45, 1, 1, "c.fq_nmod_mat_vec_mul", "c"]], "fq_nmod_mat_vec_mul_ptr": [[45, 1, 1, "c.fq_nmod_mat_vec_mul_ptr", "B"], [45, 1, 1, "c.fq_nmod_mat_vec_mul_ptr", "a"], [45, 1, 1, "c.fq_nmod_mat_vec_mul_ptr", "alen"], [45, 1, 1, "c.fq_nmod_mat_vec_mul_ptr", "c"]], "fq_nmod_mat_window_clear": [[45, 1, 1, "c.fq_nmod_mat_window_clear", "ctx"], [45, 1, 1, "c.fq_nmod_mat_window_clear", "window"]], "fq_nmod_mat_window_init": [[45, 1, 1, "c.fq_nmod_mat_window_init", "c1"], [45, 1, 1, "c.fq_nmod_mat_window_init", "c2"], [45, 1, 1, "c.fq_nmod_mat_window_init", "ctx"], [45, 1, 1, "c.fq_nmod_mat_window_init", "mat"], [45, 1, 1, "c.fq_nmod_mat_window_init", "r1"], [45, 1, 1, "c.fq_nmod_mat_window_init", "r2"], [45, 1, 1, "c.fq_nmod_mat_window_init", "window"]], "fq_nmod_mat_zero": [[45, 1, 1, "c.fq_nmod_mat_zero", "ctx"], [45, 1, 1, "c.fq_nmod_mat_zero", "mat"]], "fq_nmod_modulus_derivative_inv": [[44, 1, 1, "c.fq_nmod_modulus_derivative_inv", "ctx"], [44, 1, 1, "c.fq_nmod_modulus_derivative_inv", "m_prime"], [44, 1, 1, "c.fq_nmod_modulus_derivative_inv", "m_prime_inv"]], "fq_nmod_modulus_pow_series_inv": [[44, 1, 1, "c.fq_nmod_modulus_pow_series_inv", "ctx"], [44, 1, 1, "c.fq_nmod_modulus_pow_series_inv", "res"], [44, 1, 1, "c.fq_nmod_modulus_pow_series_inv", "trunc"]], "fq_nmod_mpoly_add": [[46, 1, 1, "c.fq_nmod_mpoly_add", "A"], [46, 1, 1, "c.fq_nmod_mpoly_add", "B"], [46, 1, 1, "c.fq_nmod_mpoly_add", "C"], [46, 1, 1, "c.fq_nmod_mpoly_add", "ctx"]], "fq_nmod_mpoly_add_fq_nmod": [[46, 1, 1, "c.fq_nmod_mpoly_add_fq_nmod", "A"], [46, 1, 1, "c.fq_nmod_mpoly_add_fq_nmod", "B"], [46, 1, 1, "c.fq_nmod_mpoly_add_fq_nmod", "C"], [46, 1, 1, "c.fq_nmod_mpoly_add_fq_nmod", "ctx"]], "fq_nmod_mpoly_clear": [[46, 1, 1, "c.fq_nmod_mpoly_clear", "A"], [46, 1, 1, "c.fq_nmod_mpoly_clear", "ctx"]], "fq_nmod_mpoly_cmp": [[46, 1, 1, "c.fq_nmod_mpoly_cmp", "A"], [46, 1, 1, "c.fq_nmod_mpoly_cmp", "B"], [46, 1, 1, "c.fq_nmod_mpoly_cmp", "ctx"]], "fq_nmod_mpoly_combine_like_terms": [[46, 1, 1, "c.fq_nmod_mpoly_combine_like_terms", "A"], [46, 1, 1, "c.fq_nmod_mpoly_combine_like_terms", "ctx"]], "fq_nmod_mpoly_compose_fq_nmod_mpoly": [[46, 1, 1, "c.fq_nmod_mpoly_compose_fq_nmod_mpoly", "A"], [46, 1, 1, "c.fq_nmod_mpoly_compose_fq_nmod_mpoly", "B"], [46, 1, 1, "c.fq_nmod_mpoly_compose_fq_nmod_mpoly", "C"], [46, 1, 1, "c.fq_nmod_mpoly_compose_fq_nmod_mpoly", "ctxAC"], [46, 1, 1, "c.fq_nmod_mpoly_compose_fq_nmod_mpoly", "ctxB"]], "fq_nmod_mpoly_compose_fq_nmod_mpoly_gen": [[46, 1, 1, "c.fq_nmod_mpoly_compose_fq_nmod_mpoly_gen", "A"], [46, 1, 1, "c.fq_nmod_mpoly_compose_fq_nmod_mpoly_gen", "B"], [46, 1, 1, "c.fq_nmod_mpoly_compose_fq_nmod_mpoly_gen", "c"], [46, 1, 1, "c.fq_nmod_mpoly_compose_fq_nmod_mpoly_gen", "ctxAC"], [46, 1, 1, "c.fq_nmod_mpoly_compose_fq_nmod_mpoly_gen", "ctxB"]], "fq_nmod_mpoly_compose_fq_nmod_poly": [[46, 1, 1, "c.fq_nmod_mpoly_compose_fq_nmod_poly", "A"], [46, 1, 1, "c.fq_nmod_mpoly_compose_fq_nmod_poly", "B"], [46, 1, 1, "c.fq_nmod_mpoly_compose_fq_nmod_poly", "C"], [46, 1, 1, "c.fq_nmod_mpoly_compose_fq_nmod_poly", "ctx"]], "fq_nmod_mpoly_content_vars": [[46, 1, 1, "c.fq_nmod_mpoly_content_vars", "A"], [46, 1, 1, "c.fq_nmod_mpoly_content_vars", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_content_vars", "g"], [46, 1, 1, "c.fq_nmod_mpoly_content_vars", "vars"], [46, 1, 1, "c.fq_nmod_mpoly_content_vars", "vars_length"]], "fq_nmod_mpoly_ctx_clear": [[46, 1, 1, "c.fq_nmod_mpoly_ctx_clear", "ctx"]], "fq_nmod_mpoly_ctx_init": [[46, 1, 1, "c.fq_nmod_mpoly_ctx_init", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_ctx_init", "fqctx"], [46, 1, 1, "c.fq_nmod_mpoly_ctx_init", "nvars"], [46, 1, 1, "c.fq_nmod_mpoly_ctx_init", "ord"]], "fq_nmod_mpoly_ctx_nvars": [[46, 1, 1, "c.fq_nmod_mpoly_ctx_nvars", "ctx"]], "fq_nmod_mpoly_ctx_ord": [[46, 1, 1, "c.fq_nmod_mpoly_ctx_ord", "ctx"]], "fq_nmod_mpoly_degree_fmpz": [[46, 1, 1, "c.fq_nmod_mpoly_degree_fmpz", "A"], [46, 1, 1, "c.fq_nmod_mpoly_degree_fmpz", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_degree_fmpz", "deg"], [46, 1, 1, "c.fq_nmod_mpoly_degree_fmpz", "var"]], "fq_nmod_mpoly_degree_si": [[46, 1, 1, "c.fq_nmod_mpoly_degree_si", "A"], [46, 1, 1, "c.fq_nmod_mpoly_degree_si", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_degree_si", "var"]], "fq_nmod_mpoly_degrees_fit_si": [[46, 1, 1, "c.fq_nmod_mpoly_degrees_fit_si", "A"], [46, 1, 1, "c.fq_nmod_mpoly_degrees_fit_si", "ctx"]], "fq_nmod_mpoly_degrees_fmpz": [[46, 1, 1, "c.fq_nmod_mpoly_degrees_fmpz", "A"], [46, 1, 1, "c.fq_nmod_mpoly_degrees_fmpz", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_degrees_fmpz", "degs"]], "fq_nmod_mpoly_degrees_si": [[46, 1, 1, "c.fq_nmod_mpoly_degrees_si", "A"], [46, 1, 1, "c.fq_nmod_mpoly_degrees_si", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_degrees_si", "degs"]], "fq_nmod_mpoly_derivative": [[46, 1, 1, "c.fq_nmod_mpoly_derivative", "A"], [46, 1, 1, "c.fq_nmod_mpoly_derivative", "B"], [46, 1, 1, "c.fq_nmod_mpoly_derivative", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_derivative", "var"]], "fq_nmod_mpoly_discriminant": [[46, 1, 1, "c.fq_nmod_mpoly_discriminant", "A"], [46, 1, 1, "c.fq_nmod_mpoly_discriminant", "D"], [46, 1, 1, "c.fq_nmod_mpoly_discriminant", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_discriminant", "var"]], "fq_nmod_mpoly_div": [[46, 1, 1, "c.fq_nmod_mpoly_div", "A"], [46, 1, 1, "c.fq_nmod_mpoly_div", "B"], [46, 1, 1, "c.fq_nmod_mpoly_div", "Q"], [46, 1, 1, "c.fq_nmod_mpoly_div", "ctx"]], "fq_nmod_mpoly_divides": [[46, 1, 1, "c.fq_nmod_mpoly_divides", "A"], [46, 1, 1, "c.fq_nmod_mpoly_divides", "B"], [46, 1, 1, "c.fq_nmod_mpoly_divides", "Q"], [46, 1, 1, "c.fq_nmod_mpoly_divides", "ctx"]], "fq_nmod_mpoly_divrem": [[46, 1, 1, "c.fq_nmod_mpoly_divrem", "A"], [46, 1, 1, "c.fq_nmod_mpoly_divrem", "B"], [46, 1, 1, "c.fq_nmod_mpoly_divrem", "Q"], [46, 1, 1, "c.fq_nmod_mpoly_divrem", "R"], [46, 1, 1, "c.fq_nmod_mpoly_divrem", "ctx"]], "fq_nmod_mpoly_divrem_ideal": [[46, 1, 1, "c.fq_nmod_mpoly_divrem_ideal", "A"], [46, 1, 1, "c.fq_nmod_mpoly_divrem_ideal", "B"], [46, 1, 1, "c.fq_nmod_mpoly_divrem_ideal", "Q"], [46, 1, 1, "c.fq_nmod_mpoly_divrem_ideal", "R"], [46, 1, 1, "c.fq_nmod_mpoly_divrem_ideal", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_divrem_ideal", "len"]], "fq_nmod_mpoly_equal": [[46, 1, 1, "c.fq_nmod_mpoly_equal", "A"], [46, 1, 1, "c.fq_nmod_mpoly_equal", "B"], [46, 1, 1, "c.fq_nmod_mpoly_equal", "ctx"]], "fq_nmod_mpoly_equal_fq_nmod": [[46, 1, 1, "c.fq_nmod_mpoly_equal_fq_nmod", "A"], [46, 1, 1, "c.fq_nmod_mpoly_equal_fq_nmod", "c"], [46, 1, 1, "c.fq_nmod_mpoly_equal_fq_nmod", "ctx"]], "fq_nmod_mpoly_evaluate_all_fq_nmod": [[46, 1, 1, "c.fq_nmod_mpoly_evaluate_all_fq_nmod", "A"], [46, 1, 1, "c.fq_nmod_mpoly_evaluate_all_fq_nmod", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_evaluate_all_fq_nmod", "ev"], [46, 1, 1, "c.fq_nmod_mpoly_evaluate_all_fq_nmod", "vals"]], "fq_nmod_mpoly_evaluate_one_fq_nmod": [[46, 1, 1, "c.fq_nmod_mpoly_evaluate_one_fq_nmod", "A"], [46, 1, 1, "c.fq_nmod_mpoly_evaluate_one_fq_nmod", "B"], [46, 1, 1, "c.fq_nmod_mpoly_evaluate_one_fq_nmod", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_evaluate_one_fq_nmod", "val"], [46, 1, 1, "c.fq_nmod_mpoly_evaluate_one_fq_nmod", "var"]], "fq_nmod_mpoly_factor": [[47, 1, 1, "c.fq_nmod_mpoly_factor", "A"], [47, 1, 1, "c.fq_nmod_mpoly_factor", "ctx"], [47, 1, 1, "c.fq_nmod_mpoly_factor", "f"]], "fq_nmod_mpoly_factor_clear": [[47, 1, 1, "c.fq_nmod_mpoly_factor_clear", "ctx"], [47, 1, 1, "c.fq_nmod_mpoly_factor_clear", "f"]], "fq_nmod_mpoly_factor_get_base": [[47, 1, 1, "c.fq_nmod_mpoly_factor_get_base", "ctx"], [47, 1, 1, "c.fq_nmod_mpoly_factor_get_base", "f"], [47, 1, 1, "c.fq_nmod_mpoly_factor_get_base", "i"], [47, 1, 1, "c.fq_nmod_mpoly_factor_get_base", "p"]], "fq_nmod_mpoly_factor_get_constant_fq_nmod": [[47, 1, 1, "c.fq_nmod_mpoly_factor_get_constant_fq_nmod", "c"], [47, 1, 1, "c.fq_nmod_mpoly_factor_get_constant_fq_nmod", "ctx"], [47, 1, 1, "c.fq_nmod_mpoly_factor_get_constant_fq_nmod", "f"]], "fq_nmod_mpoly_factor_get_exp_si": [[47, 1, 1, "c.fq_nmod_mpoly_factor_get_exp_si", "ctx"], [47, 1, 1, "c.fq_nmod_mpoly_factor_get_exp_si", "f"], [47, 1, 1, "c.fq_nmod_mpoly_factor_get_exp_si", "i"]], "fq_nmod_mpoly_factor_init": [[47, 1, 1, "c.fq_nmod_mpoly_factor_init", "ctx"], [47, 1, 1, "c.fq_nmod_mpoly_factor_init", "f"]], "fq_nmod_mpoly_factor_length": [[47, 1, 1, "c.fq_nmod_mpoly_factor_length", "ctx"], [47, 1, 1, "c.fq_nmod_mpoly_factor_length", "f"]], "fq_nmod_mpoly_factor_sort": [[47, 1, 1, "c.fq_nmod_mpoly_factor_sort", "ctx"], [47, 1, 1, "c.fq_nmod_mpoly_factor_sort", "f"]], "fq_nmod_mpoly_factor_squarefree": [[47, 1, 1, "c.fq_nmod_mpoly_factor_squarefree", "A"], [47, 1, 1, "c.fq_nmod_mpoly_factor_squarefree", "ctx"], [47, 1, 1, "c.fq_nmod_mpoly_factor_squarefree", "f"]], "fq_nmod_mpoly_factor_swap": [[47, 1, 1, "c.fq_nmod_mpoly_factor_swap", "ctx"], [47, 1, 1, "c.fq_nmod_mpoly_factor_swap", "f"], [47, 1, 1, "c.fq_nmod_mpoly_factor_swap", "g"]], "fq_nmod_mpoly_factor_swap_base": [[47, 1, 1, "c.fq_nmod_mpoly_factor_swap_base", "ctx"], [47, 1, 1, "c.fq_nmod_mpoly_factor_swap_base", "f"], [47, 1, 1, "c.fq_nmod_mpoly_factor_swap_base", "i"], [47, 1, 1, "c.fq_nmod_mpoly_factor_swap_base", "p"]], "fq_nmod_mpoly_fit_length": [[46, 1, 1, "c.fq_nmod_mpoly_fit_length", "A"], [46, 1, 1, "c.fq_nmod_mpoly_fit_length", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_fit_length", "len"]], "fq_nmod_mpoly_fprint_pretty": [[46, 1, 1, "c.fq_nmod_mpoly_fprint_pretty", "A"], [46, 1, 1, "c.fq_nmod_mpoly_fprint_pretty", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_fprint_pretty", "file"], [46, 1, 1, "c.fq_nmod_mpoly_fprint_pretty", "x"]], "fq_nmod_mpoly_from_univar": [[46, 1, 1, "c.fq_nmod_mpoly_from_univar", "A"], [46, 1, 1, "c.fq_nmod_mpoly_from_univar", "B"], [46, 1, 1, "c.fq_nmod_mpoly_from_univar", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_from_univar", "var"]], "fq_nmod_mpoly_gcd": [[46, 1, 1, "c.fq_nmod_mpoly_gcd", "A"], [46, 1, 1, "c.fq_nmod_mpoly_gcd", "B"], [46, 1, 1, "c.fq_nmod_mpoly_gcd", "G"], [46, 1, 1, "c.fq_nmod_mpoly_gcd", "ctx"]], "fq_nmod_mpoly_gcd_brown": [[46, 1, 1, "c.fq_nmod_mpoly_gcd_brown", "A"], [46, 1, 1, "c.fq_nmod_mpoly_gcd_brown", "B"], [46, 1, 1, "c.fq_nmod_mpoly_gcd_brown", "G"], [46, 1, 1, "c.fq_nmod_mpoly_gcd_brown", "ctx"]], "fq_nmod_mpoly_gcd_cofactors": [[46, 1, 1, "c.fq_nmod_mpoly_gcd_cofactors", "A"], [46, 1, 1, "c.fq_nmod_mpoly_gcd_cofactors", "Abar"], [46, 1, 1, "c.fq_nmod_mpoly_gcd_cofactors", "B"], [46, 1, 1, "c.fq_nmod_mpoly_gcd_cofactors", "Bbar"], [46, 1, 1, "c.fq_nmod_mpoly_gcd_cofactors", "G"], [46, 1, 1, "c.fq_nmod_mpoly_gcd_cofactors", "ctx"]], "fq_nmod_mpoly_gcd_hensel": [[46, 1, 1, "c.fq_nmod_mpoly_gcd_hensel", "A"], [46, 1, 1, "c.fq_nmod_mpoly_gcd_hensel", "B"], [46, 1, 1, "c.fq_nmod_mpoly_gcd_hensel", "G"], [46, 1, 1, "c.fq_nmod_mpoly_gcd_hensel", "ctx"]], "fq_nmod_mpoly_gcd_zippel": [[46, 1, 1, "c.fq_nmod_mpoly_gcd_zippel", "A"], [46, 1, 1, "c.fq_nmod_mpoly_gcd_zippel", "B"], [46, 1, 1, "c.fq_nmod_mpoly_gcd_zippel", "G"], [46, 1, 1, "c.fq_nmod_mpoly_gcd_zippel", "ctx"]], "fq_nmod_mpoly_gen": [[46, 1, 1, "c.fq_nmod_mpoly_gen", "A"], [46, 1, 1, "c.fq_nmod_mpoly_gen", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_gen", "var"]], "fq_nmod_mpoly_get_coeff_fq_nmod_fmpz": [[46, 1, 1, "c.fq_nmod_mpoly_get_coeff_fq_nmod_fmpz", "A"], [46, 1, 1, "c.fq_nmod_mpoly_get_coeff_fq_nmod_fmpz", "c"], [46, 1, 1, "c.fq_nmod_mpoly_get_coeff_fq_nmod_fmpz", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_get_coeff_fq_nmod_fmpz", "exp"]], "fq_nmod_mpoly_get_coeff_fq_nmod_monomial": [[46, 1, 1, "c.fq_nmod_mpoly_get_coeff_fq_nmod_monomial", "A"], [46, 1, 1, "c.fq_nmod_mpoly_get_coeff_fq_nmod_monomial", "M"], [46, 1, 1, "c.fq_nmod_mpoly_get_coeff_fq_nmod_monomial", "c"], [46, 1, 1, "c.fq_nmod_mpoly_get_coeff_fq_nmod_monomial", "ctx"]], "fq_nmod_mpoly_get_coeff_fq_nmod_ui": [[46, 1, 1, "c.fq_nmod_mpoly_get_coeff_fq_nmod_ui", "A"], [46, 1, 1, "c.fq_nmod_mpoly_get_coeff_fq_nmod_ui", "c"], [46, 1, 1, "c.fq_nmod_mpoly_get_coeff_fq_nmod_ui", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_get_coeff_fq_nmod_ui", "exp"]], "fq_nmod_mpoly_get_coeff_vars_ui": [[46, 1, 1, "c.fq_nmod_mpoly_get_coeff_vars_ui", "A"], [46, 1, 1, "c.fq_nmod_mpoly_get_coeff_vars_ui", "C"], [46, 1, 1, "c.fq_nmod_mpoly_get_coeff_vars_ui", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_get_coeff_vars_ui", "exps"], [46, 1, 1, "c.fq_nmod_mpoly_get_coeff_vars_ui", "length"], [46, 1, 1, "c.fq_nmod_mpoly_get_coeff_vars_ui", "vars"]], "fq_nmod_mpoly_get_fq_nmod": [[46, 1, 1, "c.fq_nmod_mpoly_get_fq_nmod", "A"], [46, 1, 1, "c.fq_nmod_mpoly_get_fq_nmod", "c"], [46, 1, 1, "c.fq_nmod_mpoly_get_fq_nmod", "ctx"]], "fq_nmod_mpoly_get_str_pretty": [[46, 1, 1, "c.fq_nmod_mpoly_get_str_pretty", "A"], [46, 1, 1, "c.fq_nmod_mpoly_get_str_pretty", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_get_str_pretty", "x"]], "fq_nmod_mpoly_get_term": [[46, 1, 1, "c.fq_nmod_mpoly_get_term", "A"], [46, 1, 1, "c.fq_nmod_mpoly_get_term", "M"], [46, 1, 1, "c.fq_nmod_mpoly_get_term", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_get_term", "i"]], "fq_nmod_mpoly_get_term_coeff_fq_nmod": [[46, 1, 1, "c.fq_nmod_mpoly_get_term_coeff_fq_nmod", "A"], [46, 1, 1, "c.fq_nmod_mpoly_get_term_coeff_fq_nmod", "c"], [46, 1, 1, "c.fq_nmod_mpoly_get_term_coeff_fq_nmod", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_get_term_coeff_fq_nmod", "i"]], "fq_nmod_mpoly_get_term_exp_fmpz": [[46, 1, 1, "c.fq_nmod_mpoly_get_term_exp_fmpz", "A"], [46, 1, 1, "c.fq_nmod_mpoly_get_term_exp_fmpz", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_get_term_exp_fmpz", "exp"], [46, 1, 1, "c.fq_nmod_mpoly_get_term_exp_fmpz", "i"]], "fq_nmod_mpoly_get_term_exp_si": [[46, 1, 1, "c.fq_nmod_mpoly_get_term_exp_si", "A"], [46, 1, 1, "c.fq_nmod_mpoly_get_term_exp_si", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_get_term_exp_si", "exp"], [46, 1, 1, "c.fq_nmod_mpoly_get_term_exp_si", "i"]], "fq_nmod_mpoly_get_term_exp_ui": [[46, 1, 1, "c.fq_nmod_mpoly_get_term_exp_ui", "A"], [46, 1, 1, "c.fq_nmod_mpoly_get_term_exp_ui", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_get_term_exp_ui", "exp"], [46, 1, 1, "c.fq_nmod_mpoly_get_term_exp_ui", "i"]], "fq_nmod_mpoly_get_term_monomial": [[46, 1, 1, "c.fq_nmod_mpoly_get_term_monomial", "A"], [46, 1, 1, "c.fq_nmod_mpoly_get_term_monomial", "M"], [46, 1, 1, "c.fq_nmod_mpoly_get_term_monomial", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_get_term_monomial", "i"]], "fq_nmod_mpoly_get_term_var_exp_si": [[46, 1, 1, "c.fq_nmod_mpoly_get_term_var_exp_si", "A"], [46, 1, 1, "c.fq_nmod_mpoly_get_term_var_exp_si", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_get_term_var_exp_si", "i"], [46, 1, 1, "c.fq_nmod_mpoly_get_term_var_exp_si", "var"]], "fq_nmod_mpoly_get_term_var_exp_ui": [[46, 1, 1, "c.fq_nmod_mpoly_get_term_var_exp_ui", "A"], [46, 1, 1, "c.fq_nmod_mpoly_get_term_var_exp_ui", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_get_term_var_exp_ui", "i"], [46, 1, 1, "c.fq_nmod_mpoly_get_term_var_exp_ui", "var"]], "fq_nmod_mpoly_init": [[46, 1, 1, "c.fq_nmod_mpoly_init", "A"], [46, 1, 1, "c.fq_nmod_mpoly_init", "ctx"]], "fq_nmod_mpoly_init2": [[46, 1, 1, "c.fq_nmod_mpoly_init2", "A"], [46, 1, 1, "c.fq_nmod_mpoly_init2", "alloc"], [46, 1, 1, "c.fq_nmod_mpoly_init2", "ctx"]], "fq_nmod_mpoly_init3": [[46, 1, 1, "c.fq_nmod_mpoly_init3", "A"], [46, 1, 1, "c.fq_nmod_mpoly_init3", "alloc"], [46, 1, 1, "c.fq_nmod_mpoly_init3", "bits"], [46, 1, 1, "c.fq_nmod_mpoly_init3", "ctx"]], "fq_nmod_mpoly_is_canonical": [[46, 1, 1, "c.fq_nmod_mpoly_is_canonical", "A"], [46, 1, 1, "c.fq_nmod_mpoly_is_canonical", "ctx"]], "fq_nmod_mpoly_is_fq_nmod": [[46, 1, 1, "c.fq_nmod_mpoly_is_fq_nmod", "A"], [46, 1, 1, "c.fq_nmod_mpoly_is_fq_nmod", "ctx"]], "fq_nmod_mpoly_is_gen": [[46, 1, 1, "c.fq_nmod_mpoly_is_gen", "A"], [46, 1, 1, "c.fq_nmod_mpoly_is_gen", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_is_gen", "var"]], "fq_nmod_mpoly_is_one": [[46, 1, 1, "c.fq_nmod_mpoly_is_one", "A"], [46, 1, 1, "c.fq_nmod_mpoly_is_one", "ctx"]], "fq_nmod_mpoly_is_square": [[46, 1, 1, "c.fq_nmod_mpoly_is_square", "A"], [46, 1, 1, "c.fq_nmod_mpoly_is_square", "ctx"]], "fq_nmod_mpoly_is_zero": [[46, 1, 1, "c.fq_nmod_mpoly_is_zero", "A"], [46, 1, 1, "c.fq_nmod_mpoly_is_zero", "ctx"]], "fq_nmod_mpoly_length": [[46, 1, 1, "c.fq_nmod_mpoly_length", "A"], [46, 1, 1, "c.fq_nmod_mpoly_length", "ctx"]], "fq_nmod_mpoly_make_monic": [[46, 1, 1, "c.fq_nmod_mpoly_make_monic", "A"], [46, 1, 1, "c.fq_nmod_mpoly_make_monic", "B"], [46, 1, 1, "c.fq_nmod_mpoly_make_monic", "ctx"]], "fq_nmod_mpoly_mul": [[46, 1, 1, "c.fq_nmod_mpoly_mul", "A"], [46, 1, 1, "c.fq_nmod_mpoly_mul", "B"], [46, 1, 1, "c.fq_nmod_mpoly_mul", "C"], [46, 1, 1, "c.fq_nmod_mpoly_mul", "ctx"]], "fq_nmod_mpoly_neg": [[46, 1, 1, "c.fq_nmod_mpoly_neg", "A"], [46, 1, 1, "c.fq_nmod_mpoly_neg", "B"], [46, 1, 1, "c.fq_nmod_mpoly_neg", "ctx"]], "fq_nmod_mpoly_one": [[46, 1, 1, "c.fq_nmod_mpoly_one", "A"], [46, 1, 1, "c.fq_nmod_mpoly_one", "ctx"]], "fq_nmod_mpoly_pow_fmpz": [[46, 1, 1, "c.fq_nmod_mpoly_pow_fmpz", "A"], [46, 1, 1, "c.fq_nmod_mpoly_pow_fmpz", "B"], [46, 1, 1, "c.fq_nmod_mpoly_pow_fmpz", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_pow_fmpz", "k"]], "fq_nmod_mpoly_pow_ui": [[46, 1, 1, "c.fq_nmod_mpoly_pow_ui", "A"], [46, 1, 1, "c.fq_nmod_mpoly_pow_ui", "B"], [46, 1, 1, "c.fq_nmod_mpoly_pow_ui", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_pow_ui", "k"]], "fq_nmod_mpoly_print_pretty": [[46, 1, 1, "c.fq_nmod_mpoly_print_pretty", "A"], [46, 1, 1, "c.fq_nmod_mpoly_print_pretty", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_print_pretty", "x"]], "fq_nmod_mpoly_push_term_fq_nmod_fmpz": [[46, 1, 1, "c.fq_nmod_mpoly_push_term_fq_nmod_fmpz", "A"], [46, 1, 1, "c.fq_nmod_mpoly_push_term_fq_nmod_fmpz", "c"], [46, 1, 1, "c.fq_nmod_mpoly_push_term_fq_nmod_fmpz", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_push_term_fq_nmod_fmpz", "exp"]], "fq_nmod_mpoly_push_term_fq_nmod_ui": [[46, 1, 1, "c.fq_nmod_mpoly_push_term_fq_nmod_ui", "A"], [46, 1, 1, "c.fq_nmod_mpoly_push_term_fq_nmod_ui", "c"], [46, 1, 1, "c.fq_nmod_mpoly_push_term_fq_nmod_ui", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_push_term_fq_nmod_ui", "exp"]], "fq_nmod_mpoly_quadratic_root": [[46, 1, 1, "c.fq_nmod_mpoly_quadratic_root", "A"], [46, 1, 1, "c.fq_nmod_mpoly_quadratic_root", "B"], [46, 1, 1, "c.fq_nmod_mpoly_quadratic_root", "Q"], [46, 1, 1, "c.fq_nmod_mpoly_quadratic_root", "ctx"]], "fq_nmod_mpoly_randtest_bits": [[46, 1, 1, "c.fq_nmod_mpoly_randtest_bits", "A"], [46, 1, 1, "c.fq_nmod_mpoly_randtest_bits", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_randtest_bits", "exp_bits"], [46, 1, 1, "c.fq_nmod_mpoly_randtest_bits", "length"], [46, 1, 1, "c.fq_nmod_mpoly_randtest_bits", "state"]], "fq_nmod_mpoly_randtest_bound": [[46, 1, 1, "c.fq_nmod_mpoly_randtest_bound", "A"], [46, 1, 1, "c.fq_nmod_mpoly_randtest_bound", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_randtest_bound", "exp_bound"], [46, 1, 1, "c.fq_nmod_mpoly_randtest_bound", "length"], [46, 1, 1, "c.fq_nmod_mpoly_randtest_bound", "state"]], "fq_nmod_mpoly_randtest_bounds": [[46, 1, 1, "c.fq_nmod_mpoly_randtest_bounds", "A"], [46, 1, 1, "c.fq_nmod_mpoly_randtest_bounds", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_randtest_bounds", "exp_bounds"], [46, 1, 1, "c.fq_nmod_mpoly_randtest_bounds", "length"], [46, 1, 1, "c.fq_nmod_mpoly_randtest_bounds", "state"]], "fq_nmod_mpoly_realloc": [[46, 1, 1, "c.fq_nmod_mpoly_realloc", "A"], [46, 1, 1, "c.fq_nmod_mpoly_realloc", "alloc"], [46, 1, 1, "c.fq_nmod_mpoly_realloc", "ctx"]], "fq_nmod_mpoly_resize": [[46, 1, 1, "c.fq_nmod_mpoly_resize", "A"], [46, 1, 1, "c.fq_nmod_mpoly_resize", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_resize", "new_length"]], "fq_nmod_mpoly_resultant": [[46, 1, 1, "c.fq_nmod_mpoly_resultant", "A"], [46, 1, 1, "c.fq_nmod_mpoly_resultant", "B"], [46, 1, 1, "c.fq_nmod_mpoly_resultant", "R"], [46, 1, 1, "c.fq_nmod_mpoly_resultant", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_resultant", "var"]], "fq_nmod_mpoly_reverse": [[46, 1, 1, "c.fq_nmod_mpoly_reverse", "A"], [46, 1, 1, "c.fq_nmod_mpoly_reverse", "B"], [46, 1, 1, "c.fq_nmod_mpoly_reverse", "ctx"]], "fq_nmod_mpoly_scalar_mul_fq_nmod": [[46, 1, 1, "c.fq_nmod_mpoly_scalar_mul_fq_nmod", "A"], [46, 1, 1, "c.fq_nmod_mpoly_scalar_mul_fq_nmod", "B"], [46, 1, 1, "c.fq_nmod_mpoly_scalar_mul_fq_nmod", "c"], [46, 1, 1, "c.fq_nmod_mpoly_scalar_mul_fq_nmod", "ctx"]], "fq_nmod_mpoly_set": [[46, 1, 1, "c.fq_nmod_mpoly_set", "A"], [46, 1, 1, "c.fq_nmod_mpoly_set", "B"], [46, 1, 1, "c.fq_nmod_mpoly_set", "ctx"]], "fq_nmod_mpoly_set_coeff_fq_nmod_fmpz": [[46, 1, 1, "c.fq_nmod_mpoly_set_coeff_fq_nmod_fmpz", "A"], [46, 1, 1, "c.fq_nmod_mpoly_set_coeff_fq_nmod_fmpz", "c"], [46, 1, 1, "c.fq_nmod_mpoly_set_coeff_fq_nmod_fmpz", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_set_coeff_fq_nmod_fmpz", "exp"]], "fq_nmod_mpoly_set_coeff_fq_nmod_monomial": [[46, 1, 1, "c.fq_nmod_mpoly_set_coeff_fq_nmod_monomial", "A"], [46, 1, 1, "c.fq_nmod_mpoly_set_coeff_fq_nmod_monomial", "M"], [46, 1, 1, "c.fq_nmod_mpoly_set_coeff_fq_nmod_monomial", "c"], [46, 1, 1, "c.fq_nmod_mpoly_set_coeff_fq_nmod_monomial", "ctx"]], "fq_nmod_mpoly_set_coeff_fq_nmod_ui": [[46, 1, 1, "c.fq_nmod_mpoly_set_coeff_fq_nmod_ui", "A"], [46, 1, 1, "c.fq_nmod_mpoly_set_coeff_fq_nmod_ui", "c"], [46, 1, 1, "c.fq_nmod_mpoly_set_coeff_fq_nmod_ui", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_set_coeff_fq_nmod_ui", "exp"]], "fq_nmod_mpoly_set_fq_nmod": [[46, 1, 1, "c.fq_nmod_mpoly_set_fq_nmod", "A"], [46, 1, 1, "c.fq_nmod_mpoly_set_fq_nmod", "c"], [46, 1, 1, "c.fq_nmod_mpoly_set_fq_nmod", "ctx"]], "fq_nmod_mpoly_set_fq_nmod_gen": [[46, 1, 1, "c.fq_nmod_mpoly_set_fq_nmod_gen", "A"], [46, 1, 1, "c.fq_nmod_mpoly_set_fq_nmod_gen", "ctx"]], "fq_nmod_mpoly_set_str_pretty": [[46, 1, 1, "c.fq_nmod_mpoly_set_str_pretty", "A"], [46, 1, 1, "c.fq_nmod_mpoly_set_str_pretty", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_set_str_pretty", "str"], [46, 1, 1, "c.fq_nmod_mpoly_set_str_pretty", "x"]], "fq_nmod_mpoly_set_term_coeff_ui": [[46, 1, 1, "c.fq_nmod_mpoly_set_term_coeff_ui", "A"], [46, 1, 1, "c.fq_nmod_mpoly_set_term_coeff_ui", "c"], [46, 1, 1, "c.fq_nmod_mpoly_set_term_coeff_ui", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_set_term_coeff_ui", "i"]], "fq_nmod_mpoly_set_term_exp_fmpz": [[46, 1, 1, "c.fq_nmod_mpoly_set_term_exp_fmpz", "A"], [46, 1, 1, "c.fq_nmod_mpoly_set_term_exp_fmpz", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_set_term_exp_fmpz", "exp"], [46, 1, 1, "c.fq_nmod_mpoly_set_term_exp_fmpz", "i"]], "fq_nmod_mpoly_set_term_exp_ui": [[46, 1, 1, "c.fq_nmod_mpoly_set_term_exp_ui", "A"], [46, 1, 1, "c.fq_nmod_mpoly_set_term_exp_ui", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_set_term_exp_ui", "exp"], [46, 1, 1, "c.fq_nmod_mpoly_set_term_exp_ui", "i"]], "fq_nmod_mpoly_set_ui": [[46, 1, 1, "c.fq_nmod_mpoly_set_ui", "A"], [46, 1, 1, "c.fq_nmod_mpoly_set_ui", "c"], [46, 1, 1, "c.fq_nmod_mpoly_set_ui", "ctx"]], "fq_nmod_mpoly_sort_terms": [[46, 1, 1, "c.fq_nmod_mpoly_sort_terms", "A"], [46, 1, 1, "c.fq_nmod_mpoly_sort_terms", "ctx"]], "fq_nmod_mpoly_sqrt": [[46, 1, 1, "c.fq_nmod_mpoly_sqrt", "A"], [46, 1, 1, "c.fq_nmod_mpoly_sqrt", "Q"], [46, 1, 1, "c.fq_nmod_mpoly_sqrt", "ctx"]], "fq_nmod_mpoly_sub": [[46, 1, 1, "c.fq_nmod_mpoly_sub", "A"], [46, 1, 1, "c.fq_nmod_mpoly_sub", "B"], [46, 1, 1, "c.fq_nmod_mpoly_sub", "C"], [46, 1, 1, "c.fq_nmod_mpoly_sub", "ctx"]], "fq_nmod_mpoly_sub_fq_nmod": [[46, 1, 1, "c.fq_nmod_mpoly_sub_fq_nmod", "A"], [46, 1, 1, "c.fq_nmod_mpoly_sub_fq_nmod", "B"], [46, 1, 1, "c.fq_nmod_mpoly_sub_fq_nmod", "C"], [46, 1, 1, "c.fq_nmod_mpoly_sub_fq_nmod", "ctx"]], "fq_nmod_mpoly_swap": [[46, 1, 1, "c.fq_nmod_mpoly_swap", "A"], [46, 1, 1, "c.fq_nmod_mpoly_swap", "B"], [46, 1, 1, "c.fq_nmod_mpoly_swap", "ctx"]], "fq_nmod_mpoly_term_content": [[46, 1, 1, "c.fq_nmod_mpoly_term_content", "A"], [46, 1, 1, "c.fq_nmod_mpoly_term_content", "M"], [46, 1, 1, "c.fq_nmod_mpoly_term_content", "ctx"]], "fq_nmod_mpoly_term_exp_fits_si": [[46, 1, 1, "c.fq_nmod_mpoly_term_exp_fits_si", "A"], [46, 1, 1, "c.fq_nmod_mpoly_term_exp_fits_si", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_term_exp_fits_si", "i"]], "fq_nmod_mpoly_term_exp_fits_ui": [[46, 1, 1, "c.fq_nmod_mpoly_term_exp_fits_ui", "A"], [46, 1, 1, "c.fq_nmod_mpoly_term_exp_fits_ui", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_term_exp_fits_ui", "i"]], "fq_nmod_mpoly_to_univar": [[46, 1, 1, "c.fq_nmod_mpoly_to_univar", "A"], [46, 1, 1, "c.fq_nmod_mpoly_to_univar", "B"], [46, 1, 1, "c.fq_nmod_mpoly_to_univar", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_to_univar", "var"]], "fq_nmod_mpoly_total_degree_fits_si": [[46, 1, 1, "c.fq_nmod_mpoly_total_degree_fits_si", "A"], [46, 1, 1, "c.fq_nmod_mpoly_total_degree_fits_si", "ctx"]], "fq_nmod_mpoly_total_degree_fmpz": [[46, 1, 1, "c.fq_nmod_mpoly_total_degree_fmpz", "A"], [46, 1, 1, "c.fq_nmod_mpoly_total_degree_fmpz", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_total_degree_fmpz", "tdeg"]], "fq_nmod_mpoly_total_degree_si": [[46, 1, 1, "c.fq_nmod_mpoly_total_degree_si", "A"], [46, 1, 1, "c.fq_nmod_mpoly_total_degree_si", "ctx"]], "fq_nmod_mpoly_univar_clear": [[46, 1, 1, "c.fq_nmod_mpoly_univar_clear", "A"], [46, 1, 1, "c.fq_nmod_mpoly_univar_clear", "ctx"]], "fq_nmod_mpoly_univar_degree_fits_si": [[46, 1, 1, "c.fq_nmod_mpoly_univar_degree_fits_si", "A"], [46, 1, 1, "c.fq_nmod_mpoly_univar_degree_fits_si", "ctx"]], "fq_nmod_mpoly_univar_get_term_coeff": [[46, 1, 1, "c.fq_nmod_mpoly_univar_get_term_coeff", "A"], [46, 1, 1, "c.fq_nmod_mpoly_univar_get_term_coeff", "c"], [46, 1, 1, "c.fq_nmod_mpoly_univar_get_term_coeff", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_univar_get_term_coeff", "i"]], "fq_nmod_mpoly_univar_get_term_exp_si": [[46, 1, 1, "c.fq_nmod_mpoly_univar_get_term_exp_si", "A"], [46, 1, 1, "c.fq_nmod_mpoly_univar_get_term_exp_si", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_univar_get_term_exp_si", "i"]], "fq_nmod_mpoly_univar_init": [[46, 1, 1, "c.fq_nmod_mpoly_univar_init", "A"], [46, 1, 1, "c.fq_nmod_mpoly_univar_init", "ctx"]], "fq_nmod_mpoly_univar_length": [[46, 1, 1, "c.fq_nmod_mpoly_univar_length", "A"], [46, 1, 1, "c.fq_nmod_mpoly_univar_length", "ctx"]], "fq_nmod_mpoly_univar_swap": [[46, 1, 1, "c.fq_nmod_mpoly_univar_swap", "A"], [46, 1, 1, "c.fq_nmod_mpoly_univar_swap", "B"], [46, 1, 1, "c.fq_nmod_mpoly_univar_swap", "ctx"]], "fq_nmod_mpoly_univar_swap_term_coeff": [[46, 1, 1, "c.fq_nmod_mpoly_univar_swap_term_coeff", "A"], [46, 1, 1, "c.fq_nmod_mpoly_univar_swap_term_coeff", "c"], [46, 1, 1, "c.fq_nmod_mpoly_univar_swap_term_coeff", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_univar_swap_term_coeff", "i"]], "fq_nmod_mpoly_used_vars": [[46, 1, 1, "c.fq_nmod_mpoly_used_vars", "A"], [46, 1, 1, "c.fq_nmod_mpoly_used_vars", "ctx"], [46, 1, 1, "c.fq_nmod_mpoly_used_vars", "used"]], "fq_nmod_mpoly_zero": [[46, 1, 1, "c.fq_nmod_mpoly_zero", "A"], [46, 1, 1, "c.fq_nmod_mpoly_zero", "ctx"]], "fq_nmod_mul": [[43, 1, 1, "c.fq_nmod_mul", "ctx"], [43, 1, 1, "c.fq_nmod_mul", "op1"], [43, 1, 1, "c.fq_nmod_mul", "op2"], [43, 1, 1, "c.fq_nmod_mul", "rop"]], "fq_nmod_mul_fmpz": [[43, 1, 1, "c.fq_nmod_mul_fmpz", "ctx"], [43, 1, 1, "c.fq_nmod_mul_fmpz", "op"], [43, 1, 1, "c.fq_nmod_mul_fmpz", "rop"], [43, 1, 1, "c.fq_nmod_mul_fmpz", "x"]], "fq_nmod_mul_si": [[43, 1, 1, "c.fq_nmod_mul_si", "ctx"], [43, 1, 1, "c.fq_nmod_mul_si", "op"], [43, 1, 1, "c.fq_nmod_mul_si", "rop"], [43, 1, 1, "c.fq_nmod_mul_si", "x"]], "fq_nmod_mul_ui": [[43, 1, 1, "c.fq_nmod_mul_ui", "ctx"], [43, 1, 1, "c.fq_nmod_mul_ui", "op"], [43, 1, 1, "c.fq_nmod_mul_ui", "rop"], [43, 1, 1, "c.fq_nmod_mul_ui", "x"]], "fq_nmod_multiplicative_order": [[43, 1, 1, "c.fq_nmod_multiplicative_order", "ctx"], [43, 1, 1, "c.fq_nmod_multiplicative_order", "op"], [43, 1, 1, "c.fq_nmod_multiplicative_order", "ord"]], "fq_nmod_neg": [[43, 1, 1, "c.fq_nmod_neg", "ctx"], [43, 1, 1, "c.fq_nmod_neg", "op"], [43, 1, 1, "c.fq_nmod_neg", "rop"]], "fq_nmod_norm": [[43, 1, 1, "c.fq_nmod_norm", "ctx"], [43, 1, 1, "c.fq_nmod_norm", "op"], [43, 1, 1, "c.fq_nmod_norm", "rop"]], "fq_nmod_one": [[43, 1, 1, "c.fq_nmod_one", "ctx"], [43, 1, 1, "c.fq_nmod_one", "rop"]], "fq_nmod_poly_add": [[48, 1, 1, "c.fq_nmod_poly_add", "ctx"], [48, 1, 1, "c.fq_nmod_poly_add", "poly1"], [48, 1, 1, "c.fq_nmod_poly_add", "poly2"], [48, 1, 1, "c.fq_nmod_poly_add", "res"]], "fq_nmod_poly_add_series": [[48, 1, 1, "c.fq_nmod_poly_add_series", "ctx"], [48, 1, 1, "c.fq_nmod_poly_add_series", "n"], [48, 1, 1, "c.fq_nmod_poly_add_series", "poly1"], [48, 1, 1, "c.fq_nmod_poly_add_series", "poly2"], [48, 1, 1, "c.fq_nmod_poly_add_series", "res"]], "fq_nmod_poly_add_si": [[48, 1, 1, "c.fq_nmod_poly_add_si", "c"], [48, 1, 1, "c.fq_nmod_poly_add_si", "ctx"], [48, 1, 1, "c.fq_nmod_poly_add_si", "poly1"], [48, 1, 1, "c.fq_nmod_poly_add_si", "res"]], "fq_nmod_poly_clear": [[48, 1, 1, "c.fq_nmod_poly_clear", "ctx"], [48, 1, 1, "c.fq_nmod_poly_clear", "poly"]], "fq_nmod_poly_compose": [[48, 1, 1, "c.fq_nmod_poly_compose", "ctx"], [48, 1, 1, "c.fq_nmod_poly_compose", "op1"], [48, 1, 1, "c.fq_nmod_poly_compose", "op2"], [48, 1, 1, "c.fq_nmod_poly_compose", "rop"]], "fq_nmod_poly_compose_divconquer": [[48, 1, 1, "c.fq_nmod_poly_compose_divconquer", "ctx"], [48, 1, 1, "c.fq_nmod_poly_compose_divconquer", "op1"], [48, 1, 1, "c.fq_nmod_poly_compose_divconquer", "op2"], [48, 1, 1, "c.fq_nmod_poly_compose_divconquer", "rop"]], "fq_nmod_poly_compose_horner": [[48, 1, 1, "c.fq_nmod_poly_compose_horner", "ctx"], [48, 1, 1, "c.fq_nmod_poly_compose_horner", "op1"], [48, 1, 1, "c.fq_nmod_poly_compose_horner", "op2"], [48, 1, 1, "c.fq_nmod_poly_compose_horner", "rop"]], "fq_nmod_poly_compose_mod": [[48, 1, 1, "c.fq_nmod_poly_compose_mod", "ctx"], [48, 1, 1, "c.fq_nmod_poly_compose_mod", "f"], [48, 1, 1, "c.fq_nmod_poly_compose_mod", "g"], [48, 1, 1, "c.fq_nmod_poly_compose_mod", "h"], [48, 1, 1, "c.fq_nmod_poly_compose_mod", "res"]], "fq_nmod_poly_compose_mod_brent_kung": [[48, 1, 1, "c.fq_nmod_poly_compose_mod_brent_kung", "ctx"], [48, 1, 1, "c.fq_nmod_poly_compose_mod_brent_kung", "f"], [48, 1, 1, "c.fq_nmod_poly_compose_mod_brent_kung", "g"], [48, 1, 1, "c.fq_nmod_poly_compose_mod_brent_kung", "h"], [48, 1, 1, "c.fq_nmod_poly_compose_mod_brent_kung", "res"]], "fq_nmod_poly_compose_mod_brent_kung_precomp_preinv": [[48, 1, 1, "c.fq_nmod_poly_compose_mod_brent_kung_precomp_preinv", "A"], [48, 1, 1, "c.fq_nmod_poly_compose_mod_brent_kung_precomp_preinv", "ctx"], [48, 1, 1, "c.fq_nmod_poly_compose_mod_brent_kung_precomp_preinv", "f"], [48, 1, 1, "c.fq_nmod_poly_compose_mod_brent_kung_precomp_preinv", "h"], [48, 1, 1, "c.fq_nmod_poly_compose_mod_brent_kung_precomp_preinv", "hinv"], [48, 1, 1, "c.fq_nmod_poly_compose_mod_brent_kung_precomp_preinv", "res"]], "fq_nmod_poly_compose_mod_brent_kung_preinv": [[48, 1, 1, "c.fq_nmod_poly_compose_mod_brent_kung_preinv", "ctx"], [48, 1, 1, "c.fq_nmod_poly_compose_mod_brent_kung_preinv", "f"], [48, 1, 1, "c.fq_nmod_poly_compose_mod_brent_kung_preinv", "g"], [48, 1, 1, "c.fq_nmod_poly_compose_mod_brent_kung_preinv", "h"], [48, 1, 1, "c.fq_nmod_poly_compose_mod_brent_kung_preinv", "hinv"], [48, 1, 1, "c.fq_nmod_poly_compose_mod_brent_kung_preinv", "res"]], "fq_nmod_poly_compose_mod_horner": [[48, 1, 1, "c.fq_nmod_poly_compose_mod_horner", "ctx"], [48, 1, 1, "c.fq_nmod_poly_compose_mod_horner", "f"], [48, 1, 1, "c.fq_nmod_poly_compose_mod_horner", "g"], [48, 1, 1, "c.fq_nmod_poly_compose_mod_horner", "h"], [48, 1, 1, "c.fq_nmod_poly_compose_mod_horner", "res"]], "fq_nmod_poly_compose_mod_horner_preinv": [[48, 1, 1, "c.fq_nmod_poly_compose_mod_horner_preinv", "ctx"], [48, 1, 1, "c.fq_nmod_poly_compose_mod_horner_preinv", "f"], [48, 1, 1, "c.fq_nmod_poly_compose_mod_horner_preinv", "g"], [48, 1, 1, "c.fq_nmod_poly_compose_mod_horner_preinv", "h"], [48, 1, 1, "c.fq_nmod_poly_compose_mod_horner_preinv", "hinv"], [48, 1, 1, "c.fq_nmod_poly_compose_mod_horner_preinv", "res"]], "fq_nmod_poly_compose_mod_preinv": [[48, 1, 1, "c.fq_nmod_poly_compose_mod_preinv", "ctx"], [48, 1, 1, "c.fq_nmod_poly_compose_mod_preinv", "f"], [48, 1, 1, "c.fq_nmod_poly_compose_mod_preinv", "g"], [48, 1, 1, "c.fq_nmod_poly_compose_mod_preinv", "h"], [48, 1, 1, "c.fq_nmod_poly_compose_mod_preinv", "hinv"], [48, 1, 1, "c.fq_nmod_poly_compose_mod_preinv", "res"]], "fq_nmod_poly_deflate": [[48, 1, 1, "c.fq_nmod_poly_deflate", "ctx"], [48, 1, 1, "c.fq_nmod_poly_deflate", "deflation"], [48, 1, 1, "c.fq_nmod_poly_deflate", "input"], [48, 1, 1, "c.fq_nmod_poly_deflate", "result"]], "fq_nmod_poly_deflation": [[48, 1, 1, "c.fq_nmod_poly_deflation", "ctx"], [48, 1, 1, "c.fq_nmod_poly_deflation", "input"]], "fq_nmod_poly_degree": [[48, 1, 1, "c.fq_nmod_poly_degree", "ctx"], [48, 1, 1, "c.fq_nmod_poly_degree", "poly"]], "fq_nmod_poly_derivative": [[48, 1, 1, "c.fq_nmod_poly_derivative", "ctx"], [48, 1, 1, "c.fq_nmod_poly_derivative", "op"], [48, 1, 1, "c.fq_nmod_poly_derivative", "rop"]], "fq_nmod_poly_div_basecase": [[48, 1, 1, "c.fq_nmod_poly_div_basecase", "A"], [48, 1, 1, "c.fq_nmod_poly_div_basecase", "B"], [48, 1, 1, "c.fq_nmod_poly_div_basecase", "Q"], [48, 1, 1, "c.fq_nmod_poly_div_basecase", "ctx"]], "fq_nmod_poly_div_newton_n_preinv": [[48, 1, 1, "c.fq_nmod_poly_div_newton_n_preinv", "A"], [48, 1, 1, "c.fq_nmod_poly_div_newton_n_preinv", "B"], [48, 1, 1, "c.fq_nmod_poly_div_newton_n_preinv", "Binv"], [48, 1, 1, "c.fq_nmod_poly_div_newton_n_preinv", "Q"], [48, 1, 1, "c.fq_nmod_poly_div_newton_n_preinv", "ctx"]], "fq_nmod_poly_div_series": [[48, 1, 1, "c.fq_nmod_poly_div_series", "A"], [48, 1, 1, "c.fq_nmod_poly_div_series", "B"], [48, 1, 1, "c.fq_nmod_poly_div_series", "Q"], [48, 1, 1, "c.fq_nmod_poly_div_series", "ctx"], [48, 1, 1, "c.fq_nmod_poly_div_series", "n"]], "fq_nmod_poly_divides": [[48, 1, 1, "c.fq_nmod_poly_divides", "A"], [48, 1, 1, "c.fq_nmod_poly_divides", "B"], [48, 1, 1, "c.fq_nmod_poly_divides", "Q"], [48, 1, 1, "c.fq_nmod_poly_divides", "ctx"]], "fq_nmod_poly_divrem": [[48, 1, 1, "c.fq_nmod_poly_divrem", "A"], [48, 1, 1, "c.fq_nmod_poly_divrem", "B"], [48, 1, 1, "c.fq_nmod_poly_divrem", "Q"], [48, 1, 1, "c.fq_nmod_poly_divrem", "R"], [48, 1, 1, "c.fq_nmod_poly_divrem", "ctx"]], "fq_nmod_poly_divrem_basecase": [[48, 1, 1, "c.fq_nmod_poly_divrem_basecase", "A"], [48, 1, 1, "c.fq_nmod_poly_divrem_basecase", "B"], [48, 1, 1, "c.fq_nmod_poly_divrem_basecase", "Q"], [48, 1, 1, "c.fq_nmod_poly_divrem_basecase", "R"], [48, 1, 1, "c.fq_nmod_poly_divrem_basecase", "ctx"]], "fq_nmod_poly_divrem_divconquer": [[48, 1, 1, "c.fq_nmod_poly_divrem_divconquer", "A"], [48, 1, 1, "c.fq_nmod_poly_divrem_divconquer", "B"], [48, 1, 1, "c.fq_nmod_poly_divrem_divconquer", "Q"], [48, 1, 1, "c.fq_nmod_poly_divrem_divconquer", "R"], [48, 1, 1, "c.fq_nmod_poly_divrem_divconquer", "ctx"]], "fq_nmod_poly_divrem_f": [[48, 1, 1, "c.fq_nmod_poly_divrem_f", "A"], [48, 1, 1, "c.fq_nmod_poly_divrem_f", "B"], [48, 1, 1, "c.fq_nmod_poly_divrem_f", "Q"], [48, 1, 1, "c.fq_nmod_poly_divrem_f", "R"], [48, 1, 1, "c.fq_nmod_poly_divrem_f", "ctx"], [48, 1, 1, "c.fq_nmod_poly_divrem_f", "f"]], "fq_nmod_poly_divrem_newton_n_preinv": [[48, 1, 1, "c.fq_nmod_poly_divrem_newton_n_preinv", "A"], [48, 1, 1, "c.fq_nmod_poly_divrem_newton_n_preinv", "B"], [48, 1, 1, "c.fq_nmod_poly_divrem_newton_n_preinv", "Binv"], [48, 1, 1, "c.fq_nmod_poly_divrem_newton_n_preinv", "Q"], [48, 1, 1, "c.fq_nmod_poly_divrem_newton_n_preinv", "R"], [48, 1, 1, "c.fq_nmod_poly_divrem_newton_n_preinv", "ctx"]], "fq_nmod_poly_equal": [[48, 1, 1, "c.fq_nmod_poly_equal", "ctx"], [48, 1, 1, "c.fq_nmod_poly_equal", "poly1"], [48, 1, 1, "c.fq_nmod_poly_equal", "poly2"]], "fq_nmod_poly_equal_fq_nmod": [[48, 1, 1, "c.fq_nmod_poly_equal_fq_nmod", "c"], [48, 1, 1, "c.fq_nmod_poly_equal_fq_nmod", "ctx"], [48, 1, 1, "c.fq_nmod_poly_equal_fq_nmod", "poly"]], "fq_nmod_poly_equal_trunc": [[48, 1, 1, "c.fq_nmod_poly_equal_trunc", "ctx"], [48, 1, 1, "c.fq_nmod_poly_equal_trunc", "n"], [48, 1, 1, "c.fq_nmod_poly_equal_trunc", "poly1"], [48, 1, 1, "c.fq_nmod_poly_equal_trunc", "poly2"]], "fq_nmod_poly_evaluate_fq_nmod": [[48, 1, 1, "c.fq_nmod_poly_evaluate_fq_nmod", "a"], [48, 1, 1, "c.fq_nmod_poly_evaluate_fq_nmod", "ctx"], [48, 1, 1, "c.fq_nmod_poly_evaluate_fq_nmod", "f"], [48, 1, 1, "c.fq_nmod_poly_evaluate_fq_nmod", "rop"]], "fq_nmod_poly_factor": [[49, 1, 1, "c.fq_nmod_poly_factor", "ctx"], [49, 1, 1, "c.fq_nmod_poly_factor", "f"], [49, 1, 1, "c.fq_nmod_poly_factor", "lead"], [49, 1, 1, "c.fq_nmod_poly_factor", "res"]], "fq_nmod_poly_factor_berlekamp": [[49, 1, 1, "c.fq_nmod_poly_factor_berlekamp", "ctx"], [49, 1, 1, "c.fq_nmod_poly_factor_berlekamp", "f"], [49, 1, 1, "c.fq_nmod_poly_factor_berlekamp", "factors"]], "fq_nmod_poly_factor_cantor_zassenhaus": [[49, 1, 1, "c.fq_nmod_poly_factor_cantor_zassenhaus", "ctx"], [49, 1, 1, "c.fq_nmod_poly_factor_cantor_zassenhaus", "f"], [49, 1, 1, "c.fq_nmod_poly_factor_cantor_zassenhaus", "res"]], "fq_nmod_poly_factor_clear": [[49, 1, 1, "c.fq_nmod_poly_factor_clear", "ctx"], [49, 1, 1, "c.fq_nmod_poly_factor_clear", "fac"]], "fq_nmod_poly_factor_concat": [[49, 1, 1, "c.fq_nmod_poly_factor_concat", "ctx"], [49, 1, 1, "c.fq_nmod_poly_factor_concat", "fac"], [49, 1, 1, "c.fq_nmod_poly_factor_concat", "res"]], "fq_nmod_poly_factor_distinct_deg": [[49, 1, 1, "c.fq_nmod_poly_factor_distinct_deg", "ctx"], [49, 1, 1, "c.fq_nmod_poly_factor_distinct_deg", "degs"], [49, 1, 1, "c.fq_nmod_poly_factor_distinct_deg", "poly"], [49, 1, 1, "c.fq_nmod_poly_factor_distinct_deg", "res"]], "fq_nmod_poly_factor_equal_deg": [[49, 1, 1, "c.fq_nmod_poly_factor_equal_deg", "ctx"], [49, 1, 1, "c.fq_nmod_poly_factor_equal_deg", "d"], [49, 1, 1, "c.fq_nmod_poly_factor_equal_deg", "factors"], [49, 1, 1, "c.fq_nmod_poly_factor_equal_deg", "pol"]], "fq_nmod_poly_factor_equal_deg_prob": [[49, 1, 1, "c.fq_nmod_poly_factor_equal_deg_prob", "ctx"], [49, 1, 1, "c.fq_nmod_poly_factor_equal_deg_prob", "d"], [49, 1, 1, "c.fq_nmod_poly_factor_equal_deg_prob", "factor"], [49, 1, 1, "c.fq_nmod_poly_factor_equal_deg_prob", "pol"], [49, 1, 1, "c.fq_nmod_poly_factor_equal_deg_prob", "state"]], "fq_nmod_poly_factor_fit_length": [[49, 1, 1, "c.fq_nmod_poly_factor_fit_length", "ctx"], [49, 1, 1, "c.fq_nmod_poly_factor_fit_length", "fac"], [49, 1, 1, "c.fq_nmod_poly_factor_fit_length", "len"]], "fq_nmod_poly_factor_init": [[49, 1, 1, "c.fq_nmod_poly_factor_init", "ctx"], [49, 1, 1, "c.fq_nmod_poly_factor_init", "fac"]], "fq_nmod_poly_factor_insert": [[49, 1, 1, "c.fq_nmod_poly_factor_insert", "ctx"], [49, 1, 1, "c.fq_nmod_poly_factor_insert", "exp"], [49, 1, 1, "c.fq_nmod_poly_factor_insert", "fac"], [49, 1, 1, "c.fq_nmod_poly_factor_insert", "poly"]], "fq_nmod_poly_factor_kaltofen_shoup": [[49, 1, 1, "c.fq_nmod_poly_factor_kaltofen_shoup", "ctx"], [49, 1, 1, "c.fq_nmod_poly_factor_kaltofen_shoup", "poly"], [49, 1, 1, "c.fq_nmod_poly_factor_kaltofen_shoup", "res"]], "fq_nmod_poly_factor_pow": [[49, 1, 1, "c.fq_nmod_poly_factor_pow", "ctx"], [49, 1, 1, "c.fq_nmod_poly_factor_pow", "exp"], [49, 1, 1, "c.fq_nmod_poly_factor_pow", "fac"]], "fq_nmod_poly_factor_print": [[49, 1, 1, "c.fq_nmod_poly_factor_print", "ctx"], [49, 1, 1, "c.fq_nmod_poly_factor_print", "fac"]], "fq_nmod_poly_factor_print_pretty": [[49, 1, 1, "c.fq_nmod_poly_factor_print_pretty", "ctx"], [49, 1, 1, "c.fq_nmod_poly_factor_print_pretty", "fac"]], "fq_nmod_poly_factor_realloc": [[49, 1, 1, "c.fq_nmod_poly_factor_realloc", "alloc"], [49, 1, 1, "c.fq_nmod_poly_factor_realloc", "ctx"], [49, 1, 1, "c.fq_nmod_poly_factor_realloc", "fac"]], "fq_nmod_poly_factor_set": [[49, 1, 1, "c.fq_nmod_poly_factor_set", "ctx"], [49, 1, 1, "c.fq_nmod_poly_factor_set", "fac"], [49, 1, 1, "c.fq_nmod_poly_factor_set", "res"]], "fq_nmod_poly_factor_split_single": [[49, 1, 1, "c.fq_nmod_poly_factor_split_single", "ctx"], [49, 1, 1, "c.fq_nmod_poly_factor_split_single", "input"], [49, 1, 1, "c.fq_nmod_poly_factor_split_single", "linfactor"]], "fq_nmod_poly_factor_squarefree": [[49, 1, 1, "c.fq_nmod_poly_factor_squarefree", "ctx"], [49, 1, 1, "c.fq_nmod_poly_factor_squarefree", "f"], [49, 1, 1, "c.fq_nmod_poly_factor_squarefree", "res"]], "fq_nmod_poly_factor_with_berlekamp": [[49, 1, 1, "c.fq_nmod_poly_factor_with_berlekamp", "f"], [49, 1, 1, "c.fq_nmod_poly_factor_with_berlekamp", "leading_coeff"], [49, 1, 1, "c.fq_nmod_poly_factor_with_berlekamp", "res"]], "fq_nmod_poly_factor_with_cantor_zassenhaus": [[49, 1, 1, "c.fq_nmod_poly_factor_with_cantor_zassenhaus", "ctx"], [49, 1, 1, "c.fq_nmod_poly_factor_with_cantor_zassenhaus", "f"], [49, 1, 1, "c.fq_nmod_poly_factor_with_cantor_zassenhaus", "leading_coeff"], [49, 1, 1, "c.fq_nmod_poly_factor_with_cantor_zassenhaus", "res"]], "fq_nmod_poly_factor_with_kaltofen_shoup": [[49, 1, 1, "c.fq_nmod_poly_factor_with_kaltofen_shoup", "ctx"], [49, 1, 1, "c.fq_nmod_poly_factor_with_kaltofen_shoup", "f"], [49, 1, 1, "c.fq_nmod_poly_factor_with_kaltofen_shoup", "leading_coeff"], [49, 1, 1, "c.fq_nmod_poly_factor_with_kaltofen_shoup", "res"]], "fq_nmod_poly_fit_length": [[48, 1, 1, "c.fq_nmod_poly_fit_length", "ctx"], [48, 1, 1, "c.fq_nmod_poly_fit_length", "len"], [48, 1, 1, "c.fq_nmod_poly_fit_length", "poly"]], "fq_nmod_poly_fprint": [[48, 1, 1, "c.fq_nmod_poly_fprint", "ctx"], [48, 1, 1, "c.fq_nmod_poly_fprint", "file"], [48, 1, 1, "c.fq_nmod_poly_fprint", "poly"]], "fq_nmod_poly_fprint_pretty": [[48, 1, 1, "c.fq_nmod_poly_fprint_pretty", "ctx"], [48, 1, 1, "c.fq_nmod_poly_fprint_pretty", "file"], [48, 1, 1, "c.fq_nmod_poly_fprint_pretty", "poly"], [48, 1, 1, "c.fq_nmod_poly_fprint_pretty", "x"]], "fq_nmod_poly_gcd": [[48, 1, 1, "c.fq_nmod_poly_gcd", "ctx"], [48, 1, 1, "c.fq_nmod_poly_gcd", "op1"], [48, 1, 1, "c.fq_nmod_poly_gcd", "op2"], [48, 1, 1, "c.fq_nmod_poly_gcd", "rop"]], "fq_nmod_poly_gcd_euclidean": [[48, 1, 1, "c.fq_nmod_poly_gcd_euclidean", "ctx"], [48, 1, 1, "c.fq_nmod_poly_gcd_euclidean", "op1"], [48, 1, 1, "c.fq_nmod_poly_gcd_euclidean", "op2"], [48, 1, 1, "c.fq_nmod_poly_gcd_euclidean", "rop"]], "fq_nmod_poly_gcd_euclidean_f": [[48, 1, 1, "c.fq_nmod_poly_gcd_euclidean_f", "A"], [48, 1, 1, "c.fq_nmod_poly_gcd_euclidean_f", "B"], [48, 1, 1, "c.fq_nmod_poly_gcd_euclidean_f", "G"], [48, 1, 1, "c.fq_nmod_poly_gcd_euclidean_f", "ctx"], [48, 1, 1, "c.fq_nmod_poly_gcd_euclidean_f", "f"]], "fq_nmod_poly_gcd_hgcd": [[48, 1, 1, "c.fq_nmod_poly_gcd_hgcd", "ctx"], [48, 1, 1, "c.fq_nmod_poly_gcd_hgcd", "op1"], [48, 1, 1, "c.fq_nmod_poly_gcd_hgcd", "op2"], [48, 1, 1, "c.fq_nmod_poly_gcd_hgcd", "rop"]], "fq_nmod_poly_gen": [[48, 1, 1, "c.fq_nmod_poly_gen", "ctx"], [48, 1, 1, "c.fq_nmod_poly_gen", "poly"]], "fq_nmod_poly_get_coeff": [[48, 1, 1, "c.fq_nmod_poly_get_coeff", "ctx"], [48, 1, 1, "c.fq_nmod_poly_get_coeff", "n"], [48, 1, 1, "c.fq_nmod_poly_get_coeff", "poly"], [48, 1, 1, "c.fq_nmod_poly_get_coeff", "x"]], "fq_nmod_poly_get_str": [[48, 1, 1, "c.fq_nmod_poly_get_str", "ctx"], [48, 1, 1, "c.fq_nmod_poly_get_str", "poly"]], "fq_nmod_poly_get_str_pretty": [[48, 1, 1, "c.fq_nmod_poly_get_str_pretty", "ctx"], [48, 1, 1, "c.fq_nmod_poly_get_str_pretty", "poly"], [48, 1, 1, "c.fq_nmod_poly_get_str_pretty", "x"]], "fq_nmod_poly_hamming_weight": [[48, 1, 1, "c.fq_nmod_poly_hamming_weight", "ctx"], [48, 1, 1, "c.fq_nmod_poly_hamming_weight", "op"]], "fq_nmod_poly_inflate": [[48, 1, 1, "c.fq_nmod_poly_inflate", "ctx"], [48, 1, 1, "c.fq_nmod_poly_inflate", "inflation"], [48, 1, 1, "c.fq_nmod_poly_inflate", "input"], [48, 1, 1, "c.fq_nmod_poly_inflate", "result"]], "fq_nmod_poly_init": [[48, 1, 1, "c.fq_nmod_poly_init", "ctx"], [48, 1, 1, "c.fq_nmod_poly_init", "poly"]], "fq_nmod_poly_init2": [[48, 1, 1, "c.fq_nmod_poly_init2", "alloc"], [48, 1, 1, "c.fq_nmod_poly_init2", "ctx"], [48, 1, 1, "c.fq_nmod_poly_init2", "poly"]], "fq_nmod_poly_inv_series": [[48, 1, 1, "c.fq_nmod_poly_inv_series", "Q"], [48, 1, 1, "c.fq_nmod_poly_inv_series", "Qinv"], [48, 1, 1, "c.fq_nmod_poly_inv_series", "ctx"], [48, 1, 1, "c.fq_nmod_poly_inv_series", "n"]], "fq_nmod_poly_inv_series_newton": [[48, 1, 1, "c.fq_nmod_poly_inv_series_newton", "Q"], [48, 1, 1, "c.fq_nmod_poly_inv_series_newton", "Qinv"], [48, 1, 1, "c.fq_nmod_poly_inv_series_newton", "ctx"], [48, 1, 1, "c.fq_nmod_poly_inv_series_newton", "n"]], "fq_nmod_poly_invsqrt_series": [[48, 1, 1, "c.fq_nmod_poly_invsqrt_series", "ctx"], [48, 1, 1, "c.fq_nmod_poly_invsqrt_series", "g"], [48, 1, 1, "c.fq_nmod_poly_invsqrt_series", "h"], [48, 1, 1, "c.fq_nmod_poly_invsqrt_series", "n"]], "fq_nmod_poly_is_gen": [[48, 1, 1, "c.fq_nmod_poly_is_gen", "ctx"], [48, 1, 1, "c.fq_nmod_poly_is_gen", "op"]], "fq_nmod_poly_is_irreducible": [[49, 1, 1, "c.fq_nmod_poly_is_irreducible", "ctx"], [49, 1, 1, "c.fq_nmod_poly_is_irreducible", "f"]], "fq_nmod_poly_is_irreducible_ben_or": [[49, 1, 1, "c.fq_nmod_poly_is_irreducible_ben_or", "ctx"], [49, 1, 1, "c.fq_nmod_poly_is_irreducible_ben_or", "f"]], "fq_nmod_poly_is_irreducible_ddf": [[49, 1, 1, "c.fq_nmod_poly_is_irreducible_ddf", "ctx"], [49, 1, 1, "c.fq_nmod_poly_is_irreducible_ddf", "f"]], "fq_nmod_poly_is_one": [[48, 1, 1, "c.fq_nmod_poly_is_one", "op"]], "fq_nmod_poly_is_squarefree": [[49, 1, 1, "c.fq_nmod_poly_is_squarefree", "ctx"], [49, 1, 1, "c.fq_nmod_poly_is_squarefree", "f"]], "fq_nmod_poly_is_unit": [[48, 1, 1, "c.fq_nmod_poly_is_unit", "ctx"], [48, 1, 1, "c.fq_nmod_poly_is_unit", "op"]], "fq_nmod_poly_is_zero": [[48, 1, 1, "c.fq_nmod_poly_is_zero", "ctx"], [48, 1, 1, "c.fq_nmod_poly_is_zero", "poly"]], "fq_nmod_poly_iterated_frobenius_preinv": [[49, 1, 1, "c.fq_nmod_poly_iterated_frobenius_preinv", "ctx"], [49, 1, 1, "c.fq_nmod_poly_iterated_frobenius_preinv", "n"], [49, 1, 1, "c.fq_nmod_poly_iterated_frobenius_preinv", "rop"], [49, 1, 1, "c.fq_nmod_poly_iterated_frobenius_preinv", "v"], [49, 1, 1, "c.fq_nmod_poly_iterated_frobenius_preinv", "vinv"]], "fq_nmod_poly_lead": [[48, 1, 1, "c.fq_nmod_poly_lead", "ctx"], [48, 1, 1, "c.fq_nmod_poly_lead", "poly"]], "fq_nmod_poly_length": [[48, 1, 1, "c.fq_nmod_poly_length", "ctx"], [48, 1, 1, "c.fq_nmod_poly_length", "poly"]], "fq_nmod_poly_make_monic": [[48, 1, 1, "c.fq_nmod_poly_make_monic", "ctx"], [48, 1, 1, "c.fq_nmod_poly_make_monic", "op"], [48, 1, 1, "c.fq_nmod_poly_make_monic", "rop"]], "fq_nmod_poly_mul": [[48, 1, 1, "c.fq_nmod_poly_mul", "ctx"], [48, 1, 1, "c.fq_nmod_poly_mul", "op1"], [48, 1, 1, "c.fq_nmod_poly_mul", "op2"], [48, 1, 1, "c.fq_nmod_poly_mul", "rop"]], "fq_nmod_poly_mul_KS": [[48, 1, 1, "c.fq_nmod_poly_mul_KS", "ctx"], [48, 1, 1, "c.fq_nmod_poly_mul_KS", "op1"], [48, 1, 1, "c.fq_nmod_poly_mul_KS", "op2"], [48, 1, 1, "c.fq_nmod_poly_mul_KS", "rop"]], "fq_nmod_poly_mul_classical": [[48, 1, 1, "c.fq_nmod_poly_mul_classical", "ctx"], [48, 1, 1, "c.fq_nmod_poly_mul_classical", "op1"], [48, 1, 1, "c.fq_nmod_poly_mul_classical", "op2"], [48, 1, 1, "c.fq_nmod_poly_mul_classical", "rop"]], "fq_nmod_poly_mul_reorder": [[48, 1, 1, "c.fq_nmod_poly_mul_reorder", "ctx"], [48, 1, 1, "c.fq_nmod_poly_mul_reorder", "op1"], [48, 1, 1, "c.fq_nmod_poly_mul_reorder", "op2"], [48, 1, 1, "c.fq_nmod_poly_mul_reorder", "rop"]], "fq_nmod_poly_mul_univariate": [[48, 1, 1, "c.fq_nmod_poly_mul_univariate", "ctx"], [48, 1, 1, "c.fq_nmod_poly_mul_univariate", "op1"], [48, 1, 1, "c.fq_nmod_poly_mul_univariate", "op2"], [48, 1, 1, "c.fq_nmod_poly_mul_univariate", "rop"]], "fq_nmod_poly_mulhigh": [[48, 1, 1, "c.fq_nmod_poly_mulhigh", "ctx"], [48, 1, 1, "c.fq_nmod_poly_mulhigh", "poly1"], [48, 1, 1, "c.fq_nmod_poly_mulhigh", "poly2"], [48, 1, 1, "c.fq_nmod_poly_mulhigh", "res"], [48, 1, 1, "c.fq_nmod_poly_mulhigh", "start"]], "fq_nmod_poly_mulhigh_classical": [[48, 1, 1, "c.fq_nmod_poly_mulhigh_classical", "ctx"], [48, 1, 1, "c.fq_nmod_poly_mulhigh_classical", "poly1"], [48, 1, 1, "c.fq_nmod_poly_mulhigh_classical", "poly2"], [48, 1, 1, "c.fq_nmod_poly_mulhigh_classical", "res"], [48, 1, 1, "c.fq_nmod_poly_mulhigh_classical", "start"]], "fq_nmod_poly_mullow": [[48, 1, 1, "c.fq_nmod_poly_mullow", "ctx"], [48, 1, 1, "c.fq_nmod_poly_mullow", "n"], [48, 1, 1, "c.fq_nmod_poly_mullow", "op1"], [48, 1, 1, "c.fq_nmod_poly_mullow", "op2"], [48, 1, 1, "c.fq_nmod_poly_mullow", "rop"]], "fq_nmod_poly_mullow_KS": [[48, 1, 1, "c.fq_nmod_poly_mullow_KS", "ctx"], [48, 1, 1, "c.fq_nmod_poly_mullow_KS", "n"], [48, 1, 1, "c.fq_nmod_poly_mullow_KS", "op1"], [48, 1, 1, "c.fq_nmod_poly_mullow_KS", "op2"], [48, 1, 1, "c.fq_nmod_poly_mullow_KS", "rop"]], "fq_nmod_poly_mullow_classical": [[48, 1, 1, "c.fq_nmod_poly_mullow_classical", "ctx"], [48, 1, 1, "c.fq_nmod_poly_mullow_classical", "n"], [48, 1, 1, "c.fq_nmod_poly_mullow_classical", "op1"], [48, 1, 1, "c.fq_nmod_poly_mullow_classical", "op2"], [48, 1, 1, "c.fq_nmod_poly_mullow_classical", "rop"]], "fq_nmod_poly_mullow_univariate": [[48, 1, 1, "c.fq_nmod_poly_mullow_univariate", "ctx"], [48, 1, 1, "c.fq_nmod_poly_mullow_univariate", "n"], [48, 1, 1, "c.fq_nmod_poly_mullow_univariate", "op1"], [48, 1, 1, "c.fq_nmod_poly_mullow_univariate", "op2"], [48, 1, 1, "c.fq_nmod_poly_mullow_univariate", "rop"]], "fq_nmod_poly_mulmod": [[48, 1, 1, "c.fq_nmod_poly_mulmod", "ctx"], [48, 1, 1, "c.fq_nmod_poly_mulmod", "f"], [48, 1, 1, "c.fq_nmod_poly_mulmod", "poly1"], [48, 1, 1, "c.fq_nmod_poly_mulmod", "poly2"], [48, 1, 1, "c.fq_nmod_poly_mulmod", "res"]], "fq_nmod_poly_mulmod_preinv": [[48, 1, 1, "c.fq_nmod_poly_mulmod_preinv", "ctx"], [48, 1, 1, "c.fq_nmod_poly_mulmod_preinv", "f"], [48, 1, 1, "c.fq_nmod_poly_mulmod_preinv", "finv"], [48, 1, 1, "c.fq_nmod_poly_mulmod_preinv", "poly1"], [48, 1, 1, "c.fq_nmod_poly_mulmod_preinv", "poly2"], [48, 1, 1, "c.fq_nmod_poly_mulmod_preinv", "res"]], "fq_nmod_poly_neg": [[48, 1, 1, "c.fq_nmod_poly_neg", "ctx"], [48, 1, 1, "c.fq_nmod_poly_neg", "poly"], [48, 1, 1, "c.fq_nmod_poly_neg", "res"]], "fq_nmod_poly_one": [[48, 1, 1, "c.fq_nmod_poly_one", "ctx"], [48, 1, 1, "c.fq_nmod_poly_one", "poly"]], "fq_nmod_poly_pow": [[48, 1, 1, "c.fq_nmod_poly_pow", "ctx"], [48, 1, 1, "c.fq_nmod_poly_pow", "e"], [48, 1, 1, "c.fq_nmod_poly_pow", "op"], [48, 1, 1, "c.fq_nmod_poly_pow", "rop"]], "fq_nmod_poly_pow_trunc": [[48, 1, 1, "c.fq_nmod_poly_pow_trunc", "ctx"], [48, 1, 1, "c.fq_nmod_poly_pow_trunc", "e"], [48, 1, 1, "c.fq_nmod_poly_pow_trunc", "poly"], [48, 1, 1, "c.fq_nmod_poly_pow_trunc", "res"], [48, 1, 1, "c.fq_nmod_poly_pow_trunc", "trunc"]], "fq_nmod_poly_pow_trunc_binexp": [[48, 1, 1, "c.fq_nmod_poly_pow_trunc_binexp", "ctx"], [48, 1, 1, "c.fq_nmod_poly_pow_trunc_binexp", "e"], [48, 1, 1, "c.fq_nmod_poly_pow_trunc_binexp", "poly"], [48, 1, 1, "c.fq_nmod_poly_pow_trunc_binexp", "res"], [48, 1, 1, "c.fq_nmod_poly_pow_trunc_binexp", "trunc"]], "fq_nmod_poly_powmod_fmpz_binexp": [[48, 1, 1, "c.fq_nmod_poly_powmod_fmpz_binexp", "ctx"], [48, 1, 1, "c.fq_nmod_poly_powmod_fmpz_binexp", "e"], [48, 1, 1, "c.fq_nmod_poly_powmod_fmpz_binexp", "f"], [48, 1, 1, "c.fq_nmod_poly_powmod_fmpz_binexp", "poly"], [48, 1, 1, "c.fq_nmod_poly_powmod_fmpz_binexp", "res"]], "fq_nmod_poly_powmod_fmpz_binexp_preinv": [[48, 1, 1, "c.fq_nmod_poly_powmod_fmpz_binexp_preinv", "ctx"], [48, 1, 1, "c.fq_nmod_poly_powmod_fmpz_binexp_preinv", "e"], [48, 1, 1, "c.fq_nmod_poly_powmod_fmpz_binexp_preinv", "f"], [48, 1, 1, "c.fq_nmod_poly_powmod_fmpz_binexp_preinv", "finv"], [48, 1, 1, "c.fq_nmod_poly_powmod_fmpz_binexp_preinv", "poly"], [48, 1, 1, "c.fq_nmod_poly_powmod_fmpz_binexp_preinv", "res"]], "fq_nmod_poly_powmod_fmpz_sliding_preinv": [[48, 1, 1, "c.fq_nmod_poly_powmod_fmpz_sliding_preinv", "ctx"], [48, 1, 1, "c.fq_nmod_poly_powmod_fmpz_sliding_preinv", "e"], [48, 1, 1, "c.fq_nmod_poly_powmod_fmpz_sliding_preinv", "f"], [48, 1, 1, "c.fq_nmod_poly_powmod_fmpz_sliding_preinv", "finv"], [48, 1, 1, "c.fq_nmod_poly_powmod_fmpz_sliding_preinv", "k"], [48, 1, 1, "c.fq_nmod_poly_powmod_fmpz_sliding_preinv", "poly"], [48, 1, 1, "c.fq_nmod_poly_powmod_fmpz_sliding_preinv", "res"]], "fq_nmod_poly_powmod_ui_binexp": [[48, 1, 1, "c.fq_nmod_poly_powmod_ui_binexp", "ctx"], [48, 1, 1, "c.fq_nmod_poly_powmod_ui_binexp", "e"], [48, 1, 1, "c.fq_nmod_poly_powmod_ui_binexp", "f"], [48, 1, 1, "c.fq_nmod_poly_powmod_ui_binexp", "poly"], [48, 1, 1, "c.fq_nmod_poly_powmod_ui_binexp", "res"]], "fq_nmod_poly_powmod_ui_binexp_preinv": [[48, 1, 1, "c.fq_nmod_poly_powmod_ui_binexp_preinv", "ctx"], [48, 1, 1, "c.fq_nmod_poly_powmod_ui_binexp_preinv", "e"], [48, 1, 1, "c.fq_nmod_poly_powmod_ui_binexp_preinv", "f"], [48, 1, 1, "c.fq_nmod_poly_powmod_ui_binexp_preinv", "finv"], [48, 1, 1, "c.fq_nmod_poly_powmod_ui_binexp_preinv", "poly"], [48, 1, 1, "c.fq_nmod_poly_powmod_ui_binexp_preinv", "res"]], "fq_nmod_poly_powmod_x_fmpz_preinv": [[48, 1, 1, "c.fq_nmod_poly_powmod_x_fmpz_preinv", "ctx"], [48, 1, 1, "c.fq_nmod_poly_powmod_x_fmpz_preinv", "e"], [48, 1, 1, "c.fq_nmod_poly_powmod_x_fmpz_preinv", "f"], [48, 1, 1, "c.fq_nmod_poly_powmod_x_fmpz_preinv", "finv"], [48, 1, 1, "c.fq_nmod_poly_powmod_x_fmpz_preinv", "res"]], "fq_nmod_poly_precompute_matrix": [[48, 1, 1, "c.fq_nmod_poly_precompute_matrix", "A"], [48, 1, 1, "c.fq_nmod_poly_precompute_matrix", "ctx"], [48, 1, 1, "c.fq_nmod_poly_precompute_matrix", "f"], [48, 1, 1, "c.fq_nmod_poly_precompute_matrix", "g"], [48, 1, 1, "c.fq_nmod_poly_precompute_matrix", "ginv"]], "fq_nmod_poly_print": [[48, 1, 1, "c.fq_nmod_poly_print", "ctx"], [48, 1, 1, "c.fq_nmod_poly_print", "poly"]], "fq_nmod_poly_print_pretty": [[48, 1, 1, "c.fq_nmod_poly_print_pretty", "ctx"], [48, 1, 1, "c.fq_nmod_poly_print_pretty", "poly"], [48, 1, 1, "c.fq_nmod_poly_print_pretty", "x"]], "fq_nmod_poly_randtest": [[48, 1, 1, "c.fq_nmod_poly_randtest", "ctx"], [48, 1, 1, "c.fq_nmod_poly_randtest", "f"], [48, 1, 1, "c.fq_nmod_poly_randtest", "len"], [48, 1, 1, "c.fq_nmod_poly_randtest", "state"]], "fq_nmod_poly_randtest_irreducible": [[48, 1, 1, "c.fq_nmod_poly_randtest_irreducible", "ctx"], [48, 1, 1, "c.fq_nmod_poly_randtest_irreducible", "f"], [48, 1, 1, "c.fq_nmod_poly_randtest_irreducible", "len"], [48, 1, 1, "c.fq_nmod_poly_randtest_irreducible", "state"]], "fq_nmod_poly_randtest_monic": [[48, 1, 1, "c.fq_nmod_poly_randtest_monic", "ctx"], [48, 1, 1, "c.fq_nmod_poly_randtest_monic", "f"], [48, 1, 1, "c.fq_nmod_poly_randtest_monic", "len"], [48, 1, 1, "c.fq_nmod_poly_randtest_monic", "state"]], "fq_nmod_poly_randtest_not_zero": [[48, 1, 1, "c.fq_nmod_poly_randtest_not_zero", "ctx"], [48, 1, 1, "c.fq_nmod_poly_randtest_not_zero", "f"], [48, 1, 1, "c.fq_nmod_poly_randtest_not_zero", "len"], [48, 1, 1, "c.fq_nmod_poly_randtest_not_zero", "state"]], "fq_nmod_poly_realloc": [[48, 1, 1, "c.fq_nmod_poly_realloc", "alloc"], [48, 1, 1, "c.fq_nmod_poly_realloc", "ctx"], [48, 1, 1, "c.fq_nmod_poly_realloc", "poly"]], "fq_nmod_poly_rem": [[48, 1, 1, "c.fq_nmod_poly_rem", "A"], [48, 1, 1, "c.fq_nmod_poly_rem", "B"], [48, 1, 1, "c.fq_nmod_poly_rem", "R"], [48, 1, 1, "c.fq_nmod_poly_rem", "ctx"]], "fq_nmod_poly_remove": [[49, 1, 1, "c.fq_nmod_poly_remove", "ctx"], [49, 1, 1, "c.fq_nmod_poly_remove", "f"], [49, 1, 1, "c.fq_nmod_poly_remove", "p"]], "fq_nmod_poly_reverse": [[48, 1, 1, "c.fq_nmod_poly_reverse", "ctx"], [48, 1, 1, "c.fq_nmod_poly_reverse", "input"], [48, 1, 1, "c.fq_nmod_poly_reverse", "m"], [48, 1, 1, "c.fq_nmod_poly_reverse", "output"]], "fq_nmod_poly_roots": [[49, 1, 1, "c.fq_nmod_poly_roots", "ctx"], [49, 1, 1, "c.fq_nmod_poly_roots", "f"], [49, 1, 1, "c.fq_nmod_poly_roots", "r"], [49, 1, 1, "c.fq_nmod_poly_roots", "with_multiplicity"]], "fq_nmod_poly_scalar_addmul_fq_nmod": [[48, 1, 1, "c.fq_nmod_poly_scalar_addmul_fq_nmod", "ctx"], [48, 1, 1, "c.fq_nmod_poly_scalar_addmul_fq_nmod", "op"], [48, 1, 1, "c.fq_nmod_poly_scalar_addmul_fq_nmod", "rop"], [48, 1, 1, "c.fq_nmod_poly_scalar_addmul_fq_nmod", "x"]], "fq_nmod_poly_scalar_div_fq": [[48, 1, 1, "c.fq_nmod_poly_scalar_div_fq", "ctx"], [48, 1, 1, "c.fq_nmod_poly_scalar_div_fq", "op"], [48, 1, 1, "c.fq_nmod_poly_scalar_div_fq", "rop"], [48, 1, 1, "c.fq_nmod_poly_scalar_div_fq", "x"]], "fq_nmod_poly_scalar_mul_fq_nmod": [[48, 1, 1, "c.fq_nmod_poly_scalar_mul_fq_nmod", "ctx"], [48, 1, 1, "c.fq_nmod_poly_scalar_mul_fq_nmod", "op"], [48, 1, 1, "c.fq_nmod_poly_scalar_mul_fq_nmod", "rop"], [48, 1, 1, "c.fq_nmod_poly_scalar_mul_fq_nmod", "x"]], "fq_nmod_poly_scalar_submul_fq_nmod": [[48, 1, 1, "c.fq_nmod_poly_scalar_submul_fq_nmod", "ctx"], [48, 1, 1, "c.fq_nmod_poly_scalar_submul_fq_nmod", "op"], [48, 1, 1, "c.fq_nmod_poly_scalar_submul_fq_nmod", "rop"], [48, 1, 1, "c.fq_nmod_poly_scalar_submul_fq_nmod", "x"]], "fq_nmod_poly_set": [[48, 1, 1, "c.fq_nmod_poly_set", "ctx"], [48, 1, 1, "c.fq_nmod_poly_set", "poly1"], [48, 1, 1, "c.fq_nmod_poly_set", "poly2"]], "fq_nmod_poly_set_coeff": [[48, 1, 1, "c.fq_nmod_poly_set_coeff", "ctx"], [48, 1, 1, "c.fq_nmod_poly_set_coeff", "n"], [48, 1, 1, "c.fq_nmod_poly_set_coeff", "poly"], [48, 1, 1, "c.fq_nmod_poly_set_coeff", "x"]], "fq_nmod_poly_set_coeff_fmpz": [[48, 1, 1, "c.fq_nmod_poly_set_coeff_fmpz", "ctx"], [48, 1, 1, "c.fq_nmod_poly_set_coeff_fmpz", "n"], [48, 1, 1, "c.fq_nmod_poly_set_coeff_fmpz", "poly"], [48, 1, 1, "c.fq_nmod_poly_set_coeff_fmpz", "x"]], "fq_nmod_poly_set_fmpz_mod_poly": [[48, 1, 1, "c.fq_nmod_poly_set_fmpz_mod_poly", "ctx"], [48, 1, 1, "c.fq_nmod_poly_set_fmpz_mod_poly", "op"], [48, 1, 1, "c.fq_nmod_poly_set_fmpz_mod_poly", "rop"]], "fq_nmod_poly_set_fq_nmod": [[48, 1, 1, "c.fq_nmod_poly_set_fq_nmod", "c"], [48, 1, 1, "c.fq_nmod_poly_set_fq_nmod", "ctx"], [48, 1, 1, "c.fq_nmod_poly_set_fq_nmod", "poly"]], "fq_nmod_poly_set_nmod_poly": [[48, 1, 1, "c.fq_nmod_poly_set_nmod_poly", "ctx"], [48, 1, 1, "c.fq_nmod_poly_set_nmod_poly", "op"], [48, 1, 1, "c.fq_nmod_poly_set_nmod_poly", "rop"]], "fq_nmod_poly_set_trunc": [[48, 1, 1, "c.fq_nmod_poly_set_trunc", "ctx"], [48, 1, 1, "c.fq_nmod_poly_set_trunc", "newlen"], [48, 1, 1, "c.fq_nmod_poly_set_trunc", "poly1"], [48, 1, 1, "c.fq_nmod_poly_set_trunc", "poly2"]], "fq_nmod_poly_shift_left": [[48, 1, 1, "c.fq_nmod_poly_shift_left", "ctx"], [48, 1, 1, "c.fq_nmod_poly_shift_left", "n"], [48, 1, 1, "c.fq_nmod_poly_shift_left", "op"], [48, 1, 1, "c.fq_nmod_poly_shift_left", "rop"]], "fq_nmod_poly_shift_right": [[48, 1, 1, "c.fq_nmod_poly_shift_right", "ctx"], [48, 1, 1, "c.fq_nmod_poly_shift_right", "n"], [48, 1, 1, "c.fq_nmod_poly_shift_right", "op"], [48, 1, 1, "c.fq_nmod_poly_shift_right", "rop"]], "fq_nmod_poly_sqr": [[48, 1, 1, "c.fq_nmod_poly_sqr", "ctx"], [48, 1, 1, "c.fq_nmod_poly_sqr", "op"], [48, 1, 1, "c.fq_nmod_poly_sqr", "rop"]], "fq_nmod_poly_sqr_KS": [[48, 1, 1, "c.fq_nmod_poly_sqr_KS", "ctx"], [48, 1, 1, "c.fq_nmod_poly_sqr_KS", "op"], [48, 1, 1, "c.fq_nmod_poly_sqr_KS", "rop"]], "fq_nmod_poly_sqr_classical": [[48, 1, 1, "c.fq_nmod_poly_sqr_classical", "ctx"], [48, 1, 1, "c.fq_nmod_poly_sqr_classical", "op"], [48, 1, 1, "c.fq_nmod_poly_sqr_classical", "rop"]], "fq_nmod_poly_sqrt": [[48, 1, 1, "c.fq_nmod_poly_sqrt", "mod"], [48, 1, 1, "c.fq_nmod_poly_sqrt", "p"], [48, 1, 1, "c.fq_nmod_poly_sqrt", "s"]], "fq_nmod_poly_sqrt_series": [[48, 1, 1, "c.fq_nmod_poly_sqrt_series", "ctx"], [48, 1, 1, "c.fq_nmod_poly_sqrt_series", "g"], [48, 1, 1, "c.fq_nmod_poly_sqrt_series", "h"], [48, 1, 1, "c.fq_nmod_poly_sqrt_series", "n"]], "fq_nmod_poly_sub": [[48, 1, 1, "c.fq_nmod_poly_sub", "ctx"], [48, 1, 1, "c.fq_nmod_poly_sub", "poly1"], [48, 1, 1, "c.fq_nmod_poly_sub", "poly2"], [48, 1, 1, "c.fq_nmod_poly_sub", "res"]], "fq_nmod_poly_sub_series": [[48, 1, 1, "c.fq_nmod_poly_sub_series", "ctx"], [48, 1, 1, "c.fq_nmod_poly_sub_series", "n"], [48, 1, 1, "c.fq_nmod_poly_sub_series", "poly1"], [48, 1, 1, "c.fq_nmod_poly_sub_series", "poly2"], [48, 1, 1, "c.fq_nmod_poly_sub_series", "res"]], "fq_nmod_poly_swap": [[48, 1, 1, "c.fq_nmod_poly_swap", "ctx"], [48, 1, 1, "c.fq_nmod_poly_swap", "op1"], [48, 1, 1, "c.fq_nmod_poly_swap", "op2"]], "fq_nmod_poly_truncate": [[48, 1, 1, "c.fq_nmod_poly_truncate", "ctx"], [48, 1, 1, "c.fq_nmod_poly_truncate", "newlen"], [48, 1, 1, "c.fq_nmod_poly_truncate", "poly"]], "fq_nmod_poly_xgcd": [[48, 1, 1, "c.fq_nmod_poly_xgcd", "A"], [48, 1, 1, "c.fq_nmod_poly_xgcd", "B"], [48, 1, 1, "c.fq_nmod_poly_xgcd", "G"], [48, 1, 1, "c.fq_nmod_poly_xgcd", "S"], [48, 1, 1, "c.fq_nmod_poly_xgcd", "T"], [48, 1, 1, "c.fq_nmod_poly_xgcd", "ctx"]], "fq_nmod_poly_xgcd_euclidean": [[48, 1, 1, "c.fq_nmod_poly_xgcd_euclidean", "A"], [48, 1, 1, "c.fq_nmod_poly_xgcd_euclidean", "B"], [48, 1, 1, "c.fq_nmod_poly_xgcd_euclidean", "G"], [48, 1, 1, "c.fq_nmod_poly_xgcd_euclidean", "S"], [48, 1, 1, "c.fq_nmod_poly_xgcd_euclidean", "T"], [48, 1, 1, "c.fq_nmod_poly_xgcd_euclidean", "ctx"]], "fq_nmod_poly_xgcd_euclidean_f": [[48, 1, 1, "c.fq_nmod_poly_xgcd_euclidean_f", "A"], [48, 1, 1, "c.fq_nmod_poly_xgcd_euclidean_f", "B"], [48, 1, 1, "c.fq_nmod_poly_xgcd_euclidean_f", "G"], [48, 1, 1, "c.fq_nmod_poly_xgcd_euclidean_f", "S"], [48, 1, 1, "c.fq_nmod_poly_xgcd_euclidean_f", "T"], [48, 1, 1, "c.fq_nmod_poly_xgcd_euclidean_f", "ctx"], [48, 1, 1, "c.fq_nmod_poly_xgcd_euclidean_f", "f"]], "fq_nmod_poly_zero": [[48, 1, 1, "c.fq_nmod_poly_zero", "ctx"], [48, 1, 1, "c.fq_nmod_poly_zero", "poly"]], "fq_nmod_pow": [[43, 1, 1, "c.fq_nmod_pow", "ctx"], [43, 1, 1, "c.fq_nmod_pow", "e"], [43, 1, 1, "c.fq_nmod_pow", "op"], [43, 1, 1, "c.fq_nmod_pow", "rop"]], "fq_nmod_pow_ui": [[43, 1, 1, "c.fq_nmod_pow_ui", "ctx"], [43, 1, 1, "c.fq_nmod_pow_ui", "e"], [43, 1, 1, "c.fq_nmod_pow_ui", "op"], [43, 1, 1, "c.fq_nmod_pow_ui", "rop"]], "fq_nmod_print": [[43, 1, 1, "c.fq_nmod_print", "ctx"], [43, 1, 1, "c.fq_nmod_print", "op"]], "fq_nmod_print_pretty": [[43, 1, 1, "c.fq_nmod_print_pretty", "ctx"], [43, 1, 1, "c.fq_nmod_print_pretty", "op"]], "fq_nmod_pth_root": [[43, 1, 1, "c.fq_nmod_pth_root", "ctx"], [43, 1, 1, "c.fq_nmod_pth_root", "op1"], [43, 1, 1, "c.fq_nmod_pth_root", "rop"]], "fq_nmod_rand": [[43, 1, 1, "c.fq_nmod_rand", "ctx"], [43, 1, 1, "c.fq_nmod_rand", "rop"], [43, 1, 1, "c.fq_nmod_rand", "state"]], "fq_nmod_rand_not_zero": [[43, 1, 1, "c.fq_nmod_rand_not_zero", "ctx"], [43, 1, 1, "c.fq_nmod_rand_not_zero", "rop"], [43, 1, 1, "c.fq_nmod_rand_not_zero", "state"]], "fq_nmod_randtest": [[43, 1, 1, "c.fq_nmod_randtest", "ctx"], [43, 1, 1, "c.fq_nmod_randtest", "rop"], [43, 1, 1, "c.fq_nmod_randtest", "state"]], "fq_nmod_randtest_dense": [[43, 1, 1, "c.fq_nmod_randtest_dense", "ctx"], [43, 1, 1, "c.fq_nmod_randtest_dense", "rop"], [43, 1, 1, "c.fq_nmod_randtest_dense", "state"]], "fq_nmod_randtest_not_zero": [[43, 1, 1, "c.fq_nmod_randtest_not_zero", "ctx"], [43, 1, 1, "c.fq_nmod_randtest_not_zero", "rop"], [43, 1, 1, "c.fq_nmod_randtest_not_zero", "state"]], "fq_nmod_reduce": [[43, 1, 1, "c.fq_nmod_reduce", "ctx"], [43, 1, 1, "c.fq_nmod_reduce", "rop"]], "fq_nmod_set": [[43, 1, 1, "c.fq_nmod_set", "ctx"], [43, 1, 1, "c.fq_nmod_set", "op"], [43, 1, 1, "c.fq_nmod_set", "rop"]], "fq_nmod_set_fmpz": [[43, 1, 1, "c.fq_nmod_set_fmpz", "ctx"], [43, 1, 1, "c.fq_nmod_set_fmpz", "rop"], [43, 1, 1, "c.fq_nmod_set_fmpz", "x"]], "fq_nmod_set_nmod_mat": [[43, 1, 1, "c.fq_nmod_set_nmod_mat", "a"], [43, 1, 1, "c.fq_nmod_set_nmod_mat", "col"], [43, 1, 1, "c.fq_nmod_set_nmod_mat", "ctx"]], "fq_nmod_set_nmod_poly": [[43, 1, 1, "c.fq_nmod_set_nmod_poly", "a"], [43, 1, 1, "c.fq_nmod_set_nmod_poly", "b"], [43, 1, 1, "c.fq_nmod_set_nmod_poly", "ctx"]], "fq_nmod_set_si": [[43, 1, 1, "c.fq_nmod_set_si", "ctx"], [43, 1, 1, "c.fq_nmod_set_si", "rop"], [43, 1, 1, "c.fq_nmod_set_si", "x"]], "fq_nmod_set_ui": [[43, 1, 1, "c.fq_nmod_set_ui", "ctx"], [43, 1, 1, "c.fq_nmod_set_ui", "rop"], [43, 1, 1, "c.fq_nmod_set_ui", "x"]], "fq_nmod_sqr": [[43, 1, 1, "c.fq_nmod_sqr", "ctx"], [43, 1, 1, "c.fq_nmod_sqr", "op"], [43, 1, 1, "c.fq_nmod_sqr", "rop"]], "fq_nmod_sqrt": [[43, 1, 1, "c.fq_nmod_sqrt", "ctx"], [43, 1, 1, "c.fq_nmod_sqrt", "op1"], [43, 1, 1, "c.fq_nmod_sqrt", "rop"]], "fq_nmod_sub": [[43, 1, 1, "c.fq_nmod_sub", "ctx"], [43, 1, 1, "c.fq_nmod_sub", "op1"], [43, 1, 1, "c.fq_nmod_sub", "op2"], [43, 1, 1, "c.fq_nmod_sub", "rop"]], "fq_nmod_sub_one": [[43, 1, 1, "c.fq_nmod_sub_one", "ctx"], [43, 1, 1, "c.fq_nmod_sub_one", "op1"], [43, 1, 1, "c.fq_nmod_sub_one", "rop"]], "fq_nmod_swap": [[43, 1, 1, "c.fq_nmod_swap", "ctx"], [43, 1, 1, "c.fq_nmod_swap", "op1"], [43, 1, 1, "c.fq_nmod_swap", "op2"]], "fq_nmod_trace": [[43, 1, 1, "c.fq_nmod_trace", "ctx"], [43, 1, 1, "c.fq_nmod_trace", "op"], [43, 1, 1, "c.fq_nmod_trace", "rop"]], "fq_nmod_zero": [[43, 1, 1, "c.fq_nmod_zero", "ctx"], [43, 1, 1, "c.fq_nmod_zero", "rop"]], "fq_norm": [[36, 1, 1, "c.fq_norm", "ctx"], [36, 1, 1, "c.fq_norm", "op"], [36, 1, 1, "c.fq_norm", "rop"]], "fq_one": [[36, 1, 1, "c.fq_one", "ctx"], [36, 1, 1, "c.fq_one", "rop"]], "fq_poly_add": [[51, 1, 1, "c.fq_poly_add", "ctx"], [51, 1, 1, "c.fq_poly_add", "poly1"], [51, 1, 1, "c.fq_poly_add", "poly2"], [51, 1, 1, "c.fq_poly_add", "res"]], "fq_poly_add_series": [[51, 1, 1, "c.fq_poly_add_series", "ctx"], [51, 1, 1, "c.fq_poly_add_series", "n"], [51, 1, 1, "c.fq_poly_add_series", "poly1"], [51, 1, 1, "c.fq_poly_add_series", "poly2"], [51, 1, 1, "c.fq_poly_add_series", "res"]], "fq_poly_add_si": [[51, 1, 1, "c.fq_poly_add_si", "c"], [51, 1, 1, "c.fq_poly_add_si", "ctx"], [51, 1, 1, "c.fq_poly_add_si", "poly1"], [51, 1, 1, "c.fq_poly_add_si", "res"]], "fq_poly_clear": [[51, 1, 1, "c.fq_poly_clear", "ctx"], [51, 1, 1, "c.fq_poly_clear", "poly"]], "fq_poly_compose": [[51, 1, 1, "c.fq_poly_compose", "ctx"], [51, 1, 1, "c.fq_poly_compose", "op1"], [51, 1, 1, "c.fq_poly_compose", "op2"], [51, 1, 1, "c.fq_poly_compose", "rop"]], "fq_poly_compose_divconquer": [[51, 1, 1, "c.fq_poly_compose_divconquer", "ctx"], [51, 1, 1, "c.fq_poly_compose_divconquer", "op1"], [51, 1, 1, "c.fq_poly_compose_divconquer", "op2"], [51, 1, 1, "c.fq_poly_compose_divconquer", "rop"]], "fq_poly_compose_horner": [[51, 1, 1, "c.fq_poly_compose_horner", "ctx"], [51, 1, 1, "c.fq_poly_compose_horner", "op1"], [51, 1, 1, "c.fq_poly_compose_horner", "op2"], [51, 1, 1, "c.fq_poly_compose_horner", "rop"]], "fq_poly_compose_mod": [[51, 1, 1, "c.fq_poly_compose_mod", "ctx"], [51, 1, 1, "c.fq_poly_compose_mod", "f"], [51, 1, 1, "c.fq_poly_compose_mod", "g"], [51, 1, 1, "c.fq_poly_compose_mod", "h"], [51, 1, 1, "c.fq_poly_compose_mod", "res"]], "fq_poly_compose_mod_brent_kung": [[51, 1, 1, "c.fq_poly_compose_mod_brent_kung", "ctx"], [51, 1, 1, "c.fq_poly_compose_mod_brent_kung", "f"], [51, 1, 1, "c.fq_poly_compose_mod_brent_kung", "g"], [51, 1, 1, "c.fq_poly_compose_mod_brent_kung", "h"], [51, 1, 1, "c.fq_poly_compose_mod_brent_kung", "res"]], "fq_poly_compose_mod_brent_kung_precomp_preinv": [[51, 1, 1, "c.fq_poly_compose_mod_brent_kung_precomp_preinv", "A"], [51, 1, 1, "c.fq_poly_compose_mod_brent_kung_precomp_preinv", "ctx"], [51, 1, 1, "c.fq_poly_compose_mod_brent_kung_precomp_preinv", "f"], [51, 1, 1, "c.fq_poly_compose_mod_brent_kung_precomp_preinv", "h"], [51, 1, 1, "c.fq_poly_compose_mod_brent_kung_precomp_preinv", "hinv"], [51, 1, 1, "c.fq_poly_compose_mod_brent_kung_precomp_preinv", "res"]], "fq_poly_compose_mod_brent_kung_preinv": [[51, 1, 1, "c.fq_poly_compose_mod_brent_kung_preinv", "ctx"], [51, 1, 1, "c.fq_poly_compose_mod_brent_kung_preinv", "f"], [51, 1, 1, "c.fq_poly_compose_mod_brent_kung_preinv", "g"], [51, 1, 1, "c.fq_poly_compose_mod_brent_kung_preinv", "h"], [51, 1, 1, "c.fq_poly_compose_mod_brent_kung_preinv", "hinv"], [51, 1, 1, "c.fq_poly_compose_mod_brent_kung_preinv", "res"]], "fq_poly_compose_mod_horner": [[51, 1, 1, "c.fq_poly_compose_mod_horner", "ctx"], [51, 1, 1, "c.fq_poly_compose_mod_horner", "f"], [51, 1, 1, "c.fq_poly_compose_mod_horner", "g"], [51, 1, 1, "c.fq_poly_compose_mod_horner", "h"], [51, 1, 1, "c.fq_poly_compose_mod_horner", "res"]], "fq_poly_compose_mod_horner_preinv": [[51, 1, 1, "c.fq_poly_compose_mod_horner_preinv", "ctx"], [51, 1, 1, "c.fq_poly_compose_mod_horner_preinv", "f"], [51, 1, 1, "c.fq_poly_compose_mod_horner_preinv", "g"], [51, 1, 1, "c.fq_poly_compose_mod_horner_preinv", "h"], [51, 1, 1, "c.fq_poly_compose_mod_horner_preinv", "hinv"], [51, 1, 1, "c.fq_poly_compose_mod_horner_preinv", "res"]], "fq_poly_compose_mod_preinv": [[51, 1, 1, "c.fq_poly_compose_mod_preinv", "ctx"], [51, 1, 1, "c.fq_poly_compose_mod_preinv", "f"], [51, 1, 1, "c.fq_poly_compose_mod_preinv", "g"], [51, 1, 1, "c.fq_poly_compose_mod_preinv", "h"], [51, 1, 1, "c.fq_poly_compose_mod_preinv", "hinv"], [51, 1, 1, "c.fq_poly_compose_mod_preinv", "res"]], "fq_poly_deflate": [[51, 1, 1, "c.fq_poly_deflate", "ctx"], [51, 1, 1, "c.fq_poly_deflate", "deflation"], [51, 1, 1, "c.fq_poly_deflate", "input"], [51, 1, 1, "c.fq_poly_deflate", "result"]], "fq_poly_deflation": [[51, 1, 1, "c.fq_poly_deflation", "ctx"], [51, 1, 1, "c.fq_poly_deflation", "input"]], "fq_poly_degree": [[51, 1, 1, "c.fq_poly_degree", "ctx"], [51, 1, 1, "c.fq_poly_degree", "poly"]], "fq_poly_derivative": [[51, 1, 1, "c.fq_poly_derivative", "ctx"], [51, 1, 1, "c.fq_poly_derivative", "op"], [51, 1, 1, "c.fq_poly_derivative", "rop"]], "fq_poly_div_basecase": [[51, 1, 1, "c.fq_poly_div_basecase", "A"], [51, 1, 1, "c.fq_poly_div_basecase", "B"], [51, 1, 1, "c.fq_poly_div_basecase", "Q"], [51, 1, 1, "c.fq_poly_div_basecase", "ctx"]], "fq_poly_div_newton_n_preinv": [[51, 1, 1, "c.fq_poly_div_newton_n_preinv", "A"], [51, 1, 1, "c.fq_poly_div_newton_n_preinv", "B"], [51, 1, 1, "c.fq_poly_div_newton_n_preinv", "Binv"], [51, 1, 1, "c.fq_poly_div_newton_n_preinv", "Q"], [51, 1, 1, "c.fq_poly_div_newton_n_preinv", "ctx"]], "fq_poly_div_series": [[51, 1, 1, "c.fq_poly_div_series", "A"], [51, 1, 1, "c.fq_poly_div_series", "B"], [51, 1, 1, "c.fq_poly_div_series", "Q"], [51, 1, 1, "c.fq_poly_div_series", "ctx"], [51, 1, 1, "c.fq_poly_div_series", "n"]], "fq_poly_divides": [[51, 1, 1, "c.fq_poly_divides", "A"], [51, 1, 1, "c.fq_poly_divides", "B"], [51, 1, 1, "c.fq_poly_divides", "Q"], [51, 1, 1, "c.fq_poly_divides", "ctx"]], "fq_poly_divrem": [[51, 1, 1, "c.fq_poly_divrem", "A"], [51, 1, 1, "c.fq_poly_divrem", "B"], [51, 1, 1, "c.fq_poly_divrem", "Q"], [51, 1, 1, "c.fq_poly_divrem", "R"], [51, 1, 1, "c.fq_poly_divrem", "ctx"]], "fq_poly_divrem_basecase": [[51, 1, 1, "c.fq_poly_divrem_basecase", "A"], [51, 1, 1, "c.fq_poly_divrem_basecase", "B"], [51, 1, 1, "c.fq_poly_divrem_basecase", "Q"], [51, 1, 1, "c.fq_poly_divrem_basecase", "R"], [51, 1, 1, "c.fq_poly_divrem_basecase", "ctx"]], "fq_poly_divrem_divconquer": [[51, 1, 1, "c.fq_poly_divrem_divconquer", "A"], [51, 1, 1, "c.fq_poly_divrem_divconquer", "B"], [51, 1, 1, "c.fq_poly_divrem_divconquer", "Q"], [51, 1, 1, "c.fq_poly_divrem_divconquer", "R"], [51, 1, 1, "c.fq_poly_divrem_divconquer", "ctx"]], "fq_poly_divrem_f": [[51, 1, 1, "c.fq_poly_divrem_f", "A"], [51, 1, 1, "c.fq_poly_divrem_f", "B"], [51, 1, 1, "c.fq_poly_divrem_f", "Q"], [51, 1, 1, "c.fq_poly_divrem_f", "R"], [51, 1, 1, "c.fq_poly_divrem_f", "ctx"], [51, 1, 1, "c.fq_poly_divrem_f", "f"]], "fq_poly_divrem_newton_preinv": [[51, 1, 1, "c.fq_poly_divrem_newton_preinv", "A"], [51, 1, 1, "c.fq_poly_divrem_newton_preinv", "B"], [51, 1, 1, "c.fq_poly_divrem_newton_preinv", "Binv"], [51, 1, 1, "c.fq_poly_divrem_newton_preinv", "Q"], [51, 1, 1, "c.fq_poly_divrem_newton_preinv", "R"], [51, 1, 1, "c.fq_poly_divrem_newton_preinv", "ctx"]], "fq_poly_equal": [[51, 1, 1, "c.fq_poly_equal", "ctx"], [51, 1, 1, "c.fq_poly_equal", "poly1"], [51, 1, 1, "c.fq_poly_equal", "poly2"]], "fq_poly_equal_fq": [[51, 1, 1, "c.fq_poly_equal_fq", "c"], [51, 1, 1, "c.fq_poly_equal_fq", "ctx"], [51, 1, 1, "c.fq_poly_equal_fq", "poly"]], "fq_poly_equal_trunc": [[51, 1, 1, "c.fq_poly_equal_trunc", "ctx"], [51, 1, 1, "c.fq_poly_equal_trunc", "n"], [51, 1, 1, "c.fq_poly_equal_trunc", "poly1"], [51, 1, 1, "c.fq_poly_equal_trunc", "poly2"]], "fq_poly_evaluate_fq": [[51, 1, 1, "c.fq_poly_evaluate_fq", "a"], [51, 1, 1, "c.fq_poly_evaluate_fq", "ctx"], [51, 1, 1, "c.fq_poly_evaluate_fq", "f"], [51, 1, 1, "c.fq_poly_evaluate_fq", "rop"]], "fq_poly_factor": [[52, 1, 1, "c.fq_poly_factor", "ctx"], [52, 1, 1, "c.fq_poly_factor", "f"], [52, 1, 1, "c.fq_poly_factor", "lead"], [52, 1, 1, "c.fq_poly_factor", "res"]], "fq_poly_factor_berlekamp": [[52, 1, 1, "c.fq_poly_factor_berlekamp", "ctx"], [52, 1, 1, "c.fq_poly_factor_berlekamp", "f"], [52, 1, 1, "c.fq_poly_factor_berlekamp", "factors"]], "fq_poly_factor_cantor_zassenhaus": [[52, 1, 1, "c.fq_poly_factor_cantor_zassenhaus", "ctx"], [52, 1, 1, "c.fq_poly_factor_cantor_zassenhaus", "f"], [52, 1, 1, "c.fq_poly_factor_cantor_zassenhaus", "res"]], "fq_poly_factor_clear": [[52, 1, 1, "c.fq_poly_factor_clear", "ctx"], [52, 1, 1, "c.fq_poly_factor_clear", "fac"]], "fq_poly_factor_concat": [[52, 1, 1, "c.fq_poly_factor_concat", "ctx"], [52, 1, 1, "c.fq_poly_factor_concat", "fac"], [52, 1, 1, "c.fq_poly_factor_concat", "res"]], "fq_poly_factor_distinct_deg": [[52, 1, 1, "c.fq_poly_factor_distinct_deg", "ctx"], [52, 1, 1, "c.fq_poly_factor_distinct_deg", "degs"], [52, 1, 1, "c.fq_poly_factor_distinct_deg", "poly"], [52, 1, 1, "c.fq_poly_factor_distinct_deg", "res"]], "fq_poly_factor_equal_deg": [[52, 1, 1, "c.fq_poly_factor_equal_deg", "ctx"], [52, 1, 1, "c.fq_poly_factor_equal_deg", "d"], [52, 1, 1, "c.fq_poly_factor_equal_deg", "factors"], [52, 1, 1, "c.fq_poly_factor_equal_deg", "pol"]], "fq_poly_factor_equal_deg_prob": [[52, 1, 1, "c.fq_poly_factor_equal_deg_prob", "ctx"], [52, 1, 1, "c.fq_poly_factor_equal_deg_prob", "d"], [52, 1, 1, "c.fq_poly_factor_equal_deg_prob", "factor"], [52, 1, 1, "c.fq_poly_factor_equal_deg_prob", "pol"], [52, 1, 1, "c.fq_poly_factor_equal_deg_prob", "state"]], "fq_poly_factor_fit_length": [[52, 1, 1, "c.fq_poly_factor_fit_length", "ctx"], [52, 1, 1, "c.fq_poly_factor_fit_length", "fac"], [52, 1, 1, "c.fq_poly_factor_fit_length", "len"]], "fq_poly_factor_init": [[52, 1, 1, "c.fq_poly_factor_init", "ctx"], [52, 1, 1, "c.fq_poly_factor_init", "fac"]], "fq_poly_factor_insert": [[52, 1, 1, "c.fq_poly_factor_insert", "ctx"], [52, 1, 1, "c.fq_poly_factor_insert", "exp"], [52, 1, 1, "c.fq_poly_factor_insert", "fac"], [52, 1, 1, "c.fq_poly_factor_insert", "poly"]], "fq_poly_factor_kaltofen_shoup": [[52, 1, 1, "c.fq_poly_factor_kaltofen_shoup", "ctx"], [52, 1, 1, "c.fq_poly_factor_kaltofen_shoup", "poly"], [52, 1, 1, "c.fq_poly_factor_kaltofen_shoup", "res"]], "fq_poly_factor_pow": [[52, 1, 1, "c.fq_poly_factor_pow", "ctx"], [52, 1, 1, "c.fq_poly_factor_pow", "exp"], [52, 1, 1, "c.fq_poly_factor_pow", "fac"]], "fq_poly_factor_print": [[52, 1, 1, "c.fq_poly_factor_print", "ctx"], [52, 1, 1, "c.fq_poly_factor_print", "fac"]], "fq_poly_factor_print_pretty": [[52, 1, 1, "c.fq_poly_factor_print_pretty", "ctx"], [52, 1, 1, "c.fq_poly_factor_print_pretty", "fac"]], "fq_poly_factor_realloc": [[52, 1, 1, "c.fq_poly_factor_realloc", "alloc"], [52, 1, 1, "c.fq_poly_factor_realloc", "ctx"], [52, 1, 1, "c.fq_poly_factor_realloc", "fac"]], "fq_poly_factor_set": [[52, 1, 1, "c.fq_poly_factor_set", "ctx"], [52, 1, 1, "c.fq_poly_factor_set", "fac"], [52, 1, 1, "c.fq_poly_factor_set", "res"]], "fq_poly_factor_split_single": [[52, 1, 1, "c.fq_poly_factor_split_single", "ctx"], [52, 1, 1, "c.fq_poly_factor_split_single", "input"], [52, 1, 1, "c.fq_poly_factor_split_single", "linfactor"]], "fq_poly_factor_squarefree": [[52, 1, 1, "c.fq_poly_factor_squarefree", "ctx"], [52, 1, 1, "c.fq_poly_factor_squarefree", "f"], [52, 1, 1, "c.fq_poly_factor_squarefree", "res"]], "fq_poly_factor_with_berlekamp": [[52, 1, 1, "c.fq_poly_factor_with_berlekamp", "f"], [52, 1, 1, "c.fq_poly_factor_with_berlekamp", "leading_coeff"], [52, 1, 1, "c.fq_poly_factor_with_berlekamp", "res"]], "fq_poly_factor_with_cantor_zassenhaus": [[52, 1, 1, "c.fq_poly_factor_with_cantor_zassenhaus", "ctx"], [52, 1, 1, "c.fq_poly_factor_with_cantor_zassenhaus", "f"], [52, 1, 1, "c.fq_poly_factor_with_cantor_zassenhaus", "leading_coeff"], [52, 1, 1, "c.fq_poly_factor_with_cantor_zassenhaus", "res"]], "fq_poly_factor_with_kaltofen_shoup": [[52, 1, 1, "c.fq_poly_factor_with_kaltofen_shoup", "ctx"], [52, 1, 1, "c.fq_poly_factor_with_kaltofen_shoup", "f"], [52, 1, 1, "c.fq_poly_factor_with_kaltofen_shoup", "leading_coeff"], [52, 1, 1, "c.fq_poly_factor_with_kaltofen_shoup", "res"]], "fq_poly_fit_length": [[51, 1, 1, "c.fq_poly_fit_length", "ctx"], [51, 1, 1, "c.fq_poly_fit_length", "len"], [51, 1, 1, "c.fq_poly_fit_length", "poly"]], "fq_poly_fprint": [[51, 1, 1, "c.fq_poly_fprint", "ctx"], [51, 1, 1, "c.fq_poly_fprint", "file"], [51, 1, 1, "c.fq_poly_fprint", "poly"]], "fq_poly_fprint_pretty": [[51, 1, 1, "c.fq_poly_fprint_pretty", "ctx"], [51, 1, 1, "c.fq_poly_fprint_pretty", "file"], [51, 1, 1, "c.fq_poly_fprint_pretty", "poly"], [51, 1, 1, "c.fq_poly_fprint_pretty", "x"]], "fq_poly_gcd": [[51, 1, 1, "c.fq_poly_gcd", "ctx"], [51, 1, 1, "c.fq_poly_gcd", "op1"], [51, 1, 1, "c.fq_poly_gcd", "op2"], [51, 1, 1, "c.fq_poly_gcd", "rop"]], "fq_poly_gcd_euclidean": [[51, 1, 1, "c.fq_poly_gcd_euclidean", "ctx"], [51, 1, 1, "c.fq_poly_gcd_euclidean", "op1"], [51, 1, 1, "c.fq_poly_gcd_euclidean", "op2"], [51, 1, 1, "c.fq_poly_gcd_euclidean", "rop"]], "fq_poly_gcd_euclidean_f": [[51, 1, 1, "c.fq_poly_gcd_euclidean_f", "A"], [51, 1, 1, "c.fq_poly_gcd_euclidean_f", "B"], [51, 1, 1, "c.fq_poly_gcd_euclidean_f", "G"], [51, 1, 1, "c.fq_poly_gcd_euclidean_f", "ctx"], [51, 1, 1, "c.fq_poly_gcd_euclidean_f", "f"]], "fq_poly_gcd_hgcd": [[51, 1, 1, "c.fq_poly_gcd_hgcd", "ctx"], [51, 1, 1, "c.fq_poly_gcd_hgcd", "op1"], [51, 1, 1, "c.fq_poly_gcd_hgcd", "op2"], [51, 1, 1, "c.fq_poly_gcd_hgcd", "rop"]], "fq_poly_gen": [[51, 1, 1, "c.fq_poly_gen", "ctx"], [51, 1, 1, "c.fq_poly_gen", "poly"]], "fq_poly_get_coeff": [[51, 1, 1, "c.fq_poly_get_coeff", "ctx"], [51, 1, 1, "c.fq_poly_get_coeff", "n"], [51, 1, 1, "c.fq_poly_get_coeff", "poly"], [51, 1, 1, "c.fq_poly_get_coeff", "x"]], "fq_poly_get_str": [[51, 1, 1, "c.fq_poly_get_str", "ctx"], [51, 1, 1, "c.fq_poly_get_str", "poly"]], "fq_poly_get_str_pretty": [[51, 1, 1, "c.fq_poly_get_str_pretty", "ctx"], [51, 1, 1, "c.fq_poly_get_str_pretty", "poly"], [51, 1, 1, "c.fq_poly_get_str_pretty", "x"]], "fq_poly_hamming_weight": [[51, 1, 1, "c.fq_poly_hamming_weight", "ctx"], [51, 1, 1, "c.fq_poly_hamming_weight", "op"]], "fq_poly_inflate": [[51, 1, 1, "c.fq_poly_inflate", "ctx"], [51, 1, 1, "c.fq_poly_inflate", "inflation"], [51, 1, 1, "c.fq_poly_inflate", "input"], [51, 1, 1, "c.fq_poly_inflate", "result"]], "fq_poly_init": [[51, 1, 1, "c.fq_poly_init", "ctx"], [51, 1, 1, "c.fq_poly_init", "poly"]], "fq_poly_init2": [[51, 1, 1, "c.fq_poly_init2", "alloc"], [51, 1, 1, "c.fq_poly_init2", "ctx"], [51, 1, 1, "c.fq_poly_init2", "poly"]], "fq_poly_inv_series": [[51, 1, 1, "c.fq_poly_inv_series", "Q"], [51, 1, 1, "c.fq_poly_inv_series", "Qinv"], [51, 1, 1, "c.fq_poly_inv_series", "ctx"], [51, 1, 1, "c.fq_poly_inv_series", "n"]], "fq_poly_inv_series_newton": [[51, 1, 1, "c.fq_poly_inv_series_newton", "Q"], [51, 1, 1, "c.fq_poly_inv_series_newton", "Qinv"], [51, 1, 1, "c.fq_poly_inv_series_newton", "ctx"], [51, 1, 1, "c.fq_poly_inv_series_newton", "n"]], "fq_poly_invsqrt_series": [[51, 1, 1, "c.fq_poly_invsqrt_series", "ctx"], [51, 1, 1, "c.fq_poly_invsqrt_series", "g"], [51, 1, 1, "c.fq_poly_invsqrt_series", "h"], [51, 1, 1, "c.fq_poly_invsqrt_series", "n"]], "fq_poly_is_gen": [[51, 1, 1, "c.fq_poly_is_gen", "ctx"], [51, 1, 1, "c.fq_poly_is_gen", "op"]], "fq_poly_is_irreducible": [[52, 1, 1, "c.fq_poly_is_irreducible", "ctx"], [52, 1, 1, "c.fq_poly_is_irreducible", "f"]], "fq_poly_is_irreducible_ben_or": [[52, 1, 1, "c.fq_poly_is_irreducible_ben_or", "ctx"], [52, 1, 1, "c.fq_poly_is_irreducible_ben_or", "f"]], "fq_poly_is_irreducible_ddf": [[52, 1, 1, "c.fq_poly_is_irreducible_ddf", "ctx"], [52, 1, 1, "c.fq_poly_is_irreducible_ddf", "f"]], "fq_poly_is_one": [[51, 1, 1, "c.fq_poly_is_one", "op"]], "fq_poly_is_squarefree": [[52, 1, 1, "c.fq_poly_is_squarefree", "ctx"], [52, 1, 1, "c.fq_poly_is_squarefree", "f"]], "fq_poly_is_unit": [[51, 1, 1, "c.fq_poly_is_unit", "ctx"], [51, 1, 1, "c.fq_poly_is_unit", "op"]], "fq_poly_is_zero": [[51, 1, 1, "c.fq_poly_is_zero", "ctx"], [51, 1, 1, "c.fq_poly_is_zero", "poly"]], "fq_poly_iterated_frobenius_preinv": [[52, 1, 1, "c.fq_poly_iterated_frobenius_preinv", "ctx"], [52, 1, 1, "c.fq_poly_iterated_frobenius_preinv", "n"], [52, 1, 1, "c.fq_poly_iterated_frobenius_preinv", "rop"], [52, 1, 1, "c.fq_poly_iterated_frobenius_preinv", "v"], [52, 1, 1, "c.fq_poly_iterated_frobenius_preinv", "vinv"]], "fq_poly_lead": [[51, 1, 1, "c.fq_poly_lead", "ctx"], [51, 1, 1, "c.fq_poly_lead", "poly"]], "fq_poly_length": [[51, 1, 1, "c.fq_poly_length", "ctx"], [51, 1, 1, "c.fq_poly_length", "poly"]], "fq_poly_make_monic": [[51, 1, 1, "c.fq_poly_make_monic", "ctx"], [51, 1, 1, "c.fq_poly_make_monic", "op"], [51, 1, 1, "c.fq_poly_make_monic", "rop"]], "fq_poly_mul": [[51, 1, 1, "c.fq_poly_mul", "ctx"], [51, 1, 1, "c.fq_poly_mul", "op1"], [51, 1, 1, "c.fq_poly_mul", "op2"], [51, 1, 1, "c.fq_poly_mul", "rop"]], "fq_poly_mul_KS": [[51, 1, 1, "c.fq_poly_mul_KS", "ctx"], [51, 1, 1, "c.fq_poly_mul_KS", "op1"], [51, 1, 1, "c.fq_poly_mul_KS", "op2"], [51, 1, 1, "c.fq_poly_mul_KS", "rop"]], "fq_poly_mul_classical": [[51, 1, 1, "c.fq_poly_mul_classical", "ctx"], [51, 1, 1, "c.fq_poly_mul_classical", "op1"], [51, 1, 1, "c.fq_poly_mul_classical", "op2"], [51, 1, 1, "c.fq_poly_mul_classical", "rop"]], "fq_poly_mul_reorder": [[51, 1, 1, "c.fq_poly_mul_reorder", "ctx"], [51, 1, 1, "c.fq_poly_mul_reorder", "op1"], [51, 1, 1, "c.fq_poly_mul_reorder", "op2"], [51, 1, 1, "c.fq_poly_mul_reorder", "rop"]], "fq_poly_mul_univariate": [[51, 1, 1, "c.fq_poly_mul_univariate", "ctx"], [51, 1, 1, "c.fq_poly_mul_univariate", "op1"], [51, 1, 1, "c.fq_poly_mul_univariate", "op2"], [51, 1, 1, "c.fq_poly_mul_univariate", "rop"]], "fq_poly_mulhigh": [[51, 1, 1, "c.fq_poly_mulhigh", "ctx"], [51, 1, 1, "c.fq_poly_mulhigh", "poly1"], [51, 1, 1, "c.fq_poly_mulhigh", "poly2"], [51, 1, 1, "c.fq_poly_mulhigh", "res"], [51, 1, 1, "c.fq_poly_mulhigh", "start"]], "fq_poly_mulhigh_classical": [[51, 1, 1, "c.fq_poly_mulhigh_classical", "ctx"], [51, 1, 1, "c.fq_poly_mulhigh_classical", "poly1"], [51, 1, 1, "c.fq_poly_mulhigh_classical", "poly2"], [51, 1, 1, "c.fq_poly_mulhigh_classical", "res"], [51, 1, 1, "c.fq_poly_mulhigh_classical", "start"]], "fq_poly_mullow": [[51, 1, 1, "c.fq_poly_mullow", "ctx"], [51, 1, 1, "c.fq_poly_mullow", "n"], [51, 1, 1, "c.fq_poly_mullow", "op1"], [51, 1, 1, "c.fq_poly_mullow", "op2"], [51, 1, 1, "c.fq_poly_mullow", "rop"]], "fq_poly_mullow_KS": [[51, 1, 1, "c.fq_poly_mullow_KS", "ctx"], [51, 1, 1, "c.fq_poly_mullow_KS", "n"], [51, 1, 1, "c.fq_poly_mullow_KS", "op1"], [51, 1, 1, "c.fq_poly_mullow_KS", "op2"], [51, 1, 1, "c.fq_poly_mullow_KS", "rop"]], "fq_poly_mullow_classical": [[51, 1, 1, "c.fq_poly_mullow_classical", "ctx"], [51, 1, 1, "c.fq_poly_mullow_classical", "n"], [51, 1, 1, "c.fq_poly_mullow_classical", "op1"], [51, 1, 1, "c.fq_poly_mullow_classical", "op2"], [51, 1, 1, "c.fq_poly_mullow_classical", "rop"]], "fq_poly_mullow_univariate": [[51, 1, 1, "c.fq_poly_mullow_univariate", "ctx"], [51, 1, 1, "c.fq_poly_mullow_univariate", "n"], [51, 1, 1, "c.fq_poly_mullow_univariate", "op1"], [51, 1, 1, "c.fq_poly_mullow_univariate", "op2"], [51, 1, 1, "c.fq_poly_mullow_univariate", "rop"]], "fq_poly_mulmod": [[51, 1, 1, "c.fq_poly_mulmod", "ctx"], [51, 1, 1, "c.fq_poly_mulmod", "f"], [51, 1, 1, "c.fq_poly_mulmod", "poly1"], [51, 1, 1, "c.fq_poly_mulmod", "poly2"], [51, 1, 1, "c.fq_poly_mulmod", "res"]], "fq_poly_mulmod_preinv": [[51, 1, 1, "c.fq_poly_mulmod_preinv", "ctx"], [51, 1, 1, "c.fq_poly_mulmod_preinv", "f"], [51, 1, 1, "c.fq_poly_mulmod_preinv", "finv"], [51, 1, 1, "c.fq_poly_mulmod_preinv", "poly1"], [51, 1, 1, "c.fq_poly_mulmod_preinv", "poly2"], [51, 1, 1, "c.fq_poly_mulmod_preinv", "res"]], "fq_poly_neg": [[51, 1, 1, "c.fq_poly_neg", "ctx"], [51, 1, 1, "c.fq_poly_neg", "poly"], [51, 1, 1, "c.fq_poly_neg", "res"]], "fq_poly_one": [[51, 1, 1, "c.fq_poly_one", "ctx"], [51, 1, 1, "c.fq_poly_one", "poly"]], "fq_poly_pow": [[51, 1, 1, "c.fq_poly_pow", "ctx"], [51, 1, 1, "c.fq_poly_pow", "e"], [51, 1, 1, "c.fq_poly_pow", "op"], [51, 1, 1, "c.fq_poly_pow", "rop"]], "fq_poly_pow_trunc": [[51, 1, 1, "c.fq_poly_pow_trunc", "ctx"], [51, 1, 1, "c.fq_poly_pow_trunc", "e"], [51, 1, 1, "c.fq_poly_pow_trunc", "poly"], [51, 1, 1, "c.fq_poly_pow_trunc", "res"], [51, 1, 1, "c.fq_poly_pow_trunc", "trunc"]], "fq_poly_pow_trunc_binexp": [[51, 1, 1, "c.fq_poly_pow_trunc_binexp", "ctx"], [51, 1, 1, "c.fq_poly_pow_trunc_binexp", "e"], [51, 1, 1, "c.fq_poly_pow_trunc_binexp", "poly"], [51, 1, 1, "c.fq_poly_pow_trunc_binexp", "res"], [51, 1, 1, "c.fq_poly_pow_trunc_binexp", "trunc"]], "fq_poly_powmod_fmpz_binexp": [[51, 1, 1, "c.fq_poly_powmod_fmpz_binexp", "ctx"], [51, 1, 1, "c.fq_poly_powmod_fmpz_binexp", "e"], [51, 1, 1, "c.fq_poly_powmod_fmpz_binexp", "f"], [51, 1, 1, "c.fq_poly_powmod_fmpz_binexp", "poly"], [51, 1, 1, "c.fq_poly_powmod_fmpz_binexp", "res"]], "fq_poly_powmod_fmpz_binexp_preinv": [[51, 1, 1, "c.fq_poly_powmod_fmpz_binexp_preinv", "ctx"], [51, 1, 1, "c.fq_poly_powmod_fmpz_binexp_preinv", "e"], [51, 1, 1, "c.fq_poly_powmod_fmpz_binexp_preinv", "f"], [51, 1, 1, "c.fq_poly_powmod_fmpz_binexp_preinv", "finv"], [51, 1, 1, "c.fq_poly_powmod_fmpz_binexp_preinv", "poly"], [51, 1, 1, "c.fq_poly_powmod_fmpz_binexp_preinv", "res"]], "fq_poly_powmod_fmpz_sliding_preinv": [[51, 1, 1, "c.fq_poly_powmod_fmpz_sliding_preinv", "ctx"], [51, 1, 1, "c.fq_poly_powmod_fmpz_sliding_preinv", "e"], [51, 1, 1, "c.fq_poly_powmod_fmpz_sliding_preinv", "f"], [51, 1, 1, "c.fq_poly_powmod_fmpz_sliding_preinv", "finv"], [51, 1, 1, "c.fq_poly_powmod_fmpz_sliding_preinv", "k"], [51, 1, 1, "c.fq_poly_powmod_fmpz_sliding_preinv", "poly"], [51, 1, 1, "c.fq_poly_powmod_fmpz_sliding_preinv", "res"]], "fq_poly_powmod_ui_binexp": [[51, 1, 1, "c.fq_poly_powmod_ui_binexp", "ctx"], [51, 1, 1, "c.fq_poly_powmod_ui_binexp", "e"], [51, 1, 1, "c.fq_poly_powmod_ui_binexp", "f"], [51, 1, 1, "c.fq_poly_powmod_ui_binexp", "poly"], [51, 1, 1, "c.fq_poly_powmod_ui_binexp", "res"]], "fq_poly_powmod_ui_binexp_preinv": [[51, 1, 1, "c.fq_poly_powmod_ui_binexp_preinv", "ctx"], [51, 1, 1, "c.fq_poly_powmod_ui_binexp_preinv", "e"], [51, 1, 1, "c.fq_poly_powmod_ui_binexp_preinv", "f"], [51, 1, 1, "c.fq_poly_powmod_ui_binexp_preinv", "finv"], [51, 1, 1, "c.fq_poly_powmod_ui_binexp_preinv", "poly"], [51, 1, 1, "c.fq_poly_powmod_ui_binexp_preinv", "res"]], "fq_poly_powmod_x_fmpz_preinv": [[51, 1, 1, "c.fq_poly_powmod_x_fmpz_preinv", "ctx"], [51, 1, 1, "c.fq_poly_powmod_x_fmpz_preinv", "e"], [51, 1, 1, "c.fq_poly_powmod_x_fmpz_preinv", "f"], [51, 1, 1, "c.fq_poly_powmod_x_fmpz_preinv", "finv"], [51, 1, 1, "c.fq_poly_powmod_x_fmpz_preinv", "res"]], "fq_poly_precompute_matrix": [[51, 1, 1, "c.fq_poly_precompute_matrix", "A"], [51, 1, 1, "c.fq_poly_precompute_matrix", "ctx"], [51, 1, 1, "c.fq_poly_precompute_matrix", "f"], [51, 1, 1, "c.fq_poly_precompute_matrix", "g"], [51, 1, 1, "c.fq_poly_precompute_matrix", "ginv"]], "fq_poly_print": [[51, 1, 1, "c.fq_poly_print", "ctx"], [51, 1, 1, "c.fq_poly_print", "poly"]], "fq_poly_print_pretty": [[51, 1, 1, "c.fq_poly_print_pretty", "ctx"], [51, 1, 1, "c.fq_poly_print_pretty", "poly"], [51, 1, 1, "c.fq_poly_print_pretty", "x"]], "fq_poly_randtest": [[51, 1, 1, "c.fq_poly_randtest", "ctx"], [51, 1, 1, "c.fq_poly_randtest", "f"], [51, 1, 1, "c.fq_poly_randtest", "len"], [51, 1, 1, "c.fq_poly_randtest", "state"]], "fq_poly_randtest_irreducible": [[51, 1, 1, "c.fq_poly_randtest_irreducible", "ctx"], [51, 1, 1, "c.fq_poly_randtest_irreducible", "f"], [51, 1, 1, "c.fq_poly_randtest_irreducible", "len"], [51, 1, 1, "c.fq_poly_randtest_irreducible", "state"]], "fq_poly_randtest_monic": [[51, 1, 1, "c.fq_poly_randtest_monic", "ctx"], [51, 1, 1, "c.fq_poly_randtest_monic", "f"], [51, 1, 1, "c.fq_poly_randtest_monic", "len"], [51, 1, 1, "c.fq_poly_randtest_monic", "state"]], "fq_poly_randtest_not_zero": [[51, 1, 1, "c.fq_poly_randtest_not_zero", "ctx"], [51, 1, 1, "c.fq_poly_randtest_not_zero", "f"], [51, 1, 1, "c.fq_poly_randtest_not_zero", "len"], [51, 1, 1, "c.fq_poly_randtest_not_zero", "state"]], "fq_poly_realloc": [[51, 1, 1, "c.fq_poly_realloc", "alloc"], [51, 1, 1, "c.fq_poly_realloc", "ctx"], [51, 1, 1, "c.fq_poly_realloc", "poly"]], "fq_poly_rem": [[51, 1, 1, "c.fq_poly_rem", "A"], [51, 1, 1, "c.fq_poly_rem", "B"], [51, 1, 1, "c.fq_poly_rem", "R"], [51, 1, 1, "c.fq_poly_rem", "ctx"]], "fq_poly_remove": [[52, 1, 1, "c.fq_poly_remove", "ctx"], [52, 1, 1, "c.fq_poly_remove", "f"], [52, 1, 1, "c.fq_poly_remove", "p"]], "fq_poly_reverse": [[51, 1, 1, "c.fq_poly_reverse", "ctx"], [51, 1, 1, "c.fq_poly_reverse", "input"], [51, 1, 1, "c.fq_poly_reverse", "m"], [51, 1, 1, "c.fq_poly_reverse", "output"]], "fq_poly_roots": [[52, 1, 1, "c.fq_poly_roots", "ctx"], [52, 1, 1, "c.fq_poly_roots", "f"], [52, 1, 1, "c.fq_poly_roots", "r"], [52, 1, 1, "c.fq_poly_roots", "with_multiplicity"]], "fq_poly_scalar_addmul_fq": [[51, 1, 1, "c.fq_poly_scalar_addmul_fq", "ctx"], [51, 1, 1, "c.fq_poly_scalar_addmul_fq", "op"], [51, 1, 1, "c.fq_poly_scalar_addmul_fq", "rop"], [51, 1, 1, "c.fq_poly_scalar_addmul_fq", "x"]], "fq_poly_scalar_div_fq": [[51, 1, 1, "c.fq_poly_scalar_div_fq", "ctx"], [51, 1, 1, "c.fq_poly_scalar_div_fq", "op"], [51, 1, 1, "c.fq_poly_scalar_div_fq", "rop"], [51, 1, 1, "c.fq_poly_scalar_div_fq", "x"]], "fq_poly_scalar_mul_fq": [[51, 1, 1, "c.fq_poly_scalar_mul_fq", "ctx"], [51, 1, 1, "c.fq_poly_scalar_mul_fq", "op"], [51, 1, 1, "c.fq_poly_scalar_mul_fq", "rop"], [51, 1, 1, "c.fq_poly_scalar_mul_fq", "x"]], "fq_poly_scalar_submul_fq": [[51, 1, 1, "c.fq_poly_scalar_submul_fq", "ctx"], [51, 1, 1, "c.fq_poly_scalar_submul_fq", "op"], [51, 1, 1, "c.fq_poly_scalar_submul_fq", "rop"], [51, 1, 1, "c.fq_poly_scalar_submul_fq", "x"]], "fq_poly_set": [[51, 1, 1, "c.fq_poly_set", "ctx"], [51, 1, 1, "c.fq_poly_set", "poly1"], [51, 1, 1, "c.fq_poly_set", "poly2"]], "fq_poly_set_coeff": [[51, 1, 1, "c.fq_poly_set_coeff", "ctx"], [51, 1, 1, "c.fq_poly_set_coeff", "n"], [51, 1, 1, "c.fq_poly_set_coeff", "poly"], [51, 1, 1, "c.fq_poly_set_coeff", "x"]], "fq_poly_set_coeff_fmpz": [[51, 1, 1, "c.fq_poly_set_coeff_fmpz", "ctx"], [51, 1, 1, "c.fq_poly_set_coeff_fmpz", "n"], [51, 1, 1, "c.fq_poly_set_coeff_fmpz", "poly"], [51, 1, 1, "c.fq_poly_set_coeff_fmpz", "x"]], "fq_poly_set_fmpz_mod_poly": [[51, 1, 1, "c.fq_poly_set_fmpz_mod_poly", "ctx"], [51, 1, 1, "c.fq_poly_set_fmpz_mod_poly", "op"], [51, 1, 1, "c.fq_poly_set_fmpz_mod_poly", "rop"]], "fq_poly_set_fq": [[51, 1, 1, "c.fq_poly_set_fq", "c"], [51, 1, 1, "c.fq_poly_set_fq", "ctx"], [51, 1, 1, "c.fq_poly_set_fq", "poly"]], "fq_poly_set_nmod_poly": [[51, 1, 1, "c.fq_poly_set_nmod_poly", "ctx"], [51, 1, 1, "c.fq_poly_set_nmod_poly", "op"], [51, 1, 1, "c.fq_poly_set_nmod_poly", "rop"]], "fq_poly_set_trunc": [[51, 1, 1, "c.fq_poly_set_trunc", "ctx"], [51, 1, 1, "c.fq_poly_set_trunc", "newlen"], [51, 1, 1, "c.fq_poly_set_trunc", "poly1"], [51, 1, 1, "c.fq_poly_set_trunc", "poly2"]], "fq_poly_shift_left": [[51, 1, 1, "c.fq_poly_shift_left", "ctx"], [51, 1, 1, "c.fq_poly_shift_left", "n"], [51, 1, 1, "c.fq_poly_shift_left", "op"], [51, 1, 1, "c.fq_poly_shift_left", "rop"]], "fq_poly_shift_right": [[51, 1, 1, "c.fq_poly_shift_right", "ctx"], [51, 1, 1, "c.fq_poly_shift_right", "n"], [51, 1, 1, "c.fq_poly_shift_right", "op"], [51, 1, 1, "c.fq_poly_shift_right", "rop"]], "fq_poly_sqr": [[51, 1, 1, "c.fq_poly_sqr", "ctx"], [51, 1, 1, "c.fq_poly_sqr", "op"], [51, 1, 1, "c.fq_poly_sqr", "rop"]], "fq_poly_sqr_KS": [[51, 1, 1, "c.fq_poly_sqr_KS", "ctx"], [51, 1, 1, "c.fq_poly_sqr_KS", "op"], [51, 1, 1, "c.fq_poly_sqr_KS", "rop"]], "fq_poly_sqr_classical": [[51, 1, 1, "c.fq_poly_sqr_classical", "ctx"], [51, 1, 1, "c.fq_poly_sqr_classical", "op"], [51, 1, 1, "c.fq_poly_sqr_classical", "rop"]], "fq_poly_sqr_reorder": [[51, 1, 1, "c.fq_poly_sqr_reorder", "ctx"], [51, 1, 1, "c.fq_poly_sqr_reorder", "op"], [51, 1, 1, "c.fq_poly_sqr_reorder", "rop"]], "fq_poly_sqrt": [[51, 1, 1, "c.fq_poly_sqrt", "mod"], [51, 1, 1, "c.fq_poly_sqrt", "p"], [51, 1, 1, "c.fq_poly_sqrt", "s"]], "fq_poly_sqrt_series": [[51, 1, 1, "c.fq_poly_sqrt_series", "ctx"], [51, 1, 1, "c.fq_poly_sqrt_series", "g"], [51, 1, 1, "c.fq_poly_sqrt_series", "h"], [51, 1, 1, "c.fq_poly_sqrt_series", "n"]], "fq_poly_sub": [[51, 1, 1, "c.fq_poly_sub", "ctx"], [51, 1, 1, "c.fq_poly_sub", "poly1"], [51, 1, 1, "c.fq_poly_sub", "poly2"], [51, 1, 1, "c.fq_poly_sub", "res"]], "fq_poly_sub_series": [[51, 1, 1, "c.fq_poly_sub_series", "ctx"], [51, 1, 1, "c.fq_poly_sub_series", "n"], [51, 1, 1, "c.fq_poly_sub_series", "poly1"], [51, 1, 1, "c.fq_poly_sub_series", "poly2"], [51, 1, 1, "c.fq_poly_sub_series", "res"]], "fq_poly_swap": [[51, 1, 1, "c.fq_poly_swap", "ctx"], [51, 1, 1, "c.fq_poly_swap", "op1"], [51, 1, 1, "c.fq_poly_swap", "op2"]], "fq_poly_truncate": [[51, 1, 1, "c.fq_poly_truncate", "ctx"], [51, 1, 1, "c.fq_poly_truncate", "newlen"], [51, 1, 1, "c.fq_poly_truncate", "poly"]], "fq_poly_xgcd": [[51, 1, 1, "c.fq_poly_xgcd", "A"], [51, 1, 1, "c.fq_poly_xgcd", "B"], [51, 1, 1, "c.fq_poly_xgcd", "G"], [51, 1, 1, "c.fq_poly_xgcd", "S"], [51, 1, 1, "c.fq_poly_xgcd", "T"], [51, 1, 1, "c.fq_poly_xgcd", "ctx"]], "fq_poly_xgcd_euclidean": [[51, 1, 1, "c.fq_poly_xgcd_euclidean", "A"], [51, 1, 1, "c.fq_poly_xgcd_euclidean", "B"], [51, 1, 1, "c.fq_poly_xgcd_euclidean", "G"], [51, 1, 1, "c.fq_poly_xgcd_euclidean", "S"], [51, 1, 1, "c.fq_poly_xgcd_euclidean", "T"], [51, 1, 1, "c.fq_poly_xgcd_euclidean", "ctx"]], "fq_poly_xgcd_euclidean_f": [[51, 1, 1, "c.fq_poly_xgcd_euclidean_f", "A"], [51, 1, 1, "c.fq_poly_xgcd_euclidean_f", "B"], [51, 1, 1, "c.fq_poly_xgcd_euclidean_f", "G"], [51, 1, 1, "c.fq_poly_xgcd_euclidean_f", "S"], [51, 1, 1, "c.fq_poly_xgcd_euclidean_f", "T"], [51, 1, 1, "c.fq_poly_xgcd_euclidean_f", "ctx"], [51, 1, 1, "c.fq_poly_xgcd_euclidean_f", "f"]], "fq_poly_zero": [[51, 1, 1, "c.fq_poly_zero", "ctx"], [51, 1, 1, "c.fq_poly_zero", "poly"]], "fq_pow": [[36, 1, 1, "c.fq_pow", "ctx"], [36, 1, 1, "c.fq_pow", "e"], [36, 1, 1, "c.fq_pow", "op"], [36, 1, 1, "c.fq_pow", "rop"]], "fq_pow_ui": [[36, 1, 1, "c.fq_pow_ui", "ctx"], [36, 1, 1, "c.fq_pow_ui", "e"], [36, 1, 1, "c.fq_pow_ui", "op"], [36, 1, 1, "c.fq_pow_ui", "rop"]], "fq_print": [[36, 1, 1, "c.fq_print", "ctx"], [36, 1, 1, "c.fq_print", "op"]], "fq_print_pretty": [[36, 1, 1, "c.fq_print_pretty", "ctx"], [36, 1, 1, "c.fq_print_pretty", "op"]], "fq_pth_root": [[36, 1, 1, "c.fq_pth_root", "ctx"], [36, 1, 1, "c.fq_pth_root", "op1"], [36, 1, 1, "c.fq_pth_root", "rop"]], "fq_rand": [[36, 1, 1, "c.fq_rand", "ctx"], [36, 1, 1, "c.fq_rand", "rop"], [36, 1, 1, "c.fq_rand", "state"]], "fq_rand_not_zero": [[36, 1, 1, "c.fq_rand_not_zero", "ctx"], [36, 1, 1, "c.fq_rand_not_zero", "rop"], [36, 1, 1, "c.fq_rand_not_zero", "state"]], "fq_randtest": [[36, 1, 1, "c.fq_randtest", "ctx"], [36, 1, 1, "c.fq_randtest", "rop"], [36, 1, 1, "c.fq_randtest", "state"]], "fq_randtest_dense": [[36, 1, 1, "c.fq_randtest_dense", "ctx"], [36, 1, 1, "c.fq_randtest_dense", "rop"], [36, 1, 1, "c.fq_randtest_dense", "state"]], "fq_randtest_not_zero": [[36, 1, 1, "c.fq_randtest_not_zero", "ctx"], [36, 1, 1, "c.fq_randtest_not_zero", "rop"], [36, 1, 1, "c.fq_randtest_not_zero", "state"]], "fq_reduce": [[36, 1, 1, "c.fq_reduce", "ctx"], [36, 1, 1, "c.fq_reduce", "rop"]], "fq_set": [[36, 1, 1, "c.fq_set", "ctx"], [36, 1, 1, "c.fq_set", "op"], [36, 1, 1, "c.fq_set", "rop"]], "fq_set_fmpz": [[36, 1, 1, "c.fq_set_fmpz", "ctx"], [36, 1, 1, "c.fq_set_fmpz", "rop"], [36, 1, 1, "c.fq_set_fmpz", "x"]], "fq_set_fmpz_mod_mat": [[36, 1, 1, "c.fq_set_fmpz_mod_mat", "a"], [36, 1, 1, "c.fq_set_fmpz_mod_mat", "col"], [36, 1, 1, "c.fq_set_fmpz_mod_mat", "ctx"]], "fq_set_fmpz_mod_poly": [[36, 1, 1, "c.fq_set_fmpz_mod_poly", "a"], [36, 1, 1, "c.fq_set_fmpz_mod_poly", "b"], [36, 1, 1, "c.fq_set_fmpz_mod_poly", "ctx"]], "fq_set_fmpz_poly": [[36, 1, 1, "c.fq_set_fmpz_poly", "a"], [36, 1, 1, "c.fq_set_fmpz_poly", "b"], [36, 1, 1, "c.fq_set_fmpz_poly", "ctx"]], "fq_set_si": [[36, 1, 1, "c.fq_set_si", "ctx"], [36, 1, 1, "c.fq_set_si", "rop"], [36, 1, 1, "c.fq_set_si", "x"]], "fq_set_ui": [[36, 1, 1, "c.fq_set_ui", "ctx"], [36, 1, 1, "c.fq_set_ui", "rop"], [36, 1, 1, "c.fq_set_ui", "x"]], "fq_sqr": [[36, 1, 1, "c.fq_sqr", "ctx"], [36, 1, 1, "c.fq_sqr", "op"], [36, 1, 1, "c.fq_sqr", "rop"]], "fq_sqrt": [[36, 1, 1, "c.fq_sqrt", "ctx"], [36, 1, 1, "c.fq_sqrt", "op1"], [36, 1, 1, "c.fq_sqrt", "rop"]], "fq_sub": [[36, 1, 1, "c.fq_sub", "ctx"], [36, 1, 1, "c.fq_sub", "op1"], [36, 1, 1, "c.fq_sub", "op2"], [36, 1, 1, "c.fq_sub", "rop"]], "fq_sub_one": [[36, 1, 1, "c.fq_sub_one", "ctx"], [36, 1, 1, "c.fq_sub_one", "op1"], [36, 1, 1, "c.fq_sub_one", "rop"]], "fq_swap": [[36, 1, 1, "c.fq_swap", "ctx"], [36, 1, 1, "c.fq_swap", "op1"], [36, 1, 1, "c.fq_swap", "op2"]], "fq_trace": [[36, 1, 1, "c.fq_trace", "ctx"], [36, 1, 1, "c.fq_trace", "op"], [36, 1, 1, "c.fq_trace", "rop"]], "fq_zech_add": [[54, 1, 1, "c.fq_zech_add", "ctx"], [54, 1, 1, "c.fq_zech_add", "op1"], [54, 1, 1, "c.fq_zech_add", "op2"], [54, 1, 1, "c.fq_zech_add", "rop"]], "fq_zech_bit_pack": [[54, 1, 1, "c.fq_zech_bit_pack", "bit_size"], [54, 1, 1, "c.fq_zech_bit_pack", "ctx"], [54, 1, 1, "c.fq_zech_bit_pack", "f"], [54, 1, 1, "c.fq_zech_bit_pack", "op"]], "fq_zech_bit_unpack": [[54, 1, 1, "c.fq_zech_bit_unpack", "bit_size"], [54, 1, 1, "c.fq_zech_bit_unpack", "ctx"], [54, 1, 1, "c.fq_zech_bit_unpack", "f"], [54, 1, 1, "c.fq_zech_bit_unpack", "rop"]], "fq_zech_clear": [[54, 1, 1, "c.fq_zech_clear", "ctx"], [54, 1, 1, "c.fq_zech_clear", "rop"]], "fq_zech_ctx_clear": [[54, 1, 1, "c.fq_zech_ctx_clear", "ctx"]], "fq_zech_ctx_degree": [[54, 1, 1, "c.fq_zech_ctx_degree", "ctx"]], "fq_zech_ctx_fprint": [[54, 1, 1, "c.fq_zech_ctx_fprint", "ctx"], [54, 1, 1, "c.fq_zech_ctx_fprint", "file"]], "fq_zech_ctx_init": [[54, 1, 1, "c.fq_zech_ctx_init", "ctx"], [54, 1, 1, "c.fq_zech_ctx_init", "d"], [54, 1, 1, "c.fq_zech_ctx_init", "p"], [54, 1, 1, "c.fq_zech_ctx_init", "var"]], "fq_zech_ctx_init_conway": [[54, 1, 1, "c.fq_zech_ctx_init_conway", "ctx"], [54, 1, 1, "c.fq_zech_ctx_init_conway", "d"], [54, 1, 1, "c.fq_zech_ctx_init_conway", "p"], [54, 1, 1, "c.fq_zech_ctx_init_conway", "var"]], "fq_zech_ctx_init_fq_nmod_ctx": [[54, 1, 1, "c.fq_zech_ctx_init_fq_nmod_ctx", "ctx"], [54, 1, 1, "c.fq_zech_ctx_init_fq_nmod_ctx", "ctxn"]], "fq_zech_ctx_init_fq_nmod_ctx_check": [[54, 1, 1, "c.fq_zech_ctx_init_fq_nmod_ctx_check", "ctx"], [54, 1, 1, "c.fq_zech_ctx_init_fq_nmod_ctx_check", "ctxn"]], "fq_zech_ctx_init_modulus": [[54, 1, 1, "c.fq_zech_ctx_init_modulus", "ctx"], [54, 1, 1, "c.fq_zech_ctx_init_modulus", "modulus"], [54, 1, 1, "c.fq_zech_ctx_init_modulus", "var"]], "fq_zech_ctx_init_modulus_check": [[54, 1, 1, "c.fq_zech_ctx_init_modulus_check", "ctx"], [54, 1, 1, "c.fq_zech_ctx_init_modulus_check", "modulus"], [54, 1, 1, "c.fq_zech_ctx_init_modulus_check", "var"]], "fq_zech_ctx_init_random": [[54, 1, 1, "c.fq_zech_ctx_init_random", "ctx"], [54, 1, 1, "c.fq_zech_ctx_init_random", "d"], [54, 1, 1, "c.fq_zech_ctx_init_random", "p"], [54, 1, 1, "c.fq_zech_ctx_init_random", "var"]], "fq_zech_ctx_modulus": [[54, 1, 1, "c.fq_zech_ctx_modulus", "ctx"]], "fq_zech_ctx_order": [[54, 1, 1, "c.fq_zech_ctx_order", "ctx"], [54, 1, 1, "c.fq_zech_ctx_order", "f"]], "fq_zech_ctx_order_ui": [[54, 1, 1, "c.fq_zech_ctx_order_ui", "ctx"]], "fq_zech_ctx_prime": [[54, 1, 1, "c.fq_zech_ctx_prime", "ctx"]], "fq_zech_ctx_print": [[54, 1, 1, "c.fq_zech_ctx_print", "ctx"]], "fq_zech_ctx_randtest": [[54, 1, 1, "c.fq_zech_ctx_randtest", "ctx"]], "fq_zech_ctx_randtest_reducible": [[54, 1, 1, "c.fq_zech_ctx_randtest_reducible", "ctx"]], "fq_zech_div": [[54, 1, 1, "c.fq_zech_div", "ctx"], [54, 1, 1, "c.fq_zech_div", "op1"], [54, 1, 1, "c.fq_zech_div", "op2"], [54, 1, 1, "c.fq_zech_div", "rop"]], "fq_zech_embed_composition_matrix": [[55, 1, 1, "c.fq_zech_embed_composition_matrix", "ctx"], [55, 1, 1, "c.fq_zech_embed_composition_matrix", "gen"], [55, 1, 1, "c.fq_zech_embed_composition_matrix", "matrix"]], "fq_zech_embed_composition_matrix_sub": [[55, 1, 1, "c.fq_zech_embed_composition_matrix_sub", "ctx"], [55, 1, 1, "c.fq_zech_embed_composition_matrix_sub", "gen"], [55, 1, 1, "c.fq_zech_embed_composition_matrix_sub", "matrix"], [55, 1, 1, "c.fq_zech_embed_composition_matrix_sub", "trunc"]], "fq_zech_embed_dual_to_mono_matrix": [[55, 1, 1, "c.fq_zech_embed_dual_to_mono_matrix", "ctx"], [55, 1, 1, "c.fq_zech_embed_dual_to_mono_matrix", "res"]], "fq_zech_embed_gens": [[55, 1, 1, "c.fq_zech_embed_gens", "gen_sub"], [55, 1, 1, "c.fq_zech_embed_gens", "gen_sup"], [55, 1, 1, "c.fq_zech_embed_gens", "minpoly"], [55, 1, 1, "c.fq_zech_embed_gens", "sub_ctx"], [55, 1, 1, "c.fq_zech_embed_gens", "sup_ctx"]], "fq_zech_embed_matrices": [[55, 1, 1, "c.fq_zech_embed_matrices", "embed"], [55, 1, 1, "c.fq_zech_embed_matrices", "gen_minpoly"], [55, 1, 1, "c.fq_zech_embed_matrices", "gen_sub"], [55, 1, 1, "c.fq_zech_embed_matrices", "gen_sup"], [55, 1, 1, "c.fq_zech_embed_matrices", "project"], [55, 1, 1, "c.fq_zech_embed_matrices", "sub_ctx"], [55, 1, 1, "c.fq_zech_embed_matrices", "sup_ctx"]], "fq_zech_embed_mono_to_dual_matrix": [[55, 1, 1, "c.fq_zech_embed_mono_to_dual_matrix", "ctx"], [55, 1, 1, "c.fq_zech_embed_mono_to_dual_matrix", "res"]], "fq_zech_embed_mul_matrix": [[55, 1, 1, "c.fq_zech_embed_mul_matrix", "ctx"], [55, 1, 1, "c.fq_zech_embed_mul_matrix", "gen"], [55, 1, 1, "c.fq_zech_embed_mul_matrix", "matrix"]], "fq_zech_embed_trace_matrix": [[55, 1, 1, "c.fq_zech_embed_trace_matrix", "basis"], [55, 1, 1, "c.fq_zech_embed_trace_matrix", "res"], [55, 1, 1, "c.fq_zech_embed_trace_matrix", "sub_ctx"], [55, 1, 1, "c.fq_zech_embed_trace_matrix", "sup_ctx"]], "fq_zech_equal": [[54, 1, 1, "c.fq_zech_equal", "ctx"], [54, 1, 1, "c.fq_zech_equal", "op1"], [54, 1, 1, "c.fq_zech_equal", "op2"]], "fq_zech_fprint": [[54, 1, 1, "c.fq_zech_fprint", "ctx"], [54, 1, 1, "c.fq_zech_fprint", "file"], [54, 1, 1, "c.fq_zech_fprint", "op"]], "fq_zech_fprint_pretty": [[54, 1, 1, "c.fq_zech_fprint_pretty", "ctx"], [54, 1, 1, "c.fq_zech_fprint_pretty", "file"], [54, 1, 1, "c.fq_zech_fprint_pretty", "op"]], "fq_zech_frobenius": [[54, 1, 1, "c.fq_zech_frobenius", "ctx"], [54, 1, 1, "c.fq_zech_frobenius", "e"], [54, 1, 1, "c.fq_zech_frobenius", "op"], [54, 1, 1, "c.fq_zech_frobenius", "rop"]], "fq_zech_gcdinv": [[54, 1, 1, "c.fq_zech_gcdinv", "ctx"], [54, 1, 1, "c.fq_zech_gcdinv", "f"], [54, 1, 1, "c.fq_zech_gcdinv", "inv"], [54, 1, 1, "c.fq_zech_gcdinv", "op"]], "fq_zech_gen": [[54, 1, 1, "c.fq_zech_gen", "ctx"], [54, 1, 1, "c.fq_zech_gen", "rop"]], "fq_zech_get_fmpz": [[54, 1, 1, "c.fq_zech_get_fmpz", "ctx"], [54, 1, 1, "c.fq_zech_get_fmpz", "op"], [54, 1, 1, "c.fq_zech_get_fmpz", "rop"]], "fq_zech_get_fq_nmod": [[54, 1, 1, "c.fq_zech_get_fq_nmod", "ctx"], [54, 1, 1, "c.fq_zech_get_fq_nmod", "op"], [54, 1, 1, "c.fq_zech_get_fq_nmod", "rop"]], "fq_zech_get_nmod_mat": [[54, 1, 1, "c.fq_zech_get_nmod_mat", "a"], [54, 1, 1, "c.fq_zech_get_nmod_mat", "col"], [54, 1, 1, "c.fq_zech_get_nmod_mat", "ctx"]], "fq_zech_get_nmod_poly": [[54, 1, 1, "c.fq_zech_get_nmod_poly", "a"], [54, 1, 1, "c.fq_zech_get_nmod_poly", "b"], [54, 1, 1, "c.fq_zech_get_nmod_poly", "ctx"]], "fq_zech_get_str": [[54, 1, 1, "c.fq_zech_get_str", "ctx"], [54, 1, 1, "c.fq_zech_get_str", "op"]], "fq_zech_get_str_pretty": [[54, 1, 1, "c.fq_zech_get_str_pretty", "ctx"], [54, 1, 1, "c.fq_zech_get_str_pretty", "op"]], "fq_zech_init": [[54, 1, 1, "c.fq_zech_init", "ctx"], [54, 1, 1, "c.fq_zech_init", "rop"]], "fq_zech_init2": [[54, 1, 1, "c.fq_zech_init2", "ctx"], [54, 1, 1, "c.fq_zech_init2", "rop"]], "fq_zech_inv": [[54, 1, 1, "c.fq_zech_inv", "ctx"], [54, 1, 1, "c.fq_zech_inv", "op"], [54, 1, 1, "c.fq_zech_inv", "rop"]], "fq_zech_is_invertible": [[54, 1, 1, "c.fq_zech_is_invertible", "ctx"], [54, 1, 1, "c.fq_zech_is_invertible", "op"]], "fq_zech_is_invertible_f": [[54, 1, 1, "c.fq_zech_is_invertible_f", "ctx"], [54, 1, 1, "c.fq_zech_is_invertible_f", "f"], [54, 1, 1, "c.fq_zech_is_invertible_f", "op"]], "fq_zech_is_one": [[54, 1, 1, "c.fq_zech_is_one", "ctx"], [54, 1, 1, "c.fq_zech_is_one", "op"]], "fq_zech_is_primitive": [[54, 1, 1, "c.fq_zech_is_primitive", "ctx"], [54, 1, 1, "c.fq_zech_is_primitive", "op"]], "fq_zech_is_square": [[54, 1, 1, "c.fq_zech_is_square", "ctx"], [54, 1, 1, "c.fq_zech_is_square", "op"]], "fq_zech_is_zero": [[54, 1, 1, "c.fq_zech_is_zero", "ctx"], [54, 1, 1, "c.fq_zech_is_zero", "op"]], "fq_zech_mat_add": [[56, 1, 1, "c.fq_zech_mat_add", "A"], [56, 1, 1, "c.fq_zech_mat_add", "B"], [56, 1, 1, "c.fq_zech_mat_add", "C"], [56, 1, 1, "c.fq_zech_mat_add", "ctx"]], "fq_zech_mat_can_solve": [[56, 1, 1, "c.fq_zech_mat_can_solve", "A"], [56, 1, 1, "c.fq_zech_mat_can_solve", "B"], [56, 1, 1, "c.fq_zech_mat_can_solve", "X"], [56, 1, 1, "c.fq_zech_mat_can_solve", "ctx"]], "fq_zech_mat_charpoly": [[56, 1, 1, "c.fq_zech_mat_charpoly", "M"], [56, 1, 1, "c.fq_zech_mat_charpoly", "p"]], "fq_zech_mat_charpoly_danilevsky": [[56, 1, 1, "c.fq_zech_mat_charpoly_danilevsky", "M"], [56, 1, 1, "c.fq_zech_mat_charpoly_danilevsky", "ctx"], [56, 1, 1, "c.fq_zech_mat_charpoly_danilevsky", "p"]], "fq_zech_mat_clear": [[56, 1, 1, "c.fq_zech_mat_clear", "ctx"], [56, 1, 1, "c.fq_zech_mat_clear", "mat"]], "fq_zech_mat_concat_horizontal": [[56, 1, 1, "c.fq_zech_mat_concat_horizontal", "ctx"], [56, 1, 1, "c.fq_zech_mat_concat_horizontal", "mat1"], [56, 1, 1, "c.fq_zech_mat_concat_horizontal", "mat2"], [56, 1, 1, "c.fq_zech_mat_concat_horizontal", "res"]], "fq_zech_mat_concat_vertical": [[56, 1, 1, "c.fq_zech_mat_concat_vertical", "ctx"], [56, 1, 1, "c.fq_zech_mat_concat_vertical", "mat1"], [56, 1, 1, "c.fq_zech_mat_concat_vertical", "mat2"], [56, 1, 1, "c.fq_zech_mat_concat_vertical", "res"]], "fq_zech_mat_entry": [[56, 1, 1, "c.fq_zech_mat_entry", "i"], [56, 1, 1, "c.fq_zech_mat_entry", "j"], [56, 1, 1, "c.fq_zech_mat_entry", "mat"]], "fq_zech_mat_entry_set": [[56, 1, 1, "c.fq_zech_mat_entry_set", "ctx"], [56, 1, 1, "c.fq_zech_mat_entry_set", "i"], [56, 1, 1, "c.fq_zech_mat_entry_set", "j"], [56, 1, 1, "c.fq_zech_mat_entry_set", "mat"], [56, 1, 1, "c.fq_zech_mat_entry_set", "x"]], "fq_zech_mat_equal": [[56, 1, 1, "c.fq_zech_mat_equal", "ctx"], [56, 1, 1, "c.fq_zech_mat_equal", "mat1"], [56, 1, 1, "c.fq_zech_mat_equal", "mat2"]], "fq_zech_mat_fprint": [[56, 1, 1, "c.fq_zech_mat_fprint", "ctx"], [56, 1, 1, "c.fq_zech_mat_fprint", "file"], [56, 1, 1, "c.fq_zech_mat_fprint", "mat"]], "fq_zech_mat_fprint_pretty": [[56, 1, 1, "c.fq_zech_mat_fprint_pretty", "ctx"], [56, 1, 1, "c.fq_zech_mat_fprint_pretty", "file"], [56, 1, 1, "c.fq_zech_mat_fprint_pretty", "mat"]], "fq_zech_mat_init": [[56, 1, 1, "c.fq_zech_mat_init", "cols"], [56, 1, 1, "c.fq_zech_mat_init", "ctx"], [56, 1, 1, "c.fq_zech_mat_init", "mat"], [56, 1, 1, "c.fq_zech_mat_init", "rows"]], "fq_zech_mat_init_set": [[56, 1, 1, "c.fq_zech_mat_init_set", "ctx"], [56, 1, 1, "c.fq_zech_mat_init_set", "mat"], [56, 1, 1, "c.fq_zech_mat_init_set", "src"]], "fq_zech_mat_is_empty": [[56, 1, 1, "c.fq_zech_mat_is_empty", "ctx"], [56, 1, 1, "c.fq_zech_mat_is_empty", "mat"]], "fq_zech_mat_is_one": [[56, 1, 1, "c.fq_zech_mat_is_one", "ctx"], [56, 1, 1, "c.fq_zech_mat_is_one", "mat"]], "fq_zech_mat_is_square": [[56, 1, 1, "c.fq_zech_mat_is_square", "ctx"], [56, 1, 1, "c.fq_zech_mat_is_square", "mat"]], "fq_zech_mat_is_zero": [[56, 1, 1, "c.fq_zech_mat_is_zero", "ctx"], [56, 1, 1, "c.fq_zech_mat_is_zero", "mat"]], "fq_zech_mat_lu": [[56, 1, 1, "c.fq_zech_mat_lu", "A"], [56, 1, 1, "c.fq_zech_mat_lu", "P"], [56, 1, 1, "c.fq_zech_mat_lu", "ctx"], [56, 1, 1, "c.fq_zech_mat_lu", "rank_check"]], "fq_zech_mat_lu_classical": [[56, 1, 1, "c.fq_zech_mat_lu_classical", "A"], [56, 1, 1, "c.fq_zech_mat_lu_classical", "P"], [56, 1, 1, "c.fq_zech_mat_lu_classical", "ctx"], [56, 1, 1, "c.fq_zech_mat_lu_classical", "rank_check"]], "fq_zech_mat_lu_recursive": [[56, 1, 1, "c.fq_zech_mat_lu_recursive", "A"], [56, 1, 1, "c.fq_zech_mat_lu_recursive", "P"], [56, 1, 1, "c.fq_zech_mat_lu_recursive", "ctx"], [56, 1, 1, "c.fq_zech_mat_lu_recursive", "rank_check"]], "fq_zech_mat_minpoly": [[56, 1, 1, "c.fq_zech_mat_minpoly", "M"], [56, 1, 1, "c.fq_zech_mat_minpoly", "ctx"], [56, 1, 1, "c.fq_zech_mat_minpoly", "p"]], "fq_zech_mat_mul": [[56, 1, 1, "c.fq_zech_mat_mul", "A"], [56, 1, 1, "c.fq_zech_mat_mul", "B"], [56, 1, 1, "c.fq_zech_mat_mul", "C"], [56, 1, 1, "c.fq_zech_mat_mul", "ctx"]], "fq_zech_mat_mul_KS": [[56, 1, 1, "c.fq_zech_mat_mul_KS", "A"], [56, 1, 1, "c.fq_zech_mat_mul_KS", "B"], [56, 1, 1, "c.fq_zech_mat_mul_KS", "C"], [56, 1, 1, "c.fq_zech_mat_mul_KS", "ctx"]], "fq_zech_mat_mul_classical": [[56, 1, 1, "c.fq_zech_mat_mul_classical", "A"], [56, 1, 1, "c.fq_zech_mat_mul_classical", "B"], [56, 1, 1, "c.fq_zech_mat_mul_classical", "C"], [56, 1, 1, "c.fq_zech_mat_mul_classical", "ctx"]], "fq_zech_mat_mul_vec": [[56, 1, 1, "c.fq_zech_mat_mul_vec", "A"], [56, 1, 1, "c.fq_zech_mat_mul_vec", "b"], [56, 1, 1, "c.fq_zech_mat_mul_vec", "blen"], [56, 1, 1, "c.fq_zech_mat_mul_vec", "c"]], "fq_zech_mat_mul_vec_ptr": [[56, 1, 1, "c.fq_zech_mat_mul_vec_ptr", "A"], [56, 1, 1, "c.fq_zech_mat_mul_vec_ptr", "b"], [56, 1, 1, "c.fq_zech_mat_mul_vec_ptr", "blen"], [56, 1, 1, "c.fq_zech_mat_mul_vec_ptr", "c"]], "fq_zech_mat_ncols": [[56, 1, 1, "c.fq_zech_mat_ncols", "ctx"], [56, 1, 1, "c.fq_zech_mat_ncols", "mat"]], "fq_zech_mat_neg": [[56, 1, 1, "c.fq_zech_mat_neg", "A"], [56, 1, 1, "c.fq_zech_mat_neg", "B"], [56, 1, 1, "c.fq_zech_mat_neg", "ctx"]], "fq_zech_mat_nrows": [[56, 1, 1, "c.fq_zech_mat_nrows", "ctx"], [56, 1, 1, "c.fq_zech_mat_nrows", "mat"]], "fq_zech_mat_one": [[56, 1, 1, "c.fq_zech_mat_one", "ctx"], [56, 1, 1, "c.fq_zech_mat_one", "mat"]], "fq_zech_mat_print": [[56, 1, 1, "c.fq_zech_mat_print", "ctx"], [56, 1, 1, "c.fq_zech_mat_print", "mat"]], "fq_zech_mat_print_pretty": [[56, 1, 1, "c.fq_zech_mat_print_pretty", "ctx"], [56, 1, 1, "c.fq_zech_mat_print_pretty", "mat"]], "fq_zech_mat_randops": [[56, 1, 1, "c.fq_zech_mat_randops", "count"], [56, 1, 1, "c.fq_zech_mat_randops", "ctx"], [56, 1, 1, "c.fq_zech_mat_randops", "mat"], [56, 1, 1, "c.fq_zech_mat_randops", "state"]], "fq_zech_mat_randpermdiag": [[56, 1, 1, "c.fq_zech_mat_randpermdiag", "ctx"], [56, 1, 1, "c.fq_zech_mat_randpermdiag", "diag"], [56, 1, 1, "c.fq_zech_mat_randpermdiag", "mat"], [56, 1, 1, "c.fq_zech_mat_randpermdiag", "n"], [56, 1, 1, "c.fq_zech_mat_randpermdiag", "state"]], "fq_zech_mat_randrank": [[56, 1, 1, "c.fq_zech_mat_randrank", "ctx"], [56, 1, 1, "c.fq_zech_mat_randrank", "mat"], [56, 1, 1, "c.fq_zech_mat_randrank", "rank"], [56, 1, 1, "c.fq_zech_mat_randrank", "state"]], "fq_zech_mat_randtest": [[56, 1, 1, "c.fq_zech_mat_randtest", "ctx"], [56, 1, 1, "c.fq_zech_mat_randtest", "mat"], [56, 1, 1, "c.fq_zech_mat_randtest", "state"]], "fq_zech_mat_randtril": [[56, 1, 1, "c.fq_zech_mat_randtril", "ctx"], [56, 1, 1, "c.fq_zech_mat_randtril", "mat"], [56, 1, 1, "c.fq_zech_mat_randtril", "state"], [56, 1, 1, "c.fq_zech_mat_randtril", "unit"]], "fq_zech_mat_randtriu": [[56, 1, 1, "c.fq_zech_mat_randtriu", "ctx"], [56, 1, 1, "c.fq_zech_mat_randtriu", "mat"], [56, 1, 1, "c.fq_zech_mat_randtriu", "state"], [56, 1, 1, "c.fq_zech_mat_randtriu", "unit"]], "fq_zech_mat_reduce_row": [[56, 1, 1, "c.fq_zech_mat_reduce_row", "A"], [56, 1, 1, "c.fq_zech_mat_reduce_row", "L"], [56, 1, 1, "c.fq_zech_mat_reduce_row", "P"], [56, 1, 1, "c.fq_zech_mat_reduce_row", "ctx"], [56, 1, 1, "c.fq_zech_mat_reduce_row", "n"]], "fq_zech_mat_rref": [[56, 1, 1, "c.fq_zech_mat_rref", "A"], [56, 1, 1, "c.fq_zech_mat_rref", "ctx"]], "fq_zech_mat_set": [[56, 1, 1, "c.fq_zech_mat_set", "ctx"], [56, 1, 1, "c.fq_zech_mat_set", "mat"], [56, 1, 1, "c.fq_zech_mat_set", "src"]], "fq_zech_mat_set_fmpz_mod_mat": [[56, 1, 1, "c.fq_zech_mat_set_fmpz_mod_mat", "ctx"], [56, 1, 1, "c.fq_zech_mat_set_fmpz_mod_mat", "mat1"], [56, 1, 1, "c.fq_zech_mat_set_fmpz_mod_mat", "mat2"]], "fq_zech_mat_set_nmod_mat": [[56, 1, 1, "c.fq_zech_mat_set_nmod_mat", "ctx"], [56, 1, 1, "c.fq_zech_mat_set_nmod_mat", "mat1"], [56, 1, 1, "c.fq_zech_mat_set_nmod_mat", "mat2"]], "fq_zech_mat_similarity": [[56, 1, 1, "c.fq_zech_mat_similarity", "M"], [56, 1, 1, "c.fq_zech_mat_similarity", "ctx"], [56, 1, 1, "c.fq_zech_mat_similarity", "d"], [56, 1, 1, "c.fq_zech_mat_similarity", "r"]], "fq_zech_mat_solve": [[56, 1, 1, "c.fq_zech_mat_solve", "A"], [56, 1, 1, "c.fq_zech_mat_solve", "B"], [56, 1, 1, "c.fq_zech_mat_solve", "X"], [56, 1, 1, "c.fq_zech_mat_solve", "ctx"]], "fq_zech_mat_solve_tril": [[56, 1, 1, "c.fq_zech_mat_solve_tril", "B"], [56, 1, 1, "c.fq_zech_mat_solve_tril", "L"], [56, 1, 1, "c.fq_zech_mat_solve_tril", "X"], [56, 1, 1, "c.fq_zech_mat_solve_tril", "ctx"], [56, 1, 1, "c.fq_zech_mat_solve_tril", "unit"]], "fq_zech_mat_solve_tril_classical": [[56, 1, 1, "c.fq_zech_mat_solve_tril_classical", "B"], [56, 1, 1, "c.fq_zech_mat_solve_tril_classical", "L"], [56, 1, 1, "c.fq_zech_mat_solve_tril_classical", "X"], [56, 1, 1, "c.fq_zech_mat_solve_tril_classical", "ctx"], [56, 1, 1, "c.fq_zech_mat_solve_tril_classical", "unit"]], "fq_zech_mat_solve_tril_recursive": [[56, 1, 1, "c.fq_zech_mat_solve_tril_recursive", "B"], [56, 1, 1, "c.fq_zech_mat_solve_tril_recursive", "L"], [56, 1, 1, "c.fq_zech_mat_solve_tril_recursive", "X"], [56, 1, 1, "c.fq_zech_mat_solve_tril_recursive", "ctx"], [56, 1, 1, "c.fq_zech_mat_solve_tril_recursive", "unit"]], "fq_zech_mat_solve_triu": [[56, 1, 1, "c.fq_zech_mat_solve_triu", "B"], [56, 1, 1, "c.fq_zech_mat_solve_triu", "U"], [56, 1, 1, "c.fq_zech_mat_solve_triu", "X"], [56, 1, 1, "c.fq_zech_mat_solve_triu", "ctx"], [56, 1, 1, "c.fq_zech_mat_solve_triu", "unit"]], "fq_zech_mat_solve_triu_classical": [[56, 1, 1, "c.fq_zech_mat_solve_triu_classical", "B"], [56, 1, 1, "c.fq_zech_mat_solve_triu_classical", "U"], [56, 1, 1, "c.fq_zech_mat_solve_triu_classical", "X"], [56, 1, 1, "c.fq_zech_mat_solve_triu_classical", "ctx"], [56, 1, 1, "c.fq_zech_mat_solve_triu_classical", "unit"]], "fq_zech_mat_solve_triu_recursive": [[56, 1, 1, "c.fq_zech_mat_solve_triu_recursive", "B"], [56, 1, 1, "c.fq_zech_mat_solve_triu_recursive", "U"], [56, 1, 1, "c.fq_zech_mat_solve_triu_recursive", "X"], [56, 1, 1, "c.fq_zech_mat_solve_triu_recursive", "ctx"], [56, 1, 1, "c.fq_zech_mat_solve_triu_recursive", "unit"]], "fq_zech_mat_sub": [[56, 1, 1, "c.fq_zech_mat_sub", "A"], [56, 1, 1, "c.fq_zech_mat_sub", "B"], [56, 1, 1, "c.fq_zech_mat_sub", "C"], [56, 1, 1, "c.fq_zech_mat_sub", "ctx"]], "fq_zech_mat_submul": [[56, 1, 1, "c.fq_zech_mat_submul", "A"], [56, 1, 1, "c.fq_zech_mat_submul", "B"], [56, 1, 1, "c.fq_zech_mat_submul", "C"], [56, 1, 1, "c.fq_zech_mat_submul", "D"], [56, 1, 1, "c.fq_zech_mat_submul", "ctx"]], "fq_zech_mat_swap": [[56, 1, 1, "c.fq_zech_mat_swap", "ctx"], [56, 1, 1, "c.fq_zech_mat_swap", "mat1"], [56, 1, 1, "c.fq_zech_mat_swap", "mat2"]], "fq_zech_mat_swap_entrywise": [[56, 1, 1, "c.fq_zech_mat_swap_entrywise", "mat1"], [56, 1, 1, "c.fq_zech_mat_swap_entrywise", "mat2"]], "fq_zech_mat_vec_mul": [[56, 1, 1, "c.fq_zech_mat_vec_mul", "B"], [56, 1, 1, "c.fq_zech_mat_vec_mul", "a"], [56, 1, 1, "c.fq_zech_mat_vec_mul", "alen"], [56, 1, 1, "c.fq_zech_mat_vec_mul", "c"]], "fq_zech_mat_vec_mul_ptr": [[56, 1, 1, "c.fq_zech_mat_vec_mul_ptr", "B"], [56, 1, 1, "c.fq_zech_mat_vec_mul_ptr", "a"], [56, 1, 1, "c.fq_zech_mat_vec_mul_ptr", "alen"], [56, 1, 1, "c.fq_zech_mat_vec_mul_ptr", "c"]], "fq_zech_mat_window_clear": [[56, 1, 1, "c.fq_zech_mat_window_clear", "ctx"], [56, 1, 1, "c.fq_zech_mat_window_clear", "window"]], "fq_zech_mat_window_init": [[56, 1, 1, "c.fq_zech_mat_window_init", "c1"], [56, 1, 1, "c.fq_zech_mat_window_init", "c2"], [56, 1, 1, "c.fq_zech_mat_window_init", "ctx"], [56, 1, 1, "c.fq_zech_mat_window_init", "mat"], [56, 1, 1, "c.fq_zech_mat_window_init", "r1"], [56, 1, 1, "c.fq_zech_mat_window_init", "r2"], [56, 1, 1, "c.fq_zech_mat_window_init", "window"]], "fq_zech_mat_zero": [[56, 1, 1, "c.fq_zech_mat_zero", "ctx"], [56, 1, 1, "c.fq_zech_mat_zero", "mat"]], "fq_zech_modulus_derivative_inv": [[55, 1, 1, "c.fq_zech_modulus_derivative_inv", "ctx"], [55, 1, 1, "c.fq_zech_modulus_derivative_inv", "m_prime"], [55, 1, 1, "c.fq_zech_modulus_derivative_inv", "m_prime_inv"]], "fq_zech_modulus_pow_series_inv": [[55, 1, 1, "c.fq_zech_modulus_pow_series_inv", "ctx"], [55, 1, 1, "c.fq_zech_modulus_pow_series_inv", "res"], [55, 1, 1, "c.fq_zech_modulus_pow_series_inv", "trunc"]], "fq_zech_mul": [[54, 1, 1, "c.fq_zech_mul", "ctx"], [54, 1, 1, "c.fq_zech_mul", "op1"], [54, 1, 1, "c.fq_zech_mul", "op2"], [54, 1, 1, "c.fq_zech_mul", "rop"]], "fq_zech_mul_fmpz": [[54, 1, 1, "c.fq_zech_mul_fmpz", "ctx"], [54, 1, 1, "c.fq_zech_mul_fmpz", "op"], [54, 1, 1, "c.fq_zech_mul_fmpz", "rop"], [54, 1, 1, "c.fq_zech_mul_fmpz", "x"]], "fq_zech_mul_si": [[54, 1, 1, "c.fq_zech_mul_si", "ctx"], [54, 1, 1, "c.fq_zech_mul_si", "op"], [54, 1, 1, "c.fq_zech_mul_si", "rop"], [54, 1, 1, "c.fq_zech_mul_si", "x"]], "fq_zech_mul_ui": [[54, 1, 1, "c.fq_zech_mul_ui", "ctx"], [54, 1, 1, "c.fq_zech_mul_ui", "op"], [54, 1, 1, "c.fq_zech_mul_ui", "rop"], [54, 1, 1, "c.fq_zech_mul_ui", "x"]], "fq_zech_multiplicative_order": [[54, 1, 1, "c.fq_zech_multiplicative_order", "ctx"], [54, 1, 1, "c.fq_zech_multiplicative_order", "op"], [54, 1, 1, "c.fq_zech_multiplicative_order", "ord"]], "fq_zech_neg": [[54, 1, 1, "c.fq_zech_neg", "ctx"], [54, 1, 1, "c.fq_zech_neg", "op"], [54, 1, 1, "c.fq_zech_neg", "rop"]], "fq_zech_norm": [[54, 1, 1, "c.fq_zech_norm", "ctx"], [54, 1, 1, "c.fq_zech_norm", "op"], [54, 1, 1, "c.fq_zech_norm", "rop"]], "fq_zech_one": [[54, 1, 1, "c.fq_zech_one", "ctx"], [54, 1, 1, "c.fq_zech_one", "rop"]], "fq_zech_poly_add": [[57, 1, 1, "c.fq_zech_poly_add", "ctx"], [57, 1, 1, "c.fq_zech_poly_add", "poly1"], [57, 1, 1, "c.fq_zech_poly_add", "poly2"], [57, 1, 1, "c.fq_zech_poly_add", "res"]], "fq_zech_poly_add_series": [[57, 1, 1, "c.fq_zech_poly_add_series", "ctx"], [57, 1, 1, "c.fq_zech_poly_add_series", "n"], [57, 1, 1, "c.fq_zech_poly_add_series", "poly1"], [57, 1, 1, "c.fq_zech_poly_add_series", "poly2"], [57, 1, 1, "c.fq_zech_poly_add_series", "res"]], "fq_zech_poly_add_si": [[57, 1, 1, "c.fq_zech_poly_add_si", "c"], [57, 1, 1, "c.fq_zech_poly_add_si", "ctx"], [57, 1, 1, "c.fq_zech_poly_add_si", "poly1"], [57, 1, 1, "c.fq_zech_poly_add_si", "res"]], "fq_zech_poly_clear": [[57, 1, 1, "c.fq_zech_poly_clear", "ctx"], [57, 1, 1, "c.fq_zech_poly_clear", "poly"]], "fq_zech_poly_compose": [[57, 1, 1, "c.fq_zech_poly_compose", "ctx"], [57, 1, 1, "c.fq_zech_poly_compose", "op1"], [57, 1, 1, "c.fq_zech_poly_compose", "op2"], [57, 1, 1, "c.fq_zech_poly_compose", "rop"]], "fq_zech_poly_compose_divconquer": [[57, 1, 1, "c.fq_zech_poly_compose_divconquer", "ctx"], [57, 1, 1, "c.fq_zech_poly_compose_divconquer", "op1"], [57, 1, 1, "c.fq_zech_poly_compose_divconquer", "op2"], [57, 1, 1, "c.fq_zech_poly_compose_divconquer", "rop"]], "fq_zech_poly_compose_horner": [[57, 1, 1, "c.fq_zech_poly_compose_horner", "ctx"], [57, 1, 1, "c.fq_zech_poly_compose_horner", "op1"], [57, 1, 1, "c.fq_zech_poly_compose_horner", "op2"], [57, 1, 1, "c.fq_zech_poly_compose_horner", "rop"]], "fq_zech_poly_compose_mod": [[57, 1, 1, "c.fq_zech_poly_compose_mod", "ctx"], [57, 1, 1, "c.fq_zech_poly_compose_mod", "f"], [57, 1, 1, "c.fq_zech_poly_compose_mod", "g"], [57, 1, 1, "c.fq_zech_poly_compose_mod", "h"], [57, 1, 1, "c.fq_zech_poly_compose_mod", "res"]], "fq_zech_poly_compose_mod_brent_kung": [[57, 1, 1, "c.fq_zech_poly_compose_mod_brent_kung", "ctx"], [57, 1, 1, "c.fq_zech_poly_compose_mod_brent_kung", "f"], [57, 1, 1, "c.fq_zech_poly_compose_mod_brent_kung", "g"], [57, 1, 1, "c.fq_zech_poly_compose_mod_brent_kung", "h"], [57, 1, 1, "c.fq_zech_poly_compose_mod_brent_kung", "res"]], "fq_zech_poly_compose_mod_brent_kung_precomp_preinv": [[57, 1, 1, "c.fq_zech_poly_compose_mod_brent_kung_precomp_preinv", "A"], [57, 1, 1, "c.fq_zech_poly_compose_mod_brent_kung_precomp_preinv", "ctx"], [57, 1, 1, "c.fq_zech_poly_compose_mod_brent_kung_precomp_preinv", "f"], [57, 1, 1, "c.fq_zech_poly_compose_mod_brent_kung_precomp_preinv", "h"], [57, 1, 1, "c.fq_zech_poly_compose_mod_brent_kung_precomp_preinv", "hinv"], [57, 1, 1, "c.fq_zech_poly_compose_mod_brent_kung_precomp_preinv", "res"]], "fq_zech_poly_compose_mod_brent_kung_preinv": [[57, 1, 1, "c.fq_zech_poly_compose_mod_brent_kung_preinv", "ctx"], [57, 1, 1, "c.fq_zech_poly_compose_mod_brent_kung_preinv", "f"], [57, 1, 1, "c.fq_zech_poly_compose_mod_brent_kung_preinv", "g"], [57, 1, 1, "c.fq_zech_poly_compose_mod_brent_kung_preinv", "h"], [57, 1, 1, "c.fq_zech_poly_compose_mod_brent_kung_preinv", "hinv"], [57, 1, 1, "c.fq_zech_poly_compose_mod_brent_kung_preinv", "res"]], "fq_zech_poly_compose_mod_horner": [[57, 1, 1, "c.fq_zech_poly_compose_mod_horner", "ctx"], [57, 1, 1, "c.fq_zech_poly_compose_mod_horner", "f"], [57, 1, 1, "c.fq_zech_poly_compose_mod_horner", "g"], [57, 1, 1, "c.fq_zech_poly_compose_mod_horner", "h"], [57, 1, 1, "c.fq_zech_poly_compose_mod_horner", "res"]], "fq_zech_poly_compose_mod_horner_preinv": [[57, 1, 1, "c.fq_zech_poly_compose_mod_horner_preinv", "ctx"], [57, 1, 1, "c.fq_zech_poly_compose_mod_horner_preinv", "f"], [57, 1, 1, "c.fq_zech_poly_compose_mod_horner_preinv", "g"], [57, 1, 1, "c.fq_zech_poly_compose_mod_horner_preinv", "h"], [57, 1, 1, "c.fq_zech_poly_compose_mod_horner_preinv", "hinv"], [57, 1, 1, "c.fq_zech_poly_compose_mod_horner_preinv", "res"]], "fq_zech_poly_compose_mod_preinv": [[57, 1, 1, "c.fq_zech_poly_compose_mod_preinv", "ctx"], [57, 1, 1, "c.fq_zech_poly_compose_mod_preinv", "f"], [57, 1, 1, "c.fq_zech_poly_compose_mod_preinv", "g"], [57, 1, 1, "c.fq_zech_poly_compose_mod_preinv", "h"], [57, 1, 1, "c.fq_zech_poly_compose_mod_preinv", "hinv"], [57, 1, 1, "c.fq_zech_poly_compose_mod_preinv", "res"]], "fq_zech_poly_deflate": [[57, 1, 1, "c.fq_zech_poly_deflate", "ctx"], [57, 1, 1, "c.fq_zech_poly_deflate", "deflation"], [57, 1, 1, "c.fq_zech_poly_deflate", "input"], [57, 1, 1, "c.fq_zech_poly_deflate", "result"]], "fq_zech_poly_deflation": [[57, 1, 1, "c.fq_zech_poly_deflation", "ctx"], [57, 1, 1, "c.fq_zech_poly_deflation", "input"]], "fq_zech_poly_degree": [[57, 1, 1, "c.fq_zech_poly_degree", "ctx"], [57, 1, 1, "c.fq_zech_poly_degree", "poly"]], "fq_zech_poly_derivative": [[57, 1, 1, "c.fq_zech_poly_derivative", "ctx"], [57, 1, 1, "c.fq_zech_poly_derivative", "op"], [57, 1, 1, "c.fq_zech_poly_derivative", "rop"]], "fq_zech_poly_div_basecase": [[57, 1, 1, "c.fq_zech_poly_div_basecase", "A"], [57, 1, 1, "c.fq_zech_poly_div_basecase", "B"], [57, 1, 1, "c.fq_zech_poly_div_basecase", "Q"], [57, 1, 1, "c.fq_zech_poly_div_basecase", "ctx"]], "fq_zech_poly_div_newton_n_preinv": [[57, 1, 1, "c.fq_zech_poly_div_newton_n_preinv", "A"], [57, 1, 1, "c.fq_zech_poly_div_newton_n_preinv", "B"], [57, 1, 1, "c.fq_zech_poly_div_newton_n_preinv", "Binv"], [57, 1, 1, "c.fq_zech_poly_div_newton_n_preinv", "Q"], [57, 1, 1, "c.fq_zech_poly_div_newton_n_preinv", "ctx"]], "fq_zech_poly_div_series": [[57, 1, 1, "c.fq_zech_poly_div_series", "A"], [57, 1, 1, "c.fq_zech_poly_div_series", "B"], [57, 1, 1, "c.fq_zech_poly_div_series", "Q"], [57, 1, 1, "c.fq_zech_poly_div_series", "ctx"], [57, 1, 1, "c.fq_zech_poly_div_series", "n"]], "fq_zech_poly_divides": [[57, 1, 1, "c.fq_zech_poly_divides", "A"], [57, 1, 1, "c.fq_zech_poly_divides", "B"], [57, 1, 1, "c.fq_zech_poly_divides", "Q"], [57, 1, 1, "c.fq_zech_poly_divides", "ctx"]], "fq_zech_poly_divrem": [[57, 1, 1, "c.fq_zech_poly_divrem", "A"], [57, 1, 1, "c.fq_zech_poly_divrem", "B"], [57, 1, 1, "c.fq_zech_poly_divrem", "Q"], [57, 1, 1, "c.fq_zech_poly_divrem", "R"], [57, 1, 1, "c.fq_zech_poly_divrem", "ctx"]], "fq_zech_poly_divrem_basecase": [[57, 1, 1, "c.fq_zech_poly_divrem_basecase", "A"], [57, 1, 1, "c.fq_zech_poly_divrem_basecase", "B"], [57, 1, 1, "c.fq_zech_poly_divrem_basecase", "Q"], [57, 1, 1, "c.fq_zech_poly_divrem_basecase", "R"], [57, 1, 1, "c.fq_zech_poly_divrem_basecase", "ctx"]], "fq_zech_poly_divrem_divconquer": [[57, 1, 1, "c.fq_zech_poly_divrem_divconquer", "A"], [57, 1, 1, "c.fq_zech_poly_divrem_divconquer", "B"], [57, 1, 1, "c.fq_zech_poly_divrem_divconquer", "Q"], [57, 1, 1, "c.fq_zech_poly_divrem_divconquer", "R"], [57, 1, 1, "c.fq_zech_poly_divrem_divconquer", "ctx"]], "fq_zech_poly_divrem_f": [[57, 1, 1, "c.fq_zech_poly_divrem_f", "A"], [57, 1, 1, "c.fq_zech_poly_divrem_f", "B"], [57, 1, 1, "c.fq_zech_poly_divrem_f", "Q"], [57, 1, 1, "c.fq_zech_poly_divrem_f", "R"], [57, 1, 1, "c.fq_zech_poly_divrem_f", "ctx"], [57, 1, 1, "c.fq_zech_poly_divrem_f", "f"]], "fq_zech_poly_divrem_newton_n_preinv": [[57, 1, 1, "c.fq_zech_poly_divrem_newton_n_preinv", "A"], [57, 1, 1, "c.fq_zech_poly_divrem_newton_n_preinv", "B"], [57, 1, 1, "c.fq_zech_poly_divrem_newton_n_preinv", "Binv"], [57, 1, 1, "c.fq_zech_poly_divrem_newton_n_preinv", "Q"], [57, 1, 1, "c.fq_zech_poly_divrem_newton_n_preinv", "R"], [57, 1, 1, "c.fq_zech_poly_divrem_newton_n_preinv", "ctx"]], "fq_zech_poly_equal": [[57, 1, 1, "c.fq_zech_poly_equal", "ctx"], [57, 1, 1, "c.fq_zech_poly_equal", "poly1"], [57, 1, 1, "c.fq_zech_poly_equal", "poly2"]], "fq_zech_poly_equal_fq_zech": [[57, 1, 1, "c.fq_zech_poly_equal_fq_zech", "c"], [57, 1, 1, "c.fq_zech_poly_equal_fq_zech", "ctx"], [57, 1, 1, "c.fq_zech_poly_equal_fq_zech", "poly"]], "fq_zech_poly_equal_trunc": [[57, 1, 1, "c.fq_zech_poly_equal_trunc", "ctx"], [57, 1, 1, "c.fq_zech_poly_equal_trunc", "n"], [57, 1, 1, "c.fq_zech_poly_equal_trunc", "poly1"], [57, 1, 1, "c.fq_zech_poly_equal_trunc", "poly2"]], "fq_zech_poly_evaluate_fq_zech": [[57, 1, 1, "c.fq_zech_poly_evaluate_fq_zech", "a"], [57, 1, 1, "c.fq_zech_poly_evaluate_fq_zech", "ctx"], [57, 1, 1, "c.fq_zech_poly_evaluate_fq_zech", "f"], [57, 1, 1, "c.fq_zech_poly_evaluate_fq_zech", "rop"]], "fq_zech_poly_factor": [[58, 1, 1, "c.fq_zech_poly_factor", "ctx"], [58, 1, 1, "c.fq_zech_poly_factor", "f"], [58, 1, 1, "c.fq_zech_poly_factor", "lead"], [58, 1, 1, "c.fq_zech_poly_factor", "res"]], "fq_zech_poly_factor_berlekamp": [[58, 1, 1, "c.fq_zech_poly_factor_berlekamp", "ctx"], [58, 1, 1, "c.fq_zech_poly_factor_berlekamp", "f"], [58, 1, 1, "c.fq_zech_poly_factor_berlekamp", "factors"]], "fq_zech_poly_factor_cantor_zassenhaus": [[58, 1, 1, "c.fq_zech_poly_factor_cantor_zassenhaus", "ctx"], [58, 1, 1, "c.fq_zech_poly_factor_cantor_zassenhaus", "f"], [58, 1, 1, "c.fq_zech_poly_factor_cantor_zassenhaus", "res"]], "fq_zech_poly_factor_clear": [[58, 1, 1, "c.fq_zech_poly_factor_clear", "ctx"], [58, 1, 1, "c.fq_zech_poly_factor_clear", "fac"]], "fq_zech_poly_factor_concat": [[58, 1, 1, "c.fq_zech_poly_factor_concat", "ctx"], [58, 1, 1, "c.fq_zech_poly_factor_concat", "fac"], [58, 1, 1, "c.fq_zech_poly_factor_concat", "res"]], "fq_zech_poly_factor_distinct_deg": [[58, 1, 1, "c.fq_zech_poly_factor_distinct_deg", "ctx"], [58, 1, 1, "c.fq_zech_poly_factor_distinct_deg", "degs"], [58, 1, 1, "c.fq_zech_poly_factor_distinct_deg", "poly"], [58, 1, 1, "c.fq_zech_poly_factor_distinct_deg", "res"]], "fq_zech_poly_factor_equal_deg": [[58, 1, 1, "c.fq_zech_poly_factor_equal_deg", "ctx"], [58, 1, 1, "c.fq_zech_poly_factor_equal_deg", "d"], [58, 1, 1, "c.fq_zech_poly_factor_equal_deg", "factors"], [58, 1, 1, "c.fq_zech_poly_factor_equal_deg", "pol"]], "fq_zech_poly_factor_equal_deg_prob": [[58, 1, 1, "c.fq_zech_poly_factor_equal_deg_prob", "ctx"], [58, 1, 1, "c.fq_zech_poly_factor_equal_deg_prob", "d"], [58, 1, 1, "c.fq_zech_poly_factor_equal_deg_prob", "factor"], [58, 1, 1, "c.fq_zech_poly_factor_equal_deg_prob", "pol"], [58, 1, 1, "c.fq_zech_poly_factor_equal_deg_prob", "state"]], "fq_zech_poly_factor_fit_length": [[58, 1, 1, "c.fq_zech_poly_factor_fit_length", "ctx"], [58, 1, 1, "c.fq_zech_poly_factor_fit_length", "fac"], [58, 1, 1, "c.fq_zech_poly_factor_fit_length", "len"]], "fq_zech_poly_factor_init": [[58, 1, 1, "c.fq_zech_poly_factor_init", "ctx"], [58, 1, 1, "c.fq_zech_poly_factor_init", "fac"]], "fq_zech_poly_factor_insert": [[58, 1, 1, "c.fq_zech_poly_factor_insert", "ctx"], [58, 1, 1, "c.fq_zech_poly_factor_insert", "exp"], [58, 1, 1, "c.fq_zech_poly_factor_insert", "fac"], [58, 1, 1, "c.fq_zech_poly_factor_insert", "poly"]], "fq_zech_poly_factor_kaltofen_shoup": [[58, 1, 1, "c.fq_zech_poly_factor_kaltofen_shoup", "ctx"], [58, 1, 1, "c.fq_zech_poly_factor_kaltofen_shoup", "poly"], [58, 1, 1, "c.fq_zech_poly_factor_kaltofen_shoup", "res"]], "fq_zech_poly_factor_pow": [[58, 1, 1, "c.fq_zech_poly_factor_pow", "ctx"], [58, 1, 1, "c.fq_zech_poly_factor_pow", "exp"], [58, 1, 1, "c.fq_zech_poly_factor_pow", "fac"]], "fq_zech_poly_factor_print": [[58, 1, 1, "c.fq_zech_poly_factor_print", "ctx"], [58, 1, 1, "c.fq_zech_poly_factor_print", "fac"]], "fq_zech_poly_factor_print_pretty": [[58, 1, 1, "c.fq_zech_poly_factor_print_pretty", "ctx"], [58, 1, 1, "c.fq_zech_poly_factor_print_pretty", "fac"]], "fq_zech_poly_factor_realloc": [[58, 1, 1, "c.fq_zech_poly_factor_realloc", "alloc"], [58, 1, 1, "c.fq_zech_poly_factor_realloc", "ctx"], [58, 1, 1, "c.fq_zech_poly_factor_realloc", "fac"]], "fq_zech_poly_factor_set": [[58, 1, 1, "c.fq_zech_poly_factor_set", "ctx"], [58, 1, 1, "c.fq_zech_poly_factor_set", "fac"], [58, 1, 1, "c.fq_zech_poly_factor_set", "res"]], "fq_zech_poly_factor_split_single": [[58, 1, 1, "c.fq_zech_poly_factor_split_single", "ctx"], [58, 1, 1, "c.fq_zech_poly_factor_split_single", "input"], [58, 1, 1, "c.fq_zech_poly_factor_split_single", "linfactor"]], "fq_zech_poly_factor_squarefree": [[58, 1, 1, "c.fq_zech_poly_factor_squarefree", "ctx"], [58, 1, 1, "c.fq_zech_poly_factor_squarefree", "f"], [58, 1, 1, "c.fq_zech_poly_factor_squarefree", "res"]], "fq_zech_poly_factor_with_berlekamp": [[58, 1, 1, "c.fq_zech_poly_factor_with_berlekamp", "f"], [58, 1, 1, "c.fq_zech_poly_factor_with_berlekamp", "leading_coeff"], [58, 1, 1, "c.fq_zech_poly_factor_with_berlekamp", "res"]], "fq_zech_poly_factor_with_cantor_zassenhaus": [[58, 1, 1, "c.fq_zech_poly_factor_with_cantor_zassenhaus", "ctx"], [58, 1, 1, "c.fq_zech_poly_factor_with_cantor_zassenhaus", "f"], [58, 1, 1, "c.fq_zech_poly_factor_with_cantor_zassenhaus", "leading_coeff"], [58, 1, 1, "c.fq_zech_poly_factor_with_cantor_zassenhaus", "res"]], "fq_zech_poly_factor_with_kaltofen_shoup": [[58, 1, 1, "c.fq_zech_poly_factor_with_kaltofen_shoup", "ctx"], [58, 1, 1, "c.fq_zech_poly_factor_with_kaltofen_shoup", "f"], [58, 1, 1, "c.fq_zech_poly_factor_with_kaltofen_shoup", "leading_coeff"], [58, 1, 1, "c.fq_zech_poly_factor_with_kaltofen_shoup", "res"]], "fq_zech_poly_fit_length": [[57, 1, 1, "c.fq_zech_poly_fit_length", "ctx"], [57, 1, 1, "c.fq_zech_poly_fit_length", "len"], [57, 1, 1, "c.fq_zech_poly_fit_length", "poly"]], "fq_zech_poly_fprint": [[57, 1, 1, "c.fq_zech_poly_fprint", "ctx"], [57, 1, 1, "c.fq_zech_poly_fprint", "file"], [57, 1, 1, "c.fq_zech_poly_fprint", "poly"]], "fq_zech_poly_fprint_pretty": [[57, 1, 1, "c.fq_zech_poly_fprint_pretty", "ctx"], [57, 1, 1, "c.fq_zech_poly_fprint_pretty", "file"], [57, 1, 1, "c.fq_zech_poly_fprint_pretty", "poly"], [57, 1, 1, "c.fq_zech_poly_fprint_pretty", "x"]], "fq_zech_poly_gcd": [[57, 1, 1, "c.fq_zech_poly_gcd", "ctx"], [57, 1, 1, "c.fq_zech_poly_gcd", "op1"], [57, 1, 1, "c.fq_zech_poly_gcd", "op2"], [57, 1, 1, "c.fq_zech_poly_gcd", "rop"]], "fq_zech_poly_gcd_euclidean": [[57, 1, 1, "c.fq_zech_poly_gcd_euclidean", "ctx"], [57, 1, 1, "c.fq_zech_poly_gcd_euclidean", "op1"], [57, 1, 1, "c.fq_zech_poly_gcd_euclidean", "op2"], [57, 1, 1, "c.fq_zech_poly_gcd_euclidean", "rop"]], "fq_zech_poly_gcd_euclidean_f": [[57, 1, 1, "c.fq_zech_poly_gcd_euclidean_f", "A"], [57, 1, 1, "c.fq_zech_poly_gcd_euclidean_f", "B"], [57, 1, 1, "c.fq_zech_poly_gcd_euclidean_f", "G"], [57, 1, 1, "c.fq_zech_poly_gcd_euclidean_f", "ctx"], [57, 1, 1, "c.fq_zech_poly_gcd_euclidean_f", "f"]], "fq_zech_poly_gcd_hgcd": [[57, 1, 1, "c.fq_zech_poly_gcd_hgcd", "ctx"], [57, 1, 1, "c.fq_zech_poly_gcd_hgcd", "op1"], [57, 1, 1, "c.fq_zech_poly_gcd_hgcd", "op2"], [57, 1, 1, "c.fq_zech_poly_gcd_hgcd", "rop"]], "fq_zech_poly_gen": [[57, 1, 1, "c.fq_zech_poly_gen", "ctx"], [57, 1, 1, "c.fq_zech_poly_gen", "poly"]], "fq_zech_poly_get_coeff": [[57, 1, 1, "c.fq_zech_poly_get_coeff", "ctx"], [57, 1, 1, "c.fq_zech_poly_get_coeff", "n"], [57, 1, 1, "c.fq_zech_poly_get_coeff", "poly"], [57, 1, 1, "c.fq_zech_poly_get_coeff", "x"]], "fq_zech_poly_get_str": [[57, 1, 1, "c.fq_zech_poly_get_str", "ctx"], [57, 1, 1, "c.fq_zech_poly_get_str", "poly"]], "fq_zech_poly_get_str_pretty": [[57, 1, 1, "c.fq_zech_poly_get_str_pretty", "ctx"], [57, 1, 1, "c.fq_zech_poly_get_str_pretty", "poly"], [57, 1, 1, "c.fq_zech_poly_get_str_pretty", "x"]], "fq_zech_poly_hamming_weight": [[57, 1, 1, "c.fq_zech_poly_hamming_weight", "ctx"], [57, 1, 1, "c.fq_zech_poly_hamming_weight", "op"]], "fq_zech_poly_inflate": [[57, 1, 1, "c.fq_zech_poly_inflate", "ctx"], [57, 1, 1, "c.fq_zech_poly_inflate", "inflation"], [57, 1, 1, "c.fq_zech_poly_inflate", "input"], [57, 1, 1, "c.fq_zech_poly_inflate", "result"]], "fq_zech_poly_init": [[57, 1, 1, "c.fq_zech_poly_init", "ctx"], [57, 1, 1, "c.fq_zech_poly_init", "poly"]], "fq_zech_poly_init2": [[57, 1, 1, "c.fq_zech_poly_init2", "alloc"], [57, 1, 1, "c.fq_zech_poly_init2", "ctx"], [57, 1, 1, "c.fq_zech_poly_init2", "poly"]], "fq_zech_poly_inv_series": [[57, 1, 1, "c.fq_zech_poly_inv_series", "Q"], [57, 1, 1, "c.fq_zech_poly_inv_series", "Qinv"], [57, 1, 1, "c.fq_zech_poly_inv_series", "ctx"], [57, 1, 1, "c.fq_zech_poly_inv_series", "n"]], "fq_zech_poly_inv_series_newton": [[57, 1, 1, "c.fq_zech_poly_inv_series_newton", "Q"], [57, 1, 1, "c.fq_zech_poly_inv_series_newton", "Qinv"], [57, 1, 1, "c.fq_zech_poly_inv_series_newton", "ctx"], [57, 1, 1, "c.fq_zech_poly_inv_series_newton", "n"]], "fq_zech_poly_invsqrt_series": [[57, 1, 1, "c.fq_zech_poly_invsqrt_series", "ctx"], [57, 1, 1, "c.fq_zech_poly_invsqrt_series", "g"], [57, 1, 1, "c.fq_zech_poly_invsqrt_series", "h"], [57, 1, 1, "c.fq_zech_poly_invsqrt_series", "n"]], "fq_zech_poly_is_gen": [[57, 1, 1, "c.fq_zech_poly_is_gen", "ctx"], [57, 1, 1, "c.fq_zech_poly_is_gen", "op"]], "fq_zech_poly_is_irreducible": [[58, 1, 1, "c.fq_zech_poly_is_irreducible", "ctx"], [58, 1, 1, "c.fq_zech_poly_is_irreducible", "f"]], "fq_zech_poly_is_irreducible_ben_or": [[58, 1, 1, "c.fq_zech_poly_is_irreducible_ben_or", "ctx"], [58, 1, 1, "c.fq_zech_poly_is_irreducible_ben_or", "f"]], "fq_zech_poly_is_irreducible_ddf": [[58, 1, 1, "c.fq_zech_poly_is_irreducible_ddf", "ctx"], [58, 1, 1, "c.fq_zech_poly_is_irreducible_ddf", "f"]], "fq_zech_poly_is_one": [[57, 1, 1, "c.fq_zech_poly_is_one", "op"]], "fq_zech_poly_is_squarefree": [[58, 1, 1, "c.fq_zech_poly_is_squarefree", "ctx"], [58, 1, 1, "c.fq_zech_poly_is_squarefree", "f"]], "fq_zech_poly_is_unit": [[57, 1, 1, "c.fq_zech_poly_is_unit", "ctx"], [57, 1, 1, "c.fq_zech_poly_is_unit", "op"]], "fq_zech_poly_is_zero": [[57, 1, 1, "c.fq_zech_poly_is_zero", "ctx"], [57, 1, 1, "c.fq_zech_poly_is_zero", "poly"]], "fq_zech_poly_iterated_frobenius_preinv": [[58, 1, 1, "c.fq_zech_poly_iterated_frobenius_preinv", "ctx"], [58, 1, 1, "c.fq_zech_poly_iterated_frobenius_preinv", "n"], [58, 1, 1, "c.fq_zech_poly_iterated_frobenius_preinv", "rop"], [58, 1, 1, "c.fq_zech_poly_iterated_frobenius_preinv", "v"], [58, 1, 1, "c.fq_zech_poly_iterated_frobenius_preinv", "vinv"]], "fq_zech_poly_lead": [[57, 1, 1, "c.fq_zech_poly_lead", "ctx"], [57, 1, 1, "c.fq_zech_poly_lead", "poly"]], "fq_zech_poly_length": [[57, 1, 1, "c.fq_zech_poly_length", "ctx"], [57, 1, 1, "c.fq_zech_poly_length", "poly"]], "fq_zech_poly_make_monic": [[57, 1, 1, "c.fq_zech_poly_make_monic", "ctx"], [57, 1, 1, "c.fq_zech_poly_make_monic", "op"], [57, 1, 1, "c.fq_zech_poly_make_monic", "rop"]], "fq_zech_poly_mul": [[57, 1, 1, "c.fq_zech_poly_mul", "ctx"], [57, 1, 1, "c.fq_zech_poly_mul", "op1"], [57, 1, 1, "c.fq_zech_poly_mul", "op2"], [57, 1, 1, "c.fq_zech_poly_mul", "rop"]], "fq_zech_poly_mul_KS": [[57, 1, 1, "c.fq_zech_poly_mul_KS", "ctx"], [57, 1, 1, "c.fq_zech_poly_mul_KS", "op1"], [57, 1, 1, "c.fq_zech_poly_mul_KS", "op2"], [57, 1, 1, "c.fq_zech_poly_mul_KS", "rop"]], "fq_zech_poly_mul_classical": [[57, 1, 1, "c.fq_zech_poly_mul_classical", "ctx"], [57, 1, 1, "c.fq_zech_poly_mul_classical", "op1"], [57, 1, 1, "c.fq_zech_poly_mul_classical", "op2"], [57, 1, 1, "c.fq_zech_poly_mul_classical", "rop"]], "fq_zech_poly_mul_reorder": [[57, 1, 1, "c.fq_zech_poly_mul_reorder", "ctx"], [57, 1, 1, "c.fq_zech_poly_mul_reorder", "op1"], [57, 1, 1, "c.fq_zech_poly_mul_reorder", "op2"], [57, 1, 1, "c.fq_zech_poly_mul_reorder", "rop"]], "fq_zech_poly_mulhigh": [[57, 1, 1, "c.fq_zech_poly_mulhigh", "ctx"], [57, 1, 1, "c.fq_zech_poly_mulhigh", "poly1"], [57, 1, 1, "c.fq_zech_poly_mulhigh", "poly2"], [57, 1, 1, "c.fq_zech_poly_mulhigh", "res"], [57, 1, 1, "c.fq_zech_poly_mulhigh", "start"]], "fq_zech_poly_mulhigh_classical": [[57, 1, 1, "c.fq_zech_poly_mulhigh_classical", "ctx"], [57, 1, 1, "c.fq_zech_poly_mulhigh_classical", "poly1"], [57, 1, 1, "c.fq_zech_poly_mulhigh_classical", "poly2"], [57, 1, 1, "c.fq_zech_poly_mulhigh_classical", "res"], [57, 1, 1, "c.fq_zech_poly_mulhigh_classical", "start"]], "fq_zech_poly_mullow": [[57, 1, 1, "c.fq_zech_poly_mullow", "ctx"], [57, 1, 1, "c.fq_zech_poly_mullow", "n"], [57, 1, 1, "c.fq_zech_poly_mullow", "op1"], [57, 1, 1, "c.fq_zech_poly_mullow", "op2"], [57, 1, 1, "c.fq_zech_poly_mullow", "rop"]], "fq_zech_poly_mullow_KS": [[57, 1, 1, "c.fq_zech_poly_mullow_KS", "ctx"], [57, 1, 1, "c.fq_zech_poly_mullow_KS", "n"], [57, 1, 1, "c.fq_zech_poly_mullow_KS", "op1"], [57, 1, 1, "c.fq_zech_poly_mullow_KS", "op2"], [57, 1, 1, "c.fq_zech_poly_mullow_KS", "rop"]], "fq_zech_poly_mullow_classical": [[57, 1, 1, "c.fq_zech_poly_mullow_classical", "ctx"], [57, 1, 1, "c.fq_zech_poly_mullow_classical", "n"], [57, 1, 1, "c.fq_zech_poly_mullow_classical", "op1"], [57, 1, 1, "c.fq_zech_poly_mullow_classical", "op2"], [57, 1, 1, "c.fq_zech_poly_mullow_classical", "rop"]], "fq_zech_poly_mulmod": [[57, 1, 1, "c.fq_zech_poly_mulmod", "ctx"], [57, 1, 1, "c.fq_zech_poly_mulmod", "f"], [57, 1, 1, "c.fq_zech_poly_mulmod", "poly1"], [57, 1, 1, "c.fq_zech_poly_mulmod", "poly2"], [57, 1, 1, "c.fq_zech_poly_mulmod", "res"]], "fq_zech_poly_mulmod_preinv": [[57, 1, 1, "c.fq_zech_poly_mulmod_preinv", "ctx"], [57, 1, 1, "c.fq_zech_poly_mulmod_preinv", "f"], [57, 1, 1, "c.fq_zech_poly_mulmod_preinv", "finv"], [57, 1, 1, "c.fq_zech_poly_mulmod_preinv", "poly1"], [57, 1, 1, "c.fq_zech_poly_mulmod_preinv", "poly2"], [57, 1, 1, "c.fq_zech_poly_mulmod_preinv", "res"]], "fq_zech_poly_neg": [[57, 1, 1, "c.fq_zech_poly_neg", "ctx"], [57, 1, 1, "c.fq_zech_poly_neg", "poly"], [57, 1, 1, "c.fq_zech_poly_neg", "res"]], "fq_zech_poly_one": [[57, 1, 1, "c.fq_zech_poly_one", "ctx"], [57, 1, 1, "c.fq_zech_poly_one", "poly"]], "fq_zech_poly_pow": [[57, 1, 1, "c.fq_zech_poly_pow", "ctx"], [57, 1, 1, "c.fq_zech_poly_pow", "e"], [57, 1, 1, "c.fq_zech_poly_pow", "op"], [57, 1, 1, "c.fq_zech_poly_pow", "rop"]], "fq_zech_poly_pow_trunc": [[57, 1, 1, "c.fq_zech_poly_pow_trunc", "ctx"], [57, 1, 1, "c.fq_zech_poly_pow_trunc", "e"], [57, 1, 1, "c.fq_zech_poly_pow_trunc", "poly"], [57, 1, 1, "c.fq_zech_poly_pow_trunc", "res"], [57, 1, 1, "c.fq_zech_poly_pow_trunc", "trunc"]], "fq_zech_poly_pow_trunc_binexp": [[57, 1, 1, "c.fq_zech_poly_pow_trunc_binexp", "ctx"], [57, 1, 1, "c.fq_zech_poly_pow_trunc_binexp", "e"], [57, 1, 1, "c.fq_zech_poly_pow_trunc_binexp", "poly"], [57, 1, 1, "c.fq_zech_poly_pow_trunc_binexp", "res"], [57, 1, 1, "c.fq_zech_poly_pow_trunc_binexp", "trunc"]], "fq_zech_poly_powmod_fmpz_binexp": [[57, 1, 1, "c.fq_zech_poly_powmod_fmpz_binexp", "ctx"], [57, 1, 1, "c.fq_zech_poly_powmod_fmpz_binexp", "e"], [57, 1, 1, "c.fq_zech_poly_powmod_fmpz_binexp", "f"], [57, 1, 1, "c.fq_zech_poly_powmod_fmpz_binexp", "poly"], [57, 1, 1, "c.fq_zech_poly_powmod_fmpz_binexp", "res"]], "fq_zech_poly_powmod_fmpz_binexp_preinv": [[57, 1, 1, "c.fq_zech_poly_powmod_fmpz_binexp_preinv", "ctx"], [57, 1, 1, "c.fq_zech_poly_powmod_fmpz_binexp_preinv", "e"], [57, 1, 1, "c.fq_zech_poly_powmod_fmpz_binexp_preinv", "f"], [57, 1, 1, "c.fq_zech_poly_powmod_fmpz_binexp_preinv", "finv"], [57, 1, 1, "c.fq_zech_poly_powmod_fmpz_binexp_preinv", "poly"], [57, 1, 1, "c.fq_zech_poly_powmod_fmpz_binexp_preinv", "res"]], "fq_zech_poly_powmod_fmpz_sliding_preinv": [[57, 1, 1, "c.fq_zech_poly_powmod_fmpz_sliding_preinv", "ctx"], [57, 1, 1, "c.fq_zech_poly_powmod_fmpz_sliding_preinv", "e"], [57, 1, 1, "c.fq_zech_poly_powmod_fmpz_sliding_preinv", "f"], [57, 1, 1, "c.fq_zech_poly_powmod_fmpz_sliding_preinv", "finv"], [57, 1, 1, "c.fq_zech_poly_powmod_fmpz_sliding_preinv", "k"], [57, 1, 1, "c.fq_zech_poly_powmod_fmpz_sliding_preinv", "poly"], [57, 1, 1, "c.fq_zech_poly_powmod_fmpz_sliding_preinv", "res"]], "fq_zech_poly_powmod_ui_binexp": [[57, 1, 1, "c.fq_zech_poly_powmod_ui_binexp", "ctx"], [57, 1, 1, "c.fq_zech_poly_powmod_ui_binexp", "e"], [57, 1, 1, "c.fq_zech_poly_powmod_ui_binexp", "f"], [57, 1, 1, "c.fq_zech_poly_powmod_ui_binexp", "poly"], [57, 1, 1, "c.fq_zech_poly_powmod_ui_binexp", "res"]], "fq_zech_poly_powmod_ui_binexp_preinv": [[57, 1, 1, "c.fq_zech_poly_powmod_ui_binexp_preinv", "ctx"], [57, 1, 1, "c.fq_zech_poly_powmod_ui_binexp_preinv", "e"], [57, 1, 1, "c.fq_zech_poly_powmod_ui_binexp_preinv", "f"], [57, 1, 1, "c.fq_zech_poly_powmod_ui_binexp_preinv", "finv"], [57, 1, 1, "c.fq_zech_poly_powmod_ui_binexp_preinv", "poly"], [57, 1, 1, "c.fq_zech_poly_powmod_ui_binexp_preinv", "res"]], "fq_zech_poly_powmod_x_fmpz_preinv": [[57, 1, 1, "c.fq_zech_poly_powmod_x_fmpz_preinv", "ctx"], [57, 1, 1, "c.fq_zech_poly_powmod_x_fmpz_preinv", "e"], [57, 1, 1, "c.fq_zech_poly_powmod_x_fmpz_preinv", "f"], [57, 1, 1, "c.fq_zech_poly_powmod_x_fmpz_preinv", "finv"], [57, 1, 1, "c.fq_zech_poly_powmod_x_fmpz_preinv", "res"]], "fq_zech_poly_precompute_matrix": [[57, 1, 1, "c.fq_zech_poly_precompute_matrix", "A"], [57, 1, 1, "c.fq_zech_poly_precompute_matrix", "ctx"], [57, 1, 1, "c.fq_zech_poly_precompute_matrix", "f"], [57, 1, 1, "c.fq_zech_poly_precompute_matrix", "g"], [57, 1, 1, "c.fq_zech_poly_precompute_matrix", "ginv"]], "fq_zech_poly_print": [[57, 1, 1, "c.fq_zech_poly_print", "ctx"], [57, 1, 1, "c.fq_zech_poly_print", "poly"]], "fq_zech_poly_print_pretty": [[57, 1, 1, "c.fq_zech_poly_print_pretty", "ctx"], [57, 1, 1, "c.fq_zech_poly_print_pretty", "poly"], [57, 1, 1, "c.fq_zech_poly_print_pretty", "x"]], "fq_zech_poly_randtest": [[57, 1, 1, "c.fq_zech_poly_randtest", "ctx"], [57, 1, 1, "c.fq_zech_poly_randtest", "f"], [57, 1, 1, "c.fq_zech_poly_randtest", "len"], [57, 1, 1, "c.fq_zech_poly_randtest", "state"]], "fq_zech_poly_randtest_irreducible": [[57, 1, 1, "c.fq_zech_poly_randtest_irreducible", "ctx"], [57, 1, 1, "c.fq_zech_poly_randtest_irreducible", "f"], [57, 1, 1, "c.fq_zech_poly_randtest_irreducible", "len"], [57, 1, 1, "c.fq_zech_poly_randtest_irreducible", "state"]], "fq_zech_poly_randtest_monic": [[57, 1, 1, "c.fq_zech_poly_randtest_monic", "ctx"], [57, 1, 1, "c.fq_zech_poly_randtest_monic", "f"], [57, 1, 1, "c.fq_zech_poly_randtest_monic", "len"], [57, 1, 1, "c.fq_zech_poly_randtest_monic", "state"]], "fq_zech_poly_randtest_not_zero": [[57, 1, 1, "c.fq_zech_poly_randtest_not_zero", "ctx"], [57, 1, 1, "c.fq_zech_poly_randtest_not_zero", "f"], [57, 1, 1, "c.fq_zech_poly_randtest_not_zero", "len"], [57, 1, 1, "c.fq_zech_poly_randtest_not_zero", "state"]], "fq_zech_poly_realloc": [[57, 1, 1, "c.fq_zech_poly_realloc", "alloc"], [57, 1, 1, "c.fq_zech_poly_realloc", "ctx"], [57, 1, 1, "c.fq_zech_poly_realloc", "poly"]], "fq_zech_poly_rem": [[57, 1, 1, "c.fq_zech_poly_rem", "A"], [57, 1, 1, "c.fq_zech_poly_rem", "B"], [57, 1, 1, "c.fq_zech_poly_rem", "R"], [57, 1, 1, "c.fq_zech_poly_rem", "ctx"]], "fq_zech_poly_remove": [[58, 1, 1, "c.fq_zech_poly_remove", "ctx"], [58, 1, 1, "c.fq_zech_poly_remove", "f"], [58, 1, 1, "c.fq_zech_poly_remove", "p"]], "fq_zech_poly_reverse": [[57, 1, 1, "c.fq_zech_poly_reverse", "ctx"], [57, 1, 1, "c.fq_zech_poly_reverse", "input"], [57, 1, 1, "c.fq_zech_poly_reverse", "m"], [57, 1, 1, "c.fq_zech_poly_reverse", "output"]], "fq_zech_poly_roots": [[58, 1, 1, "c.fq_zech_poly_roots", "ctx"], [58, 1, 1, "c.fq_zech_poly_roots", "f"], [58, 1, 1, "c.fq_zech_poly_roots", "r"], [58, 1, 1, "c.fq_zech_poly_roots", "with_multiplicity"]], "fq_zech_poly_scalar_addmul_fq_zech": [[57, 1, 1, "c.fq_zech_poly_scalar_addmul_fq_zech", "ctx"], [57, 1, 1, "c.fq_zech_poly_scalar_addmul_fq_zech", "op"], [57, 1, 1, "c.fq_zech_poly_scalar_addmul_fq_zech", "rop"], [57, 1, 1, "c.fq_zech_poly_scalar_addmul_fq_zech", "x"]], "fq_zech_poly_scalar_div_fq": [[57, 1, 1, "c.fq_zech_poly_scalar_div_fq", "ctx"], [57, 1, 1, "c.fq_zech_poly_scalar_div_fq", "op"], [57, 1, 1, "c.fq_zech_poly_scalar_div_fq", "rop"], [57, 1, 1, "c.fq_zech_poly_scalar_div_fq", "x"]], "fq_zech_poly_scalar_mul_fq_zech": [[57, 1, 1, "c.fq_zech_poly_scalar_mul_fq_zech", "ctx"], [57, 1, 1, "c.fq_zech_poly_scalar_mul_fq_zech", "op"], [57, 1, 1, "c.fq_zech_poly_scalar_mul_fq_zech", "rop"], [57, 1, 1, "c.fq_zech_poly_scalar_mul_fq_zech", "x"]], "fq_zech_poly_scalar_submul_fq_zech": [[57, 1, 1, "c.fq_zech_poly_scalar_submul_fq_zech", "ctx"], [57, 1, 1, "c.fq_zech_poly_scalar_submul_fq_zech", "op"], [57, 1, 1, "c.fq_zech_poly_scalar_submul_fq_zech", "rop"], [57, 1, 1, "c.fq_zech_poly_scalar_submul_fq_zech", "x"]], "fq_zech_poly_set": [[57, 1, 1, "c.fq_zech_poly_set", "ctx"], [57, 1, 1, "c.fq_zech_poly_set", "poly1"], [57, 1, 1, "c.fq_zech_poly_set", "poly2"]], "fq_zech_poly_set_coeff": [[57, 1, 1, "c.fq_zech_poly_set_coeff", "ctx"], [57, 1, 1, "c.fq_zech_poly_set_coeff", "n"], [57, 1, 1, "c.fq_zech_poly_set_coeff", "poly"], [57, 1, 1, "c.fq_zech_poly_set_coeff", "x"]], "fq_zech_poly_set_coeff_fmpz": [[57, 1, 1, "c.fq_zech_poly_set_coeff_fmpz", "ctx"], [57, 1, 1, "c.fq_zech_poly_set_coeff_fmpz", "n"], [57, 1, 1, "c.fq_zech_poly_set_coeff_fmpz", "poly"], [57, 1, 1, "c.fq_zech_poly_set_coeff_fmpz", "x"]], "fq_zech_poly_set_fmpz_mod_poly": [[57, 1, 1, "c.fq_zech_poly_set_fmpz_mod_poly", "ctx"], [57, 1, 1, "c.fq_zech_poly_set_fmpz_mod_poly", "op"], [57, 1, 1, "c.fq_zech_poly_set_fmpz_mod_poly", "rop"]], "fq_zech_poly_set_fq_zech": [[57, 1, 1, "c.fq_zech_poly_set_fq_zech", "c"], [57, 1, 1, "c.fq_zech_poly_set_fq_zech", "ctx"], [57, 1, 1, "c.fq_zech_poly_set_fq_zech", "poly"]], "fq_zech_poly_set_nmod_poly": [[57, 1, 1, "c.fq_zech_poly_set_nmod_poly", "ctx"], [57, 1, 1, "c.fq_zech_poly_set_nmod_poly", "op"], [57, 1, 1, "c.fq_zech_poly_set_nmod_poly", "rop"]], "fq_zech_poly_set_trunc": [[57, 1, 1, "c.fq_zech_poly_set_trunc", "ctx"], [57, 1, 1, "c.fq_zech_poly_set_trunc", "newlen"], [57, 1, 1, "c.fq_zech_poly_set_trunc", "poly1"], [57, 1, 1, "c.fq_zech_poly_set_trunc", "poly2"]], "fq_zech_poly_shift_left": [[57, 1, 1, "c.fq_zech_poly_shift_left", "ctx"], [57, 1, 1, "c.fq_zech_poly_shift_left", "n"], [57, 1, 1, "c.fq_zech_poly_shift_left", "op"], [57, 1, 1, "c.fq_zech_poly_shift_left", "rop"]], "fq_zech_poly_shift_right": [[57, 1, 1, "c.fq_zech_poly_shift_right", "ctx"], [57, 1, 1, "c.fq_zech_poly_shift_right", "n"], [57, 1, 1, "c.fq_zech_poly_shift_right", "op"], [57, 1, 1, "c.fq_zech_poly_shift_right", "rop"]], "fq_zech_poly_sqr": [[57, 1, 1, "c.fq_zech_poly_sqr", "ctx"], [57, 1, 1, "c.fq_zech_poly_sqr", "op"], [57, 1, 1, "c.fq_zech_poly_sqr", "rop"]], "fq_zech_poly_sqr_KS": [[57, 1, 1, "c.fq_zech_poly_sqr_KS", "ctx"], [57, 1, 1, "c.fq_zech_poly_sqr_KS", "op"], [57, 1, 1, "c.fq_zech_poly_sqr_KS", "rop"]], "fq_zech_poly_sqr_classical": [[57, 1, 1, "c.fq_zech_poly_sqr_classical", "ctx"], [57, 1, 1, "c.fq_zech_poly_sqr_classical", "op"], [57, 1, 1, "c.fq_zech_poly_sqr_classical", "rop"]], "fq_zech_poly_sqrt": [[57, 1, 1, "c.fq_zech_poly_sqrt", "mod"], [57, 1, 1, "c.fq_zech_poly_sqrt", "p"], [57, 1, 1, "c.fq_zech_poly_sqrt", "s"]], "fq_zech_poly_sqrt_series": [[57, 1, 1, "c.fq_zech_poly_sqrt_series", "ctx"], [57, 1, 1, "c.fq_zech_poly_sqrt_series", "g"], [57, 1, 1, "c.fq_zech_poly_sqrt_series", "h"], [57, 1, 1, "c.fq_zech_poly_sqrt_series", "n"]], "fq_zech_poly_sub": [[57, 1, 1, "c.fq_zech_poly_sub", "ctx"], [57, 1, 1, "c.fq_zech_poly_sub", "poly1"], [57, 1, 1, "c.fq_zech_poly_sub", "poly2"], [57, 1, 1, "c.fq_zech_poly_sub", "res"]], "fq_zech_poly_sub_series": [[57, 1, 1, "c.fq_zech_poly_sub_series", "ctx"], [57, 1, 1, "c.fq_zech_poly_sub_series", "n"], [57, 1, 1, "c.fq_zech_poly_sub_series", "poly1"], [57, 1, 1, "c.fq_zech_poly_sub_series", "poly2"], [57, 1, 1, "c.fq_zech_poly_sub_series", "res"]], "fq_zech_poly_swap": [[57, 1, 1, "c.fq_zech_poly_swap", "ctx"], [57, 1, 1, "c.fq_zech_poly_swap", "op1"], [57, 1, 1, "c.fq_zech_poly_swap", "op2"]], "fq_zech_poly_truncate": [[57, 1, 1, "c.fq_zech_poly_truncate", "ctx"], [57, 1, 1, "c.fq_zech_poly_truncate", "newlen"], [57, 1, 1, "c.fq_zech_poly_truncate", "poly"]], "fq_zech_poly_xgcd": [[57, 1, 1, "c.fq_zech_poly_xgcd", "A"], [57, 1, 1, "c.fq_zech_poly_xgcd", "B"], [57, 1, 1, "c.fq_zech_poly_xgcd", "G"], [57, 1, 1, "c.fq_zech_poly_xgcd", "S"], [57, 1, 1, "c.fq_zech_poly_xgcd", "T"], [57, 1, 1, "c.fq_zech_poly_xgcd", "ctx"]], "fq_zech_poly_xgcd_euclidean": [[57, 1, 1, "c.fq_zech_poly_xgcd_euclidean", "A"], [57, 1, 1, "c.fq_zech_poly_xgcd_euclidean", "B"], [57, 1, 1, "c.fq_zech_poly_xgcd_euclidean", "G"], [57, 1, 1, "c.fq_zech_poly_xgcd_euclidean", "S"], [57, 1, 1, "c.fq_zech_poly_xgcd_euclidean", "T"], [57, 1, 1, "c.fq_zech_poly_xgcd_euclidean", "ctx"]], "fq_zech_poly_xgcd_euclidean_f": [[57, 1, 1, "c.fq_zech_poly_xgcd_euclidean_f", "A"], [57, 1, 1, "c.fq_zech_poly_xgcd_euclidean_f", "B"], [57, 1, 1, "c.fq_zech_poly_xgcd_euclidean_f", "G"], [57, 1, 1, "c.fq_zech_poly_xgcd_euclidean_f", "S"], [57, 1, 1, "c.fq_zech_poly_xgcd_euclidean_f", "T"], [57, 1, 1, "c.fq_zech_poly_xgcd_euclidean_f", "ctx"], [57, 1, 1, "c.fq_zech_poly_xgcd_euclidean_f", "f"]], "fq_zech_poly_zero": [[57, 1, 1, "c.fq_zech_poly_zero", "ctx"], [57, 1, 1, "c.fq_zech_poly_zero", "poly"]], "fq_zech_pow": [[54, 1, 1, "c.fq_zech_pow", "ctx"], [54, 1, 1, "c.fq_zech_pow", "e"], [54, 1, 1, "c.fq_zech_pow", "op"], [54, 1, 1, "c.fq_zech_pow", "rop"]], "fq_zech_pow_ui": [[54, 1, 1, "c.fq_zech_pow_ui", "ctx"], [54, 1, 1, "c.fq_zech_pow_ui", "e"], [54, 1, 1, "c.fq_zech_pow_ui", "op"], [54, 1, 1, "c.fq_zech_pow_ui", "rop"]], "fq_zech_print": [[54, 1, 1, "c.fq_zech_print", "ctx"], [54, 1, 1, "c.fq_zech_print", "op"]], "fq_zech_print_pretty": [[54, 1, 1, "c.fq_zech_print_pretty", "ctx"], [54, 1, 1, "c.fq_zech_print_pretty", "op"]], "fq_zech_pth_root": [[54, 1, 1, "c.fq_zech_pth_root", "ctx"], [54, 1, 1, "c.fq_zech_pth_root", "op1"], [54, 1, 1, "c.fq_zech_pth_root", "rop"]], "fq_zech_rand": [[54, 1, 1, "c.fq_zech_rand", "ctx"], [54, 1, 1, "c.fq_zech_rand", "rop"], [54, 1, 1, "c.fq_zech_rand", "state"]], "fq_zech_rand_not_zero": [[54, 1, 1, "c.fq_zech_rand_not_zero", "ctx"], [54, 1, 1, "c.fq_zech_rand_not_zero", "rop"], [54, 1, 1, "c.fq_zech_rand_not_zero", "state"]], "fq_zech_randtest": [[54, 1, 1, "c.fq_zech_randtest", "ctx"], [54, 1, 1, "c.fq_zech_randtest", "rop"], [54, 1, 1, "c.fq_zech_randtest", "state"]], "fq_zech_randtest_dense": [[54, 1, 1, "c.fq_zech_randtest_dense", "ctx"], [54, 1, 1, "c.fq_zech_randtest_dense", "rop"], [54, 1, 1, "c.fq_zech_randtest_dense", "state"]], "fq_zech_randtest_not_zero": [[54, 1, 1, "c.fq_zech_randtest_not_zero", "ctx"], [54, 1, 1, "c.fq_zech_randtest_not_zero", "rop"], [54, 1, 1, "c.fq_zech_randtest_not_zero", "state"]], "fq_zech_reduce": [[54, 1, 1, "c.fq_zech_reduce", "ctx"], [54, 1, 1, "c.fq_zech_reduce", "rop"]], "fq_zech_set": [[54, 1, 1, "c.fq_zech_set", "ctx"], [54, 1, 1, "c.fq_zech_set", "op"], [54, 1, 1, "c.fq_zech_set", "rop"]], "fq_zech_set_fmpz": [[54, 1, 1, "c.fq_zech_set_fmpz", "ctx"], [54, 1, 1, "c.fq_zech_set_fmpz", "rop"], [54, 1, 1, "c.fq_zech_set_fmpz", "x"]], "fq_zech_set_fq_nmod": [[54, 1, 1, "c.fq_zech_set_fq_nmod", "ctx"], [54, 1, 1, "c.fq_zech_set_fq_nmod", "op"], [54, 1, 1, "c.fq_zech_set_fq_nmod", "rop"]], "fq_zech_set_nmod_mat": [[54, 1, 1, "c.fq_zech_set_nmod_mat", "a"], [54, 1, 1, "c.fq_zech_set_nmod_mat", "col"], [54, 1, 1, "c.fq_zech_set_nmod_mat", "ctx"]], "fq_zech_set_nmod_poly": [[54, 1, 1, "c.fq_zech_set_nmod_poly", "a"], [54, 1, 1, "c.fq_zech_set_nmod_poly", "b"], [54, 1, 1, "c.fq_zech_set_nmod_poly", "ctx"]], "fq_zech_set_si": [[54, 1, 1, "c.fq_zech_set_si", "ctx"], [54, 1, 1, "c.fq_zech_set_si", "rop"], [54, 1, 1, "c.fq_zech_set_si", "x"]], "fq_zech_set_ui": [[54, 1, 1, "c.fq_zech_set_ui", "ctx"], [54, 1, 1, "c.fq_zech_set_ui", "rop"], [54, 1, 1, "c.fq_zech_set_ui", "x"]], "fq_zech_sqr": [[54, 1, 1, "c.fq_zech_sqr", "ctx"], [54, 1, 1, "c.fq_zech_sqr", "op"], [54, 1, 1, "c.fq_zech_sqr", "rop"]], "fq_zech_sqrt": [[54, 1, 1, "c.fq_zech_sqrt", "ctx"], [54, 1, 1, "c.fq_zech_sqrt", "op1"], [54, 1, 1, "c.fq_zech_sqrt", "rop"]], "fq_zech_sub": [[54, 1, 1, "c.fq_zech_sub", "ctx"], [54, 1, 1, "c.fq_zech_sub", "op1"], [54, 1, 1, "c.fq_zech_sub", "op2"], [54, 1, 1, "c.fq_zech_sub", "rop"]], "fq_zech_sub_one": [[54, 1, 1, "c.fq_zech_sub_one", "ctx"], [54, 1, 1, "c.fq_zech_sub_one", "op1"], [54, 1, 1, "c.fq_zech_sub_one", "rop"]], "fq_zech_swap": [[54, 1, 1, "c.fq_zech_swap", "ctx"], [54, 1, 1, "c.fq_zech_swap", "op1"], [54, 1, 1, "c.fq_zech_swap", "op2"]], "fq_zech_trace": [[54, 1, 1, "c.fq_zech_trace", "ctx"], [54, 1, 1, "c.fq_zech_trace", "op"], [54, 1, 1, "c.fq_zech_trace", "rop"]], "fq_zech_zero": [[54, 1, 1, "c.fq_zech_zero", "ctx"], [54, 1, 1, "c.fq_zech_zero", "rop"]], "fq_zero": [[36, 1, 1, "c.fq_zero", "ctx"], [36, 1, 1, "c.fq_zero", "rop"]], "get_clock": [[85, 1, 1, "c.get_clock", "n"]], "get_memory_usage": [[85, 1, 1, "c.get_memory_usage", "meminfo"]], "ifft_butterfly": [[9, 1, 1, "c.ifft_butterfly", "i"], [9, 1, 1, "c.ifft_butterfly", "i1"], [9, 1, 1, "c.ifft_butterfly", "i2"], [9, 1, 1, "c.ifft_butterfly", "limbs"], [9, 1, 1, "c.ifft_butterfly", "s"], [9, 1, 1, "c.ifft_butterfly", "t"], [9, 1, 1, "c.ifft_butterfly", "w"]], "ifft_butterfly_sqrt2": [[9, 1, 1, "c.ifft_butterfly_sqrt2", "i"], [9, 1, 1, "c.ifft_butterfly_sqrt2", "i1"], [9, 1, 1, "c.ifft_butterfly_sqrt2", "i2"], [9, 1, 1, "c.ifft_butterfly_sqrt2", "limbs"], [9, 1, 1, "c.ifft_butterfly_sqrt2", "s"], [9, 1, 1, "c.ifft_butterfly_sqrt2", "t"], [9, 1, 1, "c.ifft_butterfly_sqrt2", "temp"], [9, 1, 1, "c.ifft_butterfly_sqrt2", "w"]], "ifft_butterfly_twiddle": [[9, 1, 1, "c.ifft_butterfly_twiddle", "b1"], [9, 1, 1, "c.ifft_butterfly_twiddle", "b2"], [9, 1, 1, "c.ifft_butterfly_twiddle", "limbs"], [9, 1, 1, "c.ifft_butterfly_twiddle", "s"], [9, 1, 1, "c.ifft_butterfly_twiddle", "t"], [9, 1, 1, "c.ifft_butterfly_twiddle", "u"], [9, 1, 1, "c.ifft_butterfly_twiddle", "v"]], "ifft_mfa_truncate_sqrt2": [[9, 1, 1, "c.ifft_mfa_truncate_sqrt2", "ii"], [9, 1, 1, "c.ifft_mfa_truncate_sqrt2", "n"], [9, 1, 1, "c.ifft_mfa_truncate_sqrt2", "n1"], [9, 1, 1, "c.ifft_mfa_truncate_sqrt2", "t1"], [9, 1, 1, "c.ifft_mfa_truncate_sqrt2", "t2"], [9, 1, 1, "c.ifft_mfa_truncate_sqrt2", "temp"], [9, 1, 1, "c.ifft_mfa_truncate_sqrt2", "trunc"], [9, 1, 1, "c.ifft_mfa_truncate_sqrt2", "w"]], "ifft_mfa_truncate_sqrt2_outer": [[9, 1, 1, "c.ifft_mfa_truncate_sqrt2_outer", "ii"], [9, 1, 1, "c.ifft_mfa_truncate_sqrt2_outer", "n"], [9, 1, 1, "c.ifft_mfa_truncate_sqrt2_outer", "n1"], [9, 1, 1, "c.ifft_mfa_truncate_sqrt2_outer", "t1"], [9, 1, 1, "c.ifft_mfa_truncate_sqrt2_outer", "t2"], [9, 1, 1, "c.ifft_mfa_truncate_sqrt2_outer", "temp"], [9, 1, 1, "c.ifft_mfa_truncate_sqrt2_outer", "trunc"], [9, 1, 1, "c.ifft_mfa_truncate_sqrt2_outer", "w"]], "ifft_negacyclic": [[9, 1, 1, "c.ifft_negacyclic", "ii"], [9, 1, 1, "c.ifft_negacyclic", "n"], [9, 1, 1, "c.ifft_negacyclic", "t1"], [9, 1, 1, "c.ifft_negacyclic", "t2"], [9, 1, 1, "c.ifft_negacyclic", "temp"], [9, 1, 1, "c.ifft_negacyclic", "w"]], "ifft_radix2": [[9, 1, 1, "c.ifft_radix2", "ii"], [9, 1, 1, "c.ifft_radix2", "n"], [9, 1, 1, "c.ifft_radix2", "t1"], [9, 1, 1, "c.ifft_radix2", "t2"], [9, 1, 1, "c.ifft_radix2", "w"]], "ifft_radix2_twiddle": [[9, 1, 1, "c.ifft_radix2_twiddle", "c"], [9, 1, 1, "c.ifft_radix2_twiddle", "ii"], [9, 1, 1, "c.ifft_radix2_twiddle", "is"], [9, 1, 1, "c.ifft_radix2_twiddle", "n"], [9, 1, 1, "c.ifft_radix2_twiddle", "r"], [9, 1, 1, "c.ifft_radix2_twiddle", "rs"], [9, 1, 1, "c.ifft_radix2_twiddle", "t1"], [9, 1, 1, "c.ifft_radix2_twiddle", "t2"], [9, 1, 1, "c.ifft_radix2_twiddle", "w"], [9, 1, 1, "c.ifft_radix2_twiddle", "ws"]], "ifft_truncate": [[9, 1, 1, "c.ifft_truncate", "ii"], [9, 1, 1, "c.ifft_truncate", "n"], [9, 1, 1, "c.ifft_truncate", "t1"], [9, 1, 1, "c.ifft_truncate", "t2"], [9, 1, 1, "c.ifft_truncate", "trunc"], [9, 1, 1, "c.ifft_truncate", "w"]], "ifft_truncate1": [[9, 1, 1, "c.ifft_truncate1", "ii"], [9, 1, 1, "c.ifft_truncate1", "n"], [9, 1, 1, "c.ifft_truncate1", "t1"], [9, 1, 1, "c.ifft_truncate1", "t2"], [9, 1, 1, "c.ifft_truncate1", "trunc"], [9, 1, 1, "c.ifft_truncate1", "w"]], "ifft_truncate1_twiddle": [[9, 1, 1, "c.ifft_truncate1_twiddle", "c"], [9, 1, 1, "c.ifft_truncate1_twiddle", "ii"], [9, 1, 1, "c.ifft_truncate1_twiddle", "is"], [9, 1, 1, "c.ifft_truncate1_twiddle", "n"], [9, 1, 1, "c.ifft_truncate1_twiddle", "r"], [9, 1, 1, "c.ifft_truncate1_twiddle", "rs"], [9, 1, 1, "c.ifft_truncate1_twiddle", "t1"], [9, 1, 1, "c.ifft_truncate1_twiddle", "t2"], [9, 1, 1, "c.ifft_truncate1_twiddle", "trunc"], [9, 1, 1, "c.ifft_truncate1_twiddle", "w"], [9, 1, 1, "c.ifft_truncate1_twiddle", "ws"]], "ifft_truncate_sqrt2": [[9, 1, 1, "c.ifft_truncate_sqrt2", "ii"], [9, 1, 1, "c.ifft_truncate_sqrt2", "n"], [9, 1, 1, "c.ifft_truncate_sqrt2", "t1"], [9, 1, 1, "c.ifft_truncate_sqrt2", "t2"], [9, 1, 1, "c.ifft_truncate_sqrt2", "temp"], [9, 1, 1, "c.ifft_truncate_sqrt2", "trunc"], [9, 1, 1, "c.ifft_truncate_sqrt2", "w"]], "mpf_mat_approx_equal": [[66, 1, 1, "c.mpf_mat_approx_equal", "bits"], [66, 1, 1, "c.mpf_mat_approx_equal", "mat1"], [66, 1, 1, "c.mpf_mat_approx_equal", "mat2"]], "mpf_mat_clear": [[66, 1, 1, "c.mpf_mat_clear", "mat"]], "mpf_mat_entry": [[66, 1, 1, "c.mpf_mat_entry", "i"], [66, 1, 1, "c.mpf_mat_entry", "j"], [66, 1, 1, "c.mpf_mat_entry", "mat"]], "mpf_mat_equal": [[66, 1, 1, "c.mpf_mat_equal", "mat1"], [66, 1, 1, "c.mpf_mat_equal", "mat2"]], "mpf_mat_gso": [[66, 1, 1, "c.mpf_mat_gso", "A"], [66, 1, 1, "c.mpf_mat_gso", "B"]], "mpf_mat_init": [[66, 1, 1, "c.mpf_mat_init", "cols"], [66, 1, 1, "c.mpf_mat_init", "mat"], [66, 1, 1, "c.mpf_mat_init", "prec"], [66, 1, 1, "c.mpf_mat_init", "rows"]], "mpf_mat_is_empty": [[66, 1, 1, "c.mpf_mat_is_empty", "mat"]], "mpf_mat_is_square": [[66, 1, 1, "c.mpf_mat_is_square", "mat"]], "mpf_mat_is_zero": [[66, 1, 1, "c.mpf_mat_is_zero", "mat"]], "mpf_mat_mul": [[66, 1, 1, "c.mpf_mat_mul", "A"], [66, 1, 1, "c.mpf_mat_mul", "B"], [66, 1, 1, "c.mpf_mat_mul", "C"]], "mpf_mat_one": [[66, 1, 1, "c.mpf_mat_one", "mat"]], "mpf_mat_print": [[66, 1, 1, "c.mpf_mat_print", "mat"]], "mpf_mat_qr": [[66, 1, 1, "c.mpf_mat_qr", "A"], [66, 1, 1, "c.mpf_mat_qr", "Q"], [66, 1, 1, "c.mpf_mat_qr", "R"]], "mpf_mat_randtest": [[66, 1, 1, "c.mpf_mat_randtest", "bits"], [66, 1, 1, "c.mpf_mat_randtest", "mat"], [66, 1, 1, "c.mpf_mat_randtest", "state"]], "mpf_mat_set": [[66, 1, 1, "c.mpf_mat_set", "mat1"], [66, 1, 1, "c.mpf_mat_set", "mat2"]], "mpf_mat_swap": [[66, 1, 1, "c.mpf_mat_swap", "mat1"], [66, 1, 1, "c.mpf_mat_swap", "mat2"]], "mpf_mat_swap_entrywise": [[66, 1, 1, "c.mpf_mat_swap_entrywise", "mat1"], [66, 1, 1, "c.mpf_mat_swap_entrywise", "mat2"]], "mpf_mat_zero": [[66, 1, 1, "c.mpf_mat_zero", "mat"]], "mpfr_mat_clear": [[68, 1, 1, "c.mpfr_mat_clear", "mat"]], "mpfr_mat_entry": [[68, 1, 1, "c.mpfr_mat_entry", "i"], [68, 1, 1, "c.mpfr_mat_entry", "j"], [68, 1, 1, "c.mpfr_mat_entry", "mat"]], "mpfr_mat_equal": [[68, 1, 1, "c.mpfr_mat_equal", "mat1"], [68, 1, 1, "c.mpfr_mat_equal", "mat2"]], "mpfr_mat_init": [[68, 1, 1, "c.mpfr_mat_init", "cols"], [68, 1, 1, "c.mpfr_mat_init", "mat"], [68, 1, 1, "c.mpfr_mat_init", "prec"], [68, 1, 1, "c.mpfr_mat_init", "rows"]], "mpfr_mat_mul_classical": [[68, 1, 1, "c.mpfr_mat_mul_classical", "A"], [68, 1, 1, "c.mpfr_mat_mul_classical", "B"], [68, 1, 1, "c.mpfr_mat_mul_classical", "C"], [68, 1, 1, "c.mpfr_mat_mul_classical", "rnd"]], "mpfr_mat_randtest": [[68, 1, 1, "c.mpfr_mat_randtest", "mat"], [68, 1, 1, "c.mpfr_mat_randtest", "state"]], "mpfr_mat_set": [[68, 1, 1, "c.mpfr_mat_set", "mat1"], [68, 1, 1, "c.mpfr_mat_set", "mat2"]], "mpfr_mat_swap": [[68, 1, 1, "c.mpfr_mat_swap", "mat1"], [68, 1, 1, "c.mpfr_mat_swap", "mat2"]], "mpfr_mat_swap_entrywise": [[68, 1, 1, "c.mpfr_mat_swap_entrywise", "mat1"], [68, 1, 1, "c.mpfr_mat_swap_entrywise", "mat2"]], "mpfr_mat_zero": [[68, 1, 1, "c.mpfr_mat_zero", "mat"]], "mpn_addmod_2expp1_1": [[9, 1, 1, "c.mpn_addmod_2expp1_1", "c"], [9, 1, 1, "c.mpn_addmod_2expp1_1", "limbs"], [9, 1, 1, "c.mpn_addmod_2expp1_1", "r"]], "mpn_div_2expmod_2expp1": [[9, 1, 1, "c.mpn_div_2expmod_2expp1", "d"], [9, 1, 1, "c.mpn_div_2expmod_2expp1", "i1"], [9, 1, 1, "c.mpn_div_2expmod_2expp1", "limbs"], [9, 1, 1, "c.mpn_div_2expmod_2expp1", "t"]], "mpn_mul_2expmod_2expp1": [[9, 1, 1, "c.mpn_mul_2expmod_2expp1", "d"], [9, 1, 1, "c.mpn_mul_2expmod_2expp1", "i1"], [9, 1, 1, "c.mpn_mul_2expmod_2expp1", "limbs"], [9, 1, 1, "c.mpn_mul_2expmod_2expp1", "t"]], "mpn_negmod_2expp1": [[9, 1, 1, "c.mpn_negmod_2expp1", "a"], [9, 1, 1, "c.mpn_negmod_2expp1", "limbs"], [9, 1, 1, "c.mpn_negmod_2expp1", "z"]], "mpn_normmod_2expp1": [[9, 1, 1, "c.mpn_normmod_2expp1", "limbs"], [9, 1, 1, "c.mpn_normmod_2expp1", "t"]], "mpoly_ctx_clear": [[71, 1, 1, "c.mpoly_ctx_clear", "mctx"]], "mpoly_ctx_init": [[71, 1, 1, "c.mpoly_ctx_init", "ctx"], [71, 1, 1, "c.mpoly_ctx_init", "nvars"], [71, 1, 1, "c.mpoly_ctx_init", "ord"]], "mpoly_ctx_init_rand": [[71, 1, 1, "c.mpoly_ctx_init_rand", "max_nvars"], [71, 1, 1, "c.mpoly_ctx_init_rand", "mctx"], [71, 1, 1, "c.mpoly_ctx_init_rand", "state"]], "mpoly_exp_bits_required_ffmpz": [[71, 1, 1, "c.mpoly_exp_bits_required_ffmpz", "mctx"], [71, 1, 1, "c.mpoly_exp_bits_required_ffmpz", "user_exp"]], "mpoly_exp_bits_required_pfmpz": [[71, 1, 1, "c.mpoly_exp_bits_required_pfmpz", "mctx"], [71, 1, 1, "c.mpoly_exp_bits_required_pfmpz", "user_exp"]], "mpoly_exp_bits_required_ui": [[71, 1, 1, "c.mpoly_exp_bits_required_ui", "mctx"], [71, 1, 1, "c.mpoly_exp_bits_required_ui", "user_exp"]], "mpoly_get_cmpmask": [[71, 1, 1, "c.mpoly_get_cmpmask", "N"], [71, 1, 1, "c.mpoly_get_cmpmask", "bits"], [71, 1, 1, "c.mpoly_get_cmpmask", "cmpmask"], [71, 1, 1, "c.mpoly_get_cmpmask", "mctx"]], "mpoly_get_monomial_ffmpz": [[71, 1, 1, "c.mpoly_get_monomial_ffmpz", "bits"], [71, 1, 1, "c.mpoly_get_monomial_ffmpz", "exps"], [71, 1, 1, "c.mpoly_get_monomial_ffmpz", "mctx"], [71, 1, 1, "c.mpoly_get_monomial_ffmpz", "poly_exps"]], "mpoly_get_monomial_pfmpz": [[71, 1, 1, "c.mpoly_get_monomial_pfmpz", "bits"], [71, 1, 1, "c.mpoly_get_monomial_pfmpz", "exps"], [71, 1, 1, "c.mpoly_get_monomial_pfmpz", "mctx"], [71, 1, 1, "c.mpoly_get_monomial_pfmpz", "poly_exps"]], "mpoly_get_monomial_ui": [[71, 1, 1, "c.mpoly_get_monomial_ui", "bits"], [71, 1, 1, "c.mpoly_get_monomial_ui", "exps"], [71, 1, 1, "c.mpoly_get_monomial_ui", "mctx"], [71, 1, 1, "c.mpoly_get_monomial_ui", "poly_exps"]], "mpoly_main_variable_terms1": [[71, 1, 1, "c.mpoly_main_variable_terms1", "bits"], [71, 1, 1, "c.mpoly_main_variable_terms1", "exp1"], [71, 1, 1, "c.mpoly_main_variable_terms1", "i1"], [71, 1, 1, "c.mpoly_main_variable_terms1", "k"], [71, 1, 1, "c.mpoly_main_variable_terms1", "l1"], [71, 1, 1, "c.mpoly_main_variable_terms1", "len1"], [71, 1, 1, "c.mpoly_main_variable_terms1", "n1"], [71, 1, 1, "c.mpoly_main_variable_terms1", "num"]], "mpoly_max_degrees_tight": [[71, 1, 1, "c.mpoly_max_degrees_tight", "exps"], [71, 1, 1, "c.mpoly_max_degrees_tight", "len"], [71, 1, 1, "c.mpoly_max_degrees_tight", "max_exp"], [71, 1, 1, "c.mpoly_max_degrees_tight", "num"], [71, 1, 1, "c.mpoly_max_degrees_tight", "prods"]], "mpoly_max_fields_fmpz": [[71, 1, 1, "c.mpoly_max_fields_fmpz", "bits"], [71, 1, 1, "c.mpoly_max_fields_fmpz", "len"], [71, 1, 1, "c.mpoly_max_fields_fmpz", "max_fields"], [71, 1, 1, "c.mpoly_max_fields_fmpz", "mctx"], [71, 1, 1, "c.mpoly_max_fields_fmpz", "poly_exps"]], "mpoly_max_fields_ui_sp": [[71, 1, 1, "c.mpoly_max_fields_ui_sp", "bits"], [71, 1, 1, "c.mpoly_max_fields_ui_sp", "len"], [71, 1, 1, "c.mpoly_max_fields_ui_sp", "max_fields"], [71, 1, 1, "c.mpoly_max_fields_ui_sp", "mctx"], [71, 1, 1, "c.mpoly_max_fields_ui_sp", "poly_exps"]], "mpoly_monomial_add": [[71, 1, 1, "c.mpoly_monomial_add", "N"], [71, 1, 1, "c.mpoly_monomial_add", "exp2"], [71, 1, 1, "c.mpoly_monomial_add", "exp3"], [71, 1, 1, "c.mpoly_monomial_add", "exp_ptr"]], "mpoly_monomial_add_mp": [[71, 1, 1, "c.mpoly_monomial_add_mp", "N"], [71, 1, 1, "c.mpoly_monomial_add_mp", "exp2"], [71, 1, 1, "c.mpoly_monomial_add_mp", "exp3"], [71, 1, 1, "c.mpoly_monomial_add_mp", "exp_ptr"]], "mpoly_monomial_cmp": [[71, 1, 1, "c.mpoly_monomial_cmp", "N"], [71, 1, 1, "c.mpoly_monomial_cmp", "cmpmask"], [71, 1, 1, "c.mpoly_monomial_cmp", "exp2"], [71, 1, 1, "c.mpoly_monomial_cmp", "exp3"]], "mpoly_monomial_divides": [[71, 1, 1, "c.mpoly_monomial_divides", "N"], [71, 1, 1, "c.mpoly_monomial_divides", "exp2"], [71, 1, 1, "c.mpoly_monomial_divides", "exp3"], [71, 1, 1, "c.mpoly_monomial_divides", "exp_ptr"], [71, 1, 1, "c.mpoly_monomial_divides", "mask"]], "mpoly_monomial_divides1": [[71, 1, 1, "c.mpoly_monomial_divides1", "exp2"], [71, 1, 1, "c.mpoly_monomial_divides1", "exp3"], [71, 1, 1, "c.mpoly_monomial_divides1", "exp_ptr"], [71, 1, 1, "c.mpoly_monomial_divides1", "mask"]], "mpoly_monomial_divides_mp": [[71, 1, 1, "c.mpoly_monomial_divides_mp", "N"], [71, 1, 1, "c.mpoly_monomial_divides_mp", "bits"], [71, 1, 1, "c.mpoly_monomial_divides_mp", "exp2"], [71, 1, 1, "c.mpoly_monomial_divides_mp", "exp3"], [71, 1, 1, "c.mpoly_monomial_divides_mp", "exp_ptr"]], "mpoly_monomial_divides_tight": [[71, 1, 1, "c.mpoly_monomial_divides_tight", "e1"], [71, 1, 1, "c.mpoly_monomial_divides_tight", "e2"], [71, 1, 1, "c.mpoly_monomial_divides_tight", "num"], [71, 1, 1, "c.mpoly_monomial_divides_tight", "prods"]], "mpoly_monomial_equal": [[71, 1, 1, "c.mpoly_monomial_equal", "N"], [71, 1, 1, "c.mpoly_monomial_equal", "exp2"], [71, 1, 1, "c.mpoly_monomial_equal", "exp3"]], "mpoly_monomial_exists": [[71, 1, 1, "c.mpoly_monomial_exists", "N"], [71, 1, 1, "c.mpoly_monomial_exists", "cmpmask"], [71, 1, 1, "c.mpoly_monomial_exists", "exp"], [71, 1, 1, "c.mpoly_monomial_exists", "index"], [71, 1, 1, "c.mpoly_monomial_exists", "len"], [71, 1, 1, "c.mpoly_monomial_exists", "poly_exps"]], "mpoly_monomial_gt": [[71, 1, 1, "c.mpoly_monomial_gt", "N"], [71, 1, 1, "c.mpoly_monomial_gt", "cmpmask"], [71, 1, 1, "c.mpoly_monomial_gt", "exp2"], [71, 1, 1, "c.mpoly_monomial_gt", "exp3"]], "mpoly_monomial_is_zero": [[71, 1, 1, "c.mpoly_monomial_is_zero", "N"], [71, 1, 1, "c.mpoly_monomial_is_zero", "exp"]], "mpoly_monomial_lt": [[71, 1, 1, "c.mpoly_monomial_lt", "N"], [71, 1, 1, "c.mpoly_monomial_lt", "cmpmask"], [71, 1, 1, "c.mpoly_monomial_lt", "exp2"], [71, 1, 1, "c.mpoly_monomial_lt", "exp3"]], "mpoly_monomial_mul_ui": [[71, 1, 1, "c.mpoly_monomial_mul_ui", "N"], [71, 1, 1, "c.mpoly_monomial_mul_ui", "c"], [71, 1, 1, "c.mpoly_monomial_mul_ui", "exp2"], [71, 1, 1, "c.mpoly_monomial_mul_ui", "exp3"]], "mpoly_monomial_overflows": [[71, 1, 1, "c.mpoly_monomial_overflows", "N"], [71, 1, 1, "c.mpoly_monomial_overflows", "exp2"], [71, 1, 1, "c.mpoly_monomial_overflows", "mask"]], "mpoly_monomial_overflows1": [[71, 1, 1, "c.mpoly_monomial_overflows1", "exp"], [71, 1, 1, "c.mpoly_monomial_overflows1", "mask"]], "mpoly_monomial_overflows_mp": [[71, 1, 1, "c.mpoly_monomial_overflows_mp", "N"], [71, 1, 1, "c.mpoly_monomial_overflows_mp", "bits"], [71, 1, 1, "c.mpoly_monomial_overflows_mp", "exp_ptr"]], "mpoly_monomial_set": [[71, 1, 1, "c.mpoly_monomial_set", "N"], [71, 1, 1, "c.mpoly_monomial_set", "exp2"], [71, 1, 1, "c.mpoly_monomial_set", "exp3"]], "mpoly_monomial_sub": [[71, 1, 1, "c.mpoly_monomial_sub", "N"], [71, 1, 1, "c.mpoly_monomial_sub", "exp2"], [71, 1, 1, "c.mpoly_monomial_sub", "exp3"], [71, 1, 1, "c.mpoly_monomial_sub", "exp_ptr"]], "mpoly_monomial_sub_mp": [[71, 1, 1, "c.mpoly_monomial_sub_mp", "N"], [71, 1, 1, "c.mpoly_monomial_sub_mp", "exp2"], [71, 1, 1, "c.mpoly_monomial_sub_mp", "exp3"], [71, 1, 1, "c.mpoly_monomial_sub_mp", "exp_ptr"]], "mpoly_monomial_swap": [[71, 1, 1, "c.mpoly_monomial_swap", "N"], [71, 1, 1, "c.mpoly_monomial_swap", "exp2"], [71, 1, 1, "c.mpoly_monomial_swap", "exp3"]], "mpoly_ordering_isdeg": [[71, 1, 1, "c.mpoly_ordering_isdeg", "ord"]], "mpoly_ordering_isrev": [[71, 1, 1, "c.mpoly_ordering_isrev", "ord"]], "mpoly_ordering_print": [[71, 1, 1, "c.mpoly_ordering_print", "ord"]], "mpoly_ordering_randtest": [[71, 1, 1, "c.mpoly_ordering_randtest", "state"]], "mpoly_pack_monomials_tight": [[71, 1, 1, "c.mpoly_pack_monomials_tight", "bits"], [71, 1, 1, "c.mpoly_pack_monomials_tight", "exp1"], [71, 1, 1, "c.mpoly_pack_monomials_tight", "exp2"], [71, 1, 1, "c.mpoly_pack_monomials_tight", "extra"], [71, 1, 1, "c.mpoly_pack_monomials_tight", "len"], [71, 1, 1, "c.mpoly_pack_monomials_tight", "mults"], [71, 1, 1, "c.mpoly_pack_monomials_tight", "num"]], "mpoly_pack_vec_fmpz": [[71, 1, 1, "c.mpoly_pack_vec_fmpz", "bits"], [71, 1, 1, "c.mpoly_pack_vec_fmpz", "exp1"], [71, 1, 1, "c.mpoly_pack_vec_fmpz", "exp2"], [71, 1, 1, "c.mpoly_pack_vec_fmpz", "len"], [71, 1, 1, "c.mpoly_pack_vec_fmpz", "nfields"]], "mpoly_pack_vec_ui": [[71, 1, 1, "c.mpoly_pack_vec_ui", "bits"], [71, 1, 1, "c.mpoly_pack_vec_ui", "exp1"], [71, 1, 1, "c.mpoly_pack_vec_ui", "exp2"], [71, 1, 1, "c.mpoly_pack_vec_ui", "len"], [71, 1, 1, "c.mpoly_pack_vec_ui", "nfields"]], "mpoly_repack_monomials": [[71, 1, 1, "c.mpoly_repack_monomials", "bits1"], [71, 1, 1, "c.mpoly_repack_monomials", "bits2"], [71, 1, 1, "c.mpoly_repack_monomials", "exps1"], [71, 1, 1, "c.mpoly_repack_monomials", "exps2"], [71, 1, 1, "c.mpoly_repack_monomials", "len"], [71, 1, 1, "c.mpoly_repack_monomials", "mctx"]], "mpoly_search_monomials": [[71, 1, 1, "c.mpoly_search_monomials", "N"], [71, 1, 1, "c.mpoly_search_monomials", "a"], [71, 1, 1, "c.mpoly_search_monomials", "a_len"], [71, 1, 1, "c.mpoly_search_monomials", "b"], [71, 1, 1, "c.mpoly_search_monomials", "b_len"], [71, 1, 1, "c.mpoly_search_monomials", "cmpmask"], [71, 1, 1, "c.mpoly_search_monomials", "e"], [71, 1, 1, "c.mpoly_search_monomials", "e_ind"], [71, 1, 1, "c.mpoly_search_monomials", "e_score"], [71, 1, 1, "c.mpoly_search_monomials", "lower"], [71, 1, 1, "c.mpoly_search_monomials", "t1"], [71, 1, 1, "c.mpoly_search_monomials", "t2"], [71, 1, 1, "c.mpoly_search_monomials", "t3"], [71, 1, 1, "c.mpoly_search_monomials", "upper"]], "mpoly_set_monomial_ffmpz": [[71, 1, 1, "c.mpoly_set_monomial_ffmpz", "bits"], [71, 1, 1, "c.mpoly_set_monomial_ffmpz", "exp1"], [71, 1, 1, "c.mpoly_set_monomial_ffmpz", "exp2"], [71, 1, 1, "c.mpoly_set_monomial_ffmpz", "mctx"]], "mpoly_set_monomial_pfmpz": [[71, 1, 1, "c.mpoly_set_monomial_pfmpz", "bits"], [71, 1, 1, "c.mpoly_set_monomial_pfmpz", "exp1"], [71, 1, 1, "c.mpoly_set_monomial_pfmpz", "exp2"], [71, 1, 1, "c.mpoly_set_monomial_pfmpz", "mctx"]], "mpoly_set_monomial_ui": [[71, 1, 1, "c.mpoly_set_monomial_ui", "bits"], [71, 1, 1, "c.mpoly_set_monomial_ui", "exp1"], [71, 1, 1, "c.mpoly_set_monomial_ui", "exp2"], [71, 1, 1, "c.mpoly_set_monomial_ui", "mctx"]], "mpoly_term_exp_fits_si": [[71, 1, 1, "c.mpoly_term_exp_fits_si", "bits"], [71, 1, 1, "c.mpoly_term_exp_fits_si", "exps"], [71, 1, 1, "c.mpoly_term_exp_fits_si", "mctx"], [71, 1, 1, "c.mpoly_term_exp_fits_si", "n"]], "mpoly_term_exp_fits_ui": [[71, 1, 1, "c.mpoly_term_exp_fits_ui", "bits"], [71, 1, 1, "c.mpoly_term_exp_fits_ui", "exps"], [71, 1, 1, "c.mpoly_term_exp_fits_ui", "mctx"], [71, 1, 1, "c.mpoly_term_exp_fits_ui", "n"]], "mpoly_unpack_monomials_tight": [[71, 1, 1, "c.mpoly_unpack_monomials_tight", "bits"], [71, 1, 1, "c.mpoly_unpack_monomials_tight", "e1"], [71, 1, 1, "c.mpoly_unpack_monomials_tight", "e2"], [71, 1, 1, "c.mpoly_unpack_monomials_tight", "extra"], [71, 1, 1, "c.mpoly_unpack_monomials_tight", "len"], [71, 1, 1, "c.mpoly_unpack_monomials_tight", "mults"], [71, 1, 1, "c.mpoly_unpack_monomials_tight", "num"]], "mpoly_unpack_vec_fmpz": [[71, 1, 1, "c.mpoly_unpack_vec_fmpz", "bits"], [71, 1, 1, "c.mpoly_unpack_vec_fmpz", "exp1"], [71, 1, 1, "c.mpoly_unpack_vec_fmpz", "exp2"], [71, 1, 1, "c.mpoly_unpack_vec_fmpz", "len"], [71, 1, 1, "c.mpoly_unpack_vec_fmpz", "nfields"]], "mpoly_unpack_vec_ui": [[71, 1, 1, "c.mpoly_unpack_vec_ui", "bits"], [71, 1, 1, "c.mpoly_unpack_vec_ui", "exp1"], [71, 1, 1, "c.mpoly_unpack_vec_ui", "exp2"], [71, 1, 1, "c.mpoly_unpack_vec_ui", "len"], [71, 1, 1, "c.mpoly_unpack_vec_ui", "nfields"]], "mul_mfa_truncate_sqrt2": [[9, 1, 1, "c.mul_mfa_truncate_sqrt2", "depth"], [9, 1, 1, "c.mul_mfa_truncate_sqrt2", "i1"], [9, 1, 1, "c.mul_mfa_truncate_sqrt2", "i2"], [9, 1, 1, "c.mul_mfa_truncate_sqrt2", "n1"], [9, 1, 1, "c.mul_mfa_truncate_sqrt2", "n2"], [9, 1, 1, "c.mul_mfa_truncate_sqrt2", "r1"], [9, 1, 1, "c.mul_mfa_truncate_sqrt2", "w"]], "mul_truncate_sqrt2": [[9, 1, 1, "c.mul_truncate_sqrt2", "depth"], [9, 1, 1, "c.mul_truncate_sqrt2", "i1"], [9, 1, 1, "c.mul_truncate_sqrt2", "i2"], [9, 1, 1, "c.mul_truncate_sqrt2", "n1"], [9, 1, 1, "c.mul_truncate_sqrt2", "n2"], [9, 1, 1, "c.mul_truncate_sqrt2", "r1"], [9, 1, 1, "c.mul_truncate_sqrt2", "w"]], "n_CRT": [[91, 1, 1, "c.n_CRT", "m1"], [91, 1, 1, "c.n_CRT", "m2"], [91, 1, 1, "c.n_CRT", "r1"], [91, 1, 1, "c.n_CRT", "r2"]], "n_addmod": [[91, 1, 1, "c.n_addmod", "a"], [91, 1, 1, "c.n_addmod", "b"], [91, 1, 1, "c.n_addmod", "n"]], "n_cbrt": [[91, 1, 1, "c.n_cbrt", "n"]], "n_cbrt_binary_search": [[91, 1, 1, "c.n_cbrt_binary_search", "n"]], "n_cbrt_chebyshev_approx": [[91, 1, 1, "c.n_cbrt_chebyshev_approx", "n"]], "n_cbrt_newton_iteration": [[91, 1, 1, "c.n_cbrt_newton_iteration", "n"]], "n_cbrtrem": [[91, 1, 1, "c.n_cbrtrem", "n"], [91, 1, 1, "c.n_cbrtrem", "remainder"]], "n_clog": [[91, 1, 1, "c.n_clog", "b"], [91, 1, 1, "c.n_clog", "n"]], "n_clog_2exp": [[91, 1, 1, "c.n_clog_2exp", "b"], [91, 1, 1, "c.n_clog_2exp", "n"]], "n_compute_primes": [[91, 1, 1, "c.n_compute_primes", "num_primes"]], "n_discrete_log_bsgs": [[91, 1, 1, "c.n_discrete_log_bsgs", "a"], [91, 1, 1, "c.n_discrete_log_bsgs", "b"], [91, 1, 1, "c.n_discrete_log_bsgs", "n"]], "n_div2_preinv": [[91, 1, 1, "c.n_div2_preinv", "a"], [91, 1, 1, "c.n_div2_preinv", "n"], [91, 1, 1, "c.n_div2_preinv", "ninv"]], "n_divides": [[91, 1, 1, "c.n_divides", "n"], [91, 1, 1, "c.n_divides", "p"], [91, 1, 1, "c.n_divides", "q"]], "n_divrem2_precomp": [[91, 1, 1, "c.n_divrem2_precomp", "a"], [91, 1, 1, "c.n_divrem2_precomp", "n"], [91, 1, 1, "c.n_divrem2_precomp", "npre"], [91, 1, 1, "c.n_divrem2_precomp", "q"]], "n_divrem2_preinv": [[91, 1, 1, "c.n_divrem2_preinv", "a"], [91, 1, 1, "c.n_divrem2_preinv", "n"], [91, 1, 1, "c.n_divrem2_preinv", "ninv"], [91, 1, 1, "c.n_divrem2_preinv", "q"]], "n_euler_phi": [[91, 1, 1, "c.n_euler_phi", "n"]], "n_factor": [[91, 1, 1, "c.n_factor", "factors"], [91, 1, 1, "c.n_factor", "n"], [91, 1, 1, "c.n_factor", "proved"]], "n_factor_SQUFOF": [[91, 1, 1, "c.n_factor_SQUFOF", "iters"], [91, 1, 1, "c.n_factor_SQUFOF", "n"]], "n_factor_ecm": [[91, 1, 1, "c.n_factor_ecm", "B1"], [91, 1, 1, "c.n_factor_ecm", "B2"], [91, 1, 1, "c.n_factor_ecm", "curves"], [91, 1, 1, "c.n_factor_ecm", "f"], [91, 1, 1, "c.n_factor_ecm", "n"], [91, 1, 1, "c.n_factor_ecm", "state"]], "n_factor_ecm_add": [[91, 1, 1, "c.n_factor_ecm_add", "n"], [91, 1, 1, "c.n_factor_ecm_add", "n_ecm_inf"], [91, 1, 1, "c.n_factor_ecm_add", "x"], [91, 1, 1, "c.n_factor_ecm_add", "x0"], [91, 1, 1, "c.n_factor_ecm_add", "x1"], [91, 1, 1, "c.n_factor_ecm_add", "x2"], [91, 1, 1, "c.n_factor_ecm_add", "z"], [91, 1, 1, "c.n_factor_ecm_add", "z0"], [91, 1, 1, "c.n_factor_ecm_add", "z1"], [91, 1, 1, "c.n_factor_ecm_add", "z2"]], "n_factor_ecm_double": [[91, 1, 1, "c.n_factor_ecm_double", "n"], [91, 1, 1, "c.n_factor_ecm_double", "n_ecm_inf"], [91, 1, 1, "c.n_factor_ecm_double", "x"], [91, 1, 1, "c.n_factor_ecm_double", "x0"], [91, 1, 1, "c.n_factor_ecm_double", "z"], [91, 1, 1, "c.n_factor_ecm_double", "z0"]], "n_factor_ecm_mul_montgomery_ladder": [[91, 1, 1, "c.n_factor_ecm_mul_montgomery_ladder", "k"], [91, 1, 1, "c.n_factor_ecm_mul_montgomery_ladder", "n"], [91, 1, 1, "c.n_factor_ecm_mul_montgomery_ladder", "n_ecm_inf"], [91, 1, 1, "c.n_factor_ecm_mul_montgomery_ladder", "x"], [91, 1, 1, "c.n_factor_ecm_mul_montgomery_ladder", "x0"], [91, 1, 1, "c.n_factor_ecm_mul_montgomery_ladder", "z"], [91, 1, 1, "c.n_factor_ecm_mul_montgomery_ladder", "z0"]], "n_factor_ecm_select_curve": [[91, 1, 1, "c.n_factor_ecm_select_curve", "f"], [91, 1, 1, "c.n_factor_ecm_select_curve", "n"], [91, 1, 1, "c.n_factor_ecm_select_curve", "n_ecm_inf"], [91, 1, 1, "c.n_factor_ecm_select_curve", "sigma"]], "n_factor_ecm_stage_I": [[91, 1, 1, "c.n_factor_ecm_stage_I", "B1"], [91, 1, 1, "c.n_factor_ecm_stage_I", "f"], [91, 1, 1, "c.n_factor_ecm_stage_I", "n"], [91, 1, 1, "c.n_factor_ecm_stage_I", "n_ecm_inf"], [91, 1, 1, "c.n_factor_ecm_stage_I", "num"], [91, 1, 1, "c.n_factor_ecm_stage_I", "prime_array"]], "n_factor_ecm_stage_II": [[91, 1, 1, "c.n_factor_ecm_stage_II", "B1"], [91, 1, 1, "c.n_factor_ecm_stage_II", "B2"], [91, 1, 1, "c.n_factor_ecm_stage_II", "P"], [91, 1, 1, "c.n_factor_ecm_stage_II", "f"], [91, 1, 1, "c.n_factor_ecm_stage_II", "n"], [91, 1, 1, "c.n_factor_ecm_stage_II", "n_ecm_inf"]], "n_factor_insert": [[91, 1, 1, "c.n_factor_insert", "exp"], [91, 1, 1, "c.n_factor_insert", "factors"], [91, 1, 1, "c.n_factor_insert", "p"]], "n_factor_lehman": [[91, 1, 1, "c.n_factor_lehman", "n"]], "n_factor_one_line": [[91, 1, 1, "c.n_factor_one_line", "iters"], [91, 1, 1, "c.n_factor_one_line", "n"]], "n_factor_partial": [[91, 1, 1, "c.n_factor_partial", "factors"], [91, 1, 1, "c.n_factor_partial", "limit"], [91, 1, 1, "c.n_factor_partial", "n"], [91, 1, 1, "c.n_factor_partial", "proved"]], "n_factor_pollard_brent": [[91, 1, 1, "c.n_factor_pollard_brent", "factor"], [91, 1, 1, "c.n_factor_pollard_brent", "max_iters"], [91, 1, 1, "c.n_factor_pollard_brent", "max_tries"], [91, 1, 1, "c.n_factor_pollard_brent", "n_in"], [91, 1, 1, "c.n_factor_pollard_brent", "state"]], "n_factor_pollard_brent_single": [[91, 1, 1, "c.n_factor_pollard_brent_single", "ai"], [91, 1, 1, "c.n_factor_pollard_brent_single", "factor"], [91, 1, 1, "c.n_factor_pollard_brent_single", "max_iters"], [91, 1, 1, "c.n_factor_pollard_brent_single", "n"], [91, 1, 1, "c.n_factor_pollard_brent_single", "ninv"], [91, 1, 1, "c.n_factor_pollard_brent_single", "normbits"], [91, 1, 1, "c.n_factor_pollard_brent_single", "xi"]], "n_factor_power235": [[91, 1, 1, "c.n_factor_power235", "exp"], [91, 1, 1, "c.n_factor_power235", "n"]], "n_factor_pp1": [[91, 1, 1, "c.n_factor_pp1", "B1"], [91, 1, 1, "c.n_factor_pp1", "c"], [91, 1, 1, "c.n_factor_pp1", "n"]], "n_factor_pp1_wrapper": [[91, 1, 1, "c.n_factor_pp1_wrapper", "n"]], "n_factor_trial": [[91, 1, 1, "c.n_factor_trial", "factors"], [91, 1, 1, "c.n_factor_trial", "n"], [91, 1, 1, "c.n_factor_trial", "num_primes"]], "n_factor_trial_partial": [[91, 1, 1, "c.n_factor_trial_partial", "factors"], [91, 1, 1, "c.n_factor_trial_partial", "limit"], [91, 1, 1, "c.n_factor_trial_partial", "n"], [91, 1, 1, "c.n_factor_trial_partial", "num_primes"], [91, 1, 1, "c.n_factor_trial_partial", "prod"]], "n_factor_trial_range": [[91, 1, 1, "c.n_factor_trial_range", "factors"], [91, 1, 1, "c.n_factor_trial_range", "n"], [91, 1, 1, "c.n_factor_trial_range", "num_primes"], [91, 1, 1, "c.n_factor_trial_range", "start"]], "n_factorial_fast_mod2_preinv": [[91, 1, 1, "c.n_factorial_fast_mod2_preinv", "n"], [91, 1, 1, "c.n_factorial_fast_mod2_preinv", "p"], [91, 1, 1, "c.n_factorial_fast_mod2_preinv", "pinv"]], "n_factorial_mod2_preinv": [[91, 1, 1, "c.n_factorial_mod2_preinv", "n"], [91, 1, 1, "c.n_factorial_mod2_preinv", "p"], [91, 1, 1, "c.n_factorial_mod2_preinv", "pinv"]], "n_flog": [[91, 1, 1, "c.n_flog", "b"], [91, 1, 1, "c.n_flog", "n"]], "n_gcd": [[91, 1, 1, "c.n_gcd", "x"], [91, 1, 1, "c.n_gcd", "y"]], "n_gcdinv": [[91, 1, 1, "c.n_gcdinv", "a"], [91, 1, 1, "c.n_gcdinv", "x"], [91, 1, 1, "c.n_gcdinv", "y"]], "n_invmod": [[91, 1, 1, "c.n_invmod", "x"], [91, 1, 1, "c.n_invmod", "y"]], "n_is_oddprime_binary": [[91, 1, 1, "c.n_is_oddprime_binary", "n"]], "n_is_oddprime_small": [[91, 1, 1, "c.n_is_oddprime_small", "n"]], "n_is_perfect_power": [[91, 1, 1, "c.n_is_perfect_power", "n"], [91, 1, 1, "c.n_is_perfect_power", "root"]], "n_is_perfect_power235": [[91, 1, 1, "c.n_is_perfect_power235", "n"]], "n_is_prime": [[91, 1, 1, "c.n_is_prime", "n"]], "n_is_prime_pocklington": [[91, 1, 1, "c.n_is_prime_pocklington", "iterations"], [91, 1, 1, "c.n_is_prime_pocklington", "n"]], "n_is_prime_pseudosquare": [[91, 1, 1, "c.n_is_prime_pseudosquare", "n"]], "n_is_probabprime": [[91, 1, 1, "c.n_is_probabprime", "n"]], "n_is_probabprime_BPSW": [[91, 1, 1, "c.n_is_probabprime_BPSW", "n"]], "n_is_probabprime_fermat": [[91, 1, 1, "c.n_is_probabprime_fermat", "i"], [91, 1, 1, "c.n_is_probabprime_fermat", "n"]], "n_is_probabprime_fibonacci": [[91, 1, 1, "c.n_is_probabprime_fibonacci", "n"]], "n_is_probabprime_lucas": [[91, 1, 1, "c.n_is_probabprime_lucas", "n"]], "n_is_square": [[91, 1, 1, "c.n_is_square", "x"]], "n_is_squarefree": [[91, 1, 1, "c.n_is_squarefree", "n"]], "n_is_strong_probabprime2_preinv": [[91, 1, 1, "c.n_is_strong_probabprime2_preinv", "a"], [91, 1, 1, "c.n_is_strong_probabprime2_preinv", "d"], [91, 1, 1, "c.n_is_strong_probabprime2_preinv", "n"], [91, 1, 1, "c.n_is_strong_probabprime2_preinv", "ninv"]], "n_is_strong_probabprime_precomp": [[91, 1, 1, "c.n_is_strong_probabprime_precomp", "a"], [91, 1, 1, "c.n_is_strong_probabprime_precomp", "d"], [91, 1, 1, "c.n_is_strong_probabprime_precomp", "n"], [91, 1, 1, "c.n_is_strong_probabprime_precomp", "npre"]], "n_jacobi": [[91, 1, 1, "c.n_jacobi", "x"], [91, 1, 1, "c.n_jacobi", "y"]], "n_jacobi_unsigned": [[91, 1, 1, "c.n_jacobi_unsigned", "x"], [91, 1, 1, "c.n_jacobi_unsigned", "y"]], "n_ll_mod_preinv": [[91, 1, 1, "c.n_ll_mod_preinv", "a_hi"], [91, 1, 1, "c.n_ll_mod_preinv", "a_lo"], [91, 1, 1, "c.n_ll_mod_preinv", "n"], [91, 1, 1, "c.n_ll_mod_preinv", "ninv"]], "n_lll_mod_preinv": [[91, 1, 1, "c.n_lll_mod_preinv", "a_hi"], [91, 1, 1, "c.n_lll_mod_preinv", "a_lo"], [91, 1, 1, "c.n_lll_mod_preinv", "a_mi"], [91, 1, 1, "c.n_lll_mod_preinv", "n"], [91, 1, 1, "c.n_lll_mod_preinv", "ninv"]], "n_mod2_precomp": [[91, 1, 1, "c.n_mod2_precomp", "a"], [91, 1, 1, "c.n_mod2_precomp", "n"], [91, 1, 1, "c.n_mod2_precomp", "ninv"]], "n_mod2_preinv": [[91, 1, 1, "c.n_mod2_preinv", "a"], [91, 1, 1, "c.n_mod2_preinv", "n"], [91, 1, 1, "c.n_mod2_preinv", "ninv"]], "n_mod_precomp": [[91, 1, 1, "c.n_mod_precomp", "a"], [91, 1, 1, "c.n_mod_precomp", "n"], [91, 1, 1, "c.n_mod_precomp", "ninv"]], "n_moebius_mu": [[91, 1, 1, "c.n_moebius_mu", "n"]], "n_moebius_mu_vec": [[91, 1, 1, "c.n_moebius_mu_vec", "len"], [91, 1, 1, "c.n_moebius_mu_vec", "mu"]], "n_mulmod2": [[91, 1, 1, "c.n_mulmod2", "a"], [91, 1, 1, "c.n_mulmod2", "b"], [91, 1, 1, "c.n_mulmod2", "n"]], "n_mulmod2_preinv": [[91, 1, 1, "c.n_mulmod2_preinv", "a"], [91, 1, 1, "c.n_mulmod2_preinv", "b"], [91, 1, 1, "c.n_mulmod2_preinv", "n"], [91, 1, 1, "c.n_mulmod2_preinv", "ninv"]], "n_mulmod_precomp": [[91, 1, 1, "c.n_mulmod_precomp", "a"], [91, 1, 1, "c.n_mulmod_precomp", "b"], [91, 1, 1, "c.n_mulmod_precomp", "n"], [91, 1, 1, "c.n_mulmod_precomp", "ninv"]], "n_mulmod_precomp_shoup": [[91, 1, 1, "c.n_mulmod_precomp_shoup", "p"], [91, 1, 1, "c.n_mulmod_precomp_shoup", "w"]], "n_mulmod_preinv": [[91, 1, 1, "c.n_mulmod_preinv", "a"], [91, 1, 1, "c.n_mulmod_preinv", "b"], [91, 1, 1, "c.n_mulmod_preinv", "n"], [91, 1, 1, "c.n_mulmod_preinv", "ninv"], [91, 1, 1, "c.n_mulmod_preinv", "norm"]], "n_mulmod_shoup": [[91, 1, 1, "c.n_mulmod_shoup", "p"], [91, 1, 1, "c.n_mulmod_shoup", "t"], [91, 1, 1, "c.n_mulmod_shoup", "w"], [91, 1, 1, "c.n_mulmod_shoup", "w_precomp"]], "n_nextprime": [[91, 1, 1, "c.n_nextprime", "n"], [91, 1, 1, "c.n_nextprime", "proved"]], "n_nth_prime": [[91, 1, 1, "c.n_nth_prime", "n"]], "n_nth_prime_bounds": [[91, 1, 1, "c.n_nth_prime_bounds", "hi"], [91, 1, 1, "c.n_nth_prime_bounds", "lo"], [91, 1, 1, "c.n_nth_prime_bounds", "n"]], "n_pow": [[91, 1, 1, "c.n_pow", "exp"], [91, 1, 1, "c.n_pow", "n"]], "n_powmod": [[91, 1, 1, "c.n_powmod", "a"], [91, 1, 1, "c.n_powmod", "exp"], [91, 1, 1, "c.n_powmod", "n"]], "n_powmod2": [[91, 1, 1, "c.n_powmod2", "a"], [91, 1, 1, "c.n_powmod2", "exp"], [91, 1, 1, "c.n_powmod2", "n"]], "n_powmod2_fmpz_preinv": [[91, 1, 1, "c.n_powmod2_fmpz_preinv", "a"], [91, 1, 1, "c.n_powmod2_fmpz_preinv", "exp"], [91, 1, 1, "c.n_powmod2_fmpz_preinv", "n"], [91, 1, 1, "c.n_powmod2_fmpz_preinv", "ninv"]], "n_powmod2_preinv": [[91, 1, 1, "c.n_powmod2_preinv", "a"], [91, 1, 1, "c.n_powmod2_preinv", "exp"], [91, 1, 1, "c.n_powmod2_preinv", "n"], [91, 1, 1, "c.n_powmod2_preinv", "ninv"]], "n_powmod2_ui_preinv": [[91, 1, 1, "c.n_powmod2_ui_preinv", "a"], [91, 1, 1, "c.n_powmod2_ui_preinv", "exp"], [91, 1, 1, "c.n_powmod2_ui_preinv", "n"], [91, 1, 1, "c.n_powmod2_ui_preinv", "ninv"]], "n_powmod_precomp": [[91, 1, 1, "c.n_powmod_precomp", "a"], [91, 1, 1, "c.n_powmod_precomp", "exp"], [91, 1, 1, "c.n_powmod_precomp", "n"], [91, 1, 1, "c.n_powmod_precomp", "npre"]], "n_powmod_ui_precomp": [[91, 1, 1, "c.n_powmod_ui_precomp", "a"], [91, 1, 1, "c.n_powmod_ui_precomp", "exp"], [91, 1, 1, "c.n_powmod_ui_precomp", "n"], [91, 1, 1, "c.n_powmod_ui_precomp", "npre"]], "n_precompute_inverse": [[91, 1, 1, "c.n_precompute_inverse", "n"]], "n_preinvert_limb": [[91, 1, 1, "c.n_preinvert_limb", "n"]], "n_prime_inverses_arr_readonly": [[91, 1, 1, "c.n_prime_inverses_arr_readonly", "n"]], "n_prime_pi": [[91, 1, 1, "c.n_prime_pi", "n"]], "n_prime_pi_bounds": [[91, 1, 1, "c.n_prime_pi_bounds", "hi"], [91, 1, 1, "c.n_prime_pi_bounds", "lo"], [91, 1, 1, "c.n_prime_pi_bounds", "n"]], "n_primes_arr_readonly": [[91, 1, 1, "c.n_primes_arr_readonly", "num_primes"]], "n_primes_clear": [[91, 1, 1, "c.n_primes_clear", "iter"]], "n_primes_extend_small": [[91, 1, 1, "c.n_primes_extend_small", "bound"], [91, 1, 1, "c.n_primes_extend_small", "iter"]], "n_primes_init": [[91, 1, 1, "c.n_primes_init", "iter"]], "n_primes_jump_after": [[91, 1, 1, "c.n_primes_jump_after", "iter"], [91, 1, 1, "c.n_primes_jump_after", "n"]], "n_primes_next": [[91, 1, 1, "c.n_primes_next", "iter"]], "n_primes_sieve_range": [[91, 1, 1, "c.n_primes_sieve_range", "a"], [91, 1, 1, "c.n_primes_sieve_range", "b"], [91, 1, 1, "c.n_primes_sieve_range", "iter"]], "n_primitive_root_prime": [[91, 1, 1, "c.n_primitive_root_prime", "p"]], "n_primitive_root_prime_prefactor": [[91, 1, 1, "c.n_primitive_root_prime_prefactor", "factors"], [91, 1, 1, "c.n_primitive_root_prime_prefactor", "p"]], "n_randbits": [[91, 1, 1, "c.n_randbits", "bits"], [91, 1, 1, "c.n_randbits", "state"]], "n_randint": [[91, 1, 1, "c.n_randint", "limit"], [91, 1, 1, "c.n_randint", "state"]], "n_randlimb": [[91, 1, 1, "c.n_randlimb", "state"]], "n_randprime": [[91, 1, 1, "c.n_randprime", "bits"], [91, 1, 1, "c.n_randprime", "proved"], [91, 1, 1, "c.n_randprime", "state"]], "n_randtest": [[91, 1, 1, "c.n_randtest", "state"]], "n_randtest_bits": [[91, 1, 1, "c.n_randtest_bits", "bits"], [91, 1, 1, "c.n_randtest_bits", "state"]], "n_randtest_not_zero": [[91, 1, 1, "c.n_randtest_not_zero", "state"]], "n_randtest_prime": [[91, 1, 1, "c.n_randtest_prime", "proved"], [91, 1, 1, "c.n_randtest_prime", "state"]], "n_remove": [[91, 1, 1, "c.n_remove", "n"], [91, 1, 1, "c.n_remove", "p"]], "n_remove2_precomp": [[91, 1, 1, "c.n_remove2_precomp", "n"], [91, 1, 1, "c.n_remove2_precomp", "p"], [91, 1, 1, "c.n_remove2_precomp", "ppre"]], "n_revbin": [[91, 1, 1, "c.n_revbin", "b"], [91, 1, 1, "c.n_revbin", "n"]], "n_rootrem": [[91, 1, 1, "c.n_rootrem", "n"], [91, 1, 1, "c.n_rootrem", "remainder"], [91, 1, 1, "c.n_rootrem", "root"]], "n_sizeinbase": [[91, 1, 1, "c.n_sizeinbase", "base"], [91, 1, 1, "c.n_sizeinbase", "n"]], "n_sqrt": [[91, 1, 1, "c.n_sqrt", "a"]], "n_sqrtmod": [[91, 1, 1, "c.n_sqrtmod", "a"], [91, 1, 1, "c.n_sqrtmod", "p"]], "n_sqrtmod_2pow": [[91, 1, 1, "c.n_sqrtmod_2pow", "a"], [91, 1, 1, "c.n_sqrtmod_2pow", "exp"], [91, 1, 1, "c.n_sqrtmod_2pow", "sqrt"]], "n_sqrtmod_primepow": [[91, 1, 1, "c.n_sqrtmod_primepow", "a"], [91, 1, 1, "c.n_sqrtmod_primepow", "exp"], [91, 1, 1, "c.n_sqrtmod_primepow", "p"], [91, 1, 1, "c.n_sqrtmod_primepow", "sqrt"]], "n_sqrtmodn": [[91, 1, 1, "c.n_sqrtmodn", "a"], [91, 1, 1, "c.n_sqrtmodn", "fac"], [91, 1, 1, "c.n_sqrtmodn", "sqrt"]], "n_sqrtrem": [[91, 1, 1, "c.n_sqrtrem", "a"], [91, 1, 1, "c.n_sqrtrem", "r"]], "n_submod": [[91, 1, 1, "c.n_submod", "a"], [91, 1, 1, "c.n_submod", "b"], [91, 1, 1, "c.n_submod", "n"]], "n_urandint": [[91, 1, 1, "c.n_urandint", "limit"], [91, 1, 1, "c.n_urandint", "state"]], "n_xgcd": [[91, 1, 1, "c.n_xgcd", "a"], [91, 1, 1, "c.n_xgcd", "b"], [91, 1, 1, "c.n_xgcd", "x"], [91, 1, 1, "c.n_xgcd", "y"]], "nmod_add": [[72, 1, 1, "c.nmod_add", "a"], [72, 1, 1, "c.nmod_add", "b"], [72, 1, 1, "c.nmod_add", "mod"]], "nmod_berlekamp_massey_R_poly": [[76, 1, 1, "c.nmod_berlekamp_massey_R_poly", "B"]], "nmod_berlekamp_massey_V_poly": [[76, 1, 1, "c.nmod_berlekamp_massey_V_poly", "B"]], "nmod_berlekamp_massey_add_point": [[76, 1, 1, "c.nmod_berlekamp_massey_add_point", "B"], [76, 1, 1, "c.nmod_berlekamp_massey_add_point", "a"]], "nmod_berlekamp_massey_add_points": [[76, 1, 1, "c.nmod_berlekamp_massey_add_points", "B"], [76, 1, 1, "c.nmod_berlekamp_massey_add_points", "a"], [76, 1, 1, "c.nmod_berlekamp_massey_add_points", "count"]], "nmod_berlekamp_massey_add_zeros": [[76, 1, 1, "c.nmod_berlekamp_massey_add_zeros", "B"], [76, 1, 1, "c.nmod_berlekamp_massey_add_zeros", "count"]], "nmod_berlekamp_massey_clear": [[76, 1, 1, "c.nmod_berlekamp_massey_clear", "B"]], "nmod_berlekamp_massey_init": [[76, 1, 1, "c.nmod_berlekamp_massey_init", "B"], [76, 1, 1, "c.nmod_berlekamp_massey_init", "p"]], "nmod_berlekamp_massey_point_count": [[76, 1, 1, "c.nmod_berlekamp_massey_point_count", "B"]], "nmod_berlekamp_massey_points": [[76, 1, 1, "c.nmod_berlekamp_massey_points", "B"]], "nmod_berlekamp_massey_reduce": [[76, 1, 1, "c.nmod_berlekamp_massey_reduce", "B"]], "nmod_berlekamp_massey_set_prime": [[76, 1, 1, "c.nmod_berlekamp_massey_set_prime", "B"], [76, 1, 1, "c.nmod_berlekamp_massey_set_prime", "p"]], "nmod_berlekamp_massey_start_over": [[76, 1, 1, "c.nmod_berlekamp_massey_start_over", "B"]], "nmod_discrete_log_pohlig_hellman_clear": [[72, 1, 1, "c.nmod_discrete_log_pohlig_hellman_clear", "L"]], "nmod_discrete_log_pohlig_hellman_init": [[72, 1, 1, "c.nmod_discrete_log_pohlig_hellman_init", "L"]], "nmod_discrete_log_pohlig_hellman_precompute_prime": [[72, 1, 1, "c.nmod_discrete_log_pohlig_hellman_precompute_prime", "L"], [72, 1, 1, "c.nmod_discrete_log_pohlig_hellman_precompute_prime", "p"]], "nmod_discrete_log_pohlig_hellman_primitive_root": [[72, 1, 1, "c.nmod_discrete_log_pohlig_hellman_primitive_root", "L"]], "nmod_discrete_log_pohlig_hellman_run": [[72, 1, 1, "c.nmod_discrete_log_pohlig_hellman_run", "L"], [72, 1, 1, "c.nmod_discrete_log_pohlig_hellman_run", "y"]], "nmod_div": [[72, 1, 1, "c.nmod_div", "a"], [72, 1, 1, "c.nmod_div", "b"], [72, 1, 1, "c.nmod_div", "mod"]], "nmod_init": [[72, 1, 1, "c.nmod_init", "mod"], [72, 1, 1, "c.nmod_init", "n"]], "nmod_inv": [[72, 1, 1, "c.nmod_inv", "a"], [72, 1, 1, "c.nmod_inv", "mod"]], "nmod_mat_add": [[73, 1, 1, "c.nmod_mat_add", "A"], [73, 1, 1, "c.nmod_mat_add", "B"], [73, 1, 1, "c.nmod_mat_add", "C"]], "nmod_mat_addmul": [[73, 1, 1, "c.nmod_mat_addmul", "A"], [73, 1, 1, "c.nmod_mat_addmul", "B"], [73, 1, 1, "c.nmod_mat_addmul", "C"], [73, 1, 1, "c.nmod_mat_addmul", "D"]], "nmod_mat_can_solve": [[73, 1, 1, "c.nmod_mat_can_solve", "A"], [73, 1, 1, "c.nmod_mat_can_solve", "B"], [73, 1, 1, "c.nmod_mat_can_solve", "X"]], "nmod_mat_can_solve_inner": [[73, 1, 1, "c.nmod_mat_can_solve_inner", "A"], [73, 1, 1, "c.nmod_mat_can_solve_inner", "B"], [73, 1, 1, "c.nmod_mat_can_solve_inner", "X"], [73, 1, 1, "c.nmod_mat_can_solve_inner", "perm"], [73, 1, 1, "c.nmod_mat_can_solve_inner", "pivots"], [73, 1, 1, "c.nmod_mat_can_solve_inner", "rank"]], "nmod_mat_charpoly": [[73, 1, 1, "c.nmod_mat_charpoly", "M"], [73, 1, 1, "c.nmod_mat_charpoly", "p"]], "nmod_mat_charpoly_berkowitz": [[73, 1, 1, "c.nmod_mat_charpoly_berkowitz", "M"], [73, 1, 1, "c.nmod_mat_charpoly_berkowitz", "p"]], "nmod_mat_charpoly_danilevsky": [[73, 1, 1, "c.nmod_mat_charpoly_danilevsky", "M"], [73, 1, 1, "c.nmod_mat_charpoly_danilevsky", "p"]], "nmod_mat_clear": [[73, 1, 1, "c.nmod_mat_clear", "mat"]], "nmod_mat_concat_horizontal": [[73, 1, 1, "c.nmod_mat_concat_horizontal", "mat1"], [73, 1, 1, "c.nmod_mat_concat_horizontal", "mat2"], [73, 1, 1, "c.nmod_mat_concat_horizontal", "res"]], "nmod_mat_concat_vertical": [[73, 1, 1, "c.nmod_mat_concat_vertical", "mat1"], [73, 1, 1, "c.nmod_mat_concat_vertical", "mat2"], [73, 1, 1, "c.nmod_mat_concat_vertical", "res"]], "nmod_mat_det": [[73, 1, 1, "c.nmod_mat_det", "A"]], "nmod_mat_det_howell": [[73, 1, 1, "c.nmod_mat_det_howell", "A"]], "nmod_mat_entry": [[73, 1, 1, "c.nmod_mat_entry", "i"], [73, 1, 1, "c.nmod_mat_entry", "j"], [73, 1, 1, "c.nmod_mat_entry", "mat"]], "nmod_mat_entry_ptr": [[73, 1, 1, "c.nmod_mat_entry_ptr", "i"], [73, 1, 1, "c.nmod_mat_entry_ptr", "j"], [73, 1, 1, "c.nmod_mat_entry_ptr", "mat"]], "nmod_mat_equal": [[73, 1, 1, "c.nmod_mat_equal", "mat1"], [73, 1, 1, "c.nmod_mat_equal", "mat2"]], "nmod_mat_get_entry": [[73, 1, 1, "c.nmod_mat_get_entry", "i"], [73, 1, 1, "c.nmod_mat_get_entry", "j"], [73, 1, 1, "c.nmod_mat_get_entry", "mat"]], "nmod_mat_howell_form": [[73, 1, 1, "c.nmod_mat_howell_form", "A"]], "nmod_mat_init": [[73, 1, 1, "c.nmod_mat_init", "cols"], [73, 1, 1, "c.nmod_mat_init", "mat"], [73, 1, 1, "c.nmod_mat_init", "n"], [73, 1, 1, "c.nmod_mat_init", "rows"]], "nmod_mat_init_set": [[73, 1, 1, "c.nmod_mat_init_set", "mat"], [73, 1, 1, "c.nmod_mat_init_set", "src"]], "nmod_mat_inv": [[73, 1, 1, "c.nmod_mat_inv", "A"], [73, 1, 1, "c.nmod_mat_inv", "B"]], "nmod_mat_invert_cols": [[73, 1, 1, "c.nmod_mat_invert_cols", "mat"], [73, 1, 1, "c.nmod_mat_invert_cols", "perm"]], "nmod_mat_invert_rows": [[73, 1, 1, "c.nmod_mat_invert_rows", "mat"], [73, 1, 1, "c.nmod_mat_invert_rows", "perm"]], "nmod_mat_is_zero": [[73, 1, 1, "c.nmod_mat_is_zero", "mat"]], "nmod_mat_is_zero_row": [[73, 1, 1, "c.nmod_mat_is_zero_row", "i"], [73, 1, 1, "c.nmod_mat_is_zero_row", "mat"]], "nmod_mat_lu": [[73, 1, 1, "c.nmod_mat_lu", "A"], [73, 1, 1, "c.nmod_mat_lu", "P"], [73, 1, 1, "c.nmod_mat_lu", "rank_check"]], "nmod_mat_lu_classical": [[73, 1, 1, "c.nmod_mat_lu_classical", "A"], [73, 1, 1, "c.nmod_mat_lu_classical", "P"], [73, 1, 1, "c.nmod_mat_lu_classical", "rank_check"]], "nmod_mat_lu_classical_delayed": [[73, 1, 1, "c.nmod_mat_lu_classical_delayed", "A"], [73, 1, 1, "c.nmod_mat_lu_classical_delayed", "P"], [73, 1, 1, "c.nmod_mat_lu_classical_delayed", "rank_check"]], "nmod_mat_lu_recursive": [[73, 1, 1, "c.nmod_mat_lu_recursive", "A"], [73, 1, 1, "c.nmod_mat_lu_recursive", "P"], [73, 1, 1, "c.nmod_mat_lu_recursive", "rank_check"]], "nmod_mat_minpoly": [[73, 1, 1, "c.nmod_mat_minpoly", "M"], [73, 1, 1, "c.nmod_mat_minpoly", "p"]], "nmod_mat_mul": [[73, 1, 1, "c.nmod_mat_mul", "A"], [73, 1, 1, "c.nmod_mat_mul", "B"], [73, 1, 1, "c.nmod_mat_mul", "C"]], "nmod_mat_mul_blas": [[73, 1, 1, "c.nmod_mat_mul_blas", "A"], [73, 1, 1, "c.nmod_mat_mul_blas", "B"], [73, 1, 1, "c.nmod_mat_mul_blas", "C"]], "nmod_mat_mul_classical": [[73, 1, 1, "c.nmod_mat_mul_classical", "A"], [73, 1, 1, "c.nmod_mat_mul_classical", "B"], [73, 1, 1, "c.nmod_mat_mul_classical", "C"]], "nmod_mat_mul_classical_threaded": [[73, 1, 1, "c.nmod_mat_mul_classical_threaded", "A"], [73, 1, 1, "c.nmod_mat_mul_classical_threaded", "B"], [73, 1, 1, "c.nmod_mat_mul_classical_threaded", "C"]], "nmod_mat_mul_nmod_vec": [[73, 1, 1, "c.nmod_mat_mul_nmod_vec", "A"], [73, 1, 1, "c.nmod_mat_mul_nmod_vec", "b"], [73, 1, 1, "c.nmod_mat_mul_nmod_vec", "blen"], [73, 1, 1, "c.nmod_mat_mul_nmod_vec", "c"]], "nmod_mat_mul_nmod_vec_ptr": [[73, 1, 1, "c.nmod_mat_mul_nmod_vec_ptr", "A"], [73, 1, 1, "c.nmod_mat_mul_nmod_vec_ptr", "b"], [73, 1, 1, "c.nmod_mat_mul_nmod_vec_ptr", "blen"], [73, 1, 1, "c.nmod_mat_mul_nmod_vec_ptr", "c"]], "nmod_mat_mul_strassen": [[73, 1, 1, "c.nmod_mat_mul_strassen", "A"], [73, 1, 1, "c.nmod_mat_mul_strassen", "B"], [73, 1, 1, "c.nmod_mat_mul_strassen", "C"]], "nmod_mat_ncols": [[73, 1, 1, "c.nmod_mat_ncols", "mat"]], "nmod_mat_neg": [[73, 1, 1, "c.nmod_mat_neg", "A"], [73, 1, 1, "c.nmod_mat_neg", "B"]], "nmod_mat_nmod_vec_mul": [[73, 1, 1, "c.nmod_mat_nmod_vec_mul", "B"], [73, 1, 1, "c.nmod_mat_nmod_vec_mul", "a"], [73, 1, 1, "c.nmod_mat_nmod_vec_mul", "alen"], [73, 1, 1, "c.nmod_mat_nmod_vec_mul", "c"]], "nmod_mat_nmod_vec_mul_ptr": [[73, 1, 1, "c.nmod_mat_nmod_vec_mul_ptr", "B"], [73, 1, 1, "c.nmod_mat_nmod_vec_mul_ptr", "a"], [73, 1, 1, "c.nmod_mat_nmod_vec_mul_ptr", "alen"], [73, 1, 1, "c.nmod_mat_nmod_vec_mul_ptr", "c"]], "nmod_mat_nrows": [[73, 1, 1, "c.nmod_mat_nrows", "mat"]], "nmod_mat_nullspace": [[73, 1, 1, "c.nmod_mat_nullspace", "A"], [73, 1, 1, "c.nmod_mat_nullspace", "X"]], "nmod_mat_pow": [[73, 1, 1, "c.nmod_mat_pow", "dest"], [73, 1, 1, "c.nmod_mat_pow", "mat"], [73, 1, 1, "c.nmod_mat_pow", "pow"]], "nmod_mat_print_pretty": [[73, 1, 1, "c.nmod_mat_print_pretty", "mat"]], "nmod_mat_randfull": [[73, 1, 1, "c.nmod_mat_randfull", "mat"], [73, 1, 1, "c.nmod_mat_randfull", "state"]], "nmod_mat_randops": [[73, 1, 1, "c.nmod_mat_randops", "count"], [73, 1, 1, "c.nmod_mat_randops", "mat"], [73, 1, 1, "c.nmod_mat_randops", "state"]], "nmod_mat_randpermdiag": [[73, 1, 1, "c.nmod_mat_randpermdiag", "diag"], [73, 1, 1, "c.nmod_mat_randpermdiag", "mat"], [73, 1, 1, "c.nmod_mat_randpermdiag", "n"], [73, 1, 1, "c.nmod_mat_randpermdiag", "state"]], "nmod_mat_randrank": [[73, 1, 1, "c.nmod_mat_randrank", "mat"], [73, 1, 1, "c.nmod_mat_randrank", "rank"], [73, 1, 1, "c.nmod_mat_randrank", "state"]], "nmod_mat_randtest": [[73, 1, 1, "c.nmod_mat_randtest", "mat"], [73, 1, 1, "c.nmod_mat_randtest", "state"]], "nmod_mat_randtril": [[73, 1, 1, "c.nmod_mat_randtril", "mat"], [73, 1, 1, "c.nmod_mat_randtril", "state"], [73, 1, 1, "c.nmod_mat_randtril", "unit"]], "nmod_mat_randtriu": [[73, 1, 1, "c.nmod_mat_randtriu", "mat"], [73, 1, 1, "c.nmod_mat_randtriu", "state"], [73, 1, 1, "c.nmod_mat_randtriu", "unit"]], "nmod_mat_rank": [[73, 1, 1, "c.nmod_mat_rank", "A"]], "nmod_mat_reduce_row": [[73, 1, 1, "c.nmod_mat_reduce_row", "A"], [73, 1, 1, "c.nmod_mat_reduce_row", "L"], [73, 1, 1, "c.nmod_mat_reduce_row", "P"], [73, 1, 1, "c.nmod_mat_reduce_row", "n"]], "nmod_mat_rref": [[73, 1, 1, "c.nmod_mat_rref", "A"]], "nmod_mat_scalar_addmul_ui": [[73, 1, 1, "c.nmod_mat_scalar_addmul_ui", "X"], [73, 1, 1, "c.nmod_mat_scalar_addmul_ui", "Y"], [73, 1, 1, "c.nmod_mat_scalar_addmul_ui", "b"], [73, 1, 1, "c.nmod_mat_scalar_addmul_ui", "dest"]], "nmod_mat_scalar_mul": [[73, 1, 1, "c.nmod_mat_scalar_mul", "A"], [73, 1, 1, "c.nmod_mat_scalar_mul", "B"], [73, 1, 1, "c.nmod_mat_scalar_mul", "c"]], "nmod_mat_scalar_mul_fmpz": [[73, 1, 1, "c.nmod_mat_scalar_mul_fmpz", "M"], [73, 1, 1, "c.nmod_mat_scalar_mul_fmpz", "c"], [73, 1, 1, "c.nmod_mat_scalar_mul_fmpz", "res"]], "nmod_mat_set": [[73, 1, 1, "c.nmod_mat_set", "mat"], [73, 1, 1, "c.nmod_mat_set", "src"]], "nmod_mat_set_entry": [[73, 1, 1, "c.nmod_mat_set_entry", "i"], [73, 1, 1, "c.nmod_mat_set_entry", "j"], [73, 1, 1, "c.nmod_mat_set_entry", "mat"], [73, 1, 1, "c.nmod_mat_set_entry", "x"]], "nmod_mat_similarity": [[73, 1, 1, "c.nmod_mat_similarity", "M"], [73, 1, 1, "c.nmod_mat_similarity", "d"], [73, 1, 1, "c.nmod_mat_similarity", "r"]], "nmod_mat_solve": [[73, 1, 1, "c.nmod_mat_solve", "A"], [73, 1, 1, "c.nmod_mat_solve", "B"], [73, 1, 1, "c.nmod_mat_solve", "X"]], "nmod_mat_solve_tril": [[73, 1, 1, "c.nmod_mat_solve_tril", "B"], [73, 1, 1, "c.nmod_mat_solve_tril", "L"], [73, 1, 1, "c.nmod_mat_solve_tril", "X"], [73, 1, 1, "c.nmod_mat_solve_tril", "unit"]], "nmod_mat_solve_tril_classical": [[73, 1, 1, "c.nmod_mat_solve_tril_classical", "B"], [73, 1, 1, "c.nmod_mat_solve_tril_classical", "L"], [73, 1, 1, "c.nmod_mat_solve_tril_classical", "X"], [73, 1, 1, "c.nmod_mat_solve_tril_classical", "unit"]], "nmod_mat_solve_tril_recursive": [[73, 1, 1, "c.nmod_mat_solve_tril_recursive", "B"], [73, 1, 1, "c.nmod_mat_solve_tril_recursive", "L"], [73, 1, 1, "c.nmod_mat_solve_tril_recursive", "X"], [73, 1, 1, "c.nmod_mat_solve_tril_recursive", "unit"]], "nmod_mat_solve_triu": [[73, 1, 1, "c.nmod_mat_solve_triu", "B"], [73, 1, 1, "c.nmod_mat_solve_triu", "U"], [73, 1, 1, "c.nmod_mat_solve_triu", "X"], [73, 1, 1, "c.nmod_mat_solve_triu", "unit"]], "nmod_mat_solve_triu_classical": [[73, 1, 1, "c.nmod_mat_solve_triu_classical", "B"], [73, 1, 1, "c.nmod_mat_solve_triu_classical", "U"], [73, 1, 1, "c.nmod_mat_solve_triu_classical", "X"], [73, 1, 1, "c.nmod_mat_solve_triu_classical", "unit"]], "nmod_mat_solve_triu_recursive": [[73, 1, 1, "c.nmod_mat_solve_triu_recursive", "B"], [73, 1, 1, "c.nmod_mat_solve_triu_recursive", "U"], [73, 1, 1, "c.nmod_mat_solve_triu_recursive", "X"], [73, 1, 1, "c.nmod_mat_solve_triu_recursive", "unit"]], "nmod_mat_solve_vec": [[73, 1, 1, "c.nmod_mat_solve_vec", "A"], [73, 1, 1, "c.nmod_mat_solve_vec", "b"], [73, 1, 1, "c.nmod_mat_solve_vec", "x"]], "nmod_mat_strong_echelon_form": [[73, 1, 1, "c.nmod_mat_strong_echelon_form", "A"]], "nmod_mat_sub": [[73, 1, 1, "c.nmod_mat_sub", "A"], [73, 1, 1, "c.nmod_mat_sub", "B"], [73, 1, 1, "c.nmod_mat_sub", "C"]], "nmod_mat_submul": [[73, 1, 1, "c.nmod_mat_submul", "A"], [73, 1, 1, "c.nmod_mat_submul", "B"], [73, 1, 1, "c.nmod_mat_submul", "C"], [73, 1, 1, "c.nmod_mat_submul", "D"]], "nmod_mat_swap": [[73, 1, 1, "c.nmod_mat_swap", "mat1"], [73, 1, 1, "c.nmod_mat_swap", "mat2"]], "nmod_mat_swap_cols": [[73, 1, 1, "c.nmod_mat_swap_cols", "mat"], [73, 1, 1, "c.nmod_mat_swap_cols", "perm"], [73, 1, 1, "c.nmod_mat_swap_cols", "r"], [73, 1, 1, "c.nmod_mat_swap_cols", "s"]], "nmod_mat_swap_entrywise": [[73, 1, 1, "c.nmod_mat_swap_entrywise", "mat1"], [73, 1, 1, "c.nmod_mat_swap_entrywise", "mat2"]], "nmod_mat_swap_rows": [[73, 1, 1, "c.nmod_mat_swap_rows", "mat"], [73, 1, 1, "c.nmod_mat_swap_rows", "perm"], [73, 1, 1, "c.nmod_mat_swap_rows", "r"], [73, 1, 1, "c.nmod_mat_swap_rows", "s"]], "nmod_mat_trace": [[73, 1, 1, "c.nmod_mat_trace", "mat"]], "nmod_mat_transpose": [[73, 1, 1, "c.nmod_mat_transpose", "A"], [73, 1, 1, "c.nmod_mat_transpose", "B"]], "nmod_mat_window_clear": [[73, 1, 1, "c.nmod_mat_window_clear", "window"]], "nmod_mat_window_init": [[73, 1, 1, "c.nmod_mat_window_init", "c1"], [73, 1, 1, "c.nmod_mat_window_init", "c2"], [73, 1, 1, "c.nmod_mat_window_init", "mat"], [73, 1, 1, "c.nmod_mat_window_init", "r1"], [73, 1, 1, "c.nmod_mat_window_init", "r2"], [73, 1, 1, "c.nmod_mat_window_init", "window"]], "nmod_mat_zero": [[73, 1, 1, "c.nmod_mat_zero", "mat"]], "nmod_mpoly_add": [[74, 1, 1, "c.nmod_mpoly_add", "A"], [74, 1, 1, "c.nmod_mpoly_add", "B"], [74, 1, 1, "c.nmod_mpoly_add", "C"], [74, 1, 1, "c.nmod_mpoly_add", "ctx"]], "nmod_mpoly_add_ui": [[74, 1, 1, "c.nmod_mpoly_add_ui", "A"], [74, 1, 1, "c.nmod_mpoly_add_ui", "B"], [74, 1, 1, "c.nmod_mpoly_add_ui", "c"], [74, 1, 1, "c.nmod_mpoly_add_ui", "ctx"]], "nmod_mpoly_clear": [[74, 1, 1, "c.nmod_mpoly_clear", "A"], [74, 1, 1, "c.nmod_mpoly_clear", "ctx"]], "nmod_mpoly_cmp": [[74, 1, 1, "c.nmod_mpoly_cmp", "A"], [74, 1, 1, "c.nmod_mpoly_cmp", "B"], [74, 1, 1, "c.nmod_mpoly_cmp", "ctx"]], "nmod_mpoly_combine_like_terms": [[74, 1, 1, "c.nmod_mpoly_combine_like_terms", "A"], [74, 1, 1, "c.nmod_mpoly_combine_like_terms", "ctx"]], "nmod_mpoly_compose_nmod_mpoly": [[74, 1, 1, "c.nmod_mpoly_compose_nmod_mpoly", "A"], [74, 1, 1, "c.nmod_mpoly_compose_nmod_mpoly", "B"], [74, 1, 1, "c.nmod_mpoly_compose_nmod_mpoly", "C"], [74, 1, 1, "c.nmod_mpoly_compose_nmod_mpoly", "ctxAC"], [74, 1, 1, "c.nmod_mpoly_compose_nmod_mpoly", "ctxB"]], "nmod_mpoly_compose_nmod_mpoly_gen": [[74, 1, 1, "c.nmod_mpoly_compose_nmod_mpoly_gen", "A"], [74, 1, 1, "c.nmod_mpoly_compose_nmod_mpoly_gen", "B"], [74, 1, 1, "c.nmod_mpoly_compose_nmod_mpoly_gen", "c"], [74, 1, 1, "c.nmod_mpoly_compose_nmod_mpoly_gen", "ctxAC"], [74, 1, 1, "c.nmod_mpoly_compose_nmod_mpoly_gen", "ctxB"]], "nmod_mpoly_compose_nmod_mpoly_geobucket": [[74, 1, 1, "c.nmod_mpoly_compose_nmod_mpoly_geobucket", "A"], [74, 1, 1, "c.nmod_mpoly_compose_nmod_mpoly_geobucket", "B"], [74, 1, 1, "c.nmod_mpoly_compose_nmod_mpoly_geobucket", "C"], [74, 1, 1, "c.nmod_mpoly_compose_nmod_mpoly_geobucket", "ctxAC"], [74, 1, 1, "c.nmod_mpoly_compose_nmod_mpoly_geobucket", "ctxB"]], "nmod_mpoly_compose_nmod_mpoly_horner": [[74, 1, 1, "c.nmod_mpoly_compose_nmod_mpoly_horner", "A"], [74, 1, 1, "c.nmod_mpoly_compose_nmod_mpoly_horner", "B"], [74, 1, 1, "c.nmod_mpoly_compose_nmod_mpoly_horner", "C"], [74, 1, 1, "c.nmod_mpoly_compose_nmod_mpoly_horner", "ctxAC"], [74, 1, 1, "c.nmod_mpoly_compose_nmod_mpoly_horner", "ctxB"]], "nmod_mpoly_compose_nmod_poly": [[74, 1, 1, "c.nmod_mpoly_compose_nmod_poly", "A"], [74, 1, 1, "c.nmod_mpoly_compose_nmod_poly", "B"], [74, 1, 1, "c.nmod_mpoly_compose_nmod_poly", "C"], [74, 1, 1, "c.nmod_mpoly_compose_nmod_poly", "ctx"]], "nmod_mpoly_content_vars": [[74, 1, 1, "c.nmod_mpoly_content_vars", "A"], [74, 1, 1, "c.nmod_mpoly_content_vars", "ctx"], [74, 1, 1, "c.nmod_mpoly_content_vars", "g"], [74, 1, 1, "c.nmod_mpoly_content_vars", "vars"], [74, 1, 1, "c.nmod_mpoly_content_vars", "vars_length"]], "nmod_mpoly_ctx_clear": [[74, 1, 1, "c.nmod_mpoly_ctx_clear", "ctx"]], "nmod_mpoly_ctx_init": [[74, 1, 1, "c.nmod_mpoly_ctx_init", "ctx"], [74, 1, 1, "c.nmod_mpoly_ctx_init", "n"], [74, 1, 1, "c.nmod_mpoly_ctx_init", "nvars"], [74, 1, 1, "c.nmod_mpoly_ctx_init", "ord"]], "nmod_mpoly_ctx_modulus": [[74, 1, 1, "c.nmod_mpoly_ctx_modulus", "ctx"]], "nmod_mpoly_ctx_nvars": [[74, 1, 1, "c.nmod_mpoly_ctx_nvars", "ctx"]], "nmod_mpoly_ctx_ord": [[74, 1, 1, "c.nmod_mpoly_ctx_ord", "ctx"]], "nmod_mpoly_degree_fmpz": [[74, 1, 1, "c.nmod_mpoly_degree_fmpz", "A"], [74, 1, 1, "c.nmod_mpoly_degree_fmpz", "ctx"], [74, 1, 1, "c.nmod_mpoly_degree_fmpz", "deg"], [74, 1, 1, "c.nmod_mpoly_degree_fmpz", "var"]], "nmod_mpoly_degree_si": [[74, 1, 1, "c.nmod_mpoly_degree_si", "A"], [74, 1, 1, "c.nmod_mpoly_degree_si", "ctx"], [74, 1, 1, "c.nmod_mpoly_degree_si", "var"]], "nmod_mpoly_degrees_fit_si": [[74, 1, 1, "c.nmod_mpoly_degrees_fit_si", "A"], [74, 1, 1, "c.nmod_mpoly_degrees_fit_si", "ctx"]], "nmod_mpoly_degrees_fmpz": [[74, 1, 1, "c.nmod_mpoly_degrees_fmpz", "A"], [74, 1, 1, "c.nmod_mpoly_degrees_fmpz", "ctx"], [74, 1, 1, "c.nmod_mpoly_degrees_fmpz", "degs"]], "nmod_mpoly_degrees_si": [[74, 1, 1, "c.nmod_mpoly_degrees_si", "A"], [74, 1, 1, "c.nmod_mpoly_degrees_si", "ctx"], [74, 1, 1, "c.nmod_mpoly_degrees_si", "degs"]], "nmod_mpoly_derivative": [[74, 1, 1, "c.nmod_mpoly_derivative", "A"], [74, 1, 1, "c.nmod_mpoly_derivative", "B"], [74, 1, 1, "c.nmod_mpoly_derivative", "ctx"], [74, 1, 1, "c.nmod_mpoly_derivative", "var"]], "nmod_mpoly_discriminant": [[74, 1, 1, "c.nmod_mpoly_discriminant", "A"], [74, 1, 1, "c.nmod_mpoly_discriminant", "D"], [74, 1, 1, "c.nmod_mpoly_discriminant", "ctx"], [74, 1, 1, "c.nmod_mpoly_discriminant", "var"]], "nmod_mpoly_div": [[74, 1, 1, "c.nmod_mpoly_div", "A"], [74, 1, 1, "c.nmod_mpoly_div", "B"], [74, 1, 1, "c.nmod_mpoly_div", "Q"], [74, 1, 1, "c.nmod_mpoly_div", "ctx"]], "nmod_mpoly_div_monagan_pearce": [[74, 1, 1, "c.nmod_mpoly_div_monagan_pearce", "ctx"], [74, 1, 1, "c.nmod_mpoly_div_monagan_pearce", "poly2"], [74, 1, 1, "c.nmod_mpoly_div_monagan_pearce", "poly3"], [74, 1, 1, "c.nmod_mpoly_div_monagan_pearce", "polyq"]], "nmod_mpoly_divides": [[74, 1, 1, "c.nmod_mpoly_divides", "A"], [74, 1, 1, "c.nmod_mpoly_divides", "B"], [74, 1, 1, "c.nmod_mpoly_divides", "Q"], [74, 1, 1, "c.nmod_mpoly_divides", "ctx"]], "nmod_mpoly_divides_dense": [[74, 1, 1, "c.nmod_mpoly_divides_dense", "A"], [74, 1, 1, "c.nmod_mpoly_divides_dense", "B"], [74, 1, 1, "c.nmod_mpoly_divides_dense", "Q"], [74, 1, 1, "c.nmod_mpoly_divides_dense", "ctx"]], "nmod_mpoly_divides_heap_threaded": [[74, 1, 1, "c.nmod_mpoly_divides_heap_threaded", "A"], [74, 1, 1, "c.nmod_mpoly_divides_heap_threaded", "B"], [74, 1, 1, "c.nmod_mpoly_divides_heap_threaded", "Q"], [74, 1, 1, "c.nmod_mpoly_divides_heap_threaded", "ctx"]], "nmod_mpoly_divides_monagan_pearce": [[74, 1, 1, "c.nmod_mpoly_divides_monagan_pearce", "A"], [74, 1, 1, "c.nmod_mpoly_divides_monagan_pearce", "B"], [74, 1, 1, "c.nmod_mpoly_divides_monagan_pearce", "Q"], [74, 1, 1, "c.nmod_mpoly_divides_monagan_pearce", "ctx"]], "nmod_mpoly_divrem": [[74, 1, 1, "c.nmod_mpoly_divrem", "A"], [74, 1, 1, "c.nmod_mpoly_divrem", "B"], [74, 1, 1, "c.nmod_mpoly_divrem", "Q"], [74, 1, 1, "c.nmod_mpoly_divrem", "R"], [74, 1, 1, "c.nmod_mpoly_divrem", "ctx"]], "nmod_mpoly_divrem_ideal": [[74, 1, 1, "c.nmod_mpoly_divrem_ideal", "A"], [74, 1, 1, "c.nmod_mpoly_divrem_ideal", "B"], [74, 1, 1, "c.nmod_mpoly_divrem_ideal", "Q"], [74, 1, 1, "c.nmod_mpoly_divrem_ideal", "R"], [74, 1, 1, "c.nmod_mpoly_divrem_ideal", "ctx"], [74, 1, 1, "c.nmod_mpoly_divrem_ideal", "len"]], "nmod_mpoly_divrem_ideal_monagan_pearce": [[74, 1, 1, "c.nmod_mpoly_divrem_ideal_monagan_pearce", "ctx"], [74, 1, 1, "c.nmod_mpoly_divrem_ideal_monagan_pearce", "len"], [74, 1, 1, "c.nmod_mpoly_divrem_ideal_monagan_pearce", "poly2"], [74, 1, 1, "c.nmod_mpoly_divrem_ideal_monagan_pearce", "poly3"], [74, 1, 1, "c.nmod_mpoly_divrem_ideal_monagan_pearce", "q"], [74, 1, 1, "c.nmod_mpoly_divrem_ideal_monagan_pearce", "r"]], "nmod_mpoly_divrem_monagan_pearce": [[74, 1, 1, "c.nmod_mpoly_divrem_monagan_pearce", "ctx"], [74, 1, 1, "c.nmod_mpoly_divrem_monagan_pearce", "poly2"], [74, 1, 1, "c.nmod_mpoly_divrem_monagan_pearce", "poly3"], [74, 1, 1, "c.nmod_mpoly_divrem_monagan_pearce", "q"], [74, 1, 1, "c.nmod_mpoly_divrem_monagan_pearce", "r"]], "nmod_mpoly_equal": [[74, 1, 1, "c.nmod_mpoly_equal", "A"], [74, 1, 1, "c.nmod_mpoly_equal", "B"], [74, 1, 1, "c.nmod_mpoly_equal", "ctx"]], "nmod_mpoly_equal_ui": [[74, 1, 1, "c.nmod_mpoly_equal_ui", "A"], [74, 1, 1, "c.nmod_mpoly_equal_ui", "c"], [74, 1, 1, "c.nmod_mpoly_equal_ui", "ctx"]], "nmod_mpoly_evaluate_all_ui": [[74, 1, 1, "c.nmod_mpoly_evaluate_all_ui", "A"], [74, 1, 1, "c.nmod_mpoly_evaluate_all_ui", "ctx"], [74, 1, 1, "c.nmod_mpoly_evaluate_all_ui", "vals"]], "nmod_mpoly_evaluate_one_ui": [[74, 1, 1, "c.nmod_mpoly_evaluate_one_ui", "A"], [74, 1, 1, "c.nmod_mpoly_evaluate_one_ui", "B"], [74, 1, 1, "c.nmod_mpoly_evaluate_one_ui", "ctx"], [74, 1, 1, "c.nmod_mpoly_evaluate_one_ui", "val"], [74, 1, 1, "c.nmod_mpoly_evaluate_one_ui", "var"]], "nmod_mpoly_factor": [[75, 1, 1, "c.nmod_mpoly_factor", "A"], [75, 1, 1, "c.nmod_mpoly_factor", "ctx"], [75, 1, 1, "c.nmod_mpoly_factor", "f"]], "nmod_mpoly_factor_clear": [[75, 1, 1, "c.nmod_mpoly_factor_clear", "ctx"], [75, 1, 1, "c.nmod_mpoly_factor_clear", "f"]], "nmod_mpoly_factor_get_base": [[75, 1, 1, "c.nmod_mpoly_factor_get_base", "ctx"], [75, 1, 1, "c.nmod_mpoly_factor_get_base", "f"], [75, 1, 1, "c.nmod_mpoly_factor_get_base", "i"], [75, 1, 1, "c.nmod_mpoly_factor_get_base", "p"]], "nmod_mpoly_factor_get_constant_ui": [[75, 1, 1, "c.nmod_mpoly_factor_get_constant_ui", "ctx"], [75, 1, 1, "c.nmod_mpoly_factor_get_constant_ui", "f"]], "nmod_mpoly_factor_get_exp_si": [[75, 1, 1, "c.nmod_mpoly_factor_get_exp_si", "ctx"], [75, 1, 1, "c.nmod_mpoly_factor_get_exp_si", "f"], [75, 1, 1, "c.nmod_mpoly_factor_get_exp_si", "i"]], "nmod_mpoly_factor_init": [[75, 1, 1, "c.nmod_mpoly_factor_init", "ctx"], [75, 1, 1, "c.nmod_mpoly_factor_init", "f"]], "nmod_mpoly_factor_length": [[75, 1, 1, "c.nmod_mpoly_factor_length", "ctx"], [75, 1, 1, "c.nmod_mpoly_factor_length", "f"]], "nmod_mpoly_factor_sort": [[75, 1, 1, "c.nmod_mpoly_factor_sort", "ctx"], [75, 1, 1, "c.nmod_mpoly_factor_sort", "f"]], "nmod_mpoly_factor_squarefree": [[75, 1, 1, "c.nmod_mpoly_factor_squarefree", "A"], [75, 1, 1, "c.nmod_mpoly_factor_squarefree", "ctx"], [75, 1, 1, "c.nmod_mpoly_factor_squarefree", "f"]], "nmod_mpoly_factor_swap": [[75, 1, 1, "c.nmod_mpoly_factor_swap", "ctx"], [75, 1, 1, "c.nmod_mpoly_factor_swap", "f"], [75, 1, 1, "c.nmod_mpoly_factor_swap", "g"]], "nmod_mpoly_factor_swap_base": [[75, 1, 1, "c.nmod_mpoly_factor_swap_base", "ctx"], [75, 1, 1, "c.nmod_mpoly_factor_swap_base", "f"], [75, 1, 1, "c.nmod_mpoly_factor_swap_base", "i"], [75, 1, 1, "c.nmod_mpoly_factor_swap_base", "p"]], "nmod_mpoly_fit_length": [[74, 1, 1, "c.nmod_mpoly_fit_length", "A"], [74, 1, 1, "c.nmod_mpoly_fit_length", "ctx"], [74, 1, 1, "c.nmod_mpoly_fit_length", "len"]], "nmod_mpoly_fprint_pretty": [[74, 1, 1, "c.nmod_mpoly_fprint_pretty", "A"], [74, 1, 1, "c.nmod_mpoly_fprint_pretty", "ctx"], [74, 1, 1, "c.nmod_mpoly_fprint_pretty", "file"], [74, 1, 1, "c.nmod_mpoly_fprint_pretty", "x"]], "nmod_mpoly_from_univar": [[74, 1, 1, "c.nmod_mpoly_from_univar", "A"], [74, 1, 1, "c.nmod_mpoly_from_univar", "B"], [74, 1, 1, "c.nmod_mpoly_from_univar", "ctx"], [74, 1, 1, "c.nmod_mpoly_from_univar", "var"]], "nmod_mpoly_gcd": [[74, 1, 1, "c.nmod_mpoly_gcd", "A"], [74, 1, 1, "c.nmod_mpoly_gcd", "B"], [74, 1, 1, "c.nmod_mpoly_gcd", "G"], [74, 1, 1, "c.nmod_mpoly_gcd", "ctx"]], "nmod_mpoly_gcd_brown": [[74, 1, 1, "c.nmod_mpoly_gcd_brown", "A"], [74, 1, 1, "c.nmod_mpoly_gcd_brown", "B"], [74, 1, 1, "c.nmod_mpoly_gcd_brown", "G"], [74, 1, 1, "c.nmod_mpoly_gcd_brown", "ctx"]], "nmod_mpoly_gcd_cofactors": [[74, 1, 1, "c.nmod_mpoly_gcd_cofactors", "A"], [74, 1, 1, "c.nmod_mpoly_gcd_cofactors", "Abar"], [74, 1, 1, "c.nmod_mpoly_gcd_cofactors", "B"], [74, 1, 1, "c.nmod_mpoly_gcd_cofactors", "Bbar"], [74, 1, 1, "c.nmod_mpoly_gcd_cofactors", "G"], [74, 1, 1, "c.nmod_mpoly_gcd_cofactors", "ctx"]], "nmod_mpoly_gcd_hensel": [[74, 1, 1, "c.nmod_mpoly_gcd_hensel", "A"], [74, 1, 1, "c.nmod_mpoly_gcd_hensel", "B"], [74, 1, 1, "c.nmod_mpoly_gcd_hensel", "G"], [74, 1, 1, "c.nmod_mpoly_gcd_hensel", "ctx"]], "nmod_mpoly_gcd_zippel": [[74, 1, 1, "c.nmod_mpoly_gcd_zippel", "A"], [74, 1, 1, "c.nmod_mpoly_gcd_zippel", "B"], [74, 1, 1, "c.nmod_mpoly_gcd_zippel", "G"], [74, 1, 1, "c.nmod_mpoly_gcd_zippel", "ctx"]], "nmod_mpoly_gen": [[74, 1, 1, "c.nmod_mpoly_gen", "A"], [74, 1, 1, "c.nmod_mpoly_gen", "ctx"], [74, 1, 1, "c.nmod_mpoly_gen", "var"]], "nmod_mpoly_get_coeff_ui_fmpz": [[74, 1, 1, "c.nmod_mpoly_get_coeff_ui_fmpz", "A"], [74, 1, 1, "c.nmod_mpoly_get_coeff_ui_fmpz", "ctx"], [74, 1, 1, "c.nmod_mpoly_get_coeff_ui_fmpz", "exp"]], "nmod_mpoly_get_coeff_ui_monomial": [[74, 1, 1, "c.nmod_mpoly_get_coeff_ui_monomial", "A"], [74, 1, 1, "c.nmod_mpoly_get_coeff_ui_monomial", "M"], [74, 1, 1, "c.nmod_mpoly_get_coeff_ui_monomial", "ctx"]], "nmod_mpoly_get_coeff_ui_ui": [[74, 1, 1, "c.nmod_mpoly_get_coeff_ui_ui", "A"], [74, 1, 1, "c.nmod_mpoly_get_coeff_ui_ui", "ctx"], [74, 1, 1, "c.nmod_mpoly_get_coeff_ui_ui", "exp"]], "nmod_mpoly_get_coeff_vars_ui": [[74, 1, 1, "c.nmod_mpoly_get_coeff_vars_ui", "A"], [74, 1, 1, "c.nmod_mpoly_get_coeff_vars_ui", "C"], [74, 1, 1, "c.nmod_mpoly_get_coeff_vars_ui", "ctx"], [74, 1, 1, "c.nmod_mpoly_get_coeff_vars_ui", "exps"], [74, 1, 1, "c.nmod_mpoly_get_coeff_vars_ui", "length"], [74, 1, 1, "c.nmod_mpoly_get_coeff_vars_ui", "vars"]], "nmod_mpoly_get_str_pretty": [[74, 1, 1, "c.nmod_mpoly_get_str_pretty", "A"], [74, 1, 1, "c.nmod_mpoly_get_str_pretty", "ctx"], [74, 1, 1, "c.nmod_mpoly_get_str_pretty", "x"]], "nmod_mpoly_get_term": [[74, 1, 1, "c.nmod_mpoly_get_term", "A"], [74, 1, 1, "c.nmod_mpoly_get_term", "M"], [74, 1, 1, "c.nmod_mpoly_get_term", "ctx"], [74, 1, 1, "c.nmod_mpoly_get_term", "i"]], "nmod_mpoly_get_term_coeff_ui": [[74, 1, 1, "c.nmod_mpoly_get_term_coeff_ui", "A"], [74, 1, 1, "c.nmod_mpoly_get_term_coeff_ui", "ctx"], [74, 1, 1, "c.nmod_mpoly_get_term_coeff_ui", "i"]], "nmod_mpoly_get_term_exp_fmpz": [[74, 1, 1, "c.nmod_mpoly_get_term_exp_fmpz", "A"], [74, 1, 1, "c.nmod_mpoly_get_term_exp_fmpz", "ctx"], [74, 1, 1, "c.nmod_mpoly_get_term_exp_fmpz", "exp"], [74, 1, 1, "c.nmod_mpoly_get_term_exp_fmpz", "i"]], "nmod_mpoly_get_term_exp_si": [[74, 1, 1, "c.nmod_mpoly_get_term_exp_si", "A"], [74, 1, 1, "c.nmod_mpoly_get_term_exp_si", "ctx"], [74, 1, 1, "c.nmod_mpoly_get_term_exp_si", "exp"], [74, 1, 1, "c.nmod_mpoly_get_term_exp_si", "i"]], "nmod_mpoly_get_term_exp_ui": [[74, 1, 1, "c.nmod_mpoly_get_term_exp_ui", "A"], [74, 1, 1, "c.nmod_mpoly_get_term_exp_ui", "ctx"], [74, 1, 1, "c.nmod_mpoly_get_term_exp_ui", "exp"], [74, 1, 1, "c.nmod_mpoly_get_term_exp_ui", "i"]], "nmod_mpoly_get_term_monomial": [[74, 1, 1, "c.nmod_mpoly_get_term_monomial", "A"], [74, 1, 1, "c.nmod_mpoly_get_term_monomial", "M"], [74, 1, 1, "c.nmod_mpoly_get_term_monomial", "ctx"], [74, 1, 1, "c.nmod_mpoly_get_term_monomial", "i"]], "nmod_mpoly_get_term_var_exp_si": [[74, 1, 1, "c.nmod_mpoly_get_term_var_exp_si", "A"], [74, 1, 1, "c.nmod_mpoly_get_term_var_exp_si", "ctx"], [74, 1, 1, "c.nmod_mpoly_get_term_var_exp_si", "i"], [74, 1, 1, "c.nmod_mpoly_get_term_var_exp_si", "var"]], "nmod_mpoly_get_term_var_exp_ui": [[74, 1, 1, "c.nmod_mpoly_get_term_var_exp_ui", "A"], [74, 1, 1, "c.nmod_mpoly_get_term_var_exp_ui", "ctx"], [74, 1, 1, "c.nmod_mpoly_get_term_var_exp_ui", "i"], [74, 1, 1, "c.nmod_mpoly_get_term_var_exp_ui", "var"]], "nmod_mpoly_get_ui": [[74, 1, 1, "c.nmod_mpoly_get_ui", "A"], [74, 1, 1, "c.nmod_mpoly_get_ui", "ctx"]], "nmod_mpoly_init": [[74, 1, 1, "c.nmod_mpoly_init", "A"], [74, 1, 1, "c.nmod_mpoly_init", "ctx"]], "nmod_mpoly_init2": [[74, 1, 1, "c.nmod_mpoly_init2", "A"], [74, 1, 1, "c.nmod_mpoly_init2", "alloc"], [74, 1, 1, "c.nmod_mpoly_init2", "ctx"]], "nmod_mpoly_init3": [[74, 1, 1, "c.nmod_mpoly_init3", "A"], [74, 1, 1, "c.nmod_mpoly_init3", "alloc"], [74, 1, 1, "c.nmod_mpoly_init3", "bits"], [74, 1, 1, "c.nmod_mpoly_init3", "ctx"]], "nmod_mpoly_is_canonical": [[74, 1, 1, "c.nmod_mpoly_is_canonical", "A"], [74, 1, 1, "c.nmod_mpoly_is_canonical", "ctx"]], "nmod_mpoly_is_gen": [[74, 1, 1, "c.nmod_mpoly_is_gen", "A"], [74, 1, 1, "c.nmod_mpoly_is_gen", "ctx"], [74, 1, 1, "c.nmod_mpoly_is_gen", "var"]], "nmod_mpoly_is_one": [[74, 1, 1, "c.nmod_mpoly_is_one", "A"], [74, 1, 1, "c.nmod_mpoly_is_one", "ctx"]], "nmod_mpoly_is_square": [[74, 1, 1, "c.nmod_mpoly_is_square", "A"], [74, 1, 1, "c.nmod_mpoly_is_square", "ctx"]], "nmod_mpoly_is_ui": [[74, 1, 1, "c.nmod_mpoly_is_ui", "A"], [74, 1, 1, "c.nmod_mpoly_is_ui", "ctx"]], "nmod_mpoly_is_zero": [[74, 1, 1, "c.nmod_mpoly_is_zero", "A"], [74, 1, 1, "c.nmod_mpoly_is_zero", "ctx"]], "nmod_mpoly_length": [[74, 1, 1, "c.nmod_mpoly_length", "A"], [74, 1, 1, "c.nmod_mpoly_length", "ctx"]], "nmod_mpoly_make_monic": [[74, 1, 1, "c.nmod_mpoly_make_monic", "A"], [74, 1, 1, "c.nmod_mpoly_make_monic", "B"], [74, 1, 1, "c.nmod_mpoly_make_monic", "ctx"]], "nmod_mpoly_mul": [[74, 1, 1, "c.nmod_mpoly_mul", "A"], [74, 1, 1, "c.nmod_mpoly_mul", "B"], [74, 1, 1, "c.nmod_mpoly_mul", "C"], [74, 1, 1, "c.nmod_mpoly_mul", "ctx"]], "nmod_mpoly_mul_array": [[74, 1, 1, "c.nmod_mpoly_mul_array", "A"], [74, 1, 1, "c.nmod_mpoly_mul_array", "B"], [74, 1, 1, "c.nmod_mpoly_mul_array", "C"], [74, 1, 1, "c.nmod_mpoly_mul_array", "ctx"]], "nmod_mpoly_mul_array_threaded": [[74, 1, 1, "c.nmod_mpoly_mul_array_threaded", "A"], [74, 1, 1, "c.nmod_mpoly_mul_array_threaded", "B"], [74, 1, 1, "c.nmod_mpoly_mul_array_threaded", "C"], [74, 1, 1, "c.nmod_mpoly_mul_array_threaded", "ctx"]], "nmod_mpoly_mul_dense": [[74, 1, 1, "c.nmod_mpoly_mul_dense", "A"], [74, 1, 1, "c.nmod_mpoly_mul_dense", "B"], [74, 1, 1, "c.nmod_mpoly_mul_dense", "C"], [74, 1, 1, "c.nmod_mpoly_mul_dense", "ctx"]], "nmod_mpoly_mul_heap_threaded": [[74, 1, 1, "c.nmod_mpoly_mul_heap_threaded", "A"], [74, 1, 1, "c.nmod_mpoly_mul_heap_threaded", "B"], [74, 1, 1, "c.nmod_mpoly_mul_heap_threaded", "C"], [74, 1, 1, "c.nmod_mpoly_mul_heap_threaded", "ctx"]], "nmod_mpoly_mul_johnson": [[74, 1, 1, "c.nmod_mpoly_mul_johnson", "A"], [74, 1, 1, "c.nmod_mpoly_mul_johnson", "B"], [74, 1, 1, "c.nmod_mpoly_mul_johnson", "C"], [74, 1, 1, "c.nmod_mpoly_mul_johnson", "ctx"]], "nmod_mpoly_neg": [[74, 1, 1, "c.nmod_mpoly_neg", "A"], [74, 1, 1, "c.nmod_mpoly_neg", "B"], [74, 1, 1, "c.nmod_mpoly_neg", "ctx"]], "nmod_mpoly_one": [[74, 1, 1, "c.nmod_mpoly_one", "A"], [74, 1, 1, "c.nmod_mpoly_one", "ctx"]], "nmod_mpoly_pow_fmpz": [[74, 1, 1, "c.nmod_mpoly_pow_fmpz", "A"], [74, 1, 1, "c.nmod_mpoly_pow_fmpz", "B"], [74, 1, 1, "c.nmod_mpoly_pow_fmpz", "ctx"], [74, 1, 1, "c.nmod_mpoly_pow_fmpz", "k"]], "nmod_mpoly_pow_rmul": [[74, 1, 1, "c.nmod_mpoly_pow_rmul", "A"], [74, 1, 1, "c.nmod_mpoly_pow_rmul", "B"], [74, 1, 1, "c.nmod_mpoly_pow_rmul", "ctx"], [74, 1, 1, "c.nmod_mpoly_pow_rmul", "k"]], "nmod_mpoly_pow_ui": [[74, 1, 1, "c.nmod_mpoly_pow_ui", "A"], [74, 1, 1, "c.nmod_mpoly_pow_ui", "B"], [74, 1, 1, "c.nmod_mpoly_pow_ui", "ctx"], [74, 1, 1, "c.nmod_mpoly_pow_ui", "k"]], "nmod_mpoly_print_pretty": [[74, 1, 1, "c.nmod_mpoly_print_pretty", "A"], [74, 1, 1, "c.nmod_mpoly_print_pretty", "ctx"], [74, 1, 1, "c.nmod_mpoly_print_pretty", "x"]], "nmod_mpoly_push_term_ui_fmpz": [[74, 1, 1, "c.nmod_mpoly_push_term_ui_fmpz", "A"], [74, 1, 1, "c.nmod_mpoly_push_term_ui_fmpz", "c"], [74, 1, 1, "c.nmod_mpoly_push_term_ui_fmpz", "ctx"], [74, 1, 1, "c.nmod_mpoly_push_term_ui_fmpz", "exp"]], "nmod_mpoly_push_term_ui_ui": [[74, 1, 1, "c.nmod_mpoly_push_term_ui_ui", "A"], [74, 1, 1, "c.nmod_mpoly_push_term_ui_ui", "c"], [74, 1, 1, "c.nmod_mpoly_push_term_ui_ui", "ctx"], [74, 1, 1, "c.nmod_mpoly_push_term_ui_ui", "exp"]], "nmod_mpoly_quadratic_root": [[74, 1, 1, "c.nmod_mpoly_quadratic_root", "A"], [74, 1, 1, "c.nmod_mpoly_quadratic_root", "B"], [74, 1, 1, "c.nmod_mpoly_quadratic_root", "Q"], [74, 1, 1, "c.nmod_mpoly_quadratic_root", "ctx"]], "nmod_mpoly_randtest_bits": [[74, 1, 1, "c.nmod_mpoly_randtest_bits", "A"], [74, 1, 1, "c.nmod_mpoly_randtest_bits", "ctx"], [74, 1, 1, "c.nmod_mpoly_randtest_bits", "exp_bits"], [74, 1, 1, "c.nmod_mpoly_randtest_bits", "length"], [74, 1, 1, "c.nmod_mpoly_randtest_bits", "state"]], "nmod_mpoly_randtest_bound": [[74, 1, 1, "c.nmod_mpoly_randtest_bound", "A"], [74, 1, 1, "c.nmod_mpoly_randtest_bound", "ctx"], [74, 1, 1, "c.nmod_mpoly_randtest_bound", "exp_bound"], [74, 1, 1, "c.nmod_mpoly_randtest_bound", "length"], [74, 1, 1, "c.nmod_mpoly_randtest_bound", "state"]], "nmod_mpoly_randtest_bounds": [[74, 1, 1, "c.nmod_mpoly_randtest_bounds", "A"], [74, 1, 1, "c.nmod_mpoly_randtest_bounds", "ctx"], [74, 1, 1, "c.nmod_mpoly_randtest_bounds", "exp_bounds"], [74, 1, 1, "c.nmod_mpoly_randtest_bounds", "length"], [74, 1, 1, "c.nmod_mpoly_randtest_bounds", "state"]], "nmod_mpoly_realloc": [[74, 1, 1, "c.nmod_mpoly_realloc", "A"], [74, 1, 1, "c.nmod_mpoly_realloc", "alloc"], [74, 1, 1, "c.nmod_mpoly_realloc", "ctx"]], "nmod_mpoly_resize": [[74, 1, 1, "c.nmod_mpoly_resize", "A"], [74, 1, 1, "c.nmod_mpoly_resize", "ctx"], [74, 1, 1, "c.nmod_mpoly_resize", "new_length"]], "nmod_mpoly_resultant": [[74, 1, 1, "c.nmod_mpoly_resultant", "A"], [74, 1, 1, "c.nmod_mpoly_resultant", "B"], [74, 1, 1, "c.nmod_mpoly_resultant", "R"], [74, 1, 1, "c.nmod_mpoly_resultant", "ctx"], [74, 1, 1, "c.nmod_mpoly_resultant", "var"]], "nmod_mpoly_reverse": [[74, 1, 1, "c.nmod_mpoly_reverse", "A"], [74, 1, 1, "c.nmod_mpoly_reverse", "B"], [74, 1, 1, "c.nmod_mpoly_reverse", "ctx"]], "nmod_mpoly_scalar_mul_ui": [[74, 1, 1, "c.nmod_mpoly_scalar_mul_ui", "A"], [74, 1, 1, "c.nmod_mpoly_scalar_mul_ui", "B"], [74, 1, 1, "c.nmod_mpoly_scalar_mul_ui", "c"], [74, 1, 1, "c.nmod_mpoly_scalar_mul_ui", "ctx"]], "nmod_mpoly_set": [[74, 1, 1, "c.nmod_mpoly_set", "A"], [74, 1, 1, "c.nmod_mpoly_set", "B"], [74, 1, 1, "c.nmod_mpoly_set", "ctx"]], "nmod_mpoly_set_coeff_ui_fmpz": [[74, 1, 1, "c.nmod_mpoly_set_coeff_ui_fmpz", "A"], [74, 1, 1, "c.nmod_mpoly_set_coeff_ui_fmpz", "c"], [74, 1, 1, "c.nmod_mpoly_set_coeff_ui_fmpz", "ctx"], [74, 1, 1, "c.nmod_mpoly_set_coeff_ui_fmpz", "exp"]], "nmod_mpoly_set_coeff_ui_monomial": [[74, 1, 1, "c.nmod_mpoly_set_coeff_ui_monomial", "A"], [74, 1, 1, "c.nmod_mpoly_set_coeff_ui_monomial", "M"], [74, 1, 1, "c.nmod_mpoly_set_coeff_ui_monomial", "c"], [74, 1, 1, "c.nmod_mpoly_set_coeff_ui_monomial", "ctx"]], "nmod_mpoly_set_coeff_ui_ui": [[74, 1, 1, "c.nmod_mpoly_set_coeff_ui_ui", "A"], [74, 1, 1, "c.nmod_mpoly_set_coeff_ui_ui", "c"], [74, 1, 1, "c.nmod_mpoly_set_coeff_ui_ui", "ctx"], [74, 1, 1, "c.nmod_mpoly_set_coeff_ui_ui", "exp"]], "nmod_mpoly_set_str_pretty": [[74, 1, 1, "c.nmod_mpoly_set_str_pretty", "A"], [74, 1, 1, "c.nmod_mpoly_set_str_pretty", "ctx"], [74, 1, 1, "c.nmod_mpoly_set_str_pretty", "str"], [74, 1, 1, "c.nmod_mpoly_set_str_pretty", "x"]], "nmod_mpoly_set_term_coeff_ui": [[74, 1, 1, "c.nmod_mpoly_set_term_coeff_ui", "A"], [74, 1, 1, "c.nmod_mpoly_set_term_coeff_ui", "c"], [74, 1, 1, "c.nmod_mpoly_set_term_coeff_ui", "ctx"], [74, 1, 1, "c.nmod_mpoly_set_term_coeff_ui", "i"]], "nmod_mpoly_set_term_exp_fmpz": [[74, 1, 1, "c.nmod_mpoly_set_term_exp_fmpz", "A"], [74, 1, 1, "c.nmod_mpoly_set_term_exp_fmpz", "ctx"], [74, 1, 1, "c.nmod_mpoly_set_term_exp_fmpz", "exp"], [74, 1, 1, "c.nmod_mpoly_set_term_exp_fmpz", "i"]], "nmod_mpoly_set_term_exp_ui": [[74, 1, 1, "c.nmod_mpoly_set_term_exp_ui", "A"], [74, 1, 1, "c.nmod_mpoly_set_term_exp_ui", "ctx"], [74, 1, 1, "c.nmod_mpoly_set_term_exp_ui", "exp"], [74, 1, 1, "c.nmod_mpoly_set_term_exp_ui", "i"]], "nmod_mpoly_set_ui": [[74, 1, 1, "c.nmod_mpoly_set_ui", "A"], [74, 1, 1, "c.nmod_mpoly_set_ui", "c"], [74, 1, 1, "c.nmod_mpoly_set_ui", "ctx"]], "nmod_mpoly_sort_terms": [[74, 1, 1, "c.nmod_mpoly_sort_terms", "A"], [74, 1, 1, "c.nmod_mpoly_sort_terms", "ctx"]], "nmod_mpoly_sqrt": [[74, 1, 1, "c.nmod_mpoly_sqrt", "A"], [74, 1, 1, "c.nmod_mpoly_sqrt", "Q"], [74, 1, 1, "c.nmod_mpoly_sqrt", "ctx"]], "nmod_mpoly_sub": [[74, 1, 1, "c.nmod_mpoly_sub", "A"], [74, 1, 1, "c.nmod_mpoly_sub", "B"], [74, 1, 1, "c.nmod_mpoly_sub", "C"], [74, 1, 1, "c.nmod_mpoly_sub", "ctx"]], "nmod_mpoly_sub_ui": [[74, 1, 1, "c.nmod_mpoly_sub_ui", "A"], [74, 1, 1, "c.nmod_mpoly_sub_ui", "B"], [74, 1, 1, "c.nmod_mpoly_sub_ui", "c"], [74, 1, 1, "c.nmod_mpoly_sub_ui", "ctx"]], "nmod_mpoly_swap": [[74, 1, 1, "c.nmod_mpoly_swap", "A"], [74, 1, 1, "c.nmod_mpoly_swap", "B"], [74, 1, 1, "c.nmod_mpoly_swap", "ctx"]], "nmod_mpoly_term_coeff_ref": [[74, 1, 1, "c.nmod_mpoly_term_coeff_ref", "A"], [74, 1, 1, "c.nmod_mpoly_term_coeff_ref", "ctx"], [74, 1, 1, "c.nmod_mpoly_term_coeff_ref", "i"]], "nmod_mpoly_term_content": [[74, 1, 1, "c.nmod_mpoly_term_content", "A"], [74, 1, 1, "c.nmod_mpoly_term_content", "M"], [74, 1, 1, "c.nmod_mpoly_term_content", "ctx"]], "nmod_mpoly_term_exp_fits_si": [[74, 1, 1, "c.nmod_mpoly_term_exp_fits_si", "A"], [74, 1, 1, "c.nmod_mpoly_term_exp_fits_si", "ctx"], [74, 1, 1, "c.nmod_mpoly_term_exp_fits_si", "i"]], "nmod_mpoly_term_exp_fits_ui": [[74, 1, 1, "c.nmod_mpoly_term_exp_fits_ui", "A"], [74, 1, 1, "c.nmod_mpoly_term_exp_fits_ui", "ctx"], [74, 1, 1, "c.nmod_mpoly_term_exp_fits_ui", "i"]], "nmod_mpoly_to_univar": [[74, 1, 1, "c.nmod_mpoly_to_univar", "A"], [74, 1, 1, "c.nmod_mpoly_to_univar", "B"], [74, 1, 1, "c.nmod_mpoly_to_univar", "ctx"], [74, 1, 1, "c.nmod_mpoly_to_univar", "var"]], "nmod_mpoly_total_degree_fits_si": [[74, 1, 1, "c.nmod_mpoly_total_degree_fits_si", "A"], [74, 1, 1, "c.nmod_mpoly_total_degree_fits_si", "ctx"]], "nmod_mpoly_total_degree_fmpz": [[74, 1, 1, "c.nmod_mpoly_total_degree_fmpz", "A"], [74, 1, 1, "c.nmod_mpoly_total_degree_fmpz", "ctx"], [74, 1, 1, "c.nmod_mpoly_total_degree_fmpz", "tdeg"]], "nmod_mpoly_total_degree_si": [[74, 1, 1, "c.nmod_mpoly_total_degree_si", "A"], [74, 1, 1, "c.nmod_mpoly_total_degree_si", "ctx"]], "nmod_mpoly_univar_clear": [[74, 1, 1, "c.nmod_mpoly_univar_clear", "A"], [74, 1, 1, "c.nmod_mpoly_univar_clear", "ctx"]], "nmod_mpoly_univar_degree_fits_si": [[74, 1, 1, "c.nmod_mpoly_univar_degree_fits_si", "A"], [74, 1, 1, "c.nmod_mpoly_univar_degree_fits_si", "ctx"]], "nmod_mpoly_univar_get_term_coeff": [[74, 1, 1, "c.nmod_mpoly_univar_get_term_coeff", "A"], [74, 1, 1, "c.nmod_mpoly_univar_get_term_coeff", "c"], [74, 1, 1, "c.nmod_mpoly_univar_get_term_coeff", "ctx"], [74, 1, 1, "c.nmod_mpoly_univar_get_term_coeff", "i"]], "nmod_mpoly_univar_get_term_exp_si": [[74, 1, 1, "c.nmod_mpoly_univar_get_term_exp_si", "A"], [74, 1, 1, "c.nmod_mpoly_univar_get_term_exp_si", "ctx"], [74, 1, 1, "c.nmod_mpoly_univar_get_term_exp_si", "i"]], "nmod_mpoly_univar_init": [[74, 1, 1, "c.nmod_mpoly_univar_init", "A"], [74, 1, 1, "c.nmod_mpoly_univar_init", "ctx"]], "nmod_mpoly_univar_length": [[74, 1, 1, "c.nmod_mpoly_univar_length", "A"], [74, 1, 1, "c.nmod_mpoly_univar_length", "ctx"]], "nmod_mpoly_univar_swap": [[74, 1, 1, "c.nmod_mpoly_univar_swap", "A"], [74, 1, 1, "c.nmod_mpoly_univar_swap", "B"], [74, 1, 1, "c.nmod_mpoly_univar_swap", "ctx"]], "nmod_mpoly_univar_swap_term_coeff": [[74, 1, 1, "c.nmod_mpoly_univar_swap_term_coeff", "A"], [74, 1, 1, "c.nmod_mpoly_univar_swap_term_coeff", "c"], [74, 1, 1, "c.nmod_mpoly_univar_swap_term_coeff", "ctx"], [74, 1, 1, "c.nmod_mpoly_univar_swap_term_coeff", "i"]], "nmod_mpoly_used_vars": [[74, 1, 1, "c.nmod_mpoly_used_vars", "A"], [74, 1, 1, "c.nmod_mpoly_used_vars", "ctx"], [74, 1, 1, "c.nmod_mpoly_used_vars", "used"]], "nmod_mpoly_zero": [[74, 1, 1, "c.nmod_mpoly_zero", "A"], [74, 1, 1, "c.nmod_mpoly_zero", "ctx"]], "nmod_mul": [[72, 1, 1, "c.nmod_mul", "a"], [72, 1, 1, "c.nmod_mul", "b"], [72, 1, 1, "c.nmod_mul", "mod"]], "nmod_neg": [[72, 1, 1, "c.nmod_neg", "a"], [72, 1, 1, "c.nmod_neg", "mod"]], "nmod_poly_add": [[76, 1, 1, "c.nmod_poly_add", "poly1"], [76, 1, 1, "c.nmod_poly_add", "poly2"], [76, 1, 1, "c.nmod_poly_add", "res"]], "nmod_poly_add_series": [[76, 1, 1, "c.nmod_poly_add_series", "n"], [76, 1, 1, "c.nmod_poly_add_series", "poly1"], [76, 1, 1, "c.nmod_poly_add_series", "poly2"], [76, 1, 1, "c.nmod_poly_add_series", "res"]], "nmod_poly_asin_series": [[76, 1, 1, "c.nmod_poly_asin_series", "g"], [76, 1, 1, "c.nmod_poly_asin_series", "h"], [76, 1, 1, "c.nmod_poly_asin_series", "n"]], "nmod_poly_asinh_series": [[76, 1, 1, "c.nmod_poly_asinh_series", "g"], [76, 1, 1, "c.nmod_poly_asinh_series", "h"], [76, 1, 1, "c.nmod_poly_asinh_series", "n"]], "nmod_poly_atan_series": [[76, 1, 1, "c.nmod_poly_atan_series", "g"], [76, 1, 1, "c.nmod_poly_atan_series", "h"], [76, 1, 1, "c.nmod_poly_atan_series", "n"]], "nmod_poly_atanh_series": [[76, 1, 1, "c.nmod_poly_atanh_series", "g"], [76, 1, 1, "c.nmod_poly_atanh_series", "h"], [76, 1, 1, "c.nmod_poly_atanh_series", "n"]], "nmod_poly_bit_pack": [[76, 1, 1, "c.nmod_poly_bit_pack", "bit_size"], [76, 1, 1, "c.nmod_poly_bit_pack", "f"], [76, 1, 1, "c.nmod_poly_bit_pack", "poly"]], "nmod_poly_bit_unpack": [[76, 1, 1, "c.nmod_poly_bit_unpack", "bit_size"], [76, 1, 1, "c.nmod_poly_bit_unpack", "f"], [76, 1, 1, "c.nmod_poly_bit_unpack", "poly"]], "nmod_poly_clear": [[76, 1, 1, "c.nmod_poly_clear", "poly"]], "nmod_poly_compose": [[76, 1, 1, "c.nmod_poly_compose", "poly1"], [76, 1, 1, "c.nmod_poly_compose", "poly2"], [76, 1, 1, "c.nmod_poly_compose", "res"]], "nmod_poly_compose_divconquer": [[76, 1, 1, "c.nmod_poly_compose_divconquer", "poly1"], [76, 1, 1, "c.nmod_poly_compose_divconquer", "poly2"], [76, 1, 1, "c.nmod_poly_compose_divconquer", "res"]], "nmod_poly_compose_horner": [[76, 1, 1, "c.nmod_poly_compose_horner", "poly1"], [76, 1, 1, "c.nmod_poly_compose_horner", "poly2"], [76, 1, 1, "c.nmod_poly_compose_horner", "res"]], "nmod_poly_compose_mod": [[76, 1, 1, "c.nmod_poly_compose_mod", "f"], [76, 1, 1, "c.nmod_poly_compose_mod", "g"], [76, 1, 1, "c.nmod_poly_compose_mod", "h"], [76, 1, 1, "c.nmod_poly_compose_mod", "res"]], "nmod_poly_compose_mod_brent_kung": [[76, 1, 1, "c.nmod_poly_compose_mod_brent_kung", "f"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung", "g"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung", "h"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung", "res"]], "nmod_poly_compose_mod_brent_kung_precomp_preinv": [[76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_precomp_preinv", "A"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_precomp_preinv", "f"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_precomp_preinv", "h"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_precomp_preinv", "hinv"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_precomp_preinv", "res"]], "nmod_poly_compose_mod_brent_kung_preinv": [[76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_preinv", "f"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_preinv", "g"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_preinv", "h"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_preinv", "hinv"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_preinv", "res"]], "nmod_poly_compose_mod_brent_kung_vec_preinv": [[76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_vec_preinv", "g"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_vec_preinv", "h"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_vec_preinv", "hinv"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_vec_preinv", "len1"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_vec_preinv", "n"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_vec_preinv", "polys"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_vec_preinv", "res"]], "nmod_poly_compose_mod_brent_kung_vec_preinv_threaded": [[76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_vec_preinv_threaded", "g"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_vec_preinv_threaded", "len1"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_vec_preinv_threaded", "n"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_vec_preinv_threaded", "poly"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_vec_preinv_threaded", "polyinv"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_vec_preinv_threaded", "polys"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_vec_preinv_threaded", "res"]], "nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool": [[76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "g"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "len1"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "n"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "num_threads"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "poly"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "polyinv"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "polys"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "res"], [76, 1, 1, "c.nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool", "threads"]], "nmod_poly_compose_mod_horner": [[76, 1, 1, "c.nmod_poly_compose_mod_horner", "f"], [76, 1, 1, "c.nmod_poly_compose_mod_horner", "g"], [76, 1, 1, "c.nmod_poly_compose_mod_horner", "h"], [76, 1, 1, "c.nmod_poly_compose_mod_horner", "res"]], "nmod_poly_compose_series": [[76, 1, 1, "c.nmod_poly_compose_series", "n"], [76, 1, 1, "c.nmod_poly_compose_series", "poly1"], [76, 1, 1, "c.nmod_poly_compose_series", "poly2"], [76, 1, 1, "c.nmod_poly_compose_series", "res"]], "nmod_poly_compose_series_brent_kung": [[76, 1, 1, "c.nmod_poly_compose_series_brent_kung", "n"], [76, 1, 1, "c.nmod_poly_compose_series_brent_kung", "poly1"], [76, 1, 1, "c.nmod_poly_compose_series_brent_kung", "poly2"], [76, 1, 1, "c.nmod_poly_compose_series_brent_kung", "res"]], "nmod_poly_compose_series_divconquer": [[76, 1, 1, "c.nmod_poly_compose_series_divconquer", "N"], [76, 1, 1, "c.nmod_poly_compose_series_divconquer", "poly1"], [76, 1, 1, "c.nmod_poly_compose_series_divconquer", "poly2"], [76, 1, 1, "c.nmod_poly_compose_series_divconquer", "res"]], "nmod_poly_compose_series_horner": [[76, 1, 1, "c.nmod_poly_compose_series_horner", "n"], [76, 1, 1, "c.nmod_poly_compose_series_horner", "poly1"], [76, 1, 1, "c.nmod_poly_compose_series_horner", "poly2"], [76, 1, 1, "c.nmod_poly_compose_series_horner", "res"]], "nmod_poly_cos_series": [[76, 1, 1, "c.nmod_poly_cos_series", "g"], [76, 1, 1, "c.nmod_poly_cos_series", "h"], [76, 1, 1, "c.nmod_poly_cos_series", "n"]], "nmod_poly_cosh_series": [[76, 1, 1, "c.nmod_poly_cosh_series", "g"], [76, 1, 1, "c.nmod_poly_cosh_series", "h"], [76, 1, 1, "c.nmod_poly_cosh_series", "n"]], "nmod_poly_deflate": [[76, 1, 1, "c.nmod_poly_deflate", "deflation"], [76, 1, 1, "c.nmod_poly_deflate", "input"], [76, 1, 1, "c.nmod_poly_deflate", "result"]], "nmod_poly_deflation": [[76, 1, 1, "c.nmod_poly_deflation", "input"]], "nmod_poly_degree": [[76, 1, 1, "c.nmod_poly_degree", "poly"]], "nmod_poly_derivative": [[76, 1, 1, "c.nmod_poly_derivative", "x"], [76, 1, 1, "c.nmod_poly_derivative", "x_prime"]], "nmod_poly_discriminant": [[76, 1, 1, "c.nmod_poly_discriminant", "f"]], "nmod_poly_div": [[76, 1, 1, "c.nmod_poly_div", "A"], [76, 1, 1, "c.nmod_poly_div", "B"], [76, 1, 1, "c.nmod_poly_div", "Q"]], "nmod_poly_div_basecase": [[76, 1, 1, "c.nmod_poly_div_basecase", "A"], [76, 1, 1, "c.nmod_poly_div_basecase", "B"], [76, 1, 1, "c.nmod_poly_div_basecase", "Q"]], "nmod_poly_div_divconquer": [[76, 1, 1, "c.nmod_poly_div_divconquer", "A"], [76, 1, 1, "c.nmod_poly_div_divconquer", "B"], [76, 1, 1, "c.nmod_poly_div_divconquer", "Q"]], "nmod_poly_div_newton": [[76, 1, 1, "c.nmod_poly_div_newton", "A"], [76, 1, 1, "c.nmod_poly_div_newton", "B"], [76, 1, 1, "c.nmod_poly_div_newton", "Q"]], "nmod_poly_div_newton_n_preinv": [[76, 1, 1, "c.nmod_poly_div_newton_n_preinv", "A"], [76, 1, 1, "c.nmod_poly_div_newton_n_preinv", "B"], [76, 1, 1, "c.nmod_poly_div_newton_n_preinv", "Binv"], [76, 1, 1, "c.nmod_poly_div_newton_n_preinv", "Q"]], "nmod_poly_div_root": [[76, 1, 1, "c.nmod_poly_div_root", "A"], [76, 1, 1, "c.nmod_poly_div_root", "Q"], [76, 1, 1, "c.nmod_poly_div_root", "c"]], "nmod_poly_div_series": [[76, 1, 1, "c.nmod_poly_div_series", "A"], [76, 1, 1, "c.nmod_poly_div_series", "B"], [76, 1, 1, "c.nmod_poly_div_series", "Q"], [76, 1, 1, "c.nmod_poly_div_series", "n"]], "nmod_poly_div_series_basecase": [[76, 1, 1, "c.nmod_poly_div_series_basecase", "A"], [76, 1, 1, "c.nmod_poly_div_series_basecase", "B"], [76, 1, 1, "c.nmod_poly_div_series_basecase", "Q"], [76, 1, 1, "c.nmod_poly_div_series_basecase", "n"]], "nmod_poly_divides": [[76, 1, 1, "c.nmod_poly_divides", "A"], [76, 1, 1, "c.nmod_poly_divides", "B"], [76, 1, 1, "c.nmod_poly_divides", "Q"]], "nmod_poly_divides_classical": [[76, 1, 1, "c.nmod_poly_divides_classical", "A"], [76, 1, 1, "c.nmod_poly_divides_classical", "B"], [76, 1, 1, "c.nmod_poly_divides_classical", "Q"]], "nmod_poly_divrem": [[76, 1, 1, "c.nmod_poly_divrem", "A"], [76, 1, 1, "c.nmod_poly_divrem", "B"], [76, 1, 1, "c.nmod_poly_divrem", "Q"], [76, 1, 1, "c.nmod_poly_divrem", "R"]], "nmod_poly_divrem_basecase": [[76, 1, 1, "c.nmod_poly_divrem_basecase", "A"], [76, 1, 1, "c.nmod_poly_divrem_basecase", "B"], [76, 1, 1, "c.nmod_poly_divrem_basecase", "Q"], [76, 1, 1, "c.nmod_poly_divrem_basecase", "R"]], "nmod_poly_divrem_divconquer": [[76, 1, 1, "c.nmod_poly_divrem_divconquer", "A"], [76, 1, 1, "c.nmod_poly_divrem_divconquer", "B"], [76, 1, 1, "c.nmod_poly_divrem_divconquer", "Q"], [76, 1, 1, "c.nmod_poly_divrem_divconquer", "R"]], "nmod_poly_divrem_newton": [[76, 1, 1, "c.nmod_poly_divrem_newton", "A"], [76, 1, 1, "c.nmod_poly_divrem_newton", "B"], [76, 1, 1, "c.nmod_poly_divrem_newton", "Q"], [76, 1, 1, "c.nmod_poly_divrem_newton", "R"]], "nmod_poly_divrem_newton_n_preinv": [[76, 1, 1, "c.nmod_poly_divrem_newton_n_preinv", "A"], [76, 1, 1, "c.nmod_poly_divrem_newton_n_preinv", "B"], [76, 1, 1, "c.nmod_poly_divrem_newton_n_preinv", "Binv"], [76, 1, 1, "c.nmod_poly_divrem_newton_n_preinv", "Q"], [76, 1, 1, "c.nmod_poly_divrem_newton_n_preinv", "R"]], "nmod_poly_equal": [[76, 1, 1, "c.nmod_poly_equal", "a"], [76, 1, 1, "c.nmod_poly_equal", "b"]], "nmod_poly_equal_trunc": [[76, 1, 1, "c.nmod_poly_equal_trunc", "n"], [76, 1, 1, "c.nmod_poly_equal_trunc", "poly1"], [76, 1, 1, "c.nmod_poly_equal_trunc", "poly2"]], "nmod_poly_evaluate_mat": [[76, 1, 1, "c.nmod_poly_evaluate_mat", "c"], [76, 1, 1, "c.nmod_poly_evaluate_mat", "dest"], [76, 1, 1, "c.nmod_poly_evaluate_mat", "poly"]], "nmod_poly_evaluate_mat_horner": [[76, 1, 1, "c.nmod_poly_evaluate_mat_horner", "c"], [76, 1, 1, "c.nmod_poly_evaluate_mat_horner", "dest"], [76, 1, 1, "c.nmod_poly_evaluate_mat_horner", "poly"]], "nmod_poly_evaluate_mat_paterson_stockmeyer": [[76, 1, 1, "c.nmod_poly_evaluate_mat_paterson_stockmeyer", "c"], [76, 1, 1, "c.nmod_poly_evaluate_mat_paterson_stockmeyer", "dest"], [76, 1, 1, "c.nmod_poly_evaluate_mat_paterson_stockmeyer", "poly"]], "nmod_poly_evaluate_nmod": [[76, 1, 1, "c.nmod_poly_evaluate_nmod", "c"], [76, 1, 1, "c.nmod_poly_evaluate_nmod", "poly"]], "nmod_poly_evaluate_nmod_vec": [[76, 1, 1, "c.nmod_poly_evaluate_nmod_vec", "n"], [76, 1, 1, "c.nmod_poly_evaluate_nmod_vec", "poly"], [76, 1, 1, "c.nmod_poly_evaluate_nmod_vec", "xs"], [76, 1, 1, "c.nmod_poly_evaluate_nmod_vec", "ys"]], "nmod_poly_evaluate_nmod_vec_fast": [[76, 1, 1, "c.nmod_poly_evaluate_nmod_vec_fast", "n"], [76, 1, 1, "c.nmod_poly_evaluate_nmod_vec_fast", "poly"], [76, 1, 1, "c.nmod_poly_evaluate_nmod_vec_fast", "xs"], [76, 1, 1, "c.nmod_poly_evaluate_nmod_vec_fast", "ys"]], "nmod_poly_evaluate_nmod_vec_iter": [[76, 1, 1, "c.nmod_poly_evaluate_nmod_vec_iter", "n"], [76, 1, 1, "c.nmod_poly_evaluate_nmod_vec_iter", "poly"], [76, 1, 1, "c.nmod_poly_evaluate_nmod_vec_iter", "xs"], [76, 1, 1, "c.nmod_poly_evaluate_nmod_vec_iter", "ys"]], "nmod_poly_exp_series": [[76, 1, 1, "c.nmod_poly_exp_series", "g"], [76, 1, 1, "c.nmod_poly_exp_series", "h"], [76, 1, 1, "c.nmod_poly_exp_series", "n"]], "nmod_poly_exp_series_basecase": [[76, 1, 1, "c.nmod_poly_exp_series_basecase", "g"], [76, 1, 1, "c.nmod_poly_exp_series_basecase", "h"], [76, 1, 1, "c.nmod_poly_exp_series_basecase", "n"]], "nmod_poly_exp_series_monomial_ui": [[76, 1, 1, "c.nmod_poly_exp_series_monomial_ui", "c"], [76, 1, 1, "c.nmod_poly_exp_series_monomial_ui", "g"], [76, 1, 1, "c.nmod_poly_exp_series_monomial_ui", "n"], [76, 1, 1, "c.nmod_poly_exp_series_monomial_ui", "r"]], "nmod_poly_factor": [[77, 1, 1, "c.nmod_poly_factor", "f"], [77, 1, 1, "c.nmod_poly_factor", "res"]], "nmod_poly_factor_berlekamp": [[77, 1, 1, "c.nmod_poly_factor_berlekamp", "f"], [77, 1, 1, "c.nmod_poly_factor_berlekamp", "res"]], "nmod_poly_factor_cantor_zassenhaus": [[77, 1, 1, "c.nmod_poly_factor_cantor_zassenhaus", "f"], [77, 1, 1, "c.nmod_poly_factor_cantor_zassenhaus", "res"]], "nmod_poly_factor_clear": [[77, 1, 1, "c.nmod_poly_factor_clear", "fac"]], "nmod_poly_factor_concat": [[77, 1, 1, "c.nmod_poly_factor_concat", "fac"], [77, 1, 1, "c.nmod_poly_factor_concat", "res"]], "nmod_poly_factor_distinct_deg": [[77, 1, 1, "c.nmod_poly_factor_distinct_deg", "degs"], [77, 1, 1, "c.nmod_poly_factor_distinct_deg", "poly"], [77, 1, 1, "c.nmod_poly_factor_distinct_deg", "res"]], "nmod_poly_factor_distinct_deg_threaded": [[77, 1, 1, "c.nmod_poly_factor_distinct_deg_threaded", "degs"], [77, 1, 1, "c.nmod_poly_factor_distinct_deg_threaded", "poly"], [77, 1, 1, "c.nmod_poly_factor_distinct_deg_threaded", "res"]], "nmod_poly_factor_equal_deg": [[77, 1, 1, "c.nmod_poly_factor_equal_deg", "d"], [77, 1, 1, "c.nmod_poly_factor_equal_deg", "factors"], [77, 1, 1, "c.nmod_poly_factor_equal_deg", "pol"]], "nmod_poly_factor_equal_deg_prob": [[77, 1, 1, "c.nmod_poly_factor_equal_deg_prob", "d"], [77, 1, 1, "c.nmod_poly_factor_equal_deg_prob", "factor"], [77, 1, 1, "c.nmod_poly_factor_equal_deg_prob", "pol"], [77, 1, 1, "c.nmod_poly_factor_equal_deg_prob", "state"]], "nmod_poly_factor_fit_length": [[77, 1, 1, "c.nmod_poly_factor_fit_length", "fac"], [77, 1, 1, "c.nmod_poly_factor_fit_length", "len"]], "nmod_poly_factor_init": [[77, 1, 1, "c.nmod_poly_factor_init", "fac"]], "nmod_poly_factor_insert": [[77, 1, 1, "c.nmod_poly_factor_insert", "exp"], [77, 1, 1, "c.nmod_poly_factor_insert", "fac"], [77, 1, 1, "c.nmod_poly_factor_insert", "poly"]], "nmod_poly_factor_kaltofen_shoup": [[77, 1, 1, "c.nmod_poly_factor_kaltofen_shoup", "poly"], [77, 1, 1, "c.nmod_poly_factor_kaltofen_shoup", "res"]], "nmod_poly_factor_pow": [[77, 1, 1, "c.nmod_poly_factor_pow", "exp"], [77, 1, 1, "c.nmod_poly_factor_pow", "fac"]], "nmod_poly_factor_print": [[77, 1, 1, "c.nmod_poly_factor_print", "fac"]], "nmod_poly_factor_realloc": [[77, 1, 1, "c.nmod_poly_factor_realloc", "alloc"], [77, 1, 1, "c.nmod_poly_factor_realloc", "fac"]], "nmod_poly_factor_set": [[77, 1, 1, "c.nmod_poly_factor_set", "fac"], [77, 1, 1, "c.nmod_poly_factor_set", "res"]], "nmod_poly_factor_squarefree": [[77, 1, 1, "c.nmod_poly_factor_squarefree", "f"], [77, 1, 1, "c.nmod_poly_factor_squarefree", "res"]], "nmod_poly_factor_with_berlekamp": [[77, 1, 1, "c.nmod_poly_factor_with_berlekamp", "f"], [77, 1, 1, "c.nmod_poly_factor_with_berlekamp", "res"]], "nmod_poly_factor_with_cantor_zassenhaus": [[77, 1, 1, "c.nmod_poly_factor_with_cantor_zassenhaus", "f"], [77, 1, 1, "c.nmod_poly_factor_with_cantor_zassenhaus", "res"]], "nmod_poly_factor_with_kaltofen_shoup": [[77, 1, 1, "c.nmod_poly_factor_with_kaltofen_shoup", "f"], [77, 1, 1, "c.nmod_poly_factor_with_kaltofen_shoup", "res"]], "nmod_poly_find_distinct_nonzero_roots": [[76, 1, 1, "c.nmod_poly_find_distinct_nonzero_roots", "A"], [76, 1, 1, "c.nmod_poly_find_distinct_nonzero_roots", "roots"]], "nmod_poly_fit_length": [[76, 1, 1, "c.nmod_poly_fit_length", "alloc"], [76, 1, 1, "c.nmod_poly_fit_length", "poly"]], "nmod_poly_fprint": [[76, 1, 1, "c.nmod_poly_fprint", "f"], [76, 1, 1, "c.nmod_poly_fprint", "poly"]], "nmod_poly_fprint_pretty": [[76, 1, 1, "c.nmod_poly_fprint_pretty", "f"], [76, 1, 1, "c.nmod_poly_fprint_pretty", "poly"], [76, 1, 1, "c.nmod_poly_fprint_pretty", "x"]], "nmod_poly_fread": [[76, 1, 1, "c.nmod_poly_fread", "f"], [76, 1, 1, "c.nmod_poly_fread", "poly"]], "nmod_poly_gcd": [[76, 1, 1, "c.nmod_poly_gcd", "A"], [76, 1, 1, "c.nmod_poly_gcd", "B"], [76, 1, 1, "c.nmod_poly_gcd", "G"]], "nmod_poly_gcd_euclidean": [[76, 1, 1, "c.nmod_poly_gcd_euclidean", "A"], [76, 1, 1, "c.nmod_poly_gcd_euclidean", "B"], [76, 1, 1, "c.nmod_poly_gcd_euclidean", "G"]], "nmod_poly_gcd_hgcd": [[76, 1, 1, "c.nmod_poly_gcd_hgcd", "A"], [76, 1, 1, "c.nmod_poly_gcd_hgcd", "B"], [76, 1, 1, "c.nmod_poly_gcd_hgcd", "G"]], "nmod_poly_gcdinv": [[76, 1, 1, "c.nmod_poly_gcdinv", "A"], [76, 1, 1, "c.nmod_poly_gcdinv", "B"], [76, 1, 1, "c.nmod_poly_gcdinv", "G"], [76, 1, 1, "c.nmod_poly_gcdinv", "S"]], "nmod_poly_get_coeff_ui": [[76, 1, 1, "c.nmod_poly_get_coeff_ui", "j"], [76, 1, 1, "c.nmod_poly_get_coeff_ui", "poly"]], "nmod_poly_get_str": [[76, 1, 1, "c.nmod_poly_get_str", "poly"]], "nmod_poly_get_str_pretty": [[76, 1, 1, "c.nmod_poly_get_str_pretty", "poly"], [76, 1, 1, "c.nmod_poly_get_str_pretty", "x"]], "nmod_poly_inflate": [[76, 1, 1, "c.nmod_poly_inflate", "inflation"], [76, 1, 1, "c.nmod_poly_inflate", "input"], [76, 1, 1, "c.nmod_poly_inflate", "result"]], "nmod_poly_init": [[76, 1, 1, "c.nmod_poly_init", "n"], [76, 1, 1, "c.nmod_poly_init", "poly"]], "nmod_poly_init2": [[76, 1, 1, "c.nmod_poly_init2", "alloc"], [76, 1, 1, "c.nmod_poly_init2", "n"], [76, 1, 1, "c.nmod_poly_init2", "poly"]], "nmod_poly_init2_preinv": [[76, 1, 1, "c.nmod_poly_init2_preinv", "alloc"], [76, 1, 1, "c.nmod_poly_init2_preinv", "n"], [76, 1, 1, "c.nmod_poly_init2_preinv", "ninv"], [76, 1, 1, "c.nmod_poly_init2_preinv", "poly"]], "nmod_poly_init_mod": [[76, 1, 1, "c.nmod_poly_init_mod", "mod"], [76, 1, 1, "c.nmod_poly_init_mod", "poly"]], "nmod_poly_init_preinv": [[76, 1, 1, "c.nmod_poly_init_preinv", "n"], [76, 1, 1, "c.nmod_poly_init_preinv", "ninv"], [76, 1, 1, "c.nmod_poly_init_preinv", "poly"]], "nmod_poly_integral": [[76, 1, 1, "c.nmod_poly_integral", "x"], [76, 1, 1, "c.nmod_poly_integral", "x_int"]], "nmod_poly_interpolate_nmod_vec": [[76, 1, 1, "c.nmod_poly_interpolate_nmod_vec", "n"], [76, 1, 1, "c.nmod_poly_interpolate_nmod_vec", "poly"], [76, 1, 1, "c.nmod_poly_interpolate_nmod_vec", "xs"], [76, 1, 1, "c.nmod_poly_interpolate_nmod_vec", "ys"]], "nmod_poly_interpolate_nmod_vec_barycentric": [[76, 1, 1, "c.nmod_poly_interpolate_nmod_vec_barycentric", "n"], [76, 1, 1, "c.nmod_poly_interpolate_nmod_vec_barycentric", "poly"], [76, 1, 1, "c.nmod_poly_interpolate_nmod_vec_barycentric", "xs"], [76, 1, 1, "c.nmod_poly_interpolate_nmod_vec_barycentric", "ys"]], "nmod_poly_interpolate_nmod_vec_fast": [[76, 1, 1, "c.nmod_poly_interpolate_nmod_vec_fast", "n"], [76, 1, 1, "c.nmod_poly_interpolate_nmod_vec_fast", "poly"], [76, 1, 1, "c.nmod_poly_interpolate_nmod_vec_fast", "xs"], [76, 1, 1, "c.nmod_poly_interpolate_nmod_vec_fast", "ys"]], "nmod_poly_interpolate_nmod_vec_newton": [[76, 1, 1, "c.nmod_poly_interpolate_nmod_vec_newton", "n"], [76, 1, 1, "c.nmod_poly_interpolate_nmod_vec_newton", "poly"], [76, 1, 1, "c.nmod_poly_interpolate_nmod_vec_newton", "xs"], [76, 1, 1, "c.nmod_poly_interpolate_nmod_vec_newton", "ys"]], "nmod_poly_inv_series": [[76, 1, 1, "c.nmod_poly_inv_series", "Q"], [76, 1, 1, "c.nmod_poly_inv_series", "Qinv"], [76, 1, 1, "c.nmod_poly_inv_series", "n"]], "nmod_poly_inv_series_basecase": [[76, 1, 1, "c.nmod_poly_inv_series_basecase", "Q"], [76, 1, 1, "c.nmod_poly_inv_series_basecase", "Qinv"], [76, 1, 1, "c.nmod_poly_inv_series_basecase", "n"]], "nmod_poly_inv_series_newton": [[76, 1, 1, "c.nmod_poly_inv_series_newton", "Q"], [76, 1, 1, "c.nmod_poly_inv_series_newton", "Qinv"], [76, 1, 1, "c.nmod_poly_inv_series_newton", "n"]], "nmod_poly_invmod": [[76, 1, 1, "c.nmod_poly_invmod", "A"], [76, 1, 1, "c.nmod_poly_invmod", "B"], [76, 1, 1, "c.nmod_poly_invmod", "P"]], "nmod_poly_invsqrt_series": [[76, 1, 1, "c.nmod_poly_invsqrt_series", "g"], [76, 1, 1, "c.nmod_poly_invsqrt_series", "h"], [76, 1, 1, "c.nmod_poly_invsqrt_series", "n"]], "nmod_poly_is_irreducible": [[77, 1, 1, "c.nmod_poly_is_irreducible", "f"]], "nmod_poly_is_irreducible_ddf": [[77, 1, 1, "c.nmod_poly_is_irreducible_ddf", "f"]], "nmod_poly_is_irreducible_rabin": [[77, 1, 1, "c.nmod_poly_is_irreducible_rabin", "f"]], "nmod_poly_is_one": [[76, 1, 1, "c.nmod_poly_is_one", "poly"]], "nmod_poly_is_squarefree": [[77, 1, 1, "c.nmod_poly_is_squarefree", "f"]], "nmod_poly_is_zero": [[76, 1, 1, "c.nmod_poly_is_zero", "poly"]], "nmod_poly_length": [[76, 1, 1, "c.nmod_poly_length", "poly"]], "nmod_poly_log_series": [[76, 1, 1, "c.nmod_poly_log_series", "g"], [76, 1, 1, "c.nmod_poly_log_series", "h"], [76, 1, 1, "c.nmod_poly_log_series", "n"]], "nmod_poly_log_series_monomial_ui": [[76, 1, 1, "c.nmod_poly_log_series_monomial_ui", "c"], [76, 1, 1, "c.nmod_poly_log_series_monomial_ui", "g"], [76, 1, 1, "c.nmod_poly_log_series_monomial_ui", "n"], [76, 1, 1, "c.nmod_poly_log_series_monomial_ui", "r"]], "nmod_poly_make_monic": [[76, 1, 1, "c.nmod_poly_make_monic", "input"], [76, 1, 1, "c.nmod_poly_make_monic", "output"]], "nmod_poly_mat_add": [[78, 1, 1, "c.nmod_poly_mat_add", "A"], [78, 1, 1, "c.nmod_poly_mat_add", "B"], [78, 1, 1, "c.nmod_poly_mat_add", "C"]], "nmod_poly_mat_clear": [[78, 1, 1, "c.nmod_poly_mat_clear", "mat"]], "nmod_poly_mat_det": [[78, 1, 1, "c.nmod_poly_mat_det", "A"], [78, 1, 1, "c.nmod_poly_mat_det", "det"]], "nmod_poly_mat_det_fflu": [[78, 1, 1, "c.nmod_poly_mat_det_fflu", "A"], [78, 1, 1, "c.nmod_poly_mat_det_fflu", "det"]], "nmod_poly_mat_det_interpolate": [[78, 1, 1, "c.nmod_poly_mat_det_interpolate", "A"], [78, 1, 1, "c.nmod_poly_mat_det_interpolate", "det"]], "nmod_poly_mat_entry": [[78, 1, 1, "c.nmod_poly_mat_entry", "i"], [78, 1, 1, "c.nmod_poly_mat_entry", "j"], [78, 1, 1, "c.nmod_poly_mat_entry", "mat"]], "nmod_poly_mat_equal": [[78, 1, 1, "c.nmod_poly_mat_equal", "mat1"], [78, 1, 1, "c.nmod_poly_mat_equal", "mat2"]], "nmod_poly_mat_evaluate_nmod": [[78, 1, 1, "c.nmod_poly_mat_evaluate_nmod", "A"], [78, 1, 1, "c.nmod_poly_mat_evaluate_nmod", "B"], [78, 1, 1, "c.nmod_poly_mat_evaluate_nmod", "x"]], "nmod_poly_mat_fflu": [[78, 1, 1, "c.nmod_poly_mat_fflu", "A"], [78, 1, 1, "c.nmod_poly_mat_fflu", "B"], [78, 1, 1, "c.nmod_poly_mat_fflu", "den"], [78, 1, 1, "c.nmod_poly_mat_fflu", "perm"], [78, 1, 1, "c.nmod_poly_mat_fflu", "rank_check"]], "nmod_poly_mat_find_pivot_any": [[78, 1, 1, "c.nmod_poly_mat_find_pivot_any", "c"], [78, 1, 1, "c.nmod_poly_mat_find_pivot_any", "end_row"], [78, 1, 1, "c.nmod_poly_mat_find_pivot_any", "mat"], [78, 1, 1, "c.nmod_poly_mat_find_pivot_any", "start_row"]], "nmod_poly_mat_find_pivot_partial": [[78, 1, 1, "c.nmod_poly_mat_find_pivot_partial", "c"], [78, 1, 1, "c.nmod_poly_mat_find_pivot_partial", "end_row"], [78, 1, 1, "c.nmod_poly_mat_find_pivot_partial", "mat"], [78, 1, 1, "c.nmod_poly_mat_find_pivot_partial", "start_row"]], "nmod_poly_mat_init": [[78, 1, 1, "c.nmod_poly_mat_init", "cols"], [78, 1, 1, "c.nmod_poly_mat_init", "mat"], [78, 1, 1, "c.nmod_poly_mat_init", "n"], [78, 1, 1, "c.nmod_poly_mat_init", "rows"]], "nmod_poly_mat_init_set": [[78, 1, 1, "c.nmod_poly_mat_init_set", "mat"], [78, 1, 1, "c.nmod_poly_mat_init_set", "src"]], "nmod_poly_mat_inv": [[78, 1, 1, "c.nmod_poly_mat_inv", "A"], [78, 1, 1, "c.nmod_poly_mat_inv", "Ainv"], [78, 1, 1, "c.nmod_poly_mat_inv", "den"]], "nmod_poly_mat_is_empty": [[78, 1, 1, "c.nmod_poly_mat_is_empty", "mat"]], "nmod_poly_mat_is_one": [[78, 1, 1, "c.nmod_poly_mat_is_one", "mat"]], "nmod_poly_mat_is_square": [[78, 1, 1, "c.nmod_poly_mat_is_square", "mat"]], "nmod_poly_mat_is_zero": [[78, 1, 1, "c.nmod_poly_mat_is_zero", "mat"]], "nmod_poly_mat_max_length": [[78, 1, 1, "c.nmod_poly_mat_max_length", "A"]], "nmod_poly_mat_modulus": [[78, 1, 1, "c.nmod_poly_mat_modulus", "mat"]], "nmod_poly_mat_mul": [[78, 1, 1, "c.nmod_poly_mat_mul", "A"], [78, 1, 1, "c.nmod_poly_mat_mul", "B"], [78, 1, 1, "c.nmod_poly_mat_mul", "C"]], "nmod_poly_mat_mul_KS": [[78, 1, 1, "c.nmod_poly_mat_mul_KS", "A"], [78, 1, 1, "c.nmod_poly_mat_mul_KS", "B"], [78, 1, 1, "c.nmod_poly_mat_mul_KS", "C"]], "nmod_poly_mat_mul_classical": [[78, 1, 1, "c.nmod_poly_mat_mul_classical", "A"], [78, 1, 1, "c.nmod_poly_mat_mul_classical", "B"], [78, 1, 1, "c.nmod_poly_mat_mul_classical", "C"]], "nmod_poly_mat_mul_interpolate": [[78, 1, 1, "c.nmod_poly_mat_mul_interpolate", "A"], [78, 1, 1, "c.nmod_poly_mat_mul_interpolate", "B"], [78, 1, 1, "c.nmod_poly_mat_mul_interpolate", "C"]], "nmod_poly_mat_ncols": [[78, 1, 1, "c.nmod_poly_mat_ncols", "mat"]], "nmod_poly_mat_neg": [[78, 1, 1, "c.nmod_poly_mat_neg", "A"], [78, 1, 1, "c.nmod_poly_mat_neg", "B"]], "nmod_poly_mat_nrows": [[78, 1, 1, "c.nmod_poly_mat_nrows", "mat"]], "nmod_poly_mat_nullspace": [[78, 1, 1, "c.nmod_poly_mat_nullspace", "mat"], [78, 1, 1, "c.nmod_poly_mat_nullspace", "res"]], "nmod_poly_mat_one": [[78, 1, 1, "c.nmod_poly_mat_one", "mat"]], "nmod_poly_mat_pow": [[78, 1, 1, "c.nmod_poly_mat_pow", "A"], [78, 1, 1, "c.nmod_poly_mat_pow", "B"], [78, 1, 1, "c.nmod_poly_mat_pow", "exp"]], "nmod_poly_mat_print": [[78, 1, 1, "c.nmod_poly_mat_print", "mat"], [78, 1, 1, "c.nmod_poly_mat_print", "x"]], "nmod_poly_mat_randtest": [[78, 1, 1, "c.nmod_poly_mat_randtest", "len"], [78, 1, 1, "c.nmod_poly_mat_randtest", "mat"], [78, 1, 1, "c.nmod_poly_mat_randtest", "state"]], "nmod_poly_mat_randtest_sparse": [[78, 1, 1, "c.nmod_poly_mat_randtest_sparse", "A"], [78, 1, 1, "c.nmod_poly_mat_randtest_sparse", "density"], [78, 1, 1, "c.nmod_poly_mat_randtest_sparse", "len"], [78, 1, 1, "c.nmod_poly_mat_randtest_sparse", "state"]], "nmod_poly_mat_rank": [[78, 1, 1, "c.nmod_poly_mat_rank", "A"]], "nmod_poly_mat_rref": [[78, 1, 1, "c.nmod_poly_mat_rref", "A"], [78, 1, 1, "c.nmod_poly_mat_rref", "B"], [78, 1, 1, "c.nmod_poly_mat_rref", "den"]], "nmod_poly_mat_scalar_mul_nmod": [[78, 1, 1, "c.nmod_poly_mat_scalar_mul_nmod", "A"], [78, 1, 1, "c.nmod_poly_mat_scalar_mul_nmod", "B"], [78, 1, 1, "c.nmod_poly_mat_scalar_mul_nmod", "c"]], "nmod_poly_mat_scalar_mul_nmod_poly": [[78, 1, 1, "c.nmod_poly_mat_scalar_mul_nmod_poly", "A"], [78, 1, 1, "c.nmod_poly_mat_scalar_mul_nmod_poly", "B"], [78, 1, 1, "c.nmod_poly_mat_scalar_mul_nmod_poly", "c"]], "nmod_poly_mat_set": [[78, 1, 1, "c.nmod_poly_mat_set", "mat1"], [78, 1, 1, "c.nmod_poly_mat_set", "mat2"]], "nmod_poly_mat_solve": [[78, 1, 1, "c.nmod_poly_mat_solve", "A"], [78, 1, 1, "c.nmod_poly_mat_solve", "B"], [78, 1, 1, "c.nmod_poly_mat_solve", "X"], [78, 1, 1, "c.nmod_poly_mat_solve", "den"]], "nmod_poly_mat_solve_fflu": [[78, 1, 1, "c.nmod_poly_mat_solve_fflu", "A"], [78, 1, 1, "c.nmod_poly_mat_solve_fflu", "B"], [78, 1, 1, "c.nmod_poly_mat_solve_fflu", "X"], [78, 1, 1, "c.nmod_poly_mat_solve_fflu", "den"]], "nmod_poly_mat_solve_fflu_precomp": [[78, 1, 1, "c.nmod_poly_mat_solve_fflu_precomp", "B"], [78, 1, 1, "c.nmod_poly_mat_solve_fflu_precomp", "FFLU"], [78, 1, 1, "c.nmod_poly_mat_solve_fflu_precomp", "X"], [78, 1, 1, "c.nmod_poly_mat_solve_fflu_precomp", "perm"]], "nmod_poly_mat_sqr": [[78, 1, 1, "c.nmod_poly_mat_sqr", "A"], [78, 1, 1, "c.nmod_poly_mat_sqr", "B"]], "nmod_poly_mat_sqr_KS": [[78, 1, 1, "c.nmod_poly_mat_sqr_KS", "A"], [78, 1, 1, "c.nmod_poly_mat_sqr_KS", "B"]], "nmod_poly_mat_sqr_classical": [[78, 1, 1, "c.nmod_poly_mat_sqr_classical", "A"], [78, 1, 1, "c.nmod_poly_mat_sqr_classical", "B"]], "nmod_poly_mat_sqr_interpolate": [[78, 1, 1, "c.nmod_poly_mat_sqr_interpolate", "A"], [78, 1, 1, "c.nmod_poly_mat_sqr_interpolate", "B"]], "nmod_poly_mat_sub": [[78, 1, 1, "c.nmod_poly_mat_sub", "A"], [78, 1, 1, "c.nmod_poly_mat_sub", "B"], [78, 1, 1, "c.nmod_poly_mat_sub", "C"]], "nmod_poly_mat_swap": [[78, 1, 1, "c.nmod_poly_mat_swap", "mat1"], [78, 1, 1, "c.nmod_poly_mat_swap", "mat2"]], "nmod_poly_mat_swap_entrywise": [[78, 1, 1, "c.nmod_poly_mat_swap_entrywise", "mat1"], [78, 1, 1, "c.nmod_poly_mat_swap_entrywise", "mat2"]], "nmod_poly_mat_trace": [[78, 1, 1, "c.nmod_poly_mat_trace", "mat"], [78, 1, 1, "c.nmod_poly_mat_trace", "trace"]], "nmod_poly_mat_zero": [[78, 1, 1, "c.nmod_poly_mat_zero", "mat"]], "nmod_poly_max_bits": [[76, 1, 1, "c.nmod_poly_max_bits", "poly"]], "nmod_poly_modulus": [[76, 1, 1, "c.nmod_poly_modulus", "poly"]], "nmod_poly_mul": [[76, 1, 1, "c.nmod_poly_mul", "poly"], [76, 1, 1, "c.nmod_poly_mul", "poly2"], [76, 1, 1, "c.nmod_poly_mul", "res"]], "nmod_poly_mul_KS": [[76, 1, 1, "c.nmod_poly_mul_KS", "bits"], [76, 1, 1, "c.nmod_poly_mul_KS", "poly1"], [76, 1, 1, "c.nmod_poly_mul_KS", "poly2"], [76, 1, 1, "c.nmod_poly_mul_KS", "res"]], "nmod_poly_mul_KS2": [[76, 1, 1, "c.nmod_poly_mul_KS2", "poly1"], [76, 1, 1, "c.nmod_poly_mul_KS2", "poly2"], [76, 1, 1, "c.nmod_poly_mul_KS2", "res"]], "nmod_poly_mul_KS4": [[76, 1, 1, "c.nmod_poly_mul_KS4", "poly1"], [76, 1, 1, "c.nmod_poly_mul_KS4", "poly2"], [76, 1, 1, "c.nmod_poly_mul_KS4", "res"]], "nmod_poly_mul_classical": [[76, 1, 1, "c.nmod_poly_mul_classical", "poly1"], [76, 1, 1, "c.nmod_poly_mul_classical", "poly2"], [76, 1, 1, "c.nmod_poly_mul_classical", "res"]], "nmod_poly_mulhigh": [[76, 1, 1, "c.nmod_poly_mulhigh", "n"], [76, 1, 1, "c.nmod_poly_mulhigh", "poly1"], [76, 1, 1, "c.nmod_poly_mulhigh", "poly2"], [76, 1, 1, "c.nmod_poly_mulhigh", "res"]], "nmod_poly_mulhigh_classical": [[76, 1, 1, "c.nmod_poly_mulhigh_classical", "poly1"], [76, 1, 1, "c.nmod_poly_mulhigh_classical", "poly2"], [76, 1, 1, "c.nmod_poly_mulhigh_classical", "res"], [76, 1, 1, "c.nmod_poly_mulhigh_classical", "start"]], "nmod_poly_mullow": [[76, 1, 1, "c.nmod_poly_mullow", "poly1"], [76, 1, 1, "c.nmod_poly_mullow", "poly2"], [76, 1, 1, "c.nmod_poly_mullow", "res"], [76, 1, 1, "c.nmod_poly_mullow", "trunc"]], "nmod_poly_mullow_KS": [[76, 1, 1, "c.nmod_poly_mullow_KS", "bits"], [76, 1, 1, "c.nmod_poly_mullow_KS", "n"], [76, 1, 1, "c.nmod_poly_mullow_KS", "poly1"], [76, 1, 1, "c.nmod_poly_mullow_KS", "poly2"], [76, 1, 1, "c.nmod_poly_mullow_KS", "res"]], "nmod_poly_mullow_classical": [[76, 1, 1, "c.nmod_poly_mullow_classical", "poly1"], [76, 1, 1, "c.nmod_poly_mullow_classical", "poly2"], [76, 1, 1, "c.nmod_poly_mullow_classical", "res"], [76, 1, 1, "c.nmod_poly_mullow_classical", "trunc"]], "nmod_poly_mulmod": [[76, 1, 1, "c.nmod_poly_mulmod", "f"], [76, 1, 1, "c.nmod_poly_mulmod", "poly1"], [76, 1, 1, "c.nmod_poly_mulmod", "poly2"], [76, 1, 1, "c.nmod_poly_mulmod", "res"]], "nmod_poly_mulmod_preinv": [[76, 1, 1, "c.nmod_poly_mulmod_preinv", "f"], [76, 1, 1, "c.nmod_poly_mulmod_preinv", "finv"], [76, 1, 1, "c.nmod_poly_mulmod_preinv", "poly1"], [76, 1, 1, "c.nmod_poly_mulmod_preinv", "poly2"], [76, 1, 1, "c.nmod_poly_mulmod_preinv", "res"]], "nmod_poly_multi_crt": [[76, 1, 1, "c.nmod_poly_multi_crt", "len"], [76, 1, 1, "c.nmod_poly_multi_crt", "moduli"], [76, 1, 1, "c.nmod_poly_multi_crt", "output"], [76, 1, 1, "c.nmod_poly_multi_crt", "values"]], "nmod_poly_multi_crt_clear": [[76, 1, 1, "c.nmod_poly_multi_crt_clear", "CRT"]], "nmod_poly_multi_crt_init": [[76, 1, 1, "c.nmod_poly_multi_crt_init", "CRT"]], "nmod_poly_multi_crt_precomp": [[76, 1, 1, "c.nmod_poly_multi_crt_precomp", "CRT"], [76, 1, 1, "c.nmod_poly_multi_crt_precomp", "output"], [76, 1, 1, "c.nmod_poly_multi_crt_precomp", "values"]], "nmod_poly_multi_crt_precomp_p": [[76, 1, 1, "c.nmod_poly_multi_crt_precomp_p", "CRT"], [76, 1, 1, "c.nmod_poly_multi_crt_precomp_p", "output"], [76, 1, 1, "c.nmod_poly_multi_crt_precomp_p", "values"]], "nmod_poly_multi_crt_precompute": [[76, 1, 1, "c.nmod_poly_multi_crt_precompute", "CRT"], [76, 1, 1, "c.nmod_poly_multi_crt_precompute", "len"], [76, 1, 1, "c.nmod_poly_multi_crt_precompute", "moduli"]], "nmod_poly_multi_crt_precompute_p": [[76, 1, 1, "c.nmod_poly_multi_crt_precompute_p", "CRT"], [76, 1, 1, "c.nmod_poly_multi_crt_precompute_p", "len"], [76, 1, 1, "c.nmod_poly_multi_crt_precompute_p", "moduli"]], "nmod_poly_neg": [[76, 1, 1, "c.nmod_poly_neg", "poly"], [76, 1, 1, "c.nmod_poly_neg", "res"]], "nmod_poly_pow": [[76, 1, 1, "c.nmod_poly_pow", "e"], [76, 1, 1, "c.nmod_poly_pow", "poly"], [76, 1, 1, "c.nmod_poly_pow", "res"]], "nmod_poly_pow_binexp": [[76, 1, 1, "c.nmod_poly_pow_binexp", "e"], [76, 1, 1, "c.nmod_poly_pow_binexp", "poly"], [76, 1, 1, "c.nmod_poly_pow_binexp", "res"]], "nmod_poly_pow_trunc": [[76, 1, 1, "c.nmod_poly_pow_trunc", "e"], [76, 1, 1, "c.nmod_poly_pow_trunc", "poly"], [76, 1, 1, "c.nmod_poly_pow_trunc", "res"], [76, 1, 1, "c.nmod_poly_pow_trunc", "trunc"]], "nmod_poly_pow_trunc_binexp": [[76, 1, 1, "c.nmod_poly_pow_trunc_binexp", "e"], [76, 1, 1, "c.nmod_poly_pow_trunc_binexp", "poly"], [76, 1, 1, "c.nmod_poly_pow_trunc_binexp", "res"], [76, 1, 1, "c.nmod_poly_pow_trunc_binexp", "trunc"]], "nmod_poly_power_sums": [[76, 1, 1, "c.nmod_poly_power_sums", "n"], [76, 1, 1, "c.nmod_poly_power_sums", "poly"], [76, 1, 1, "c.nmod_poly_power_sums", "res"]], "nmod_poly_power_sums_naive": [[76, 1, 1, "c.nmod_poly_power_sums_naive", "n"], [76, 1, 1, "c.nmod_poly_power_sums_naive", "poly"], [76, 1, 1, "c.nmod_poly_power_sums_naive", "res"]], "nmod_poly_power_sums_schoenhage": [[76, 1, 1, "c.nmod_poly_power_sums_schoenhage", "n"], [76, 1, 1, "c.nmod_poly_power_sums_schoenhage", "poly"], [76, 1, 1, "c.nmod_poly_power_sums_schoenhage", "res"]], "nmod_poly_power_sums_to_poly": [[76, 1, 1, "c.nmod_poly_power_sums_to_poly", "Q"], [76, 1, 1, "c.nmod_poly_power_sums_to_poly", "res"]], "nmod_poly_power_sums_to_poly_naive": [[76, 1, 1, "c.nmod_poly_power_sums_to_poly_naive", "Q"], [76, 1, 1, "c.nmod_poly_power_sums_to_poly_naive", "res"]], "nmod_poly_power_sums_to_poly_schoenhage": [[76, 1, 1, "c.nmod_poly_power_sums_to_poly_schoenhage", "Q"], [76, 1, 1, "c.nmod_poly_power_sums_to_poly_schoenhage", "res"]], "nmod_poly_powers_mod_bsgs": [[76, 1, 1, "c.nmod_poly_powers_mod_bsgs", "f"], [76, 1, 1, "c.nmod_poly_powers_mod_bsgs", "g"], [76, 1, 1, "c.nmod_poly_powers_mod_bsgs", "n"], [76, 1, 1, "c.nmod_poly_powers_mod_bsgs", "res"]], "nmod_poly_powers_mod_naive": [[76, 1, 1, "c.nmod_poly_powers_mod_naive", "f"], [76, 1, 1, "c.nmod_poly_powers_mod_naive", "g"], [76, 1, 1, "c.nmod_poly_powers_mod_naive", "n"], [76, 1, 1, "c.nmod_poly_powers_mod_naive", "res"]], "nmod_poly_powmod_fmpz_binexp": [[76, 1, 1, "c.nmod_poly_powmod_fmpz_binexp", "e"], [76, 1, 1, "c.nmod_poly_powmod_fmpz_binexp", "f"], [76, 1, 1, "c.nmod_poly_powmod_fmpz_binexp", "poly"], [76, 1, 1, "c.nmod_poly_powmod_fmpz_binexp", "res"]], "nmod_poly_powmod_fmpz_binexp_preinv": [[76, 1, 1, "c.nmod_poly_powmod_fmpz_binexp_preinv", "e"], [76, 1, 1, "c.nmod_poly_powmod_fmpz_binexp_preinv", "f"], [76, 1, 1, "c.nmod_poly_powmod_fmpz_binexp_preinv", "finv"], [76, 1, 1, "c.nmod_poly_powmod_fmpz_binexp_preinv", "poly"], [76, 1, 1, "c.nmod_poly_powmod_fmpz_binexp_preinv", "res"]], "nmod_poly_powmod_mpz_binexp": [[76, 1, 1, "c.nmod_poly_powmod_mpz_binexp", "e"], [76, 1, 1, "c.nmod_poly_powmod_mpz_binexp", "f"], [76, 1, 1, "c.nmod_poly_powmod_mpz_binexp", "poly"], [76, 1, 1, "c.nmod_poly_powmod_mpz_binexp", "res"]], "nmod_poly_powmod_mpz_binexp_preinv": [[76, 1, 1, "c.nmod_poly_powmod_mpz_binexp_preinv", "e"], [76, 1, 1, "c.nmod_poly_powmod_mpz_binexp_preinv", "f"], [76, 1, 1, "c.nmod_poly_powmod_mpz_binexp_preinv", "finv"], [76, 1, 1, "c.nmod_poly_powmod_mpz_binexp_preinv", "poly"], [76, 1, 1, "c.nmod_poly_powmod_mpz_binexp_preinv", "res"]], "nmod_poly_powmod_ui_binexp": [[76, 1, 1, "c.nmod_poly_powmod_ui_binexp", "e"], [76, 1, 1, "c.nmod_poly_powmod_ui_binexp", "f"], [76, 1, 1, "c.nmod_poly_powmod_ui_binexp", "poly"], [76, 1, 1, "c.nmod_poly_powmod_ui_binexp", "res"]], "nmod_poly_powmod_ui_binexp_preinv": [[76, 1, 1, "c.nmod_poly_powmod_ui_binexp_preinv", "e"], [76, 1, 1, "c.nmod_poly_powmod_ui_binexp_preinv", "f"], [76, 1, 1, "c.nmod_poly_powmod_ui_binexp_preinv", "finv"], [76, 1, 1, "c.nmod_poly_powmod_ui_binexp_preinv", "poly"], [76, 1, 1, "c.nmod_poly_powmod_ui_binexp_preinv", "res"]], "nmod_poly_powmod_x_fmpz_preinv": [[76, 1, 1, "c.nmod_poly_powmod_x_fmpz_preinv", "e"], [76, 1, 1, "c.nmod_poly_powmod_x_fmpz_preinv", "f"], [76, 1, 1, "c.nmod_poly_powmod_x_fmpz_preinv", "finv"], [76, 1, 1, "c.nmod_poly_powmod_x_fmpz_preinv", "res"]], "nmod_poly_powmod_x_ui_preinv": [[76, 1, 1, "c.nmod_poly_powmod_x_ui_preinv", "e"], [76, 1, 1, "c.nmod_poly_powmod_x_ui_preinv", "f"], [76, 1, 1, "c.nmod_poly_powmod_x_ui_preinv", "finv"], [76, 1, 1, "c.nmod_poly_powmod_x_ui_preinv", "res"]], "nmod_poly_precompute_matrix": [[76, 1, 1, "c.nmod_poly_precompute_matrix", "A"], [76, 1, 1, "c.nmod_poly_precompute_matrix", "f"], [76, 1, 1, "c.nmod_poly_precompute_matrix", "g"], [76, 1, 1, "c.nmod_poly_precompute_matrix", "ginv"]], "nmod_poly_print": [[76, 1, 1, "c.nmod_poly_print", "a"]], "nmod_poly_print_pretty": [[76, 1, 1, "c.nmod_poly_print_pretty", "a"], [76, 1, 1, "c.nmod_poly_print_pretty", "x"]], "nmod_poly_product_roots_nmod_vec": [[76, 1, 1, "c.nmod_poly_product_roots_nmod_vec", "n"], [76, 1, 1, "c.nmod_poly_product_roots_nmod_vec", "poly"], [76, 1, 1, "c.nmod_poly_product_roots_nmod_vec", "xs"]], "nmod_poly_randtest": [[76, 1, 1, "c.nmod_poly_randtest", "len"], [76, 1, 1, "c.nmod_poly_randtest", "poly"], [76, 1, 1, "c.nmod_poly_randtest", "state"]], "nmod_poly_randtest_irreducible": [[76, 1, 1, "c.nmod_poly_randtest_irreducible", "len"], [76, 1, 1, "c.nmod_poly_randtest_irreducible", "poly"], [76, 1, 1, "c.nmod_poly_randtest_irreducible", "state"]], "nmod_poly_randtest_monic": [[76, 1, 1, "c.nmod_poly_randtest_monic", "len"], [76, 1, 1, "c.nmod_poly_randtest_monic", "poly"], [76, 1, 1, "c.nmod_poly_randtest_monic", "state"]], "nmod_poly_randtest_monic_irreducible": [[76, 1, 1, "c.nmod_poly_randtest_monic_irreducible", "len"], [76, 1, 1, "c.nmod_poly_randtest_monic_irreducible", "poly"], [76, 1, 1, "c.nmod_poly_randtest_monic_irreducible", "state"]], "nmod_poly_randtest_monic_primitive": [[76, 1, 1, "c.nmod_poly_randtest_monic_primitive", "len"], [76, 1, 1, "c.nmod_poly_randtest_monic_primitive", "poly"], [76, 1, 1, "c.nmod_poly_randtest_monic_primitive", "state"]], "nmod_poly_randtest_pentomial": [[76, 1, 1, "c.nmod_poly_randtest_pentomial", "len"], [76, 1, 1, "c.nmod_poly_randtest_pentomial", "poly"], [76, 1, 1, "c.nmod_poly_randtest_pentomial", "state"]], "nmod_poly_randtest_pentomial_irreducible": [[76, 1, 1, "c.nmod_poly_randtest_pentomial_irreducible", "len"], [76, 1, 1, "c.nmod_poly_randtest_pentomial_irreducible", "max_attempts"], [76, 1, 1, "c.nmod_poly_randtest_pentomial_irreducible", "poly"], [76, 1, 1, "c.nmod_poly_randtest_pentomial_irreducible", "state"]], "nmod_poly_randtest_sparse_irreducible": [[76, 1, 1, "c.nmod_poly_randtest_sparse_irreducible", "len"], [76, 1, 1, "c.nmod_poly_randtest_sparse_irreducible", "poly"], [76, 1, 1, "c.nmod_poly_randtest_sparse_irreducible", "state"]], "nmod_poly_randtest_trinomial": [[76, 1, 1, "c.nmod_poly_randtest_trinomial", "len"], [76, 1, 1, "c.nmod_poly_randtest_trinomial", "poly"], [76, 1, 1, "c.nmod_poly_randtest_trinomial", "state"]], "nmod_poly_randtest_trinomial_irreducible": [[76, 1, 1, "c.nmod_poly_randtest_trinomial_irreducible", "len"], [76, 1, 1, "c.nmod_poly_randtest_trinomial_irreducible", "max_attempts"], [76, 1, 1, "c.nmod_poly_randtest_trinomial_irreducible", "poly"], [76, 1, 1, "c.nmod_poly_randtest_trinomial_irreducible", "state"]], "nmod_poly_read": [[76, 1, 1, "c.nmod_poly_read", "poly"]], "nmod_poly_realloc": [[76, 1, 1, "c.nmod_poly_realloc", "alloc"], [76, 1, 1, "c.nmod_poly_realloc", "poly"]], "nmod_poly_rem": [[76, 1, 1, "c.nmod_poly_rem", "A"], [76, 1, 1, "c.nmod_poly_rem", "B"], [76, 1, 1, "c.nmod_poly_rem", "R"]], "nmod_poly_rem_basecase": [[76, 1, 1, "c.nmod_poly_rem_basecase", "A"], [76, 1, 1, "c.nmod_poly_rem_basecase", "B"], [76, 1, 1, "c.nmod_poly_rem_basecase", "R"]], "nmod_poly_remove": [[77, 1, 1, "c.nmod_poly_remove", "f"], [77, 1, 1, "c.nmod_poly_remove", "p"]], "nmod_poly_resultant": [[76, 1, 1, "c.nmod_poly_resultant", "f"], [76, 1, 1, "c.nmod_poly_resultant", "g"]], "nmod_poly_resultant_euclidean": [[76, 1, 1, "c.nmod_poly_resultant_euclidean", "f"], [76, 1, 1, "c.nmod_poly_resultant_euclidean", "g"]], "nmod_poly_resultant_hgcd": [[76, 1, 1, "c.nmod_poly_resultant_hgcd", "f"], [76, 1, 1, "c.nmod_poly_resultant_hgcd", "g"]], "nmod_poly_reverse": [[76, 1, 1, "c.nmod_poly_reverse", "input"], [76, 1, 1, "c.nmod_poly_reverse", "m"], [76, 1, 1, "c.nmod_poly_reverse", "output"]], "nmod_poly_revert_series": [[76, 1, 1, "c.nmod_poly_revert_series", "Q"], [76, 1, 1, "c.nmod_poly_revert_series", "Qinv"], [76, 1, 1, "c.nmod_poly_revert_series", "n"]], "nmod_poly_revert_series_lagrange": [[76, 1, 1, "c.nmod_poly_revert_series_lagrange", "Q"], [76, 1, 1, "c.nmod_poly_revert_series_lagrange", "Qinv"], [76, 1, 1, "c.nmod_poly_revert_series_lagrange", "n"]], "nmod_poly_revert_series_lagrange_fast": [[76, 1, 1, "c.nmod_poly_revert_series_lagrange_fast", "Q"], [76, 1, 1, "c.nmod_poly_revert_series_lagrange_fast", "Qinv"], [76, 1, 1, "c.nmod_poly_revert_series_lagrange_fast", "n"]], "nmod_poly_revert_series_newton": [[76, 1, 1, "c.nmod_poly_revert_series_newton", "Q"], [76, 1, 1, "c.nmod_poly_revert_series_newton", "Qinv"], [76, 1, 1, "c.nmod_poly_revert_series_newton", "n"]], "nmod_poly_scalar_mul_nmod": [[76, 1, 1, "c.nmod_poly_scalar_mul_nmod", "c"], [76, 1, 1, "c.nmod_poly_scalar_mul_nmod", "poly"], [76, 1, 1, "c.nmod_poly_scalar_mul_nmod", "res"]], "nmod_poly_set": [[76, 1, 1, "c.nmod_poly_set", "a"], [76, 1, 1, "c.nmod_poly_set", "b"]], "nmod_poly_set_coeff_ui": [[76, 1, 1, "c.nmod_poly_set_coeff_ui", "c"], [76, 1, 1, "c.nmod_poly_set_coeff_ui", "j"], [76, 1, 1, "c.nmod_poly_set_coeff_ui", "poly"]], "nmod_poly_set_str": [[76, 1, 1, "c.nmod_poly_set_str", "poly"], [76, 1, 1, "c.nmod_poly_set_str", "s"]], "nmod_poly_set_trunc": [[76, 1, 1, "c.nmod_poly_set_trunc", "n"], [76, 1, 1, "c.nmod_poly_set_trunc", "poly"], [76, 1, 1, "c.nmod_poly_set_trunc", "res"]], "nmod_poly_shift_left": [[76, 1, 1, "c.nmod_poly_shift_left", "k"], [76, 1, 1, "c.nmod_poly_shift_left", "poly"], [76, 1, 1, "c.nmod_poly_shift_left", "res"]], "nmod_poly_shift_right": [[76, 1, 1, "c.nmod_poly_shift_right", "k"], [76, 1, 1, "c.nmod_poly_shift_right", "poly"], [76, 1, 1, "c.nmod_poly_shift_right", "res"]], "nmod_poly_sin_series": [[76, 1, 1, "c.nmod_poly_sin_series", "g"], [76, 1, 1, "c.nmod_poly_sin_series", "h"], [76, 1, 1, "c.nmod_poly_sin_series", "n"]], "nmod_poly_sinh_series": [[76, 1, 1, "c.nmod_poly_sinh_series", "g"], [76, 1, 1, "c.nmod_poly_sinh_series", "h"], [76, 1, 1, "c.nmod_poly_sinh_series", "n"]], "nmod_poly_sqrt": [[76, 1, 1, "c.nmod_poly_sqrt", "p"], [76, 1, 1, "c.nmod_poly_sqrt", "s"]], "nmod_poly_sqrt_series": [[76, 1, 1, "c.nmod_poly_sqrt_series", "g"], [76, 1, 1, "c.nmod_poly_sqrt_series", "h"], [76, 1, 1, "c.nmod_poly_sqrt_series", "n"]], "nmod_poly_sub": [[76, 1, 1, "c.nmod_poly_sub", "poly1"], [76, 1, 1, "c.nmod_poly_sub", "poly2"], [76, 1, 1, "c.nmod_poly_sub", "res"]], "nmod_poly_sub_series": [[76, 1, 1, "c.nmod_poly_sub_series", "n"], [76, 1, 1, "c.nmod_poly_sub_series", "poly1"], [76, 1, 1, "c.nmod_poly_sub_series", "poly2"], [76, 1, 1, "c.nmod_poly_sub_series", "res"]], "nmod_poly_swap": [[76, 1, 1, "c.nmod_poly_swap", "poly1"], [76, 1, 1, "c.nmod_poly_swap", "poly2"]], "nmod_poly_tan_series": [[76, 1, 1, "c.nmod_poly_tan_series", "g"], [76, 1, 1, "c.nmod_poly_tan_series", "h"], [76, 1, 1, "c.nmod_poly_tan_series", "n"]], "nmod_poly_tanh_series": [[76, 1, 1, "c.nmod_poly_tanh_series", "g"], [76, 1, 1, "c.nmod_poly_tanh_series", "h"], [76, 1, 1, "c.nmod_poly_tanh_series", "n"]], "nmod_poly_taylor_shift": [[76, 1, 1, "c.nmod_poly_taylor_shift", "c"], [76, 1, 1, "c.nmod_poly_taylor_shift", "f"], [76, 1, 1, "c.nmod_poly_taylor_shift", "g"]], "nmod_poly_taylor_shift_convolution": [[76, 1, 1, "c.nmod_poly_taylor_shift_convolution", "c"], [76, 1, 1, "c.nmod_poly_taylor_shift_convolution", "f"], [76, 1, 1, "c.nmod_poly_taylor_shift_convolution", "g"]], "nmod_poly_taylor_shift_horner": [[76, 1, 1, "c.nmod_poly_taylor_shift_horner", "c"], [76, 1, 1, "c.nmod_poly_taylor_shift_horner", "f"], [76, 1, 1, "c.nmod_poly_taylor_shift_horner", "g"]], "nmod_poly_truncate": [[76, 1, 1, "c.nmod_poly_truncate", "len"], [76, 1, 1, "c.nmod_poly_truncate", "poly"]], "nmod_poly_xgcd": [[76, 1, 1, "c.nmod_poly_xgcd", "A"], [76, 1, 1, "c.nmod_poly_xgcd", "B"], [76, 1, 1, "c.nmod_poly_xgcd", "G"], [76, 1, 1, "c.nmod_poly_xgcd", "S"], [76, 1, 1, "c.nmod_poly_xgcd", "T"]], "nmod_poly_xgcd_euclidean": [[76, 1, 1, "c.nmod_poly_xgcd_euclidean", "A"], [76, 1, 1, "c.nmod_poly_xgcd_euclidean", "B"], [76, 1, 1, "c.nmod_poly_xgcd_euclidean", "G"], [76, 1, 1, "c.nmod_poly_xgcd_euclidean", "S"], [76, 1, 1, "c.nmod_poly_xgcd_euclidean", "T"]], "nmod_poly_xgcd_hgcd": [[76, 1, 1, "c.nmod_poly_xgcd_hgcd", "A"], [76, 1, 1, "c.nmod_poly_xgcd_hgcd", "B"], [76, 1, 1, "c.nmod_poly_xgcd_hgcd", "G"], [76, 1, 1, "c.nmod_poly_xgcd_hgcd", "S"], [76, 1, 1, "c.nmod_poly_xgcd_hgcd", "T"]], "nmod_poly_zero": [[76, 1, 1, "c.nmod_poly_zero", "res"]], "nmod_pow_fmpz": [[72, 1, 1, "c.nmod_pow_fmpz", "a"], [72, 1, 1, "c.nmod_pow_fmpz", "e"], [72, 1, 1, "c.nmod_pow_fmpz", "mod"]], "nmod_pow_ui": [[72, 1, 1, "c.nmod_pow_ui", "a"], [72, 1, 1, "c.nmod_pow_ui", "e"], [72, 1, 1, "c.nmod_pow_ui", "mod"]], "nmod_sub": [[72, 1, 1, "c.nmod_sub", "a"], [72, 1, 1, "c.nmod_sub", "b"], [72, 1, 1, "c.nmod_sub", "mod"]], "padic_add": [[80, 1, 1, "c.padic_add", "ctx"], [80, 1, 1, "c.padic_add", "op1"], [80, 1, 1, "c.padic_add", "op2"], [80, 1, 1, "c.padic_add", "rop"]], "padic_clear": [[80, 1, 1, "c.padic_clear", "rop"]], "padic_ctx_clear": [[80, 1, 1, "c.padic_ctx_clear", "ctx"]], "padic_ctx_init": [[80, 1, 1, "c.padic_ctx_init", "ctx"], [80, 1, 1, "c.padic_ctx_init", "max"], [80, 1, 1, "c.padic_ctx_init", "min"], [80, 1, 1, "c.padic_ctx_init", "mode"], [80, 1, 1, "c.padic_ctx_init", "p"]], "padic_debug": [[80, 1, 1, "c.padic_debug", "op"]], "padic_div": [[80, 1, 1, "c.padic_div", "ctx"], [80, 1, 1, "c.padic_div", "op1"], [80, 1, 1, "c.padic_div", "op2"], [80, 1, 1, "c.padic_div", "rop"]], "padic_equal": [[80, 1, 1, "c.padic_equal", "op1"], [80, 1, 1, "c.padic_equal", "op2"]], "padic_exp": [[80, 1, 1, "c.padic_exp", "ctx"], [80, 1, 1, "c.padic_exp", "x"], [80, 1, 1, "c.padic_exp", "y"]], "padic_exp_balanced": [[80, 1, 1, "c.padic_exp_balanced", "ctx"], [80, 1, 1, "c.padic_exp_balanced", "x"], [80, 1, 1, "c.padic_exp_balanced", "y"]], "padic_exp_rectangular": [[80, 1, 1, "c.padic_exp_rectangular", "ctx"], [80, 1, 1, "c.padic_exp_rectangular", "x"], [80, 1, 1, "c.padic_exp_rectangular", "y"]], "padic_fprint": [[80, 1, 1, "c.padic_fprint", "ctx"], [80, 1, 1, "c.padic_fprint", "file"], [80, 1, 1, "c.padic_fprint", "op"]], "padic_get_fmpq": [[80, 1, 1, "c.padic_get_fmpq", "ctx"], [80, 1, 1, "c.padic_get_fmpq", "op"], [80, 1, 1, "c.padic_get_fmpq", "rop"]], "padic_get_fmpz": [[80, 1, 1, "c.padic_get_fmpz", "ctx"], [80, 1, 1, "c.padic_get_fmpz", "op"], [80, 1, 1, "c.padic_get_fmpz", "rop"]], "padic_get_mpq": [[80, 1, 1, "c.padic_get_mpq", "ctx"], [80, 1, 1, "c.padic_get_mpq", "op"], [80, 1, 1, "c.padic_get_mpq", "rop"]], "padic_get_mpz": [[80, 1, 1, "c.padic_get_mpz", "ctx"], [80, 1, 1, "c.padic_get_mpz", "op"], [80, 1, 1, "c.padic_get_mpz", "rop"]], "padic_get_prec": [[80, 1, 1, "c.padic_get_prec", "op"]], "padic_get_str": [[80, 1, 1, "c.padic_get_str", "ctx"], [80, 1, 1, "c.padic_get_str", "op"], [80, 1, 1, "c.padic_get_str", "str"]], "padic_get_val": [[80, 1, 1, "c.padic_get_val", "op"]], "padic_init": [[80, 1, 1, "c.padic_init", "rop"]], "padic_init2": [[80, 1, 1, "c.padic_init2", "N"], [80, 1, 1, "c.padic_init2", "rop"]], "padic_inv": [[80, 1, 1, "c.padic_inv", "ctx"], [80, 1, 1, "c.padic_inv", "op"], [80, 1, 1, "c.padic_inv", "rop"]], "padic_is_one": [[80, 1, 1, "c.padic_is_one", "op"]], "padic_is_zero": [[80, 1, 1, "c.padic_is_zero", "op"]], "padic_log": [[80, 1, 1, "c.padic_log", "ctx"], [80, 1, 1, "c.padic_log", "op"], [80, 1, 1, "c.padic_log", "rop"]], "padic_log_balanced": [[80, 1, 1, "c.padic_log_balanced", "ctx"], [80, 1, 1, "c.padic_log_balanced", "op"], [80, 1, 1, "c.padic_log_balanced", "rop"]], "padic_log_rectangular": [[80, 1, 1, "c.padic_log_rectangular", "ctx"], [80, 1, 1, "c.padic_log_rectangular", "op"], [80, 1, 1, "c.padic_log_rectangular", "rop"]], "padic_log_satoh": [[80, 1, 1, "c.padic_log_satoh", "ctx"], [80, 1, 1, "c.padic_log_satoh", "op"], [80, 1, 1, "c.padic_log_satoh", "rop"]], "padic_mat": [[81, 1, 1, "c.padic_mat", "A"]], "padic_mat_add": [[81, 1, 1, "c.padic_mat_add", "A"], [81, 1, 1, "c.padic_mat_add", "B"], [81, 1, 1, "c.padic_mat_add", "C"], [81, 1, 1, "c.padic_mat_add", "ctx"]], "padic_mat_clear": [[81, 1, 1, "c.padic_mat_clear", "A"]], "padic_mat_entry": [[81, 1, 1, "c.padic_mat_entry", "A"], [81, 1, 1, "c.padic_mat_entry", "i"], [81, 1, 1, "c.padic_mat_entry", "j"]], "padic_mat_equal": [[81, 1, 1, "c.padic_mat_equal", "A"], [81, 1, 1, "c.padic_mat_equal", "B"]], "padic_mat_fprint": [[81, 1, 1, "c.padic_mat_fprint", "A"], [81, 1, 1, "c.padic_mat_fprint", "ctx"], [81, 1, 1, "c.padic_mat_fprint", "file"]], "padic_mat_fprint_pretty": [[81, 1, 1, "c.padic_mat_fprint_pretty", "A"], [81, 1, 1, "c.padic_mat_fprint_pretty", "ctx"], [81, 1, 1, "c.padic_mat_fprint_pretty", "file"]], "padic_mat_get_entry_padic": [[81, 1, 1, "c.padic_mat_get_entry_padic", "ctx"], [81, 1, 1, "c.padic_mat_get_entry_padic", "i"], [81, 1, 1, "c.padic_mat_get_entry_padic", "j"], [81, 1, 1, "c.padic_mat_get_entry_padic", "op"], [81, 1, 1, "c.padic_mat_get_entry_padic", "rop"]], "padic_mat_get_fmpq_mat": [[81, 1, 1, "c.padic_mat_get_fmpq_mat", "A"], [81, 1, 1, "c.padic_mat_get_fmpq_mat", "B"], [81, 1, 1, "c.padic_mat_get_fmpq_mat", "ctx"]], "padic_mat_get_prec": [[81, 1, 1, "c.padic_mat_get_prec", "A"]], "padic_mat_get_val": [[81, 1, 1, "c.padic_mat_get_val", "A"]], "padic_mat_init": [[81, 1, 1, "c.padic_mat_init", "A"], [81, 1, 1, "c.padic_mat_init", "c"], [81, 1, 1, "c.padic_mat_init", "r"]], "padic_mat_init2": [[81, 1, 1, "c.padic_mat_init2", "A"], [81, 1, 1, "c.padic_mat_init2", "c"], [81, 1, 1, "c.padic_mat_init2", "prec"], [81, 1, 1, "c.padic_mat_init2", "r"]], "padic_mat_is_canonical": [[81, 1, 1, "c.padic_mat_is_canonical", "A"], [81, 1, 1, "c.padic_mat_is_canonical", "p"]], "padic_mat_is_empty": [[81, 1, 1, "c.padic_mat_is_empty", "A"]], "padic_mat_is_square": [[81, 1, 1, "c.padic_mat_is_square", "A"]], "padic_mat_is_zero": [[81, 1, 1, "c.padic_mat_is_zero", "A"]], "padic_mat_mul": [[81, 1, 1, "c.padic_mat_mul", "A"], [81, 1, 1, "c.padic_mat_mul", "B"], [81, 1, 1, "c.padic_mat_mul", "C"], [81, 1, 1, "c.padic_mat_mul", "ctx"]], "padic_mat_ncols": [[81, 1, 1, "c.padic_mat_ncols", "A"]], "padic_mat_neg": [[81, 1, 1, "c.padic_mat_neg", "A"], [81, 1, 1, "c.padic_mat_neg", "B"], [81, 1, 1, "c.padic_mat_neg", "ctx"]], "padic_mat_nrows": [[81, 1, 1, "c.padic_mat_nrows", "A"]], "padic_mat_one": [[81, 1, 1, "c.padic_mat_one", "A"]], "padic_mat_prec": [[81, 1, 1, "c.padic_mat_prec", "A"]], "padic_mat_print": [[81, 1, 1, "c.padic_mat_print", "A"], [81, 1, 1, "c.padic_mat_print", "ctx"]], "padic_mat_print_pretty": [[81, 1, 1, "c.padic_mat_print_pretty", "A"], [81, 1, 1, "c.padic_mat_print_pretty", "ctx"]], "padic_mat_randtest": [[81, 1, 1, "c.padic_mat_randtest", "A"], [81, 1, 1, "c.padic_mat_randtest", "ctx"], [81, 1, 1, "c.padic_mat_randtest", "state"]], "padic_mat_reduce": [[81, 1, 1, "c.padic_mat_reduce", "A"], [81, 1, 1, "c.padic_mat_reduce", "ctx"]], "padic_mat_scalar_div_fmpz": [[81, 1, 1, "c.padic_mat_scalar_div_fmpz", "A"], [81, 1, 1, "c.padic_mat_scalar_div_fmpz", "B"], [81, 1, 1, "c.padic_mat_scalar_div_fmpz", "c"], [81, 1, 1, "c.padic_mat_scalar_div_fmpz", "ctx"]], "padic_mat_scalar_mul_fmpz": [[81, 1, 1, "c.padic_mat_scalar_mul_fmpz", "A"], [81, 1, 1, "c.padic_mat_scalar_mul_fmpz", "B"], [81, 1, 1, "c.padic_mat_scalar_mul_fmpz", "c"], [81, 1, 1, "c.padic_mat_scalar_mul_fmpz", "ctx"]], "padic_mat_scalar_mul_padic": [[81, 1, 1, "c.padic_mat_scalar_mul_padic", "A"], [81, 1, 1, "c.padic_mat_scalar_mul_padic", "B"], [81, 1, 1, "c.padic_mat_scalar_mul_padic", "c"], [81, 1, 1, "c.padic_mat_scalar_mul_padic", "ctx"]], "padic_mat_set": [[81, 1, 1, "c.padic_mat_set", "A"], [81, 1, 1, "c.padic_mat_set", "B"]], "padic_mat_set_entry_padic": [[81, 1, 1, "c.padic_mat_set_entry_padic", "ctx"], [81, 1, 1, "c.padic_mat_set_entry_padic", "i"], [81, 1, 1, "c.padic_mat_set_entry_padic", "j"], [81, 1, 1, "c.padic_mat_set_entry_padic", "op"], [81, 1, 1, "c.padic_mat_set_entry_padic", "rop"]], "padic_mat_set_fmpq_mat": [[81, 1, 1, "c.padic_mat_set_fmpq_mat", "A"], [81, 1, 1, "c.padic_mat_set_fmpq_mat", "B"], [81, 1, 1, "c.padic_mat_set_fmpq_mat", "ctx"]], "padic_mat_sub": [[81, 1, 1, "c.padic_mat_sub", "A"], [81, 1, 1, "c.padic_mat_sub", "B"], [81, 1, 1, "c.padic_mat_sub", "C"], [81, 1, 1, "c.padic_mat_sub", "ctx"]], "padic_mat_swap": [[81, 1, 1, "c.padic_mat_swap", "A"], [81, 1, 1, "c.padic_mat_swap", "B"]], "padic_mat_swap_entrywise": [[81, 1, 1, "c.padic_mat_swap_entrywise", "mat1"], [81, 1, 1, "c.padic_mat_swap_entrywise", "mat2"]], "padic_mat_transpose": [[81, 1, 1, "c.padic_mat_transpose", "A"], [81, 1, 1, "c.padic_mat_transpose", "B"]], "padic_mat_val": [[81, 1, 1, "c.padic_mat_val", "A"]], "padic_mat_zero": [[81, 1, 1, "c.padic_mat_zero", "A"]], "padic_mul": [[80, 1, 1, "c.padic_mul", "ctx"], [80, 1, 1, "c.padic_mul", "op1"], [80, 1, 1, "c.padic_mul", "op2"], [80, 1, 1, "c.padic_mul", "rop"]], "padic_neg": [[80, 1, 1, "c.padic_neg", "ctx"], [80, 1, 1, "c.padic_neg", "op"], [80, 1, 1, "c.padic_neg", "rop"]], "padic_one": [[80, 1, 1, "c.padic_one", "rop"]], "padic_poly_add": [[82, 1, 1, "c.padic_poly_add", "ctx"], [82, 1, 1, "c.padic_poly_add", "f"], [82, 1, 1, "c.padic_poly_add", "g"], [82, 1, 1, "c.padic_poly_add", "h"]], "padic_poly_canonicalise": [[82, 1, 1, "c.padic_poly_canonicalise", "p"], [82, 1, 1, "c.padic_poly_canonicalise", "poly"]], "padic_poly_clear": [[82, 1, 1, "c.padic_poly_clear", "poly"]], "padic_poly_compose": [[82, 1, 1, "c.padic_poly_compose", "ctx"], [82, 1, 1, "c.padic_poly_compose", "op1"], [82, 1, 1, "c.padic_poly_compose", "op2"], [82, 1, 1, "c.padic_poly_compose", "rop"]], "padic_poly_compose_pow": [[82, 1, 1, "c.padic_poly_compose_pow", "ctx"], [82, 1, 1, "c.padic_poly_compose_pow", "k"], [82, 1, 1, "c.padic_poly_compose_pow", "op"], [82, 1, 1, "c.padic_poly_compose_pow", "rop"]], "padic_poly_debug": [[82, 1, 1, "c.padic_poly_debug", "poly"]], "padic_poly_degree": [[82, 1, 1, "c.padic_poly_degree", "poly"]], "padic_poly_derivative": [[82, 1, 1, "c.padic_poly_derivative", "ctx"], [82, 1, 1, "c.padic_poly_derivative", "op"], [82, 1, 1, "c.padic_poly_derivative", "rop"]], "padic_poly_equal": [[82, 1, 1, "c.padic_poly_equal", "poly1"], [82, 1, 1, "c.padic_poly_equal", "poly2"]], "padic_poly_evaluate_padic": [[82, 1, 1, "c.padic_poly_evaluate_padic", "a"], [82, 1, 1, "c.padic_poly_evaluate_padic", "ctx"], [82, 1, 1, "c.padic_poly_evaluate_padic", "poly"], [82, 1, 1, "c.padic_poly_evaluate_padic", "y"]], "padic_poly_fit_length": [[82, 1, 1, "c.padic_poly_fit_length", "len"], [82, 1, 1, "c.padic_poly_fit_length", "poly"]], "padic_poly_fprint": [[82, 1, 1, "c.padic_poly_fprint", "ctx"], [82, 1, 1, "c.padic_poly_fprint", "file"], [82, 1, 1, "c.padic_poly_fprint", "poly"]], "padic_poly_fprint_pretty": [[82, 1, 1, "c.padic_poly_fprint_pretty", "ctx"], [82, 1, 1, "c.padic_poly_fprint_pretty", "file"], [82, 1, 1, "c.padic_poly_fprint_pretty", "poly"], [82, 1, 1, "c.padic_poly_fprint_pretty", "var"]], "padic_poly_get_coeff_padic": [[82, 1, 1, "c.padic_poly_get_coeff_padic", "c"], [82, 1, 1, "c.padic_poly_get_coeff_padic", "ctx"], [82, 1, 1, "c.padic_poly_get_coeff_padic", "n"], [82, 1, 1, "c.padic_poly_get_coeff_padic", "poly"]], "padic_poly_get_fmpq_poly": [[82, 1, 1, "c.padic_poly_get_fmpq_poly", "ctx"], [82, 1, 1, "c.padic_poly_get_fmpq_poly", "op"], [82, 1, 1, "c.padic_poly_get_fmpq_poly", "rop"]], "padic_poly_get_fmpz_poly": [[82, 1, 1, "c.padic_poly_get_fmpz_poly", "ctx"], [82, 1, 1, "c.padic_poly_get_fmpz_poly", "op"], [82, 1, 1, "c.padic_poly_get_fmpz_poly", "rop"]], "padic_poly_init": [[82, 1, 1, "c.padic_poly_init", "poly"]], "padic_poly_init2": [[82, 1, 1, "c.padic_poly_init2", "alloc"], [82, 1, 1, "c.padic_poly_init2", "poly"], [82, 1, 1, "c.padic_poly_init2", "prec"]], "padic_poly_inv_series": [[82, 1, 1, "c.padic_poly_inv_series", "ctx"], [82, 1, 1, "c.padic_poly_inv_series", "f"], [82, 1, 1, "c.padic_poly_inv_series", "g"], [82, 1, 1, "c.padic_poly_inv_series", "n"]], "padic_poly_is_canonical": [[82, 1, 1, "c.padic_poly_is_canonical", "ctx"], [82, 1, 1, "c.padic_poly_is_canonical", "op"]], "padic_poly_is_one": [[82, 1, 1, "c.padic_poly_is_one", "ctx"], [82, 1, 1, "c.padic_poly_is_one", "poly"]], "padic_poly_is_reduced": [[82, 1, 1, "c.padic_poly_is_reduced", "ctx"], [82, 1, 1, "c.padic_poly_is_reduced", "op"]], "padic_poly_is_zero": [[82, 1, 1, "c.padic_poly_is_zero", "poly"]], "padic_poly_length": [[82, 1, 1, "c.padic_poly_length", "poly"]], "padic_poly_mul": [[82, 1, 1, "c.padic_poly_mul", "ctx"], [82, 1, 1, "c.padic_poly_mul", "poly1"], [82, 1, 1, "c.padic_poly_mul", "poly2"], [82, 1, 1, "c.padic_poly_mul", "res"]], "padic_poly_neg": [[82, 1, 1, "c.padic_poly_neg", "ctx"], [82, 1, 1, "c.padic_poly_neg", "f"], [82, 1, 1, "c.padic_poly_neg", "g"]], "padic_poly_one": [[82, 1, 1, "c.padic_poly_one", "poly"]], "padic_poly_pow": [[82, 1, 1, "c.padic_poly_pow", "ctx"], [82, 1, 1, "c.padic_poly_pow", "e"], [82, 1, 1, "c.padic_poly_pow", "op"], [82, 1, 1, "c.padic_poly_pow", "rop"]], "padic_poly_prec": [[82, 1, 1, "c.padic_poly_prec", "poly"]], "padic_poly_print": [[82, 1, 1, "c.padic_poly_print", "ctx"], [82, 1, 1, "c.padic_poly_print", "poly"]], "padic_poly_print_pretty": [[82, 1, 1, "c.padic_poly_print_pretty", "ctx"], [82, 1, 1, "c.padic_poly_print_pretty", "poly"], [82, 1, 1, "c.padic_poly_print_pretty", "var"]], "padic_poly_randtest": [[82, 1, 1, "c.padic_poly_randtest", "ctx"], [82, 1, 1, "c.padic_poly_randtest", "f"], [82, 1, 1, "c.padic_poly_randtest", "len"], [82, 1, 1, "c.padic_poly_randtest", "state"]], "padic_poly_randtest_not_zero": [[82, 1, 1, "c.padic_poly_randtest_not_zero", "ctx"], [82, 1, 1, "c.padic_poly_randtest_not_zero", "f"], [82, 1, 1, "c.padic_poly_randtest_not_zero", "len"], [82, 1, 1, "c.padic_poly_randtest_not_zero", "state"]], "padic_poly_randtest_val": [[82, 1, 1, "c.padic_poly_randtest_val", "ctx"], [82, 1, 1, "c.padic_poly_randtest_val", "f"], [82, 1, 1, "c.padic_poly_randtest_val", "len"], [82, 1, 1, "c.padic_poly_randtest_val", "state"], [82, 1, 1, "c.padic_poly_randtest_val", "val"]], "padic_poly_realloc": [[82, 1, 1, "c.padic_poly_realloc", "alloc"], [82, 1, 1, "c.padic_poly_realloc", "p"], [82, 1, 1, "c.padic_poly_realloc", "poly"]], "padic_poly_reduce": [[82, 1, 1, "c.padic_poly_reduce", "ctx"], [82, 1, 1, "c.padic_poly_reduce", "poly"]], "padic_poly_scalar_mul_padic": [[82, 1, 1, "c.padic_poly_scalar_mul_padic", "c"], [82, 1, 1, "c.padic_poly_scalar_mul_padic", "ctx"], [82, 1, 1, "c.padic_poly_scalar_mul_padic", "op"], [82, 1, 1, "c.padic_poly_scalar_mul_padic", "rop"]], "padic_poly_set": [[82, 1, 1, "c.padic_poly_set", "ctx"], [82, 1, 1, "c.padic_poly_set", "poly1"], [82, 1, 1, "c.padic_poly_set", "poly2"]], "padic_poly_set_coeff_padic": [[82, 1, 1, "c.padic_poly_set_coeff_padic", "c"], [82, 1, 1, "c.padic_poly_set_coeff_padic", "ctx"], [82, 1, 1, "c.padic_poly_set_coeff_padic", "f"], [82, 1, 1, "c.padic_poly_set_coeff_padic", "n"]], "padic_poly_set_fmpq": [[82, 1, 1, "c.padic_poly_set_fmpq", "ctx"], [82, 1, 1, "c.padic_poly_set_fmpq", "poly"], [82, 1, 1, "c.padic_poly_set_fmpq", "x"]], "padic_poly_set_fmpq_poly": [[82, 1, 1, "c.padic_poly_set_fmpq_poly", "ctx"], [82, 1, 1, "c.padic_poly_set_fmpq_poly", "op"], [82, 1, 1, "c.padic_poly_set_fmpq_poly", "rop"]], "padic_poly_set_fmpz": [[82, 1, 1, "c.padic_poly_set_fmpz", "ctx"], [82, 1, 1, "c.padic_poly_set_fmpz", "poly"], [82, 1, 1, "c.padic_poly_set_fmpz", "x"]], "padic_poly_set_fmpz_poly": [[82, 1, 1, "c.padic_poly_set_fmpz_poly", "ctx"], [82, 1, 1, "c.padic_poly_set_fmpz_poly", "op"], [82, 1, 1, "c.padic_poly_set_fmpz_poly", "rop"]], "padic_poly_set_padic": [[82, 1, 1, "c.padic_poly_set_padic", "ctx"], [82, 1, 1, "c.padic_poly_set_padic", "poly"], [82, 1, 1, "c.padic_poly_set_padic", "x"]], "padic_poly_set_si": [[82, 1, 1, "c.padic_poly_set_si", "ctx"], [82, 1, 1, "c.padic_poly_set_si", "poly"], [82, 1, 1, "c.padic_poly_set_si", "x"]], "padic_poly_set_ui": [[82, 1, 1, "c.padic_poly_set_ui", "ctx"], [82, 1, 1, "c.padic_poly_set_ui", "poly"], [82, 1, 1, "c.padic_poly_set_ui", "x"]], "padic_poly_shift_left": [[82, 1, 1, "c.padic_poly_shift_left", "ctx"], [82, 1, 1, "c.padic_poly_shift_left", "n"], [82, 1, 1, "c.padic_poly_shift_left", "op"], [82, 1, 1, "c.padic_poly_shift_left", "rop"]], "padic_poly_shift_right": [[82, 1, 1, "c.padic_poly_shift_right", "n"], [82, 1, 1, "c.padic_poly_shift_right", "op"], [82, 1, 1, "c.padic_poly_shift_right", "rop"]], "padic_poly_sub": [[82, 1, 1, "c.padic_poly_sub", "ctx"], [82, 1, 1, "c.padic_poly_sub", "f"], [82, 1, 1, "c.padic_poly_sub", "g"], [82, 1, 1, "c.padic_poly_sub", "h"]], "padic_poly_swap": [[82, 1, 1, "c.padic_poly_swap", "poly1"], [82, 1, 1, "c.padic_poly_swap", "poly2"]], "padic_poly_truncate": [[82, 1, 1, "c.padic_poly_truncate", "n"], [82, 1, 1, "c.padic_poly_truncate", "p"], [82, 1, 1, "c.padic_poly_truncate", "poly"]], "padic_poly_val": [[82, 1, 1, "c.padic_poly_val", "poly"]], "padic_poly_zero": [[82, 1, 1, "c.padic_poly_zero", "poly"]], "padic_pow_si": [[80, 1, 1, "c.padic_pow_si", "ctx"], [80, 1, 1, "c.padic_pow_si", "e"], [80, 1, 1, "c.padic_pow_si", "op"], [80, 1, 1, "c.padic_pow_si", "rop"]], "padic_prec": [[80, 1, 1, "c.padic_prec", "op"]], "padic_print": [[80, 1, 1, "c.padic_print", "ctx"], [80, 1, 1, "c.padic_print", "op"]], "padic_randtest": [[80, 1, 1, "c.padic_randtest", "ctx"], [80, 1, 1, "c.padic_randtest", "rop"], [80, 1, 1, "c.padic_randtest", "state"]], "padic_randtest_int": [[80, 1, 1, "c.padic_randtest_int", "ctx"], [80, 1, 1, "c.padic_randtest_int", "rop"], [80, 1, 1, "c.padic_randtest_int", "state"]], "padic_randtest_not_zero": [[80, 1, 1, "c.padic_randtest_not_zero", "ctx"], [80, 1, 1, "c.padic_randtest_not_zero", "rop"], [80, 1, 1, "c.padic_randtest_not_zero", "state"]], "padic_reduce": [[80, 1, 1, "c.padic_reduce", "ctx"], [80, 1, 1, "c.padic_reduce", "rop"]], "padic_set": [[80, 1, 1, "c.padic_set", "ctx"], [80, 1, 1, "c.padic_set", "op"], [80, 1, 1, "c.padic_set", "rop"]], "padic_set_fmpq": [[80, 1, 1, "c.padic_set_fmpq", "ctx"], [80, 1, 1, "c.padic_set_fmpq", "op"], [80, 1, 1, "c.padic_set_fmpq", "rop"]], "padic_set_fmpz": [[80, 1, 1, "c.padic_set_fmpz", "ctx"], [80, 1, 1, "c.padic_set_fmpz", "op"], [80, 1, 1, "c.padic_set_fmpz", "rop"]], "padic_set_mpq": [[80, 1, 1, "c.padic_set_mpq", "ctx"], [80, 1, 1, "c.padic_set_mpq", "op"], [80, 1, 1, "c.padic_set_mpq", "rop"]], "padic_set_mpz": [[80, 1, 1, "c.padic_set_mpz", "ctx"], [80, 1, 1, "c.padic_set_mpz", "op"], [80, 1, 1, "c.padic_set_mpz", "rop"]], "padic_set_si": [[80, 1, 1, "c.padic_set_si", "ctx"], [80, 1, 1, "c.padic_set_si", "op"], [80, 1, 1, "c.padic_set_si", "rop"]], "padic_set_ui": [[80, 1, 1, "c.padic_set_ui", "ctx"], [80, 1, 1, "c.padic_set_ui", "op"], [80, 1, 1, "c.padic_set_ui", "rop"]], "padic_shift": [[80, 1, 1, "c.padic_shift", "ctx"], [80, 1, 1, "c.padic_shift", "op"], [80, 1, 1, "c.padic_shift", "rop"], [80, 1, 1, "c.padic_shift", "v"]], "padic_sqrt": [[80, 1, 1, "c.padic_sqrt", "ctx"], [80, 1, 1, "c.padic_sqrt", "op"]], "padic_sub": [[80, 1, 1, "c.padic_sub", "ctx"], [80, 1, 1, "c.padic_sub", "op1"], [80, 1, 1, "c.padic_sub", "op2"], [80, 1, 1, "c.padic_sub", "rop"]], "padic_swap": [[80, 1, 1, "c.padic_swap", "op1"], [80, 1, 1, "c.padic_swap", "op2"]], "padic_teichmuller": [[80, 1, 1, "c.padic_teichmuller", "ctx"], [80, 1, 1, "c.padic_teichmuller", "op"], [80, 1, 1, "c.padic_teichmuller", "rop"]], "padic_unit": [[80, 1, 1, "c.padic_unit", "op"]], "padic_val": [[80, 1, 1, "c.padic_val", "op"]], "padic_val_fac": [[80, 1, 1, "c.padic_val_fac", "op"], [80, 1, 1, "c.padic_val_fac", "p"], [80, 1, 1, "c.padic_val_fac", "rop"]], "padic_val_fac_ui": [[80, 1, 1, "c.padic_val_fac_ui", "n"], [80, 1, 1, "c.padic_val_fac_ui", "p"]], "padic_val_fac_ui_2": [[80, 1, 1, "c.padic_val_fac_ui_2", "n"]], "padic_zero": [[80, 1, 1, "c.padic_zero", "rop"]], "prof_repeat": [[85, 1, 1, "c.prof_repeat", "arg"], [85, 1, 1, "c.prof_repeat", "max"], [85, 1, 1, "c.prof_repeat", "min"], [85, 1, 1, "c.prof_repeat", "target"]], "qadic_add": [[86, 1, 1, "c.qadic_add", "ctx"], [86, 1, 1, "c.qadic_add", "op1"], [86, 1, 1, "c.qadic_add", "op2"], [86, 1, 1, "c.qadic_add", "rop"]], "qadic_clear": [[86, 1, 1, "c.qadic_clear", "rop"]], "qadic_ctx_clear": [[86, 1, 1, "c.qadic_ctx_clear", "ctx"]], "qadic_ctx_degree": [[86, 1, 1, "c.qadic_ctx_degree", "ctx"]], "qadic_ctx_init": [[86, 1, 1, "c.qadic_ctx_init", "ctx"], [86, 1, 1, "c.qadic_ctx_init", "d"], [86, 1, 1, "c.qadic_ctx_init", "max"], [86, 1, 1, "c.qadic_ctx_init", "min"], [86, 1, 1, "c.qadic_ctx_init", "mode"], [86, 1, 1, "c.qadic_ctx_init", "p"], [86, 1, 1, "c.qadic_ctx_init", "var"]], "qadic_ctx_init_conway": [[86, 1, 1, "c.qadic_ctx_init_conway", "ctx"], [86, 1, 1, "c.qadic_ctx_init_conway", "d"], [86, 1, 1, "c.qadic_ctx_init_conway", "max"], [86, 1, 1, "c.qadic_ctx_init_conway", "min"], [86, 1, 1, "c.qadic_ctx_init_conway", "mode"], [86, 1, 1, "c.qadic_ctx_init_conway", "p"], [86, 1, 1, "c.qadic_ctx_init_conway", "var"]], "qadic_ctx_print": [[86, 1, 1, "c.qadic_ctx_print", "ctx"]], "qadic_equal": [[86, 1, 1, "c.qadic_equal", "op1"], [86, 1, 1, "c.qadic_equal", "op2"]], "qadic_exp": [[86, 1, 1, "c.qadic_exp", "ctx"], [86, 1, 1, "c.qadic_exp", "op"], [86, 1, 1, "c.qadic_exp", "rop"]], "qadic_exp_balanced": [[86, 1, 1, "c.qadic_exp_balanced", "ctx"], [86, 1, 1, "c.qadic_exp_balanced", "op"], [86, 1, 1, "c.qadic_exp_balanced", "rop"]], "qadic_exp_rectangular": [[86, 1, 1, "c.qadic_exp_rectangular", "ctx"], [86, 1, 1, "c.qadic_exp_rectangular", "op"], [86, 1, 1, "c.qadic_exp_rectangular", "rop"]], "qadic_fprint_pretty": [[86, 1, 1, "c.qadic_fprint_pretty", "ctx"], [86, 1, 1, "c.qadic_fprint_pretty", "file"], [86, 1, 1, "c.qadic_fprint_pretty", "op"]], "qadic_frobenius": [[86, 1, 1, "c.qadic_frobenius", "ctx"], [86, 1, 1, "c.qadic_frobenius", "e"], [86, 1, 1, "c.qadic_frobenius", "op"], [86, 1, 1, "c.qadic_frobenius", "rop"]], "qadic_gen": [[86, 1, 1, "c.qadic_gen", "ctx"], [86, 1, 1, "c.qadic_gen", "rop"]], "qadic_get_padic": [[86, 1, 1, "c.qadic_get_padic", "ctx"], [86, 1, 1, "c.qadic_get_padic", "op"], [86, 1, 1, "c.qadic_get_padic", "rop"]], "qadic_init": [[86, 1, 1, "c.qadic_init", "rop"]], "qadic_init2": [[86, 1, 1, "c.qadic_init2", "prec"], [86, 1, 1, "c.qadic_init2", "rop"]], "qadic_inv": [[86, 1, 1, "c.qadic_inv", "ctx"], [86, 1, 1, "c.qadic_inv", "op"], [86, 1, 1, "c.qadic_inv", "rop"]], "qadic_is_one": [[86, 1, 1, "c.qadic_is_one", "ctx"], [86, 1, 1, "c.qadic_is_one", "op"]], "qadic_is_zero": [[86, 1, 1, "c.qadic_is_zero", "op"]], "qadic_log": [[86, 1, 1, "c.qadic_log", "ctx"], [86, 1, 1, "c.qadic_log", "op"], [86, 1, 1, "c.qadic_log", "rop"]], "qadic_log_balanced": [[86, 1, 1, "c.qadic_log_balanced", "ctx"], [86, 1, 1, "c.qadic_log_balanced", "op"], [86, 1, 1, "c.qadic_log_balanced", "rop"]], "qadic_log_rectangular": [[86, 1, 1, "c.qadic_log_rectangular", "ctx"], [86, 1, 1, "c.qadic_log_rectangular", "op"], [86, 1, 1, "c.qadic_log_rectangular", "rop"]], "qadic_mul": [[86, 1, 1, "c.qadic_mul", "ctx"], [86, 1, 1, "c.qadic_mul", "op1"], [86, 1, 1, "c.qadic_mul", "op2"], [86, 1, 1, "c.qadic_mul", "rop"]], "qadic_neg": [[86, 1, 1, "c.qadic_neg", "ctx"], [86, 1, 1, "c.qadic_neg", "op"], [86, 1, 1, "c.qadic_neg", "rop"]], "qadic_norm": [[86, 1, 1, "c.qadic_norm", "ctx"], [86, 1, 1, "c.qadic_norm", "op"], [86, 1, 1, "c.qadic_norm", "rop"]], "qadic_norm_analytic": [[86, 1, 1, "c.qadic_norm_analytic", "ctx"], [86, 1, 1, "c.qadic_norm_analytic", "op"], [86, 1, 1, "c.qadic_norm_analytic", "rop"]], "qadic_norm_resultant": [[86, 1, 1, "c.qadic_norm_resultant", "ctx"], [86, 1, 1, "c.qadic_norm_resultant", "op"], [86, 1, 1, "c.qadic_norm_resultant", "rop"]], "qadic_one": [[86, 1, 1, "c.qadic_one", "ctx"], [86, 1, 1, "c.qadic_one", "rop"]], "qadic_pow": [[86, 1, 1, "c.qadic_pow", "ctx"], [86, 1, 1, "c.qadic_pow", "e"], [86, 1, 1, "c.qadic_pow", "op"], [86, 1, 1, "c.qadic_pow", "rop"]], "qadic_prec": [[86, 1, 1, "c.qadic_prec", "op"]], "qadic_print_pretty": [[86, 1, 1, "c.qadic_print_pretty", "ctx"], [86, 1, 1, "c.qadic_print_pretty", "op"]], "qadic_randtest": [[86, 1, 1, "c.qadic_randtest", "ctx"], [86, 1, 1, "c.qadic_randtest", "rop"], [86, 1, 1, "c.qadic_randtest", "state"]], "qadic_randtest_int": [[86, 1, 1, "c.qadic_randtest_int", "ctx"], [86, 1, 1, "c.qadic_randtest_int", "rop"], [86, 1, 1, "c.qadic_randtest_int", "state"]], "qadic_randtest_not_zero": [[86, 1, 1, "c.qadic_randtest_not_zero", "ctx"], [86, 1, 1, "c.qadic_randtest_not_zero", "rop"], [86, 1, 1, "c.qadic_randtest_not_zero", "state"]], "qadic_randtest_val": [[86, 1, 1, "c.qadic_randtest_val", "ctx"], [86, 1, 1, "c.qadic_randtest_val", "rop"], [86, 1, 1, "c.qadic_randtest_val", "state"], [86, 1, 1, "c.qadic_randtest_val", "v"]], "qadic_reduce": [[86, 1, 1, "c.qadic_reduce", "ctx"], [86, 1, 1, "c.qadic_reduce", "rop"]], "qadic_set": [[86, 1, 1, "c.qadic_set", "op"], [86, 1, 1, "c.qadic_set", "rop"]], "qadic_set_ui": [[86, 1, 1, "c.qadic_set_ui", "ctx"], [86, 1, 1, "c.qadic_set_ui", "op"], [86, 1, 1, "c.qadic_set_ui", "rop"]], "qadic_sqrt": [[86, 1, 1, "c.qadic_sqrt", "ctx"], [86, 1, 1, "c.qadic_sqrt", "op"], [86, 1, 1, "c.qadic_sqrt", "rop"]], "qadic_sub": [[86, 1, 1, "c.qadic_sub", "ctx"], [86, 1, 1, "c.qadic_sub", "op1"], [86, 1, 1, "c.qadic_sub", "op2"], [86, 1, 1, "c.qadic_sub", "rop"]], "qadic_teichmuller": [[86, 1, 1, "c.qadic_teichmuller", "ctx"], [86, 1, 1, "c.qadic_teichmuller", "op"], [86, 1, 1, "c.qadic_teichmuller", "rop"]], "qadic_trace": [[86, 1, 1, "c.qadic_trace", "ctx"], [86, 1, 1, "c.qadic_trace", "op"], [86, 1, 1, "c.qadic_trace", "rop"]], "qadic_val": [[86, 1, 1, "c.qadic_val", "op"]], "qadic_zero": [[86, 1, 1, "c.qadic_zero", "rop"]], "qsieve_add_to_hashtable": [[87, 1, 1, "c.qsieve_add_to_hashtable", "prime"], [87, 1, 1, "c.qsieve_add_to_hashtable", "qs_inf"]], "qsieve_collect_relations": [[87, 1, 1, "c.qsieve_collect_relations", "qs_inf"], [87, 1, 1, "c.qsieve_collect_relations", "sieve"]], "qsieve_compare_relation": [[87, 1, 1, "c.qsieve_compare_relation", "a"], [87, 1, 1, "c.qsieve_compare_relation", "b"]], "qsieve_compute_C": [[87, 1, 1, "c.qsieve_compute_C", "qs_inf"]], "qsieve_compute_pre_data": [[87, 1, 1, "c.qsieve_compute_pre_data", "qs_inf"]], "qsieve_do_sieving": [[87, 1, 1, "c.qsieve_do_sieving", "qs_inf"], [87, 1, 1, "c.qsieve_do_sieving", "sieve"]], "qsieve_do_sieving2": [[87, 1, 1, "c.qsieve_do_sieving2", "qs_inf"]], "qsieve_evaluate_candidate": [[87, 1, 1, "c.qsieve_evaluate_candidate", "i"], [87, 1, 1, "c.qsieve_evaluate_candidate", "qs_inf"], [87, 1, 1, "c.qsieve_evaluate_candidate", "sieve"]], "qsieve_evaluate_sieve": [[87, 1, 1, "c.qsieve_evaluate_sieve", "qs_inf"], [87, 1, 1, "c.qsieve_evaluate_sieve", "sieve"]], "qsieve_factor": [[87, 1, 1, "c.qsieve_factor", "factors"], [87, 1, 1, "c.qsieve_factor", "n"]], "qsieve_get_table_entry": [[87, 1, 1, "c.qsieve_get_table_entry", "prime"], [87, 1, 1, "c.qsieve_get_table_entry", "qs_inf"]], "qsieve_init_A0": [[87, 1, 1, "c.qsieve_init_A0", "qs_inf"]], "qsieve_init_poly_first": [[87, 1, 1, "c.qsieve_init_poly_first", "qs_inf"]], "qsieve_init_poly_next": [[87, 1, 1, "c.qsieve_init_poly_next", "qs_inf"]], "qsieve_insert_relation2": [[87, 1, 1, "c.qsieve_insert_relation2", "num_relations"], [87, 1, 1, "c.qsieve_insert_relation2", "qs_inf"], [87, 1, 1, "c.qsieve_insert_relation2", "rel_list"]], "qsieve_knuth_schroeppel": [[87, 1, 1, "c.qsieve_knuth_schroeppel", "qs_inf"]], "qsieve_merge_relation": [[87, 1, 1, "c.qsieve_merge_relation", "a"], [87, 1, 1, "c.qsieve_merge_relation", "b"], [87, 1, 1, "c.qsieve_merge_relation", "qs_inf"]], "qsieve_next_A0": [[87, 1, 1, "c.qsieve_next_A0", "qs_inf"]], "qsieve_parse_relation": [[87, 1, 1, "c.qsieve_parse_relation", "qs_inf"], [87, 1, 1, "c.qsieve_parse_relation", "str"]], "qsieve_primes_increment": [[87, 1, 1, "c.qsieve_primes_increment", "delta"], [87, 1, 1, "c.qsieve_primes_increment", "qs_inf"]], "qsieve_primes_init": [[87, 1, 1, "c.qsieve_primes_init", "qs_inf"]], "qsieve_process_relation": [[87, 1, 1, "c.qsieve_process_relation", "qs_inf"]], "qsieve_remove_duplicates": [[87, 1, 1, "c.qsieve_remove_duplicates", "num_relations"], [87, 1, 1, "c.qsieve_remove_duplicates", "rel_list"]], "qsieve_write_to_file": [[87, 1, 1, "c.qsieve_write_to_file", "Y"], [87, 1, 1, "c.qsieve_write_to_file", "prime"], [87, 1, 1, "c.qsieve_write_to_file", "qs_inf"]], "signed_mpn_sub_n": [[76, 1, 1, "c.signed_mpn_sub_n", "n"], [76, 1, 1, "c.signed_mpn_sub_n", "op1"], [76, 1, 1, "c.signed_mpn_sub_n", "op2"], [76, 1, 1, "c.signed_mpn_sub_n", "res"]], "start_clock": [[85, 1, 1, "c.start_clock", "n"]], "stop_clock": [[85, 1, 1, "c.stop_clock", "n"]], "thread_pool_clear": [[89, 1, 1, "c.thread_pool_clear", "T"]], "thread_pool_get_size": [[89, 1, 1, "c.thread_pool_get_size", "T"]], "thread_pool_give_back": [[89, 1, 1, "c.thread_pool_give_back", "T"], [89, 1, 1, "c.thread_pool_give_back", "i"]], "thread_pool_init": [[89, 1, 1, "c.thread_pool_init", "T"], [89, 1, 1, "c.thread_pool_init", "size"]], "thread_pool_request": [[89, 1, 1, "c.thread_pool_request", "T"], [89, 1, 1, "c.thread_pool_request", "out"], [89, 1, 1, "c.thread_pool_request", "requested"]], "thread_pool_set_size": [[89, 1, 1, "c.thread_pool_set_size", "T"], [89, 1, 1, "c.thread_pool_set_size", "new_size"]], "thread_pool_wait": [[89, 1, 1, "c.thread_pool_wait", "T"], [89, 1, 1, "c.thread_pool_wait", "i"]], "thread_pool_wake": [[89, 1, 1, "c.thread_pool_wake", "T"], [89, 1, 1, "c.thread_pool_wake", "a"], [89, 1, 1, "c.thread_pool_wake", "f"], [89, 1, 1, "c.thread_pool_wake", "i"], [89, 1, 1, "c.thread_pool_wake", "max_workers"]], "timeit_start": [[85, 1, 1, "c.timeit_start", "t"]], "timeit_stop": [[85, 1, 1, "c.timeit_stop", "t"]], "unity_zp_add": [[0, 1, 1, "c.unity_zp_add", "f"], [0, 1, 1, "c.unity_zp_add", "g"], [0, 1, 1, "c.unity_zp_add", "h"]], "unity_zp_aut": [[0, 1, 1, "c.unity_zp_aut", "f"], [0, 1, 1, "c.unity_zp_aut", "g"], [0, 1, 1, "c.unity_zp_aut", "x"]], "unity_zp_aut_inv": [[0, 1, 1, "c.unity_zp_aut_inv", "f"], [0, 1, 1, "c.unity_zp_aut_inv", "g"], [0, 1, 1, "c.unity_zp_aut_inv", "x"]], "unity_zp_clear": [[0, 1, 1, "c.unity_zp_clear", "f"]], "unity_zp_coeff_add_fmpz": [[0, 1, 1, "c.unity_zp_coeff_add_fmpz", "f"], [0, 1, 1, "c.unity_zp_coeff_add_fmpz", "ind"], [0, 1, 1, "c.unity_zp_coeff_add_fmpz", "x"]], "unity_zp_coeff_add_ui": [[0, 1, 1, "c.unity_zp_coeff_add_ui", "f"], [0, 1, 1, "c.unity_zp_coeff_add_ui", "ind"], [0, 1, 1, "c.unity_zp_coeff_add_ui", "x"]], "unity_zp_coeff_dec": [[0, 1, 1, "c.unity_zp_coeff_dec", "f"], [0, 1, 1, "c.unity_zp_coeff_dec", "ind"]], "unity_zp_coeff_inc": [[0, 1, 1, "c.unity_zp_coeff_inc", "f"], [0, 1, 1, "c.unity_zp_coeff_inc", "ind"]], "unity_zp_coeff_set_fmpz": [[0, 1, 1, "c.unity_zp_coeff_set_fmpz", "f"], [0, 1, 1, "c.unity_zp_coeff_set_fmpz", "ind"], [0, 1, 1, "c.unity_zp_coeff_set_fmpz", "x"]], "unity_zp_coeff_set_ui": [[0, 1, 1, "c.unity_zp_coeff_set_ui", "f"], [0, 1, 1, "c.unity_zp_coeff_set_ui", "ind"], [0, 1, 1, "c.unity_zp_coeff_set_ui", "x"]], "unity_zp_copy": [[0, 1, 1, "c.unity_zp_copy", "f"], [0, 1, 1, "c.unity_zp_copy", "g"]], "unity_zp_equal": [[0, 1, 1, "c.unity_zp_equal", "f"], [0, 1, 1, "c.unity_zp_equal", "g"]], "unity_zp_init": [[0, 1, 1, "c.unity_zp_init", "exp"], [0, 1, 1, "c.unity_zp_init", "f"], [0, 1, 1, "c.unity_zp_init", "n"], [0, 1, 1, "c.unity_zp_init", "p"]], "unity_zp_is_unity": [[0, 1, 1, "c.unity_zp_is_unity", "f"]], "unity_zp_jacobi_sum_2q_one": [[0, 1, 1, "c.unity_zp_jacobi_sum_2q_one", "f"], [0, 1, 1, "c.unity_zp_jacobi_sum_2q_one", "q"]], "unity_zp_jacobi_sum_2q_two": [[0, 1, 1, "c.unity_zp_jacobi_sum_2q_two", "f"], [0, 1, 1, "c.unity_zp_jacobi_sum_2q_two", "q"]], "unity_zp_jacobi_sum_pq": [[0, 1, 1, "c.unity_zp_jacobi_sum_pq", "f"], [0, 1, 1, "c.unity_zp_jacobi_sum_pq", "p"], [0, 1, 1, "c.unity_zp_jacobi_sum_pq", "q"]], "unity_zp_mul": [[0, 1, 1, "c.unity_zp_mul", "f"], [0, 1, 1, "c.unity_zp_mul", "g"], [0, 1, 1, "c.unity_zp_mul", "h"]], "unity_zp_mul_inplace": [[0, 1, 1, "c.unity_zp_mul_inplace", "f"], [0, 1, 1, "c.unity_zp_mul_inplace", "g"], [0, 1, 1, "c.unity_zp_mul_inplace", "h"], [0, 1, 1, "c.unity_zp_mul_inplace", "t"]], "unity_zp_mul_scalar_fmpz": [[0, 1, 1, "c.unity_zp_mul_scalar_fmpz", "f"], [0, 1, 1, "c.unity_zp_mul_scalar_fmpz", "g"], [0, 1, 1, "c.unity_zp_mul_scalar_fmpz", "s"]], "unity_zp_mul_scalar_ui": [[0, 1, 1, "c.unity_zp_mul_scalar_ui", "f"], [0, 1, 1, "c.unity_zp_mul_scalar_ui", "g"], [0, 1, 1, "c.unity_zp_mul_scalar_ui", "s"]], "unity_zp_pow_2k_fmpz": [[0, 1, 1, "c.unity_zp_pow_2k_fmpz", "f"], [0, 1, 1, "c.unity_zp_pow_2k_fmpz", "g"], [0, 1, 1, "c.unity_zp_pow_2k_fmpz", "pow"]], "unity_zp_pow_2k_ui": [[0, 1, 1, "c.unity_zp_pow_2k_ui", "f"], [0, 1, 1, "c.unity_zp_pow_2k_ui", "g"], [0, 1, 1, "c.unity_zp_pow_2k_ui", "pow"]], "unity_zp_pow_fmpz": [[0, 1, 1, "c.unity_zp_pow_fmpz", "f"], [0, 1, 1, "c.unity_zp_pow_fmpz", "g"], [0, 1, 1, "c.unity_zp_pow_fmpz", "pow"]], "unity_zp_pow_sliding_fmpz": [[0, 1, 1, "c.unity_zp_pow_sliding_fmpz", "f"], [0, 1, 1, "c.unity_zp_pow_sliding_fmpz", "g"], [0, 1, 1, "c.unity_zp_pow_sliding_fmpz", "pow"]], "unity_zp_pow_ui": [[0, 1, 1, "c.unity_zp_pow_ui", "f"], [0, 1, 1, "c.unity_zp_pow_ui", "g"], [0, 1, 1, "c.unity_zp_pow_ui", "pow"]], "unity_zp_print": [[0, 1, 1, "c.unity_zp_print", "f"]], "unity_zp_reduce_cyclotomic": [[0, 1, 1, "c.unity_zp_reduce_cyclotomic", "f"], [0, 1, 1, "c.unity_zp_reduce_cyclotomic", "g"]], "unity_zp_set_zero": [[0, 1, 1, "c.unity_zp_set_zero", "f"]], "unity_zp_sqr": [[0, 1, 1, "c.unity_zp_sqr", "f"], [0, 1, 1, "c.unity_zp_sqr", "g"]], "unity_zp_sqr_inplace": [[0, 1, 1, "c.unity_zp_sqr_inplace", "f"], [0, 1, 1, "c.unity_zp_sqr_inplace", "g"], [0, 1, 1, "c.unity_zp_sqr_inplace", "t"]], "unity_zp_swap": [[0, 1, 1, "c.unity_zp_swap", "f"], [0, 1, 1, "c.unity_zp_swap", "q"]], "unity_zpq_add": [[0, 1, 1, "c.unity_zpq_add", "f"], [0, 1, 1, "c.unity_zpq_add", "g"], [0, 1, 1, "c.unity_zpq_add", "h"]], "unity_zpq_clear": [[0, 1, 1, "c.unity_zpq_clear", "f"]], "unity_zpq_coeff_add": [[0, 1, 1, "c.unity_zpq_coeff_add", "f"], [0, 1, 1, "c.unity_zpq_coeff_add", "i"], [0, 1, 1, "c.unity_zpq_coeff_add", "j"], [0, 1, 1, "c.unity_zpq_coeff_add", "x"]], "unity_zpq_coeff_set_fmpz": [[0, 1, 1, "c.unity_zpq_coeff_set_fmpz", "f"], [0, 1, 1, "c.unity_zpq_coeff_set_fmpz", "i"], [0, 1, 1, "c.unity_zpq_coeff_set_fmpz", "j"], [0, 1, 1, "c.unity_zpq_coeff_set_fmpz", "x"]], "unity_zpq_coeff_set_ui": [[0, 1, 1, "c.unity_zpq_coeff_set_ui", "f"], [0, 1, 1, "c.unity_zpq_coeff_set_ui", "i"], [0, 1, 1, "c.unity_zpq_coeff_set_ui", "j"], [0, 1, 1, "c.unity_zpq_coeff_set_ui", "x"]], "unity_zpq_copy": [[0, 1, 1, "c.unity_zpq_copy", "f"], [0, 1, 1, "c.unity_zpq_copy", "g"]], "unity_zpq_equal": [[0, 1, 1, "c.unity_zpq_equal", "f"], [0, 1, 1, "c.unity_zpq_equal", "g"]], "unity_zpq_gauss_sum": [[0, 1, 1, "c.unity_zpq_gauss_sum", "f"], [0, 1, 1, "c.unity_zpq_gauss_sum", "p"], [0, 1, 1, "c.unity_zpq_gauss_sum", "q"]], "unity_zpq_gauss_sum_sigma_pow": [[0, 1, 1, "c.unity_zpq_gauss_sum_sigma_pow", "f"], [0, 1, 1, "c.unity_zpq_gauss_sum_sigma_pow", "p"], [0, 1, 1, "c.unity_zpq_gauss_sum_sigma_pow", "q"]], "unity_zpq_init": [[0, 1, 1, "c.unity_zpq_init", "f"], [0, 1, 1, "c.unity_zpq_init", "n"], [0, 1, 1, "c.unity_zpq_init", "p"], [0, 1, 1, "c.unity_zpq_init", "q"]], "unity_zpq_is_p_unity": [[0, 1, 1, "c.unity_zpq_is_p_unity", "f"]], "unity_zpq_is_p_unity_generator": [[0, 1, 1, "c.unity_zpq_is_p_unity_generator", "f"]], "unity_zpq_mul": [[0, 1, 1, "c.unity_zpq_mul", "f"], [0, 1, 1, "c.unity_zpq_mul", "g"], [0, 1, 1, "c.unity_zpq_mul", "h"]], "unity_zpq_mul_unity_p_pow": [[0, 1, 1, "c.unity_zpq_mul_unity_p_pow", "f"], [0, 1, 1, "c.unity_zpq_mul_unity_p_pow", "g"], [0, 1, 1, "c.unity_zpq_mul_unity_p_pow", "k"]], "unity_zpq_p_unity": [[0, 1, 1, "c.unity_zpq_p_unity", "f"]], "unity_zpq_pow": [[0, 1, 1, "c.unity_zpq_pow", "f"], [0, 1, 1, "c.unity_zpq_pow", "g"], [0, 1, 1, "c.unity_zpq_pow", "p"]], "unity_zpq_pow_ui": [[0, 1, 1, "c.unity_zpq_pow_ui", "f"], [0, 1, 1, "c.unity_zpq_pow_ui", "g"], [0, 1, 1, "c.unity_zpq_pow_ui", "p"]], "unity_zpq_swap": [[0, 1, 1, "c.unity_zpq_swap", "f"], [0, 1, 1, "c.unity_zpq_swap", "q"]], "z_kronecker": [[62, 1, 1, "c.z_kronecker", "a"], [62, 1, 1, "c.z_kronecker", "n"]], "z_mul_checked": [[62, 1, 1, "c.z_mul_checked", "a"], [62, 1, 1, "c.z_mul_checked", "b"], [62, 1, 1, "c.z_mul_checked", "c"]], "z_randint": [[62, 1, 1, "c.z_randint", "limit"], [62, 1, 1, "c.z_randint", "state"]], "z_randtest": [[62, 1, 1, "c.z_randtest", "state"]], "z_randtest_not_zero": [[62, 1, 1, "c.z_randtest_not_zero", "state"]], "z_sizeinbase": [[62, 1, 1, "c.z_sizeinbase", "b"], [62, 1, 1, "c.z_sizeinbase", "n"]]}, "objtypes": {"0": "c:function", "1": "c:functionParam", "2": "c:macro", "3": "c:type"}, "objnames": {"0": ["c", "function", "C function"], "1": ["c", "functionParam", "C function parameter"], "2": ["c", "macro", "C macro"], "3": ["c", "type", "C type"]}, "titleterms": {"aprcl": 0, "h": [0, 1, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91], "primal": [0, 18, 91], "test": [0, 3, 9, 16, 18, 26, 31, 39, 40, 48, 49, 51, 52, 57, 58, 76, 82, 91], "function": [0, 1, 7, 9, 10, 11, 12, 14, 16, 18, 20, 24, 29, 34, 36, 37, 43, 46, 54, 62, 63, 70, 71, 74, 76, 79, 80, 86, 90, 91], "configur": [0, 3], "cyclotom": [0, 1], "arithmet": [0, 1, 7, 9, 12, 18, 21, 22, 23, 28, 33, 36, 37, 43, 54, 62, 63, 68, 69, 71, 72, 73, 78, 79, 80, 86, 91], "type": [0, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 51, 52, 54, 56, 57, 58, 73, 74, 75, 76, 77, 78, 84], "memori": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 65, 66, 67, 68, 69, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86], "manag": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 65, 66, 67, 68, 69, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 86], "comparison": [0, 5, 6, 12, 13, 14, 16, 18, 21, 23, 24, 26, 29, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 45, 46, 48, 50, 51, 53, 54, 56, 57, 59, 66, 67, 68, 71, 73, 74, 76, 78, 79, 80, 81, 82, 86], "output": [0, 5, 10, 11, 12, 13, 14, 16, 17, 18, 21, 23, 24, 26, 29, 31, 32, 33, 34, 35, 36, 37, 39, 43, 46, 48, 50, 51, 53, 54, 57, 59, 66, 74, 76, 78, 80, 81, 82, 83, 86], "coeffici": [0, 9, 11, 14, 16, 24, 26, 29, 31, 39, 46, 48, 51, 57, 74, 76, 82], "scalar": [0, 13, 14, 16, 21, 23, 24, 26, 28, 29, 31, 34, 35, 39, 46, 48, 50, 51, 53, 57, 59, 67, 73, 74, 76, 81, 82], "multipl": [0, 1, 5, 9, 13, 14, 16, 21, 23, 24, 26, 28, 29, 31, 34, 35, 38, 39, 42, 45, 46, 48, 50, 51, 53, 56, 57, 59, 66, 67, 70, 73, 74, 76, 81, 82], "addit": [0, 6, 13, 14, 16, 21, 23, 24, 26, 29, 31, 34, 35, 38, 39, 42, 45, 46, 48, 50, 51, 53, 56, 57, 59, 67, 73, 74, 76, 81, 82], "power": [0, 14, 16, 24, 26, 29, 31, 34, 39, 46, 48, 51, 57, 74, 76, 82, 91], "reduct": [0, 12, 13, 20, 21, 31, 33, 35, 72, 76, 78], "automorph": 0, "invers": [0, 13, 21, 23, 26, 31, 33, 38, 42, 45, 73, 78, 82, 91], "jacobi": [0, 91], "sum": [0, 1, 12, 16, 31, 35, 76], "extend": 0, "ring": 0, "arith": 1, "special": [1, 7, 12, 13, 18, 21, 33, 36, 37, 43, 54, 78, 80, 86], "primori": 1, "harmon": 1, "number": [1, 9, 10, 12, 13, 14, 15, 16, 17, 31, 34, 60, 66, 67, 68, 69, 70, 80, 81, 82, 86, 91], "stirl": 1, "bell": 1, "bernoulli": 1, "polynomi": [1, 13, 14, 15, 16, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 38, 39, 40, 42, 45, 46, 47, 48, 49, 51, 52, 56, 57, 58, 71, 73, 74, 75, 76, 77, 78, 82], "euler": 1, "landau": 1, "": [1, 20], "dedekind": [1, 12], "partit": [1, 21], "squar": [1, 14, 16, 24, 26, 29, 31, 39, 46, 48, 51, 57, 73, 74, 76, 86, 91], "bug": 2, "report": 2, "build": 3, "flint": [3, 10, 60, 61, 64, 65, 84, 90], "tl": 3, "reentranc": 3, "singl": [3, 85, 91], "mode": 3, "abi": 3, "architectur": 3, "support": [3, 7, 60, 62, 63, 70, 71], "c": [3, 11, 60], "wrapper": [3, 11], "instal": 3, "us": 3, "modul": [3, 81, 82], "file": 3, "assert": 3, "check": [3, 62], "except": 3, "flint2": 3, "microsoft": 3, "visual": 3, "studio": 3, "solut": 3, "contributor": 4, "d_mat": 5, "doubl": [5, 6, 7], "precis": [5, 6], "matric": [5, 13, 21, 23, 33, 38, 42, 45, 56, 66, 68, 73, 78, 81], "basic": [5, 6, 12, 13, 14, 15, 18, 21, 24, 25, 26, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 66, 67, 68, 71, 73, 74, 75, 76, 78, 79, 81, 82, 86, 91], "assign": [5, 6, 12, 13, 16, 21, 26, 31, 33, 34, 35, 36, 37, 39, 43, 48, 50, 51, 53, 54, 57, 59, 66, 67, 76, 78, 80, 81, 82, 83, 86], "manipul": [5, 6, 14, 15, 18, 20, 21, 24, 25, 26, 29, 30, 31, 32, 33, 35, 38, 39, 42, 45, 46, 47, 48, 50, 51, 53, 56, 57, 59, 66, 67, 68, 71, 73, 74, 75, 76, 78, 79, 82], "random": [5, 7, 10, 12, 13, 14, 16, 18, 20, 21, 23, 24, 29, 33, 38, 42, 45, 46, 56, 62, 66, 70, 73, 74, 76, 78, 79, 81, 91], "matrix": [5, 9, 13, 21, 23, 33, 38, 42, 45, 56, 66, 73, 78, 81], "gener": [5, 9, 12, 13, 14, 18, 20, 21, 23, 24, 29, 33, 38, 42, 45, 46, 56, 60, 66, 70, 73, 74, 78, 81, 91], "input": [5, 10, 11, 12, 13, 14, 16, 17, 18, 21, 23, 24, 26, 29, 31, 32, 33, 34, 35, 46, 50, 53, 59, 66, 74, 76, 78, 80, 81, 82, 83], "transpos": [5, 21, 23, 33, 73, 81], "gram": [5, 13, 66], "schmidt": [5, 13, 66], "orthogonalis": [5, 13, 66], "qr": [5, 66], "decomposit": [5, 21, 23, 38, 42, 45, 56, 66, 73], "d_vec": 6, "vector": [6, 17, 28, 35, 50, 53, 59, 67, 69, 79], "randomis": [6, 17, 26, 31, 34, 35, 36, 37, 39, 43, 48, 50, 51, 53, 54, 57, 59, 67, 68, 80, 82, 83, 86], "subtract": [6, 14, 16, 21, 23, 24, 26, 29, 31, 34, 35, 38, 39, 42, 45, 46, 48, 50, 51, 53, 56, 57, 59, 67, 73, 74, 76, 81, 82], "dot": [6, 17, 20, 28, 35, 50, 53, 59, 67, 79], "product": [6, 13, 17, 20, 21, 26, 28, 31, 35, 50, 53, 59, 67, 76, 79], "norm": [6, 31, 33, 35, 39, 48, 51, 57, 67, 78], "double_extra": 7, "exampl": 8, "program": [8, 90], "fft": [9, 31], "schoenhag": 9, "strassen": 9, "split": 9, "combin": 9, "helper": [9, 76, 90], "modulo": [9, 22], "generalis": 9, "fermat": 9, "butterfli": 9, "radix": [9, 26], "2": 9, "transform": [9, 13, 21, 23, 38, 42, 45, 56, 73], "fourier": 9, "negacycl": 9, "integ": [9, 13, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 60, 72, 73, 74, 75, 76, 77, 78, 79, 91], "convolut": 9, "precach": [9, 31], "global": [10, 11], "definit": 10, "alloc": [10, 65], "thread": [10, 89, 90], "flintxx": 11, "introduct": [11, 60, 61, 80], "express": 11, "templat": 11, "tupl": 11, "refer": [11, 60, 88], "unifi": [11, 37], "access": [11, 13, 16, 23], "convers": [11, 12, 13, 17, 18, 21, 22, 23, 26, 28, 35, 36, 37, 38, 42, 43, 45, 54, 56, 80, 81, 86], "inherit": 11, "notat": 11, "convent": 11, "document": [11, 81, 82], "member": 11, "fmpq": 12, "ration": [12, 13, 14, 15, 16, 17, 34, 60], "macro": [12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 51, 52, 54, 56, 57, 58, 63, 64, 70, 73, 74, 75, 76, 77, 78, 81, 85], "constant": [12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 51, 52, 54, 56, 57, 58, 73, 74, 75, 76, 77, 78], "canonicalis": 12, "modular": [12, 13, 18, 21, 26, 31, 62, 72, 76, 91], "reconstruct": [12, 13, 21, 31], "enumer": 12, "continu": 12, "fraction": 12, "fmpq_mat": 13, "over": [13, 14, 15, 16, 17, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 73, 74, 75, 76, 77, 78, 79, 81, 82, 86], "entri": [13, 81], "window": [13, 21, 23, 38, 42, 45, 56, 73], "concaten": [13, 21, 23, 38, 42, 45, 56, 73], "properti": [13, 18, 33, 38, 42, 45, 56, 62, 73, 76, 78, 86], "kroneck": [13, 21, 91], "trace": [13, 21, 23, 33, 73, 78], "determin": [13, 21, 33, 73, 78], "nonsingular": [13, 21, 73], "solv": [13, 21, 23, 33, 38, 42, 45, 56, 73, 78], "echelon": [13, 21, 23, 38, 42, 45, 56, 73], "form": [13, 21, 23, 31, 38, 42, 45, 56, 73], "characterist": [13, 21, 23, 38, 42, 43, 45, 46, 47, 48, 49, 50, 56, 73], "minim": [13, 21, 23, 31, 38, 42, 45, 56, 73], "fmpq_mpoli": 14, "multivari": [14, 15, 25, 29, 30, 46, 47, 71, 74, 75], "context": [14, 22, 24, 29, 36, 37, 43, 46, 54, 74, 80, 86], "object": [14, 22, 24, 29, 46, 74], "degre": [14, 24, 29, 46, 74], "contain": [14, 24, 29, 46, 74], "oper": [14, 18, 24, 29, 40, 46, 49, 52, 58, 74, 79, 80, 81], "differenti": [14, 24, 29, 46, 74], "integr": [14, 16, 29, 76], "evalu": [14, 16, 24, 26, 29, 31, 33, 34, 39, 46, 48, 51, 57, 74, 76, 78, 82], "divis": [14, 16, 24, 26, 29, 31, 34, 35, 39, 46, 48, 50, 51, 53, 57, 59, 70, 71, 74, 76, 91], "greatest": [14, 16, 18, 24, 26, 29, 31, 39, 46, 48, 51, 57, 74, 76, 91], "common": [14, 16, 18, 24, 26, 29, 31, 39, 46, 48, 51, 57, 74, 76, 91], "divisor": [14, 16, 18, 24, 26, 29, 31, 39, 46, 48, 51, 57, 74, 76, 91], "root": [14, 16, 24, 26, 27, 29, 31, 36, 37, 39, 40, 43, 46, 48, 49, 51, 52, 54, 57, 58, 74, 76, 86, 91], "univari": [14, 16, 24, 29, 31, 39, 40, 46, 48, 49, 51, 52, 57, 58, 74, 76, 77, 78], "fmpq_mpoly_factor": 15, "factoris": [15, 19, 25, 27, 30, 32, 40, 47, 49, 52, 58, 75, 77, 91], "fmpq_poli": 16, "paramet": [16, 20, 31, 39, 48, 51, 57, 82], "numer": 16, "denomin": 16, "swap": 16, "negat": 16, "get": [16, 26, 31, 39, 48, 51, 57, 71, 76, 82], "set": [16, 23, 26, 31, 39, 48, 51, 57, 71, 76, 82], "shift": [16, 20, 26, 31, 39, 48, 51, 57, 76, 82], "euclidean": [16, 31, 39, 48, 51, 57], "seri": [16, 26, 31, 76, 82], "deriv": [16, 26, 31, 34, 39, 48, 51, 57, 76, 82], "transcendent": [16, 76], "orthogon": [16, 31], "interpol": [16, 31, 76], "composit": [16, 26, 31, 39, 48, 51, 57, 76, 82, 83], "revers": [16, 31, 76], "gaussian": [16, 21, 23, 31, 35], "content": [16, 21, 31, 35], "free": [16, 31], "fmpq_vec": 17, "sort": [17, 35], "fmpz": 18, "bit": [18, 31, 35, 36, 43, 54, 76], "pack": [18, 31, 36, 43, 54, 71, 76], "unpack": [18, 71, 76], "logic": 18, "chines": [18, 76, 91], "remaind": [18, 76, 91], "fmpz_factor": 19, "factor": [19, 32, 91], "ellipt": [19, 91], "curv": [19, 91], "ecm": 19, "method": [19, 91], "fmpz_lll": 20, "lll": [20, 21], "heurist": 20, "The": 20, "variou": 20, "babai": 20, "varieti": 20, "ulll": 20, "reduced": 20, "modifi": [20, 21], "main": 20, "fmpz_mat": 21, "rank": [21, 33, 73, 78], "column": 21, "row": [21, 33, 38, 42, 45, 56, 73, 78], "elimin": [21, 23], "strong": [21, 23, 73], "howel": [21, 23, 73], "nullspac": [21, 33, 73, 78], "hermit": 21, "normal": 21, "smith": 21, "choleski": 21, "classic": 21, "fmpz_mod": 22, "discret": [22, 72, 91], "logarithm": [22, 54, 56, 57, 58, 59, 72, 80, 91], "via": [22, 72], "pohlig": [22, 72], "hellman": [22, 72], "fmpz_mod_mat": 23, "mod": [23, 24, 25, 26, 27, 28, 31, 35, 60, 72, 73, 74, 75, 76, 77, 78, 79], "n": [23, 24, 25, 26, 27, 28, 60, 72, 73, 74, 75, 76, 77, 78, 79], "element": 23, "lu": [23, 38, 42, 45, 56, 73], "triangular": [23, 38, 42, 45, 56, 73], "fmpz_mod_mpoli": 24, "intern": [24, 29, 74], "fmpz_mod_mpoly_factor": 25, "fmpz_mod_poli": 26, "attribut": 26, "minpoli": 26, "result": 26, "discrimin": [26, 31], "multipoint": [26, 76], "subproduct": [26, 76], "tree": [26, 76], "inflat": [26, 31, 39, 48, 51, 57, 76], "deflat": [26, 31, 39, 48, 51, 57, 76], "berlekamp": [26, 76], "massei": [26, 76], "algorithm": [26, 32, 76], "fmpz_mod_poly_factor": 27, "find": [27, 40, 49, 52, 58], "fmpz_mod_vec": 28, "fmpz_mpoli": 29, "fmpz_mpoly_factor": 30, "fmpz_poli": 31, "absolut": 31, "valu": 31, "size": [31, 35, 43, 45, 46, 47, 48, 49, 50, 72, 73, 74, 75, 76, 77, 78, 79], "precomput": [31, 91], "p": [31, 35, 60, 80, 81, 82, 86], "pseudo": 31, "newton": 31, "basi": 31, "taylor": [31, 76], "signatur": 31, "hensel": 31, "lift": 31, "fibonacci": 31, "eulerian": 31, "q": 31, "cld": 31, "bound": 31, "fmpz_poly_factor": 32, "fmpz_poly_mat": 33, "fmpz_poly_q": 34, "fmpz_vec": 35, "fq": 36, "finit": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "field": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "fq_default_default": 37, "predic": 37, "fq_default_mat": 38, "print": [38, 42, 45, 56, 73], "reduc": [38, 42, 45, 56, 73], "fq_default_poli": 39, "fq_default_poly_factor": 40, "irreduc": [40, 49, 52, 58], "comput": [41, 44, 55], "isomorph": [41, 44, 55], "embed": [41, 44, 55], "fq_mat": 42, "fq_nmod": 43, "word": [43, 45, 46, 47, 48, 49, 50, 62, 63, 72, 73, 74, 75, 76, 77, 78, 79, 91], "fq_nmod_mat": 45, "fq_nmod_mpoli": 46, "fq_nmod_mpoly_factor": 47, "fq_nmod_poli": 48, "fq_nmod_poly_factor": 49, "fq_nmod_vec": 50, "fq_poli": 51, "fq_poly_factor": 52, "fq_vec": 53, "fq_zech": 54, "zech": [54, 56, 57, 58, 59], "represent": [54, 56, 57, 58, 59], "fq_zech_mat": 56, "fq_zech_poli": 57, "fq_zech_poly_factor": 58, "fq_zech_vec": 59, "fast": 60, "librari": 60, "theori": 60, "util": [60, 70], "adic": [60, 80, 81, 82, 86], "float": [60, 66, 67, 68, 69], "point": [60, 66, 67, 68, 69], "code": 60, "interfac": 60, "what": 61, "i": 61, "maintain": 61, "author": 61, "requir": 61, "structur": [61, 80, 86], "licens": 61, "long_extra": 62, "sign": 62, "longlong": 63, "multi": 63, "auxiliari": 63, "asm": 63, "temporari": 65, "mpf_mat": 66, "mpf": [66, 67], "mpf_vec": 67, "mpfr_mat": 68, "mpfr": [68, 69], "mpfr_vec": 69, "mpn_extra": 70, "limb": 70, "arrai": 70, "gcd": 70, "mpoli": 71, "order": 71, "monomi": 71, "chunk": 71, "chain": 71, "heap": 71, "nmod": 72, "nmod_mat": 73, "exponenti": [73, 80], "nmod_mpoli": 74, "nmod_mpoly_factor": 75, "nmod_poli": 76, "ks2": 76, "ks4": 76, "nmod_poly_factor": 77, "nmod_poly_mat": 78, "nmod_vec": 79, "padic": 80, "data": [80, 86], "padic_mat": 81, "padic_poli": 82, "perm": 83, "permut": 83, "pariti": 83, "portabl": 84, "profil": 85, "perform": 85, "timer": 85, "base": 85, "cycl": 85, "counter": 85, "framework": 85, "repeatedli": 85, "sampl": 85, "target": 85, "usag": 85, "simpl": 85, "qadic": 86, "unramifi": 86, "extens": 86, "qsiev": 87, "quadrat": 87, "siev": 87, "thread_pool": 89, "pool": 89, "multithread": 90, "write": 90, "parallel": 90, "ulong_extra": 91, "theoret": 91, "miscellan": 91, "symbol": 91, "prime": 91, "count": 91, "perfect": 91, "factori": 91, "primit": 91, "mp_limb_t": 91}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"aprcl.h \u2013 APRCL primality testing": [[0, "aprcl-h-aprcl-primality-testing"]], "Primality test functions": [[0, "primality-test-functions"]], "Configuration functions": [[0, "configuration-functions"]], "Cyclotomic arithmetic": [[0, "cyclotomic-arithmetic"]], "Types": [[0, "types"]], "Memory management": [[0, "memory-management"], [5, "memory-management"], [6, "memory-management"], [12, "memory-management"], [13, "memory-management"], [14, "memory-management"], [15, "memory-management"], [16, "memory-management"], [17, "memory-management"], [18, "memory-management"], [21, "memory-management"], [23, "memory-management"], [24, "memory-management"], [25, "memory-management"], [26, "memory-management"], [29, "memory-management"], [30, "memory-management"], [31, "memory-management"], [32, "memory-management"], [33, "memory-management"], [34, "memory-management"], [35, "memory-management"], [36, "memory-management"], [37, "memory-management"], [38, "memory-management"], [39, "memory-management"], [42, "memory-management"], [43, "memory-management"], [45, "memory-management"], [46, "memory-management"], [47, "memory-management"], [48, "memory-management"], [50, "memory-management"], [51, "memory-management"], [53, "memory-management"], [54, "memory-management"], [56, "memory-management"], [57, "memory-management"], [59, "memory-management"], [65, "memory-management"], [66, "memory-management"], [67, "memory-management"], [68, "memory-management"], [69, "memory-management"], [73, "memory-management"], [74, "memory-management"], [75, "memory-management"], [76, "memory-management"], [78, "memory-management"], [79, "memory-management"], [80, "memory-management"], [81, "memory-management"], [82, "memory-management"], [83, "memory-management"], [86, "memory-management"]], "Comparison": [[0, "comparison"], [5, "comparison"], [6, "comparison"], [12, "comparison"], [14, "comparison"], [16, "comparison"], [18, "comparison"], [21, "comparison"], [23, "comparison"], [24, "comparison"], [26, "comparison"], [29, "comparison"], [31, "comparison"], [34, "comparison"], [35, "comparison"], [36, "comparison"], [37, "comparison"], [38, "comparison"], [39, "comparison"], [42, "comparison"], [43, "comparison"], [45, "comparison"], [46, "comparison"], [48, "comparison"], [50, "comparison"], [51, "comparison"], [53, "comparison"], [54, "comparison"], [56, "comparison"], [57, "comparison"], [59, "comparison"], [66, "comparison"], [67, "comparison"], [68, "comparison"], [73, "comparison"], [74, "comparison"], [76, "comparison"], [80, "comparison"], [81, "comparison"], [82, "comparison"], [86, "comparison"]], "Output": [[0, "output"], [36, "output"], [37, "output"], [39, "output"], [43, "output"], [48, "output"], [51, "output"], [54, "output"], [57, "output"], [86, "output"]], "Coefficient management": [[0, "coefficient-management"]], "Scalar multiplication": [[0, "scalar-multiplication"], [67, "scalar-multiplication"], [82, "scalar-multiplication"]], "Addition and multiplication": [[0, "addition-and-multiplication"]], "Powering functions": [[0, "powering-functions"]], "Cyclotomic reduction": [[0, "cyclotomic-reduction"]], "Automorphism and inverse": [[0, "automorphism-and-inverse"]], "Jacobi sum": [[0, "jacobi-sum"]], "Extended rings": [[0, "extended-rings"]], "arith.h \u2013 arithmetic and special functions": [[1, "arith-h-arithmetic-and-special-functions"]], "Primorials": [[1, "primorials"]], "Harmonic numbers": [[1, "harmonic-numbers"]], "Stirling numbers": [[1, "stirling-numbers"]], "Bell numbers": [[1, "bell-numbers"]], "Bernoulli numbers and polynomials": [[1, "bernoulli-numbers-and-polynomials"]], "Euler numbers and polynomials": [[1, "euler-numbers-and-polynomials"]], "Multiplicative functions": [[1, "multiplicative-functions"]], "Cyclotomic polynomials": [[1, "cyclotomic-polynomials"]], "Landau\u2019s function": [[1, "landau-s-function"]], "Dedekind sums": [[1, "dedekind-sums"], [12, "dedekind-sums"]], "Number of partitions": [[1, "number-of-partitions"]], "Sums of squares": [[1, "sums-of-squares"]], "Bug reporting": [[2, "bug-reporting"]], "Reporting bugs": [[2, "reporting-bugs"]], "Configuring and building": [[3, "configuring-and-building"]], "Configuring Flint": [[3, "configuring-flint"]], "TLS, reentrancy and single mode": [[3, "tls-reentrancy-and-single-mode"]], "ABI and architecture support": [[3, "abi-and-architecture-support"]], "C++ wrapper": [[3, "c-wrapper"]], "Building, testing, installing and using FLINT": [[3, "building-testing-installing-and-using-flint"]], "Testing a single module or file": [[3, "testing-a-single-module-or-file"]], "Assertion checking": [[3, "assertion-checking"]], "Exceptions": [[3, "exceptions"]], "Building FLINT2 with Microsoft Visual Studio using solution files": [[3, "building-flint2-with-microsoft-visual-studio-using-solution-files"]], "Contributors": [[4, "contributors"], [4, "id2"]], "d_mat.h \u2013 double precision matrices": [[5, "d-mat-h-double-precision-matrices"]], "Basic assignment and manipulation": [[5, "basic-assignment-and-manipulation"], [21, "basic-assignment-and-manipulation"], [33, "basic-assignment-and-manipulation"], [66, "basic-assignment-and-manipulation"], [78, "basic-assignment-and-manipulation"]], "Random matrix generation": [[5, "random-matrix-generation"], [13, "random-matrix-generation"], [21, "random-matrix-generation"], [33, "random-matrix-generation"], [38, "random-matrix-generation"], [42, "random-matrix-generation"], [45, "random-matrix-generation"], [56, "random-matrix-generation"], [66, "random-matrix-generation"], [73, "random-matrix-generation"], [78, "random-matrix-generation"], [81, "random-matrix-generation"]], "Input and output": [[5, "input-and-output"], [11, "input-and-output"], [12, "input-and-output"], [13, "input-and-output"], [16, "input-and-output"], [17, "input-and-output"], [18, "input-and-output"], [21, "input-and-output"], [23, "input-and-output"], [26, "input-and-output"], [31, "input-and-output"], [32, "input-and-output"], [33, "input-and-output"], [34, "input-and-output"], [35, "input-and-output"], [50, "input-and-output"], [53, "input-and-output"], [59, "input-and-output"], [66, "input-and-output"], [76, "input-and-output"], [78, "input-and-output"], [80, "input-and-output"], [81, "input-and-output"], [82, "input-and-output"], [83, "input-and-output"]], "Transpose": [[5, "transpose"], [21, "transpose"], [33, "transpose"], [73, "transpose"], [81, "transpose"]], "Matrix multiplication": [[5, "matrix-multiplication"], [13, "matrix-multiplication"], [21, "matrix-multiplication"], [23, "matrix-multiplication"], [38, "matrix-multiplication"], [42, "matrix-multiplication"], [45, "matrix-multiplication"], [56, "matrix-multiplication"], [66, "matrix-multiplication"], [73, "matrix-multiplication"]], "Gram-Schmidt Orthogonalisation and QR Decomposition": [[5, "gram-schmidt-orthogonalisation-and-qr-decomposition"], [66, "gram-schmidt-orthogonalisation-and-qr-decomposition"]], "d_vec.h \u2013 double precision vectors": [[6, "d-vec-h-double-precision-vectors"]], "Randomisation": [[6, "randomisation"], [17, "randomisation"], [26, "randomisation"], [31, "randomisation"], [34, "randomisation"], [35, "randomisation"], [36, "randomisation"], [37, "randomisation"], [39, "randomisation"], [43, "randomisation"], [48, "randomisation"], [50, "randomisation"], [51, "randomisation"], [53, "randomisation"], [54, "randomisation"], [57, "randomisation"], [59, "randomisation"], [67, "randomisation"], [68, "randomisation"], [80, "randomisation"], [82, "randomisation"], [83, "randomisation"], [86, "randomisation"]], "Assignment and basic manipulation": [[6, "assignment-and-basic-manipulation"], [26, "assignment-and-basic-manipulation"], [31, "assignment-and-basic-manipulation"], [35, "assignment-and-basic-manipulation"], [39, "assignment-and-basic-manipulation"], [48, "assignment-and-basic-manipulation"], [50, "assignment-and-basic-manipulation"], [51, "assignment-and-basic-manipulation"], [53, "assignment-and-basic-manipulation"], [57, "assignment-and-basic-manipulation"], [59, "assignment-and-basic-manipulation"], [67, "assignment-and-basic-manipulation"], [76, "assignment-and-basic-manipulation"], [82, "assignment-and-basic-manipulation"]], "Addition and subtraction": [[6, "addition-and-subtraction"], [16, "addition-and-subtraction"], [21, "addition-and-subtraction"], [23, "addition-and-subtraction"], [26, "addition-and-subtraction"], [31, "addition-and-subtraction"], [34, "addition-and-subtraction"], [35, "addition-and-subtraction"], [38, "addition-and-subtraction"], [39, "addition-and-subtraction"], [42, "addition-and-subtraction"], [45, "addition-and-subtraction"], [48, "addition-and-subtraction"], [50, "addition-and-subtraction"], [51, "addition-and-subtraction"], [53, "addition-and-subtraction"], [56, "addition-and-subtraction"], [57, "addition-and-subtraction"], [59, "addition-and-subtraction"], [67, "addition-and-subtraction"], [73, "addition-and-subtraction"], [76, "addition-and-subtraction"], [81, "addition-and-subtraction"], [82, "addition-and-subtraction"]], "Dot product and norm": [[6, "dot-product-and-norm"], [67, "dot-product-and-norm"]], "double_extras.h \u2013 support functions for double arithmetic": [[7, "double-extras-h-support-functions-for-double-arithmetic"]], "Random functions": [[7, "random-functions"], [62, "random-functions"], [79, "random-functions"], [91, "random-functions"]], "Arithmetic": [[7, "arithmetic"], [12, "arithmetic"], [22, "arithmetic"], [28, "arithmetic"], [33, "arithmetic"], [69, "arithmetic"], [78, "arithmetic"]], "Special functions": [[7, "special-functions"], [12, "special-functions"], [18, "special-functions"], [36, "special-functions"], [37, "special-functions"], [43, "special-functions"], [54, "special-functions"], [80, "special-functions"], [86, "special-functions"]], "Examples": [[8, "examples"]], "Example programs": [[8, "example-programs"]], "fft.h \u2013 Schoenhage-Strassen FFT": [[9, "fft-h-schoenhage-strassen-fft"]], "Split/combine FFT coefficients": [[9, "split-combine-fft-coefficients"]], "Test helper functions": [[9, "test-helper-functions"]], "Arithmetic modulo a generalised Fermat number": [[9, "arithmetic-modulo-a-generalised-fermat-number"]], "Generic butterflies": [[9, "generic-butterflies"]], "Radix 2 transforms": [[9, "radix-2-transforms"]], "Matrix Fourier Transforms": [[9, "matrix-fourier-transforms"]], "Negacyclic multiplication": [[9, "negacyclic-multiplication"]], "Integer multiplication": [[9, "integer-multiplication"]], "Convolution": [[9, "convolution"]], "FFT Precaching": [[9, "fft-precaching"]], "flint.h \u2013 global definitions": [[10, "flint-h-global-definitions"]], "Allocation Functions": [[10, "allocation-functions"]], "Random Numbers": [[10, "random-numbers"]], "Thread functions": [[10, "thread-functions"]], "Input/Output": [[10, "input-output"], [14, "input-output"], [24, "input-output"], [29, "input-output"], [46, "input-output"], [74, "input-output"]], "flintxx \u2013 C++ Wrapper": [[11, "flintxx-c-wrapper"]], "Introduction": [[11, "introduction"], [60, "introduction"], [61, "introduction"], [80, "introduction"]], "Expression templates": [[11, "expression-templates"]], "Tuples": [[11, "tuples"]], "Reference types": [[11, "reference-types"]], "Unified coefficient access": [[11, "unified-coefficient-access"]], "Type conversion": [[11, "type-conversion"]], "Inheritance and flintxx": [[11, "inheritance-and-flintxx"]], "Notation and conventions in flintxx documentation": [[11, "notation-and-conventions-in-flintxx-documentation"]], "Global functions or member functions?": [[11, "global-functions-or-member-functions"]], "fmpq.h \u2013 rational numbers": [[12, "fmpq-h-rational-numbers"]], "Types, macros and constants": [[12, "types-macros-and-constants"], [13, "types-macros-and-constants"], [14, "types-macros-and-constants"], [15, "types-macros-and-constants"], [16, "types-macros-and-constants"], [18, "types-macros-and-constants"], [19, "types-macros-and-constants"], [21, "types-macros-and-constants"], [22, "types-macros-and-constants"], [23, "types-macros-and-constants"], [24, "types-macros-and-constants"], [25, "types-macros-and-constants"], [26, "types-macros-and-constants"], [27, "types-macros-and-constants"], [29, "types-macros-and-constants"], [30, "types-macros-and-constants"], [31, "types-macros-and-constants"], [32, "types-macros-and-constants"], [33, "types-macros-and-constants"], [34, "types-macros-and-constants"], [36, "types-macros-and-constants"], [37, "types-macros-and-constants"], [38, "types-macros-and-constants"], [39, "types-macros-and-constants"], [40, "types-macros-and-constants"], [42, "types-macros-and-constants"], [43, "types-macros-and-constants"], [45, "types-macros-and-constants"], [46, "types-macros-and-constants"], [47, "types-macros-and-constants"], [48, "types-macros-and-constants"], [49, "types-macros-and-constants"], [51, "types-macros-and-constants"], [52, "types-macros-and-constants"], [54, "types-macros-and-constants"], [56, "types-macros-and-constants"], [57, "types-macros-and-constants"], [58, "types-macros-and-constants"], [73, "types-macros-and-constants"], [74, "types-macros-and-constants"], [75, "types-macros-and-constants"], [76, "types-macros-and-constants"], [77, "types-macros-and-constants"], [78, "types-macros-and-constants"]], "Canonicalisation": [[12, "canonicalisation"]], "Basic assignment": [[12, "basic-assignment"], [13, "basic-assignment"], [81, "basic-assignment"]], "Conversion": [[12, "conversion"], [18, "conversion"], [26, "conversion"]], "Random number generation": [[12, "random-number-generation"]], "Modular reduction and rational reconstruction": [[12, "modular-reduction-and-rational-reconstruction"], [13, "modular-reduction-and-rational-reconstruction"]], "Rational enumeration": [[12, "rational-enumeration"]], "Continued fractions": [[12, "continued-fractions"]], "fmpq_mat.h \u2013 matrices over the rational numbers": [[13, "fmpq-mat-h-matrices-over-the-rational-numbers"]], "Entry access": [[13, "entry-access"]], "Addition, scalar multiplication": [[13, "addition-scalar-multiplication"]], "Window": [[13, "window"], [21, "window"], [38, "window"], [42, "window"], [45, "window"], [56, "window"], [73, "window"]], "Concatenate": [[13, "concatenate"], [21, "concatenate"], [38, "concatenate"], [42, "concatenate"], [45, "concatenate"], [56, "concatenate"], [73, "concatenate"]], "Special matrices": [[13, "special-matrices"], [21, "special-matrices"], [33, "special-matrices"], [78, "special-matrices"]], "Basic comparison and properties": [[13, "basic-comparison-and-properties"], [33, "basic-comparison-and-properties"], [78, "basic-comparison-and-properties"]], "Integer matrix conversion": [[13, "integer-matrix-conversion"]], "Kronecker product": [[13, "kronecker-product"], [21, "kronecker-product"]], "Trace": [[13, "trace"], [21, "trace"], [23, "trace"], [33, "trace"], [73, "trace"], [78, "trace"]], "Determinant": [[13, "determinant"], [21, "determinant"]], "Nonsingular solving": [[13, "nonsingular-solving"], [21, "nonsingular-solving"]], "Inverse": [[13, "inverse"], [21, "inverse"], [23, "inverse"], [33, "inverse"], [38, "inverse"], [42, "inverse"], [45, "inverse"], [73, "inverse"], [78, "inverse"]], "Echelon form": [[13, "echelon-form"], [21, "echelon-form"]], "Gram-Schmidt Orthogonalisation": [[13, "gram-schmidt-orthogonalisation"]], "Transforms": [[13, "transforms"], [21, "transforms"], [23, "transforms"], [38, "transforms"], [42, "transforms"], [45, "transforms"], [56, "transforms"], [73, "transforms"]], "Characteristic polynomial": [[13, "characteristic-polynomial"], [21, "characteristic-polynomial"], [23, "characteristic-polynomial"], [38, "characteristic-polynomial"], [42, "characteristic-polynomial"], [45, "characteristic-polynomial"], [56, "characteristic-polynomial"], [73, "characteristic-polynomial"]], "Minimal polynomial": [[13, "minimal-polynomial"], [21, "minimal-polynomial"], [23, "minimal-polynomial"], [38, "minimal-polynomial"], [42, "minimal-polynomial"], [45, "minimal-polynomial"], [56, "minimal-polynomial"], [73, "minimal-polynomial"]], "fmpq_mpoly.h \u2013 multivariate polynomials over the rational numbers": [[14, "fmpq-mpoly-h-multivariate-polynomials-over-the-rational-numbers"]], "Context object": [[14, "context-object"], [22, "context-object"], [24, "context-object"], [29, "context-object"], [46, "context-object"], [74, "context-object"]], "Basic manipulation": [[14, "basic-manipulation"], [15, "basic-manipulation"], [24, "basic-manipulation"], [25, "basic-manipulation"], [29, "basic-manipulation"], [30, "basic-manipulation"], [46, "basic-manipulation"], [47, "basic-manipulation"], [68, "basic-manipulation"], [71, "basic-manipulation"], [74, "basic-manipulation"], [75, "basic-manipulation"]], "Constants": [[14, "constants"], [24, "constants"], [29, "constants"], [46, "constants"], [74, "constants"]], "Degrees": [[14, "degrees"], [24, "degrees"], [29, "degrees"], [46, "degrees"], [74, "degrees"]], "Coefficients": [[14, "coefficients"], [24, "coefficients"], [29, "coefficients"], [46, "coefficients"], [74, "coefficients"]], "Container operations": [[14, "container-operations"], [24, "container-operations"], [29, "container-operations"], [46, "container-operations"], [74, "container-operations"]], "Random generation": [[14, "random-generation"], [18, "random-generation"], [23, "random-generation"], [24, "random-generation"], [29, "random-generation"], [46, "random-generation"], [74, "random-generation"]], "Addition/Subtraction": [[14, "addition-subtraction"], [24, "addition-subtraction"], [29, "addition-subtraction"], [46, "addition-subtraction"], [74, "addition-subtraction"]], "Scalar operations": [[14, "scalar-operations"], [24, "scalar-operations"], [29, "scalar-operations"], [46, "scalar-operations"], [74, "scalar-operations"], [81, "scalar-operations"]], "Differentiation/Integration": [[14, "differentiation-integration"], [29, "differentiation-integration"]], "Evaluation": [[14, "evaluation"], [16, "evaluation"], [24, "evaluation"], [26, "evaluation"], [29, "evaluation"], [31, "evaluation"], [33, "evaluation"], [34, "evaluation"], [39, "evaluation"], [46, "evaluation"], [48, "evaluation"], [51, "evaluation"], [57, "evaluation"], [74, "evaluation"], [76, "evaluation"], [78, "evaluation"], [82, "evaluation"]], "Multiplication": [[14, "multiplication"], [16, "multiplication"], [24, "multiplication"], [26, "multiplication"], [28, "multiplication"], [29, "multiplication"], [31, "multiplication"], [39, "multiplication"], [46, "multiplication"], [48, "multiplication"], [51, "multiplication"], [57, "multiplication"], [70, "multiplication"], [74, "multiplication"], [76, "multiplication"], [81, "multiplication"], [82, "multiplication"]], "Powering": [[14, "powering"], [16, "powering"], [16, "id1"], [24, "powering"], [29, "powering"], [31, "powering"], [34, "powering"], [39, "powering"], [46, "powering"], [48, "powering"], [51, "powering"], [57, "powering"], [74, "powering"], [76, "powering"], [82, "powering"]], "Division": [[14, "division"], [24, "division"], [26, "division"], [29, "division"], [46, "division"], [70, "division"], [74, "division"], [76, "division"]], "Greatest Common Divisor": [[14, "greatest-common-divisor"], [24, "greatest-common-divisor"], [29, "greatest-common-divisor"], [46, "greatest-common-divisor"], [74, "greatest-common-divisor"]], "Square Root": [[14, "square-root"], [24, "square-root"], [29, "square-root"], [46, "square-root"], [74, "square-root"]], "Univariate Functions": [[14, "univariate-functions"], [24, "univariate-functions"], [29, "univariate-functions"], [46, "univariate-functions"], [74, "univariate-functions"]], "fmpq_mpoly_factor.h \u2013 factorisation of multivariate polynomials over the rational numbers": [[15, "fmpq-mpoly-factor-h-factorisation-of-multivariate-polynomials-over-the-rational-numbers"]], "Factorisation": [[15, "factorisation"], [25, "factorisation"], [27, "factorisation"], [30, "factorisation"], [40, "factorisation"], [47, "factorisation"], [49, "factorisation"], [52, "factorisation"], [58, "factorisation"], [75, "factorisation"], [77, "factorisation"], [91, "factorisation"]], "fmpq_poly.h \u2013 univariate polynomials over the rational numbers": [[16, "fmpq-poly-h-univariate-polynomials-over-the-rational-numbers"]], "Polynomial parameters": [[16, "polynomial-parameters"], [31, "polynomial-parameters"], [39, "polynomial-parameters"], [48, "polynomial-parameters"], [51, "polynomial-parameters"], [57, "polynomial-parameters"], [82, "polynomial-parameters"]], "Accessing the numerator and denominator": [[16, "accessing-the-numerator-and-denominator"]], "Random testing": [[16, "random-testing"]], "Assignment, swap, negation": [[16, "assignment-swap-negation"]], "Getting and setting coefficients": [[16, "getting-and-setting-coefficients"], [26, "getting-and-setting-coefficients"], [31, "getting-and-setting-coefficients"], [39, "getting-and-setting-coefficients"], [48, "getting-and-setting-coefficients"], [51, "getting-and-setting-coefficients"], [57, "getting-and-setting-coefficients"], [76, "getting-and-setting-coefficients"], [82, "getting-and-setting-coefficients"]], "Scalar multiplication and division": [[16, "scalar-multiplication-and-division"], [26, "scalar-multiplication-and-division"], [34, "scalar-multiplication-and-division"], [35, "scalar-multiplication-and-division"], [39, "scalar-multiplication-and-division"], [48, "scalar-multiplication-and-division"], [50, "scalar-multiplication-and-division"], [51, "scalar-multiplication-and-division"], [53, "scalar-multiplication-and-division"], [57, "scalar-multiplication-and-division"], [59, "scalar-multiplication-and-division"], [76, "scalar-multiplication-and-division"]], "Shifting": [[16, "shifting"], [26, "shifting"], [31, "shifting"], [39, "shifting"], [48, "shifting"], [51, "shifting"], [57, "shifting"], [76, "shifting"], [82, "shifting"]], "Euclidean division": [[16, "euclidean-division"], [31, "euclidean-division"], [39, "euclidean-division"], [48, "euclidean-division"], [51, "euclidean-division"], [57, "euclidean-division"]], "Divisibility testing": [[16, "divisibility-testing"], [26, "divisibility-testing"], [31, "divisibility-testing"], [39, "divisibility-testing"], [48, "divisibility-testing"], [51, "divisibility-testing"], [57, "divisibility-testing"], [76, "divisibility-testing"], [91, "divisibility-testing"]], "Power series division": [[16, "power-series-division"], [26, "power-series-division"], [31, "power-series-division"]], "Greatest common divisor": [[16, "greatest-common-divisor"], [18, "greatest-common-divisor"], [26, "greatest-common-divisor"], [31, "greatest-common-divisor"], [39, "greatest-common-divisor"], [48, "greatest-common-divisor"], [51, "greatest-common-divisor"], [57, "greatest-common-divisor"], [76, "greatest-common-divisor"], [91, "greatest-common-divisor"]], "Derivative and integral": [[16, "derivative-and-integral"], [76, "derivative-and-integral"]], "Square roots": [[16, "square-roots"], [26, "square-roots"], [76, "square-roots"]], "Power sums": [[16, "power-sums"], [31, "power-sums"], [76, "power-sums"]], "Transcendental functions": [[16, "transcendental-functions"], [76, "transcendental-functions"]], "Orthogonal polynomials": [[16, "orthogonal-polynomials"], [31, "orthogonal-polynomials"]], "Interpolation": [[16, "interpolation"], [31, "interpolation"], [76, "interpolation"]], "Composition": [[16, "composition"], [26, "composition"], [31, "composition"], [39, "composition"], [48, "composition"], [51, "composition"], [57, "composition"], [76, "composition"], [82, "composition"], [83, "composition"]], "Power series composition": [[16, "power-series-composition"], [31, "power-series-composition"], [76, "power-series-composition"], [76, "id2"]], "Power series reversion": [[16, "power-series-reversion"], [31, "power-series-reversion"], [76, "power-series-reversion"]], "Gaussian content": [[16, "gaussian-content"], [31, "gaussian-content"], [35, "gaussian-content"]], "Square-free": [[16, "square-free"], [31, "square-free"]], "fmpq_vec.h \u2013 vectors over rational numbers": [[17, "fmpq-vec-h-vectors-over-rational-numbers"]], "Sorting": [[17, "sorting"], [35, "sorting"]], "Conversions": [[17, "conversions"], [21, "conversions"], [22, "conversions"], [23, "conversions"], [28, "conversions"], [35, "conversions"], [38, "conversions"], [42, "conversions"], [45, "conversions"], [56, "conversions"], [81, "conversions"]], "Dot product": [[17, "dot-product"], [35, "dot-product"]], "fmpz.h \u2013 integers": [[18, "fmpz-h-integers"]], "Basic properties and manipulation": [[18, "basic-properties-and-manipulation"], [38, "basic-properties-and-manipulation"], [42, "basic-properties-and-manipulation"], [45, "basic-properties-and-manipulation"], [56, "basic-properties-and-manipulation"], [73, "basic-properties-and-manipulation"]], "Basic arithmetic": [[18, "basic-arithmetic"], [36, "basic-arithmetic"], [37, "basic-arithmetic"], [43, "basic-arithmetic"], [54, "basic-arithmetic"], [68, "basic-arithmetic"], [86, "basic-arithmetic"], [91, "basic-arithmetic"]], "Modular arithmetic": [[18, "modular-arithmetic"], [62, "modular-arithmetic"]], "Bit packing and unpacking": [[18, "bit-packing-and-unpacking"], [76, "bit-packing-and-unpacking"]], "Logic Operations": [[18, "logic-operations"]], "Chinese remaindering": [[18, "chinese-remaindering"], [91, "chinese-remaindering"]], "Primality testing": [[18, "primality-testing"], [91, "primality-testing"]], "fmpz_factor.h \u2013 integer factorisation": [[19, "fmpz-factor-h-integer-factorisation"]], "Factoring integers": [[19, "factoring-integers"]], "Elliptic curve (ECM) method": [[19, "elliptic-curve-ecm-method"]], "fmpz_lll.h \u2013 LLL reduction": [[20, "fmpz-lll-h-lll-reduction"]], "Parameter manipulation": [[20, "parameter-manipulation"]], "Random parameter generation": [[20, "random-parameter-generation"]], "Heuristic dot product": [[20, "heuristic-dot-product"]], "The various Babai\u2019s": [[20, "the-various-babai-s"]], "Shift": [[20, "shift"]], "Varieties of LLL": [[20, "varieties-of-lll"]], "ULLL": [[20, "ulll"]], "LLL-reducedness": [[20, "lll-reducedness"]], "Modified ULLL": [[20, "modified-ulll"]], "Main LLL functions": [[20, "main-lll-functions"]], "fmpz_mat.h \u2013 matrices over the integers": [[21, "fmpz-mat-h-matrices-over-the-integers"]], "Modular reduction and reconstruction": [[21, "modular-reduction-and-reconstruction"], [31, "modular-reduction-and-reconstruction"]], "Matrix-scalar arithmetic": [[21, "matrix-scalar-arithmetic"], [73, "matrix-scalar-arithmetic"]], "Content": [[21, "content"]], "Rank": [[21, "rank"]], "Column partitioning": [[21, "column-partitioning"]], "Row reduction": [[21, "row-reduction"], [33, "row-reduction"], [78, "row-reduction"]], "Modular gaussian elimination": [[21, "modular-gaussian-elimination"]], "Strong echelon form and Howell form": [[21, "strong-echelon-form-and-howell-form"], [23, "strong-echelon-form-and-howell-form"], [73, "strong-echelon-form-and-howell-form"]], "Nullspace": [[21, "nullspace"], [33, "nullspace"], [73, "nullspace"], [78, "nullspace"]], "Hermite normal form": [[21, "hermite-normal-form"]], "Smith normal form": [[21, "smith-normal-form"]], "Cholesky Decomposition": [[21, "cholesky-decomposition"]], "LLL": [[21, "lll"]], "Classical LLL": [[21, "classical-lll"]], "Modified LLL": [[21, "modified-lll"]], "fmpz_mod.h \u2013 arithmetic modulo integers": [[22, "fmpz-mod-h-arithmetic-modulo-integers"]], "Discrete Logarithms via Pohlig-Hellman": [[22, "discrete-logarithms-via-pohlig-hellman"], [72, "discrete-logarithms-via-pohlig-hellman"]], "fmpz_mod_mat.h \u2013 matrices over integers mod n": [[23, "fmpz-mod-mat-h-matrices-over-integers-mod-n"]], "Element access": [[23, "element-access"]], "Windows and concatenation": [[23, "windows-and-concatenation"]], "Set and transpose": [[23, "set-and-transpose"]], "Scalar arithmetic": [[23, "scalar-arithmetic"]], "Gaussian elimination": [[23, "gaussian-elimination"]], "LU decomposition": [[23, "lu-decomposition"], [38, "lu-decomposition"], [42, "lu-decomposition"], [45, "lu-decomposition"], [56, "lu-decomposition"], [73, "lu-decomposition"]], "Triangular solving": [[23, "triangular-solving"], [38, "triangular-solving"], [42, "triangular-solving"], [45, "triangular-solving"], [56, "triangular-solving"], [73, "triangular-solving"]], "Solving": [[23, "solving"], [33, "solving"], [38, "solving"], [42, "solving"], [45, "solving"], [56, "solving"], [78, "solving"]], "fmpz_mod_mpoly.h \u2013 polynomials over the integers mod n": [[24, "fmpz-mod-mpoly-h-polynomials-over-the-integers-mod-n"]], "Differentiation": [[24, "differentiation"], [46, "differentiation"], [74, "differentiation"]], "Internal Functions": [[24, "internal-functions"], [29, "internal-functions"], [74, "internal-functions"]], "fmpz_mod_mpoly_factor.h \u2013 factorisation of multivariate polynomials over the integers mod n": [[25, "fmpz-mod-mpoly-factor-h-factorisation-of-multivariate-polynomials-over-the-integers-mod-n"]], "fmpz_mod_poly.h \u2013 polynomials over integers mod n": [[26, "fmpz-mod-poly-h-polynomials-over-integers-mod-n"]], "Attributes": [[26, "attributes"]], "Products": [[26, "products"], [31, "products"], [76, "products"]], "Power series inversion": [[26, "power-series-inversion"]], "Minpoly": [[26, "minpoly"]], "Resultant": [[26, "resultant"]], "Discriminant": [[26, "discriminant"], [31, "discriminant"]], "Derivative": [[26, "derivative"], [31, "derivative"], [34, "derivative"], [39, "derivative"], [48, "derivative"], [51, "derivative"], [57, "derivative"], [82, "derivative"]], "Multipoint evaluation": [[26, "multipoint-evaluation"], [76, "multipoint-evaluation"]], "Modular composition": [[26, "modular-composition"], [76, "modular-composition"]], "Subproduct trees": [[26, "subproduct-trees"], [76, "subproduct-trees"]], "Radix conversion": [[26, "radix-conversion"]], "Inflation and deflation": [[26, "inflation-and-deflation"], [31, "inflation-and-deflation"], [39, "inflation-and-deflation"], [48, "inflation-and-deflation"], [51, "inflation-and-deflation"], [57, "inflation-and-deflation"], [76, "inflation-and-deflation"]], "Berlekamp-Massey Algorithm": [[26, "berlekamp-massey-algorithm"], [76, "berlekamp-massey-algorithm"]], "fmpz_mod_poly_factor.h \u2013 factorisation of polynomials over integers mod n": [[27, "fmpz-mod-poly-factor-h-factorisation-of-polynomials-over-integers-mod-n"]], "Root Finding": [[27, "root-finding"], [40, "root-finding"], [49, "root-finding"], [52, "root-finding"], [58, "root-finding"]], "fmpz_mod_vec.h \u2013 vectors over integers mod n": [[28, "fmpz-mod-vec-h-vectors-over-integers-mod-n"]], "Scalar Multiplication": [[28, "scalar-multiplication"]], "Dot Product": [[28, "dot-product"]], "fmpz_mpoly.h \u2013 multivariate polynomials over the integers": [[29, "fmpz-mpoly-h-multivariate-polynomials-over-the-integers"]], "fmpz_mpoly_factor.h \u2013 factorisation of multivariate polynomials over the integers": [[30, "fmpz-mpoly-factor-h-factorisation-of-multivariate-polynomials-over-the-integers"]], "fmpz_poly.h \u2013 univariate polynomials over the integers": [[31, "fmpz-poly-h-univariate-polynomials-over-the-integers"]], "Scalar absolute value, multiplication and division": [[31, "scalar-absolute-value-multiplication-and-division"]], "Bit packing": [[31, "bit-packing"], [36, "bit-packing"], [43, "bit-packing"], [54, "bit-packing"]], "FFT precached multiplication": [[31, "fft-precached-multiplication"]], "Squaring": [[31, "squaring"], [39, "squaring"], [48, "squaring"], [51, "squaring"], [57, "squaring"]], "Bit sizes and norms": [[31, "bit-sizes-and-norms"], [35, "bit-sizes-and-norms"]], "Division with precomputed inverse": [[31, "division-with-precomputed-inverse"]], "Division mod p": [[31, "division-mod-p"]], "Pseudo division": [[31, "pseudo-division"]], "Newton basis": [[31, "newton-basis"]], "Taylor shift": [[31, "taylor-shift"], [76, "taylor-shift"]], "Square root": [[31, "square-root"], [39, "square-root"], [48, "square-root"], [51, "square-root"], [57, "square-root"], [86, "square-root"]], "Signature": [[31, "signature"]], "Hensel lifting": [[31, "hensel-lifting"]], "Roots": [[31, "roots"], [36, "roots"], [37, "roots"], [43, "roots"], [54, "roots"]], "Minimal polynomials": [[31, "minimal-polynomials"]], "Fibonacci polynomials": [[31, "fibonacci-polynomials"]], "Eulerian numbers and polynomials": [[31, "eulerian-numbers-and-polynomials"]], "Modular forms and q-series": [[31, "modular-forms-and-q-series"]], "CLD bounds": [[31, "cld-bounds"]], "fmpz_poly_factor.h \u2013 factorisation of polynomials over the integers": [[32, "fmpz-poly-factor-h-factorisation-of-polynomials-over-the-integers"]], "Manipulating factors": [[32, "manipulating-factors"]], "Factoring algorithms": [[32, "factoring-algorithms"]], "fmpz_poly_mat.h \u2013 matrices of polynomials over the integers": [[33, "fmpz-poly-mat-h-matrices-of-polynomials-over-the-integers"]], "Basic properties": [[33, "basic-properties"], [78, "basic-properties"]], "Norms": [[33, "norms"], [39, "norms"], [48, "norms"], [51, "norms"], [57, "norms"], [78, "norms"]], "Determinant and rank": [[33, "determinant-and-rank"], [73, "determinant-and-rank"], [78, "determinant-and-rank"]], "fmpz_poly_q.h \u2013 rational functions over the rational numbers": [[34, "fmpz-poly-q-h-rational-functions-over-the-rational-numbers"]], "Assignment": [[34, "assignment"], [83, "assignment"]], "Multiplication and division": [[34, "multiplication-and-division"]], "fmpz_vec.h \u2013 vectors of integers": [[35, "fmpz-vec-h-vectors-of-integers"]], "Sums and products": [[35, "sums-and-products"]], "Reduction mod p": [[35, "reduction-mod-p"]], "fq.h \u2013 finite fields": [[36, "fq-h-finite-fields"]], "Context Management": [[36, "context-management"], [37, "context-management"], [43, "context-management"], [54, "context-management"]], "Assignments and conversions": [[36, "assignments-and-conversions"], [37, "assignments-and-conversions"], [43, "assignments-and-conversions"], [54, "assignments-and-conversions"], [80, "assignments-and-conversions"], [86, "assignments-and-conversions"]], "fq_default_default.h \u2013 unified finite fields": [[37, "fq-default-default-h-unified-finite-fields"]], "Predicates": [[37, "predicates"]], "fq_default_mat.h \u2013 matrices over finite fields": [[38, "fq-default-mat-h-matrices-over-finite-fields"]], "Printing": [[38, "printing"], [42, "printing"], [45, "printing"], [56, "printing"], [73, "printing"]], "Reduced row echelon form": [[38, "reduced-row-echelon-form"], [42, "reduced-row-echelon-form"], [45, "reduced-row-echelon-form"], [56, "reduced-row-echelon-form"], [73, "reduced-row-echelon-form"]], "fq_default_poly.h \u2013 univariate polynomials over finite fields": [[39, "fq-default-poly-h-univariate-polynomials-over-finite-fields"]], "fq_default_poly_factor.h \u2013 factorisation of univariate polynomials over finite fields": [[40, "fq-default-poly-factor-h-factorisation-of-univariate-polynomials-over-finite-fields"]], "Memory Management": [[40, "memory-management"], [49, "memory-management"], [52, "memory-management"], [58, "memory-management"]], "Basic Operations": [[40, "basic-operations"], [49, "basic-operations"], [52, "basic-operations"], [58, "basic-operations"]], "Irreducibility Testing": [[40, "irreducibility-testing"], [49, "irreducibility-testing"], [52, "irreducibility-testing"], [58, "irreducibility-testing"]], "Computing isomorphisms and embeddings of finite fields": [[41, "computing-isomorphisms-and-embeddings-of-finite-fields"], [44, "computing-isomorphisms-and-embeddings-of-finite-fields"], [55, "computing-isomorphisms-and-embeddings-of-finite-fields"]], "fq_mat.h \u2013 matrices over finite fields": [[42, "fq-mat-h-matrices-over-finite-fields"]], "fq_nmod.h \u2013 finite fields (word-size characteristic)": [[43, "fq-nmod-h-finite-fields-word-size-characteristic"]], "fq_nmod_mat.h \u2013 matrices over finite fields (word-size characteristic)": [[45, "fq-nmod-mat-h-matrices-over-finite-fields-word-size-characteristic"]], "fq_nmod_mpoly.h \u2013 multivariate polynomials over finite fields of word-sized characteristic": [[46, "fq-nmod-mpoly-h-multivariate-polynomials-over-finite-fields-of-word-sized-characteristic"]], "fq_nmod_mpoly_factor.h \u2013 factorisation of multivariate polynomials over finite fields of word-sized characteristic": [[47, "fq-nmod-mpoly-factor-h-factorisation-of-multivariate-polynomials-over-finite-fields-of-word-sized-characteristic"]], "fq_nmod_poly.h \u2013 univariate polynomials over finite fields (word-size characteristic)": [[48, "fq-nmod-poly-h-univariate-polynomials-over-finite-fields-word-size-characteristic"]], "fq_nmod_poly_factor.h \u2013 factorisation of univariate polynomials over finite fields (word-size characteristic)": [[49, "fq-nmod-poly-factor-h-factorisation-of-univariate-polynomials-over-finite-fields-word-size-characteristic"]], "fq_nmod_vec.h \u2013 vectors over finite fields (word-size characteristic)": [[50, "fq-nmod-vec-h-vectors-over-finite-fields-word-size-characteristic"]], "Dot products": [[50, "dot-products"], [53, "dot-products"], [59, "dot-products"], [79, "dot-products"]], "fq_poly.h \u2013 univariate polynomials over finite fields": [[51, "fq-poly-h-univariate-polynomials-over-finite-fields"]], "fq_poly_factor.h \u2013 factorisation of univariate polynomials over finite fields": [[52, "fq-poly-factor-h-factorisation-of-univariate-polynomials-over-finite-fields"]], "fq_vec.h \u2013 vectors over finite fields": [[53, "fq-vec-h-vectors-over-finite-fields"]], "fq_zech.h \u2013 finite fields (Zech logarithm representation)": [[54, "fq-zech-h-finite-fields-zech-logarithm-representation"]], "fq_zech_mat.h \u2013 matrices over finite fields (Zech logarithm representation)": [[56, "fq-zech-mat-h-matrices-over-finite-fields-zech-logarithm-representation"]], "fq_zech_poly.h \u2013 univariate polynomials over finite fields (Zech logarithm representation)": [[57, "fq-zech-poly-h-univariate-polynomials-over-finite-fields-zech-logarithm-representation"]], "fq_zech_poly_factor.h \u2013 factorisation of univariate polynomials over finite fields (Zech logarithm representation)": [[58, "fq-zech-poly-factor-h-factorisation-of-univariate-polynomials-over-finite-fields-zech-logarithm-representation"]], "fq_zech_vec.h \u2013 vectors over finite fields (Zech logarithm representation)": [[59, "fq-zech-vec-h-vectors-over-finite-fields-zech-logarithm-representation"]], "FLINT: Fast Library for Number Theory": [[60, "flint-fast-library-for-number-theory"]], "General utilities": [[60, "general-utilities"]], "Integers": [[60, "integers"]], "Rational numbers": [[60, "rational-numbers"]], "Integers mod n": [[60, "integers-mod-n"]], "Finite fields": [[60, "finite-fields"]], "p-adic numbers": [[60, "p-adic-numbers"]], "Floating-point support code": [[60, "floating-point-support-code"]], "C++ Interface": [[60, "c-interface"]], "References": [[60, "references"], [88, "references"]], "What is Flint?": [[61, "what-is-flint"]], "Maintainers and Authors": [[61, "maintainers-and-authors"]], "Requirements": [[61, "requirements"]], "Structure of Flint": [[61, "structure-of-flint"]], "License": [[61, "license"]], "long_extras.h \u2013 support functions for signed word arithmetic": [[62, "long-extras-h-support-functions-for-signed-word-arithmetic"]], "Properties": [[62, "properties"], [86, "properties"]], "Checked Arithmetic": [[62, "checked-arithmetic"]], "longlong.h \u2013 support functions for multi-word arithmetic": [[63, "longlong-h-support-functions-for-multi-word-arithmetic"]], "Auxiliary asm macros": [[63, "auxiliary-asm-macros"]], "Macros": [[64, "macros"], [70, "macros"], [81, "macros"]], "Flint Macros": [[64, "flint-macros"]], "Memory management in FLINT": [[65, "memory-management-in-flint"]], "Temporary allocation": [[65, "temporary-allocation"]], "mpf_mat.h \u2013 matrices of MPF floating-point numbers": [[66, "mpf-mat-h-matrices-of-mpf-floating-point-numbers"]], "mpf_vec.h \u2013 vectors of MPF floating-point numbers": [[67, "mpf-vec-h-vectors-of-mpf-floating-point-numbers"]], "mpfr_mat.h \u2013 matrices of MPFR floating-point numbers": [[68, "mpfr-mat-h-matrices-of-mpfr-floating-point-numbers"]], "mpfr_vec.h \u2013 vectors of MPFR floating-point numbers": [[69, "mpfr-vec-h-vectors-of-mpfr-floating-point-numbers"]], "mpn_extras.h \u2013 support functions for limb arrays": [[70, "mpn-extras-h-support-functions-for-limb-arrays"]], "Utility functions": [[70, "utility-functions"]], "Divisibility": [[70, "divisibility"]], "GCD": [[70, "gcd"]], "Random Number Generation": [[70, "random-number-generation"]], "mpoly.h \u2013 support functions for multivariate polynomials": [[71, "mpoly-h-support-functions-for-multivariate-polynomials"]], "Orderings": [[71, "orderings"]], "Monomial arithmetic": [[71, "monomial-arithmetic"]], "Monomial comparison": [[71, "monomial-comparison"]], "Monomial divisibility": [[71, "monomial-divisibility"]], "Setting and getting monomials": [[71, "setting-and-getting-monomials"]], "Packing and unpacking monomials": [[71, "packing-and-unpacking-monomials"]], "Chunking": [[71, "chunking"]], "Chained heap functions": [[71, "chained-heap-functions"]], "nmod.h \u2013 integers mod n (word-size n)": [[72, "nmod-h-integers-mod-n-word-size-n"]], "Modular reduction and arithmetic": [[72, "modular-reduction-and-arithmetic"]], "nmod_mat.h \u2013 matrices over integers mod n (word-size n)": [[73, "nmod-mat-h-matrices-over-integers-mod-n-word-size-n"]], "Matrix Exponentiation": [[73, "matrix-exponentiation"]], "Nonsingular square solving": [[73, "nonsingular-square-solving"]], "nmod_mpoly.h \u2013 multivariate polynomials over integers mod n (word-size n)": [[74, "nmod-mpoly-h-multivariate-polynomials-over-integers-mod-n-word-size-n"]], "nmod_mpoly_factor.h \u2013 factorisation of multivariate polynomials over integers mod n (word-size n)": [[75, "nmod-mpoly-factor-h-factorisation-of-multivariate-polynomials-over-integers-mod-n-word-size-n"]], "nmod_poly.h \u2013 univariate polynomials over integers mod n (word-size n)": [[76, "nmod-poly-h-univariate-polynomials-over-integers-mod-n-word-size-n"]], "Helper functions": [[76, "helper-functions"]], "Polynomial properties": [[76, "polynomial-properties"]], "Randomization": [[76, "randomization"]], "KS2/KS4 Reduction": [[76, "ks2-ks4-reduction"]], "Chinese Remaindering": [[76, "chinese-remaindering"]], "nmod_poly_factor.h \u2013 factorisation of univariate polynomials over integers mod n (word-size n)": [[77, "nmod-poly-factor-h-factorisation-of-univariate-polynomials-over-integers-mod-n-word-size-n"]], "nmod_poly_mat.h \u2013 matrices of univariate polynomials over integers mod n (word-size n)": [[78, "nmod-poly-mat-h-matrices-of-univariate-polynomials-over-integers-mod-n-word-size-n"]], "nmod_vec.h \u2013 vectors over integers mod n (word-size n)": [[79, "nmod-vec-h-vectors-over-integers-mod-n-word-size-n"]], "Basic manipulation and comparison": [[79, "basic-manipulation-and-comparison"]], "Arithmetic operations": [[79, "arithmetic-operations"], [80, "arithmetic-operations"]], "padic.h \u2013 p-adic numbers": [[80, "padic-h-p-adic-numbers"]], "Data structures": [[80, "data-structures"], [86, "data-structures"]], "Context": [[80, "context"], [86, "context"]], "Exponential": [[80, "exponential"]], "Logarithm": [[80, "logarithm"]], "padic_mat.h \u2013 matrices over p-adic numbers": [[81, "padic-mat-h-matrices-over-p-adic-numbers"]], "Module documentation": [[81, "module-documentation"], [82, "module-documentation"]], "Entries": [[81, "entries"]], "padic_poly.h \u2013 polynomials over p-adic numbers": [[82, "padic-poly-h-polynomials-over-p-adic-numbers"]], "Series inversion": [[82, "series-inversion"]], "Testing": [[82, "testing"]], "perm.h \u2013 permutations": [[83, "perm-h-permutations"]], "Parity": [[83, "parity"]], "Portability": [[84, "portability"]], "Portable FLINT types": [[84, "portable-flint-types"]], "profiler.h \u2013 performance profiling": [[85, "profiler-h-performance-profiling"]], "Timer based on the cycle counter": [[85, "timer-based-on-the-cycle-counter"]], "Framework for repeatedly sampling a single target": [[85, "framework-for-repeatedly-sampling-a-single-target"]], "Memory usage": [[85, "memory-usage"]], "Simple profiling macros": [[85, "simple-profiling-macros"]], "qadic.h \u2013 unramified extensions over p-adic numbers": [[86, "qadic-h-unramified-extensions-over-p-adic-numbers"]], "qsieve.h \u2013 Quadratic sieve": [[87, "qsieve-h-quadratic-sieve"]], "thread_pool.h \u2013 thread pool": [[89, "thread-pool-h-thread-pool"]], "Thread pool": [[89, "id1"]], "Threading": [[90, "threading"]], "Multithreaded FLINT": [[90, "multithreaded-flint"]], "Writing threaded functions in FLINT": [[90, "writing-threaded-functions-in-flint"]], "Functional parallel programming helpers": [[90, "functional-parallel-programming-helpers"]], "ulong_extras.h \u2013 arithmetic and number-theoretic functions for single-word integers": [[91, "ulong-extras-h-arithmetic-and-number-theoretic-functions-for-single-word-integers"]], "Miscellaneous": [[91, "miscellaneous"]], "Basic arithmetic with precomputed inverses": [[91, "basic-arithmetic-with-precomputed-inverses"]], "Jacobi and Kronecker symbols": [[91, "jacobi-and-kronecker-symbols"]], "Modular Arithmetic": [[91, "modular-arithmetic"]], "Prime number generation and counting": [[91, "prime-number-generation-and-counting"]], "Square root and perfect power testing": [[91, "square-root-and-perfect-power-testing"]], "Arithmetic functions": [[91, "arithmetic-functions"]], "Factorials": [[91, "factorials"]], "Primitive Roots and Discrete Logarithms": [[91, "primitive-roots-and-discrete-logarithms"]], "Elliptic curve method for factorization of mp_limb_t": [[91, "elliptic-curve-method-for-factorization-of-mp-limb-t"]]}, "indexentries": {"_aprcl_config (c type)": [[0, "c._aprcl_config"]], "_aprcl_is_prime_gauss (c function)": [[0, "c._aprcl_is_prime_gauss"]], "_aprcl_is_prime_jacobi (c function)": [[0, "c._aprcl_is_prime_jacobi"]], "_unity_zp (c type)": [[0, "c._unity_zp"]], "_unity_zp_pow_select_k (c function)": [[0, "c._unity_zp_pow_select_k"]], "_unity_zp_reduce_cyclotomic (c function)": [[0, "c._unity_zp_reduce_cyclotomic"]], "_unity_zp_reduce_cyclotomic_divmod (c function)": [[0, "c._unity_zp_reduce_cyclotomic_divmod"]], "_unity_zpq (c type)": [[0, "c._unity_zpq"]], "_unity_zpq_mul_unity_p (c function)": [[0, "c._unity_zpq_mul_unity_p"]], "aprcl_r_value (c function)": [[0, "c.aprcl_R_value"]], "aprcl_config (c type)": [[0, "c.aprcl_config"]], "aprcl_config_gauss_clear (c function)": [[0, "c.aprcl_config_gauss_clear"]], "aprcl_config_gauss_init (c function)": [[0, "c.aprcl_config_gauss_init"]], "aprcl_config_gauss_init_min_r (c function)": [[0, "c.aprcl_config_gauss_init_min_R"]], "aprcl_config_jacobi_clear (c function)": [[0, "c.aprcl_config_jacobi_clear"]], "aprcl_config_jacobi_init (c function)": [[0, "c.aprcl_config_jacobi_init"]], "aprcl_is_prime (c function)": [[0, "c.aprcl_is_prime"]], "aprcl_is_prime_final_division (c function)": [[0, "c.aprcl_is_prime_final_division"]], "aprcl_is_prime_gauss (c function)": [[0, "c.aprcl_is_prime_gauss"]], "aprcl_is_prime_gauss_min_r (c function)": [[0, "c.aprcl_is_prime_gauss_min_R"]], "aprcl_is_prime_jacobi (c function)": [[0, "c.aprcl_is_prime_jacobi"]], "unity_zp (c type)": [[0, "c.unity_zp"]], "unity_zp_add (c function)": [[0, "c.unity_zp_add"]], "unity_zp_aut (c function)": [[0, "c.unity_zp_aut"]], "unity_zp_aut_inv (c function)": [[0, "c.unity_zp_aut_inv"]], "unity_zp_clear (c function)": [[0, "c.unity_zp_clear"]], "unity_zp_coeff_add_fmpz (c function)": [[0, "c.unity_zp_coeff_add_fmpz"]], "unity_zp_coeff_add_ui (c function)": [[0, "c.unity_zp_coeff_add_ui"]], "unity_zp_coeff_dec (c function)": [[0, "c.unity_zp_coeff_dec"]], "unity_zp_coeff_inc (c function)": [[0, "c.unity_zp_coeff_inc"]], "unity_zp_coeff_set_fmpz (c function)": [[0, "c.unity_zp_coeff_set_fmpz"]], "unity_zp_coeff_set_ui (c function)": [[0, "c.unity_zp_coeff_set_ui"]], "unity_zp_copy (c function)": [[0, "c.unity_zp_copy"]], "unity_zp_equal (c function)": [[0, "c.unity_zp_equal"]], "unity_zp_init (c function)": [[0, "c.unity_zp_init"]], "unity_zp_is_unity (c function)": [[0, "c.unity_zp_is_unity"]], "unity_zp_jacobi_sum_2q_one (c function)": [[0, "c.unity_zp_jacobi_sum_2q_one"]], "unity_zp_jacobi_sum_2q_two (c function)": [[0, "c.unity_zp_jacobi_sum_2q_two"]], "unity_zp_jacobi_sum_pq (c function)": [[0, "c.unity_zp_jacobi_sum_pq"]], "unity_zp_mul (c function)": [[0, "c.unity_zp_mul"]], "unity_zp_mul_inplace (c function)": [[0, "c.unity_zp_mul_inplace"]], "unity_zp_mul_scalar_fmpz (c function)": [[0, "c.unity_zp_mul_scalar_fmpz"]], "unity_zp_mul_scalar_ui (c function)": [[0, "c.unity_zp_mul_scalar_ui"]], "unity_zp_pow_2k_fmpz (c function)": [[0, "c.unity_zp_pow_2k_fmpz"]], "unity_zp_pow_2k_ui (c function)": [[0, "c.unity_zp_pow_2k_ui"]], "unity_zp_pow_fmpz (c function)": [[0, "c.unity_zp_pow_fmpz"]], "unity_zp_pow_sliding_fmpz (c function)": [[0, "c.unity_zp_pow_sliding_fmpz"]], "unity_zp_pow_ui (c function)": [[0, "c.unity_zp_pow_ui"]], "unity_zp_print (c function)": [[0, "c.unity_zp_print"]], "unity_zp_reduce_cyclotomic (c function)": [[0, "c.unity_zp_reduce_cyclotomic"]], "unity_zp_set_zero (c function)": [[0, "c.unity_zp_set_zero"]], "unity_zp_sqr (c function)": [[0, "c.unity_zp_sqr"]], "unity_zp_sqr_inplace (c function)": [[0, "c.unity_zp_sqr_inplace"]], "unity_zp_swap (c function)": [[0, "c.unity_zp_swap"]], "unity_zpq (c type)": [[0, "c.unity_zpq"]], "unity_zpq_add (c function)": [[0, "c.unity_zpq_add"]], "unity_zpq_clear (c function)": [[0, "c.unity_zpq_clear"]], "unity_zpq_coeff_add (c function)": [[0, "c.unity_zpq_coeff_add"]], "unity_zpq_coeff_set_fmpz (c function)": [[0, "c.unity_zpq_coeff_set_fmpz"]], "unity_zpq_coeff_set_ui (c function)": [[0, "c.unity_zpq_coeff_set_ui"]], "unity_zpq_copy (c function)": [[0, "c.unity_zpq_copy"]], "unity_zpq_equal (c function)": [[0, "c.unity_zpq_equal"]], "unity_zpq_gauss_sum (c function)": [[0, "c.unity_zpq_gauss_sum"]], "unity_zpq_gauss_sum_sigma_pow (c function)": [[0, "c.unity_zpq_gauss_sum_sigma_pow"]], "unity_zpq_init (c function)": [[0, "c.unity_zpq_init"]], "unity_zpq_is_p_unity (c function)": [[0, "c.unity_zpq_is_p_unity"]], "unity_zpq_is_p_unity_generator (c function)": [[0, "c.unity_zpq_is_p_unity_generator"]], "unity_zpq_mul (c function)": [[0, "c.unity_zpq_mul"]], "unity_zpq_mul_unity_p_pow (c function)": [[0, "c.unity_zpq_mul_unity_p_pow"]], "unity_zpq_p_unity (c function)": [[0, "c.unity_zpq_p_unity"]], "unity_zpq_pow (c function)": [[0, "c.unity_zpq_pow"]], "unity_zpq_pow_ui (c function)": [[0, "c.unity_zpq_pow_ui"]], "unity_zpq_swap (c function)": [[0, "c.unity_zpq_swap"]], "_arith_bernoulli_number (c function)": [[1, "c._arith_bernoulli_number"]], "_arith_bernoulli_number_vec (c function)": [[1, "c._arith_bernoulli_number_vec"]], "_arith_bernoulli_number_vec_multi_mod (c function)": [[1, "c._arith_bernoulli_number_vec_multi_mod"]], "_arith_bernoulli_number_vec_recursive (c function)": [[1, "c._arith_bernoulli_number_vec_recursive"]], "_arith_bernoulli_number_vec_zeta (c function)": [[1, "c._arith_bernoulli_number_vec_zeta"]], "_arith_bernoulli_number_zeta (c function)": [[1, "c._arith_bernoulli_number_zeta"]], "_arith_cos_minpoly (c function)": [[1, "c._arith_cos_minpoly"]], "_arith_euler_number_zeta (c function)": [[1, "c._arith_euler_number_zeta"]], "_arith_harmonic_number (c function)": [[1, "c._arith_harmonic_number"]], "arith_bell_number (c function)": [[1, "c.arith_bell_number"]], "arith_bell_number_dobinski (c function)": [[1, "c.arith_bell_number_dobinski"]], "arith_bell_number_multi_mod (c function)": [[1, "c.arith_bell_number_multi_mod"]], "arith_bell_number_nmod (c function)": [[1, "c.arith_bell_number_nmod"]], "arith_bell_number_nmod_vec (c function)": [[1, "c.arith_bell_number_nmod_vec"]], "arith_bell_number_nmod_vec_ogf (c function)": [[1, "c.arith_bell_number_nmod_vec_ogf"]], "arith_bell_number_nmod_vec_recursive (c function)": [[1, "c.arith_bell_number_nmod_vec_recursive"]], "arith_bell_number_nmod_vec_series (c function)": [[1, "c.arith_bell_number_nmod_vec_series"]], "arith_bell_number_size (c function)": [[1, "c.arith_bell_number_size"]], "arith_bell_number_vec (c function)": [[1, "c.arith_bell_number_vec"]], "arith_bell_number_vec_multi_mod (c function)": [[1, "c.arith_bell_number_vec_multi_mod"]], "arith_bell_number_vec_recursive (c function)": [[1, "c.arith_bell_number_vec_recursive"]], "arith_bernoulli_number (c function)": [[1, "c.arith_bernoulli_number"]], "arith_bernoulli_number_denom (c function)": [[1, "c.arith_bernoulli_number_denom"]], "arith_bernoulli_number_size (c function)": [[1, "c.arith_bernoulli_number_size"]], "arith_bernoulli_number_vec (c function)": [[1, "c.arith_bernoulli_number_vec"]], "arith_bernoulli_polynomial (c function)": [[1, "c.arith_bernoulli_polynomial"]], "arith_cos_minpoly (c function)": [[1, "c.arith_cos_minpoly"]], "arith_dedekind_sum (c function)": [[1, "c.arith_dedekind_sum"]], "arith_dedekind_sum_coprime (c function)": [[1, "c.arith_dedekind_sum_coprime"]], "arith_dedekind_sum_coprime_d (c function)": [[1, "c.arith_dedekind_sum_coprime_d"]], "arith_dedekind_sum_coprime_large (c function)": [[1, "c.arith_dedekind_sum_coprime_large"]], "arith_dedekind_sum_naive (c function)": [[1, "c.arith_dedekind_sum_naive"]], "arith_divisor_sigma (c function)": [[1, "c.arith_divisor_sigma"]], "arith_divisors (c function)": [[1, "c.arith_divisors"]], "arith_euler_number (c function)": [[1, "c.arith_euler_number"]], "arith_euler_number_size (c function)": [[1, "c.arith_euler_number_size"]], "arith_euler_number_vec (c function)": [[1, "c.arith_euler_number_vec"]], "arith_euler_phi (c function)": [[1, "c.arith_euler_phi"]], "arith_euler_polynomial (c function)": [[1, "c.arith_euler_polynomial"]], "arith_harmonic_number (c function)": [[1, "c.arith_harmonic_number"]], "arith_hrr_expsum_factored (c function)": [[1, "c.arith_hrr_expsum_factored"]], "arith_landau_function_vec (c function)": [[1, "c.arith_landau_function_vec"]], "arith_moebius_mu (c function)": [[1, "c.arith_moebius_mu"]], "arith_number_of_partitions (c function)": [[1, "c.arith_number_of_partitions"]], "arith_number_of_partitions_mpfr (c function)": [[1, "c.arith_number_of_partitions_mpfr"]], "arith_number_of_partitions_nmod_vec (c function)": [[1, "c.arith_number_of_partitions_nmod_vec"]], "arith_number_of_partitions_vec (c function)": [[1, "c.arith_number_of_partitions_vec"]], "arith_primorial (c function)": [[1, "c.arith_primorial"]], "arith_ramanujan_tau (c function)": [[1, "c.arith_ramanujan_tau"]], "arith_ramanujan_tau_series (c function)": [[1, "c.arith_ramanujan_tau_series"]], "arith_stirling_matrix_1 (c function)": [[1, "c.arith_stirling_matrix_1"]], "arith_stirling_matrix_1u (c function)": [[1, "c.arith_stirling_matrix_1u"]], "arith_stirling_matrix_2 (c function)": [[1, "c.arith_stirling_matrix_2"]], "arith_stirling_number_1 (c function)": [[1, "c.arith_stirling_number_1"]], "arith_stirling_number_1_vec (c function)": [[1, "c.arith_stirling_number_1_vec"]], "arith_stirling_number_1_vec_next (c function)": [[1, "c.arith_stirling_number_1_vec_next"]], "arith_stirling_number_1u (c function)": [[1, "c.arith_stirling_number_1u"]], "arith_stirling_number_1u_vec (c function)": [[1, "c.arith_stirling_number_1u_vec"]], "arith_stirling_number_1u_vec_next (c function)": [[1, "c.arith_stirling_number_1u_vec_next"]], "arith_stirling_number_2 (c function)": [[1, "c.arith_stirling_number_2"]], "arith_stirling_number_2_vec (c function)": [[1, "c.arith_stirling_number_2_vec"]], "arith_stirling_number_2_vec_next (c function)": [[1, "c.arith_stirling_number_2_vec_next"]], "arith_sum_of_squares (c function)": [[1, "c.arith_sum_of_squares"]], "arith_sum_of_squares_vec (c function)": [[1, "c.arith_sum_of_squares_vec"]], "d_mat_approx_equal (c function)": [[5, "c.d_mat_approx_equal"]], "d_mat_clear (c function)": [[5, "c.d_mat_clear"]], "d_mat_entry (c function)": [[5, "c.d_mat_entry"]], "d_mat_entry_ptr (c function)": [[5, "c.d_mat_entry_ptr"]], "d_mat_equal (c function)": [[5, "c.d_mat_equal"]], "d_mat_get_entry (c function)": [[5, "c.d_mat_get_entry"]], "d_mat_gso (c function)": [[5, "c.d_mat_gso"]], "d_mat_init (c function)": [[5, "c.d_mat_init"]], "d_mat_is_approx_zero (c function)": [[5, "c.d_mat_is_approx_zero"]], "d_mat_is_empty (c function)": [[5, "c.d_mat_is_empty"]], "d_mat_is_square (c function)": [[5, "c.d_mat_is_square"]], "d_mat_is_zero (c function)": [[5, "c.d_mat_is_zero"]], "d_mat_mul_classical (c function)": [[5, "c.d_mat_mul_classical"]], "d_mat_one (c function)": [[5, "c.d_mat_one"]], "d_mat_print (c function)": [[5, "c.d_mat_print"]], "d_mat_qr (c function)": [[5, "c.d_mat_qr"]], "d_mat_randtest (c function)": [[5, "c.d_mat_randtest"]], "d_mat_set (c function)": [[5, "c.d_mat_set"]], "d_mat_swap (c function)": [[5, "c.d_mat_swap"]], "d_mat_swap_entrywise (c function)": [[5, "c.d_mat_swap_entrywise"]], "d_mat_transpose (c function)": [[5, "c.d_mat_transpose"]], "d_mat_zero (c function)": [[5, "c.d_mat_zero"]], "_d_vec_add (c function)": [[6, "c._d_vec_add"]], "_d_vec_approx_equal (c function)": [[6, "c._d_vec_approx_equal"]], "_d_vec_clear (c function)": [[6, "c._d_vec_clear"]], "_d_vec_dot (c function)": [[6, "c._d_vec_dot"]], "_d_vec_dot_heuristic (c function)": [[6, "c._d_vec_dot_heuristic"]], "_d_vec_dot_thrice (c function)": [[6, "c._d_vec_dot_thrice"]], "_d_vec_equal (c function)": [[6, "c._d_vec_equal"]], "_d_vec_init (c function)": [[6, "c._d_vec_init"]], "_d_vec_is_approx_zero (c function)": [[6, "c._d_vec_is_approx_zero"]], "_d_vec_is_zero (c function)": [[6, "c._d_vec_is_zero"]], "_d_vec_norm (c function)": [[6, "c._d_vec_norm"]], "_d_vec_randtest (c function)": [[6, "c._d_vec_randtest"]], "_d_vec_set (c function)": [[6, "c._d_vec_set"]], "_d_vec_sub (c function)": [[6, "c._d_vec_sub"]], "_d_vec_zero (c function)": [[6, "c._d_vec_zero"]], "d_is_nan (c function)": [[7, "c.d_is_nan"]], "d_lambertw (c function)": [[7, "c.d_lambertw"]], "d_log2 (c function)": [[7, "c.d_log2"]], "d_polyval (c function)": [[7, "c.d_polyval"]], "d_randtest (c function)": [[7, "c.d_randtest"]], "d_randtest_signed (c function)": [[7, "c.d_randtest_signed"]], "d_randtest_special (c function)": [[7, "c.d_randtest_special"]], "_fft_mulmod_2expp1 (c function)": [[9, "c._fft_mulmod_2expp1"]], "butterfly_lshb (c function)": [[9, "c.butterfly_lshB"]], "butterfly_rshb (c function)": [[9, "c.butterfly_rshB"]], "fermat_to_mpz (c function)": [[9, "c.fermat_to_mpz"]], "fft_adjust (c function)": [[9, "c.fft_adjust"]], "fft_adjust_limbs (c function)": [[9, "c.fft_adjust_limbs"]], "fft_adjust_sqrt2 (c function)": [[9, "c.fft_adjust_sqrt2"]], "fft_butterfly (c function)": [[9, "c.fft_butterfly"]], "fft_butterfly_sqrt2 (c function)": [[9, "c.fft_butterfly_sqrt2"]], "fft_butterfly_twiddle (c function)": [[9, "c.fft_butterfly_twiddle"]], "fft_combine_bits (c function)": [[9, "c.fft_combine_bits"]], "fft_combine_limbs (c function)": [[9, "c.fft_combine_limbs"]], "fft_convolution (c function)": [[9, "c.fft_convolution"]], "fft_convolution_precache (c function)": [[9, "c.fft_convolution_precache"]], "fft_mfa_truncate_sqrt2 (c function)": [[9, "c.fft_mfa_truncate_sqrt2"]], "fft_mfa_truncate_sqrt2_inner (c function)": [[9, "c.fft_mfa_truncate_sqrt2_inner"]], "fft_mfa_truncate_sqrt2_outer (c function)": [[9, "c.fft_mfa_truncate_sqrt2_outer"]], "fft_mulmod_2expp1 (c function)": [[9, "c.fft_mulmod_2expp1"]], "fft_naive_convolution_1 (c function)": [[9, "c.fft_naive_convolution_1"]], "fft_negacyclic (c function)": [[9, "c.fft_negacyclic"]], "fft_precache (c function)": [[9, "c.fft_precache"]], "fft_radix2 (c function)": [[9, "c.fft_radix2"]], "fft_radix2_twiddle (c function)": [[9, "c.fft_radix2_twiddle"]], "fft_split_bits (c function)": [[9, "c.fft_split_bits"]], "fft_split_limbs (c function)": [[9, "c.fft_split_limbs"]], "fft_truncate (c function)": [[9, "c.fft_truncate"]], "fft_truncate1 (c function)": [[9, "c.fft_truncate1"]], "fft_truncate1_twiddle (c function)": [[9, "c.fft_truncate1_twiddle"]], "fft_truncate_sqrt2 (c function)": [[9, "c.fft_truncate_sqrt2"]], "flint_mpn_mul_fft_main (c function)": [[9, "c.flint_mpn_mul_fft_main"]], "ifft_butterfly (c function)": [[9, "c.ifft_butterfly"]], "ifft_butterfly_sqrt2 (c function)": [[9, "c.ifft_butterfly_sqrt2"]], "ifft_butterfly_twiddle (c function)": [[9, "c.ifft_butterfly_twiddle"]], "ifft_mfa_truncate_sqrt2 (c function)": [[9, "c.ifft_mfa_truncate_sqrt2"]], "ifft_mfa_truncate_sqrt2_outer (c function)": [[9, "c.ifft_mfa_truncate_sqrt2_outer"]], "ifft_negacyclic (c function)": [[9, "c.ifft_negacyclic"]], "ifft_radix2 (c function)": [[9, "c.ifft_radix2"]], "ifft_radix2_twiddle (c function)": [[9, "c.ifft_radix2_twiddle"]], "ifft_truncate (c function)": [[9, "c.ifft_truncate"]], "ifft_truncate1 (c function)": [[9, "c.ifft_truncate1"]], "ifft_truncate1_twiddle (c function)": [[9, "c.ifft_truncate1_twiddle"]], "ifft_truncate_sqrt2 (c function)": [[9, "c.ifft_truncate_sqrt2"]], "mpn_addmod_2expp1_1 (c function)": [[9, "c.mpn_addmod_2expp1_1"]], "mpn_div_2expmod_2expp1 (c function)": [[9, "c.mpn_div_2expmod_2expp1"]], "mpn_mul_2expmod_2expp1 (c function)": [[9, "c.mpn_mul_2expmod_2expp1"]], "mpn_negmod_2expp1 (c function)": [[9, "c.mpn_negmod_2expp1"]], "mpn_normmod_2expp1 (c function)": [[9, "c.mpn_normmod_2expp1"]], "mul_mfa_truncate_sqrt2 (c function)": [[9, "c.mul_mfa_truncate_sqrt2"]], "mul_truncate_sqrt2 (c function)": [[9, "c.mul_truncate_sqrt2"]], "flint_calloc (c function)": [[10, "c.flint_calloc"]], "flint_fprintf (c function)": [[10, "c.flint_fprintf"]], "flint_free (c function)": [[10, "c.flint_free"]], "flint_fscanf (c function)": [[10, "c.flint_fscanf"]], "flint_get_num_threads (c function)": [[10, "c.flint_get_num_threads"]], "flint_malloc (c function)": [[10, "c.flint_malloc"]], "flint_printf (c function)": [[10, "c.flint_printf"]], "flint_rand_alloc (c function)": [[10, "c.flint_rand_alloc"]], "flint_rand_free (c function)": [[10, "c.flint_rand_free"]], "flint_rand_s (c type)": [[10, "c.flint_rand_s"]], "flint_rand_t (c type)": [[10, "c.flint_rand_t"]], "flint_randclear (c function)": [[10, "c.flint_randclear"]], "flint_randinit (c function)": [[10, "c.flint_randinit"]], "flint_realloc (c function)": [[10, "c.flint_realloc"]], "flint_reset_num_workers (c function)": [[10, "c.flint_reset_num_workers"]], "flint_scanf (c function)": [[10, "c.flint_scanf"]], "flint_set_num_threads (c function)": [[10, "c.flint_set_num_threads"]], "flint_set_num_workers (c function)": [[10, "c.flint_set_num_workers"]], "flint_sprintf (c function)": [[10, "c.flint_sprintf"]], "flint_sscanf (c function)": [[10, "c.flint_sscanf"]], "flint_vprintf (c function)": [[10, "c.flint_vprintf"]], "_fmpq_add (c function)": [[12, "c._fmpq_add"]], "_fmpq_add_fmpz (c function)": [[12, "c._fmpq_add_fmpz"]], "_fmpq_add_si (c function)": [[12, "c._fmpq_add_si"]], "_fmpq_add_small (c function)": [[12, "c._fmpq_add_small"]], "_fmpq_add_ui (c function)": [[12, "c._fmpq_add_ui"]], "_fmpq_addmul (c function)": [[12, "c._fmpq_addmul"]], "_fmpq_canonicalise (c function)": [[12, "c._fmpq_canonicalise"]], "_fmpq_div (c function)": [[12, "c._fmpq_div"]], "_fmpq_fprint (c function)": [[12, "c._fmpq_fprint"]], "_fmpq_gcd (c function)": [[12, "c._fmpq_gcd"]], "_fmpq_gcd_cofactors (c function)": [[12, "c._fmpq_gcd_cofactors"]], "_fmpq_get_str (c function)": [[12, "c._fmpq_get_str"]], "_fmpq_harmonic_ui (c function)": [[12, "c._fmpq_harmonic_ui"]], "_fmpq_is_canonical (c function)": [[12, "c._fmpq_is_canonical"]], "_fmpq_mod_fmpz (c function)": [[12, "c._fmpq_mod_fmpz"]], "_fmpq_mul (c function)": [[12, "c._fmpq_mul"]], "_fmpq_mul_si (c function)": [[12, "c._fmpq_mul_si"]], "_fmpq_mul_small (c function)": [[12, "c._fmpq_mul_small"]], "_fmpq_mul_ui (c function)": [[12, "c._fmpq_mul_ui"]], "_fmpq_next_calkin_wilf (c function)": [[12, "c._fmpq_next_calkin_wilf"]], "_fmpq_next_minimal (c function)": [[12, "c._fmpq_next_minimal"]], "_fmpq_next_signed_calkin_wilf (c function)": [[12, "c._fmpq_next_signed_calkin_wilf"]], "_fmpq_next_signed_minimal (c function)": [[12, "c._fmpq_next_signed_minimal"]], "_fmpq_pow_si (c function)": [[12, "c._fmpq_pow_si"]], "_fmpq_print (c function)": [[12, "c._fmpq_print"]], "_fmpq_randbits (c function)": [[12, "c._fmpq_randbits"]], "_fmpq_randtest (c function)": [[12, "c._fmpq_randtest"]], "_fmpq_reconstruct_fmpz (c function)": [[12, "c._fmpq_reconstruct_fmpz"]], "_fmpq_reconstruct_fmpz_2 (c function)": [[12, "c._fmpq_reconstruct_fmpz_2"]], "_fmpq_reconstruct_fmpz_2_naive (c function)": [[12, "c._fmpq_reconstruct_fmpz_2_naive"]], "_fmpq_set_si (c function)": [[12, "c._fmpq_set_si"]], "_fmpq_set_ui (c function)": [[12, "c._fmpq_set_ui"]], "_fmpq_simplest_between (c function)": [[12, "c._fmpq_simplest_between"]], "_fmpq_sub (c function)": [[12, "c._fmpq_sub"]], "_fmpq_sub_fmpz (c function)": [[12, "c._fmpq_sub_fmpz"]], "_fmpq_sub_si (c function)": [[12, "c._fmpq_sub_si"]], "_fmpq_sub_ui (c function)": [[12, "c._fmpq_sub_ui"]], "_fmpq_submul (c function)": [[12, "c._fmpq_submul"]], "flint_mpq_clear_readonly (c function)": [[12, "c.flint_mpq_clear_readonly"]], "flint_mpq_init_set_readonly (c function)": [[12, "c.flint_mpq_init_set_readonly"]], "fmpq (c type)": [[12, "c.fmpq"]], "fmpq_abs (c function)": [[12, "c.fmpq_abs"]], "fmpq_add (c function)": [[12, "c.fmpq_add"]], "fmpq_add_fmpz (c function)": [[12, "c.fmpq_add_fmpz"]], "fmpq_add_si (c function)": [[12, "c.fmpq_add_si"]], "fmpq_add_ui (c function)": [[12, "c.fmpq_add_ui"]], "fmpq_addmul (c function)": [[12, "c.fmpq_addmul"]], "fmpq_canonicalise (c function)": [[12, "c.fmpq_canonicalise"]], "fmpq_cfrac_bound (c function)": [[12, "c.fmpq_cfrac_bound"]], "fmpq_clear (c function)": [[12, "c.fmpq_clear"]], "fmpq_clear_readonly (c function)": [[12, "c.fmpq_clear_readonly"]], "fmpq_cmp (c function)": [[12, "c.fmpq_cmp"]], "fmpq_cmp_fmpz (c function)": [[12, "c.fmpq_cmp_fmpz"]], "fmpq_cmp_si (c function)": [[12, "c.fmpq_cmp_si"]], "fmpq_cmp_ui (c function)": [[12, "c.fmpq_cmp_ui"]], "fmpq_dedekind_sum (c function)": [[12, "c.fmpq_dedekind_sum"]], "fmpq_dedekind_sum_naive (c function)": [[12, "c.fmpq_dedekind_sum_naive"]], "fmpq_div (c function)": [[12, "c.fmpq_div"]], "fmpq_div_2exp (c function)": [[12, "c.fmpq_div_2exp"]], "fmpq_div_fmpz (c function)": [[12, "c.fmpq_div_fmpz"]], "fmpq_equal (c function)": [[12, "c.fmpq_equal"]], "fmpq_equal_si (c function)": [[12, "c.fmpq_equal_si"]], "fmpq_equal_ui (c function)": [[12, "c.fmpq_equal_ui"]], "fmpq_farey_neighbors (c function)": [[12, "c.fmpq_farey_neighbors"]], "fmpq_fprint (c function)": [[12, "c.fmpq_fprint"]], "fmpq_gcd (c function)": [[12, "c.fmpq_gcd"]], "fmpq_gcd_cofactors (c function)": [[12, "c.fmpq_gcd_cofactors"]], "fmpq_get_cfrac (c function)": [[12, "c.fmpq_get_cfrac"]], "fmpq_get_cfrac_naive (c function)": [[12, "c.fmpq_get_cfrac_naive"]], "fmpq_get_d (c function)": [[12, "c.fmpq_get_d"]], "fmpq_get_mpfr (c function)": [[12, "c.fmpq_get_mpfr"]], "fmpq_get_mpq (c function)": [[12, "c.fmpq_get_mpq"]], "fmpq_get_mpz_frac (c function)": [[12, "c.fmpq_get_mpz_frac"]], "fmpq_get_str (c function)": [[12, "c.fmpq_get_str"]], "fmpq_harmonic_ui (c function)": [[12, "c.fmpq_harmonic_ui"]], "fmpq_height (c function)": [[12, "c.fmpq_height"]], "fmpq_height_bits (c function)": [[12, "c.fmpq_height_bits"]], "fmpq_init (c function)": [[12, "c.fmpq_init"]], "fmpq_init_set_mpz_frac_readonly (c function)": [[12, "c.fmpq_init_set_mpz_frac_readonly"]], "fmpq_init_set_readonly (c function)": [[12, "c.fmpq_init_set_readonly"]], "fmpq_inv (c function)": [[12, "c.fmpq_inv"]], "fmpq_is_canonical (c function)": [[12, "c.fmpq_is_canonical"]], "fmpq_is_one (c function)": [[12, "c.fmpq_is_one"]], "fmpq_is_pm1 (c function)": [[12, "c.fmpq_is_pm1"]], "fmpq_is_zero (c function)": [[12, "c.fmpq_is_zero"]], "fmpq_mod_fmpz (c function)": [[12, "c.fmpq_mod_fmpz"]], "fmpq_mul (c function)": [[12, "c.fmpq_mul"]], "fmpq_mul_2exp (c function)": [[12, "c.fmpq_mul_2exp"]], "fmpq_mul_fmpz (c function)": [[12, "c.fmpq_mul_fmpz"]], "fmpq_mul_si (c function)": [[12, "c.fmpq_mul_si"]], "fmpq_mul_ui (c function)": [[12, "c.fmpq_mul_ui"]], "fmpq_neg (c function)": [[12, "c.fmpq_neg"]], "fmpq_next_calkin_wilf (c function)": [[12, "c.fmpq_next_calkin_wilf"]], "fmpq_next_minimal (c function)": [[12, "c.fmpq_next_minimal"]], "fmpq_next_signed_calkin_wilf (c function)": [[12, "c.fmpq_next_signed_calkin_wilf"]], "fmpq_next_signed_minimal (c function)": [[12, "c.fmpq_next_signed_minimal"]], "fmpq_one (c function)": [[12, "c.fmpq_one"]], "fmpq_pow_fmpz (c function)": [[12, "c.fmpq_pow_fmpz"]], "fmpq_pow_si (c function)": [[12, "c.fmpq_pow_si"]], "fmpq_print (c function)": [[12, "c.fmpq_print"]], "fmpq_randbits (c function)": [[12, "c.fmpq_randbits"]], "fmpq_randtest (c function)": [[12, "c.fmpq_randtest"]], "fmpq_randtest_not_zero (c function)": [[12, "c.fmpq_randtest_not_zero"]], "fmpq_reconstruct_fmpz (c function)": [[12, "c.fmpq_reconstruct_fmpz"]], "fmpq_reconstruct_fmpz_2 (c function)": [[12, "c.fmpq_reconstruct_fmpz_2"]], "fmpq_set (c function)": [[12, "c.fmpq_set"]], "fmpq_set_cfrac (c function)": [[12, "c.fmpq_set_cfrac"]], "fmpq_set_fmpz_frac (c function)": [[12, "c.fmpq_set_fmpz_frac"]], "fmpq_set_mpq (c function)": [[12, "c.fmpq_set_mpq"]], "fmpq_set_si (c function)": [[12, "c.fmpq_set_si"]], "fmpq_set_str (c function)": [[12, "c.fmpq_set_str"]], "fmpq_set_ui (c function)": [[12, "c.fmpq_set_ui"]], "fmpq_sgn (c function)": [[12, "c.fmpq_sgn"]], "fmpq_simplest_between (c function)": [[12, "c.fmpq_simplest_between"]], "fmpq_sub (c function)": [[12, "c.fmpq_sub"]], "fmpq_sub_fmpz (c function)": [[12, "c.fmpq_sub_fmpz"]], "fmpq_sub_si (c function)": [[12, "c.fmpq_sub_si"]], "fmpq_sub_ui (c function)": [[12, "c.fmpq_sub_ui"]], "fmpq_submul (c function)": [[12, "c.fmpq_submul"]], "fmpq_swap (c function)": [[12, "c.fmpq_swap"]], "fmpq_t (c type)": [[12, "c.fmpq_t"]], "fmpq_zero (c function)": [[12, "c.fmpq_zero"]], "_fmpq_mat_charpoly (c function)": [[13, "c._fmpq_mat_charpoly"]], "_fmpq_mat_minpoly (c function)": [[13, "c._fmpq_mat_minpoly"]], "fmpq_mat_add (c function)": [[13, "c.fmpq_mat_add"]], "fmpq_mat_can_solve (c function)": [[13, "c.fmpq_mat_can_solve"]], "fmpq_mat_can_solve_fraction_free (c function)": [[13, "c.fmpq_mat_can_solve_fraction_free"]], "fmpq_mat_can_solve_multi_mod (c function)": [[13, "c.fmpq_mat_can_solve_multi_mod"]], "fmpq_mat_charpoly (c function)": [[13, "c.fmpq_mat_charpoly"]], "fmpq_mat_clear (c function)": [[13, "c.fmpq_mat_clear"]], "fmpq_mat_concat_horizontal (c function)": [[13, "c.fmpq_mat_concat_horizontal"]], "fmpq_mat_concat_vertical (c function)": [[13, "c.fmpq_mat_concat_vertical"]], "fmpq_mat_det (c function)": [[13, "c.fmpq_mat_det"]], "fmpq_mat_entry (c function)": [[13, "c.fmpq_mat_entry"]], "fmpq_mat_entry_den (c function)": [[13, "c.fmpq_mat_entry_den"]], "fmpq_mat_entry_num (c function)": [[13, "c.fmpq_mat_entry_num"]], "fmpq_mat_equal (c function)": [[13, "c.fmpq_mat_equal"]], "fmpq_mat_fmpq_vec_mul (c function)": [[13, "c.fmpq_mat_fmpq_vec_mul"]], "fmpq_mat_fmpq_vec_mul_ptr (c function)": [[13, "c.fmpq_mat_fmpq_vec_mul_ptr"]], "fmpq_mat_fmpz_vec_mul (c function)": [[13, "c.fmpq_mat_fmpz_vec_mul"]], "fmpq_mat_fmpz_vec_mul_ptr (c function)": [[13, "c.fmpq_mat_fmpz_vec_mul_ptr"]], "fmpq_mat_get_fmpz_mat (c function)": [[13, "c.fmpq_mat_get_fmpz_mat"]], "fmpq_mat_get_fmpz_mat_colwise (c function)": [[13, "c.fmpq_mat_get_fmpz_mat_colwise"]], "fmpq_mat_get_fmpz_mat_entrywise (c function)": [[13, "c.fmpq_mat_get_fmpz_mat_entrywise"]], "fmpq_mat_get_fmpz_mat_matwise (c function)": [[13, "c.fmpq_mat_get_fmpz_mat_matwise"]], "fmpq_mat_get_fmpz_mat_mod_fmpz (c function)": [[13, "c.fmpq_mat_get_fmpz_mat_mod_fmpz"]], "fmpq_mat_get_fmpz_mat_rowwise (c function)": [[13, "c.fmpq_mat_get_fmpz_mat_rowwise"]], "fmpq_mat_get_fmpz_mat_rowwise_2 (c function)": [[13, "c.fmpq_mat_get_fmpz_mat_rowwise_2"]], "fmpq_mat_gso (c function)": [[13, "c.fmpq_mat_gso"]], "fmpq_mat_hilbert_matrix (c function)": [[13, "c.fmpq_mat_hilbert_matrix"]], "fmpq_mat_init (c function)": [[13, "c.fmpq_mat_init"]], "fmpq_mat_init_set (c function)": [[13, "c.fmpq_mat_init_set"]], "fmpq_mat_inv (c function)": [[13, "c.fmpq_mat_inv"]], "fmpq_mat_invert_cols (c function)": [[13, "c.fmpq_mat_invert_cols"]], "fmpq_mat_invert_rows (c function)": [[13, "c.fmpq_mat_invert_rows"]], "fmpq_mat_is_empty (c function)": [[13, "c.fmpq_mat_is_empty"]], "fmpq_mat_is_integral (c function)": [[13, "c.fmpq_mat_is_integral"]], "fmpq_mat_is_one (c function)": [[13, "c.fmpq_mat_is_one"]], "fmpq_mat_is_square (c function)": [[13, "c.fmpq_mat_is_square"]], "fmpq_mat_is_zero (c function)": [[13, "c.fmpq_mat_is_zero"]], "fmpq_mat_kronecker_product (c function)": [[13, "c.fmpq_mat_kronecker_product"]], "fmpq_mat_minpoly (c function)": [[13, "c.fmpq_mat_minpoly"]], "fmpq_mat_mul (c function)": [[13, "c.fmpq_mat_mul"]], "fmpq_mat_mul_cleared (c function)": [[13, "c.fmpq_mat_mul_cleared"]], "fmpq_mat_mul_direct (c function)": [[13, "c.fmpq_mat_mul_direct"]], "fmpq_mat_mul_fmpq_vec (c function)": [[13, "c.fmpq_mat_mul_fmpq_vec"]], "fmpq_mat_mul_fmpq_vec_ptr (c function)": [[13, "c.fmpq_mat_mul_fmpq_vec_ptr"]], "fmpq_mat_mul_fmpz_mat (c function)": [[13, "c.fmpq_mat_mul_fmpz_mat"]], "fmpq_mat_mul_fmpz_vec (c function)": [[13, "c.fmpq_mat_mul_fmpz_vec"]], "fmpq_mat_mul_fmpz_vec_ptr (c function)": [[13, "c.fmpq_mat_mul_fmpz_vec_ptr"]], "fmpq_mat_mul_r_fmpz_mat (c function)": [[13, "c.fmpq_mat_mul_r_fmpz_mat"]], "fmpq_mat_ncols (c function)": [[13, "c.fmpq_mat_ncols"]], "fmpq_mat_neg (c function)": [[13, "c.fmpq_mat_neg"]], "fmpq_mat_nrows (c function)": [[13, "c.fmpq_mat_nrows"]], "fmpq_mat_one (c function)": [[13, "c.fmpq_mat_one"]], "fmpq_mat_pivot (c function)": [[13, "c.fmpq_mat_pivot"]], "fmpq_mat_print (c function)": [[13, "c.fmpq_mat_print"]], "fmpq_mat_randbits (c function)": [[13, "c.fmpq_mat_randbits"]], "fmpq_mat_randtest (c function)": [[13, "c.fmpq_mat_randtest"]], "fmpq_mat_rref (c function)": [[13, "c.fmpq_mat_rref"]], "fmpq_mat_rref_classical (c function)": [[13, "c.fmpq_mat_rref_classical"]], "fmpq_mat_rref_fraction_free (c function)": [[13, "c.fmpq_mat_rref_fraction_free"]], "fmpq_mat_scalar_div_fmpz (c function)": [[13, "c.fmpq_mat_scalar_div_fmpz"]], "fmpq_mat_scalar_mul_fmpq (c function)": [[13, "c.fmpq_mat_scalar_mul_fmpq"]], "fmpq_mat_scalar_mul_fmpz (c function)": [[13, "c.fmpq_mat_scalar_mul_fmpz"]], "fmpq_mat_set (c function)": [[13, "c.fmpq_mat_set"]], "fmpq_mat_set_fmpz_mat (c function)": [[13, "c.fmpq_mat_set_fmpz_mat"]], "fmpq_mat_set_fmpz_mat_div_fmpz (c function)": [[13, "c.fmpq_mat_set_fmpz_mat_div_fmpz"]], "fmpq_mat_set_fmpz_mat_mod_fmpz (c function)": [[13, "c.fmpq_mat_set_fmpz_mat_mod_fmpz"]], "fmpq_mat_similarity (c function)": [[13, "c.fmpq_mat_similarity"]], "fmpq_mat_solve (c function)": [[13, "c.fmpq_mat_solve"]], "fmpq_mat_solve_dixon (c function)": [[13, "c.fmpq_mat_solve_dixon"]], "fmpq_mat_solve_fmpz_mat (c function)": [[13, "c.fmpq_mat_solve_fmpz_mat"]], "fmpq_mat_solve_fmpz_mat_dixon (c function)": [[13, "c.fmpq_mat_solve_fmpz_mat_dixon"]], "fmpq_mat_solve_fmpz_mat_fraction_free (c function)": [[13, "c.fmpq_mat_solve_fmpz_mat_fraction_free"]], "fmpq_mat_solve_fmpz_mat_multi_mod (c function)": [[13, "c.fmpq_mat_solve_fmpz_mat_multi_mod"]], "fmpq_mat_solve_fraction_free (c function)": [[13, "c.fmpq_mat_solve_fraction_free"]], "fmpq_mat_solve_multi_mod (c function)": [[13, "c.fmpq_mat_solve_multi_mod"]], "fmpq_mat_struct (c type)": [[13, "c.fmpq_mat_struct"]], "fmpq_mat_sub (c function)": [[13, "c.fmpq_mat_sub"]], "fmpq_mat_swap (c function)": [[13, "c.fmpq_mat_swap"]], "fmpq_mat_swap_cols (c function)": [[13, "c.fmpq_mat_swap_cols"]], "fmpq_mat_swap_entrywise (c function)": [[13, "c.fmpq_mat_swap_entrywise"]], "fmpq_mat_swap_rows (c function)": [[13, "c.fmpq_mat_swap_rows"]], "fmpq_mat_t (c type)": [[13, "c.fmpq_mat_t"]], "fmpq_mat_trace (c function)": [[13, "c.fmpq_mat_trace"]], "fmpq_mat_transpose (c function)": [[13, "c.fmpq_mat_transpose"]], "fmpq_mat_window_clear (c function)": [[13, "c.fmpq_mat_window_clear"]], "fmpq_mat_window_init (c function)": [[13, "c.fmpq_mat_window_init"]], "fmpq_mat_zero (c function)": [[13, "c.fmpq_mat_zero"]], "fmpq_mpoly_add (c function)": [[14, "c.fmpq_mpoly_add"]], "fmpq_mpoly_add_fmpq (c function)": [[14, "c.fmpq_mpoly_add_fmpq"]], "fmpq_mpoly_add_fmpz (c function)": [[14, "c.fmpq_mpoly_add_fmpz"]], "fmpq_mpoly_add_si (c function)": [[14, "c.fmpq_mpoly_add_si"]], "fmpq_mpoly_add_ui (c function)": [[14, "c.fmpq_mpoly_add_ui"]], "fmpq_mpoly_clear (c function)": [[14, "c.fmpq_mpoly_clear"]], "fmpq_mpoly_cmp (c function)": [[14, "c.fmpq_mpoly_cmp"]], "fmpq_mpoly_combine_like_terms (c function)": [[14, "c.fmpq_mpoly_combine_like_terms"]], "fmpq_mpoly_compose_fmpq_mpoly (c function)": [[14, "c.fmpq_mpoly_compose_fmpq_mpoly"]], "fmpq_mpoly_compose_fmpq_mpoly_gen (c function)": [[14, "c.fmpq_mpoly_compose_fmpq_mpoly_gen"]], "fmpq_mpoly_compose_fmpq_poly (c function)": [[14, "c.fmpq_mpoly_compose_fmpq_poly"]], "fmpq_mpoly_content (c function)": [[14, "c.fmpq_mpoly_content"]], "fmpq_mpoly_content_ref (c function)": [[14, "c.fmpq_mpoly_content_ref"]], "fmpq_mpoly_content_vars (c function)": [[14, "c.fmpq_mpoly_content_vars"]], "fmpq_mpoly_ctx_clear (c function)": [[14, "c.fmpq_mpoly_ctx_clear"]], "fmpq_mpoly_ctx_init (c function)": [[14, "c.fmpq_mpoly_ctx_init"]], "fmpq_mpoly_ctx_nvars (c function)": [[14, "c.fmpq_mpoly_ctx_nvars"]], "fmpq_mpoly_ctx_ord (c function)": [[14, "c.fmpq_mpoly_ctx_ord"]], "fmpq_mpoly_ctx_struct (c type)": [[14, "c.fmpq_mpoly_ctx_struct"]], "fmpq_mpoly_ctx_t (c type)": [[14, "c.fmpq_mpoly_ctx_t"]], "fmpq_mpoly_degree_fmpz (c function)": [[14, "c.fmpq_mpoly_degree_fmpz"]], "fmpq_mpoly_degree_si (c function)": [[14, "c.fmpq_mpoly_degree_si"]], "fmpq_mpoly_degrees_fit_si (c function)": [[14, "c.fmpq_mpoly_degrees_fit_si"]], "fmpq_mpoly_degrees_fmpz (c function)": [[14, "c.fmpq_mpoly_degrees_fmpz"]], "fmpq_mpoly_degrees_si (c function)": [[14, "c.fmpq_mpoly_degrees_si"]], "fmpq_mpoly_derivative (c function)": [[14, "c.fmpq_mpoly_derivative"]], "fmpq_mpoly_discriminant (c function)": [[14, "c.fmpq_mpoly_discriminant"]], "fmpq_mpoly_div (c function)": [[14, "c.fmpq_mpoly_div"]], "fmpq_mpoly_divides (c function)": [[14, "c.fmpq_mpoly_divides"]], "fmpq_mpoly_divrem (c function)": [[14, "c.fmpq_mpoly_divrem"]], "fmpq_mpoly_divrem_ideal (c function)": [[14, "c.fmpq_mpoly_divrem_ideal"]], "fmpq_mpoly_equal (c function)": [[14, "c.fmpq_mpoly_equal"]], "fmpq_mpoly_equal_fmpq (c function)": [[14, "c.fmpq_mpoly_equal_fmpq"]], "fmpq_mpoly_equal_fmpz (c function)": [[14, "c.fmpq_mpoly_equal_fmpz"]], "fmpq_mpoly_equal_si (c function)": [[14, "c.fmpq_mpoly_equal_si"]], "fmpq_mpoly_equal_ui (c function)": [[14, "c.fmpq_mpoly_equal_ui"]], "fmpq_mpoly_evaluate_all_fmpq (c function)": [[14, "c.fmpq_mpoly_evaluate_all_fmpq"]], "fmpq_mpoly_evaluate_one_fmpq (c function)": [[14, "c.fmpq_mpoly_evaluate_one_fmpq"]], "fmpq_mpoly_fit_bits (c function)": [[14, "c.fmpq_mpoly_fit_bits"]], "fmpq_mpoly_fit_length (c function)": [[14, "c.fmpq_mpoly_fit_length"]], "fmpq_mpoly_fprint_pretty (c function)": [[14, "c.fmpq_mpoly_fprint_pretty"]], "fmpq_mpoly_from_univar (c function)": [[14, "c.fmpq_mpoly_from_univar"]], "fmpq_mpoly_gcd (c function)": [[14, "c.fmpq_mpoly_gcd"]], "fmpq_mpoly_gcd_brown (c function)": [[14, "c.fmpq_mpoly_gcd_brown"]], "fmpq_mpoly_gcd_cofactors (c function)": [[14, "c.fmpq_mpoly_gcd_cofactors"]], "fmpq_mpoly_gcd_hensel (c function)": [[14, "c.fmpq_mpoly_gcd_hensel"]], "fmpq_mpoly_gcd_subresultant (c function)": [[14, "c.fmpq_mpoly_gcd_subresultant"]], "fmpq_mpoly_gcd_zippel (c function)": [[14, "c.fmpq_mpoly_gcd_zippel"]], "fmpq_mpoly_gcd_zippel2 (c function)": [[14, "c.fmpq_mpoly_gcd_zippel2"]], "fmpq_mpoly_gen (c function)": [[14, "c.fmpq_mpoly_gen"]], "fmpq_mpoly_get_coeff_fmpq_fmpz (c function)": [[14, "c.fmpq_mpoly_get_coeff_fmpq_fmpz"]], "fmpq_mpoly_get_coeff_fmpq_monomial (c function)": [[14, "c.fmpq_mpoly_get_coeff_fmpq_monomial"]], "fmpq_mpoly_get_coeff_fmpq_ui (c function)": [[14, "c.fmpq_mpoly_get_coeff_fmpq_ui"]], "fmpq_mpoly_get_coeff_vars_ui (c function)": [[14, "c.fmpq_mpoly_get_coeff_vars_ui"]], "fmpq_mpoly_get_denominator (c function)": [[14, "c.fmpq_mpoly_get_denominator"]], "fmpq_mpoly_get_fmpq (c function)": [[14, "c.fmpq_mpoly_get_fmpq"]], "fmpq_mpoly_get_str_pretty (c function)": [[14, "c.fmpq_mpoly_get_str_pretty"]], "fmpq_mpoly_get_term (c function)": [[14, "c.fmpq_mpoly_get_term"]], "fmpq_mpoly_get_term_coeff_fmpq (c function)": [[14, "c.fmpq_mpoly_get_term_coeff_fmpq"]], "fmpq_mpoly_get_term_exp_fmpz (c function)": [[14, "c.fmpq_mpoly_get_term_exp_fmpz"]], "fmpq_mpoly_get_term_exp_si (c function)": [[14, "c.fmpq_mpoly_get_term_exp_si"]], "fmpq_mpoly_get_term_exp_ui (c function)": [[14, "c.fmpq_mpoly_get_term_exp_ui"]], "fmpq_mpoly_get_term_monomial (c function)": [[14, "c.fmpq_mpoly_get_term_monomial"]], "fmpq_mpoly_get_term_var_exp_si (c function)": [[14, "c.fmpq_mpoly_get_term_var_exp_si"]], "fmpq_mpoly_get_term_var_exp_ui (c function)": [[14, "c.fmpq_mpoly_get_term_var_exp_ui"]], "fmpq_mpoly_init (c function)": [[14, "c.fmpq_mpoly_init"]], "fmpq_mpoly_init2 (c function)": [[14, "c.fmpq_mpoly_init2"]], "fmpq_mpoly_init3 (c function)": [[14, "c.fmpq_mpoly_init3"]], "fmpq_mpoly_integral (c function)": [[14, "c.fmpq_mpoly_integral"]], "fmpq_mpoly_is_canonical (c function)": [[14, "c.fmpq_mpoly_is_canonical"]], "fmpq_mpoly_is_fmpq (c function)": [[14, "c.fmpq_mpoly_is_fmpq"]], "fmpq_mpoly_is_gen (c function)": [[14, "c.fmpq_mpoly_is_gen"]], "fmpq_mpoly_is_one (c function)": [[14, "c.fmpq_mpoly_is_one"]], "fmpq_mpoly_is_square (c function)": [[14, "c.fmpq_mpoly_is_square"]], "fmpq_mpoly_is_zero (c function)": [[14, "c.fmpq_mpoly_is_zero"]], "fmpq_mpoly_length (c function)": [[14, "c.fmpq_mpoly_length"]], "fmpq_mpoly_make_monic (c function)": [[14, "c.fmpq_mpoly_make_monic"]], "fmpq_mpoly_mul (c function)": [[14, "c.fmpq_mpoly_mul"]], "fmpq_mpoly_neg (c function)": [[14, "c.fmpq_mpoly_neg"]], "fmpq_mpoly_one (c function)": [[14, "c.fmpq_mpoly_one"]], "fmpq_mpoly_pow_fmpz (c function)": [[14, "c.fmpq_mpoly_pow_fmpz"]], "fmpq_mpoly_pow_ui (c function)": [[14, "c.fmpq_mpoly_pow_ui"]], "fmpq_mpoly_print_pretty (c function)": [[14, "c.fmpq_mpoly_print_pretty"]], "fmpq_mpoly_push_term_fmpq_fmpz (c function)": [[14, "c.fmpq_mpoly_push_term_fmpq_fmpz"]], "fmpq_mpoly_push_term_fmpq_ui (c function)": [[14, "c.fmpq_mpoly_push_term_fmpq_ui"]], "fmpq_mpoly_push_term_fmpz_fmpz (c function)": [[14, "c.fmpq_mpoly_push_term_fmpz_fmpz"]], "fmpq_mpoly_push_term_fmpz_ui (c function)": [[14, "c.fmpq_mpoly_push_term_fmpz_ui"]], "fmpq_mpoly_push_term_si_fmpz (c function)": [[14, "c.fmpq_mpoly_push_term_si_fmpz"]], "fmpq_mpoly_push_term_si_ui (c function)": [[14, "c.fmpq_mpoly_push_term_si_ui"]], "fmpq_mpoly_push_term_ui_fmpz (c function)": [[14, "c.fmpq_mpoly_push_term_ui_fmpz"]], "fmpq_mpoly_push_term_ui_ui (c function)": [[14, "c.fmpq_mpoly_push_term_ui_ui"]], "fmpq_mpoly_randtest_bits (c function)": [[14, "c.fmpq_mpoly_randtest_bits"]], "fmpq_mpoly_randtest_bound (c function)": [[14, "c.fmpq_mpoly_randtest_bound"]], "fmpq_mpoly_randtest_bounds (c function)": [[14, "c.fmpq_mpoly_randtest_bounds"]], "fmpq_mpoly_realloc (c function)": [[14, "c.fmpq_mpoly_realloc"]], "fmpq_mpoly_reduce (c function)": [[14, "c.fmpq_mpoly_reduce"]], "fmpq_mpoly_resize (c function)": [[14, "c.fmpq_mpoly_resize"]], "fmpq_mpoly_resultant (c function)": [[14, "c.fmpq_mpoly_resultant"]], "fmpq_mpoly_reverse (c function)": [[14, "c.fmpq_mpoly_reverse"]], "fmpq_mpoly_scalar_div_fmpq (c function)": [[14, "c.fmpq_mpoly_scalar_div_fmpq"]], "fmpq_mpoly_scalar_div_fmpz (c function)": [[14, "c.fmpq_mpoly_scalar_div_fmpz"]], "fmpq_mpoly_scalar_div_si (c function)": [[14, "c.fmpq_mpoly_scalar_div_si"]], "fmpq_mpoly_scalar_div_ui (c function)": [[14, "c.fmpq_mpoly_scalar_div_ui"]], "fmpq_mpoly_scalar_mul_fmpq (c function)": [[14, "c.fmpq_mpoly_scalar_mul_fmpq"]], "fmpq_mpoly_scalar_mul_fmpz (c function)": [[14, "c.fmpq_mpoly_scalar_mul_fmpz"]], "fmpq_mpoly_scalar_mul_si (c function)": [[14, "c.fmpq_mpoly_scalar_mul_si"]], "fmpq_mpoly_scalar_mul_ui (c function)": [[14, "c.fmpq_mpoly_scalar_mul_ui"]], "fmpq_mpoly_set (c function)": [[14, "c.fmpq_mpoly_set"]], "fmpq_mpoly_set_coeff_fmpq_fmpz (c function)": [[14, "c.fmpq_mpoly_set_coeff_fmpq_fmpz"]], "fmpq_mpoly_set_coeff_fmpq_monomial (c function)": [[14, "c.fmpq_mpoly_set_coeff_fmpq_monomial"]], "fmpq_mpoly_set_coeff_fmpq_ui (c function)": [[14, "c.fmpq_mpoly_set_coeff_fmpq_ui"]], "fmpq_mpoly_set_fmpq (c function)": [[14, "c.fmpq_mpoly_set_fmpq"]], "fmpq_mpoly_set_fmpz (c function)": [[14, "c.fmpq_mpoly_set_fmpz"]], "fmpq_mpoly_set_si (c function)": [[14, "c.fmpq_mpoly_set_si"]], "fmpq_mpoly_set_str_pretty (c function)": [[14, "c.fmpq_mpoly_set_str_pretty"]], "fmpq_mpoly_set_term_coeff_fmpq (c function)": [[14, "c.fmpq_mpoly_set_term_coeff_fmpq"]], "fmpq_mpoly_set_term_exp_fmpz (c function)": [[14, "c.fmpq_mpoly_set_term_exp_fmpz"]], "fmpq_mpoly_set_term_exp_ui (c function)": [[14, "c.fmpq_mpoly_set_term_exp_ui"]], "fmpq_mpoly_set_ui (c function)": [[14, "c.fmpq_mpoly_set_ui"]], "fmpq_mpoly_sort_terms (c function)": [[14, "c.fmpq_mpoly_sort_terms"]], "fmpq_mpoly_sqrt (c function)": [[14, "c.fmpq_mpoly_sqrt"]], "fmpq_mpoly_struct (c type)": [[14, "c.fmpq_mpoly_struct"]], "fmpq_mpoly_sub (c function)": [[14, "c.fmpq_mpoly_sub"]], "fmpq_mpoly_sub_fmpq (c function)": [[14, "c.fmpq_mpoly_sub_fmpq"]], "fmpq_mpoly_sub_fmpz (c function)": [[14, "c.fmpq_mpoly_sub_fmpz"]], "fmpq_mpoly_sub_si (c function)": [[14, "c.fmpq_mpoly_sub_si"]], "fmpq_mpoly_sub_ui (c function)": [[14, "c.fmpq_mpoly_sub_ui"]], "fmpq_mpoly_swap (c function)": [[14, "c.fmpq_mpoly_swap"]], "fmpq_mpoly_t (c type)": [[14, "c.fmpq_mpoly_t"]], "fmpq_mpoly_term_content (c function)": [[14, "c.fmpq_mpoly_term_content"]], "fmpq_mpoly_term_exp_fits_si (c function)": [[14, "c.fmpq_mpoly_term_exp_fits_si"]], "fmpq_mpoly_term_exp_fits_ui (c function)": [[14, "c.fmpq_mpoly_term_exp_fits_ui"]], "fmpq_mpoly_to_univar (c function)": [[14, "c.fmpq_mpoly_to_univar"]], "fmpq_mpoly_total_degree_fits_si (c function)": [[14, "c.fmpq_mpoly_total_degree_fits_si"]], "fmpq_mpoly_total_degree_fmpz (c function)": [[14, "c.fmpq_mpoly_total_degree_fmpz"]], "fmpq_mpoly_total_degree_si (c function)": [[14, "c.fmpq_mpoly_total_degree_si"]], "fmpq_mpoly_univar_clear (c function)": [[14, "c.fmpq_mpoly_univar_clear"]], "fmpq_mpoly_univar_degree_fits_si (c function)": [[14, "c.fmpq_mpoly_univar_degree_fits_si"]], "fmpq_mpoly_univar_get_term_coeff (c function)": [[14, "c.fmpq_mpoly_univar_get_term_coeff"]], "fmpq_mpoly_univar_get_term_exp_si (c function)": [[14, "c.fmpq_mpoly_univar_get_term_exp_si"]], "fmpq_mpoly_univar_init (c function)": [[14, "c.fmpq_mpoly_univar_init"]], "fmpq_mpoly_univar_length (c function)": [[14, "c.fmpq_mpoly_univar_length"]], "fmpq_mpoly_univar_swap (c function)": [[14, "c.fmpq_mpoly_univar_swap"]], "fmpq_mpoly_univar_swap_term_coeff (c function)": [[14, "c.fmpq_mpoly_univar_swap_term_coeff"]], "fmpq_mpoly_used_vars (c function)": [[14, "c.fmpq_mpoly_used_vars"]], "fmpq_mpoly_zero (c function)": [[14, "c.fmpq_mpoly_zero"]], "fmpq_mpoly_zpoly_ref (c function)": [[14, "c.fmpq_mpoly_zpoly_ref"]], "fmpq_mpoly_zpoly_term_coeff_ref (c function)": [[14, "c.fmpq_mpoly_zpoly_term_coeff_ref"]], "fmpq_mpoly_factor (c function)": [[15, "c.fmpq_mpoly_factor"]], "fmpq_mpoly_factor_clear (c function)": [[15, "c.fmpq_mpoly_factor_clear"]], "fmpq_mpoly_factor_get_base (c function)": [[15, "c.fmpq_mpoly_factor_get_base"]], "fmpq_mpoly_factor_get_constant_fmpq (c function)": [[15, "c.fmpq_mpoly_factor_get_constant_fmpq"]], "fmpq_mpoly_factor_get_exp_si (c function)": [[15, "c.fmpq_mpoly_factor_get_exp_si"]], "fmpq_mpoly_factor_init (c function)": [[15, "c.fmpq_mpoly_factor_init"]], "fmpq_mpoly_factor_length (c function)": [[15, "c.fmpq_mpoly_factor_length"]], "fmpq_mpoly_factor_make_integral (c function)": [[15, "c.fmpq_mpoly_factor_make_integral"]], "fmpq_mpoly_factor_make_monic (c function)": [[15, "c.fmpq_mpoly_factor_make_monic"]], "fmpq_mpoly_factor_sort (c function)": [[15, "c.fmpq_mpoly_factor_sort"]], "fmpq_mpoly_factor_squarefree (c function)": [[15, "c.fmpq_mpoly_factor_squarefree"]], "fmpq_mpoly_factor_struct (c type)": [[15, "c.fmpq_mpoly_factor_struct"]], "fmpq_mpoly_factor_swap (c function)": [[15, "c.fmpq_mpoly_factor_swap"]], "fmpq_mpoly_factor_swap_base (c function)": [[15, "c.fmpq_mpoly_factor_swap_base"]], "fmpq_mpoly_factor_t (c type)": [[15, "c.fmpq_mpoly_factor_t"]], "_fmpq_poly_add (c function)": [[16, "c._fmpq_poly_add"]], "_fmpq_poly_add_can (c function)": [[16, "c._fmpq_poly_add_can"]], "_fmpq_poly_add_series (c function)": [[16, "c._fmpq_poly_add_series"]], "_fmpq_poly_add_series_can (c function)": [[16, "c._fmpq_poly_add_series_can"]], "_fmpq_poly_asin_series (c function)": [[16, "c._fmpq_poly_asin_series"]], "_fmpq_poly_asinh_series (c function)": [[16, "c._fmpq_poly_asinh_series"]], "_fmpq_poly_atan_series (c function)": [[16, "c._fmpq_poly_atan_series"]], "_fmpq_poly_atanh_series (c function)": [[16, "c._fmpq_poly_atanh_series"]], "_fmpq_poly_canonicalise (c function)": [[16, "c._fmpq_poly_canonicalise"]], "_fmpq_poly_cmp (c function)": [[16, "c._fmpq_poly_cmp"]], "_fmpq_poly_compose (c function)": [[16, "c._fmpq_poly_compose"]], "_fmpq_poly_compose_series (c function)": [[16, "c._fmpq_poly_compose_series"]], "_fmpq_poly_compose_series_brent_kung (c function)": [[16, "c._fmpq_poly_compose_series_brent_kung"]], "_fmpq_poly_compose_series_horner (c function)": [[16, "c._fmpq_poly_compose_series_horner"]], "_fmpq_poly_content (c function)": [[16, "c._fmpq_poly_content"]], "_fmpq_poly_cos_series (c function)": [[16, "c._fmpq_poly_cos_series"]], "_fmpq_poly_cosh_series (c function)": [[16, "c._fmpq_poly_cosh_series"]], "_fmpq_poly_derivative (c function)": [[16, "c._fmpq_poly_derivative"]], "_fmpq_poly_div (c function)": [[16, "c._fmpq_poly_div"]], "_fmpq_poly_div_series (c function)": [[16, "c._fmpq_poly_div_series"]], "_fmpq_poly_divides (c function)": [[16, "c._fmpq_poly_divides"]], "_fmpq_poly_divrem (c function)": [[16, "c._fmpq_poly_divrem"]], "_fmpq_poly_equal_trunc (c function)": [[16, "c._fmpq_poly_equal_trunc"]], "_fmpq_poly_evaluate_fmpq (c function)": [[16, "c._fmpq_poly_evaluate_fmpq"]], "_fmpq_poly_evaluate_fmpz (c function)": [[16, "c._fmpq_poly_evaluate_fmpz"]], "_fmpq_poly_exp_expinv_series (c function)": [[16, "c._fmpq_poly_exp_expinv_series"]], "_fmpq_poly_exp_series (c function)": [[16, "c._fmpq_poly_exp_series"]], "_fmpq_poly_fprint (c function)": [[16, "c._fmpq_poly_fprint"]], "_fmpq_poly_fprint_pretty (c function)": [[16, "c._fmpq_poly_fprint_pretty"]], "_fmpq_poly_gcd (c function)": [[16, "c._fmpq_poly_gcd"]], "_fmpq_poly_gegenbauer_c (c function)": [[16, "c._fmpq_poly_gegenbauer_c"]], "_fmpq_poly_integral (c function)": [[16, "c._fmpq_poly_integral"]], "_fmpq_poly_interpolate_fmpz_vec (c function)": [[16, "c._fmpq_poly_interpolate_fmpz_vec"]], "_fmpq_poly_inv_series (c function)": [[16, "c._fmpq_poly_inv_series"]], "_fmpq_poly_inv_series_newton (c function)": [[16, "c._fmpq_poly_inv_series_newton"]], "_fmpq_poly_invsqrt_series (c function)": [[16, "c._fmpq_poly_invsqrt_series"]], "_fmpq_poly_is_canonical (c function)": [[16, "c._fmpq_poly_is_canonical"]], "_fmpq_poly_is_monic (c function)": [[16, "c._fmpq_poly_is_monic"]], "_fmpq_poly_laguerre_l (c function)": [[16, "c._fmpq_poly_laguerre_l"]], "_fmpq_poly_lcm (c function)": [[16, "c._fmpq_poly_lcm"]], "_fmpq_poly_legendre_p (c function)": [[16, "c._fmpq_poly_legendre_p"]], "_fmpq_poly_log_series (c function)": [[16, "c._fmpq_poly_log_series"]], "_fmpq_poly_make_monic (c function)": [[16, "c._fmpq_poly_make_monic"]], "_fmpq_poly_mul (c function)": [[16, "c._fmpq_poly_mul"]], "_fmpq_poly_mullow (c function)": [[16, "c._fmpq_poly_mullow"]], "_fmpq_poly_normalise (c function)": [[16, "c._fmpq_poly_normalise"]], "_fmpq_poly_nth_derivative (c function)": [[16, "c._fmpq_poly_nth_derivative"]], "_fmpq_poly_pow (c function)": [[16, "c._fmpq_poly_pow"]], "_fmpq_poly_pow_trunc (c function)": [[16, "c._fmpq_poly_pow_trunc"]], "_fmpq_poly_power_sums (c function)": [[16, "c._fmpq_poly_power_sums"]], "_fmpq_poly_power_sums_to_poly (c function)": [[16, "c._fmpq_poly_power_sums_to_poly"]], "_fmpq_poly_powers_clear (c function)": [[16, "c._fmpq_poly_powers_clear"]], "_fmpq_poly_powers_precompute (c function)": [[16, "c._fmpq_poly_powers_precompute"]], "_fmpq_poly_primitive_part (c function)": [[16, "c._fmpq_poly_primitive_part"]], "_fmpq_poly_print (c function)": [[16, "c._fmpq_poly_print"]], "_fmpq_poly_print_pretty (c function)": [[16, "c._fmpq_poly_print_pretty"]], "_fmpq_poly_rem (c function)": [[16, "c._fmpq_poly_rem"]], "_fmpq_poly_rem_powers_precomp (c function)": [[16, "c._fmpq_poly_rem_powers_precomp"]], "_fmpq_poly_rescale (c function)": [[16, "c._fmpq_poly_rescale"]], "_fmpq_poly_resultant (c function)": [[16, "c._fmpq_poly_resultant"]], "_fmpq_poly_revert_series (c function)": [[16, "c._fmpq_poly_revert_series"]], "_fmpq_poly_revert_series_lagrange (c function)": [[16, "c._fmpq_poly_revert_series_lagrange"]], "_fmpq_poly_revert_series_lagrange_fast (c function)": [[16, "c._fmpq_poly_revert_series_lagrange_fast"]], "_fmpq_poly_revert_series_newton (c function)": [[16, "c._fmpq_poly_revert_series_newton"]], "_fmpq_poly_scalar_div_fmpq (c function)": [[16, "c._fmpq_poly_scalar_div_fmpq"]], "_fmpq_poly_scalar_div_fmpz (c function)": [[16, "c._fmpq_poly_scalar_div_fmpz"]], "_fmpq_poly_scalar_div_si (c function)": [[16, "c._fmpq_poly_scalar_div_si"]], "_fmpq_poly_scalar_div_ui (c function)": [[16, "c._fmpq_poly_scalar_div_ui"]], "_fmpq_poly_scalar_mul_fmpq (c function)": [[16, "c._fmpq_poly_scalar_mul_fmpq"]], "_fmpq_poly_scalar_mul_fmpz (c function)": [[16, "c._fmpq_poly_scalar_mul_fmpz"]], "_fmpq_poly_scalar_mul_si (c function)": [[16, "c._fmpq_poly_scalar_mul_si"]], "_fmpq_poly_scalar_mul_ui (c function)": [[16, "c._fmpq_poly_scalar_mul_ui"]], "_fmpq_poly_set_array_mpq (c function)": [[16, "c._fmpq_poly_set_array_mpq"]], "_fmpq_poly_set_length (c function)": [[16, "c._fmpq_poly_set_length"]], "_fmpq_poly_set_str (c function)": [[16, "c._fmpq_poly_set_str"]], "_fmpq_poly_sin_cos_series (c function)": [[16, "c._fmpq_poly_sin_cos_series"]], "_fmpq_poly_sin_series (c function)": [[16, "c._fmpq_poly_sin_series"]], "_fmpq_poly_sinh_cosh_series (c function)": [[16, "c._fmpq_poly_sinh_cosh_series"]], "_fmpq_poly_sinh_series (c function)": [[16, "c._fmpq_poly_sinh_series"]], "_fmpq_poly_sqrt_series (c function)": [[16, "c._fmpq_poly_sqrt_series"]], "_fmpq_poly_sub (c function)": [[16, "c._fmpq_poly_sub"]], "_fmpq_poly_sub_can (c function)": [[16, "c._fmpq_poly_sub_can"]], "_fmpq_poly_sub_series (c function)": [[16, "c._fmpq_poly_sub_series"]], "_fmpq_poly_sub_series_can (c function)": [[16, "c._fmpq_poly_sub_series_can"]], "_fmpq_poly_tan_series (c function)": [[16, "c._fmpq_poly_tan_series"]], "_fmpq_poly_tanh_series (c function)": [[16, "c._fmpq_poly_tanh_series"]], "_fmpq_poly_xgcd (c function)": [[16, "c._fmpq_poly_xgcd"]], "fmpq_poly_add (c function)": [[16, "c.fmpq_poly_add"]], "fmpq_poly_add_can (c function)": [[16, "c.fmpq_poly_add_can"]], "fmpq_poly_add_series (c function)": [[16, "c.fmpq_poly_add_series"]], "fmpq_poly_add_series_can (c function)": [[16, "c.fmpq_poly_add_series_can"]], "fmpq_poly_addmul (c function)": [[16, "c.fmpq_poly_addmul"]], "fmpq_poly_asin_series (c function)": [[16, "c.fmpq_poly_asin_series"]], "fmpq_poly_asinh_series (c function)": [[16, "c.fmpq_poly_asinh_series"]], "fmpq_poly_atan_series (c function)": [[16, "c.fmpq_poly_atan_series"]], "fmpq_poly_atanh_series (c function)": [[16, "c.fmpq_poly_atanh_series"]], "fmpq_poly_canonicalise (c function)": [[16, "c.fmpq_poly_canonicalise"]], "fmpq_poly_clear (c function)": [[16, "c.fmpq_poly_clear"]], "fmpq_poly_cmp (c function)": [[16, "c.fmpq_poly_cmp"]], "fmpq_poly_compose (c function)": [[16, "c.fmpq_poly_compose"]], "fmpq_poly_compose_series (c function)": [[16, "c.fmpq_poly_compose_series"]], "fmpq_poly_compose_series_brent_kung (c function)": [[16, "c.fmpq_poly_compose_series_brent_kung"]], "fmpq_poly_compose_series_horner (c function)": [[16, "c.fmpq_poly_compose_series_horner"]], "fmpq_poly_content (c function)": [[16, "c.fmpq_poly_content"]], "fmpq_poly_cos_series (c function)": [[16, "c.fmpq_poly_cos_series"]], "fmpq_poly_cosh_series (c function)": [[16, "c.fmpq_poly_cosh_series"]], "fmpq_poly_degree (c function)": [[16, "c.fmpq_poly_degree"]], "fmpq_poly_denref (c function)": [[16, "c.fmpq_poly_denref"]], "fmpq_poly_derivative (c function)": [[16, "c.fmpq_poly_derivative"]], "fmpq_poly_div (c function)": [[16, "c.fmpq_poly_div"]], "fmpq_poly_div_series (c function)": [[16, "c.fmpq_poly_div_series"]], "fmpq_poly_divides (c function)": [[16, "c.fmpq_poly_divides"]], "fmpq_poly_divrem (c function)": [[16, "c.fmpq_poly_divrem"]], "fmpq_poly_equal (c function)": [[16, "c.fmpq_poly_equal"]], "fmpq_poly_equal_trunc (c function)": [[16, "c.fmpq_poly_equal_trunc"]], "fmpq_poly_evaluate_fmpq (c function)": [[16, "c.fmpq_poly_evaluate_fmpq"]], "fmpq_poly_evaluate_fmpz (c function)": [[16, "c.fmpq_poly_evaluate_fmpz"]], "fmpq_poly_evaluate_mpq (c function)": [[16, "c.fmpq_poly_evaluate_mpq"]], "fmpq_poly_evaluate_mpz (c function)": [[16, "c.fmpq_poly_evaluate_mpz"]], "fmpq_poly_exp_expinv_series (c function)": [[16, "c.fmpq_poly_exp_expinv_series"]], "fmpq_poly_exp_series (c function)": [[16, "c.fmpq_poly_exp_series"]], "fmpq_poly_fit_length (c function)": [[16, "c.fmpq_poly_fit_length"]], "fmpq_poly_fprint (c function)": [[16, "c.fmpq_poly_fprint"]], "fmpq_poly_fprint_pretty (c function)": [[16, "c.fmpq_poly_fprint_pretty"]], "fmpq_poly_fread (c function)": [[16, "c.fmpq_poly_fread"]], "fmpq_poly_gcd (c function)": [[16, "c.fmpq_poly_gcd"]], "fmpq_poly_gegenbauer_c (c function)": [[16, "c.fmpq_poly_gegenbauer_c"]], "fmpq_poly_get_coeff_fmpq (c function)": [[16, "c.fmpq_poly_get_coeff_fmpq"]], "fmpq_poly_get_coeff_fmpz (c function)": [[16, "c.fmpq_poly_get_coeff_fmpz"]], "fmpq_poly_get_coeff_mpq (c function)": [[16, "c.fmpq_poly_get_coeff_mpq"]], "fmpq_poly_get_denominator (c function)": [[16, "c.fmpq_poly_get_denominator"]], "fmpq_poly_get_nmod_poly (c function)": [[16, "c.fmpq_poly_get_nmod_poly"]], "fmpq_poly_get_nmod_poly_den (c function)": [[16, "c.fmpq_poly_get_nmod_poly_den"]], "fmpq_poly_get_numerator (c function)": [[16, "c.fmpq_poly_get_numerator"]], "fmpq_poly_get_slice (c function)": [[16, "c.fmpq_poly_get_slice"]], "fmpq_poly_get_str (c function)": [[16, "c.fmpq_poly_get_str"]], "fmpq_poly_get_str_pretty (c function)": [[16, "c.fmpq_poly_get_str_pretty"]], "fmpq_poly_init (c function)": [[16, "c.fmpq_poly_init"]], "fmpq_poly_init2 (c function)": [[16, "c.fmpq_poly_init2"]], "fmpq_poly_integral (c function)": [[16, "c.fmpq_poly_integral"]], "fmpq_poly_interpolate_fmpz_vec (c function)": [[16, "c.fmpq_poly_interpolate_fmpz_vec"]], "fmpq_poly_inv (c function)": [[16, "c.fmpq_poly_inv"]], "fmpq_poly_inv_series (c function)": [[16, "c.fmpq_poly_inv_series"]], "fmpq_poly_inv_series_newton (c function)": [[16, "c.fmpq_poly_inv_series_newton"]], "fmpq_poly_invsqrt_series (c function)": [[16, "c.fmpq_poly_invsqrt_series"]], "fmpq_poly_is_canonical (c function)": [[16, "c.fmpq_poly_is_canonical"]], "fmpq_poly_is_gen (c function)": [[16, "c.fmpq_poly_is_gen"]], "fmpq_poly_is_monic (c function)": [[16, "c.fmpq_poly_is_monic"]], "fmpq_poly_is_one (c function)": [[16, "c.fmpq_poly_is_one"]], "fmpq_poly_is_squarefree (c function)": [[16, "c.fmpq_poly_is_squarefree"]], "fmpq_poly_is_zero (c function)": [[16, "c.fmpq_poly_is_zero"]], "fmpq_poly_laguerre_l (c function)": [[16, "c.fmpq_poly_laguerre_l"]], "fmpq_poly_lcm (c function)": [[16, "c.fmpq_poly_lcm"]], "fmpq_poly_legendre_p (c function)": [[16, "c.fmpq_poly_legendre_p"]], "fmpq_poly_length (c function)": [[16, "c.fmpq_poly_length"]], "fmpq_poly_log_series (c function)": [[16, "c.fmpq_poly_log_series"]], "fmpq_poly_make_monic (c function)": [[16, "c.fmpq_poly_make_monic"]], "fmpq_poly_mul (c function)": [[16, "c.fmpq_poly_mul"]], "fmpq_poly_mullow (c function)": [[16, "c.fmpq_poly_mullow"]], "fmpq_poly_neg (c function)": [[16, "c.fmpq_poly_neg"]], "fmpq_poly_nth_derivative (c function)": [[16, "c.fmpq_poly_nth_derivative"]], "fmpq_poly_numref (c function)": [[16, "c.fmpq_poly_numref"]], "fmpq_poly_one (c function)": [[16, "c.fmpq_poly_one"]], "fmpq_poly_pow (c function)": [[16, "c.fmpq_poly_pow"]], "fmpq_poly_pow_trunc (c function)": [[16, "c.fmpq_poly_pow_trunc"]], "fmpq_poly_power_sums (c function)": [[16, "c.fmpq_poly_power_sums"]], "fmpq_poly_power_sums_to_fmpz_poly (c function)": [[16, "c.fmpq_poly_power_sums_to_fmpz_poly"]], "fmpq_poly_power_sums_to_poly (c function)": [[16, "c.fmpq_poly_power_sums_to_poly"]], "fmpq_poly_powers_clear (c function)": [[16, "c.fmpq_poly_powers_clear"]], "fmpq_poly_powers_precompute (c function)": [[16, "c.fmpq_poly_powers_precompute"]], "fmpq_poly_primitive_part (c function)": [[16, "c.fmpq_poly_primitive_part"]], "fmpq_poly_print (c function)": [[16, "c.fmpq_poly_print"]], "fmpq_poly_print_pretty (c function)": [[16, "c.fmpq_poly_print_pretty"]], "fmpq_poly_randtest (c function)": [[16, "c.fmpq_poly_randtest"]], "fmpq_poly_randtest_not_zero (c function)": [[16, "c.fmpq_poly_randtest_not_zero"]], "fmpq_poly_randtest_unsigned (c function)": [[16, "c.fmpq_poly_randtest_unsigned"]], "fmpq_poly_read (c function)": [[16, "c.fmpq_poly_read"]], "fmpq_poly_realloc (c function)": [[16, "c.fmpq_poly_realloc"]], "fmpq_poly_rem (c function)": [[16, "c.fmpq_poly_rem"]], "fmpq_poly_rem_powers_precomp (c function)": [[16, "c.fmpq_poly_rem_powers_precomp"]], "fmpq_poly_remove (c function)": [[16, "c.fmpq_poly_remove"]], "fmpq_poly_rescale (c function)": [[16, "c.fmpq_poly_rescale"]], "fmpq_poly_resultant (c function)": [[16, "c.fmpq_poly_resultant"]], "fmpq_poly_resultant_div (c function)": [[16, "c.fmpq_poly_resultant_div"]], "fmpq_poly_reverse (c function)": [[16, "c.fmpq_poly_reverse"]], "fmpq_poly_revert_series (c function)": [[16, "c.fmpq_poly_revert_series"]], "fmpq_poly_revert_series_lagrange (c function)": [[16, "c.fmpq_poly_revert_series_lagrange"]], "fmpq_poly_revert_series_lagrange_fast (c function)": [[16, "c.fmpq_poly_revert_series_lagrange_fast"]], "fmpq_poly_revert_series_newton (c function)": [[16, "c.fmpq_poly_revert_series_newton"]], "fmpq_poly_scalar_div_fmpq (c function)": [[16, "c.fmpq_poly_scalar_div_fmpq"]], "fmpq_poly_scalar_div_fmpz (c function)": [[16, "c.fmpq_poly_scalar_div_fmpz"]], "fmpq_poly_scalar_div_mpq (c function)": [[16, "c.fmpq_poly_scalar_div_mpq"]], "fmpq_poly_scalar_div_mpz (c function)": [[16, "c.fmpq_poly_scalar_div_mpz"]], "fmpq_poly_scalar_div_si (c function)": [[16, "c.fmpq_poly_scalar_div_si"]], "fmpq_poly_scalar_div_ui (c function)": [[16, "c.fmpq_poly_scalar_div_ui"]], "fmpq_poly_scalar_mul_fmpq (c function)": [[16, "c.fmpq_poly_scalar_mul_fmpq"]], "fmpq_poly_scalar_mul_fmpz (c function)": [[16, "c.fmpq_poly_scalar_mul_fmpz"]], "fmpq_poly_scalar_mul_mpq (c function)": [[16, "c.fmpq_poly_scalar_mul_mpq"]], "fmpq_poly_scalar_mul_mpz (c function)": [[16, "c.fmpq_poly_scalar_mul_mpz"]], "fmpq_poly_scalar_mul_si (c function)": [[16, "c.fmpq_poly_scalar_mul_si"]], "fmpq_poly_scalar_mul_ui (c function)": [[16, "c.fmpq_poly_scalar_mul_ui"]], "fmpq_poly_set (c function)": [[16, "c.fmpq_poly_set"]], "fmpq_poly_set_array_mpq (c function)": [[16, "c.fmpq_poly_set_array_mpq"]], "fmpq_poly_set_coeff_fmpq (c function)": [[16, "c.fmpq_poly_set_coeff_fmpq"]], "fmpq_poly_set_coeff_fmpz (c function)": [[16, "c.fmpq_poly_set_coeff_fmpz"]], "fmpq_poly_set_coeff_mpq (c function)": [[16, "c.fmpq_poly_set_coeff_mpq"]], "fmpq_poly_set_coeff_mpz (c function)": [[16, "c.fmpq_poly_set_coeff_mpz"]], "fmpq_poly_set_coeff_si (c function)": [[16, "c.fmpq_poly_set_coeff_si"]], "fmpq_poly_set_coeff_ui (c function)": [[16, "c.fmpq_poly_set_coeff_ui"]], "fmpq_poly_set_fmpq (c function)": [[16, "c.fmpq_poly_set_fmpq"]], "fmpq_poly_set_fmpz (c function)": [[16, "c.fmpq_poly_set_fmpz"]], "fmpq_poly_set_fmpz_poly (c function)": [[16, "c.fmpq_poly_set_fmpz_poly"]], "fmpq_poly_set_mpq (c function)": [[16, "c.fmpq_poly_set_mpq"]], "fmpq_poly_set_mpz (c function)": [[16, "c.fmpq_poly_set_mpz"]], "fmpq_poly_set_nmod_poly (c function)": [[16, "c.fmpq_poly_set_nmod_poly"]], "fmpq_poly_set_si (c function)": [[16, "c.fmpq_poly_set_si"]], "fmpq_poly_set_str (c function)": [[16, "c.fmpq_poly_set_str"]], "fmpq_poly_set_trunc (c function)": [[16, "c.fmpq_poly_set_trunc"]], "fmpq_poly_set_ui (c function)": [[16, "c.fmpq_poly_set_ui"]], "fmpq_poly_shift_left (c function)": [[16, "c.fmpq_poly_shift_left"]], "fmpq_poly_shift_right (c function)": [[16, "c.fmpq_poly_shift_right"]], "fmpq_poly_sin_cos_series (c function)": [[16, "c.fmpq_poly_sin_cos_series"]], "fmpq_poly_sin_series (c function)": [[16, "c.fmpq_poly_sin_series"]], "fmpq_poly_sinh_cosh_series (c function)": [[16, "c.fmpq_poly_sinh_cosh_series"]], "fmpq_poly_sinh_series (c function)": [[16, "c.fmpq_poly_sinh_series"]], "fmpq_poly_sqrt_series (c function)": [[16, "c.fmpq_poly_sqrt_series"]], "fmpq_poly_struct (c type)": [[16, "c.fmpq_poly_struct"]], "fmpq_poly_sub (c function)": [[16, "c.fmpq_poly_sub"]], "fmpq_poly_sub_can (c function)": [[16, "c.fmpq_poly_sub_can"]], "fmpq_poly_sub_series (c function)": [[16, "c.fmpq_poly_sub_series"]], "fmpq_poly_sub_series_can (c function)": [[16, "c.fmpq_poly_sub_series_can"]], "fmpq_poly_submul (c function)": [[16, "c.fmpq_poly_submul"]], "fmpq_poly_swap (c function)": [[16, "c.fmpq_poly_swap"]], "fmpq_poly_t (c type)": [[16, "c.fmpq_poly_t"]], "fmpq_poly_tan_series (c function)": [[16, "c.fmpq_poly_tan_series"]], "fmpq_poly_tanh_series (c function)": [[16, "c.fmpq_poly_tanh_series"]], "fmpq_poly_truncate (c function)": [[16, "c.fmpq_poly_truncate"]], "fmpq_poly_xgcd (c function)": [[16, "c.fmpq_poly_xgcd"]], "fmpq_poly_zero (c function)": [[16, "c.fmpq_poly_zero"]], "_fmpq_vec_clear (c function)": [[17, "c._fmpq_vec_clear"]], "_fmpq_vec_dot (c function)": [[17, "c._fmpq_vec_dot"]], "_fmpq_vec_fprint (c function)": [[17, "c._fmpq_vec_fprint"]], "_fmpq_vec_get_fmpz_vec_fmpz (c function)": [[17, "c._fmpq_vec_get_fmpz_vec_fmpz"]], "_fmpq_vec_init (c function)": [[17, "c._fmpq_vec_init"]], "_fmpq_vec_print (c function)": [[17, "c._fmpq_vec_print"]], "_fmpq_vec_randtest (c function)": [[17, "c._fmpq_vec_randtest"]], "_fmpq_vec_randtest_uniq_sorted (c function)": [[17, "c._fmpq_vec_randtest_uniq_sorted"]], "_fmpq_vec_set_fmpz_vec (c function)": [[17, "c._fmpq_vec_set_fmpz_vec"]], "_fmpq_vec_sort (c function)": [[17, "c._fmpq_vec_sort"]], "coeff_is_mpz (c function)": [[18, "c.COEFF_IS_MPZ"]], "coeff_max (c macro)": [[18, "c.COEFF_MAX"]], "coeff_min (c macro)": [[18, "c.COEFF_MIN"]], "coeff_to_ptr (c function)": [[18, "c.COEFF_TO_PTR"]], "ptr_to_coeff (c function)": [[18, "c.PTR_TO_COEFF"]], "_fmpz_cleanup (c function)": [[18, "c._fmpz_cleanup"]], "_fmpz_cleanup_mpz_content (c function)": [[18, "c._fmpz_cleanup_mpz_content"]], "_fmpz_clear_mpz (c function)": [[18, "c._fmpz_clear_mpz"]], "_fmpz_demote (c function)": [[18, "c._fmpz_demote"]], "_fmpz_demote_val (c function)": [[18, "c._fmpz_demote_val"]], "_fmpz_multi_crt_run (c function)": [[18, "c._fmpz_multi_crt_run"]], "_fmpz_multi_crt_run_p (c function)": [[18, "c._fmpz_multi_crt_run_p"]], "_fmpz_new_mpz (c function)": [[18, "c._fmpz_new_mpz"]], "_fmpz_nm1_trial_factors (c function)": [[18, "c._fmpz_nm1_trial_factors"]], "_fmpz_np1_trial_factors (c function)": [[18, "c._fmpz_np1_trial_factors"]], "_fmpz_promote (c function)": [[18, "c._fmpz_promote"]], "_fmpz_promote_val (c function)": [[18, "c._fmpz_promote_val"]], "_fmpz_remove (c function)": [[18, "c._fmpz_remove"]], "_fmpz_rfac_ui (c function)": [[18, "c._fmpz_rfac_ui"]], "_nmod_poly_crt_local_size (c function)": [[18, "c._nmod_poly_crt_local_size"]], "flint_mpz_clear_readonly (c function)": [[18, "c.flint_mpz_clear_readonly"]], "flint_mpz_init_set_readonly (c function)": [[18, "c.flint_mpz_init_set_readonly"]], "fmpz (c type)": [[18, "c.fmpz"]], "fmpz_crt (c function)": [[18, "c.fmpz_CRT"]], "fmpz_crt_ui (c function)": [[18, "c.fmpz_CRT_ui"]], "fmpz_abs (c function)": [[18, "c.fmpz_abs"]], "fmpz_abs_fits_ui (c function)": [[18, "c.fmpz_abs_fits_ui"]], "fmpz_abs_lbound_ui_2exp (c function)": [[18, "c.fmpz_abs_lbound_ui_2exp"]], "fmpz_abs_ubound_ui_2exp (c function)": [[18, "c.fmpz_abs_ubound_ui_2exp"]], "fmpz_add (c function)": [[18, "c.fmpz_add"]], "fmpz_add_si (c function)": [[18, "c.fmpz_add_si"]], "fmpz_add_ui (c function)": [[18, "c.fmpz_add_ui"]], "fmpz_addmul (c function)": [[18, "c.fmpz_addmul"]], "fmpz_addmul_si (c function)": [[18, "c.fmpz_addmul_si"]], "fmpz_addmul_ui (c function)": [[18, "c.fmpz_addmul_ui"]], "fmpz_and (c function)": [[18, "c.fmpz_and"]], "fmpz_bin_uiui (c function)": [[18, "c.fmpz_bin_uiui"]], "fmpz_bit_pack (c function)": [[18, "c.fmpz_bit_pack"]], "fmpz_bit_unpack (c function)": [[18, "c.fmpz_bit_unpack"]], "fmpz_bit_unpack_unsigned (c function)": [[18, "c.fmpz_bit_unpack_unsigned"]], "fmpz_bits (c function)": [[18, "c.fmpz_bits"]], "fmpz_cdiv_q (c function)": [[18, "c.fmpz_cdiv_q"]], "fmpz_cdiv_q_2exp (c function)": [[18, "c.fmpz_cdiv_q_2exp"]], "fmpz_cdiv_q_si (c function)": [[18, "c.fmpz_cdiv_q_si"]], "fmpz_cdiv_q_ui (c function)": [[18, "c.fmpz_cdiv_q_ui"]], "fmpz_cdiv_qr (c function)": [[18, "c.fmpz_cdiv_qr"]], "fmpz_cdiv_r_2exp (c function)": [[18, "c.fmpz_cdiv_r_2exp"]], "fmpz_cdiv_ui (c function)": [[18, "c.fmpz_cdiv_ui"]], "fmpz_clear (c function)": [[18, "c.fmpz_clear"]], "fmpz_clear_readonly (c function)": [[18, "c.fmpz_clear_readonly"]], "fmpz_clog (c function)": [[18, "c.fmpz_clog"]], "fmpz_clog_ui (c function)": [[18, "c.fmpz_clog_ui"]], "fmpz_clrbit (c function)": [[18, "c.fmpz_clrbit"]], "fmpz_cmp (c function)": [[18, "c.fmpz_cmp"]], "fmpz_cmp2abs (c function)": [[18, "c.fmpz_cmp2abs"]], "fmpz_cmp_si (c function)": [[18, "c.fmpz_cmp_si"]], "fmpz_cmp_ui (c function)": [[18, "c.fmpz_cmp_ui"]], "fmpz_cmpabs (c function)": [[18, "c.fmpz_cmpabs"]], "fmpz_comb_clear (c function)": [[18, "c.fmpz_comb_clear"]], "fmpz_comb_init (c function)": [[18, "c.fmpz_comb_init"]], "fmpz_comb_temp_clear (c function)": [[18, "c.fmpz_comb_temp_clear"]], "fmpz_comb_temp_init (c function)": [[18, "c.fmpz_comb_temp_init"]], "fmpz_combit (c function)": [[18, "c.fmpz_combit"]], "fmpz_complement (c function)": [[18, "c.fmpz_complement"]], "fmpz_divexact (c function)": [[18, "c.fmpz_divexact"]], "fmpz_divexact2_uiui (c function)": [[18, "c.fmpz_divexact2_uiui"]], "fmpz_divexact_si (c function)": [[18, "c.fmpz_divexact_si"]], "fmpz_divexact_ui (c function)": [[18, "c.fmpz_divexact_ui"]], "fmpz_divides (c function)": [[18, "c.fmpz_divides"]], "fmpz_divides_mod_list (c function)": [[18, "c.fmpz_divides_mod_list"]], "fmpz_divisible (c function)": [[18, "c.fmpz_divisible"]], "fmpz_divisible_si (c function)": [[18, "c.fmpz_divisible_si"]], "fmpz_divisor_in_residue_class_lenstra (c function)": [[18, "c.fmpz_divisor_in_residue_class_lenstra"]], "fmpz_divisor_sigma (c function)": [[18, "c.fmpz_divisor_sigma"]], "fmpz_dlog (c function)": [[18, "c.fmpz_dlog"]], "fmpz_equal (c function)": [[18, "c.fmpz_equal"]], "fmpz_equal_si (c function)": [[18, "c.fmpz_equal_si"]], "fmpz_equal_ui (c function)": [[18, "c.fmpz_equal_ui"]], "fmpz_euler_phi (c function)": [[18, "c.fmpz_euler_phi"]], "fmpz_fac_ui (c function)": [[18, "c.fmpz_fac_ui"]], "fmpz_factor_divisor_sigma (c function)": [[18, "c.fmpz_factor_divisor_sigma"]], "fmpz_factor_euler_phi (c function)": [[18, "c.fmpz_factor_euler_phi"]], "fmpz_factor_moebius_mu (c function)": [[18, "c.fmpz_factor_moebius_mu"]], "fmpz_fdiv_q (c function)": [[18, "c.fmpz_fdiv_q"]], "fmpz_fdiv_q_2exp (c function)": [[18, "c.fmpz_fdiv_q_2exp"]], "fmpz_fdiv_q_si (c function)": [[18, "c.fmpz_fdiv_q_si"]], "fmpz_fdiv_q_ui (c function)": [[18, "c.fmpz_fdiv_q_ui"]], "fmpz_fdiv_qr (c function)": [[18, "c.fmpz_fdiv_qr"]], "fmpz_fdiv_qr_preinvn (c function)": [[18, "c.fmpz_fdiv_qr_preinvn"]], "fmpz_fdiv_r (c function)": [[18, "c.fmpz_fdiv_r"]], "fmpz_fdiv_r_2exp (c function)": [[18, "c.fmpz_fdiv_r_2exp"]], "fmpz_fdiv_ui (c function)": [[18, "c.fmpz_fdiv_ui"]], "fmpz_fib_ui (c function)": [[18, "c.fmpz_fib_ui"]], "fmpz_fits_si (c function)": [[18, "c.fmpz_fits_si"]], "fmpz_flog (c function)": [[18, "c.fmpz_flog"]], "fmpz_flog_ui (c function)": [[18, "c.fmpz_flog_ui"]], "fmpz_fmma (c function)": [[18, "c.fmpz_fmma"]], "fmpz_fmms (c function)": [[18, "c.fmpz_fmms"]], "fmpz_fprint (c function)": [[18, "c.fmpz_fprint"]], "fmpz_fread (c function)": [[18, "c.fmpz_fread"]], "fmpz_gcd (c function)": [[18, "c.fmpz_gcd"]], "fmpz_gcd3 (c function)": [[18, "c.fmpz_gcd3"]], "fmpz_gcd_ui (c function)": [[18, "c.fmpz_gcd_ui"]], "fmpz_gcdinv (c function)": [[18, "c.fmpz_gcdinv"]], "fmpz_get_d (c function)": [[18, "c.fmpz_get_d"]], "fmpz_get_d_2exp (c function)": [[18, "c.fmpz_get_d_2exp"]], "fmpz_get_mpf (c function)": [[18, "c.fmpz_get_mpf"]], "fmpz_get_mpfr (c function)": [[18, "c.fmpz_get_mpfr"]], "fmpz_get_mpn (c function)": [[18, "c.fmpz_get_mpn"]], "fmpz_get_mpz (c function)": [[18, "c.fmpz_get_mpz"]], "fmpz_get_nmod (c function)": [[18, "c.fmpz_get_nmod"]], "fmpz_get_si (c function)": [[18, "c.fmpz_get_si"]], "fmpz_get_str (c function)": [[18, "c.fmpz_get_str"]], "fmpz_get_ui (c function)": [[18, "c.fmpz_get_ui"]], "fmpz_get_ui_array (c function)": [[18, "c.fmpz_get_ui_array"]], "fmpz_get_uiui (c function)": [[18, "c.fmpz_get_uiui"]], "fmpz_init (c function)": [[18, "c.fmpz_init"]], "fmpz_init2 (c function)": [[18, "c.fmpz_init2"]], "fmpz_init_set (c function)": [[18, "c.fmpz_init_set"]], "fmpz_init_set_readonly (c function)": [[18, "c.fmpz_init_set_readonly"]], "fmpz_init_set_si (c function)": [[18, "c.fmpz_init_set_si"]], "fmpz_init_set_ui (c function)": [[18, "c.fmpz_init_set_ui"]], "fmpz_inp_raw (c function)": [[18, "c.fmpz_inp_raw"]], "fmpz_invmod (c function)": [[18, "c.fmpz_invmod"]], "fmpz_is_even (c function)": [[18, "c.fmpz_is_even"]], "fmpz_is_odd (c function)": [[18, "c.fmpz_is_odd"]], "fmpz_is_one (c function)": [[18, "c.fmpz_is_one"]], "fmpz_is_perfect_power (c function)": [[18, "c.fmpz_is_perfect_power"]], "fmpz_is_pm1 (c function)": [[18, "c.fmpz_is_pm1"]], "fmpz_is_prime (c function)": [[18, "c.fmpz_is_prime"]], "fmpz_is_prime_morrison (c function)": [[18, "c.fmpz_is_prime_morrison"]], "fmpz_is_prime_pocklington (c function)": [[18, "c.fmpz_is_prime_pocklington"]], "fmpz_is_prime_pseudosquare (c function)": [[18, "c.fmpz_is_prime_pseudosquare"]], "fmpz_is_probabprime (c function)": [[18, "c.fmpz_is_probabprime"]], "fmpz_is_probabprime_bpsw (c function)": [[18, "c.fmpz_is_probabprime_BPSW"]], "fmpz_is_probabprime_lucas (c function)": [[18, "c.fmpz_is_probabprime_lucas"]], "fmpz_is_square (c function)": [[18, "c.fmpz_is_square"]], "fmpz_is_strong_probabprime (c function)": [[18, "c.fmpz_is_strong_probabprime"]], "fmpz_is_zero (c function)": [[18, "c.fmpz_is_zero"]], "fmpz_jacobi (c function)": [[18, "c.fmpz_jacobi"]], "fmpz_kronecker (c function)": [[18, "c.fmpz_kronecker"]], "fmpz_lcm (c function)": [[18, "c.fmpz_lcm"]], "fmpz_lucas_chain (c function)": [[18, "c.fmpz_lucas_chain"]], "fmpz_lucas_chain_vtou (c function)": [[18, "c.fmpz_lucas_chain_VtoU"]], "fmpz_lucas_chain_add (c function)": [[18, "c.fmpz_lucas_chain_add"]], "fmpz_lucas_chain_double (c function)": [[18, "c.fmpz_lucas_chain_double"]], "fmpz_lucas_chain_full (c function)": [[18, "c.fmpz_lucas_chain_full"]], "fmpz_lucas_chain_mul (c function)": [[18, "c.fmpz_lucas_chain_mul"]], "fmpz_mod (c function)": [[18, "c.fmpz_mod"]], "fmpz_mod_ui (c function)": [[18, "c.fmpz_mod_ui"]], "fmpz_moebius_mu (c function)": [[18, "c.fmpz_moebius_mu"]], "fmpz_mul (c function)": [[18, "c.fmpz_mul"]], "fmpz_mul2_uiui (c function)": [[18, "c.fmpz_mul2_uiui"]], "fmpz_mul_2exp (c function)": [[18, "c.fmpz_mul_2exp"]], "fmpz_mul_si (c function)": [[18, "c.fmpz_mul_si"]], "fmpz_mul_si_tdiv_q_2exp (c function)": [[18, "c.fmpz_mul_si_tdiv_q_2exp"]], "fmpz_mul_tdiv_q_2exp (c function)": [[18, "c.fmpz_mul_tdiv_q_2exp"]], "fmpz_mul_ui (c function)": [[18, "c.fmpz_mul_ui"]], "fmpz_multi_crt_ui (c function)": [[18, "c.fmpz_multi_CRT_ui"]], "fmpz_multi_crt (c function)": [[18, "c.fmpz_multi_crt"]], "fmpz_multi_crt_clear (c function)": [[18, "c.fmpz_multi_crt_clear"]], "fmpz_multi_crt_init (c function)": [[18, "c.fmpz_multi_crt_init"]], "fmpz_multi_crt_precomp (c function)": [[18, "c.fmpz_multi_crt_precomp"]], "fmpz_multi_crt_precomp_p (c function)": [[18, "c.fmpz_multi_crt_precomp_p"]], "fmpz_multi_crt_precompute (c function)": [[18, "c.fmpz_multi_crt_precompute"]], "fmpz_multi_crt_precompute_p (c function)": [[18, "c.fmpz_multi_crt_precompute_p"]], "fmpz_multi_mod_ui (c function)": [[18, "c.fmpz_multi_mod_ui"]], "fmpz_ndiv_qr (c function)": [[18, "c.fmpz_ndiv_qr"]], "fmpz_neg (c function)": [[18, "c.fmpz_neg"]], "fmpz_neg_ui (c function)": [[18, "c.fmpz_neg_ui"]], "fmpz_neg_uiui (c function)": [[18, "c.fmpz_neg_uiui"]], "fmpz_negmod (c function)": [[18, "c.fmpz_negmod"]], "fmpz_nextprime (c function)": [[18, "c.fmpz_nextprime"]], "fmpz_one (c function)": [[18, "c.fmpz_one"]], "fmpz_one_2exp (c function)": [[18, "c.fmpz_one_2exp"]], "fmpz_or (c function)": [[18, "c.fmpz_or"]], "fmpz_out_raw (c function)": [[18, "c.fmpz_out_raw"]], "fmpz_popcnt (c function)": [[18, "c.fmpz_popcnt"]], "fmpz_pow_fmpz (c function)": [[18, "c.fmpz_pow_fmpz"]], "fmpz_pow_ui (c function)": [[18, "c.fmpz_pow_ui"]], "fmpz_powm (c function)": [[18, "c.fmpz_powm"]], "fmpz_powm_ui (c function)": [[18, "c.fmpz_powm_ui"]], "fmpz_preinvn_clear (c function)": [[18, "c.fmpz_preinvn_clear"]], "fmpz_preinvn_init (c function)": [[18, "c.fmpz_preinvn_init"]], "fmpz_primorial (c function)": [[18, "c.fmpz_primorial"]], "fmpz_print (c function)": [[18, "c.fmpz_print"]], "fmpz_randbits (c function)": [[18, "c.fmpz_randbits"]], "fmpz_randm (c function)": [[18, "c.fmpz_randm"]], "fmpz_randprime (c function)": [[18, "c.fmpz_randprime"]], "fmpz_randtest (c function)": [[18, "c.fmpz_randtest"]], "fmpz_randtest_mod (c function)": [[18, "c.fmpz_randtest_mod"]], "fmpz_randtest_mod_signed (c function)": [[18, "c.fmpz_randtest_mod_signed"]], "fmpz_randtest_not_zero (c function)": [[18, "c.fmpz_randtest_not_zero"]], "fmpz_randtest_unsigned (c function)": [[18, "c.fmpz_randtest_unsigned"]], "fmpz_read (c function)": [[18, "c.fmpz_read"]], "fmpz_remove (c function)": [[18, "c.fmpz_remove"]], "fmpz_rfac_ui (c function)": [[18, "c.fmpz_rfac_ui"]], "fmpz_rfac_uiui (c function)": [[18, "c.fmpz_rfac_uiui"]], "fmpz_root (c function)": [[18, "c.fmpz_root"]], "fmpz_set (c function)": [[18, "c.fmpz_set"]], "fmpz_set_d (c function)": [[18, "c.fmpz_set_d"]], "fmpz_set_d_2exp (c function)": [[18, "c.fmpz_set_d_2exp"]], "fmpz_set_mpf (c function)": [[18, "c.fmpz_set_mpf"]], "fmpz_set_mpz (c function)": [[18, "c.fmpz_set_mpz"]], "fmpz_set_si (c function)": [[18, "c.fmpz_set_si"]], "fmpz_set_signed_ui_array (c function)": [[18, "c.fmpz_set_signed_ui_array"]], "fmpz_set_signed_uiui (c function)": [[18, "c.fmpz_set_signed_uiui"]], "fmpz_set_signed_uiuiui (c function)": [[18, "c.fmpz_set_signed_uiuiui"]], "fmpz_set_str (c function)": [[18, "c.fmpz_set_str"]], "fmpz_set_ui (c function)": [[18, "c.fmpz_set_ui"]], "fmpz_set_ui_array (c function)": [[18, "c.fmpz_set_ui_array"]], "fmpz_set_ui_smod (c function)": [[18, "c.fmpz_set_ui_smod"]], "fmpz_set_uiui (c function)": [[18, "c.fmpz_set_uiui"]], "fmpz_setbit (c function)": [[18, "c.fmpz_setbit"]], "fmpz_sgn (c function)": [[18, "c.fmpz_sgn"]], "fmpz_size (c function)": [[18, "c.fmpz_size"]], "fmpz_sizeinbase (c function)": [[18, "c.fmpz_sizeinbase"]], "fmpz_smod (c function)": [[18, "c.fmpz_smod"]], "fmpz_sqrt (c function)": [[18, "c.fmpz_sqrt"]], "fmpz_sqrtmod (c function)": [[18, "c.fmpz_sqrtmod"]], "fmpz_sqrtrem (c function)": [[18, "c.fmpz_sqrtrem"]], "fmpz_sub (c function)": [[18, "c.fmpz_sub"]], "fmpz_sub_si (c function)": [[18, "c.fmpz_sub_si"]], "fmpz_sub_ui (c function)": [[18, "c.fmpz_sub_ui"]], "fmpz_submul (c function)": [[18, "c.fmpz_submul"]], "fmpz_submul_si (c function)": [[18, "c.fmpz_submul_si"]], "fmpz_submul_ui (c function)": [[18, "c.fmpz_submul_ui"]], "fmpz_swap (c function)": [[18, "c.fmpz_swap"]], "fmpz_t (c type)": [[18, "c.fmpz_t"]], "fmpz_tdiv_q (c function)": [[18, "c.fmpz_tdiv_q"]], "fmpz_tdiv_q_2exp (c function)": [[18, "c.fmpz_tdiv_q_2exp"]], "fmpz_tdiv_q_si (c function)": [[18, "c.fmpz_tdiv_q_si"]], "fmpz_tdiv_q_ui (c function)": [[18, "c.fmpz_tdiv_q_ui"]], "fmpz_tdiv_qr (c function)": [[18, "c.fmpz_tdiv_qr"]], "fmpz_tdiv_r_2exp (c function)": [[18, "c.fmpz_tdiv_r_2exp"]], "fmpz_tdiv_ui (c function)": [[18, "c.fmpz_tdiv_ui"]], "fmpz_tstbit (c function)": [[18, "c.fmpz_tstbit"]], "fmpz_val2 (c function)": [[18, "c.fmpz_val2"]], "fmpz_xgcd (c function)": [[18, "c.fmpz_xgcd"]], "fmpz_xgcd_canonical_bezout (c function)": [[18, "c.fmpz_xgcd_canonical_bezout"]], "fmpz_xgcd_partial (c function)": [[18, "c.fmpz_xgcd_partial"]], "fmpz_xor (c function)": [[18, "c.fmpz_xor"]], "fmpz_zero (c function)": [[18, "c.fmpz_zero"]], "_fmpz_factor_append (c function)": [[19, "c._fmpz_factor_append"]], "_fmpz_factor_append_ui (c function)": [[19, "c._fmpz_factor_append_ui"]], "fmpz_factor (c function)": [[19, "c.fmpz_factor"]], "fmpz_factor_clear (c function)": [[19, "c.fmpz_factor_clear"]], "fmpz_factor_ecm (c function)": [[19, "c.fmpz_factor_ecm"]], "fmpz_factor_ecm_add (c function)": [[19, "c.fmpz_factor_ecm_add"]], "fmpz_factor_ecm_addmod (c function)": [[19, "c.fmpz_factor_ecm_addmod"]], "fmpz_factor_ecm_clear (c function)": [[19, "c.fmpz_factor_ecm_clear"]], "fmpz_factor_ecm_double (c function)": [[19, "c.fmpz_factor_ecm_double"]], "fmpz_factor_ecm_init (c function)": [[19, "c.fmpz_factor_ecm_init"]], "fmpz_factor_ecm_mul_montgomery_ladder (c function)": [[19, "c.fmpz_factor_ecm_mul_montgomery_ladder"]], "fmpz_factor_ecm_select_curve (c function)": [[19, "c.fmpz_factor_ecm_select_curve"]], "fmpz_factor_ecm_stage_i (c function)": [[19, "c.fmpz_factor_ecm_stage_I"]], "fmpz_factor_ecm_stage_ii (c function)": [[19, "c.fmpz_factor_ecm_stage_II"]], "fmpz_factor_ecm_submod (c function)": [[19, "c.fmpz_factor_ecm_submod"]], "fmpz_factor_expand_iterative (c function)": [[19, "c.fmpz_factor_expand_iterative"]], "fmpz_factor_init (c function)": [[19, "c.fmpz_factor_init"]], "fmpz_factor_pollard_brent (c function)": [[19, "c.fmpz_factor_pollard_brent"]], "fmpz_factor_pollard_brent_single (c function)": [[19, "c.fmpz_factor_pollard_brent_single"]], "fmpz_factor_pp1 (c function)": [[19, "c.fmpz_factor_pp1"]], "fmpz_factor_refine (c function)": [[19, "c.fmpz_factor_refine"]], "fmpz_factor_si (c function)": [[19, "c.fmpz_factor_si"]], "fmpz_factor_smooth (c function)": [[19, "c.fmpz_factor_smooth"]], "fmpz_factor_struct (c type)": [[19, "c.fmpz_factor_struct"]], "fmpz_factor_t (c type)": [[19, "c.fmpz_factor_t"]], "fmpz_factor_trial (c function)": [[19, "c.fmpz_factor_trial"]], "fmpz_factor_trial_range (c function)": [[19, "c.fmpz_factor_trial_range"]], "fmpz_lll (c function)": [[20, "c.fmpz_lll"]], "fmpz_lll_advance_check_babai (c function)": [[20, "c.fmpz_lll_advance_check_babai"]], "fmpz_lll_advance_check_babai_heuristic_d (c function)": [[20, "c.fmpz_lll_advance_check_babai_heuristic_d"]], "fmpz_lll_check_babai (c function)": [[20, "c.fmpz_lll_check_babai"]], "fmpz_lll_check_babai_heuristic (c function)": [[20, "c.fmpz_lll_check_babai_heuristic"]], "fmpz_lll_check_babai_heuristic_d (c function)": [[20, "c.fmpz_lll_check_babai_heuristic_d"]], "fmpz_lll_context_init (c function)": [[20, "c.fmpz_lll_context_init"]], "fmpz_lll_context_init_default (c function)": [[20, "c.fmpz_lll_context_init_default"]], "fmpz_lll_d (c function)": [[20, "c.fmpz_lll_d"]], "fmpz_lll_d_heuristic (c function)": [[20, "c.fmpz_lll_d_heuristic"]], "fmpz_lll_d_heuristic_with_removal (c function)": [[20, "c.fmpz_lll_d_heuristic_with_removal"]], "fmpz_lll_d_with_removal (c function)": [[20, "c.fmpz_lll_d_with_removal"]], "fmpz_lll_d_with_removal_knapsack (c function)": [[20, "c.fmpz_lll_d_with_removal_knapsack"]], "fmpz_lll_heuristic_dot (c function)": [[20, "c.fmpz_lll_heuristic_dot"]], "fmpz_lll_is_reduced (c function)": [[20, "c.fmpz_lll_is_reduced"]], "fmpz_lll_is_reduced_d (c function)": [[20, "c.fmpz_lll_is_reduced_d"]], "fmpz_lll_is_reduced_d_with_removal (c function)": [[20, "c.fmpz_lll_is_reduced_d_with_removal"]], "fmpz_lll_is_reduced_mpfr (c function)": [[20, "c.fmpz_lll_is_reduced_mpfr"]], "fmpz_lll_is_reduced_mpfr_with_removal (c function)": [[20, "c.fmpz_lll_is_reduced_mpfr_with_removal"]], "fmpz_lll_is_reduced_with_removal (c function)": [[20, "c.fmpz_lll_is_reduced_with_removal"]], "fmpz_lll_mpf (c function)": [[20, "c.fmpz_lll_mpf"]], "fmpz_lll_mpf2 (c function)": [[20, "c.fmpz_lll_mpf2"]], "fmpz_lll_mpf2_with_removal (c function)": [[20, "c.fmpz_lll_mpf2_with_removal"]], "fmpz_lll_mpf_with_removal (c function)": [[20, "c.fmpz_lll_mpf_with_removal"]], "fmpz_lll_randtest (c function)": [[20, "c.fmpz_lll_randtest"]], "fmpz_lll_shift (c function)": [[20, "c.fmpz_lll_shift"]], "fmpz_lll_storjohann_ulll (c function)": [[20, "c.fmpz_lll_storjohann_ulll"]], "fmpz_lll_with_removal (c function)": [[20, "c.fmpz_lll_with_removal"]], "fmpz_lll_with_removal_ulll (c function)": [[20, "c.fmpz_lll_with_removal_ulll"]], "fmpz_lll_wrapper (c function)": [[20, "c.fmpz_lll_wrapper"]], "fmpz_lll_wrapper_with_removal (c function)": [[20, "c.fmpz_lll_wrapper_with_removal"]], "fmpz_lll_wrapper_with_removal_knapsack (c function)": [[20, "c.fmpz_lll_wrapper_with_removal_knapsack"]], "_fmpz_mat_charpoly (c function)": [[21, "c._fmpz_mat_charpoly"]], "_fmpz_mat_charpoly_berkowitz (c function)": [[21, "c._fmpz_mat_charpoly_berkowitz"]], "_fmpz_mat_charpoly_modular (c function)": [[21, "c._fmpz_mat_charpoly_modular"]], "_fmpz_mat_minpoly (c function)": [[21, "c._fmpz_mat_minpoly"]], "_fmpz_mat_minpoly_modular (c function)": [[21, "c._fmpz_mat_minpoly_modular"]], "_fmpz_mat_mul_double_word (c function)": [[21, "c._fmpz_mat_mul_double_word"]], "_fmpz_mat_mul_multi_mod (c function)": [[21, "c._fmpz_mat_mul_multi_mod"]], "_fmpz_mat_mul_small (c function)": [[21, "c._fmpz_mat_mul_small"]], "_fmpz_mat_solve_dixon_den (c function)": [[21, "c._fmpz_mat_solve_dixon_den"]], "fmpz_mat_crt_ui (c function)": [[21, "c.fmpz_mat_CRT_ui"]], "fmpz_mat_add (c function)": [[21, "c.fmpz_mat_add"]], "fmpz_mat_can_solve (c function)": [[21, "c.fmpz_mat_can_solve"]], "fmpz_mat_can_solve_fflu (c function)": [[21, "c.fmpz_mat_can_solve_fflu"]], "fmpz_mat_can_solve_multi_mod_den (c function)": [[21, "c.fmpz_mat_can_solve_multi_mod_den"]], "fmpz_mat_charpoly (c function)": [[21, "c.fmpz_mat_charpoly"]], "fmpz_mat_charpoly_berkowitz (c function)": [[21, "c.fmpz_mat_charpoly_berkowitz"]], "fmpz_mat_charpoly_modular (c function)": [[21, "c.fmpz_mat_charpoly_modular"]], "fmpz_mat_chol_d (c function)": [[21, "c.fmpz_mat_chol_d"]], "fmpz_mat_clear (c function)": [[21, "c.fmpz_mat_clear"]], "fmpz_mat_col_equal (c function)": [[21, "c.fmpz_mat_col_equal"]], "fmpz_mat_col_partition (c function)": [[21, "c.fmpz_mat_col_partition"]], "fmpz_mat_concat_horizontal (c function)": [[21, "c.fmpz_mat_concat_horizontal"]], "fmpz_mat_concat_vertical (c function)": [[21, "c.fmpz_mat_concat_vertical"]], "fmpz_mat_content (c function)": [[21, "c.fmpz_mat_content"]], "fmpz_mat_det (c function)": [[21, "c.fmpz_mat_det"]], "fmpz_mat_det_bareiss (c function)": [[21, "c.fmpz_mat_det_bareiss"]], "fmpz_mat_det_bound (c function)": [[21, "c.fmpz_mat_det_bound"]], "fmpz_mat_det_cofactor (c function)": [[21, "c.fmpz_mat_det_cofactor"]], "fmpz_mat_det_divisor (c function)": [[21, "c.fmpz_mat_det_divisor"]], "fmpz_mat_det_modular (c function)": [[21, "c.fmpz_mat_det_modular"]], "fmpz_mat_det_modular_accelerated (c function)": [[21, "c.fmpz_mat_det_modular_accelerated"]], "fmpz_mat_det_modular_given_divisor (c function)": [[21, "c.fmpz_mat_det_modular_given_divisor"]], "fmpz_mat_entry (c function)": [[21, "c.fmpz_mat_entry"]], "fmpz_mat_equal (c function)": [[21, "c.fmpz_mat_equal"]], "fmpz_mat_fflu (c function)": [[21, "c.fmpz_mat_fflu"]], "fmpz_mat_find_pivot_any (c function)": [[21, "c.fmpz_mat_find_pivot_any"]], "fmpz_mat_fmpz_vec_mul (c function)": [[21, "c.fmpz_mat_fmpz_vec_mul"]], "fmpz_mat_fmpz_vec_mul_ptr (c function)": [[21, "c.fmpz_mat_fmpz_vec_mul_ptr"]], "fmpz_mat_fprint (c function)": [[21, "c.fmpz_mat_fprint"]], "fmpz_mat_fprint_pretty (c function)": [[21, "c.fmpz_mat_fprint_pretty"]], "fmpz_mat_fread (c function)": [[21, "c.fmpz_mat_fread"]], "fmpz_mat_get_d_mat (c function)": [[21, "c.fmpz_mat_get_d_mat"]], "fmpz_mat_get_d_mat_transpose (c function)": [[21, "c.fmpz_mat_get_d_mat_transpose"]], "fmpz_mat_get_mpf_mat (c function)": [[21, "c.fmpz_mat_get_mpf_mat"]], "fmpz_mat_get_nmod_mat (c function)": [[21, "c.fmpz_mat_get_nmod_mat"]], "fmpz_mat_gram (c function)": [[21, "c.fmpz_mat_gram"]], "fmpz_mat_hadamard (c function)": [[21, "c.fmpz_mat_hadamard"]], "fmpz_mat_hnf (c function)": [[21, "c.fmpz_mat_hnf"]], "fmpz_mat_hnf_classical (c function)": [[21, "c.fmpz_mat_hnf_classical"]], "fmpz_mat_hnf_minors (c function)": [[21, "c.fmpz_mat_hnf_minors"]], "fmpz_mat_hnf_modular (c function)": [[21, "c.fmpz_mat_hnf_modular"]], "fmpz_mat_hnf_modular_eldiv (c function)": [[21, "c.fmpz_mat_hnf_modular_eldiv"]], "fmpz_mat_hnf_pernet_stein (c function)": [[21, "c.fmpz_mat_hnf_pernet_stein"]], "fmpz_mat_hnf_transform (c function)": [[21, "c.fmpz_mat_hnf_transform"]], "fmpz_mat_hnf_xgcd (c function)": [[21, "c.fmpz_mat_hnf_xgcd"]], "fmpz_mat_howell_form_mod (c function)": [[21, "c.fmpz_mat_howell_form_mod"]], "fmpz_mat_init (c function)": [[21, "c.fmpz_mat_init"]], "fmpz_mat_init_set (c function)": [[21, "c.fmpz_mat_init_set"]], "fmpz_mat_inv (c function)": [[21, "c.fmpz_mat_inv"]], "fmpz_mat_invert_cols (c function)": [[21, "c.fmpz_mat_invert_cols"]], "fmpz_mat_invert_rows (c function)": [[21, "c.fmpz_mat_invert_rows"]], "fmpz_mat_is_empty (c function)": [[21, "c.fmpz_mat_is_empty"]], "fmpz_mat_is_hadamard (c function)": [[21, "c.fmpz_mat_is_hadamard"]], "fmpz_mat_is_in_hnf (c function)": [[21, "c.fmpz_mat_is_in_hnf"]], "fmpz_mat_is_in_rref_with_rank (c function)": [[21, "c.fmpz_mat_is_in_rref_with_rank"]], "fmpz_mat_is_in_snf (c function)": [[21, "c.fmpz_mat_is_in_snf"]], "fmpz_mat_is_one (c function)": [[21, "c.fmpz_mat_is_one"]], "fmpz_mat_is_reduced (c function)": [[21, "c.fmpz_mat_is_reduced"]], "fmpz_mat_is_reduced_gram (c function)": [[21, "c.fmpz_mat_is_reduced_gram"]], "fmpz_mat_is_reduced_gram_with_removal (c function)": [[21, "c.fmpz_mat_is_reduced_gram_with_removal"]], "fmpz_mat_is_reduced_with_removal (c function)": [[21, "c.fmpz_mat_is_reduced_with_removal"]], "fmpz_mat_is_square (c function)": [[21, "c.fmpz_mat_is_square"]], "fmpz_mat_is_zero (c function)": [[21, "c.fmpz_mat_is_zero"]], "fmpz_mat_is_zero_row (c function)": [[21, "c.fmpz_mat_is_zero_row"]], "fmpz_mat_kronecker_product (c function)": [[21, "c.fmpz_mat_kronecker_product"]], "fmpz_mat_lll_original (c function)": [[21, "c.fmpz_mat_lll_original"]], "fmpz_mat_lll_storjohann (c function)": [[21, "c.fmpz_mat_lll_storjohann"]], "fmpz_mat_minpoly (c function)": [[21, "c.fmpz_mat_minpoly"]], "fmpz_mat_minpoly_modular (c function)": [[21, "c.fmpz_mat_minpoly_modular"]], "fmpz_mat_mul (c function)": [[21, "c.fmpz_mat_mul"]], "fmpz_mat_mul_blas (c function)": [[21, "c.fmpz_mat_mul_blas"]], "fmpz_mat_mul_classical (c function)": [[21, "c.fmpz_mat_mul_classical"]], "fmpz_mat_mul_fft (c function)": [[21, "c.fmpz_mat_mul_fft"]], "fmpz_mat_mul_fmpz_vec (c function)": [[21, "c.fmpz_mat_mul_fmpz_vec"]], "fmpz_mat_mul_fmpz_vec_ptr (c function)": [[21, "c.fmpz_mat_mul_fmpz_vec_ptr"]], "fmpz_mat_mul_multi_mod (c function)": [[21, "c.fmpz_mat_mul_multi_mod"]], "fmpz_mat_mul_strassen (c function)": [[21, "c.fmpz_mat_mul_strassen"]], "fmpz_mat_multi_crt_ui (c function)": [[21, "c.fmpz_mat_multi_CRT_ui"]], "fmpz_mat_multi_crt_ui_precomp (c function)": [[21, "c.fmpz_mat_multi_CRT_ui_precomp"]], "fmpz_mat_multi_mod_ui (c function)": [[21, "c.fmpz_mat_multi_mod_ui"]], "fmpz_mat_multi_mod_ui_precomp (c function)": [[21, "c.fmpz_mat_multi_mod_ui_precomp"]], "fmpz_mat_neg (c function)": [[21, "c.fmpz_mat_neg"]], "fmpz_mat_nullspace (c function)": [[21, "c.fmpz_mat_nullspace"]], "fmpz_mat_one (c function)": [[21, "c.fmpz_mat_one"]], "fmpz_mat_pow (c function)": [[21, "c.fmpz_mat_pow"]], "fmpz_mat_print (c function)": [[21, "c.fmpz_mat_print"]], "fmpz_mat_print_pretty (c function)": [[21, "c.fmpz_mat_print_pretty"]], "fmpz_mat_randajtai (c function)": [[21, "c.fmpz_mat_randajtai"]], "fmpz_mat_randbits (c function)": [[21, "c.fmpz_mat_randbits"]], "fmpz_mat_randdet (c function)": [[21, "c.fmpz_mat_randdet"]], "fmpz_mat_randintrel (c function)": [[21, "c.fmpz_mat_randintrel"]], "fmpz_mat_randntrulike (c function)": [[21, "c.fmpz_mat_randntrulike"]], "fmpz_mat_randntrulike2 (c function)": [[21, "c.fmpz_mat_randntrulike2"]], "fmpz_mat_randops (c function)": [[21, "c.fmpz_mat_randops"]], "fmpz_mat_randpermdiag (c function)": [[21, "c.fmpz_mat_randpermdiag"]], "fmpz_mat_randrank (c function)": [[21, "c.fmpz_mat_randrank"]], "fmpz_mat_randsimdioph (c function)": [[21, "c.fmpz_mat_randsimdioph"]], "fmpz_mat_randtest (c function)": [[21, "c.fmpz_mat_randtest"]], "fmpz_mat_rank (c function)": [[21, "c.fmpz_mat_rank"]], "fmpz_mat_read (c function)": [[21, "c.fmpz_mat_read"]], "fmpz_mat_row_equal (c function)": [[21, "c.fmpz_mat_row_equal"]], "fmpz_mat_rref (c function)": [[21, "c.fmpz_mat_rref"]], "fmpz_mat_rref_fflu (c function)": [[21, "c.fmpz_mat_rref_fflu"]], "fmpz_mat_rref_fraction_free (c function)": [[21, "c.fmpz_mat_rref_fraction_free"]], "fmpz_mat_rref_mod (c function)": [[21, "c.fmpz_mat_rref_mod"]], "fmpz_mat_rref_mul (c function)": [[21, "c.fmpz_mat_rref_mul"]], "fmpz_mat_scalar_addmul_fmpz (c function)": [[21, "c.fmpz_mat_scalar_addmul_fmpz"]], "fmpz_mat_scalar_addmul_nmod_mat_fmpz (c function)": [[21, "c.fmpz_mat_scalar_addmul_nmod_mat_fmpz"]], "fmpz_mat_scalar_addmul_nmod_mat_ui (c function)": [[21, "c.fmpz_mat_scalar_addmul_nmod_mat_ui"]], "fmpz_mat_scalar_addmul_si (c function)": [[21, "c.fmpz_mat_scalar_addmul_si"]], "fmpz_mat_scalar_addmul_ui (c function)": [[21, "c.fmpz_mat_scalar_addmul_ui"]], "fmpz_mat_scalar_divexact_fmpz (c function)": [[21, "c.fmpz_mat_scalar_divexact_fmpz"]], "fmpz_mat_scalar_divexact_si (c function)": [[21, "c.fmpz_mat_scalar_divexact_si"]], "fmpz_mat_scalar_divexact_ui (c function)": [[21, "c.fmpz_mat_scalar_divexact_ui"]], "fmpz_mat_scalar_mul_2exp (c function)": [[21, "c.fmpz_mat_scalar_mul_2exp"]], "fmpz_mat_scalar_mul_fmpz (c function)": [[21, "c.fmpz_mat_scalar_mul_fmpz"]], "fmpz_mat_scalar_mul_si (c function)": [[21, "c.fmpz_mat_scalar_mul_si"]], "fmpz_mat_scalar_mul_ui (c function)": [[21, "c.fmpz_mat_scalar_mul_ui"]], "fmpz_mat_scalar_smod (c function)": [[21, "c.fmpz_mat_scalar_smod"]], "fmpz_mat_scalar_submul_fmpz (c function)": [[21, "c.fmpz_mat_scalar_submul_fmpz"]], "fmpz_mat_scalar_submul_si (c function)": [[21, "c.fmpz_mat_scalar_submul_si"]], "fmpz_mat_scalar_submul_ui (c function)": [[21, "c.fmpz_mat_scalar_submul_ui"]], "fmpz_mat_scalar_tdiv_q_2exp (c function)": [[21, "c.fmpz_mat_scalar_tdiv_q_2exp"]], "fmpz_mat_set (c function)": [[21, "c.fmpz_mat_set"]], "fmpz_mat_set_nmod_mat (c function)": [[21, "c.fmpz_mat_set_nmod_mat"]], "fmpz_mat_set_nmod_mat_unsigned (c function)": [[21, "c.fmpz_mat_set_nmod_mat_unsigned"]], "fmpz_mat_similarity (c function)": [[21, "c.fmpz_mat_similarity"]], "fmpz_mat_snf (c function)": [[21, "c.fmpz_mat_snf"]], "fmpz_mat_snf_diagonal (c function)": [[21, "c.fmpz_mat_snf_diagonal"]], "fmpz_mat_snf_iliopoulos (c function)": [[21, "c.fmpz_mat_snf_iliopoulos"]], "fmpz_mat_snf_kannan_bachem (c function)": [[21, "c.fmpz_mat_snf_kannan_bachem"]], "fmpz_mat_solve (c function)": [[21, "c.fmpz_mat_solve"]], "fmpz_mat_solve_bound (c function)": [[21, "c.fmpz_mat_solve_bound"]], "fmpz_mat_solve_cramer (c function)": [[21, "c.fmpz_mat_solve_cramer"]], "fmpz_mat_solve_dixon (c function)": [[21, "c.fmpz_mat_solve_dixon"]], "fmpz_mat_solve_dixon_den (c function)": [[21, "c.fmpz_mat_solve_dixon_den"]], "fmpz_mat_solve_fflu (c function)": [[21, "c.fmpz_mat_solve_fflu"]], "fmpz_mat_solve_fflu_precomp (c function)": [[21, "c.fmpz_mat_solve_fflu_precomp"]], "fmpz_mat_solve_multi_mod_den (c function)": [[21, "c.fmpz_mat_solve_multi_mod_den"]], "fmpz_mat_sqr (c function)": [[21, "c.fmpz_mat_sqr"]], "fmpz_mat_sqr_bodrato (c function)": [[21, "c.fmpz_mat_sqr_bodrato"]], "fmpz_mat_strong_echelon_form_mod (c function)": [[21, "c.fmpz_mat_strong_echelon_form_mod"]], "fmpz_mat_struct (c type)": [[21, "c.fmpz_mat_struct"]], "fmpz_mat_sub (c function)": [[21, "c.fmpz_mat_sub"]], "fmpz_mat_swap (c function)": [[21, "c.fmpz_mat_swap"]], "fmpz_mat_swap_cols (c function)": [[21, "c.fmpz_mat_swap_cols"]], "fmpz_mat_swap_entrywise (c function)": [[21, "c.fmpz_mat_swap_entrywise"]], "fmpz_mat_swap_rows (c function)": [[21, "c.fmpz_mat_swap_rows"]], "fmpz_mat_t (c type)": [[21, "c.fmpz_mat_t"]], "fmpz_mat_trace (c function)": [[21, "c.fmpz_mat_trace"]], "fmpz_mat_transpose (c function)": [[21, "c.fmpz_mat_transpose"]], "fmpz_mat_window_clear (c function)": [[21, "c.fmpz_mat_window_clear"]], "fmpz_mat_window_init (c function)": [[21, "c.fmpz_mat_window_init"]], "fmpz_mat_zero (c function)": [[21, "c.fmpz_mat_zero"]], "fmpz_mod_add (c function)": [[22, "c.fmpz_mod_add"]], "fmpz_mod_add_fmpz (c function)": [[22, "c.fmpz_mod_add_fmpz"]], "fmpz_mod_add_si (c function)": [[22, "c.fmpz_mod_add_si"]], "fmpz_mod_add_ui (c function)": [[22, "c.fmpz_mod_add_ui"]], "fmpz_mod_ctx_clear (c function)": [[22, "c.fmpz_mod_ctx_clear"]], "fmpz_mod_ctx_init (c function)": [[22, "c.fmpz_mod_ctx_init"]], "fmpz_mod_ctx_set_modulus (c function)": [[22, "c.fmpz_mod_ctx_set_modulus"]], "fmpz_mod_ctx_struct (c type)": [[22, "c.fmpz_mod_ctx_struct"]], "fmpz_mod_ctx_t (c type)": [[22, "c.fmpz_mod_ctx_t"]], "fmpz_mod_discrete_log_pohlig_hellman_clear (c function)": [[22, "c.fmpz_mod_discrete_log_pohlig_hellman_clear"]], "fmpz_mod_discrete_log_pohlig_hellman_init (c function)": [[22, "c.fmpz_mod_discrete_log_pohlig_hellman_init"]], "fmpz_mod_discrete_log_pohlig_hellman_precompute_prime (c function)": [[22, "c.fmpz_mod_discrete_log_pohlig_hellman_precompute_prime"]], "fmpz_mod_discrete_log_pohlig_hellman_primitive_root (c function)": [[22, "c.fmpz_mod_discrete_log_pohlig_hellman_primitive_root"]], "fmpz_mod_discrete_log_pohlig_hellman_run (c function)": [[22, "c.fmpz_mod_discrete_log_pohlig_hellman_run"]], "fmpz_mod_divides (c function)": [[22, "c.fmpz_mod_divides"]], "fmpz_mod_fmpz_sub (c function)": [[22, "c.fmpz_mod_fmpz_sub"]], "fmpz_mod_inv (c function)": [[22, "c.fmpz_mod_inv"]], "fmpz_mod_is_canonical (c function)": [[22, "c.fmpz_mod_is_canonical"]], "fmpz_mod_is_one (c function)": [[22, "c.fmpz_mod_is_one"]], "fmpz_mod_mul (c function)": [[22, "c.fmpz_mod_mul"]], "fmpz_mod_neg (c function)": [[22, "c.fmpz_mod_neg"]], "fmpz_mod_pow_fmpz (c function)": [[22, "c.fmpz_mod_pow_fmpz"]], "fmpz_mod_pow_ui (c function)": [[22, "c.fmpz_mod_pow_ui"]], "fmpz_mod_set_fmpz (c function)": [[22, "c.fmpz_mod_set_fmpz"]], "fmpz_mod_si_sub (c function)": [[22, "c.fmpz_mod_si_sub"]], "fmpz_mod_sub (c function)": [[22, "c.fmpz_mod_sub"]], "fmpz_mod_sub_fmpz (c function)": [[22, "c.fmpz_mod_sub_fmpz"]], "fmpz_mod_sub_si (c function)": [[22, "c.fmpz_mod_sub_si"]], "fmpz_mod_sub_ui (c function)": [[22, "c.fmpz_mod_sub_ui"]], "fmpz_mod_ui_sub (c function)": [[22, "c.fmpz_mod_ui_sub"]], "fmpz_next_smooth_prime (c function)": [[22, "c.fmpz_next_smooth_prime"]], "_fmpz_mod_mat_mul_classical_threaded_op (c function)": [[23, "c._fmpz_mod_mat_mul_classical_threaded_op"]], "_fmpz_mod_mat_mul_classical_threaded_pool_op (c function)": [[23, "c._fmpz_mod_mat_mul_classical_threaded_pool_op"]], "_fmpz_mod_mat_reduce (c function)": [[23, "c._fmpz_mod_mat_reduce"]], "_fmpz_mod_mat_set_mod (c function)": [[23, "c._fmpz_mod_mat_set_mod"]], "fmpz_mod_mat_add (c function)": [[23, "c.fmpz_mod_mat_add"]], "fmpz_mod_mat_can_solve (c function)": [[23, "c.fmpz_mod_mat_can_solve"]], "fmpz_mod_mat_charpoly (c function)": [[23, "c.fmpz_mod_mat_charpoly"]], "fmpz_mod_mat_clear (c function)": [[23, "c.fmpz_mod_mat_clear"]], "fmpz_mod_mat_concat_horizontal (c function)": [[23, "c.fmpz_mod_mat_concat_horizontal"]], "fmpz_mod_mat_concat_vertical (c function)": [[23, "c.fmpz_mod_mat_concat_vertical"]], "fmpz_mod_mat_entry (c function)": [[23, "c.fmpz_mod_mat_entry"]], "fmpz_mod_mat_fmpz_vec_mul (c function)": [[23, "c.fmpz_mod_mat_fmpz_vec_mul"]], "fmpz_mod_mat_fmpz_vec_mul_ptr (c function)": [[23, "c.fmpz_mod_mat_fmpz_vec_mul_ptr"]], "fmpz_mod_mat_get_fmpz_mat (c function)": [[23, "c.fmpz_mod_mat_get_fmpz_mat"]], "fmpz_mod_mat_howell_form (c function)": [[23, "c.fmpz_mod_mat_howell_form"]], "fmpz_mod_mat_init (c function)": [[23, "c.fmpz_mod_mat_init"]], "fmpz_mod_mat_init_set (c function)": [[23, "c.fmpz_mod_mat_init_set"]], "fmpz_mod_mat_inv (c function)": [[23, "c.fmpz_mod_mat_inv"]], "fmpz_mod_mat_is_empty (c function)": [[23, "c.fmpz_mod_mat_is_empty"]], "fmpz_mod_mat_is_square (c function)": [[23, "c.fmpz_mod_mat_is_square"]], "fmpz_mod_mat_is_zero (c function)": [[23, "c.fmpz_mod_mat_is_zero"]], "fmpz_mod_mat_lu (c function)": [[23, "c.fmpz_mod_mat_lu"]], "fmpz_mod_mat_minpoly (c function)": [[23, "c.fmpz_mod_mat_minpoly"]], "fmpz_mod_mat_mul (c function)": [[23, "c.fmpz_mod_mat_mul"]], "fmpz_mod_mat_mul_classical_threaded (c function)": [[23, "c.fmpz_mod_mat_mul_classical_threaded"]], "fmpz_mod_mat_mul_fmpz_vec (c function)": [[23, "c.fmpz_mod_mat_mul_fmpz_vec"]], "fmpz_mod_mat_mul_fmpz_vec_ptr (c function)": [[23, "c.fmpz_mod_mat_mul_fmpz_vec_ptr"]], "fmpz_mod_mat_ncols (c function)": [[23, "c.fmpz_mod_mat_ncols"]], "fmpz_mod_mat_neg (c function)": [[23, "c.fmpz_mod_mat_neg"]], "fmpz_mod_mat_nrows (c function)": [[23, "c.fmpz_mod_mat_nrows"]], "fmpz_mod_mat_one (c function)": [[23, "c.fmpz_mod_mat_one"]], "fmpz_mod_mat_print_pretty (c function)": [[23, "c.fmpz_mod_mat_print_pretty"]], "fmpz_mod_mat_randtest (c function)": [[23, "c.fmpz_mod_mat_randtest"]], "fmpz_mod_mat_rref (c function)": [[23, "c.fmpz_mod_mat_rref"]], "fmpz_mod_mat_scalar_mul_fmpz (c function)": [[23, "c.fmpz_mod_mat_scalar_mul_fmpz"]], "fmpz_mod_mat_scalar_mul_si (c function)": [[23, "c.fmpz_mod_mat_scalar_mul_si"]], "fmpz_mod_mat_scalar_mul_ui (c function)": [[23, "c.fmpz_mod_mat_scalar_mul_ui"]], "fmpz_mod_mat_set (c function)": [[23, "c.fmpz_mod_mat_set"]], "fmpz_mod_mat_set_entry (c function)": [[23, "c.fmpz_mod_mat_set_entry"]], "fmpz_mod_mat_set_fmpz_mat (c function)": [[23, "c.fmpz_mod_mat_set_fmpz_mat"]], "fmpz_mod_mat_similarity (c function)": [[23, "c.fmpz_mod_mat_similarity"]], "fmpz_mod_mat_solve (c function)": [[23, "c.fmpz_mod_mat_solve"]], "fmpz_mod_mat_solve_tril (c function)": [[23, "c.fmpz_mod_mat_solve_tril"]], "fmpz_mod_mat_solve_triu (c function)": [[23, "c.fmpz_mod_mat_solve_triu"]], "fmpz_mod_mat_sqr (c function)": [[23, "c.fmpz_mod_mat_sqr"]], "fmpz_mod_mat_strong_echelon_form (c function)": [[23, "c.fmpz_mod_mat_strong_echelon_form"]], "fmpz_mod_mat_struct (c type)": [[23, "c.fmpz_mod_mat_struct"]], "fmpz_mod_mat_sub (c function)": [[23, "c.fmpz_mod_mat_sub"]], "fmpz_mod_mat_swap (c function)": [[23, "c.fmpz_mod_mat_swap"]], "fmpz_mod_mat_swap_entrywise (c function)": [[23, "c.fmpz_mod_mat_swap_entrywise"]], "fmpz_mod_mat_t (c type)": [[23, "c.fmpz_mod_mat_t"]], "fmpz_mod_mat_t.fmpz_mod_mat_struct (c type)": [[23, "c.fmpz_mod_mat_t.fmpz_mod_mat_struct"]], "fmpz_mod_mat_t.fmpz_mod_mat_t (c type)": [[23, "c.fmpz_mod_mat_t.fmpz_mod_mat_t"]], "fmpz_mod_mat_trace (c function)": [[23, "c.fmpz_mod_mat_trace"]], "fmpz_mod_mat_transpose (c function)": [[23, "c.fmpz_mod_mat_transpose"]], "fmpz_mod_mat_window_clear (c function)": [[23, "c.fmpz_mod_mat_window_clear"]], "fmpz_mod_mat_window_init (c function)": [[23, "c.fmpz_mod_mat_window_init"]], "fmpz_mod_mat_zero (c function)": [[23, "c.fmpz_mod_mat_zero"]], "fmpz_mod_mpoly_add (c function)": [[24, "c.fmpz_mod_mpoly_add"]], "fmpz_mod_mpoly_add_fmpz (c function)": [[24, "c.fmpz_mod_mpoly_add_fmpz"]], "fmpz_mod_mpoly_add_si (c function)": [[24, "c.fmpz_mod_mpoly_add_si"]], "fmpz_mod_mpoly_add_ui (c function)": [[24, "c.fmpz_mod_mpoly_add_ui"]], "fmpz_mod_mpoly_clear (c function)": [[24, "c.fmpz_mod_mpoly_clear"]], "fmpz_mod_mpoly_cmp (c function)": [[24, "c.fmpz_mod_mpoly_cmp"]], "fmpz_mod_mpoly_combine_like_terms (c function)": [[24, "c.fmpz_mod_mpoly_combine_like_terms"]], "fmpz_mod_mpoly_compose_fmpz_mod_mpoly (c function)": [[24, "c.fmpz_mod_mpoly_compose_fmpz_mod_mpoly"]], "fmpz_mod_mpoly_compose_fmpz_mod_mpoly_gen (c function)": [[24, "c.fmpz_mod_mpoly_compose_fmpz_mod_mpoly_gen"]], "fmpz_mod_mpoly_compose_fmpz_mod_mpoly_geobucket (c function)": [[24, "c.fmpz_mod_mpoly_compose_fmpz_mod_mpoly_geobucket"]], "fmpz_mod_mpoly_compose_fmpz_poly (c function)": [[24, "c.fmpz_mod_mpoly_compose_fmpz_poly"]], "fmpz_mod_mpoly_content_vars (c function)": [[24, "c.fmpz_mod_mpoly_content_vars"]], "fmpz_mod_mpoly_ctx_clear (c function)": [[24, "c.fmpz_mod_mpoly_ctx_clear"]], "fmpz_mod_mpoly_ctx_get_modulus (c function)": [[24, "c.fmpz_mod_mpoly_ctx_get_modulus"]], "fmpz_mod_mpoly_ctx_init (c function)": [[24, "c.fmpz_mod_mpoly_ctx_init"]], "fmpz_mod_mpoly_ctx_nvars (c function)": [[24, "c.fmpz_mod_mpoly_ctx_nvars"]], "fmpz_mod_mpoly_ctx_ord (c function)": [[24, "c.fmpz_mod_mpoly_ctx_ord"]], "fmpz_mod_mpoly_ctx_struct (c type)": [[24, "c.fmpz_mod_mpoly_ctx_struct"]], "fmpz_mod_mpoly_ctx_t (c type)": [[24, "c.fmpz_mod_mpoly_ctx_t"]], "fmpz_mod_mpoly_deflate (c function)": [[24, "c.fmpz_mod_mpoly_deflate"]], "fmpz_mod_mpoly_deflation (c function)": [[24, "c.fmpz_mod_mpoly_deflation"]], "fmpz_mod_mpoly_degree_fmpz (c function)": [[24, "c.fmpz_mod_mpoly_degree_fmpz"]], "fmpz_mod_mpoly_degree_si (c function)": [[24, "c.fmpz_mod_mpoly_degree_si"]], "fmpz_mod_mpoly_degrees_fit_si (c function)": [[24, "c.fmpz_mod_mpoly_degrees_fit_si"]], "fmpz_mod_mpoly_degrees_fmpz (c function)": [[24, "c.fmpz_mod_mpoly_degrees_fmpz"]], "fmpz_mod_mpoly_degrees_si (c function)": [[24, "c.fmpz_mod_mpoly_degrees_si"]], "fmpz_mod_mpoly_derivative (c function)": [[24, "c.fmpz_mod_mpoly_derivative"]], "fmpz_mod_mpoly_discriminant (c function)": [[24, "c.fmpz_mod_mpoly_discriminant"]], "fmpz_mod_mpoly_div (c function)": [[24, "c.fmpz_mod_mpoly_div"]], "fmpz_mod_mpoly_divides (c function)": [[24, "c.fmpz_mod_mpoly_divides"]], "fmpz_mod_mpoly_divrem (c function)": [[24, "c.fmpz_mod_mpoly_divrem"]], "fmpz_mod_mpoly_divrem_ideal (c function)": [[24, "c.fmpz_mod_mpoly_divrem_ideal"]], "fmpz_mod_mpoly_equal (c function)": [[24, "c.fmpz_mod_mpoly_equal"]], "fmpz_mod_mpoly_equal_fmpz (c function)": [[24, "c.fmpz_mod_mpoly_equal_fmpz"]], "fmpz_mod_mpoly_equal_si (c function)": [[24, "c.fmpz_mod_mpoly_equal_si"]], "fmpz_mod_mpoly_equal_ui (c function)": [[24, "c.fmpz_mod_mpoly_equal_ui"]], "fmpz_mod_mpoly_evaluate_all_fmpz (c function)": [[24, "c.fmpz_mod_mpoly_evaluate_all_fmpz"]], "fmpz_mod_mpoly_evaluate_one_fmpz (c function)": [[24, "c.fmpz_mod_mpoly_evaluate_one_fmpz"]], "fmpz_mod_mpoly_fprint_pretty (c function)": [[24, "c.fmpz_mod_mpoly_fprint_pretty"]], "fmpz_mod_mpoly_from_univar (c function)": [[24, "c.fmpz_mod_mpoly_from_univar"]], "fmpz_mod_mpoly_gcd (c function)": [[24, "c.fmpz_mod_mpoly_gcd"]], "fmpz_mod_mpoly_gcd_brown (c function)": [[24, "c.fmpz_mod_mpoly_gcd_brown"]], "fmpz_mod_mpoly_gcd_cofactors (c function)": [[24, "c.fmpz_mod_mpoly_gcd_cofactors"]], "fmpz_mod_mpoly_gcd_hensel (c function)": [[24, "c.fmpz_mod_mpoly_gcd_hensel"]], "fmpz_mod_mpoly_gcd_subresultant (c function)": [[24, "c.fmpz_mod_mpoly_gcd_subresultant"]], "fmpz_mod_mpoly_gcd_zippel (c function)": [[24, "c.fmpz_mod_mpoly_gcd_zippel"]], "fmpz_mod_mpoly_gcd_zippel2 (c function)": [[24, "c.fmpz_mod_mpoly_gcd_zippel2"]], "fmpz_mod_mpoly_gen (c function)": [[24, "c.fmpz_mod_mpoly_gen"]], "fmpz_mod_mpoly_get_coeff_fmpz_fmpz (c function)": [[24, "c.fmpz_mod_mpoly_get_coeff_fmpz_fmpz"]], "fmpz_mod_mpoly_get_coeff_fmpz_monomial (c function)": [[24, "c.fmpz_mod_mpoly_get_coeff_fmpz_monomial"]], "fmpz_mod_mpoly_get_coeff_fmpz_ui (c function)": [[24, "c.fmpz_mod_mpoly_get_coeff_fmpz_ui"]], "fmpz_mod_mpoly_get_coeff_vars_ui (c function)": [[24, "c.fmpz_mod_mpoly_get_coeff_vars_ui"]], "fmpz_mod_mpoly_get_fmpz (c function)": [[24, "c.fmpz_mod_mpoly_get_fmpz"]], "fmpz_mod_mpoly_get_str_pretty (c function)": [[24, "c.fmpz_mod_mpoly_get_str_pretty"]], "fmpz_mod_mpoly_get_term (c function)": [[24, "c.fmpz_mod_mpoly_get_term"]], "fmpz_mod_mpoly_get_term_coeff_fmpz (c function)": [[24, "c.fmpz_mod_mpoly_get_term_coeff_fmpz"]], "fmpz_mod_mpoly_get_term_exp_fmpz (c function)": [[24, "c.fmpz_mod_mpoly_get_term_exp_fmpz"]], "fmpz_mod_mpoly_get_term_exp_si (c function)": [[24, "c.fmpz_mod_mpoly_get_term_exp_si"]], "fmpz_mod_mpoly_get_term_exp_ui (c function)": [[24, "c.fmpz_mod_mpoly_get_term_exp_ui"]], "fmpz_mod_mpoly_get_term_monomial (c function)": [[24, "c.fmpz_mod_mpoly_get_term_monomial"]], "fmpz_mod_mpoly_get_term_var_exp_si (c function)": [[24, "c.fmpz_mod_mpoly_get_term_var_exp_si"]], "fmpz_mod_mpoly_get_term_var_exp_ui (c function)": [[24, "c.fmpz_mod_mpoly_get_term_var_exp_ui"]], "fmpz_mod_mpoly_inflate (c function)": [[24, "c.fmpz_mod_mpoly_inflate"]], "fmpz_mod_mpoly_init (c function)": [[24, "c.fmpz_mod_mpoly_init"]], "fmpz_mod_mpoly_init2 (c function)": [[24, "c.fmpz_mod_mpoly_init2"]], "fmpz_mod_mpoly_init3 (c function)": [[24, "c.fmpz_mod_mpoly_init3"]], "fmpz_mod_mpoly_is_canonical (c function)": [[24, "c.fmpz_mod_mpoly_is_canonical"]], "fmpz_mod_mpoly_is_fmpz (c function)": [[24, "c.fmpz_mod_mpoly_is_fmpz"]], "fmpz_mod_mpoly_is_gen (c function)": [[24, "c.fmpz_mod_mpoly_is_gen"]], "fmpz_mod_mpoly_is_one (c function)": [[24, "c.fmpz_mod_mpoly_is_one"]], "fmpz_mod_mpoly_is_square (c function)": [[24, "c.fmpz_mod_mpoly_is_square"]], "fmpz_mod_mpoly_is_zero (c function)": [[24, "c.fmpz_mod_mpoly_is_zero"]], "fmpz_mod_mpoly_length (c function)": [[24, "c.fmpz_mod_mpoly_length"]], "fmpz_mod_mpoly_make_monic (c function)": [[24, "c.fmpz_mod_mpoly_make_monic"]], "fmpz_mod_mpoly_mul (c function)": [[24, "c.fmpz_mod_mpoly_mul"]], "fmpz_mod_mpoly_mul_dense (c function)": [[24, "c.fmpz_mod_mpoly_mul_dense"]], "fmpz_mod_mpoly_mul_johnson (c function)": [[24, "c.fmpz_mod_mpoly_mul_johnson"]], "fmpz_mod_mpoly_neg (c function)": [[24, "c.fmpz_mod_mpoly_neg"]], "fmpz_mod_mpoly_one (c function)": [[24, "c.fmpz_mod_mpoly_one"]], "fmpz_mod_mpoly_pow_fmpz (c function)": [[24, "c.fmpz_mod_mpoly_pow_fmpz"]], "fmpz_mod_mpoly_pow_ui (c function)": [[24, "c.fmpz_mod_mpoly_pow_ui"]], "fmpz_mod_mpoly_print_pretty (c function)": [[24, "c.fmpz_mod_mpoly_print_pretty"]], "fmpz_mod_mpoly_push_term_fmpz_fmpz (c function)": [[24, "c.fmpz_mod_mpoly_push_term_fmpz_fmpz"]], "fmpz_mod_mpoly_push_term_fmpz_ui (c function)": [[24, "c.fmpz_mod_mpoly_push_term_fmpz_ui"]], "fmpz_mod_mpoly_push_term_si_fmpz (c function)": [[24, "c.fmpz_mod_mpoly_push_term_si_fmpz"]], "fmpz_mod_mpoly_push_term_si_ui (c function)": [[24, "c.fmpz_mod_mpoly_push_term_si_ui"]], "fmpz_mod_mpoly_push_term_ui_fmpz (c function)": [[24, "c.fmpz_mod_mpoly_push_term_ui_fmpz"]], "fmpz_mod_mpoly_push_term_ui_ui (c function)": [[24, "c.fmpz_mod_mpoly_push_term_ui_ui"]], "fmpz_mod_mpoly_quadratic_root (c function)": [[24, "c.fmpz_mod_mpoly_quadratic_root"]], "fmpz_mod_mpoly_randtest_bits (c function)": [[24, "c.fmpz_mod_mpoly_randtest_bits"]], "fmpz_mod_mpoly_randtest_bound (c function)": [[24, "c.fmpz_mod_mpoly_randtest_bound"]], "fmpz_mod_mpoly_randtest_bounds (c function)": [[24, "c.fmpz_mod_mpoly_randtest_bounds"]], "fmpz_mod_mpoly_resize (c function)": [[24, "c.fmpz_mod_mpoly_resize"]], "fmpz_mod_mpoly_resultant (c function)": [[24, "c.fmpz_mod_mpoly_resultant"]], "fmpz_mod_mpoly_reverse (c function)": [[24, "c.fmpz_mod_mpoly_reverse"]], "fmpz_mod_mpoly_scalar_addmul_fmpz (c function)": [[24, "c.fmpz_mod_mpoly_scalar_addmul_fmpz"]], "fmpz_mod_mpoly_scalar_mul_fmpz (c function)": [[24, "c.fmpz_mod_mpoly_scalar_mul_fmpz"]], "fmpz_mod_mpoly_scalar_mul_si (c function)": [[24, "c.fmpz_mod_mpoly_scalar_mul_si"]], "fmpz_mod_mpoly_scalar_mul_ui (c function)": [[24, "c.fmpz_mod_mpoly_scalar_mul_ui"]], "fmpz_mod_mpoly_set (c function)": [[24, "c.fmpz_mod_mpoly_set"]], "fmpz_mod_mpoly_set_coeff_fmpz_fmpz (c function)": [[24, "c.fmpz_mod_mpoly_set_coeff_fmpz_fmpz"]], "fmpz_mod_mpoly_set_coeff_fmpz_monomial (c function)": [[24, "c.fmpz_mod_mpoly_set_coeff_fmpz_monomial"]], "fmpz_mod_mpoly_set_coeff_fmpz_ui (c function)": [[24, "c.fmpz_mod_mpoly_set_coeff_fmpz_ui"]], "fmpz_mod_mpoly_set_coeff_si_fmpz (c function)": [[24, "c.fmpz_mod_mpoly_set_coeff_si_fmpz"]], "fmpz_mod_mpoly_set_coeff_si_ui (c function)": [[24, "c.fmpz_mod_mpoly_set_coeff_si_ui"]], "fmpz_mod_mpoly_set_coeff_ui_fmpz (c function)": [[24, "c.fmpz_mod_mpoly_set_coeff_ui_fmpz"]], "fmpz_mod_mpoly_set_coeff_ui_ui (c function)": [[24, "c.fmpz_mod_mpoly_set_coeff_ui_ui"]], "fmpz_mod_mpoly_set_fmpz (c function)": [[24, "c.fmpz_mod_mpoly_set_fmpz"]], "fmpz_mod_mpoly_set_si (c function)": [[24, "c.fmpz_mod_mpoly_set_si"]], "fmpz_mod_mpoly_set_str_pretty (c function)": [[24, "c.fmpz_mod_mpoly_set_str_pretty"]], "fmpz_mod_mpoly_set_term_coeff_fmpz (c function)": [[24, "c.fmpz_mod_mpoly_set_term_coeff_fmpz"]], "fmpz_mod_mpoly_set_term_coeff_si (c function)": [[24, "c.fmpz_mod_mpoly_set_term_coeff_si"]], "fmpz_mod_mpoly_set_term_coeff_ui (c function)": [[24, "c.fmpz_mod_mpoly_set_term_coeff_ui"]], "fmpz_mod_mpoly_set_term_exp_fmpz (c function)": [[24, "c.fmpz_mod_mpoly_set_term_exp_fmpz"]], "fmpz_mod_mpoly_set_term_exp_ui (c function)": [[24, "c.fmpz_mod_mpoly_set_term_exp_ui"]], "fmpz_mod_mpoly_set_ui (c function)": [[24, "c.fmpz_mod_mpoly_set_ui"]], "fmpz_mod_mpoly_sort_terms (c function)": [[24, "c.fmpz_mod_mpoly_sort_terms"]], "fmpz_mod_mpoly_sqrt (c function)": [[24, "c.fmpz_mod_mpoly_sqrt"]], "fmpz_mod_mpoly_struct (c type)": [[24, "c.fmpz_mod_mpoly_struct"]], "fmpz_mod_mpoly_sub (c function)": [[24, "c.fmpz_mod_mpoly_sub"]], "fmpz_mod_mpoly_sub_fmpz (c function)": [[24, "c.fmpz_mod_mpoly_sub_fmpz"]], "fmpz_mod_mpoly_sub_si (c function)": [[24, "c.fmpz_mod_mpoly_sub_si"]], "fmpz_mod_mpoly_sub_ui (c function)": [[24, "c.fmpz_mod_mpoly_sub_ui"]], "fmpz_mod_mpoly_swap (c function)": [[24, "c.fmpz_mod_mpoly_swap"]], "fmpz_mod_mpoly_t (c type)": [[24, "c.fmpz_mod_mpoly_t"]], "fmpz_mod_mpoly_term_content (c function)": [[24, "c.fmpz_mod_mpoly_term_content"]], "fmpz_mod_mpoly_term_exp_fits_si (c function)": [[24, "c.fmpz_mod_mpoly_term_exp_fits_si"]], "fmpz_mod_mpoly_term_exp_fits_ui (c function)": [[24, "c.fmpz_mod_mpoly_term_exp_fits_ui"]], "fmpz_mod_mpoly_to_univar (c function)": [[24, "c.fmpz_mod_mpoly_to_univar"]], "fmpz_mod_mpoly_total_degree_fits_si (c function)": [[24, "c.fmpz_mod_mpoly_total_degree_fits_si"]], "fmpz_mod_mpoly_total_degree_fmpz (c function)": [[24, "c.fmpz_mod_mpoly_total_degree_fmpz"]], "fmpz_mod_mpoly_total_degree_si (c function)": [[24, "c.fmpz_mod_mpoly_total_degree_si"]], "fmpz_mod_mpoly_univar_clear (c function)": [[24, "c.fmpz_mod_mpoly_univar_clear"]], "fmpz_mod_mpoly_univar_degree_fits_si (c function)": [[24, "c.fmpz_mod_mpoly_univar_degree_fits_si"]], "fmpz_mod_mpoly_univar_discriminant (c function)": [[24, "c.fmpz_mod_mpoly_univar_discriminant"]], "fmpz_mod_mpoly_univar_get_term_coeff (c function)": [[24, "c.fmpz_mod_mpoly_univar_get_term_coeff"]], "fmpz_mod_mpoly_univar_get_term_exp_si (c function)": [[24, "c.fmpz_mod_mpoly_univar_get_term_exp_si"]], "fmpz_mod_mpoly_univar_init (c function)": [[24, "c.fmpz_mod_mpoly_univar_init"]], "fmpz_mod_mpoly_univar_length (c function)": [[24, "c.fmpz_mod_mpoly_univar_length"]], "fmpz_mod_mpoly_univar_resultant (c function)": [[24, "c.fmpz_mod_mpoly_univar_resultant"]], "fmpz_mod_mpoly_univar_set_coeff_ui (c function)": [[24, "c.fmpz_mod_mpoly_univar_set_coeff_ui"]], "fmpz_mod_mpoly_univar_swap (c function)": [[24, "c.fmpz_mod_mpoly_univar_swap"]], "fmpz_mod_mpoly_univar_swap_term_coeff (c function)": [[24, "c.fmpz_mod_mpoly_univar_swap_term_coeff"]], "fmpz_mod_mpoly_used_vars (c function)": [[24, "c.fmpz_mod_mpoly_used_vars"]], "fmpz_mod_mpoly_zero (c function)": [[24, "c.fmpz_mod_mpoly_zero"]], "fmpz_mod_mpoly_factor (c function)": [[25, "c.fmpz_mod_mpoly_factor"]], "fmpz_mod_mpoly_factor_clear (c function)": [[25, "c.fmpz_mod_mpoly_factor_clear"]], "fmpz_mod_mpoly_factor_get_base (c function)": [[25, "c.fmpz_mod_mpoly_factor_get_base"]], "fmpz_mod_mpoly_factor_get_constant_fmpz (c function)": [[25, "c.fmpz_mod_mpoly_factor_get_constant_fmpz"]], "fmpz_mod_mpoly_factor_get_exp_si (c function)": [[25, "c.fmpz_mod_mpoly_factor_get_exp_si"]], "fmpz_mod_mpoly_factor_init (c function)": [[25, "c.fmpz_mod_mpoly_factor_init"]], "fmpz_mod_mpoly_factor_length (c function)": [[25, "c.fmpz_mod_mpoly_factor_length"]], "fmpz_mod_mpoly_factor_sort (c function)": [[25, "c.fmpz_mod_mpoly_factor_sort"]], "fmpz_mod_mpoly_factor_squarefree (c function)": [[25, "c.fmpz_mod_mpoly_factor_squarefree"]], "fmpz_mod_mpoly_factor_struct (c type)": [[25, "c.fmpz_mod_mpoly_factor_struct"]], "fmpz_mod_mpoly_factor_swap (c function)": [[25, "c.fmpz_mod_mpoly_factor_swap"]], "fmpz_mod_mpoly_factor_swap_base (c function)": [[25, "c.fmpz_mod_mpoly_factor_swap_base"]], "fmpz_mod_mpoly_factor_t (c type)": [[25, "c.fmpz_mod_mpoly_factor_t"]], "_fmpz_mod_poly_add (c function)": [[26, "c._fmpz_mod_poly_add"]], "_fmpz_mod_poly_compose (c function)": [[26, "c._fmpz_mod_poly_compose"]], "_fmpz_mod_poly_compose_divconquer (c function)": [[26, "c._fmpz_mod_poly_compose_divconquer"]], "_fmpz_mod_poly_compose_horner (c function)": [[26, "c._fmpz_mod_poly_compose_horner"]], "_fmpz_mod_poly_compose_mod (c function)": [[26, "c._fmpz_mod_poly_compose_mod"]], "_fmpz_mod_poly_compose_mod_brent_kung (c function)": [[26, "c._fmpz_mod_poly_compose_mod_brent_kung"]], "_fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv (c function)": [[26, "c._fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv"]], "_fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv_worker (c function)": [[26, "c._fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv_worker"]], "_fmpz_mod_poly_compose_mod_brent_kung_preinv (c function)": [[26, "c._fmpz_mod_poly_compose_mod_brent_kung_preinv"]], "_fmpz_mod_poly_compose_mod_brent_kung_vec_preinv (c function)": [[26, "c._fmpz_mod_poly_compose_mod_brent_kung_vec_preinv"]], "_fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool (c function)": [[26, "c._fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool"]], "_fmpz_mod_poly_compose_mod_horner (c function)": [[26, "c._fmpz_mod_poly_compose_mod_horner"]], "_fmpz_mod_poly_derivative (c function)": [[26, "c._fmpz_mod_poly_derivative"]], "_fmpz_mod_poly_discriminant (c function)": [[26, "c._fmpz_mod_poly_discriminant"]], "_fmpz_mod_poly_div (c function)": [[26, "c._fmpz_mod_poly_div"]], "_fmpz_mod_poly_div_basecase (c function)": [[26, "c._fmpz_mod_poly_div_basecase"]], "_fmpz_mod_poly_div_divconquer (c function)": [[26, "c._fmpz_mod_poly_div_divconquer"]], "_fmpz_mod_poly_div_divconquer_recursive (c function)": [[26, "c._fmpz_mod_poly_div_divconquer_recursive"]], "_fmpz_mod_poly_div_newton (c function)": [[26, "c._fmpz_mod_poly_div_newton"]], "_fmpz_mod_poly_div_newton_n_preinv (c function)": [[26, "c._fmpz_mod_poly_div_newton_n_preinv"]], "_fmpz_mod_poly_div_series (c function)": [[26, "c._fmpz_mod_poly_div_series"]], "_fmpz_mod_poly_divides (c function)": [[26, "c._fmpz_mod_poly_divides"]], "_fmpz_mod_poly_divides_classical (c function)": [[26, "c._fmpz_mod_poly_divides_classical"]], "_fmpz_mod_poly_divrem (c function)": [[26, "c._fmpz_mod_poly_divrem"]], "_fmpz_mod_poly_divrem_basecase (c function)": [[26, "c._fmpz_mod_poly_divrem_basecase"]], "_fmpz_mod_poly_divrem_divconquer (c function)": [[26, "c._fmpz_mod_poly_divrem_divconquer"]], "_fmpz_mod_poly_divrem_divconquer_recursive (c function)": [[26, "c._fmpz_mod_poly_divrem_divconquer_recursive"]], "_fmpz_mod_poly_divrem_newton_n_preinv (c function)": [[26, "c._fmpz_mod_poly_divrem_newton_n_preinv"]], "_fmpz_mod_poly_evaluate_fmpz (c function)": [[26, "c._fmpz_mod_poly_evaluate_fmpz"]], "_fmpz_mod_poly_evaluate_fmpz_vec (c function)": [[26, "c._fmpz_mod_poly_evaluate_fmpz_vec"]], "_fmpz_mod_poly_evaluate_fmpz_vec_fast (c function)": [[26, "c._fmpz_mod_poly_evaluate_fmpz_vec_fast"]], "_fmpz_mod_poly_evaluate_fmpz_vec_fast_precomp (c function)": [[26, "c._fmpz_mod_poly_evaluate_fmpz_vec_fast_precomp"]], "_fmpz_mod_poly_evaluate_fmpz_vec_iter (c function)": [[26, "c._fmpz_mod_poly_evaluate_fmpz_vec_iter"]], "_fmpz_mod_poly_fprint (c function)": [[26, "c._fmpz_mod_poly_fprint"]], "_fmpz_mod_poly_gcd (c function)": [[26, "c._fmpz_mod_poly_gcd"]], "_fmpz_mod_poly_gcd_euclidean (c function)": [[26, "c._fmpz_mod_poly_gcd_euclidean"]], "_fmpz_mod_poly_gcd_euclidean_f (c function)": [[26, "c._fmpz_mod_poly_gcd_euclidean_f"]], "_fmpz_mod_poly_gcd_f (c function)": [[26, "c._fmpz_mod_poly_gcd_f"]], "_fmpz_mod_poly_gcd_hgcd (c function)": [[26, "c._fmpz_mod_poly_gcd_hgcd"]], "_fmpz_mod_poly_gcdinv (c function)": [[26, "c._fmpz_mod_poly_gcdinv"]], "_fmpz_mod_poly_gcdinv_euclidean (c function)": [[26, "c._fmpz_mod_poly_gcdinv_euclidean"]], "_fmpz_mod_poly_gcdinv_euclidean_f (c function)": [[26, "c._fmpz_mod_poly_gcdinv_euclidean_f"]], "_fmpz_mod_poly_gcdinv_f (c function)": [[26, "c._fmpz_mod_poly_gcdinv_f"]], "_fmpz_mod_poly_hgcd (c function)": [[26, "c._fmpz_mod_poly_hgcd"]], "_fmpz_mod_poly_inv_series (c function)": [[26, "c._fmpz_mod_poly_inv_series"]], "_fmpz_mod_poly_inv_series_newton (c function)": [[26, "c._fmpz_mod_poly_inv_series_newton"]], "_fmpz_mod_poly_invmod (c function)": [[26, "c._fmpz_mod_poly_invmod"]], "_fmpz_mod_poly_invmod_f (c function)": [[26, "c._fmpz_mod_poly_invmod_f"]], "_fmpz_mod_poly_invsqrt_series (c function)": [[26, "c._fmpz_mod_poly_invsqrt_series"]], "_fmpz_mod_poly_minpoly (c function)": [[26, "c._fmpz_mod_poly_minpoly"]], "_fmpz_mod_poly_minpoly_bm (c function)": [[26, "c._fmpz_mod_poly_minpoly_bm"]], "_fmpz_mod_poly_minpoly_hgcd (c function)": [[26, "c._fmpz_mod_poly_minpoly_hgcd"]], "_fmpz_mod_poly_mul (c function)": [[26, "c._fmpz_mod_poly_mul"]], "_fmpz_mod_poly_mullow (c function)": [[26, "c._fmpz_mod_poly_mullow"]], "_fmpz_mod_poly_mulmod (c function)": [[26, "c._fmpz_mod_poly_mulmod"]], "_fmpz_mod_poly_mulmod_preinv (c function)": [[26, "c._fmpz_mod_poly_mulmod_preinv"]], "_fmpz_mod_poly_neg (c function)": [[26, "c._fmpz_mod_poly_neg"]], "_fmpz_mod_poly_normalise (c function)": [[26, "c._fmpz_mod_poly_normalise"]], "_fmpz_mod_poly_pow (c function)": [[26, "c._fmpz_mod_poly_pow"]], "_fmpz_mod_poly_pow_trunc (c function)": [[26, "c._fmpz_mod_poly_pow_trunc"]], "_fmpz_mod_poly_pow_trunc_binexp (c function)": [[26, "c._fmpz_mod_poly_pow_trunc_binexp"]], "_fmpz_mod_poly_powers_mod_preinv_naive (c function)": [[26, "c._fmpz_mod_poly_powers_mod_preinv_naive"]], "_fmpz_mod_poly_powers_mod_preinv_threaded_pool (c function)": [[26, "c._fmpz_mod_poly_powers_mod_preinv_threaded_pool"]], "_fmpz_mod_poly_powmod_fmpz_binexp (c function)": [[26, "c._fmpz_mod_poly_powmod_fmpz_binexp"]], "_fmpz_mod_poly_powmod_fmpz_binexp_preinv (c function)": [[26, "c._fmpz_mod_poly_powmod_fmpz_binexp_preinv"]], "_fmpz_mod_poly_powmod_ui_binexp (c function)": [[26, "c._fmpz_mod_poly_powmod_ui_binexp"]], "_fmpz_mod_poly_powmod_ui_binexp_preinv (c function)": [[26, "c._fmpz_mod_poly_powmod_ui_binexp_preinv"]], "_fmpz_mod_poly_powmod_x_fmpz_preinv (c function)": [[26, "c._fmpz_mod_poly_powmod_x_fmpz_preinv"]], "_fmpz_mod_poly_precompute_matrix (c function)": [[26, "c._fmpz_mod_poly_precompute_matrix"]], "_fmpz_mod_poly_precompute_matrix_worker (c function)": [[26, "c._fmpz_mod_poly_precompute_matrix_worker"]], "_fmpz_mod_poly_product_roots_fmpz_vec (c function)": [[26, "c._fmpz_mod_poly_product_roots_fmpz_vec"]], "_fmpz_mod_poly_radix (c function)": [[26, "c._fmpz_mod_poly_radix"]], "_fmpz_mod_poly_radix_init (c function)": [[26, "c._fmpz_mod_poly_radix_init"]], "_fmpz_mod_poly_reduce_matrix_mod_poly (c function)": [[26, "c._fmpz_mod_poly_reduce_matrix_mod_poly"]], "_fmpz_mod_poly_rem (c function)": [[26, "c._fmpz_mod_poly_rem"]], "_fmpz_mod_poly_rem_basecase (c function)": [[26, "c._fmpz_mod_poly_rem_basecase"]], "_fmpz_mod_poly_rem_f (c function)": [[26, "c._fmpz_mod_poly_rem_f"]], "_fmpz_mod_poly_resultant (c function)": [[26, "c._fmpz_mod_poly_resultant"]], "_fmpz_mod_poly_resultant_euclidean (c function)": [[26, "c._fmpz_mod_poly_resultant_euclidean"]], "_fmpz_mod_poly_resultant_hgcd (c function)": [[26, "c._fmpz_mod_poly_resultant_hgcd"]], "_fmpz_mod_poly_scalar_div_fmpz (c function)": [[26, "c._fmpz_mod_poly_scalar_div_fmpz"]], "_fmpz_mod_poly_scalar_mul_fmpz (c function)": [[26, "c._fmpz_mod_poly_scalar_mul_fmpz"]], "_fmpz_mod_poly_set_length (c function)": [[26, "c._fmpz_mod_poly_set_length"]], "_fmpz_mod_poly_shift_left (c function)": [[26, "c._fmpz_mod_poly_shift_left"]], "_fmpz_mod_poly_shift_right (c function)": [[26, "c._fmpz_mod_poly_shift_right"]], "_fmpz_mod_poly_sqr (c function)": [[26, "c._fmpz_mod_poly_sqr"]], "_fmpz_mod_poly_sqrt (c function)": [[26, "c._fmpz_mod_poly_sqrt"]], "_fmpz_mod_poly_sqrt_series (c function)": [[26, "c._fmpz_mod_poly_sqrt_series"]], "_fmpz_mod_poly_sub (c function)": [[26, "c._fmpz_mod_poly_sub"]], "_fmpz_mod_poly_tree_alloc (c function)": [[26, "c._fmpz_mod_poly_tree_alloc"]], "_fmpz_mod_poly_tree_build (c function)": [[26, "c._fmpz_mod_poly_tree_build"]], "_fmpz_mod_poly_tree_free (c function)": [[26, "c._fmpz_mod_poly_tree_free"]], "_fmpz_mod_poly_xgcd (c function)": [[26, "c._fmpz_mod_poly_xgcd"]], "_fmpz_mod_poly_xgcd_euclidean (c function)": [[26, "c._fmpz_mod_poly_xgcd_euclidean"]], "_fmpz_mod_poly_xgcd_euclidean_f (c function)": [[26, "c._fmpz_mod_poly_xgcd_euclidean_f"]], "_fmpz_mod_poly_xgcd_hgcd (c function)": [[26, "c._fmpz_mod_poly_xgcd_hgcd"]], "fmpz_mod_berlekamp_massey_r_poly (c function)": [[26, "c.fmpz_mod_berlekamp_massey_R_poly"]], "fmpz_mod_berlekamp_massey_v_poly (c function)": [[26, "c.fmpz_mod_berlekamp_massey_V_poly"]], "fmpz_mod_berlekamp_massey_add_point (c function)": [[26, "c.fmpz_mod_berlekamp_massey_add_point"]], "fmpz_mod_berlekamp_massey_add_points (c function)": [[26, "c.fmpz_mod_berlekamp_massey_add_points"]], "fmpz_mod_berlekamp_massey_add_zeros (c function)": [[26, "c.fmpz_mod_berlekamp_massey_add_zeros"]], "fmpz_mod_berlekamp_massey_clear (c function)": [[26, "c.fmpz_mod_berlekamp_massey_clear"]], "fmpz_mod_berlekamp_massey_init (c function)": [[26, "c.fmpz_mod_berlekamp_massey_init"]], "fmpz_mod_berlekamp_massey_point_count (c function)": [[26, "c.fmpz_mod_berlekamp_massey_point_count"]], "fmpz_mod_berlekamp_massey_points (c function)": [[26, "c.fmpz_mod_berlekamp_massey_points"]], "fmpz_mod_berlekamp_massey_reduce (c function)": [[26, "c.fmpz_mod_berlekamp_massey_reduce"]], "fmpz_mod_berlekamp_massey_start_over (c function)": [[26, "c.fmpz_mod_berlekamp_massey_start_over"]], "fmpz_mod_poly_add (c function)": [[26, "c.fmpz_mod_poly_add"]], "fmpz_mod_poly_add_series (c function)": [[26, "c.fmpz_mod_poly_add_series"]], "fmpz_mod_poly_clear (c function)": [[26, "c.fmpz_mod_poly_clear"]], "fmpz_mod_poly_compose (c function)": [[26, "c.fmpz_mod_poly_compose"]], "fmpz_mod_poly_compose_divconquer (c function)": [[26, "c.fmpz_mod_poly_compose_divconquer"]], "fmpz_mod_poly_compose_horner (c function)": [[26, "c.fmpz_mod_poly_compose_horner"]], "fmpz_mod_poly_compose_mod (c function)": [[26, "c.fmpz_mod_poly_compose_mod"]], "fmpz_mod_poly_compose_mod_brent_kung (c function)": [[26, "c.fmpz_mod_poly_compose_mod_brent_kung"]], "fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv (c function)": [[26, "c.fmpz_mod_poly_compose_mod_brent_kung_precomp_preinv"]], "fmpz_mod_poly_compose_mod_brent_kung_preinv (c function)": [[26, "c.fmpz_mod_poly_compose_mod_brent_kung_preinv"]], "fmpz_mod_poly_compose_mod_brent_kung_vec_preinv (c function)": [[26, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv"]], "fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded (c function)": [[26, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded"]], "fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool (c function)": [[26, "c.fmpz_mod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool"]], "fmpz_mod_poly_compose_mod_horner (c function)": [[26, "c.fmpz_mod_poly_compose_mod_horner"]], "fmpz_mod_poly_deflate (c function)": [[26, "c.fmpz_mod_poly_deflate"]], "fmpz_mod_poly_deflation (c function)": [[26, "c.fmpz_mod_poly_deflation"]], "fmpz_mod_poly_degree (c function)": [[26, "c.fmpz_mod_poly_degree"]], "fmpz_mod_poly_derivative (c function)": [[26, "c.fmpz_mod_poly_derivative"]], "fmpz_mod_poly_discriminant (c function)": [[26, "c.fmpz_mod_poly_discriminant"]], "fmpz_mod_poly_div (c function)": [[26, "c.fmpz_mod_poly_div"]], "fmpz_mod_poly_div_basecase (c function)": [[26, "c.fmpz_mod_poly_div_basecase"]], "fmpz_mod_poly_div_divconquer (c function)": [[26, "c.fmpz_mod_poly_div_divconquer"]], "fmpz_mod_poly_div_newton (c function)": [[26, "c.fmpz_mod_poly_div_newton"]], "fmpz_mod_poly_div_newton_n_preinv (c function)": [[26, "c.fmpz_mod_poly_div_newton_n_preinv"]], "fmpz_mod_poly_div_series (c function)": [[26, "c.fmpz_mod_poly_div_series"]], "fmpz_mod_poly_divides (c function)": [[26, "c.fmpz_mod_poly_divides"]], "fmpz_mod_poly_divides_classical (c function)": [[26, "c.fmpz_mod_poly_divides_classical"]], "fmpz_mod_poly_divrem (c function)": [[26, "c.fmpz_mod_poly_divrem"]], "fmpz_mod_poly_divrem_basecase (c function)": [[26, "c.fmpz_mod_poly_divrem_basecase"]], "fmpz_mod_poly_divrem_divconquer (c function)": [[26, "c.fmpz_mod_poly_divrem_divconquer"]], "fmpz_mod_poly_divrem_f (c function)": [[26, "c.fmpz_mod_poly_divrem_f"]], "fmpz_mod_poly_divrem_newton_n_preinv (c function)": [[26, "c.fmpz_mod_poly_divrem_newton_n_preinv"]], "fmpz_mod_poly_equal (c function)": [[26, "c.fmpz_mod_poly_equal"]], "fmpz_mod_poly_equal_trunc (c function)": [[26, "c.fmpz_mod_poly_equal_trunc"]], "fmpz_mod_poly_evaluate_fmpz (c function)": [[26, "c.fmpz_mod_poly_evaluate_fmpz"]], "fmpz_mod_poly_evaluate_fmpz_vec (c function)": [[26, "c.fmpz_mod_poly_evaluate_fmpz_vec"]], "fmpz_mod_poly_evaluate_fmpz_vec_fast (c function)": [[26, "c.fmpz_mod_poly_evaluate_fmpz_vec_fast"]], "fmpz_mod_poly_evaluate_fmpz_vec_iter (c function)": [[26, "c.fmpz_mod_poly_evaluate_fmpz_vec_iter"]], "fmpz_mod_poly_find_distinct_nonzero_roots (c function)": [[26, "c.fmpz_mod_poly_find_distinct_nonzero_roots"]], "fmpz_mod_poly_fit_length (c function)": [[26, "c.fmpz_mod_poly_fit_length"]], "fmpz_mod_poly_fprint (c function)": [[26, "c.fmpz_mod_poly_fprint"]], "fmpz_mod_poly_fprint_pretty (c function)": [[26, "c.fmpz_mod_poly_fprint_pretty"]], "fmpz_mod_poly_frobenius_power (c function)": [[26, "c.fmpz_mod_poly_frobenius_power"]], "fmpz_mod_poly_frobenius_powers_2exp_clear (c function)": [[26, "c.fmpz_mod_poly_frobenius_powers_2exp_clear"]], "fmpz_mod_poly_frobenius_powers_2exp_precomp (c function)": [[26, "c.fmpz_mod_poly_frobenius_powers_2exp_precomp"]], "fmpz_mod_poly_frobenius_powers_clear (c function)": [[26, "c.fmpz_mod_poly_frobenius_powers_clear"]], "fmpz_mod_poly_frobenius_powers_precomp (c function)": [[26, "c.fmpz_mod_poly_frobenius_powers_precomp"]], "fmpz_mod_poly_gcd (c function)": [[26, "c.fmpz_mod_poly_gcd"]], "fmpz_mod_poly_gcd_euclidean (c function)": [[26, "c.fmpz_mod_poly_gcd_euclidean"]], "fmpz_mod_poly_gcd_euclidean_f (c function)": [[26, "c.fmpz_mod_poly_gcd_euclidean_f"]], "fmpz_mod_poly_gcd_f (c function)": [[26, "c.fmpz_mod_poly_gcd_f"]], "fmpz_mod_poly_gcd_hgcd (c function)": [[26, "c.fmpz_mod_poly_gcd_hgcd"]], "fmpz_mod_poly_gcdinv (c function)": [[26, "c.fmpz_mod_poly_gcdinv"]], "fmpz_mod_poly_gcdinv_euclidean (c function)": [[26, "c.fmpz_mod_poly_gcdinv_euclidean"]], "fmpz_mod_poly_gcdinv_euclidean_f (c function)": [[26, "c.fmpz_mod_poly_gcdinv_euclidean_f"]], "fmpz_mod_poly_gcdinv_f (c function)": [[26, "c.fmpz_mod_poly_gcdinv_f"]], "fmpz_mod_poly_get_coeff_fmpz (c function)": [[26, "c.fmpz_mod_poly_get_coeff_fmpz"]], "fmpz_mod_poly_get_coeff_mpz (c function)": [[26, "c.fmpz_mod_poly_get_coeff_mpz"]], "fmpz_mod_poly_get_fmpz_poly (c function)": [[26, "c.fmpz_mod_poly_get_fmpz_poly"]], "fmpz_mod_poly_get_nmod_poly (c function)": [[26, "c.fmpz_mod_poly_get_nmod_poly"]], "fmpz_mod_poly_inflate (c function)": [[26, "c.fmpz_mod_poly_inflate"]], "fmpz_mod_poly_init (c function)": [[26, "c.fmpz_mod_poly_init"]], "fmpz_mod_poly_init2 (c function)": [[26, "c.fmpz_mod_poly_init2"]], "fmpz_mod_poly_inv_series (c function)": [[26, "c.fmpz_mod_poly_inv_series"]], "fmpz_mod_poly_inv_series_f (c function)": [[26, "c.fmpz_mod_poly_inv_series_f"]], "fmpz_mod_poly_inv_series_newton (c function)": [[26, "c.fmpz_mod_poly_inv_series_newton"]], "fmpz_mod_poly_inv_series_newton_f (c function)": [[26, "c.fmpz_mod_poly_inv_series_newton_f"]], "fmpz_mod_poly_invmod (c function)": [[26, "c.fmpz_mod_poly_invmod"]], "fmpz_mod_poly_invmod_f (c function)": [[26, "c.fmpz_mod_poly_invmod_f"]], "fmpz_mod_poly_invsqrt_series (c function)": [[26, "c.fmpz_mod_poly_invsqrt_series"]], "fmpz_mod_poly_is_gen (c function)": [[26, "c.fmpz_mod_poly_is_gen"]], "fmpz_mod_poly_is_one (c function)": [[26, "c.fmpz_mod_poly_is_one"]], "fmpz_mod_poly_is_zero (c function)": [[26, "c.fmpz_mod_poly_is_zero"]], "fmpz_mod_poly_lead (c function)": [[26, "c.fmpz_mod_poly_lead"]], "fmpz_mod_poly_length (c function)": [[26, "c.fmpz_mod_poly_length"]], "fmpz_mod_poly_make_monic (c function)": [[26, "c.fmpz_mod_poly_make_monic"]], "fmpz_mod_poly_make_monic_f (c function)": [[26, "c.fmpz_mod_poly_make_monic_f"]], "fmpz_mod_poly_minpoly (c function)": [[26, "c.fmpz_mod_poly_minpoly"]], "fmpz_mod_poly_minpoly_bm (c function)": [[26, "c.fmpz_mod_poly_minpoly_bm"]], "fmpz_mod_poly_minpoly_hgcd (c function)": [[26, "c.fmpz_mod_poly_minpoly_hgcd"]], "fmpz_mod_poly_mul (c function)": [[26, "c.fmpz_mod_poly_mul"]], "fmpz_mod_poly_mulhigh (c function)": [[26, "c.fmpz_mod_poly_mulhigh"]], "fmpz_mod_poly_mullow (c function)": [[26, "c.fmpz_mod_poly_mullow"]], "fmpz_mod_poly_mulmod (c function)": [[26, "c.fmpz_mod_poly_mulmod"]], "fmpz_mod_poly_mulmod_preinv (c function)": [[26, "c.fmpz_mod_poly_mulmod_preinv"]], "fmpz_mod_poly_neg (c function)": [[26, "c.fmpz_mod_poly_neg"]], "fmpz_mod_poly_one (c function)": [[26, "c.fmpz_mod_poly_one"]], "fmpz_mod_poly_pow (c function)": [[26, "c.fmpz_mod_poly_pow"]], "fmpz_mod_poly_pow_trunc (c function)": [[26, "c.fmpz_mod_poly_pow_trunc"]], "fmpz_mod_poly_pow_trunc_binexp (c function)": [[26, "c.fmpz_mod_poly_pow_trunc_binexp"]], "fmpz_mod_poly_powers_mod_bsgs (c function)": [[26, "c.fmpz_mod_poly_powers_mod_bsgs"]], "fmpz_mod_poly_powers_mod_naive (c function)": [[26, "c.fmpz_mod_poly_powers_mod_naive"]], "fmpz_mod_poly_powmod_fmpz_binexp (c function)": [[26, "c.fmpz_mod_poly_powmod_fmpz_binexp"]], "fmpz_mod_poly_powmod_fmpz_binexp_preinv (c function)": [[26, "c.fmpz_mod_poly_powmod_fmpz_binexp_preinv"]], "fmpz_mod_poly_powmod_ui_binexp (c function)": [[26, "c.fmpz_mod_poly_powmod_ui_binexp"]], "fmpz_mod_poly_powmod_ui_binexp_preinv (c function)": [[26, "c.fmpz_mod_poly_powmod_ui_binexp_preinv"]], "fmpz_mod_poly_powmod_x_fmpz_preinv (c function)": [[26, "c.fmpz_mod_poly_powmod_x_fmpz_preinv"]], "fmpz_mod_poly_precompute_matrix (c function)": [[26, "c.fmpz_mod_poly_precompute_matrix"]], "fmpz_mod_poly_print (c function)": [[26, "c.fmpz_mod_poly_print"]], "fmpz_mod_poly_print_pretty (c function)": [[26, "c.fmpz_mod_poly_print_pretty"]], "fmpz_mod_poly_product_roots_fmpz_vec (c function)": [[26, "c.fmpz_mod_poly_product_roots_fmpz_vec"]], "fmpz_mod_poly_radix (c function)": [[26, "c.fmpz_mod_poly_radix"]], "fmpz_mod_poly_radix_init (c function)": [[26, "c.fmpz_mod_poly_radix_init"]], "fmpz_mod_poly_randtest (c function)": [[26, "c.fmpz_mod_poly_randtest"]], "fmpz_mod_poly_randtest_irreducible (c function)": [[26, "c.fmpz_mod_poly_randtest_irreducible"]], "fmpz_mod_poly_randtest_monic (c function)": [[26, "c.fmpz_mod_poly_randtest_monic"]], "fmpz_mod_poly_randtest_monic_irreducible (c function)": [[26, "c.fmpz_mod_poly_randtest_monic_irreducible"]], "fmpz_mod_poly_randtest_monic_primitive (c function)": [[26, "c.fmpz_mod_poly_randtest_monic_primitive"]], "fmpz_mod_poly_randtest_not_zero (c function)": [[26, "c.fmpz_mod_poly_randtest_not_zero"]], "fmpz_mod_poly_randtest_pentomial (c function)": [[26, "c.fmpz_mod_poly_randtest_pentomial"]], "fmpz_mod_poly_randtest_pentomial_irreducible (c function)": [[26, "c.fmpz_mod_poly_randtest_pentomial_irreducible"]], "fmpz_mod_poly_randtest_sparse_irreducible (c function)": [[26, "c.fmpz_mod_poly_randtest_sparse_irreducible"]], "fmpz_mod_poly_randtest_trinomial (c function)": [[26, "c.fmpz_mod_poly_randtest_trinomial"]], "fmpz_mod_poly_randtest_trinomial_irreducible (c function)": [[26, "c.fmpz_mod_poly_randtest_trinomial_irreducible"]], "fmpz_mod_poly_realloc (c function)": [[26, "c.fmpz_mod_poly_realloc"]], "fmpz_mod_poly_rem (c function)": [[26, "c.fmpz_mod_poly_rem"]], "fmpz_mod_poly_rem_basecase (c function)": [[26, "c.fmpz_mod_poly_rem_basecase"]], "fmpz_mod_poly_remove (c function)": [[26, "c.fmpz_mod_poly_remove"]], "fmpz_mod_poly_resultant (c function)": [[26, "c.fmpz_mod_poly_resultant"]], "fmpz_mod_poly_resultant_euclidean (c function)": [[26, "c.fmpz_mod_poly_resultant_euclidean"]], "fmpz_mod_poly_resultant_hgcd (c function)": [[26, "c.fmpz_mod_poly_resultant_hgcd"]], "fmpz_mod_poly_reverse (c function)": [[26, "c.fmpz_mod_poly_reverse"]], "fmpz_mod_poly_scalar_addmul_fmpz (c function)": [[26, "c.fmpz_mod_poly_scalar_addmul_fmpz"]], "fmpz_mod_poly_scalar_div_fmpz (c function)": [[26, "c.fmpz_mod_poly_scalar_div_fmpz"]], "fmpz_mod_poly_scalar_mul_fmpz (c function)": [[26, "c.fmpz_mod_poly_scalar_mul_fmpz"]], "fmpz_mod_poly_set (c function)": [[26, "c.fmpz_mod_poly_set"]], "fmpz_mod_poly_set_coeff_fmpz (c function)": [[26, "c.fmpz_mod_poly_set_coeff_fmpz"]], "fmpz_mod_poly_set_coeff_mpz (c function)": [[26, "c.fmpz_mod_poly_set_coeff_mpz"]], "fmpz_mod_poly_set_coeff_ui (c function)": [[26, "c.fmpz_mod_poly_set_coeff_ui"]], "fmpz_mod_poly_set_fmpz (c function)": [[26, "c.fmpz_mod_poly_set_fmpz"]], "fmpz_mod_poly_set_fmpz_poly (c function)": [[26, "c.fmpz_mod_poly_set_fmpz_poly"]], "fmpz_mod_poly_set_nmod_poly (c function)": [[26, "c.fmpz_mod_poly_set_nmod_poly"]], "fmpz_mod_poly_set_trunc (c function)": [[26, "c.fmpz_mod_poly_set_trunc"]], "fmpz_mod_poly_set_ui (c function)": [[26, "c.fmpz_mod_poly_set_ui"]], "fmpz_mod_poly_shift_left (c function)": [[26, "c.fmpz_mod_poly_shift_left"]], "fmpz_mod_poly_shift_right (c function)": [[26, "c.fmpz_mod_poly_shift_right"]], "fmpz_mod_poly_sqr (c function)": [[26, "c.fmpz_mod_poly_sqr"]], "fmpz_mod_poly_sqrt (c function)": [[26, "c.fmpz_mod_poly_sqrt"]], "fmpz_mod_poly_sqrt_series (c function)": [[26, "c.fmpz_mod_poly_sqrt_series"]], "fmpz_mod_poly_struct (c type)": [[26, "c.fmpz_mod_poly_struct"]], "fmpz_mod_poly_sub (c function)": [[26, "c.fmpz_mod_poly_sub"]], "fmpz_mod_poly_sub_series (c function)": [[26, "c.fmpz_mod_poly_sub_series"]], "fmpz_mod_poly_swap (c function)": [[26, "c.fmpz_mod_poly_swap"]], "fmpz_mod_poly_t (c type)": [[26, "c.fmpz_mod_poly_t"]], "fmpz_mod_poly_truncate (c function)": [[26, "c.fmpz_mod_poly_truncate"]], "fmpz_mod_poly_xgcd (c function)": [[26, "c.fmpz_mod_poly_xgcd"]], "fmpz_mod_poly_xgcd_euclidean (c function)": [[26, "c.fmpz_mod_poly_xgcd_euclidean"]], "fmpz_mod_poly_xgcd_euclidean_f (c function)": [[26, "c.fmpz_mod_poly_xgcd_euclidean_f"]], "fmpz_mod_poly_xgcd_f (c function)": [[26, "c.fmpz_mod_poly_xgcd_f"]], "fmpz_mod_poly_xgcd_hgcd (c function)": [[26, "c.fmpz_mod_poly_xgcd_hgcd"]], "fmpz_mod_poly_zero (c function)": [[26, "c.fmpz_mod_poly_zero"]], "fmpz_mod_poly_zero_coeffs (c function)": [[26, "c.fmpz_mod_poly_zero_coeffs"]], "_fmpz_mod_poly_interval_poly_worker (c function)": [[27, "c._fmpz_mod_poly_interval_poly_worker"]], "_fmpz_mod_poly_is_squarefree (c function)": [[27, "c._fmpz_mod_poly_is_squarefree"]], "_fmpz_mod_poly_is_squarefree_f (c function)": [[27, "c._fmpz_mod_poly_is_squarefree_f"]], "fmpz_mod_poly_factor (c function)": [[27, "c.fmpz_mod_poly_factor"]], "fmpz_mod_poly_factor_berlekamp (c function)": [[27, "c.fmpz_mod_poly_factor_berlekamp"]], "fmpz_mod_poly_factor_cantor_zassenhaus (c function)": [[27, "c.fmpz_mod_poly_factor_cantor_zassenhaus"]], "fmpz_mod_poly_factor_clear (c function)": [[27, "c.fmpz_mod_poly_factor_clear"]], "fmpz_mod_poly_factor_concat (c function)": [[27, "c.fmpz_mod_poly_factor_concat"]], "fmpz_mod_poly_factor_distinct_deg (c function)": [[27, "c.fmpz_mod_poly_factor_distinct_deg"]], "fmpz_mod_poly_factor_distinct_deg_threaded (c function)": [[27, "c.fmpz_mod_poly_factor_distinct_deg_threaded"]], "fmpz_mod_poly_factor_equal_deg (c function)": [[27, "c.fmpz_mod_poly_factor_equal_deg"]], "fmpz_mod_poly_factor_equal_deg_prob (c function)": [[27, "c.fmpz_mod_poly_factor_equal_deg_prob"]], "fmpz_mod_poly_factor_fit_length (c function)": [[27, "c.fmpz_mod_poly_factor_fit_length"]], "fmpz_mod_poly_factor_init (c function)": [[27, "c.fmpz_mod_poly_factor_init"]], "fmpz_mod_poly_factor_insert (c function)": [[27, "c.fmpz_mod_poly_factor_insert"]], "fmpz_mod_poly_factor_kaltofen_shoup (c function)": [[27, "c.fmpz_mod_poly_factor_kaltofen_shoup"]], "fmpz_mod_poly_factor_pow (c function)": [[27, "c.fmpz_mod_poly_factor_pow"]], "fmpz_mod_poly_factor_print (c function)": [[27, "c.fmpz_mod_poly_factor_print"]], "fmpz_mod_poly_factor_realloc (c function)": [[27, "c.fmpz_mod_poly_factor_realloc"]], "fmpz_mod_poly_factor_set (c function)": [[27, "c.fmpz_mod_poly_factor_set"]], "fmpz_mod_poly_factor_squarefree (c function)": [[27, "c.fmpz_mod_poly_factor_squarefree"]], "fmpz_mod_poly_factor_struct (c type)": [[27, "c.fmpz_mod_poly_factor_struct"]], "fmpz_mod_poly_factor_t (c type)": [[27, "c.fmpz_mod_poly_factor_t"]], "fmpz_mod_poly_is_irreducible (c function)": [[27, "c.fmpz_mod_poly_is_irreducible"]], "fmpz_mod_poly_is_irreducible_ddf (c function)": [[27, "c.fmpz_mod_poly_is_irreducible_ddf"]], "fmpz_mod_poly_is_irreducible_rabin (c function)": [[27, "c.fmpz_mod_poly_is_irreducible_rabin"]], "fmpz_mod_poly_is_irreducible_rabin_f (c function)": [[27, "c.fmpz_mod_poly_is_irreducible_rabin_f"]], "fmpz_mod_poly_is_squarefree (c function)": [[27, "c.fmpz_mod_poly_is_squarefree"]], "fmpz_mod_poly_is_squarefree_f (c function)": [[27, "c.fmpz_mod_poly_is_squarefree_f"]], "fmpz_mod_poly_roots (c function)": [[27, "c.fmpz_mod_poly_roots"]], "fmpz_mod_poly_roots_factored (c function)": [[27, "c.fmpz_mod_poly_roots_factored"]], "_fmpz_mod_vec_add (c function)": [[28, "c._fmpz_mod_vec_add"]], "_fmpz_mod_vec_mul (c function)": [[28, "c._fmpz_mod_vec_mul"]], "_fmpz_mod_vec_neg (c function)": [[28, "c._fmpz_mod_vec_neg"]], "_fmpz_mod_vec_scalar_addmul_fmpz_mod (c function)": [[28, "c._fmpz_mod_vec_scalar_addmul_fmpz_mod"]], "_fmpz_mod_vec_scalar_mul_fmpz_mod (c function)": [[28, "c._fmpz_mod_vec_scalar_mul_fmpz_mod"]], "_fmpz_mod_vec_set_fmpz_vec (c function)": [[28, "c._fmpz_mod_vec_set_fmpz_vec"]], "_fmpz_mod_vec_sub (c function)": [[28, "c._fmpz_mod_vec_sub"]], "_fmpz_vec_dot (c function)": [[28, "c._fmpz_vec_dot"], [35, "c._fmpz_vec_dot"]], "_fmpz_vec_dot_rev (c function)": [[28, "c._fmpz_vec_dot_rev"]], "_fmpz_mpoly_div_monagan_pearce (c function)": [[29, "c._fmpz_mpoly_div_monagan_pearce"]], "_fmpz_mpoly_divides_array (c function)": [[29, "c._fmpz_mpoly_divides_array"]], "_fmpz_mpoly_divides_monagan_pearce (c function)": [[29, "c._fmpz_mpoly_divides_monagan_pearce"]], "_fmpz_mpoly_divrem_array (c function)": [[29, "c._fmpz_mpoly_divrem_array"]], "_fmpz_mpoly_divrem_ideal_monagan_pearce (c function)": [[29, "c._fmpz_mpoly_divrem_ideal_monagan_pearce"]], "_fmpz_mpoly_divrem_monagan_pearce (c function)": [[29, "c._fmpz_mpoly_divrem_monagan_pearce"]], "_fmpz_mpoly_fits_small (c function)": [[29, "c._fmpz_mpoly_fits_small"]], "fmpz_mpoly_add (c function)": [[29, "c.fmpz_mpoly_add"]], "fmpz_mpoly_add_fmpz (c function)": [[29, "c.fmpz_mpoly_add_fmpz"]], "fmpz_mpoly_add_si (c function)": [[29, "c.fmpz_mpoly_add_si"]], "fmpz_mpoly_add_ui (c function)": [[29, "c.fmpz_mpoly_add_ui"]], "fmpz_mpoly_clear (c function)": [[29, "c.fmpz_mpoly_clear"]], "fmpz_mpoly_cmp (c function)": [[29, "c.fmpz_mpoly_cmp"]], "fmpz_mpoly_combine_like_terms (c function)": [[29, "c.fmpz_mpoly_combine_like_terms"]], "fmpz_mpoly_compose_fmpz_mpoly (c function)": [[29, "c.fmpz_mpoly_compose_fmpz_mpoly"]], "fmpz_mpoly_compose_fmpz_mpoly_gen (c function)": [[29, "c.fmpz_mpoly_compose_fmpz_mpoly_gen"]], "fmpz_mpoly_compose_fmpz_mpoly_geobucket (c function)": [[29, "c.fmpz_mpoly_compose_fmpz_mpoly_geobucket"]], "fmpz_mpoly_compose_fmpz_mpoly_horner (c function)": [[29, "c.fmpz_mpoly_compose_fmpz_mpoly_horner"]], "fmpz_mpoly_compose_fmpz_poly (c function)": [[29, "c.fmpz_mpoly_compose_fmpz_poly"]], "fmpz_mpoly_content_vars (c function)": [[29, "c.fmpz_mpoly_content_vars"]], "fmpz_mpoly_ctx_clear (c function)": [[29, "c.fmpz_mpoly_ctx_clear"]], "fmpz_mpoly_ctx_init (c function)": [[29, "c.fmpz_mpoly_ctx_init"]], "fmpz_mpoly_ctx_nvars (c function)": [[29, "c.fmpz_mpoly_ctx_nvars"]], "fmpz_mpoly_ctx_ord (c function)": [[29, "c.fmpz_mpoly_ctx_ord"]], "fmpz_mpoly_ctx_struct (c type)": [[29, "c.fmpz_mpoly_ctx_struct"]], "fmpz_mpoly_ctx_t (c type)": [[29, "c.fmpz_mpoly_ctx_t"]], "fmpz_mpoly_deflate (c function)": [[29, "c.fmpz_mpoly_deflate"]], "fmpz_mpoly_deflation (c function)": [[29, "c.fmpz_mpoly_deflation"]], "fmpz_mpoly_degree_fmpz (c function)": [[29, "c.fmpz_mpoly_degree_fmpz"]], "fmpz_mpoly_degree_si (c function)": [[29, "c.fmpz_mpoly_degree_si"]], "fmpz_mpoly_degrees_fit_si (c function)": [[29, "c.fmpz_mpoly_degrees_fit_si"]], "fmpz_mpoly_degrees_fmpz (c function)": [[29, "c.fmpz_mpoly_degrees_fmpz"]], "fmpz_mpoly_degrees_si (c function)": [[29, "c.fmpz_mpoly_degrees_si"]], "fmpz_mpoly_derivative (c function)": [[29, "c.fmpz_mpoly_derivative"]], "fmpz_mpoly_discriminant (c function)": [[29, "c.fmpz_mpoly_discriminant"]], "fmpz_mpoly_div (c function)": [[29, "c.fmpz_mpoly_div"]], "fmpz_mpoly_div_monagan_pearce (c function)": [[29, "c.fmpz_mpoly_div_monagan_pearce"]], "fmpz_mpoly_divides (c function)": [[29, "c.fmpz_mpoly_divides"]], "fmpz_mpoly_divides_array (c function)": [[29, "c.fmpz_mpoly_divides_array"]], "fmpz_mpoly_divides_heap_threaded (c function)": [[29, "c.fmpz_mpoly_divides_heap_threaded"]], "fmpz_mpoly_divides_monagan_pearce (c function)": [[29, "c.fmpz_mpoly_divides_monagan_pearce"]], "fmpz_mpoly_divrem (c function)": [[29, "c.fmpz_mpoly_divrem"]], "fmpz_mpoly_divrem_array (c function)": [[29, "c.fmpz_mpoly_divrem_array"]], "fmpz_mpoly_divrem_ideal (c function)": [[29, "c.fmpz_mpoly_divrem_ideal"]], "fmpz_mpoly_divrem_ideal_monagan_pearce (c function)": [[29, "c.fmpz_mpoly_divrem_ideal_monagan_pearce"]], "fmpz_mpoly_divrem_monagan_pearce (c function)": [[29, "c.fmpz_mpoly_divrem_monagan_pearce"]], "fmpz_mpoly_equal (c function)": [[29, "c.fmpz_mpoly_equal"]], "fmpz_mpoly_equal_fmpz (c function)": [[29, "c.fmpz_mpoly_equal_fmpz"]], "fmpz_mpoly_equal_si (c function)": [[29, "c.fmpz_mpoly_equal_si"]], "fmpz_mpoly_equal_ui (c function)": [[29, "c.fmpz_mpoly_equal_ui"]], "fmpz_mpoly_evaluate_all_fmpz (c function)": [[29, "c.fmpz_mpoly_evaluate_all_fmpz"]], "fmpz_mpoly_evaluate_one_fmpz (c function)": [[29, "c.fmpz_mpoly_evaluate_one_fmpz"]], "fmpz_mpoly_fit_bits (c function)": [[29, "c.fmpz_mpoly_fit_bits"]], "fmpz_mpoly_fit_length (c function)": [[29, "c.fmpz_mpoly_fit_length"]], "fmpz_mpoly_fprint_pretty (c function)": [[29, "c.fmpz_mpoly_fprint_pretty"]], "fmpz_mpoly_from_univar (c function)": [[29, "c.fmpz_mpoly_from_univar"]], "fmpz_mpoly_gcd (c function)": [[29, "c.fmpz_mpoly_gcd"]], "fmpz_mpoly_gcd_brown (c function)": [[29, "c.fmpz_mpoly_gcd_brown"]], "fmpz_mpoly_gcd_cofactors (c function)": [[29, "c.fmpz_mpoly_gcd_cofactors"]], "fmpz_mpoly_gcd_hensel (c function)": [[29, "c.fmpz_mpoly_gcd_hensel"]], "fmpz_mpoly_gcd_subresultant (c function)": [[29, "c.fmpz_mpoly_gcd_subresultant"]], "fmpz_mpoly_gcd_zippel (c function)": [[29, "c.fmpz_mpoly_gcd_zippel"]], "fmpz_mpoly_gcd_zippel2 (c function)": [[29, "c.fmpz_mpoly_gcd_zippel2"]], "fmpz_mpoly_gen (c function)": [[29, "c.fmpz_mpoly_gen"]], "fmpz_mpoly_get_coeff_fmpz_fmpz (c function)": [[29, "c.fmpz_mpoly_get_coeff_fmpz_fmpz"]], "fmpz_mpoly_get_coeff_fmpz_monomial (c function)": [[29, "c.fmpz_mpoly_get_coeff_fmpz_monomial"]], "fmpz_mpoly_get_coeff_fmpz_ui (c function)": [[29, "c.fmpz_mpoly_get_coeff_fmpz_ui"]], "fmpz_mpoly_get_coeff_si_fmpz (c function)": [[29, "c.fmpz_mpoly_get_coeff_si_fmpz"]], "fmpz_mpoly_get_coeff_si_ui (c function)": [[29, "c.fmpz_mpoly_get_coeff_si_ui"]], "fmpz_mpoly_get_coeff_ui_fmpz (c function)": [[29, "c.fmpz_mpoly_get_coeff_ui_fmpz"]], "fmpz_mpoly_get_coeff_ui_ui (c function)": [[29, "c.fmpz_mpoly_get_coeff_ui_ui"]], "fmpz_mpoly_get_coeff_vars_ui (c function)": [[29, "c.fmpz_mpoly_get_coeff_vars_ui"]], "fmpz_mpoly_get_fmpz (c function)": [[29, "c.fmpz_mpoly_get_fmpz"]], "fmpz_mpoly_get_str_pretty (c function)": [[29, "c.fmpz_mpoly_get_str_pretty"]], "fmpz_mpoly_get_term (c function)": [[29, "c.fmpz_mpoly_get_term"]], "fmpz_mpoly_get_term_coeff_fmpz (c function)": [[29, "c.fmpz_mpoly_get_term_coeff_fmpz"]], "fmpz_mpoly_get_term_coeff_si (c function)": [[29, "c.fmpz_mpoly_get_term_coeff_si"]], "fmpz_mpoly_get_term_coeff_ui (c function)": [[29, "c.fmpz_mpoly_get_term_coeff_ui"]], "fmpz_mpoly_get_term_exp_fmpz (c function)": [[29, "c.fmpz_mpoly_get_term_exp_fmpz"]], "fmpz_mpoly_get_term_exp_si (c function)": [[29, "c.fmpz_mpoly_get_term_exp_si"]], "fmpz_mpoly_get_term_exp_ui (c function)": [[29, "c.fmpz_mpoly_get_term_exp_ui"]], "fmpz_mpoly_get_term_monomial (c function)": [[29, "c.fmpz_mpoly_get_term_monomial"]], "fmpz_mpoly_get_term_var_exp_si (c function)": [[29, "c.fmpz_mpoly_get_term_var_exp_si"]], "fmpz_mpoly_get_term_var_exp_ui (c function)": [[29, "c.fmpz_mpoly_get_term_var_exp_ui"]], "fmpz_mpoly_inflate (c function)": [[29, "c.fmpz_mpoly_inflate"]], "fmpz_mpoly_init (c function)": [[29, "c.fmpz_mpoly_init"]], "fmpz_mpoly_init2 (c function)": [[29, "c.fmpz_mpoly_init2"]], "fmpz_mpoly_init3 (c function)": [[29, "c.fmpz_mpoly_init3"]], "fmpz_mpoly_integral (c function)": [[29, "c.fmpz_mpoly_integral"]], "fmpz_mpoly_is_canonical (c function)": [[29, "c.fmpz_mpoly_is_canonical"]], "fmpz_mpoly_is_fmpz (c function)": [[29, "c.fmpz_mpoly_is_fmpz"]], "fmpz_mpoly_is_gen (c function)": [[29, "c.fmpz_mpoly_is_gen"]], "fmpz_mpoly_is_one (c function)": [[29, "c.fmpz_mpoly_is_one"]], "fmpz_mpoly_is_square (c function)": [[29, "c.fmpz_mpoly_is_square"]], "fmpz_mpoly_is_zero (c function)": [[29, "c.fmpz_mpoly_is_zero"]], "fmpz_mpoly_length (c function)": [[29, "c.fmpz_mpoly_length"]], "fmpz_mpoly_max_bits (c function)": [[29, "c.fmpz_mpoly_max_bits"]], "fmpz_mpoly_mul (c function)": [[29, "c.fmpz_mpoly_mul"]], "fmpz_mpoly_mul_array (c function)": [[29, "c.fmpz_mpoly_mul_array"]], "fmpz_mpoly_mul_array_threaded (c function)": [[29, "c.fmpz_mpoly_mul_array_threaded"]], "fmpz_mpoly_mul_dense (c function)": [[29, "c.fmpz_mpoly_mul_dense"]], "fmpz_mpoly_mul_heap_threaded (c function)": [[29, "c.fmpz_mpoly_mul_heap_threaded"]], "fmpz_mpoly_mul_johnson (c function)": [[29, "c.fmpz_mpoly_mul_johnson"]], "fmpz_mpoly_mul_threaded (c function)": [[29, "c.fmpz_mpoly_mul_threaded"]], "fmpz_mpoly_neg (c function)": [[29, "c.fmpz_mpoly_neg"]], "fmpz_mpoly_one (c function)": [[29, "c.fmpz_mpoly_one"]], "fmpz_mpoly_pow_fmpz (c function)": [[29, "c.fmpz_mpoly_pow_fmpz"]], "fmpz_mpoly_pow_fps (c function)": [[29, "c.fmpz_mpoly_pow_fps"]], "fmpz_mpoly_pow_ui (c function)": [[29, "c.fmpz_mpoly_pow_ui"]], "fmpz_mpoly_print_pretty (c function)": [[29, "c.fmpz_mpoly_print_pretty"]], "fmpz_mpoly_push_term_fmpz_fmpz (c function)": [[29, "c.fmpz_mpoly_push_term_fmpz_fmpz"]], "fmpz_mpoly_push_term_fmpz_ui (c function)": [[29, "c.fmpz_mpoly_push_term_fmpz_ui"]], "fmpz_mpoly_push_term_si_fmpz (c function)": [[29, "c.fmpz_mpoly_push_term_si_fmpz"]], "fmpz_mpoly_push_term_si_ui (c function)": [[29, "c.fmpz_mpoly_push_term_si_ui"]], "fmpz_mpoly_push_term_ui_fmpz (c function)": [[29, "c.fmpz_mpoly_push_term_ui_fmpz"]], "fmpz_mpoly_push_term_ui_ui (c function)": [[29, "c.fmpz_mpoly_push_term_ui_ui"]], "fmpz_mpoly_quasidiv (c function)": [[29, "c.fmpz_mpoly_quasidiv"]], "fmpz_mpoly_quasidivrem (c function)": [[29, "c.fmpz_mpoly_quasidivrem"]], "fmpz_mpoly_quasidivrem_heap (c function)": [[29, "c.fmpz_mpoly_quasidivrem_heap"]], "fmpz_mpoly_quasidivrem_ideal (c function)": [[29, "c.fmpz_mpoly_quasidivrem_ideal"]], "fmpz_mpoly_randtest_bits (c function)": [[29, "c.fmpz_mpoly_randtest_bits"]], "fmpz_mpoly_randtest_bound (c function)": [[29, "c.fmpz_mpoly_randtest_bound"]], "fmpz_mpoly_randtest_bounds (c function)": [[29, "c.fmpz_mpoly_randtest_bounds"]], "fmpz_mpoly_realloc (c function)": [[29, "c.fmpz_mpoly_realloc"]], "fmpz_mpoly_resize (c function)": [[29, "c.fmpz_mpoly_resize"]], "fmpz_mpoly_resultant (c function)": [[29, "c.fmpz_mpoly_resultant"]], "fmpz_mpoly_reverse (c function)": [[29, "c.fmpz_mpoly_reverse"]], "fmpz_mpoly_scalar_divexact_fmpz (c function)": [[29, "c.fmpz_mpoly_scalar_divexact_fmpz"]], "fmpz_mpoly_scalar_divexact_si (c function)": [[29, "c.fmpz_mpoly_scalar_divexact_si"]], "fmpz_mpoly_scalar_divexact_ui (c function)": [[29, "c.fmpz_mpoly_scalar_divexact_ui"]], "fmpz_mpoly_scalar_divides_fmpz (c function)": [[29, "c.fmpz_mpoly_scalar_divides_fmpz"]], "fmpz_mpoly_scalar_divides_si (c function)": [[29, "c.fmpz_mpoly_scalar_divides_si"]], "fmpz_mpoly_scalar_divides_ui (c function)": [[29, "c.fmpz_mpoly_scalar_divides_ui"]], "fmpz_mpoly_scalar_fmma (c function)": [[29, "c.fmpz_mpoly_scalar_fmma"]], "fmpz_mpoly_scalar_mul_fmpz (c function)": [[29, "c.fmpz_mpoly_scalar_mul_fmpz"]], "fmpz_mpoly_scalar_mul_si (c function)": [[29, "c.fmpz_mpoly_scalar_mul_si"]], "fmpz_mpoly_scalar_mul_ui (c function)": [[29, "c.fmpz_mpoly_scalar_mul_ui"]], "fmpz_mpoly_set (c function)": [[29, "c.fmpz_mpoly_set"]], "fmpz_mpoly_set_coeff_fmpz_fmpz (c function)": [[29, "c.fmpz_mpoly_set_coeff_fmpz_fmpz"]], "fmpz_mpoly_set_coeff_fmpz_monomial (c function)": [[29, "c.fmpz_mpoly_set_coeff_fmpz_monomial"]], "fmpz_mpoly_set_coeff_fmpz_ui (c function)": [[29, "c.fmpz_mpoly_set_coeff_fmpz_ui"]], "fmpz_mpoly_set_coeff_si_fmpz (c function)": [[29, "c.fmpz_mpoly_set_coeff_si_fmpz"]], "fmpz_mpoly_set_coeff_si_ui (c function)": [[29, "c.fmpz_mpoly_set_coeff_si_ui"]], "fmpz_mpoly_set_coeff_ui_fmpz (c function)": [[29, "c.fmpz_mpoly_set_coeff_ui_fmpz"]], "fmpz_mpoly_set_coeff_ui_ui (c function)": [[29, "c.fmpz_mpoly_set_coeff_ui_ui"]], "fmpz_mpoly_set_fmpz (c function)": [[29, "c.fmpz_mpoly_set_fmpz"]], "fmpz_mpoly_set_si (c function)": [[29, "c.fmpz_mpoly_set_si"]], "fmpz_mpoly_set_str_pretty (c function)": [[29, "c.fmpz_mpoly_set_str_pretty"]], "fmpz_mpoly_set_term_coeff_fmpz (c function)": [[29, "c.fmpz_mpoly_set_term_coeff_fmpz"]], "fmpz_mpoly_set_term_coeff_si (c function)": [[29, "c.fmpz_mpoly_set_term_coeff_si"]], "fmpz_mpoly_set_term_coeff_ui (c function)": [[29, "c.fmpz_mpoly_set_term_coeff_ui"]], "fmpz_mpoly_set_term_exp_fmpz (c function)": [[29, "c.fmpz_mpoly_set_term_exp_fmpz"]], "fmpz_mpoly_set_term_exp_ui (c function)": [[29, "c.fmpz_mpoly_set_term_exp_ui"]], "fmpz_mpoly_set_ui (c function)": [[29, "c.fmpz_mpoly_set_ui"]], "fmpz_mpoly_sort_terms (c function)": [[29, "c.fmpz_mpoly_sort_terms"]], "fmpz_mpoly_sqrt (c function)": [[29, "c.fmpz_mpoly_sqrt"]], "fmpz_mpoly_sqrt_heap (c function)": [[29, "c.fmpz_mpoly_sqrt_heap"]], "fmpz_mpoly_struct (c type)": [[29, "c.fmpz_mpoly_struct"]], "fmpz_mpoly_sub (c function)": [[29, "c.fmpz_mpoly_sub"]], "fmpz_mpoly_sub_fmpz (c function)": [[29, "c.fmpz_mpoly_sub_fmpz"]], "fmpz_mpoly_sub_si (c function)": [[29, "c.fmpz_mpoly_sub_si"]], "fmpz_mpoly_sub_ui (c function)": [[29, "c.fmpz_mpoly_sub_ui"]], "fmpz_mpoly_swap (c function)": [[29, "c.fmpz_mpoly_swap"]], "fmpz_mpoly_t (c type)": [[29, "c.fmpz_mpoly_t"]], "fmpz_mpoly_term_coeff_ref (c function)": [[29, "c.fmpz_mpoly_term_coeff_ref"]], "fmpz_mpoly_term_content (c function)": [[29, "c.fmpz_mpoly_term_content"]], "fmpz_mpoly_term_exp_fits_si (c function)": [[29, "c.fmpz_mpoly_term_exp_fits_si"]], "fmpz_mpoly_term_exp_fits_ui (c function)": [[29, "c.fmpz_mpoly_term_exp_fits_ui"]], "fmpz_mpoly_to_univar (c function)": [[29, "c.fmpz_mpoly_to_univar"]], "fmpz_mpoly_total_degree_fits_si (c function)": [[29, "c.fmpz_mpoly_total_degree_fits_si"]], "fmpz_mpoly_total_degree_fmpz (c function)": [[29, "c.fmpz_mpoly_total_degree_fmpz"]], "fmpz_mpoly_total_degree_si (c function)": [[29, "c.fmpz_mpoly_total_degree_si"]], "fmpz_mpoly_univar_clear (c function)": [[29, "c.fmpz_mpoly_univar_clear"]], "fmpz_mpoly_univar_degree_fits_si (c function)": [[29, "c.fmpz_mpoly_univar_degree_fits_si"]], "fmpz_mpoly_univar_get_term_coeff (c function)": [[29, "c.fmpz_mpoly_univar_get_term_coeff"]], "fmpz_mpoly_univar_get_term_exp_si (c function)": [[29, "c.fmpz_mpoly_univar_get_term_exp_si"]], "fmpz_mpoly_univar_init (c function)": [[29, "c.fmpz_mpoly_univar_init"]], "fmpz_mpoly_univar_length (c function)": [[29, "c.fmpz_mpoly_univar_length"]], "fmpz_mpoly_univar_swap (c function)": [[29, "c.fmpz_mpoly_univar_swap"]], "fmpz_mpoly_univar_swap_term_coeff (c function)": [[29, "c.fmpz_mpoly_univar_swap_term_coeff"]], "fmpz_mpoly_used_vars (c function)": [[29, "c.fmpz_mpoly_used_vars"]], "fmpz_mpoly_zero (c function)": [[29, "c.fmpz_mpoly_zero"]], "fmpz_mpoly_factor (c function)": [[30, "c.fmpz_mpoly_factor"]], "fmpz_mpoly_factor_clear (c function)": [[30, "c.fmpz_mpoly_factor_clear"]], "fmpz_mpoly_factor_get_base (c function)": [[30, "c.fmpz_mpoly_factor_get_base"]], "fmpz_mpoly_factor_get_constant_fmpq (c function)": [[30, "c.fmpz_mpoly_factor_get_constant_fmpq"]], "fmpz_mpoly_factor_get_constant_fmpz (c function)": [[30, "c.fmpz_mpoly_factor_get_constant_fmpz"]], "fmpz_mpoly_factor_get_exp_si (c function)": [[30, "c.fmpz_mpoly_factor_get_exp_si"]], "fmpz_mpoly_factor_init (c function)": [[30, "c.fmpz_mpoly_factor_init"]], "fmpz_mpoly_factor_length (c function)": [[30, "c.fmpz_mpoly_factor_length"]], "fmpz_mpoly_factor_sort (c function)": [[30, "c.fmpz_mpoly_factor_sort"]], "fmpz_mpoly_factor_squarefree (c function)": [[30, "c.fmpz_mpoly_factor_squarefree"]], "fmpz_mpoly_factor_struct (c type)": [[30, "c.fmpz_mpoly_factor_struct"]], "fmpz_mpoly_factor_swap (c function)": [[30, "c.fmpz_mpoly_factor_swap"]], "fmpz_mpoly_factor_swap_base (c function)": [[30, "c.fmpz_mpoly_factor_swap_base"]], "fmpz_mpoly_factor_t (c type)": [[30, "c.fmpz_mpoly_factor_t"]], "_fmpz_poly_2norm (c function)": [[31, "c._fmpz_poly_2norm"]], "_fmpz_poly_2norm_normalised_bits (c function)": [[31, "c._fmpz_poly_2norm_normalised_bits"]], "_fmpz_poly_crt_ui (c function)": [[31, "c._fmpz_poly_CRT_ui"]], "_fmpz_poly_crt_ui_precomp (c function)": [[31, "c._fmpz_poly_CRT_ui_precomp"]], "_fmpz_poly_add (c function)": [[31, "c._fmpz_poly_add"]], "_fmpz_poly_bit_pack (c function)": [[31, "c._fmpz_poly_bit_pack"]], "_fmpz_poly_bit_unpack (c function)": [[31, "c._fmpz_poly_bit_unpack"]], "_fmpz_poly_bit_unpack_unsigned (c function)": [[31, "c._fmpz_poly_bit_unpack_unsigned"]], "_fmpz_poly_bound_roots (c function)": [[31, "c._fmpz_poly_bound_roots"]], "_fmpz_poly_chebyshev_t (c function)": [[31, "c._fmpz_poly_chebyshev_t"]], "_fmpz_poly_chebyshev_u (c function)": [[31, "c._fmpz_poly_chebyshev_u"]], "_fmpz_poly_compose (c function)": [[31, "c._fmpz_poly_compose"]], "_fmpz_poly_compose_divconquer (c function)": [[31, "c._fmpz_poly_compose_divconquer"]], "_fmpz_poly_compose_horner (c function)": [[31, "c._fmpz_poly_compose_horner"]], "_fmpz_poly_compose_series (c function)": [[31, "c._fmpz_poly_compose_series"]], "_fmpz_poly_compose_series_brent_kung (c function)": [[31, "c._fmpz_poly_compose_series_brent_kung"]], "_fmpz_poly_compose_series_horner (c function)": [[31, "c._fmpz_poly_compose_series_horner"]], "_fmpz_poly_content (c function)": [[31, "c._fmpz_poly_content"]], "_fmpz_poly_cos_minpoly (c function)": [[31, "c._fmpz_poly_cos_minpoly"]], "_fmpz_poly_cyclotomic (c function)": [[31, "c._fmpz_poly_cyclotomic"]], "_fmpz_poly_derivative (c function)": [[31, "c._fmpz_poly_derivative"]], "_fmpz_poly_discriminant (c function)": [[31, "c._fmpz_poly_discriminant"]], "_fmpz_poly_div (c function)": [[31, "c._fmpz_poly_div"]], "_fmpz_poly_div_basecase (c function)": [[31, "c._fmpz_poly_div_basecase"]], "_fmpz_poly_div_divconquer (c function)": [[31, "c._fmpz_poly_div_divconquer"]], "_fmpz_poly_div_divconquer_recursive (c function)": [[31, "c._fmpz_poly_div_divconquer_recursive"]], "_fmpz_poly_div_preinv (c function)": [[31, "c._fmpz_poly_div_preinv"]], "_fmpz_poly_div_root (c function)": [[31, "c._fmpz_poly_div_root"]], "_fmpz_poly_div_series (c function)": [[31, "c._fmpz_poly_div_series"]], "_fmpz_poly_div_series_basecase (c function)": [[31, "c._fmpz_poly_div_series_basecase"]], "_fmpz_poly_div_series_divconquer (c function)": [[31, "c._fmpz_poly_div_series_divconquer"]], "_fmpz_poly_divides (c function)": [[31, "c._fmpz_poly_divides"]], "_fmpz_poly_divrem (c function)": [[31, "c._fmpz_poly_divrem"]], "_fmpz_poly_divrem_basecase (c function)": [[31, "c._fmpz_poly_divrem_basecase"]], "_fmpz_poly_divrem_divconquer (c function)": [[31, "c._fmpz_poly_divrem_divconquer"]], "_fmpz_poly_divrem_divconquer_recursive (c function)": [[31, "c._fmpz_poly_divrem_divconquer_recursive"]], "_fmpz_poly_divrem_preinv (c function)": [[31, "c._fmpz_poly_divrem_preinv"]], "_fmpz_poly_divremlow_divconquer_recursive (c function)": [[31, "c._fmpz_poly_divremlow_divconquer_recursive"]], "_fmpz_poly_eta_qexp (c function)": [[31, "c._fmpz_poly_eta_qexp"]], "_fmpz_poly_evaluate_divconquer_fmpq (c function)": [[31, "c._fmpz_poly_evaluate_divconquer_fmpq"]], "_fmpz_poly_evaluate_divconquer_fmpz (c function)": [[31, "c._fmpz_poly_evaluate_divconquer_fmpz"]], "_fmpz_poly_evaluate_fmpq (c function)": [[31, "c._fmpz_poly_evaluate_fmpq"]], "_fmpz_poly_evaluate_fmpz (c function)": [[31, "c._fmpz_poly_evaluate_fmpz"]], "_fmpz_poly_evaluate_horner_d (c function)": [[31, "c._fmpz_poly_evaluate_horner_d"]], "_fmpz_poly_evaluate_horner_d_2exp (c function)": [[31, "c._fmpz_poly_evaluate_horner_d_2exp"]], "_fmpz_poly_evaluate_horner_d_2exp2 (c function)": [[31, "c._fmpz_poly_evaluate_horner_d_2exp2"]], "_fmpz_poly_evaluate_horner_fmpq (c function)": [[31, "c._fmpz_poly_evaluate_horner_fmpq"]], "_fmpz_poly_evaluate_horner_fmpz (c function)": [[31, "c._fmpz_poly_evaluate_horner_fmpz"]], "_fmpz_poly_evaluate_mod (c function)": [[31, "c._fmpz_poly_evaluate_mod"]], "_fmpz_poly_fibonacci (c function)": [[31, "c._fmpz_poly_fibonacci"]], "_fmpz_poly_fprint (c function)": [[31, "c._fmpz_poly_fprint"]], "_fmpz_poly_fprint_pretty (c function)": [[31, "c._fmpz_poly_fprint_pretty"]], "_fmpz_poly_gcd (c function)": [[31, "c._fmpz_poly_gcd"]], "_fmpz_poly_gcd_heuristic (c function)": [[31, "c._fmpz_poly_gcd_heuristic"]], "_fmpz_poly_gcd_modular (c function)": [[31, "c._fmpz_poly_gcd_modular"]], "_fmpz_poly_gcd_subresultant (c function)": [[31, "c._fmpz_poly_gcd_subresultant"]], "_fmpz_poly_get_str (c function)": [[31, "c._fmpz_poly_get_str"]], "_fmpz_poly_get_str_pretty (c function)": [[31, "c._fmpz_poly_get_str_pretty"]], "_fmpz_poly_hensel_continue_lift (c function)": [[31, "c._fmpz_poly_hensel_continue_lift"]], "_fmpz_poly_hensel_start_lift (c function)": [[31, "c._fmpz_poly_hensel_start_lift"]], "_fmpz_poly_hermite_h (c function)": [[31, "c._fmpz_poly_hermite_h"]], "_fmpz_poly_hermite_he (c function)": [[31, "c._fmpz_poly_hermite_he"]], "_fmpz_poly_inv_series (c function)": [[31, "c._fmpz_poly_inv_series"]], "_fmpz_poly_inv_series_basecase (c function)": [[31, "c._fmpz_poly_inv_series_basecase"]], "_fmpz_poly_inv_series_newton (c function)": [[31, "c._fmpz_poly_inv_series_newton"]], "_fmpz_poly_is_cyclotomic (c function)": [[31, "c._fmpz_poly_is_cyclotomic"]], "_fmpz_poly_is_squarefree (c function)": [[31, "c._fmpz_poly_is_squarefree"]], "_fmpz_poly_lcm (c function)": [[31, "c._fmpz_poly_lcm"]], "_fmpz_poly_legendre_pt (c function)": [[31, "c._fmpz_poly_legendre_pt"]], "_fmpz_poly_monomial_to_newton (c function)": [[31, "c._fmpz_poly_monomial_to_newton"]], "_fmpz_poly_mul (c function)": [[31, "c._fmpz_poly_mul"]], "_fmpz_poly_mul_ks (c function)": [[31, "c._fmpz_poly_mul_KS"]], "_fmpz_poly_mul_ss (c function)": [[31, "c._fmpz_poly_mul_SS"]], "_fmpz_poly_mul_classical (c function)": [[31, "c._fmpz_poly_mul_classical"]], "_fmpz_poly_mul_karatsuba (c function)": [[31, "c._fmpz_poly_mul_karatsuba"]], "_fmpz_poly_mulhigh (c function)": [[31, "c._fmpz_poly_mulhigh"]], "_fmpz_poly_mulhigh_classical (c function)": [[31, "c._fmpz_poly_mulhigh_classical"]], "_fmpz_poly_mulhigh_karatsuba_n (c function)": [[31, "c._fmpz_poly_mulhigh_karatsuba_n"]], "_fmpz_poly_mullow (c function)": [[31, "c._fmpz_poly_mullow"]], "_fmpz_poly_mullow_ks (c function)": [[31, "c._fmpz_poly_mullow_KS"]], "_fmpz_poly_mullow_ss (c function)": [[31, "c._fmpz_poly_mullow_SS"]], "_fmpz_poly_mullow_ss_precache (c function)": [[31, "c._fmpz_poly_mullow_SS_precache"]], "_fmpz_poly_mullow_classical (c function)": [[31, "c._fmpz_poly_mullow_classical"]], "_fmpz_poly_mullow_karatsuba_n (c function)": [[31, "c._fmpz_poly_mullow_karatsuba_n"]], "_fmpz_poly_mulmid_classical (c function)": [[31, "c._fmpz_poly_mulmid_classical"]], "_fmpz_poly_newton_to_monomial (c function)": [[31, "c._fmpz_poly_newton_to_monomial"]], "_fmpz_poly_normalise (c function)": [[31, "c._fmpz_poly_normalise"]], "_fmpz_poly_nth_derivative (c function)": [[31, "c._fmpz_poly_nth_derivative"]], "_fmpz_poly_num_real_roots (c function)": [[31, "c._fmpz_poly_num_real_roots"]], "_fmpz_poly_num_real_roots_sturm (c function)": [[31, "c._fmpz_poly_num_real_roots_sturm"]], "_fmpz_poly_pow (c function)": [[31, "c._fmpz_poly_pow"]], "_fmpz_poly_pow_addchains (c function)": [[31, "c._fmpz_poly_pow_addchains"]], "_fmpz_poly_pow_binexp (c function)": [[31, "c._fmpz_poly_pow_binexp"]], "_fmpz_poly_pow_binomial (c function)": [[31, "c._fmpz_poly_pow_binomial"]], "_fmpz_poly_pow_multinomial (c function)": [[31, "c._fmpz_poly_pow_multinomial"]], "_fmpz_poly_pow_small (c function)": [[31, "c._fmpz_poly_pow_small"]], "_fmpz_poly_pow_trunc (c function)": [[31, "c._fmpz_poly_pow_trunc"]], "_fmpz_poly_power_sums_naive (c function)": [[31, "c._fmpz_poly_power_sums_naive"]], "_fmpz_poly_power_sums_to_poly (c function)": [[31, "c._fmpz_poly_power_sums_to_poly"]], "_fmpz_poly_powers_clear (c function)": [[31, "c._fmpz_poly_powers_clear"]], "_fmpz_poly_powers_precompute (c function)": [[31, "c._fmpz_poly_powers_precompute"]], "_fmpz_poly_preinvert (c function)": [[31, "c._fmpz_poly_preinvert"]], "_fmpz_poly_primitive_part (c function)": [[31, "c._fmpz_poly_primitive_part"]], "_fmpz_poly_print (c function)": [[31, "c._fmpz_poly_print"]], "_fmpz_poly_print_pretty (c function)": [[31, "c._fmpz_poly_print_pretty"]], "_fmpz_poly_product_roots_fmpq_vec (c function)": [[31, "c._fmpz_poly_product_roots_fmpq_vec"]], "_fmpz_poly_product_roots_fmpz_vec (c function)": [[31, "c._fmpz_poly_product_roots_fmpz_vec"]], "_fmpz_poly_pseudo_div (c function)": [[31, "c._fmpz_poly_pseudo_div"]], "_fmpz_poly_pseudo_divrem (c function)": [[31, "c._fmpz_poly_pseudo_divrem"]], "_fmpz_poly_pseudo_divrem_basecase (c function)": [[31, "c._fmpz_poly_pseudo_divrem_basecase"]], "_fmpz_poly_pseudo_divrem_cohen (c function)": [[31, "c._fmpz_poly_pseudo_divrem_cohen"]], "_fmpz_poly_pseudo_divrem_divconquer (c function)": [[31, "c._fmpz_poly_pseudo_divrem_divconquer"]], "_fmpz_poly_pseudo_rem (c function)": [[31, "c._fmpz_poly_pseudo_rem"]], "_fmpz_poly_pseudo_rem_cohen (c function)": [[31, "c._fmpz_poly_pseudo_rem_cohen"]], "_fmpz_poly_rem (c function)": [[31, "c._fmpz_poly_rem"]], "_fmpz_poly_rem_basecase (c function)": [[31, "c._fmpz_poly_rem_basecase"]], "_fmpz_poly_rem_powers_precomp (c function)": [[31, "c._fmpz_poly_rem_powers_precomp"]], "_fmpz_poly_remove_content_2exp (c function)": [[31, "c._fmpz_poly_remove_content_2exp"]], "_fmpz_poly_resultant (c function)": [[31, "c._fmpz_poly_resultant"]], "_fmpz_poly_resultant_euclidean (c function)": [[31, "c._fmpz_poly_resultant_euclidean"]], "_fmpz_poly_resultant_modular (c function)": [[31, "c._fmpz_poly_resultant_modular"]], "_fmpz_poly_reverse (c function)": [[31, "c._fmpz_poly_reverse"]], "_fmpz_poly_revert_series (c function)": [[31, "c._fmpz_poly_revert_series"]], "_fmpz_poly_revert_series_lagrange (c function)": [[31, "c._fmpz_poly_revert_series_lagrange"]], "_fmpz_poly_revert_series_lagrange_fast (c function)": [[31, "c._fmpz_poly_revert_series_lagrange_fast"]], "_fmpz_poly_revert_series_newton (c function)": [[31, "c._fmpz_poly_revert_series_newton"]], "_fmpz_poly_scale_2exp (c function)": [[31, "c._fmpz_poly_scale_2exp"]], "_fmpz_poly_set_length (c function)": [[31, "c._fmpz_poly_set_length"]], "_fmpz_poly_set_str (c function)": [[31, "c._fmpz_poly_set_str"]], "_fmpz_poly_shift_left (c function)": [[31, "c._fmpz_poly_shift_left"]], "_fmpz_poly_shift_right (c function)": [[31, "c._fmpz_poly_shift_right"]], "_fmpz_poly_signature (c function)": [[31, "c._fmpz_poly_signature"]], "_fmpz_poly_sqr (c function)": [[31, "c._fmpz_poly_sqr"]], "_fmpz_poly_sqr_ks (c function)": [[31, "c._fmpz_poly_sqr_KS"]], "_fmpz_poly_sqr_classical (c function)": [[31, "c._fmpz_poly_sqr_classical"]], "_fmpz_poly_sqr_karatsuba (c function)": [[31, "c._fmpz_poly_sqr_karatsuba"]], "_fmpz_poly_sqrlow (c function)": [[31, "c._fmpz_poly_sqrlow"]], "_fmpz_poly_sqrlow_ks (c function)": [[31, "c._fmpz_poly_sqrlow_KS"]], "_fmpz_poly_sqrlow_classical (c function)": [[31, "c._fmpz_poly_sqrlow_classical"]], "_fmpz_poly_sqrlow_karatsuba_n (c function)": [[31, "c._fmpz_poly_sqrlow_karatsuba_n"]], "_fmpz_poly_sqrt (c function)": [[31, "c._fmpz_poly_sqrt"]], "_fmpz_poly_sqrt_ks (c function)": [[31, "c._fmpz_poly_sqrt_KS"]], "_fmpz_poly_sqrt_classical (c function)": [[31, "c._fmpz_poly_sqrt_classical"]], "_fmpz_poly_sqrt_divconquer (c function)": [[31, "c._fmpz_poly_sqrt_divconquer"]], "_fmpz_poly_sqrt_series (c function)": [[31, "c._fmpz_poly_sqrt_series"]], "_fmpz_poly_sqrtrem_classical (c function)": [[31, "c._fmpz_poly_sqrtrem_classical"]], "_fmpz_poly_sqrtrem_divconquer (c function)": [[31, "c._fmpz_poly_sqrtrem_divconquer"]], "_fmpz_poly_sub (c function)": [[31, "c._fmpz_poly_sub"]], "_fmpz_poly_swinnerton_dyer (c function)": [[31, "c._fmpz_poly_swinnerton_dyer"]], "_fmpz_poly_taylor_shift (c function)": [[31, "c._fmpz_poly_taylor_shift"]], "_fmpz_poly_taylor_shift_divconquer (c function)": [[31, "c._fmpz_poly_taylor_shift_divconquer"]], "_fmpz_poly_taylor_shift_horner (c function)": [[31, "c._fmpz_poly_taylor_shift_horner"]], "_fmpz_poly_taylor_shift_multi_mod (c function)": [[31, "c._fmpz_poly_taylor_shift_multi_mod"]], "_fmpz_poly_theta_qexp (c function)": [[31, "c._fmpz_poly_theta_qexp"]], "_fmpz_poly_xgcd (c function)": [[31, "c._fmpz_poly_xgcd"]], "_fmpz_poly_xgcd_modular (c function)": [[31, "c._fmpz_poly_xgcd_modular"]], "arith_eulerian_polynomial (c function)": [[31, "c.arith_eulerian_polynomial"]], "fmpz_poly_2norm (c function)": [[31, "c.fmpz_poly_2norm"]], "fmpz_poly_cld_bound (c function)": [[31, "c.fmpz_poly_CLD_bound"]], "fmpz_poly_crt_ui (c function)": [[31, "c.fmpz_poly_CRT_ui"]], "fmpz_poly_add (c function)": [[31, "c.fmpz_poly_add"]], "fmpz_poly_add_series (c function)": [[31, "c.fmpz_poly_add_series"]], "fmpz_poly_attach_shift (c function)": [[31, "c.fmpz_poly_attach_shift"]], "fmpz_poly_attach_truncate (c function)": [[31, "c.fmpz_poly_attach_truncate"]], "fmpz_poly_bit_pack (c function)": [[31, "c.fmpz_poly_bit_pack"]], "fmpz_poly_bit_unpack (c function)": [[31, "c.fmpz_poly_bit_unpack"]], "fmpz_poly_bit_unpack_unsigned (c function)": [[31, "c.fmpz_poly_bit_unpack_unsigned"]], "fmpz_poly_bound_roots (c function)": [[31, "c.fmpz_poly_bound_roots"]], "fmpz_poly_chebyshev_t (c function)": [[31, "c.fmpz_poly_chebyshev_t"]], "fmpz_poly_chebyshev_u (c function)": [[31, "c.fmpz_poly_chebyshev_u"]], "fmpz_poly_clear (c function)": [[31, "c.fmpz_poly_clear"]], "fmpz_poly_compose (c function)": [[31, "c.fmpz_poly_compose"]], "fmpz_poly_compose_divconquer (c function)": [[31, "c.fmpz_poly_compose_divconquer"]], "fmpz_poly_compose_horner (c function)": [[31, "c.fmpz_poly_compose_horner"]], "fmpz_poly_compose_series (c function)": [[31, "c.fmpz_poly_compose_series"]], "fmpz_poly_compose_series_brent_kung (c function)": [[31, "c.fmpz_poly_compose_series_brent_kung"]], "fmpz_poly_compose_series_horner (c function)": [[31, "c.fmpz_poly_compose_series_horner"]], "fmpz_poly_content (c function)": [[31, "c.fmpz_poly_content"]], "fmpz_poly_cos_minpoly (c function)": [[31, "c.fmpz_poly_cos_minpoly"]], "fmpz_poly_cyclotomic (c function)": [[31, "c.fmpz_poly_cyclotomic"]], "fmpz_poly_deflate (c function)": [[31, "c.fmpz_poly_deflate"]], "fmpz_poly_deflation (c function)": [[31, "c.fmpz_poly_deflation"]], "fmpz_poly_degree (c function)": [[31, "c.fmpz_poly_degree"]], "fmpz_poly_derivative (c function)": [[31, "c.fmpz_poly_derivative"]], "fmpz_poly_discriminant (c function)": [[31, "c.fmpz_poly_discriminant"]], "fmpz_poly_div (c function)": [[31, "c.fmpz_poly_div"]], "fmpz_poly_div_basecase (c function)": [[31, "c.fmpz_poly_div_basecase"]], "fmpz_poly_div_divconquer (c function)": [[31, "c.fmpz_poly_div_divconquer"]], "fmpz_poly_div_preinv (c function)": [[31, "c.fmpz_poly_div_preinv"]], "fmpz_poly_div_root (c function)": [[31, "c.fmpz_poly_div_root"]], "fmpz_poly_div_series (c function)": [[31, "c.fmpz_poly_div_series"]], "fmpz_poly_div_series_basecase (c function)": [[31, "c.fmpz_poly_div_series_basecase"]], "fmpz_poly_div_series_divconquer (c function)": [[31, "c.fmpz_poly_div_series_divconquer"]], "fmpz_poly_divhigh_smodp (c function)": [[31, "c.fmpz_poly_divhigh_smodp"]], "fmpz_poly_divides (c function)": [[31, "c.fmpz_poly_divides"]], "fmpz_poly_divlow_smodp (c function)": [[31, "c.fmpz_poly_divlow_smodp"]], "fmpz_poly_divrem (c function)": [[31, "c.fmpz_poly_divrem"]], "fmpz_poly_divrem_basecase (c function)": [[31, "c.fmpz_poly_divrem_basecase"]], "fmpz_poly_divrem_divconquer (c function)": [[31, "c.fmpz_poly_divrem_divconquer"]], "fmpz_poly_divrem_preinv (c function)": [[31, "c.fmpz_poly_divrem_preinv"]], "fmpz_poly_equal (c function)": [[31, "c.fmpz_poly_equal"]], "fmpz_poly_equal_trunc (c function)": [[31, "c.fmpz_poly_equal_trunc"]], "fmpz_poly_eta_qexp (c function)": [[31, "c.fmpz_poly_eta_qexp"]], "fmpz_poly_evaluate_divconquer_fmpq (c function)": [[31, "c.fmpz_poly_evaluate_divconquer_fmpq"]], "fmpz_poly_evaluate_divconquer_fmpz (c function)": [[31, "c.fmpz_poly_evaluate_divconquer_fmpz"]], "fmpz_poly_evaluate_fmpq (c function)": [[31, "c.fmpz_poly_evaluate_fmpq"]], "fmpz_poly_evaluate_fmpz (c function)": [[31, "c.fmpz_poly_evaluate_fmpz"]], "fmpz_poly_evaluate_fmpz_vec (c function)": [[31, "c.fmpz_poly_evaluate_fmpz_vec"]], "fmpz_poly_evaluate_horner_d (c function)": [[31, "c.fmpz_poly_evaluate_horner_d"]], "fmpz_poly_evaluate_horner_d_2exp (c function)": [[31, "c.fmpz_poly_evaluate_horner_d_2exp"]], "fmpz_poly_evaluate_horner_fmpq (c function)": [[31, "c.fmpz_poly_evaluate_horner_fmpq"]], "fmpz_poly_evaluate_horner_fmpz (c function)": [[31, "c.fmpz_poly_evaluate_horner_fmpz"]], "fmpz_poly_evaluate_mod (c function)": [[31, "c.fmpz_poly_evaluate_mod"]], "fmpz_poly_evaluate_mpq (c function)": [[31, "c.fmpz_poly_evaluate_mpq"]], "fmpz_poly_fibonacci (c function)": [[31, "c.fmpz_poly_fibonacci"]], "fmpz_poly_fit_length (c function)": [[31, "c.fmpz_poly_fit_length"]], "fmpz_poly_fprint (c function)": [[31, "c.fmpz_poly_fprint"]], "fmpz_poly_fprint_pretty (c function)": [[31, "c.fmpz_poly_fprint_pretty"]], "fmpz_poly_fread (c function)": [[31, "c.fmpz_poly_fread"]], "fmpz_poly_fread_pretty (c function)": [[31, "c.fmpz_poly_fread_pretty"]], "fmpz_poly_gcd (c function)": [[31, "c.fmpz_poly_gcd"]], "fmpz_poly_gcd_heuristic (c function)": [[31, "c.fmpz_poly_gcd_heuristic"]], "fmpz_poly_gcd_modular (c function)": [[31, "c.fmpz_poly_gcd_modular"]], "fmpz_poly_gcd_subresultant (c function)": [[31, "c.fmpz_poly_gcd_subresultant"]], "fmpz_poly_get_coeff_fmpz (c function)": [[31, "c.fmpz_poly_get_coeff_fmpz"]], "fmpz_poly_get_coeff_ptr (c function)": [[31, "c.fmpz_poly_get_coeff_ptr"]], "fmpz_poly_get_coeff_si (c function)": [[31, "c.fmpz_poly_get_coeff_si"]], "fmpz_poly_get_coeff_ui (c function)": [[31, "c.fmpz_poly_get_coeff_ui"]], "fmpz_poly_get_nmod_poly (c function)": [[31, "c.fmpz_poly_get_nmod_poly"]], "fmpz_poly_get_str (c function)": [[31, "c.fmpz_poly_get_str"]], "fmpz_poly_get_str_pretty (c function)": [[31, "c.fmpz_poly_get_str_pretty"]], "fmpz_poly_height (c function)": [[31, "c.fmpz_poly_height"]], "fmpz_poly_hensel_build_tree (c function)": [[31, "c.fmpz_poly_hensel_build_tree"]], "fmpz_poly_hensel_lift (c function)": [[31, "c.fmpz_poly_hensel_lift"]], "fmpz_poly_hensel_lift_once (c function)": [[31, "c.fmpz_poly_hensel_lift_once"]], "fmpz_poly_hensel_lift_only_inverse (c function)": [[31, "c.fmpz_poly_hensel_lift_only_inverse"]], "fmpz_poly_hensel_lift_tree (c function)": [[31, "c.fmpz_poly_hensel_lift_tree"]], "fmpz_poly_hensel_lift_tree_recursive (c function)": [[31, "c.fmpz_poly_hensel_lift_tree_recursive"]], "fmpz_poly_hensel_lift_without_inverse (c function)": [[31, "c.fmpz_poly_hensel_lift_without_inverse"]], "fmpz_poly_hermite_h (c function)": [[31, "c.fmpz_poly_hermite_h"]], "fmpz_poly_hermite_he (c function)": [[31, "c.fmpz_poly_hermite_he"]], "fmpz_poly_inflate (c function)": [[31, "c.fmpz_poly_inflate"]], "fmpz_poly_init (c function)": [[31, "c.fmpz_poly_init"]], "fmpz_poly_init2 (c function)": [[31, "c.fmpz_poly_init2"]], "fmpz_poly_interpolate_fmpz_vec (c function)": [[31, "c.fmpz_poly_interpolate_fmpz_vec"]], "fmpz_poly_inv_series (c function)": [[31, "c.fmpz_poly_inv_series"]], "fmpz_poly_inv_series_basecase (c function)": [[31, "c.fmpz_poly_inv_series_basecase"]], "fmpz_poly_inv_series_newton (c function)": [[31, "c.fmpz_poly_inv_series_newton"]], "fmpz_poly_is_cyclotomic (c function)": [[31, "c.fmpz_poly_is_cyclotomic"]], "fmpz_poly_is_gen (c function)": [[31, "c.fmpz_poly_is_gen"]], "fmpz_poly_is_one (c function)": [[31, "c.fmpz_poly_is_one"]], "fmpz_poly_is_squarefree (c function)": [[31, "c.fmpz_poly_is_squarefree"]], "fmpz_poly_is_unit (c function)": [[31, "c.fmpz_poly_is_unit"]], "fmpz_poly_is_zero (c function)": [[31, "c.fmpz_poly_is_zero"]], "fmpz_poly_lcm (c function)": [[31, "c.fmpz_poly_lcm"]], "fmpz_poly_lead (c function)": [[31, "c.fmpz_poly_lead"]], "fmpz_poly_legendre_pt (c function)": [[31, "c.fmpz_poly_legendre_pt"]], "fmpz_poly_length (c function)": [[31, "c.fmpz_poly_length"]], "fmpz_poly_max_bits (c function)": [[31, "c.fmpz_poly_max_bits"]], "fmpz_poly_max_limbs (c function)": [[31, "c.fmpz_poly_max_limbs"]], "fmpz_poly_mul (c function)": [[31, "c.fmpz_poly_mul"]], "fmpz_poly_mul_ks (c function)": [[31, "c.fmpz_poly_mul_KS"]], "fmpz_poly_mul_ss (c function)": [[31, "c.fmpz_poly_mul_SS"]], "fmpz_poly_mul_ss_precache (c function)": [[31, "c.fmpz_poly_mul_SS_precache"]], "fmpz_poly_mul_ss_precache_init (c function)": [[31, "c.fmpz_poly_mul_SS_precache_init"]], "fmpz_poly_mul_classical (c function)": [[31, "c.fmpz_poly_mul_classical"]], "fmpz_poly_mul_karatsuba (c function)": [[31, "c.fmpz_poly_mul_karatsuba"]], "fmpz_poly_mul_precache_clear (c function)": [[31, "c.fmpz_poly_mul_precache_clear"]], "fmpz_poly_mulhigh_classical (c function)": [[31, "c.fmpz_poly_mulhigh_classical"]], "fmpz_poly_mulhigh_karatsuba_n (c function)": [[31, "c.fmpz_poly_mulhigh_karatsuba_n"]], "fmpz_poly_mulhigh_n (c function)": [[31, "c.fmpz_poly_mulhigh_n"]], "fmpz_poly_mullow (c function)": [[31, "c.fmpz_poly_mullow"]], "fmpz_poly_mullow_ks (c function)": [[31, "c.fmpz_poly_mullow_KS"]], "fmpz_poly_mullow_ss (c function)": [[31, "c.fmpz_poly_mullow_SS"]], "fmpz_poly_mullow_ss_precache (c function)": [[31, "c.fmpz_poly_mullow_SS_precache"]], "fmpz_poly_mullow_classical (c function)": [[31, "c.fmpz_poly_mullow_classical"]], "fmpz_poly_mullow_karatsuba_n (c function)": [[31, "c.fmpz_poly_mullow_karatsuba_n"]], "fmpz_poly_mulmid_classical (c function)": [[31, "c.fmpz_poly_mulmid_classical"]], "fmpz_poly_neg (c function)": [[31, "c.fmpz_poly_neg"]], "fmpz_poly_nth_derivative (c function)": [[31, "c.fmpz_poly_nth_derivative"]], "fmpz_poly_num_real_roots (c function)": [[31, "c.fmpz_poly_num_real_roots"]], "fmpz_poly_num_real_roots_sturm (c function)": [[31, "c.fmpz_poly_num_real_roots_sturm"]], "fmpz_poly_one (c function)": [[31, "c.fmpz_poly_one"]], "fmpz_poly_pow (c function)": [[31, "c.fmpz_poly_pow"]], "fmpz_poly_pow_addchains (c function)": [[31, "c.fmpz_poly_pow_addchains"]], "fmpz_poly_pow_binexp (c function)": [[31, "c.fmpz_poly_pow_binexp"]], "fmpz_poly_pow_binomial (c function)": [[31, "c.fmpz_poly_pow_binomial"]], "fmpz_poly_pow_multinomial (c function)": [[31, "c.fmpz_poly_pow_multinomial"]], "fmpz_poly_pow_trunc (c function)": [[31, "c.fmpz_poly_pow_trunc"]], "fmpz_poly_power_sums (c function)": [[31, "c.fmpz_poly_power_sums"]], "fmpz_poly_power_sums_naive (c function)": [[31, "c.fmpz_poly_power_sums_naive"]], "fmpz_poly_power_sums_to_poly (c function)": [[31, "c.fmpz_poly_power_sums_to_poly"]], "fmpz_poly_powers_clear (c function)": [[31, "c.fmpz_poly_powers_clear"]], "fmpz_poly_powers_precompute (c function)": [[31, "c.fmpz_poly_powers_precompute"]], "fmpz_poly_preinvert (c function)": [[31, "c.fmpz_poly_preinvert"]], "fmpz_poly_primitive_part (c function)": [[31, "c.fmpz_poly_primitive_part"]], "fmpz_poly_print (c function)": [[31, "c.fmpz_poly_print"]], "fmpz_poly_print_pretty (c function)": [[31, "c.fmpz_poly_print_pretty"]], "fmpz_poly_product_roots_fmpq_vec (c function)": [[31, "c.fmpz_poly_product_roots_fmpq_vec"]], "fmpz_poly_product_roots_fmpz_vec (c function)": [[31, "c.fmpz_poly_product_roots_fmpz_vec"]], "fmpz_poly_pseudo_div (c function)": [[31, "c.fmpz_poly_pseudo_div"]], "fmpz_poly_pseudo_divrem (c function)": [[31, "c.fmpz_poly_pseudo_divrem"]], "fmpz_poly_pseudo_divrem_basecase (c function)": [[31, "c.fmpz_poly_pseudo_divrem_basecase"]], "fmpz_poly_pseudo_divrem_cohen (c function)": [[31, "c.fmpz_poly_pseudo_divrem_cohen"]], "fmpz_poly_pseudo_divrem_divconquer (c function)": [[31, "c.fmpz_poly_pseudo_divrem_divconquer"]], "fmpz_poly_pseudo_rem (c function)": [[31, "c.fmpz_poly_pseudo_rem"]], "fmpz_poly_pseudo_rem_cohen (c function)": [[31, "c.fmpz_poly_pseudo_rem_cohen"]], "fmpz_poly_randtest (c function)": [[31, "c.fmpz_poly_randtest"]], "fmpz_poly_randtest_no_real_root (c function)": [[31, "c.fmpz_poly_randtest_no_real_root"]], "fmpz_poly_randtest_not_zero (c function)": [[31, "c.fmpz_poly_randtest_not_zero"]], "fmpz_poly_randtest_unsigned (c function)": [[31, "c.fmpz_poly_randtest_unsigned"]], "fmpz_poly_read (c function)": [[31, "c.fmpz_poly_read"]], "fmpz_poly_read_pretty (c function)": [[31, "c.fmpz_poly_read_pretty"]], "fmpz_poly_realloc (c function)": [[31, "c.fmpz_poly_realloc"]], "fmpz_poly_rem (c function)": [[31, "c.fmpz_poly_rem"]], "fmpz_poly_rem_basecase (c function)": [[31, "c.fmpz_poly_rem_basecase"]], "fmpz_poly_rem_powers_precomp (c function)": [[31, "c.fmpz_poly_rem_powers_precomp"]], "fmpz_poly_remove (c function)": [[31, "c.fmpz_poly_remove"]], "fmpz_poly_resultant (c function)": [[31, "c.fmpz_poly_resultant"]], "fmpz_poly_resultant_euclidean (c function)": [[31, "c.fmpz_poly_resultant_euclidean"]], "fmpz_poly_resultant_modular (c function)": [[31, "c.fmpz_poly_resultant_modular"]], "fmpz_poly_resultant_modular_div (c function)": [[31, "c.fmpz_poly_resultant_modular_div"]], "fmpz_poly_reverse (c function)": [[31, "c.fmpz_poly_reverse"]], "fmpz_poly_revert_series (c function)": [[31, "c.fmpz_poly_revert_series"]], "fmpz_poly_revert_series_lagrange (c function)": [[31, "c.fmpz_poly_revert_series_lagrange"]], "fmpz_poly_revert_series_lagrange_fast (c function)": [[31, "c.fmpz_poly_revert_series_lagrange_fast"]], "fmpz_poly_revert_series_newton (c function)": [[31, "c.fmpz_poly_revert_series_newton"]], "fmpz_poly_scalar_abs (c function)": [[31, "c.fmpz_poly_scalar_abs"]], "fmpz_poly_scalar_addmul_fmpz (c function)": [[31, "c.fmpz_poly_scalar_addmul_fmpz"]], "fmpz_poly_scalar_addmul_si (c function)": [[31, "c.fmpz_poly_scalar_addmul_si"]], "fmpz_poly_scalar_addmul_ui (c function)": [[31, "c.fmpz_poly_scalar_addmul_ui"]], "fmpz_poly_scalar_divexact_fmpz (c function)": [[31, "c.fmpz_poly_scalar_divexact_fmpz"]], "fmpz_poly_scalar_divexact_mpz (c function)": [[31, "c.fmpz_poly_scalar_divexact_mpz"]], "fmpz_poly_scalar_divexact_si (c function)": [[31, "c.fmpz_poly_scalar_divexact_si"]], "fmpz_poly_scalar_divexact_ui (c function)": [[31, "c.fmpz_poly_scalar_divexact_ui"]], "fmpz_poly_scalar_fdiv_2exp (c function)": [[31, "c.fmpz_poly_scalar_fdiv_2exp"]], "fmpz_poly_scalar_fdiv_fmpz (c function)": [[31, "c.fmpz_poly_scalar_fdiv_fmpz"]], "fmpz_poly_scalar_fdiv_mpz (c function)": [[31, "c.fmpz_poly_scalar_fdiv_mpz"]], "fmpz_poly_scalar_fdiv_si (c function)": [[31, "c.fmpz_poly_scalar_fdiv_si"]], "fmpz_poly_scalar_fdiv_ui (c function)": [[31, "c.fmpz_poly_scalar_fdiv_ui"]], "fmpz_poly_scalar_mod_fmpz (c function)": [[31, "c.fmpz_poly_scalar_mod_fmpz"]], "fmpz_poly_scalar_mul_2exp (c function)": [[31, "c.fmpz_poly_scalar_mul_2exp"]], "fmpz_poly_scalar_mul_fmpz (c function)": [[31, "c.fmpz_poly_scalar_mul_fmpz"]], "fmpz_poly_scalar_mul_mpz (c function)": [[31, "c.fmpz_poly_scalar_mul_mpz"]], "fmpz_poly_scalar_mul_si (c function)": [[31, "c.fmpz_poly_scalar_mul_si"]], "fmpz_poly_scalar_mul_ui (c function)": [[31, "c.fmpz_poly_scalar_mul_ui"]], "fmpz_poly_scalar_smod_fmpz (c function)": [[31, "c.fmpz_poly_scalar_smod_fmpz"]], "fmpz_poly_scalar_submul_fmpz (c function)": [[31, "c.fmpz_poly_scalar_submul_fmpz"]], "fmpz_poly_scalar_tdiv_2exp (c function)": [[31, "c.fmpz_poly_scalar_tdiv_2exp"]], "fmpz_poly_scalar_tdiv_fmpz (c function)": [[31, "c.fmpz_poly_scalar_tdiv_fmpz"]], "fmpz_poly_scalar_tdiv_si (c function)": [[31, "c.fmpz_poly_scalar_tdiv_si"]], "fmpz_poly_scalar_tdiv_ui (c function)": [[31, "c.fmpz_poly_scalar_tdiv_ui"]], "fmpz_poly_set (c function)": [[31, "c.fmpz_poly_set"]], "fmpz_poly_set_coeff_fmpz (c function)": [[31, "c.fmpz_poly_set_coeff_fmpz"]], "fmpz_poly_set_coeff_si (c function)": [[31, "c.fmpz_poly_set_coeff_si"]], "fmpz_poly_set_coeff_ui (c function)": [[31, "c.fmpz_poly_set_coeff_ui"]], "fmpz_poly_set_fmpz (c function)": [[31, "c.fmpz_poly_set_fmpz"]], "fmpz_poly_set_mpz (c function)": [[31, "c.fmpz_poly_set_mpz"]], "fmpz_poly_set_nmod_poly (c function)": [[31, "c.fmpz_poly_set_nmod_poly"]], "fmpz_poly_set_nmod_poly_unsigned (c function)": [[31, "c.fmpz_poly_set_nmod_poly_unsigned"]], "fmpz_poly_set_si (c function)": [[31, "c.fmpz_poly_set_si"]], "fmpz_poly_set_str (c function)": [[31, "c.fmpz_poly_set_str"]], "fmpz_poly_set_trunc (c function)": [[31, "c.fmpz_poly_set_trunc"]], "fmpz_poly_set_ui (c function)": [[31, "c.fmpz_poly_set_ui"]], "fmpz_poly_shift_left (c function)": [[31, "c.fmpz_poly_shift_left"]], "fmpz_poly_shift_right (c function)": [[31, "c.fmpz_poly_shift_right"]], "fmpz_poly_signature (c function)": [[31, "c.fmpz_poly_signature"]], "fmpz_poly_sqr (c function)": [[31, "c.fmpz_poly_sqr"]], "fmpz_poly_sqr_ks (c function)": [[31, "c.fmpz_poly_sqr_KS"]], "fmpz_poly_sqr_classical (c function)": [[31, "c.fmpz_poly_sqr_classical"]], "fmpz_poly_sqr_karatsuba (c function)": [[31, "c.fmpz_poly_sqr_karatsuba"]], "fmpz_poly_sqrlow (c function)": [[31, "c.fmpz_poly_sqrlow"]], "fmpz_poly_sqrlow_ks (c function)": [[31, "c.fmpz_poly_sqrlow_KS"]], "fmpz_poly_sqrlow_classical (c function)": [[31, "c.fmpz_poly_sqrlow_classical"]], "fmpz_poly_sqrlow_karatsuba_n (c function)": [[31, "c.fmpz_poly_sqrlow_karatsuba_n"]], "fmpz_poly_sqrt (c function)": [[31, "c.fmpz_poly_sqrt"]], "fmpz_poly_sqrt_ks (c function)": [[31, "c.fmpz_poly_sqrt_KS"]], "fmpz_poly_sqrt_classical (c function)": [[31, "c.fmpz_poly_sqrt_classical"]], "fmpz_poly_sqrt_divconquer (c function)": [[31, "c.fmpz_poly_sqrt_divconquer"]], "fmpz_poly_sqrt_series (c function)": [[31, "c.fmpz_poly_sqrt_series"]], "fmpz_poly_sqrtrem_classical (c function)": [[31, "c.fmpz_poly_sqrtrem_classical"]], "fmpz_poly_sqrtrem_divconquer (c function)": [[31, "c.fmpz_poly_sqrtrem_divconquer"]], "fmpz_poly_struct (c type)": [[31, "c.fmpz_poly_struct"]], "fmpz_poly_sub (c function)": [[31, "c.fmpz_poly_sub"]], "fmpz_poly_sub_series (c function)": [[31, "c.fmpz_poly_sub_series"]], "fmpz_poly_swap (c function)": [[31, "c.fmpz_poly_swap"]], "fmpz_poly_swinnerton_dyer (c function)": [[31, "c.fmpz_poly_swinnerton_dyer"]], "fmpz_poly_t (c type)": [[31, "c.fmpz_poly_t"]], "fmpz_poly_taylor_shift (c function)": [[31, "c.fmpz_poly_taylor_shift"]], "fmpz_poly_taylor_shift_divconquer (c function)": [[31, "c.fmpz_poly_taylor_shift_divconquer"]], "fmpz_poly_taylor_shift_horner (c function)": [[31, "c.fmpz_poly_taylor_shift_horner"]], "fmpz_poly_taylor_shift_multi_mod (c function)": [[31, "c.fmpz_poly_taylor_shift_multi_mod"]], "fmpz_poly_theta_qexp (c function)": [[31, "c.fmpz_poly_theta_qexp"]], "fmpz_poly_truncate (c function)": [[31, "c.fmpz_poly_truncate"]], "fmpz_poly_xgcd (c function)": [[31, "c.fmpz_poly_xgcd"]], "fmpz_poly_xgcd_modular (c function)": [[31, "c.fmpz_poly_xgcd_modular"]], "fmpz_poly_zero (c function)": [[31, "c.fmpz_poly_zero"]], "fmpz_poly_zero_coeffs (c function)": [[31, "c.fmpz_poly_zero_coeffs"]], "_fmpz_poly_factor_cubic (c function)": [[32, "c._fmpz_poly_factor_cubic"]], "_fmpz_poly_factor_quadratic (c function)": [[32, "c._fmpz_poly_factor_quadratic"]], "_fmpz_poly_factor_zassenhaus (c function)": [[32, "c._fmpz_poly_factor_zassenhaus"]], "fmpz_poly_factor (c function)": [[32, "c.fmpz_poly_factor"]], "fmpz_poly_factor_clear (c function)": [[32, "c.fmpz_poly_factor_clear"]], "fmpz_poly_factor_concat (c function)": [[32, "c.fmpz_poly_factor_concat"]], "fmpz_poly_factor_fit_length (c function)": [[32, "c.fmpz_poly_factor_fit_length"]], "fmpz_poly_factor_init (c function)": [[32, "c.fmpz_poly_factor_init"]], "fmpz_poly_factor_init2 (c function)": [[32, "c.fmpz_poly_factor_init2"]], "fmpz_poly_factor_insert (c function)": [[32, "c.fmpz_poly_factor_insert"]], "fmpz_poly_factor_print (c function)": [[32, "c.fmpz_poly_factor_print"]], "fmpz_poly_factor_realloc (c function)": [[32, "c.fmpz_poly_factor_realloc"]], "fmpz_poly_factor_set (c function)": [[32, "c.fmpz_poly_factor_set"]], "fmpz_poly_factor_squarefree (c function)": [[32, "c.fmpz_poly_factor_squarefree"]], "fmpz_poly_factor_struct (c type)": [[32, "c.fmpz_poly_factor_struct"]], "fmpz_poly_factor_t (c type)": [[32, "c.fmpz_poly_factor_t"]], "fmpz_poly_factor_zassenhaus (c function)": [[32, "c.fmpz_poly_factor_zassenhaus"]], "fmpz_poly_factor_zassenhaus_recombination (c function)": [[32, "c.fmpz_poly_factor_zassenhaus_recombination"]], "fmpz_poly_mat_add (c function)": [[33, "c.fmpz_poly_mat_add"]], "fmpz_poly_mat_clear (c function)": [[33, "c.fmpz_poly_mat_clear"]], "fmpz_poly_mat_det (c function)": [[33, "c.fmpz_poly_mat_det"]], "fmpz_poly_mat_det_fflu (c function)": [[33, "c.fmpz_poly_mat_det_fflu"]], "fmpz_poly_mat_det_interpolate (c function)": [[33, "c.fmpz_poly_mat_det_interpolate"]], "fmpz_poly_mat_entry (c function)": [[33, "c.fmpz_poly_mat_entry"]], "fmpz_poly_mat_equal (c function)": [[33, "c.fmpz_poly_mat_equal"]], "fmpz_poly_mat_evaluate_fmpz (c function)": [[33, "c.fmpz_poly_mat_evaluate_fmpz"]], "fmpz_poly_mat_fflu (c function)": [[33, "c.fmpz_poly_mat_fflu"]], "fmpz_poly_mat_find_pivot_any (c function)": [[33, "c.fmpz_poly_mat_find_pivot_any"]], "fmpz_poly_mat_find_pivot_partial (c function)": [[33, "c.fmpz_poly_mat_find_pivot_partial"]], "fmpz_poly_mat_init (c function)": [[33, "c.fmpz_poly_mat_init"]], "fmpz_poly_mat_init_set (c function)": [[33, "c.fmpz_poly_mat_init_set"]], "fmpz_poly_mat_inv (c function)": [[33, "c.fmpz_poly_mat_inv"]], "fmpz_poly_mat_is_empty (c function)": [[33, "c.fmpz_poly_mat_is_empty"]], "fmpz_poly_mat_is_one (c function)": [[33, "c.fmpz_poly_mat_is_one"]], "fmpz_poly_mat_is_square (c function)": [[33, "c.fmpz_poly_mat_is_square"]], "fmpz_poly_mat_is_zero (c function)": [[33, "c.fmpz_poly_mat_is_zero"]], "fmpz_poly_mat_max_bits (c function)": [[33, "c.fmpz_poly_mat_max_bits"]], "fmpz_poly_mat_max_length (c function)": [[33, "c.fmpz_poly_mat_max_length"]], "fmpz_poly_mat_mul (c function)": [[33, "c.fmpz_poly_mat_mul"]], "fmpz_poly_mat_mul_ks (c function)": [[33, "c.fmpz_poly_mat_mul_KS"]], "fmpz_poly_mat_mul_classical (c function)": [[33, "c.fmpz_poly_mat_mul_classical"]], "fmpz_poly_mat_mullow (c function)": [[33, "c.fmpz_poly_mat_mullow"]], "fmpz_poly_mat_ncols (c function)": [[33, "c.fmpz_poly_mat_ncols"]], "fmpz_poly_mat_neg (c function)": [[33, "c.fmpz_poly_mat_neg"]], "fmpz_poly_mat_nrows (c function)": [[33, "c.fmpz_poly_mat_nrows"]], "fmpz_poly_mat_nullspace (c function)": [[33, "c.fmpz_poly_mat_nullspace"]], "fmpz_poly_mat_one (c function)": [[33, "c.fmpz_poly_mat_one"]], "fmpz_poly_mat_pow (c function)": [[33, "c.fmpz_poly_mat_pow"]], "fmpz_poly_mat_pow_trunc (c function)": [[33, "c.fmpz_poly_mat_pow_trunc"]], "fmpz_poly_mat_print (c function)": [[33, "c.fmpz_poly_mat_print"]], "fmpz_poly_mat_prod (c function)": [[33, "c.fmpz_poly_mat_prod"]], "fmpz_poly_mat_randtest (c function)": [[33, "c.fmpz_poly_mat_randtest"]], "fmpz_poly_mat_randtest_sparse (c function)": [[33, "c.fmpz_poly_mat_randtest_sparse"]], "fmpz_poly_mat_randtest_unsigned (c function)": [[33, "c.fmpz_poly_mat_randtest_unsigned"]], "fmpz_poly_mat_rank (c function)": [[33, "c.fmpz_poly_mat_rank"]], "fmpz_poly_mat_rref (c function)": [[33, "c.fmpz_poly_mat_rref"]], "fmpz_poly_mat_scalar_mul_fmpz (c function)": [[33, "c.fmpz_poly_mat_scalar_mul_fmpz"]], "fmpz_poly_mat_scalar_mul_fmpz_poly (c function)": [[33, "c.fmpz_poly_mat_scalar_mul_fmpz_poly"]], "fmpz_poly_mat_set (c function)": [[33, "c.fmpz_poly_mat_set"]], "fmpz_poly_mat_solve (c function)": [[33, "c.fmpz_poly_mat_solve"]], "fmpz_poly_mat_solve_fflu (c function)": [[33, "c.fmpz_poly_mat_solve_fflu"]], "fmpz_poly_mat_solve_fflu_precomp (c function)": [[33, "c.fmpz_poly_mat_solve_fflu_precomp"]], "fmpz_poly_mat_sqr (c function)": [[33, "c.fmpz_poly_mat_sqr"]], "fmpz_poly_mat_sqr_ks (c function)": [[33, "c.fmpz_poly_mat_sqr_KS"]], "fmpz_poly_mat_sqr_classical (c function)": [[33, "c.fmpz_poly_mat_sqr_classical"]], "fmpz_poly_mat_sqrlow (c function)": [[33, "c.fmpz_poly_mat_sqrlow"]], "fmpz_poly_mat_struct (c type)": [[33, "c.fmpz_poly_mat_struct"]], "fmpz_poly_mat_sub (c function)": [[33, "c.fmpz_poly_mat_sub"]], "fmpz_poly_mat_swap (c function)": [[33, "c.fmpz_poly_mat_swap"]], "fmpz_poly_mat_swap_entrywise (c function)": [[33, "c.fmpz_poly_mat_swap_entrywise"]], "fmpz_poly_mat_t (c type)": [[33, "c.fmpz_poly_mat_t"]], "fmpz_poly_mat_trace (c function)": [[33, "c.fmpz_poly_mat_trace"]], "fmpz_poly_mat_transpose (c function)": [[33, "c.fmpz_poly_mat_transpose"]], "fmpz_poly_mat_zero (c function)": [[33, "c.fmpz_poly_mat_zero"]], "fmpz_poly_q_add (c function)": [[34, "c.fmpz_poly_q_add"]], "fmpz_poly_q_addmul (c function)": [[34, "c.fmpz_poly_q_addmul"]], "fmpz_poly_q_canonicalise (c function)": [[34, "c.fmpz_poly_q_canonicalise"]], "fmpz_poly_q_clear (c function)": [[34, "c.fmpz_poly_q_clear"]], "fmpz_poly_q_denref (c function)": [[34, "c.fmpz_poly_q_denref"]], "fmpz_poly_q_derivative (c function)": [[34, "c.fmpz_poly_q_derivative"]], "fmpz_poly_q_div (c function)": [[34, "c.fmpz_poly_q_div"]], "fmpz_poly_q_equal (c function)": [[34, "c.fmpz_poly_q_equal"]], "fmpz_poly_q_evaluate (c function)": [[34, "c.fmpz_poly_q_evaluate"]], "fmpz_poly_q_get_str (c function)": [[34, "c.fmpz_poly_q_get_str"]], "fmpz_poly_q_get_str_pretty (c function)": [[34, "c.fmpz_poly_q_get_str_pretty"]], "fmpz_poly_q_init (c function)": [[34, "c.fmpz_poly_q_init"]], "fmpz_poly_q_inv (c function)": [[34, "c.fmpz_poly_q_inv"]], "fmpz_poly_q_is_canonical (c function)": [[34, "c.fmpz_poly_q_is_canonical"]], "fmpz_poly_q_is_one (c function)": [[34, "c.fmpz_poly_q_is_one"]], "fmpz_poly_q_is_zero (c function)": [[34, "c.fmpz_poly_q_is_zero"]], "fmpz_poly_q_mul (c function)": [[34, "c.fmpz_poly_q_mul"]], "fmpz_poly_q_neg (c function)": [[34, "c.fmpz_poly_q_neg"]], "fmpz_poly_q_numref (c function)": [[34, "c.fmpz_poly_q_numref"]], "fmpz_poly_q_one (c function)": [[34, "c.fmpz_poly_q_one"]], "fmpz_poly_q_pow (c function)": [[34, "c.fmpz_poly_q_pow"]], "fmpz_poly_q_print (c function)": [[34, "c.fmpz_poly_q_print"]], "fmpz_poly_q_print_pretty (c function)": [[34, "c.fmpz_poly_q_print_pretty"]], "fmpz_poly_q_randtest (c function)": [[34, "c.fmpz_poly_q_randtest"]], "fmpz_poly_q_randtest_not_zero (c function)": [[34, "c.fmpz_poly_q_randtest_not_zero"]], "fmpz_poly_q_scalar_div_mpq (c function)": [[34, "c.fmpz_poly_q_scalar_div_mpq"]], "fmpz_poly_q_scalar_div_mpz (c function)": [[34, "c.fmpz_poly_q_scalar_div_mpz"]], "fmpz_poly_q_scalar_div_si (c function)": [[34, "c.fmpz_poly_q_scalar_div_si"]], "fmpz_poly_q_scalar_mul_mpq (c function)": [[34, "c.fmpz_poly_q_scalar_mul_mpq"]], "fmpz_poly_q_scalar_mul_mpz (c function)": [[34, "c.fmpz_poly_q_scalar_mul_mpz"]], "fmpz_poly_q_scalar_mul_si (c function)": [[34, "c.fmpz_poly_q_scalar_mul_si"]], "fmpz_poly_q_set (c function)": [[34, "c.fmpz_poly_q_set"]], "fmpz_poly_q_set_si (c function)": [[34, "c.fmpz_poly_q_set_si"]], "fmpz_poly_q_set_str (c function)": [[34, "c.fmpz_poly_q_set_str"]], "fmpz_poly_q_struct (c type)": [[34, "c.fmpz_poly_q_struct"]], "fmpz_poly_q_sub (c function)": [[34, "c.fmpz_poly_q_sub"]], "fmpz_poly_q_submul (c function)": [[34, "c.fmpz_poly_q_submul"]], "fmpz_poly_q_swap (c function)": [[34, "c.fmpz_poly_q_swap"]], "fmpz_poly_q_t (c type)": [[34, "c.fmpz_poly_q_t"]], "fmpz_poly_q_zero (c function)": [[34, "c.fmpz_poly_q_zero"]], "_fmpz_vec_add (c function)": [[35, "c._fmpz_vec_add"]], "_fmpz_vec_clear (c function)": [[35, "c._fmpz_vec_clear"]], "_fmpz_vec_content (c function)": [[35, "c._fmpz_vec_content"]], "_fmpz_vec_content_chained (c function)": [[35, "c._fmpz_vec_content_chained"]], "_fmpz_vec_dot_ptr (c function)": [[35, "c._fmpz_vec_dot_ptr"]], "_fmpz_vec_equal (c function)": [[35, "c._fmpz_vec_equal"]], "_fmpz_vec_fprint (c function)": [[35, "c._fmpz_vec_fprint"]], "_fmpz_vec_fread (c function)": [[35, "c._fmpz_vec_fread"]], "_fmpz_vec_get_d_vec_2exp (c function)": [[35, "c._fmpz_vec_get_d_vec_2exp"]], "_fmpz_vec_get_fft (c function)": [[35, "c._fmpz_vec_get_fft"]], "_fmpz_vec_get_mpf_vec (c function)": [[35, "c._fmpz_vec_get_mpf_vec"]], "_fmpz_vec_get_nmod_vec (c function)": [[35, "c._fmpz_vec_get_nmod_vec"]], "_fmpz_vec_height (c function)": [[35, "c._fmpz_vec_height"]], "_fmpz_vec_height_index (c function)": [[35, "c._fmpz_vec_height_index"]], "_fmpz_vec_init (c function)": [[35, "c._fmpz_vec_init"]], "_fmpz_vec_is_zero (c function)": [[35, "c._fmpz_vec_is_zero"]], "_fmpz_vec_lcm (c function)": [[35, "c._fmpz_vec_lcm"]], "_fmpz_vec_max (c function)": [[35, "c._fmpz_vec_max"]], "_fmpz_vec_max_bits (c function)": [[35, "c._fmpz_vec_max_bits"]], "_fmpz_vec_max_bits_ref (c function)": [[35, "c._fmpz_vec_max_bits_ref"]], "_fmpz_vec_max_inplace (c function)": [[35, "c._fmpz_vec_max_inplace"]], "_fmpz_vec_max_limbs (c function)": [[35, "c._fmpz_vec_max_limbs"]], "_fmpz_vec_neg (c function)": [[35, "c._fmpz_vec_neg"]], "_fmpz_vec_print (c function)": [[35, "c._fmpz_vec_print"]], "_fmpz_vec_prod (c function)": [[35, "c._fmpz_vec_prod"]], "_fmpz_vec_randtest (c function)": [[35, "c._fmpz_vec_randtest"]], "_fmpz_vec_randtest_unsigned (c function)": [[35, "c._fmpz_vec_randtest_unsigned"]], "_fmpz_vec_read (c function)": [[35, "c._fmpz_vec_read"]], "_fmpz_vec_scalar_abs (c function)": [[35, "c._fmpz_vec_scalar_abs"]], "_fmpz_vec_scalar_addmul_fmpz (c function)": [[35, "c._fmpz_vec_scalar_addmul_fmpz"]], "_fmpz_vec_scalar_addmul_si (c function)": [[35, "c._fmpz_vec_scalar_addmul_si"]], "_fmpz_vec_scalar_addmul_si_2exp (c function)": [[35, "c._fmpz_vec_scalar_addmul_si_2exp"]], "_fmpz_vec_scalar_addmul_ui (c function)": [[35, "c._fmpz_vec_scalar_addmul_ui"]], "_fmpz_vec_scalar_divexact_fmpz (c function)": [[35, "c._fmpz_vec_scalar_divexact_fmpz"]], "_fmpz_vec_scalar_divexact_si (c function)": [[35, "c._fmpz_vec_scalar_divexact_si"]], "_fmpz_vec_scalar_divexact_ui (c function)": [[35, "c._fmpz_vec_scalar_divexact_ui"]], "_fmpz_vec_scalar_fdiv_q_2exp (c function)": [[35, "c._fmpz_vec_scalar_fdiv_q_2exp"]], "_fmpz_vec_scalar_fdiv_q_fmpz (c function)": [[35, "c._fmpz_vec_scalar_fdiv_q_fmpz"]], "_fmpz_vec_scalar_fdiv_q_si (c function)": [[35, "c._fmpz_vec_scalar_fdiv_q_si"]], "_fmpz_vec_scalar_fdiv_q_ui (c function)": [[35, "c._fmpz_vec_scalar_fdiv_q_ui"]], "_fmpz_vec_scalar_fdiv_r_2exp (c function)": [[35, "c._fmpz_vec_scalar_fdiv_r_2exp"]], "_fmpz_vec_scalar_mod_fmpz (c function)": [[35, "c._fmpz_vec_scalar_mod_fmpz"]], "_fmpz_vec_scalar_mul_2exp (c function)": [[35, "c._fmpz_vec_scalar_mul_2exp"]], "_fmpz_vec_scalar_mul_fmpz (c function)": [[35, "c._fmpz_vec_scalar_mul_fmpz"]], "_fmpz_vec_scalar_mul_si (c function)": [[35, "c._fmpz_vec_scalar_mul_si"]], "_fmpz_vec_scalar_mul_ui (c function)": [[35, "c._fmpz_vec_scalar_mul_ui"]], "_fmpz_vec_scalar_smod_fmpz (c function)": [[35, "c._fmpz_vec_scalar_smod_fmpz"]], "_fmpz_vec_scalar_submul_fmpz (c function)": [[35, "c._fmpz_vec_scalar_submul_fmpz"]], "_fmpz_vec_scalar_submul_si (c function)": [[35, "c._fmpz_vec_scalar_submul_si"]], "_fmpz_vec_scalar_submul_si_2exp (c function)": [[35, "c._fmpz_vec_scalar_submul_si_2exp"]], "_fmpz_vec_scalar_tdiv_q_2exp (c function)": [[35, "c._fmpz_vec_scalar_tdiv_q_2exp"]], "_fmpz_vec_scalar_tdiv_q_fmpz (c function)": [[35, "c._fmpz_vec_scalar_tdiv_q_fmpz"]], "_fmpz_vec_scalar_tdiv_q_si (c function)": [[35, "c._fmpz_vec_scalar_tdiv_q_si"]], "_fmpz_vec_scalar_tdiv_q_ui (c function)": [[35, "c._fmpz_vec_scalar_tdiv_q_ui"]], "_fmpz_vec_set (c function)": [[35, "c._fmpz_vec_set"]], "_fmpz_vec_set_fft (c function)": [[35, "c._fmpz_vec_set_fft"]], "_fmpz_vec_set_nmod_vec (c function)": [[35, "c._fmpz_vec_set_nmod_vec"]], "_fmpz_vec_sort (c function)": [[35, "c._fmpz_vec_sort"]], "_fmpz_vec_sub (c function)": [[35, "c._fmpz_vec_sub"]], "_fmpz_vec_sum (c function)": [[35, "c._fmpz_vec_sum"]], "_fmpz_vec_sum_max_bits (c function)": [[35, "c._fmpz_vec_sum_max_bits"]], "_fmpz_vec_swap (c function)": [[35, "c._fmpz_vec_swap"]], "_fmpz_vec_zero (c function)": [[35, "c._fmpz_vec_zero"]], "_fq_ctx_init_conway (c function)": [[36, "c._fq_ctx_init_conway"]], "_fq_dense_reduce (c function)": [[36, "c._fq_dense_reduce"]], "_fq_frobenius (c function)": [[36, "c._fq_frobenius"]], "_fq_inv (c function)": [[36, "c._fq_inv"]], "_fq_norm (c function)": [[36, "c._fq_norm"]], "_fq_pow (c function)": [[36, "c._fq_pow"]], "_fq_reduce (c function)": [[36, "c._fq_reduce"]], "_fq_sparse_reduce (c function)": [[36, "c._fq_sparse_reduce"]], "_fq_trace (c function)": [[36, "c._fq_trace"]], "fq_add (c function)": [[36, "c.fq_add"]], "fq_bit_pack (c function)": [[36, "c.fq_bit_pack"]], "fq_bit_unpack (c function)": [[36, "c.fq_bit_unpack"]], "fq_clear (c function)": [[36, "c.fq_clear"]], "fq_ctx_clear (c function)": [[36, "c.fq_ctx_clear"]], "fq_ctx_degree (c function)": [[36, "c.fq_ctx_degree"]], "fq_ctx_fprint (c function)": [[36, "c.fq_ctx_fprint"]], "fq_ctx_init (c function)": [[36, "c.fq_ctx_init"]], "fq_ctx_init_conway (c function)": [[36, "c.fq_ctx_init_conway"]], "fq_ctx_init_modulus (c function)": [[36, "c.fq_ctx_init_modulus"]], "fq_ctx_modulus (c function)": [[36, "c.fq_ctx_modulus"]], "fq_ctx_order (c function)": [[36, "c.fq_ctx_order"]], "fq_ctx_prime (c function)": [[36, "c.fq_ctx_prime"]], "fq_ctx_print (c function)": [[36, "c.fq_ctx_print"]], "fq_ctx_randtest (c function)": [[36, "c.fq_ctx_randtest"]], "fq_ctx_randtest_reducible (c function)": [[36, "c.fq_ctx_randtest_reducible"]], "fq_ctx_struct (c type)": [[36, "c.fq_ctx_struct"]], "fq_ctx_t (c type)": [[36, "c.fq_ctx_t"]], "fq_div (c function)": [[36, "c.fq_div"]], "fq_equal (c function)": [[36, "c.fq_equal"]], "fq_fprint (c function)": [[36, "c.fq_fprint"]], "fq_fprint_pretty (c function)": [[36, "c.fq_fprint_pretty"]], "fq_frobenius (c function)": [[36, "c.fq_frobenius"]], "fq_gcdinv (c function)": [[36, "c.fq_gcdinv"]], "fq_gen (c function)": [[36, "c.fq_gen"]], "fq_get_fmpz (c function)": [[36, "c.fq_get_fmpz"]], "fq_get_fmpz_mod_mat (c function)": [[36, "c.fq_get_fmpz_mod_mat"]], "fq_get_fmpz_mod_poly (c function)": [[36, "c.fq_get_fmpz_mod_poly"]], "fq_get_fmpz_poly (c function)": [[36, "c.fq_get_fmpz_poly"]], "fq_get_str (c function)": [[36, "c.fq_get_str"]], "fq_get_str_pretty (c function)": [[36, "c.fq_get_str_pretty"]], "fq_init (c function)": [[36, "c.fq_init"]], "fq_init2 (c function)": [[36, "c.fq_init2"]], "fq_inv (c function)": [[36, "c.fq_inv"]], "fq_is_invertible (c function)": [[36, "c.fq_is_invertible"]], "fq_is_invertible_f (c function)": [[36, "c.fq_is_invertible_f"]], "fq_is_one (c function)": [[36, "c.fq_is_one"]], "fq_is_primitive (c function)": [[36, "c.fq_is_primitive"]], "fq_is_square (c function)": [[36, "c.fq_is_square"]], "fq_is_zero (c function)": [[36, "c.fq_is_zero"]], "fq_mul (c function)": [[36, "c.fq_mul"]], "fq_mul_fmpz (c function)": [[36, "c.fq_mul_fmpz"]], "fq_mul_si (c function)": [[36, "c.fq_mul_si"]], "fq_mul_ui (c function)": [[36, "c.fq_mul_ui"]], "fq_multiplicative_order (c function)": [[36, "c.fq_multiplicative_order"]], "fq_neg (c function)": [[36, "c.fq_neg"]], "fq_norm (c function)": [[36, "c.fq_norm"]], "fq_one (c function)": [[36, "c.fq_one"]], "fq_pow (c function)": [[36, "c.fq_pow"]], "fq_pow_ui (c function)": [[36, "c.fq_pow_ui"]], "fq_print (c function)": [[36, "c.fq_print"]], "fq_print_pretty (c function)": [[36, "c.fq_print_pretty"]], "fq_pth_root (c function)": [[36, "c.fq_pth_root"]], "fq_rand (c function)": [[36, "c.fq_rand"]], "fq_rand_not_zero (c function)": [[36, "c.fq_rand_not_zero"]], "fq_randtest (c function)": [[36, "c.fq_randtest"]], "fq_randtest_dense (c function)": [[36, "c.fq_randtest_dense"]], "fq_randtest_not_zero (c function)": [[36, "c.fq_randtest_not_zero"]], "fq_reduce (c function)": [[36, "c.fq_reduce"]], "fq_set (c function)": [[36, "c.fq_set"]], "fq_set_fmpz (c function)": [[36, "c.fq_set_fmpz"]], "fq_set_fmpz_mod_mat (c function)": [[36, "c.fq_set_fmpz_mod_mat"]], "fq_set_fmpz_mod_poly (c function)": [[36, "c.fq_set_fmpz_mod_poly"]], "fq_set_fmpz_poly (c function)": [[36, "c.fq_set_fmpz_poly"]], "fq_set_si (c function)": [[36, "c.fq_set_si"]], "fq_set_ui (c function)": [[36, "c.fq_set_ui"]], "fq_sqr (c function)": [[36, "c.fq_sqr"]], "fq_sqrt (c function)": [[36, "c.fq_sqrt"]], "fq_struct (c type)": [[36, "c.fq_struct"]], "fq_sub (c function)": [[36, "c.fq_sub"]], "fq_sub_one (c function)": [[36, "c.fq_sub_one"]], "fq_swap (c function)": [[36, "c.fq_swap"]], "fq_t (c type)": [[36, "c.fq_t"]], "fq_trace (c function)": [[36, "c.fq_trace"]], "fq_zero (c function)": [[36, "c.fq_zero"]], "fq_default_add (c function)": [[37, "c.fq_default_add"]], "fq_default_clear (c function)": [[37, "c.fq_default_clear"]], "fq_default_ctx_clear (c function)": [[37, "c.fq_default_ctx_clear"]], "fq_default_ctx_degree (c function)": [[37, "c.fq_default_ctx_degree"]], "fq_default_ctx_fprint (c function)": [[37, "c.fq_default_ctx_fprint"]], "fq_default_ctx_init (c function)": [[37, "c.fq_default_ctx_init"]], "fq_default_ctx_init_modulus (c function)": [[37, "c.fq_default_ctx_init_modulus"]], "fq_default_ctx_init_modulus_nmod (c function)": [[37, "c.fq_default_ctx_init_modulus_nmod"]], "fq_default_ctx_init_modulus_nmod_type (c function)": [[37, "c.fq_default_ctx_init_modulus_nmod_type"]], "fq_default_ctx_init_modulus_type (c function)": [[37, "c.fq_default_ctx_init_modulus_type"]], "fq_default_ctx_init_type (c function)": [[37, "c.fq_default_ctx_init_type"]], "fq_default_ctx_modulus (c function)": [[37, "c.fq_default_ctx_modulus"]], "fq_default_ctx_order (c function)": [[37, "c.fq_default_ctx_order"]], "fq_default_ctx_prime (c function)": [[37, "c.fq_default_ctx_prime"]], "fq_default_ctx_print (c function)": [[37, "c.fq_default_ctx_print"]], "fq_default_ctx_randtest (c function)": [[37, "c.fq_default_ctx_randtest"]], "fq_default_ctx_type (c function)": [[37, "c.fq_default_ctx_type"]], "fq_default_default_ctx_t (c type)": [[37, "c.fq_default_default_ctx_t"]], "fq_default_default_t (c type)": [[37, "c.fq_default_default_t"]], "fq_default_div (c function)": [[37, "c.fq_default_div"]], "fq_default_equal (c function)": [[37, "c.fq_default_equal"]], "fq_default_fprint (c function)": [[37, "c.fq_default_fprint"]], "fq_default_fprint_pretty (c function)": [[37, "c.fq_default_fprint_pretty"]], "fq_default_frobenius (c function)": [[37, "c.fq_default_frobenius"]], "fq_default_gen (c function)": [[37, "c.fq_default_gen"]], "fq_default_get_coeff_fmpz (c function)": [[37, "c.fq_default_get_coeff_fmpz"]], "fq_default_get_fmpz (c function)": [[37, "c.fq_default_get_fmpz"]], "fq_default_get_fmpz_mod_poly (c function)": [[37, "c.fq_default_get_fmpz_mod_poly"]], "fq_default_get_fmpz_poly (c function)": [[37, "c.fq_default_get_fmpz_poly"]], "fq_default_get_nmod_poly (c function)": [[37, "c.fq_default_get_nmod_poly"]], "fq_default_get_str (c function)": [[37, "c.fq_default_get_str"]], "fq_default_get_str_pretty (c function)": [[37, "c.fq_default_get_str_pretty"]], "fq_default_init (c function)": [[37, "c.fq_default_init"]], "fq_default_init2 (c function)": [[37, "c.fq_default_init2"]], "fq_default_inv (c function)": [[37, "c.fq_default_inv"]], "fq_default_is_invertible (c function)": [[37, "c.fq_default_is_invertible"]], "fq_default_is_one (c function)": [[37, "c.fq_default_is_one"]], "fq_default_is_square (c function)": [[37, "c.fq_default_is_square"]], "fq_default_is_zero (c function)": [[37, "c.fq_default_is_zero"]], "fq_default_mul (c function)": [[37, "c.fq_default_mul"]], "fq_default_mul_fmpz (c function)": [[37, "c.fq_default_mul_fmpz"]], "fq_default_mul_si (c function)": [[37, "c.fq_default_mul_si"]], "fq_default_mul_ui (c function)": [[37, "c.fq_default_mul_ui"]], "fq_default_neg (c function)": [[37, "c.fq_default_neg"]], "fq_default_norm (c function)": [[37, "c.fq_default_norm"]], "fq_default_one (c function)": [[37, "c.fq_default_one"]], "fq_default_pow (c function)": [[37, "c.fq_default_pow"]], "fq_default_pow_ui (c function)": [[37, "c.fq_default_pow_ui"]], "fq_default_print (c function)": [[37, "c.fq_default_print"]], "fq_default_print_pretty (c function)": [[37, "c.fq_default_print_pretty"]], "fq_default_pth_root (c function)": [[37, "c.fq_default_pth_root"]], "fq_default_rand (c function)": [[37, "c.fq_default_rand"]], "fq_default_rand_not_zero (c function)": [[37, "c.fq_default_rand_not_zero"]], "fq_default_randtest (c function)": [[37, "c.fq_default_randtest"]], "fq_default_randtest_not_zero (c function)": [[37, "c.fq_default_randtest_not_zero"]], "fq_default_set (c function)": [[37, "c.fq_default_set"]], "fq_default_set_fmpz (c function)": [[37, "c.fq_default_set_fmpz"]], "fq_default_set_fmpz_mod_poly (c function)": [[37, "c.fq_default_set_fmpz_mod_poly"]], "fq_default_set_fmpz_poly (c function)": [[37, "c.fq_default_set_fmpz_poly"]], "fq_default_set_nmod_poly (c function)": [[37, "c.fq_default_set_nmod_poly"]], "fq_default_set_si (c function)": [[37, "c.fq_default_set_si"]], "fq_default_set_ui (c function)": [[37, "c.fq_default_set_ui"]], "fq_default_sqr (c function)": [[37, "c.fq_default_sqr"]], "fq_default_sqrt (c function)": [[37, "c.fq_default_sqrt"]], "fq_default_sub (c function)": [[37, "c.fq_default_sub"]], "fq_default_sub_one (c function)": [[37, "c.fq_default_sub_one"]], "fq_default_swap (c function)": [[37, "c.fq_default_swap"]], "fq_default_trace (c function)": [[37, "c.fq_default_trace"]], "fq_default_zero (c function)": [[37, "c.fq_default_zero"]], "fq_default_mat_add (c function)": [[38, "c.fq_default_mat_add"]], "fq_default_mat_can_solve (c function)": [[38, "c.fq_default_mat_can_solve"]], "fq_default_mat_charpoly (c function)": [[38, "c.fq_default_mat_charpoly"]], "fq_default_mat_clear (c function)": [[38, "c.fq_default_mat_clear"]], "fq_default_mat_concat_horizontal (c function)": [[38, "c.fq_default_mat_concat_horizontal"]], "fq_default_mat_concat_vertical (c function)": [[38, "c.fq_default_mat_concat_vertical"]], "fq_default_mat_entry (c function)": [[38, "c.fq_default_mat_entry"]], "fq_default_mat_entry_set (c function)": [[38, "c.fq_default_mat_entry_set"]], "fq_default_mat_entry_set_fmpz (c function)": [[38, "c.fq_default_mat_entry_set_fmpz"]], "fq_default_mat_equal (c function)": [[38, "c.fq_default_mat_equal"]], "fq_default_mat_fprint (c function)": [[38, "c.fq_default_mat_fprint"]], "fq_default_mat_fprint_pretty (c function)": [[38, "c.fq_default_mat_fprint_pretty"]], "fq_default_mat_init (c function)": [[38, "c.fq_default_mat_init"]], "fq_default_mat_init_set (c function)": [[38, "c.fq_default_mat_init_set"]], "fq_default_mat_inv (c function)": [[38, "c.fq_default_mat_inv"]], "fq_default_mat_invert_cols (c function)": [[38, "c.fq_default_mat_invert_cols"]], "fq_default_mat_invert_rows (c function)": [[38, "c.fq_default_mat_invert_rows"]], "fq_default_mat_is_empty (c function)": [[38, "c.fq_default_mat_is_empty"]], "fq_default_mat_is_one (c function)": [[38, "c.fq_default_mat_is_one"]], "fq_default_mat_is_square (c function)": [[38, "c.fq_default_mat_is_square"]], "fq_default_mat_is_zero (c function)": [[38, "c.fq_default_mat_is_zero"]], "fq_default_mat_lu (c function)": [[38, "c.fq_default_mat_lu"]], "fq_default_mat_minpoly (c function)": [[38, "c.fq_default_mat_minpoly"]], "fq_default_mat_mul (c function)": [[38, "c.fq_default_mat_mul"]], "fq_default_mat_ncols (c function)": [[38, "c.fq_default_mat_ncols"]], "fq_default_mat_neg (c function)": [[38, "c.fq_default_mat_neg"]], "fq_default_mat_nrows (c function)": [[38, "c.fq_default_mat_nrows"]], "fq_default_mat_one (c function)": [[38, "c.fq_default_mat_one"]], "fq_default_mat_print (c function)": [[38, "c.fq_default_mat_print"]], "fq_default_mat_print_pretty (c function)": [[38, "c.fq_default_mat_print_pretty"]], "fq_default_mat_randops (c function)": [[38, "c.fq_default_mat_randops"]], "fq_default_mat_randrank (c function)": [[38, "c.fq_default_mat_randrank"]], "fq_default_mat_randtest (c function)": [[38, "c.fq_default_mat_randtest"]], "fq_default_mat_randtril (c function)": [[38, "c.fq_default_mat_randtril"]], "fq_default_mat_randtriu (c function)": [[38, "c.fq_default_mat_randtriu"]], "fq_default_mat_rref (c function)": [[38, "c.fq_default_mat_rref"]], "fq_default_mat_set (c function)": [[38, "c.fq_default_mat_set"]], "fq_default_mat_set_fmpz_mat (c function)": [[38, "c.fq_default_mat_set_fmpz_mat"]], "fq_default_mat_set_fmpz_mod_mat (c function)": [[38, "c.fq_default_mat_set_fmpz_mod_mat"]], "fq_default_mat_set_nmod_mat (c function)": [[38, "c.fq_default_mat_set_nmod_mat"]], "fq_default_mat_similarity (c function)": [[38, "c.fq_default_mat_similarity"]], "fq_default_mat_solve (c function)": [[38, "c.fq_default_mat_solve"]], "fq_default_mat_solve_tril (c function)": [[38, "c.fq_default_mat_solve_tril"]], "fq_default_mat_solve_triu (c function)": [[38, "c.fq_default_mat_solve_triu"]], "fq_default_mat_sub (c function)": [[38, "c.fq_default_mat_sub"]], "fq_default_mat_submul (c function)": [[38, "c.fq_default_mat_submul"]], "fq_default_mat_swap (c function)": [[38, "c.fq_default_mat_swap"]], "fq_default_mat_swap_cols (c function)": [[38, "c.fq_default_mat_swap_cols"]], "fq_default_mat_swap_rows (c function)": [[38, "c.fq_default_mat_swap_rows"]], "fq_default_mat_t (c type)": [[38, "c.fq_default_mat_t"]], "fq_default_mat_window_clear (c function)": [[38, "c.fq_default_mat_window_clear"]], "fq_default_mat_window_init (c function)": [[38, "c.fq_default_mat_window_init"]], "fq_default_mat_zero (c function)": [[38, "c.fq_default_mat_zero"]], "_fq_default_poly_set_length (c function)": [[39, "c._fq_default_poly_set_length"]], "fq_default_poly_add (c function)": [[39, "c.fq_default_poly_add"]], "fq_default_poly_add_series (c function)": [[39, "c.fq_default_poly_add_series"]], "fq_default_poly_add_si (c function)": [[39, "c.fq_default_poly_add_si"]], "fq_default_poly_clear (c function)": [[39, "c.fq_default_poly_clear"]], "fq_default_poly_compose (c function)": [[39, "c.fq_default_poly_compose"]], "fq_default_poly_compose_mod (c function)": [[39, "c.fq_default_poly_compose_mod"]], "fq_default_poly_deflate (c function)": [[39, "c.fq_default_poly_deflate"]], "fq_default_poly_deflation (c function)": [[39, "c.fq_default_poly_deflation"]], "fq_default_poly_degree (c function)": [[39, "c.fq_default_poly_degree"]], "fq_default_poly_derivative (c function)": [[39, "c.fq_default_poly_derivative"]], "fq_default_poly_div_series (c function)": [[39, "c.fq_default_poly_div_series"]], "fq_default_poly_divides (c function)": [[39, "c.fq_default_poly_divides"]], "fq_default_poly_divrem (c function)": [[39, "c.fq_default_poly_divrem"]], "fq_default_poly_equal (c function)": [[39, "c.fq_default_poly_equal"]], "fq_default_poly_equal_fq_default (c function)": [[39, "c.fq_default_poly_equal_fq_default"]], "fq_default_poly_equal_trunc (c function)": [[39, "c.fq_default_poly_equal_trunc"]], "fq_default_poly_evaluate_fq_default (c function)": [[39, "c.fq_default_poly_evaluate_fq_default"]], "fq_default_poly_fit_length (c function)": [[39, "c.fq_default_poly_fit_length"]], "fq_default_poly_fprint (c function)": [[39, "c.fq_default_poly_fprint"]], "fq_default_poly_fprint_pretty (c function)": [[39, "c.fq_default_poly_fprint_pretty"]], "fq_default_poly_gcd (c function)": [[39, "c.fq_default_poly_gcd"]], "fq_default_poly_gen (c function)": [[39, "c.fq_default_poly_gen"]], "fq_default_poly_get_coeff (c function)": [[39, "c.fq_default_poly_get_coeff"]], "fq_default_poly_get_str (c function)": [[39, "c.fq_default_poly_get_str"]], "fq_default_poly_get_str_pretty (c function)": [[39, "c.fq_default_poly_get_str_pretty"]], "fq_default_poly_hamming_weight (c function)": [[39, "c.fq_default_poly_hamming_weight"]], "fq_default_poly_inflate (c function)": [[39, "c.fq_default_poly_inflate"]], "fq_default_poly_init (c function)": [[39, "c.fq_default_poly_init"]], "fq_default_poly_init2 (c function)": [[39, "c.fq_default_poly_init2"]], "fq_default_poly_inv_series (c function)": [[39, "c.fq_default_poly_inv_series"]], "fq_default_poly_invsqrt_series (c function)": [[39, "c.fq_default_poly_invsqrt_series"]], "fq_default_poly_is_gen (c function)": [[39, "c.fq_default_poly_is_gen"]], "fq_default_poly_is_one (c function)": [[39, "c.fq_default_poly_is_one"]], "fq_default_poly_is_unit (c function)": [[39, "c.fq_default_poly_is_unit"]], "fq_default_poly_is_zero (c function)": [[39, "c.fq_default_poly_is_zero"]], "fq_default_poly_length (c function)": [[39, "c.fq_default_poly_length"]], "fq_default_poly_make_monic (c function)": [[39, "c.fq_default_poly_make_monic"]], "fq_default_poly_mul (c function)": [[39, "c.fq_default_poly_mul"]], "fq_default_poly_mulhigh (c function)": [[39, "c.fq_default_poly_mulhigh"]], "fq_default_poly_mullow (c function)": [[39, "c.fq_default_poly_mullow"]], "fq_default_poly_mulmod (c function)": [[39, "c.fq_default_poly_mulmod"]], "fq_default_poly_neg (c function)": [[39, "c.fq_default_poly_neg"]], "fq_default_poly_one (c function)": [[39, "c.fq_default_poly_one"]], "fq_default_poly_pow (c function)": [[39, "c.fq_default_poly_pow"]], "fq_default_poly_pow_trunc (c function)": [[39, "c.fq_default_poly_pow_trunc"]], "fq_default_poly_powmod_fmpz_binexp (c function)": [[39, "c.fq_default_poly_powmod_fmpz_binexp"]], "fq_default_poly_powmod_ui_binexp (c function)": [[39, "c.fq_default_poly_powmod_ui_binexp"]], "fq_default_poly_print (c function)": [[39, "c.fq_default_poly_print"]], "fq_default_poly_print_pretty (c function)": [[39, "c.fq_default_poly_print_pretty"]], "fq_default_poly_randtest (c function)": [[39, "c.fq_default_poly_randtest"]], "fq_default_poly_randtest_irreducible (c function)": [[39, "c.fq_default_poly_randtest_irreducible"]], "fq_default_poly_randtest_monic (c function)": [[39, "c.fq_default_poly_randtest_monic"]], "fq_default_poly_randtest_not_zero (c function)": [[39, "c.fq_default_poly_randtest_not_zero"]], "fq_default_poly_realloc (c function)": [[39, "c.fq_default_poly_realloc"]], "fq_default_poly_rem (c function)": [[39, "c.fq_default_poly_rem"]], "fq_default_poly_reverse (c function)": [[39, "c.fq_default_poly_reverse"]], "fq_default_poly_scalar_addmul_fq_default (c function)": [[39, "c.fq_default_poly_scalar_addmul_fq_default"]], "fq_default_poly_scalar_div_fq_default (c function)": [[39, "c.fq_default_poly_scalar_div_fq_default"]], "fq_default_poly_scalar_mul_fq_default (c function)": [[39, "c.fq_default_poly_scalar_mul_fq_default"]], "fq_default_poly_scalar_submul_fq_default (c function)": [[39, "c.fq_default_poly_scalar_submul_fq_default"]], "fq_default_poly_set (c function)": [[39, "c.fq_default_poly_set"]], "fq_default_poly_set_coeff (c function)": [[39, "c.fq_default_poly_set_coeff"]], "fq_default_poly_set_coeff_fmpz (c function)": [[39, "c.fq_default_poly_set_coeff_fmpz"]], "fq_default_poly_set_fmpz_mod_poly (c function)": [[39, "c.fq_default_poly_set_fmpz_mod_poly"]], "fq_default_poly_set_fmpz_poly (c function)": [[39, "c.fq_default_poly_set_fmpz_poly"]], "fq_default_poly_set_fq_default (c function)": [[39, "c.fq_default_poly_set_fq_default"]], "fq_default_poly_set_nmod_poly (c function)": [[39, "c.fq_default_poly_set_nmod_poly"]], "fq_default_poly_set_trunc (c function)": [[39, "c.fq_default_poly_set_trunc"]], "fq_default_poly_shift_left (c function)": [[39, "c.fq_default_poly_shift_left"]], "fq_default_poly_shift_right (c function)": [[39, "c.fq_default_poly_shift_right"]], "fq_default_poly_sqr (c function)": [[39, "c.fq_default_poly_sqr"]], "fq_default_poly_sqrt (c function)": [[39, "c.fq_default_poly_sqrt"]], "fq_default_poly_sqrt_series (c function)": [[39, "c.fq_default_poly_sqrt_series"]], "fq_default_poly_sub (c function)": [[39, "c.fq_default_poly_sub"]], "fq_default_poly_sub_series (c function)": [[39, "c.fq_default_poly_sub_series"]], "fq_default_poly_swap (c function)": [[39, "c.fq_default_poly_swap"]], "fq_default_poly_t (c type)": [[39, "c.fq_default_poly_t"]], "fq_default_poly_truncate (c function)": [[39, "c.fq_default_poly_truncate"]], "fq_default_poly_xgcd (c function)": [[39, "c.fq_default_poly_xgcd"]], "fq_default_poly_zero (c function)": [[39, "c.fq_default_poly_zero"]], "fq_default_poly_factor (c function)": [[40, "c.fq_default_poly_factor"]], "fq_default_poly_factor_clear (c function)": [[40, "c.fq_default_poly_factor_clear"]], "fq_default_poly_factor_concat (c function)": [[40, "c.fq_default_poly_factor_concat"]], "fq_default_poly_factor_distinct_deg (c function)": [[40, "c.fq_default_poly_factor_distinct_deg"]], "fq_default_poly_factor_equal_deg (c function)": [[40, "c.fq_default_poly_factor_equal_deg"]], "fq_default_poly_factor_exp (c function)": [[40, "c.fq_default_poly_factor_exp"]], "fq_default_poly_factor_fit_length (c function)": [[40, "c.fq_default_poly_factor_fit_length"]], "fq_default_poly_factor_get_poly (c function)": [[40, "c.fq_default_poly_factor_get_poly"]], "fq_default_poly_factor_init (c function)": [[40, "c.fq_default_poly_factor_init"]], "fq_default_poly_factor_insert (c function)": [[40, "c.fq_default_poly_factor_insert"]], "fq_default_poly_factor_length (c function)": [[40, "c.fq_default_poly_factor_length"]], "fq_default_poly_factor_pow (c function)": [[40, "c.fq_default_poly_factor_pow"]], "fq_default_poly_factor_print (c function)": [[40, "c.fq_default_poly_factor_print"]], "fq_default_poly_factor_print_pretty (c function)": [[40, "c.fq_default_poly_factor_print_pretty"]], "fq_default_poly_factor_realloc (c function)": [[40, "c.fq_default_poly_factor_realloc"]], "fq_default_poly_factor_set (c function)": [[40, "c.fq_default_poly_factor_set"]], "fq_default_poly_factor_split_single (c function)": [[40, "c.fq_default_poly_factor_split_single"]], "fq_default_poly_factor_squarefree (c function)": [[40, "c.fq_default_poly_factor_squarefree"]], "fq_default_poly_factor_t (c type)": [[40, "c.fq_default_poly_factor_t"]], "fq_default_poly_is_irreducible (c function)": [[40, "c.fq_default_poly_is_irreducible"]], "fq_default_poly_is_squarefree (c function)": [[40, "c.fq_default_poly_is_squarefree"]], "fq_default_poly_remove (c function)": [[40, "c.fq_default_poly_remove"]], "fq_default_poly_roots (c function)": [[40, "c.fq_default_poly_roots"]], "_fq_embed_gens_naive (c function)": [[41, "c._fq_embed_gens_naive"]], "fq_embed_composition_matrix (c function)": [[41, "c.fq_embed_composition_matrix"]], "fq_embed_composition_matrix_sub (c function)": [[41, "c.fq_embed_composition_matrix_sub"]], "fq_embed_dual_to_mono_matrix (c function)": [[41, "c.fq_embed_dual_to_mono_matrix"]], "fq_embed_gens (c function)": [[41, "c.fq_embed_gens"]], "fq_embed_matrices (c function)": [[41, "c.fq_embed_matrices"]], "fq_embed_mono_to_dual_matrix (c function)": [[41, "c.fq_embed_mono_to_dual_matrix"]], "fq_embed_mul_matrix (c function)": [[41, "c.fq_embed_mul_matrix"]], "fq_embed_trace_matrix (c function)": [[41, "c.fq_embed_trace_matrix"]], "fq_modulus_derivative_inv (c function)": [[41, "c.fq_modulus_derivative_inv"]], "fq_modulus_pow_series_inv (c function)": [[41, "c.fq_modulus_pow_series_inv"]], "fq_mat_add (c function)": [[42, "c.fq_mat_add"]], "fq_mat_can_solve (c function)": [[42, "c.fq_mat_can_solve"]], "fq_mat_charpoly (c function)": [[42, "c.fq_mat_charpoly"]], "fq_mat_charpoly_danilevsky (c function)": [[42, "c.fq_mat_charpoly_danilevsky"]], "fq_mat_clear (c function)": [[42, "c.fq_mat_clear"]], "fq_mat_concat_horizontal (c function)": [[42, "c.fq_mat_concat_horizontal"]], "fq_mat_concat_vertical (c function)": [[42, "c.fq_mat_concat_vertical"]], "fq_mat_entry (c function)": [[42, "c.fq_mat_entry"]], "fq_mat_entry_set (c function)": [[42, "c.fq_mat_entry_set"]], "fq_mat_equal (c function)": [[42, "c.fq_mat_equal"]], "fq_mat_fprint (c function)": [[42, "c.fq_mat_fprint"]], "fq_mat_fprint_pretty (c function)": [[42, "c.fq_mat_fprint_pretty"]], "fq_mat_init (c function)": [[42, "c.fq_mat_init"]], "fq_mat_init_set (c function)": [[42, "c.fq_mat_init_set"]], "fq_mat_inv (c function)": [[42, "c.fq_mat_inv"]], "fq_mat_invert_cols (c function)": [[42, "c.fq_mat_invert_cols"]], "fq_mat_invert_rows (c function)": [[42, "c.fq_mat_invert_rows"]], "fq_mat_is_empty (c function)": [[42, "c.fq_mat_is_empty"]], "fq_mat_is_one (c function)": [[42, "c.fq_mat_is_one"]], "fq_mat_is_square (c function)": [[42, "c.fq_mat_is_square"]], "fq_mat_is_zero (c function)": [[42, "c.fq_mat_is_zero"]], "fq_mat_lu (c function)": [[42, "c.fq_mat_lu"]], "fq_mat_lu_classical (c function)": [[42, "c.fq_mat_lu_classical"]], "fq_mat_lu_recursive (c function)": [[42, "c.fq_mat_lu_recursive"]], "fq_mat_minpoly (c function)": [[42, "c.fq_mat_minpoly"]], "fq_mat_mul (c function)": [[42, "c.fq_mat_mul"]], "fq_mat_mul_ks (c function)": [[42, "c.fq_mat_mul_KS"]], "fq_mat_mul_classical (c function)": [[42, "c.fq_mat_mul_classical"]], "fq_mat_mul_vec (c function)": [[42, "c.fq_mat_mul_vec"]], "fq_mat_mul_vec_ptr (c function)": [[42, "c.fq_mat_mul_vec_ptr"]], "fq_mat_ncols (c function)": [[42, "c.fq_mat_ncols"]], "fq_mat_neg (c function)": [[42, "c.fq_mat_neg"]], "fq_mat_nrows (c function)": [[42, "c.fq_mat_nrows"]], "fq_mat_one (c function)": [[42, "c.fq_mat_one"]], "fq_mat_print (c function)": [[42, "c.fq_mat_print"]], "fq_mat_print_pretty (c function)": [[42, "c.fq_mat_print_pretty"]], "fq_mat_randops (c function)": [[42, "c.fq_mat_randops"]], "fq_mat_randpermdiag (c function)": [[42, "c.fq_mat_randpermdiag"]], "fq_mat_randrank (c function)": [[42, "c.fq_mat_randrank"]], "fq_mat_randtest (c function)": [[42, "c.fq_mat_randtest"]], "fq_mat_randtril (c function)": [[42, "c.fq_mat_randtril"]], "fq_mat_randtriu (c function)": [[42, "c.fq_mat_randtriu"]], "fq_mat_reduce_row (c function)": [[42, "c.fq_mat_reduce_row"]], "fq_mat_rref (c function)": [[42, "c.fq_mat_rref"]], "fq_mat_set (c function)": [[42, "c.fq_mat_set"]], "fq_mat_set_fmpz_mod_mat (c function)": [[42, "c.fq_mat_set_fmpz_mod_mat"]], "fq_mat_set_nmod_mat (c function)": [[42, "c.fq_mat_set_nmod_mat"]], "fq_mat_similarity (c function)": [[42, "c.fq_mat_similarity"]], "fq_mat_solve (c function)": [[42, "c.fq_mat_solve"]], "fq_mat_solve_tril (c function)": [[42, "c.fq_mat_solve_tril"]], "fq_mat_solve_tril_classical (c function)": [[42, "c.fq_mat_solve_tril_classical"]], "fq_mat_solve_tril_recursive (c function)": [[42, "c.fq_mat_solve_tril_recursive"]], "fq_mat_solve_triu (c function)": [[42, "c.fq_mat_solve_triu"]], "fq_mat_solve_triu_classical (c function)": [[42, "c.fq_mat_solve_triu_classical"]], "fq_mat_solve_triu_recursive (c function)": [[42, "c.fq_mat_solve_triu_recursive"]], "fq_mat_struct (c type)": [[42, "c.fq_mat_struct"]], "fq_mat_sub (c function)": [[42, "c.fq_mat_sub"]], "fq_mat_submul (c function)": [[42, "c.fq_mat_submul"]], "fq_mat_swap (c function)": [[42, "c.fq_mat_swap"]], "fq_mat_swap_cols (c function)": [[42, "c.fq_mat_swap_cols"]], "fq_mat_swap_entrywise (c function)": [[42, "c.fq_mat_swap_entrywise"]], "fq_mat_swap_rows (c function)": [[42, "c.fq_mat_swap_rows"]], "fq_mat_t (c type)": [[42, "c.fq_mat_t"]], "fq_mat_vec_mul (c function)": [[42, "c.fq_mat_vec_mul"]], "fq_mat_vec_mul_ptr (c function)": [[42, "c.fq_mat_vec_mul_ptr"]], "fq_mat_window_clear (c function)": [[42, "c.fq_mat_window_clear"]], "fq_mat_window_init (c function)": [[42, "c.fq_mat_window_init"]], "fq_mat_zero (c function)": [[42, "c.fq_mat_zero"]], "_fq_nmod_ctx_init_conway (c function)": [[43, "c._fq_nmod_ctx_init_conway"]], "_fq_nmod_dense_reduce (c function)": [[43, "c._fq_nmod_dense_reduce"]], "_fq_nmod_frobenius (c function)": [[43, "c._fq_nmod_frobenius"]], "_fq_nmod_inv (c function)": [[43, "c._fq_nmod_inv"]], "_fq_nmod_norm (c function)": [[43, "c._fq_nmod_norm"]], "_fq_nmod_pow (c function)": [[43, "c._fq_nmod_pow"]], "_fq_nmod_reduce (c function)": [[43, "c._fq_nmod_reduce"]], "_fq_nmod_sparse_reduce (c function)": [[43, "c._fq_nmod_sparse_reduce"]], "_fq_nmod_trace (c function)": [[43, "c._fq_nmod_trace"]], "fq_nmod_add (c function)": [[43, "c.fq_nmod_add"]], "fq_nmod_bit_pack (c function)": [[43, "c.fq_nmod_bit_pack"]], "fq_nmod_bit_unpack (c function)": [[43, "c.fq_nmod_bit_unpack"]], "fq_nmod_clear (c function)": [[43, "c.fq_nmod_clear"]], "fq_nmod_cmp (c function)": [[43, "c.fq_nmod_cmp"]], "fq_nmod_ctx_clear (c function)": [[43, "c.fq_nmod_ctx_clear"]], "fq_nmod_ctx_degree (c function)": [[43, "c.fq_nmod_ctx_degree"]], "fq_nmod_ctx_fprint (c function)": [[43, "c.fq_nmod_ctx_fprint"]], "fq_nmod_ctx_init (c function)": [[43, "c.fq_nmod_ctx_init"]], "fq_nmod_ctx_init_conway (c function)": [[43, "c.fq_nmod_ctx_init_conway"]], "fq_nmod_ctx_init_modulus (c function)": [[43, "c.fq_nmod_ctx_init_modulus"]], "fq_nmod_ctx_modulus (c function)": [[43, "c.fq_nmod_ctx_modulus"]], "fq_nmod_ctx_order (c function)": [[43, "c.fq_nmod_ctx_order"]], "fq_nmod_ctx_prime (c function)": [[43, "c.fq_nmod_ctx_prime"]], "fq_nmod_ctx_print (c function)": [[43, "c.fq_nmod_ctx_print"]], "fq_nmod_ctx_randtest (c function)": [[43, "c.fq_nmod_ctx_randtest"]], "fq_nmod_ctx_randtest_reducible (c function)": [[43, "c.fq_nmod_ctx_randtest_reducible"]], "fq_nmod_ctx_struct (c type)": [[43, "c.fq_nmod_ctx_struct"]], "fq_nmod_ctx_t (c type)": [[43, "c.fq_nmod_ctx_t"]], "fq_nmod_equal (c function)": [[43, "c.fq_nmod_equal"]], "fq_nmod_fprint (c function)": [[43, "c.fq_nmod_fprint"]], "fq_nmod_fprint_pretty (c function)": [[43, "c.fq_nmod_fprint_pretty"]], "fq_nmod_frobenius (c function)": [[43, "c.fq_nmod_frobenius"]], "fq_nmod_gcdinv (c function)": [[43, "c.fq_nmod_gcdinv"]], "fq_nmod_gen (c function)": [[43, "c.fq_nmod_gen"]], "fq_nmod_get_fmpz (c function)": [[43, "c.fq_nmod_get_fmpz"]], "fq_nmod_get_nmod_mat (c function)": [[43, "c.fq_nmod_get_nmod_mat"]], "fq_nmod_get_nmod_poly (c function)": [[43, "c.fq_nmod_get_nmod_poly"]], "fq_nmod_get_str (c function)": [[43, "c.fq_nmod_get_str"]], "fq_nmod_get_str_pretty (c function)": [[43, "c.fq_nmod_get_str_pretty"]], "fq_nmod_init (c function)": [[43, "c.fq_nmod_init"]], "fq_nmod_init2 (c function)": [[43, "c.fq_nmod_init2"]], "fq_nmod_inv (c function)": [[43, "c.fq_nmod_inv"]], "fq_nmod_is_invertible (c function)": [[43, "c.fq_nmod_is_invertible"]], "fq_nmod_is_invertible_f (c function)": [[43, "c.fq_nmod_is_invertible_f"]], "fq_nmod_is_one (c function)": [[43, "c.fq_nmod_is_one"]], "fq_nmod_is_primitive (c function)": [[43, "c.fq_nmod_is_primitive"]], "fq_nmod_is_square (c function)": [[43, "c.fq_nmod_is_square"]], "fq_nmod_is_zero (c function)": [[43, "c.fq_nmod_is_zero"]], "fq_nmod_mul (c function)": [[43, "c.fq_nmod_mul"]], "fq_nmod_mul_fmpz (c function)": [[43, "c.fq_nmod_mul_fmpz"]], "fq_nmod_mul_si (c function)": [[43, "c.fq_nmod_mul_si"]], "fq_nmod_mul_ui (c function)": [[43, "c.fq_nmod_mul_ui"]], "fq_nmod_multiplicative_order (c function)": [[43, "c.fq_nmod_multiplicative_order"]], "fq_nmod_neg (c function)": [[43, "c.fq_nmod_neg"]], "fq_nmod_norm (c function)": [[43, "c.fq_nmod_norm"]], "fq_nmod_one (c function)": [[43, "c.fq_nmod_one"]], "fq_nmod_pow (c function)": [[43, "c.fq_nmod_pow"]], "fq_nmod_pow_ui (c function)": [[43, "c.fq_nmod_pow_ui"]], "fq_nmod_print (c function)": [[43, "c.fq_nmod_print"]], "fq_nmod_print_pretty (c function)": [[43, "c.fq_nmod_print_pretty"]], "fq_nmod_pth_root (c function)": [[43, "c.fq_nmod_pth_root"]], "fq_nmod_rand (c function)": [[43, "c.fq_nmod_rand"]], "fq_nmod_rand_not_zero (c function)": [[43, "c.fq_nmod_rand_not_zero"]], "fq_nmod_randtest (c function)": [[43, "c.fq_nmod_randtest"]], "fq_nmod_randtest_dense (c function)": [[43, "c.fq_nmod_randtest_dense"]], "fq_nmod_randtest_not_zero (c function)": [[43, "c.fq_nmod_randtest_not_zero"]], "fq_nmod_reduce (c function)": [[43, "c.fq_nmod_reduce"]], "fq_nmod_set (c function)": [[43, "c.fq_nmod_set"]], "fq_nmod_set_fmpz (c function)": [[43, "c.fq_nmod_set_fmpz"]], "fq_nmod_set_nmod_mat (c function)": [[43, "c.fq_nmod_set_nmod_mat"]], "fq_nmod_set_nmod_poly (c function)": [[43, "c.fq_nmod_set_nmod_poly"]], "fq_nmod_set_si (c function)": [[43, "c.fq_nmod_set_si"]], "fq_nmod_set_ui (c function)": [[43, "c.fq_nmod_set_ui"]], "fq_nmod_sqr (c function)": [[43, "c.fq_nmod_sqr"]], "fq_nmod_sqrt (c function)": [[43, "c.fq_nmod_sqrt"]], "fq_nmod_struct (c type)": [[43, "c.fq_nmod_struct"]], "fq_nmod_sub (c function)": [[43, "c.fq_nmod_sub"]], "fq_nmod_sub_one (c function)": [[43, "c.fq_nmod_sub_one"]], "fq_nmod_swap (c function)": [[43, "c.fq_nmod_swap"]], "fq_nmod_t (c type)": [[43, "c.fq_nmod_t"]], "fq_nmod_trace (c function)": [[43, "c.fq_nmod_trace"]], "fq_nmod_zero (c function)": [[43, "c.fq_nmod_zero"]], "_fq_nmod_embed_gens_naive (c function)": [[44, "c._fq_nmod_embed_gens_naive"]], "fq_nmod_embed_composition_matrix (c function)": [[44, "c.fq_nmod_embed_composition_matrix"]], "fq_nmod_embed_composition_matrix_sub (c function)": [[44, "c.fq_nmod_embed_composition_matrix_sub"]], "fq_nmod_embed_dual_to_mono_matrix (c function)": [[44, "c.fq_nmod_embed_dual_to_mono_matrix"]], "fq_nmod_embed_gens (c function)": [[44, "c.fq_nmod_embed_gens"]], "fq_nmod_embed_matrices (c function)": [[44, "c.fq_nmod_embed_matrices"]], "fq_nmod_embed_mono_to_dual_matrix (c function)": [[44, "c.fq_nmod_embed_mono_to_dual_matrix"]], "fq_nmod_embed_mul_matrix (c function)": [[44, "c.fq_nmod_embed_mul_matrix"]], "fq_nmod_embed_trace_matrix (c function)": [[44, "c.fq_nmod_embed_trace_matrix"]], "fq_nmod_modulus_derivative_inv (c function)": [[44, "c.fq_nmod_modulus_derivative_inv"]], "fq_nmod_modulus_pow_series_inv (c function)": [[44, "c.fq_nmod_modulus_pow_series_inv"]], "fq_nmod_mat_add (c function)": [[45, "c.fq_nmod_mat_add"]], "fq_nmod_mat_can_solve (c function)": [[45, "c.fq_nmod_mat_can_solve"]], "fq_nmod_mat_charpoly (c function)": [[45, "c.fq_nmod_mat_charpoly"]], "fq_nmod_mat_charpoly_danilevsky (c function)": [[45, "c.fq_nmod_mat_charpoly_danilevsky"]], "fq_nmod_mat_clear (c function)": [[45, "c.fq_nmod_mat_clear"]], "fq_nmod_mat_concat_horizontal (c function)": [[45, "c.fq_nmod_mat_concat_horizontal"]], "fq_nmod_mat_concat_vertical (c function)": [[45, "c.fq_nmod_mat_concat_vertical"]], "fq_nmod_mat_entry (c function)": [[45, "c.fq_nmod_mat_entry"]], "fq_nmod_mat_entry_set (c function)": [[45, "c.fq_nmod_mat_entry_set"]], "fq_nmod_mat_equal (c function)": [[45, "c.fq_nmod_mat_equal"]], "fq_nmod_mat_fprint (c function)": [[45, "c.fq_nmod_mat_fprint"]], "fq_nmod_mat_fprint_pretty (c function)": [[45, "c.fq_nmod_mat_fprint_pretty"]], "fq_nmod_mat_init (c function)": [[45, "c.fq_nmod_mat_init"]], "fq_nmod_mat_init_set (c function)": [[45, "c.fq_nmod_mat_init_set"]], "fq_nmod_mat_inv (c function)": [[45, "c.fq_nmod_mat_inv"]], "fq_nmod_mat_invert_cols (c function)": [[45, "c.fq_nmod_mat_invert_cols"]], "fq_nmod_mat_invert_rows (c function)": [[45, "c.fq_nmod_mat_invert_rows"]], "fq_nmod_mat_is_empty (c function)": [[45, "c.fq_nmod_mat_is_empty"]], "fq_nmod_mat_is_one (c function)": [[45, "c.fq_nmod_mat_is_one"]], "fq_nmod_mat_is_square (c function)": [[45, "c.fq_nmod_mat_is_square"]], "fq_nmod_mat_is_zero (c function)": [[45, "c.fq_nmod_mat_is_zero"]], "fq_nmod_mat_lu (c function)": [[45, "c.fq_nmod_mat_lu"]], "fq_nmod_mat_lu_classical (c function)": [[45, "c.fq_nmod_mat_lu_classical"]], "fq_nmod_mat_lu_recursive (c function)": [[45, "c.fq_nmod_mat_lu_recursive"]], "fq_nmod_mat_minpoly (c function)": [[45, "c.fq_nmod_mat_minpoly"]], "fq_nmod_mat_mul (c function)": [[45, "c.fq_nmod_mat_mul"]], "fq_nmod_mat_mul_ks (c function)": [[45, "c.fq_nmod_mat_mul_KS"]], "fq_nmod_mat_mul_classical (c function)": [[45, "c.fq_nmod_mat_mul_classical"]], "fq_nmod_mat_mul_vec (c function)": [[45, "c.fq_nmod_mat_mul_vec"]], "fq_nmod_mat_mul_vec_ptr (c function)": [[45, "c.fq_nmod_mat_mul_vec_ptr"]], "fq_nmod_mat_ncols (c function)": [[45, "c.fq_nmod_mat_ncols"]], "fq_nmod_mat_neg (c function)": [[45, "c.fq_nmod_mat_neg"]], "fq_nmod_mat_nrows (c function)": [[45, "c.fq_nmod_mat_nrows"]], "fq_nmod_mat_one (c function)": [[45, "c.fq_nmod_mat_one"]], "fq_nmod_mat_print (c function)": [[45, "c.fq_nmod_mat_print"]], "fq_nmod_mat_print_pretty (c function)": [[45, "c.fq_nmod_mat_print_pretty"]], "fq_nmod_mat_randops (c function)": [[45, "c.fq_nmod_mat_randops"]], "fq_nmod_mat_randpermdiag (c function)": [[45, "c.fq_nmod_mat_randpermdiag"]], "fq_nmod_mat_randrank (c function)": [[45, "c.fq_nmod_mat_randrank"]], "fq_nmod_mat_randtest (c function)": [[45, "c.fq_nmod_mat_randtest"]], "fq_nmod_mat_randtril (c function)": [[45, "c.fq_nmod_mat_randtril"]], "fq_nmod_mat_randtriu (c function)": [[45, "c.fq_nmod_mat_randtriu"]], "fq_nmod_mat_reduce_row (c function)": [[45, "c.fq_nmod_mat_reduce_row"]], "fq_nmod_mat_rref (c function)": [[45, "c.fq_nmod_mat_rref"]], "fq_nmod_mat_set (c function)": [[45, "c.fq_nmod_mat_set"]], "fq_nmod_mat_set_fmpz_mod_mat (c function)": [[45, "c.fq_nmod_mat_set_fmpz_mod_mat"]], "fq_nmod_mat_set_nmod_mat (c function)": [[45, "c.fq_nmod_mat_set_nmod_mat"]], "fq_nmod_mat_similarity (c function)": [[45, "c.fq_nmod_mat_similarity"]], "fq_nmod_mat_solve (c function)": [[45, "c.fq_nmod_mat_solve"]], "fq_nmod_mat_solve_tril (c function)": [[45, "c.fq_nmod_mat_solve_tril"]], "fq_nmod_mat_solve_tril_classical (c function)": [[45, "c.fq_nmod_mat_solve_tril_classical"]], "fq_nmod_mat_solve_tril_recursive (c function)": [[45, "c.fq_nmod_mat_solve_tril_recursive"]], "fq_nmod_mat_solve_triu (c function)": [[45, "c.fq_nmod_mat_solve_triu"]], "fq_nmod_mat_solve_triu_classical (c function)": [[45, "c.fq_nmod_mat_solve_triu_classical"]], "fq_nmod_mat_solve_triu_recursive (c function)": [[45, "c.fq_nmod_mat_solve_triu_recursive"]], "fq_nmod_mat_struct (c type)": [[45, "c.fq_nmod_mat_struct"]], "fq_nmod_mat_sub (c function)": [[45, "c.fq_nmod_mat_sub"]], "fq_nmod_mat_submul (c function)": [[45, "c.fq_nmod_mat_submul"]], "fq_nmod_mat_swap (c function)": [[45, "c.fq_nmod_mat_swap"]], "fq_nmod_mat_swap_cols (c function)": [[45, "c.fq_nmod_mat_swap_cols"]], "fq_nmod_mat_swap_entrywise (c function)": [[45, "c.fq_nmod_mat_swap_entrywise"]], "fq_nmod_mat_swap_rows (c function)": [[45, "c.fq_nmod_mat_swap_rows"]], "fq_nmod_mat_t (c type)": [[45, "c.fq_nmod_mat_t"]], "fq_nmod_mat_vec_mul (c function)": [[45, "c.fq_nmod_mat_vec_mul"]], "fq_nmod_mat_vec_mul_ptr (c function)": [[45, "c.fq_nmod_mat_vec_mul_ptr"]], "fq_nmod_mat_window_clear (c function)": [[45, "c.fq_nmod_mat_window_clear"]], "fq_nmod_mat_window_init (c function)": [[45, "c.fq_nmod_mat_window_init"]], "fq_nmod_mat_zero (c function)": [[45, "c.fq_nmod_mat_zero"]], "fq_nmod_mpoly_add (c function)": [[46, "c.fq_nmod_mpoly_add"]], "fq_nmod_mpoly_add_fq_nmod (c function)": [[46, "c.fq_nmod_mpoly_add_fq_nmod"]], "fq_nmod_mpoly_clear (c function)": [[46, "c.fq_nmod_mpoly_clear"]], "fq_nmod_mpoly_cmp (c function)": [[46, "c.fq_nmod_mpoly_cmp"]], "fq_nmod_mpoly_combine_like_terms (c function)": [[46, "c.fq_nmod_mpoly_combine_like_terms"]], "fq_nmod_mpoly_compose_fq_nmod_mpoly (c function)": [[46, "c.fq_nmod_mpoly_compose_fq_nmod_mpoly"]], "fq_nmod_mpoly_compose_fq_nmod_mpoly_gen (c function)": [[46, "c.fq_nmod_mpoly_compose_fq_nmod_mpoly_gen"]], "fq_nmod_mpoly_compose_fq_nmod_poly (c function)": [[46, "c.fq_nmod_mpoly_compose_fq_nmod_poly"]], "fq_nmod_mpoly_content_vars (c function)": [[46, "c.fq_nmod_mpoly_content_vars"]], "fq_nmod_mpoly_ctx_clear (c function)": [[46, "c.fq_nmod_mpoly_ctx_clear"]], "fq_nmod_mpoly_ctx_init (c function)": [[46, "c.fq_nmod_mpoly_ctx_init"]], "fq_nmod_mpoly_ctx_nvars (c function)": [[46, "c.fq_nmod_mpoly_ctx_nvars"]], "fq_nmod_mpoly_ctx_ord (c function)": [[46, "c.fq_nmod_mpoly_ctx_ord"]], "fq_nmod_mpoly_ctx_struct (c type)": [[46, "c.fq_nmod_mpoly_ctx_struct"]], "fq_nmod_mpoly_ctx_t (c type)": [[46, "c.fq_nmod_mpoly_ctx_t"]], "fq_nmod_mpoly_degree_fmpz (c function)": [[46, "c.fq_nmod_mpoly_degree_fmpz"]], "fq_nmod_mpoly_degree_si (c function)": [[46, "c.fq_nmod_mpoly_degree_si"]], "fq_nmod_mpoly_degrees_fit_si (c function)": [[46, "c.fq_nmod_mpoly_degrees_fit_si"]], "fq_nmod_mpoly_degrees_fmpz (c function)": [[46, "c.fq_nmod_mpoly_degrees_fmpz"]], "fq_nmod_mpoly_degrees_si (c function)": [[46, "c.fq_nmod_mpoly_degrees_si"]], "fq_nmod_mpoly_derivative (c function)": [[46, "c.fq_nmod_mpoly_derivative"]], "fq_nmod_mpoly_discriminant (c function)": [[46, "c.fq_nmod_mpoly_discriminant"]], "fq_nmod_mpoly_div (c function)": [[46, "c.fq_nmod_mpoly_div"]], "fq_nmod_mpoly_divides (c function)": [[46, "c.fq_nmod_mpoly_divides"]], "fq_nmod_mpoly_divrem (c function)": [[46, "c.fq_nmod_mpoly_divrem"]], "fq_nmod_mpoly_divrem_ideal (c function)": [[46, "c.fq_nmod_mpoly_divrem_ideal"]], "fq_nmod_mpoly_equal (c function)": [[46, "c.fq_nmod_mpoly_equal"]], "fq_nmod_mpoly_equal_fq_nmod (c function)": [[46, "c.fq_nmod_mpoly_equal_fq_nmod"]], "fq_nmod_mpoly_evaluate_all_fq_nmod (c function)": [[46, "c.fq_nmod_mpoly_evaluate_all_fq_nmod"]], "fq_nmod_mpoly_evaluate_one_fq_nmod (c function)": [[46, "c.fq_nmod_mpoly_evaluate_one_fq_nmod"]], "fq_nmod_mpoly_fit_length (c function)": [[46, "c.fq_nmod_mpoly_fit_length"]], "fq_nmod_mpoly_fprint_pretty (c function)": [[46, "c.fq_nmod_mpoly_fprint_pretty"]], "fq_nmod_mpoly_from_univar (c function)": [[46, "c.fq_nmod_mpoly_from_univar"]], "fq_nmod_mpoly_gcd (c function)": [[46, "c.fq_nmod_mpoly_gcd"]], "fq_nmod_mpoly_gcd_brown (c function)": [[46, "c.fq_nmod_mpoly_gcd_brown"]], "fq_nmod_mpoly_gcd_cofactors (c function)": [[46, "c.fq_nmod_mpoly_gcd_cofactors"]], "fq_nmod_mpoly_gcd_hensel (c function)": [[46, "c.fq_nmod_mpoly_gcd_hensel"]], "fq_nmod_mpoly_gcd_zippel (c function)": [[46, "c.fq_nmod_mpoly_gcd_zippel"]], "fq_nmod_mpoly_gen (c function)": [[46, "c.fq_nmod_mpoly_gen"]], "fq_nmod_mpoly_get_coeff_fq_nmod_fmpz (c function)": [[46, "c.fq_nmod_mpoly_get_coeff_fq_nmod_fmpz"]], "fq_nmod_mpoly_get_coeff_fq_nmod_monomial (c function)": [[46, "c.fq_nmod_mpoly_get_coeff_fq_nmod_monomial"]], "fq_nmod_mpoly_get_coeff_fq_nmod_ui (c function)": [[46, "c.fq_nmod_mpoly_get_coeff_fq_nmod_ui"]], "fq_nmod_mpoly_get_coeff_vars_ui (c function)": [[46, "c.fq_nmod_mpoly_get_coeff_vars_ui"]], "fq_nmod_mpoly_get_fq_nmod (c function)": [[46, "c.fq_nmod_mpoly_get_fq_nmod"]], "fq_nmod_mpoly_get_str_pretty (c function)": [[46, "c.fq_nmod_mpoly_get_str_pretty"]], "fq_nmod_mpoly_get_term (c function)": [[46, "c.fq_nmod_mpoly_get_term"]], "fq_nmod_mpoly_get_term_coeff_fq_nmod (c function)": [[46, "c.fq_nmod_mpoly_get_term_coeff_fq_nmod"]], "fq_nmod_mpoly_get_term_exp_fmpz (c function)": [[46, "c.fq_nmod_mpoly_get_term_exp_fmpz"]], "fq_nmod_mpoly_get_term_exp_si (c function)": [[46, "c.fq_nmod_mpoly_get_term_exp_si"]], "fq_nmod_mpoly_get_term_exp_ui (c function)": [[46, "c.fq_nmod_mpoly_get_term_exp_ui"]], "fq_nmod_mpoly_get_term_monomial (c function)": [[46, "c.fq_nmod_mpoly_get_term_monomial"]], "fq_nmod_mpoly_get_term_var_exp_si (c function)": [[46, "c.fq_nmod_mpoly_get_term_var_exp_si"]], "fq_nmod_mpoly_get_term_var_exp_ui (c function)": [[46, "c.fq_nmod_mpoly_get_term_var_exp_ui"]], "fq_nmod_mpoly_init (c function)": [[46, "c.fq_nmod_mpoly_init"]], "fq_nmod_mpoly_init2 (c function)": [[46, "c.fq_nmod_mpoly_init2"]], "fq_nmod_mpoly_init3 (c function)": [[46, "c.fq_nmod_mpoly_init3"]], "fq_nmod_mpoly_is_canonical (c function)": [[46, "c.fq_nmod_mpoly_is_canonical"]], "fq_nmod_mpoly_is_fq_nmod (c function)": [[46, "c.fq_nmod_mpoly_is_fq_nmod"]], "fq_nmod_mpoly_is_gen (c function)": [[46, "c.fq_nmod_mpoly_is_gen"]], "fq_nmod_mpoly_is_one (c function)": [[46, "c.fq_nmod_mpoly_is_one"]], "fq_nmod_mpoly_is_square (c function)": [[46, "c.fq_nmod_mpoly_is_square"]], "fq_nmod_mpoly_is_zero (c function)": [[46, "c.fq_nmod_mpoly_is_zero"]], "fq_nmod_mpoly_length (c function)": [[46, "c.fq_nmod_mpoly_length"]], "fq_nmod_mpoly_make_monic (c function)": [[46, "c.fq_nmod_mpoly_make_monic"]], "fq_nmod_mpoly_mul (c function)": [[46, "c.fq_nmod_mpoly_mul"]], "fq_nmod_mpoly_neg (c function)": [[46, "c.fq_nmod_mpoly_neg"]], "fq_nmod_mpoly_one (c function)": [[46, "c.fq_nmod_mpoly_one"]], "fq_nmod_mpoly_pow_fmpz (c function)": [[46, "c.fq_nmod_mpoly_pow_fmpz"]], "fq_nmod_mpoly_pow_ui (c function)": [[46, "c.fq_nmod_mpoly_pow_ui"]], "fq_nmod_mpoly_print_pretty (c function)": [[46, "c.fq_nmod_mpoly_print_pretty"]], "fq_nmod_mpoly_push_term_fq_nmod_fmpz (c function)": [[46, "c.fq_nmod_mpoly_push_term_fq_nmod_fmpz"]], "fq_nmod_mpoly_push_term_fq_nmod_ui (c function)": [[46, "c.fq_nmod_mpoly_push_term_fq_nmod_ui"]], "fq_nmod_mpoly_quadratic_root (c function)": [[46, "c.fq_nmod_mpoly_quadratic_root"]], "fq_nmod_mpoly_randtest_bits (c function)": [[46, "c.fq_nmod_mpoly_randtest_bits"]], "fq_nmod_mpoly_randtest_bound (c function)": [[46, "c.fq_nmod_mpoly_randtest_bound"]], "fq_nmod_mpoly_randtest_bounds (c function)": [[46, "c.fq_nmod_mpoly_randtest_bounds"]], "fq_nmod_mpoly_realloc (c function)": [[46, "c.fq_nmod_mpoly_realloc"]], "fq_nmod_mpoly_resize (c function)": [[46, "c.fq_nmod_mpoly_resize"]], "fq_nmod_mpoly_resultant (c function)": [[46, "c.fq_nmod_mpoly_resultant"]], "fq_nmod_mpoly_reverse (c function)": [[46, "c.fq_nmod_mpoly_reverse"]], "fq_nmod_mpoly_scalar_mul_fq_nmod (c function)": [[46, "c.fq_nmod_mpoly_scalar_mul_fq_nmod"]], "fq_nmod_mpoly_set (c function)": [[46, "c.fq_nmod_mpoly_set"]], "fq_nmod_mpoly_set_coeff_fq_nmod_fmpz (c function)": [[46, "c.fq_nmod_mpoly_set_coeff_fq_nmod_fmpz"]], "fq_nmod_mpoly_set_coeff_fq_nmod_monomial (c function)": [[46, "c.fq_nmod_mpoly_set_coeff_fq_nmod_monomial"]], "fq_nmod_mpoly_set_coeff_fq_nmod_ui (c function)": [[46, "c.fq_nmod_mpoly_set_coeff_fq_nmod_ui"]], "fq_nmod_mpoly_set_fq_nmod (c function)": [[46, "c.fq_nmod_mpoly_set_fq_nmod"]], "fq_nmod_mpoly_set_fq_nmod_gen (c function)": [[46, "c.fq_nmod_mpoly_set_fq_nmod_gen"]], "fq_nmod_mpoly_set_str_pretty (c function)": [[46, "c.fq_nmod_mpoly_set_str_pretty"]], "fq_nmod_mpoly_set_term_coeff_ui (c function)": [[46, "c.fq_nmod_mpoly_set_term_coeff_ui"]], "fq_nmod_mpoly_set_term_exp_fmpz (c function)": [[46, "c.fq_nmod_mpoly_set_term_exp_fmpz"]], "fq_nmod_mpoly_set_term_exp_ui (c function)": [[46, "c.fq_nmod_mpoly_set_term_exp_ui"]], "fq_nmod_mpoly_set_ui (c function)": [[46, "c.fq_nmod_mpoly_set_ui"]], "fq_nmod_mpoly_sort_terms (c function)": [[46, "c.fq_nmod_mpoly_sort_terms"]], "fq_nmod_mpoly_sqrt (c function)": [[46, "c.fq_nmod_mpoly_sqrt"]], "fq_nmod_mpoly_struct (c type)": [[46, "c.fq_nmod_mpoly_struct"]], "fq_nmod_mpoly_sub (c function)": [[46, "c.fq_nmod_mpoly_sub"]], "fq_nmod_mpoly_sub_fq_nmod (c function)": [[46, "c.fq_nmod_mpoly_sub_fq_nmod"]], "fq_nmod_mpoly_swap (c function)": [[46, "c.fq_nmod_mpoly_swap"]], "fq_nmod_mpoly_t (c type)": [[46, "c.fq_nmod_mpoly_t"]], "fq_nmod_mpoly_term_content (c function)": [[46, "c.fq_nmod_mpoly_term_content"]], "fq_nmod_mpoly_term_exp_fits_si (c function)": [[46, "c.fq_nmod_mpoly_term_exp_fits_si"]], "fq_nmod_mpoly_term_exp_fits_ui (c function)": [[46, "c.fq_nmod_mpoly_term_exp_fits_ui"]], "fq_nmod_mpoly_to_univar (c function)": [[46, "c.fq_nmod_mpoly_to_univar"]], "fq_nmod_mpoly_total_degree_fits_si (c function)": [[46, "c.fq_nmod_mpoly_total_degree_fits_si"]], "fq_nmod_mpoly_total_degree_fmpz (c function)": [[46, "c.fq_nmod_mpoly_total_degree_fmpz"]], "fq_nmod_mpoly_total_degree_si (c function)": [[46, "c.fq_nmod_mpoly_total_degree_si"]], "fq_nmod_mpoly_univar_clear (c function)": [[46, "c.fq_nmod_mpoly_univar_clear"]], "fq_nmod_mpoly_univar_degree_fits_si (c function)": [[46, "c.fq_nmod_mpoly_univar_degree_fits_si"]], "fq_nmod_mpoly_univar_get_term_coeff (c function)": [[46, "c.fq_nmod_mpoly_univar_get_term_coeff"]], "fq_nmod_mpoly_univar_get_term_exp_si (c function)": [[46, "c.fq_nmod_mpoly_univar_get_term_exp_si"]], "fq_nmod_mpoly_univar_init (c function)": [[46, "c.fq_nmod_mpoly_univar_init"]], "fq_nmod_mpoly_univar_length (c function)": [[46, "c.fq_nmod_mpoly_univar_length"]], "fq_nmod_mpoly_univar_swap (c function)": [[46, "c.fq_nmod_mpoly_univar_swap"]], "fq_nmod_mpoly_univar_swap_term_coeff (c function)": [[46, "c.fq_nmod_mpoly_univar_swap_term_coeff"]], "fq_nmod_mpoly_used_vars (c function)": [[46, "c.fq_nmod_mpoly_used_vars"]], "fq_nmod_mpoly_zero (c function)": [[46, "c.fq_nmod_mpoly_zero"]], "fq_nmod_mpoly_factor (c function)": [[47, "c.fq_nmod_mpoly_factor"]], "fq_nmod_mpoly_factor_clear (c function)": [[47, "c.fq_nmod_mpoly_factor_clear"]], "fq_nmod_mpoly_factor_get_base (c function)": [[47, "c.fq_nmod_mpoly_factor_get_base"]], "fq_nmod_mpoly_factor_get_constant_fq_nmod (c function)": [[47, "c.fq_nmod_mpoly_factor_get_constant_fq_nmod"]], "fq_nmod_mpoly_factor_get_exp_si (c function)": [[47, "c.fq_nmod_mpoly_factor_get_exp_si"]], "fq_nmod_mpoly_factor_init (c function)": [[47, "c.fq_nmod_mpoly_factor_init"]], "fq_nmod_mpoly_factor_length (c function)": [[47, "c.fq_nmod_mpoly_factor_length"]], "fq_nmod_mpoly_factor_sort (c function)": [[47, "c.fq_nmod_mpoly_factor_sort"]], "fq_nmod_mpoly_factor_squarefree (c function)": [[47, "c.fq_nmod_mpoly_factor_squarefree"]], "fq_nmod_mpoly_factor_struct (c type)": [[47, "c.fq_nmod_mpoly_factor_struct"]], "fq_nmod_mpoly_factor_swap (c function)": [[47, "c.fq_nmod_mpoly_factor_swap"]], "fq_nmod_mpoly_factor_swap_base (c function)": [[47, "c.fq_nmod_mpoly_factor_swap_base"]], "fq_nmod_mpoly_factor_t (c type)": [[47, "c.fq_nmod_mpoly_factor_t"]], "_fq_nmod_poly_add (c function)": [[48, "c._fq_nmod_poly_add"]], "_fq_nmod_poly_compose (c function)": [[48, "c._fq_nmod_poly_compose"]], "_fq_nmod_poly_compose_divconquer (c function)": [[48, "c._fq_nmod_poly_compose_divconquer"]], "_fq_nmod_poly_compose_horner (c function)": [[48, "c._fq_nmod_poly_compose_horner"]], "_fq_nmod_poly_compose_mod (c function)": [[48, "c._fq_nmod_poly_compose_mod"]], "_fq_nmod_poly_compose_mod_brent_kung (c function)": [[48, "c._fq_nmod_poly_compose_mod_brent_kung"]], "_fq_nmod_poly_compose_mod_brent_kung_precomp_preinv (c function)": [[48, "c._fq_nmod_poly_compose_mod_brent_kung_precomp_preinv"]], "_fq_nmod_poly_compose_mod_brent_kung_preinv (c function)": [[48, "c._fq_nmod_poly_compose_mod_brent_kung_preinv"]], "_fq_nmod_poly_compose_mod_horner (c function)": [[48, "c._fq_nmod_poly_compose_mod_horner"]], "_fq_nmod_poly_compose_mod_horner_preinv (c function)": [[48, "c._fq_nmod_poly_compose_mod_horner_preinv"]], "_fq_nmod_poly_compose_mod_preinv (c function)": [[48, "c._fq_nmod_poly_compose_mod_preinv"]], "_fq_nmod_poly_derivative (c function)": [[48, "c._fq_nmod_poly_derivative"]], "_fq_nmod_poly_div_basecase (c function)": [[48, "c._fq_nmod_poly_div_basecase"]], "_fq_nmod_poly_div_newton_n_preinv (c function)": [[48, "c._fq_nmod_poly_div_newton_n_preinv"]], "_fq_nmod_poly_div_series (c function)": [[48, "c._fq_nmod_poly_div_series"]], "_fq_nmod_poly_divides (c function)": [[48, "c._fq_nmod_poly_divides"]], "_fq_nmod_poly_divrem (c function)": [[48, "c._fq_nmod_poly_divrem"]], "_fq_nmod_poly_divrem_basecase (c function)": [[48, "c._fq_nmod_poly_divrem_basecase"]], "_fq_nmod_poly_divrem_divconquer (c function)": [[48, "c._fq_nmod_poly_divrem_divconquer"]], "_fq_nmod_poly_divrem_divconquer_recursive (c function)": [[48, "c._fq_nmod_poly_divrem_divconquer_recursive"]], "_fq_nmod_poly_divrem_newton_n_preinv (c function)": [[48, "c._fq_nmod_poly_divrem_newton_n_preinv"]], "_fq_nmod_poly_evaluate_fq_nmod (c function)": [[48, "c._fq_nmod_poly_evaluate_fq_nmod"]], "_fq_nmod_poly_fprint (c function)": [[48, "c._fq_nmod_poly_fprint"]], "_fq_nmod_poly_fprint_pretty (c function)": [[48, "c._fq_nmod_poly_fprint_pretty"]], "_fq_nmod_poly_gcd (c function)": [[48, "c._fq_nmod_poly_gcd"]], "_fq_nmod_poly_gcd_euclidean (c function)": [[48, "c._fq_nmod_poly_gcd_euclidean"]], "_fq_nmod_poly_gcd_euclidean_f (c function)": [[48, "c._fq_nmod_poly_gcd_euclidean_f"]], "_fq_nmod_poly_gcd_hgcd (c function)": [[48, "c._fq_nmod_poly_gcd_hgcd"]], "_fq_nmod_poly_get_str (c function)": [[48, "c._fq_nmod_poly_get_str"]], "_fq_nmod_poly_get_str_pretty (c function)": [[48, "c._fq_nmod_poly_get_str_pretty"]], "_fq_nmod_poly_hamming_weight (c function)": [[48, "c._fq_nmod_poly_hamming_weight"]], "_fq_nmod_poly_hgcd (c function)": [[48, "c._fq_nmod_poly_hgcd"]], "_fq_nmod_poly_inv_series (c function)": [[48, "c._fq_nmod_poly_inv_series"]], "_fq_nmod_poly_inv_series_newton (c function)": [[48, "c._fq_nmod_poly_inv_series_newton"]], "_fq_nmod_poly_invsqrt_series (c function)": [[48, "c._fq_nmod_poly_invsqrt_series"]], "_fq_nmod_poly_make_monic (c function)": [[48, "c._fq_nmod_poly_make_monic"]], "_fq_nmod_poly_mul (c function)": [[48, "c._fq_nmod_poly_mul"]], "_fq_nmod_poly_mul_ks (c function)": [[48, "c._fq_nmod_poly_mul_KS"]], "_fq_nmod_poly_mul_classical (c function)": [[48, "c._fq_nmod_poly_mul_classical"]], "_fq_nmod_poly_mul_reorder (c function)": [[48, "c._fq_nmod_poly_mul_reorder"]], "_fq_nmod_poly_mul_univariate (c function)": [[48, "c._fq_nmod_poly_mul_univariate"]], "_fq_nmod_poly_mulhigh (c function)": [[48, "c._fq_nmod_poly_mulhigh"]], "_fq_nmod_poly_mulhigh_classical (c function)": [[48, "c._fq_nmod_poly_mulhigh_classical"]], "_fq_nmod_poly_mullow (c function)": [[48, "c._fq_nmod_poly_mullow"]], "_fq_nmod_poly_mullow_ks (c function)": [[48, "c._fq_nmod_poly_mullow_KS"]], "_fq_nmod_poly_mullow_classical (c function)": [[48, "c._fq_nmod_poly_mullow_classical"]], "_fq_nmod_poly_mullow_univariate (c function)": [[48, "c._fq_nmod_poly_mullow_univariate"]], "_fq_nmod_poly_mulmod (c function)": [[48, "c._fq_nmod_poly_mulmod"]], "_fq_nmod_poly_mulmod_preinv (c function)": [[48, "c._fq_nmod_poly_mulmod_preinv"]], "_fq_nmod_poly_neg (c function)": [[48, "c._fq_nmod_poly_neg"]], "_fq_nmod_poly_normalise (c function)": [[48, "c._fq_nmod_poly_normalise"]], "_fq_nmod_poly_normalise2 (c function)": [[48, "c._fq_nmod_poly_normalise2"]], "_fq_nmod_poly_pow (c function)": [[48, "c._fq_nmod_poly_pow"]], "_fq_nmod_poly_pow_trunc (c function)": [[48, "c._fq_nmod_poly_pow_trunc"]], "_fq_nmod_poly_pow_trunc_binexp (c function)": [[48, "c._fq_nmod_poly_pow_trunc_binexp"]], "_fq_nmod_poly_powmod_fmpz_binexp (c function)": [[48, "c._fq_nmod_poly_powmod_fmpz_binexp"]], "_fq_nmod_poly_powmod_fmpz_binexp_preinv (c function)": [[48, "c._fq_nmod_poly_powmod_fmpz_binexp_preinv"]], "_fq_nmod_poly_powmod_fmpz_sliding_preinv (c function)": [[48, "c._fq_nmod_poly_powmod_fmpz_sliding_preinv"]], "_fq_nmod_poly_powmod_ui_binexp (c function)": [[48, "c._fq_nmod_poly_powmod_ui_binexp"]], "_fq_nmod_poly_powmod_ui_binexp_preinv (c function)": [[48, "c._fq_nmod_poly_powmod_ui_binexp_preinv"]], "_fq_nmod_poly_powmod_x_fmpz_preinv (c function)": [[48, "c._fq_nmod_poly_powmod_x_fmpz_preinv"]], "_fq_nmod_poly_precompute_matrix (c function)": [[48, "c._fq_nmod_poly_precompute_matrix"]], "_fq_nmod_poly_print (c function)": [[48, "c._fq_nmod_poly_print"]], "_fq_nmod_poly_print_pretty (c function)": [[48, "c._fq_nmod_poly_print_pretty"]], "_fq_nmod_poly_reduce_matrix_mod_poly (c function)": [[48, "c._fq_nmod_poly_reduce_matrix_mod_poly"]], "_fq_nmod_poly_rem (c function)": [[48, "c._fq_nmod_poly_rem"]], "_fq_nmod_poly_reverse (c function)": [[48, "c._fq_nmod_poly_reverse"]], "_fq_nmod_poly_scalar_addmul_fq_nmod (c function)": [[48, "c._fq_nmod_poly_scalar_addmul_fq_nmod"]], "_fq_nmod_poly_scalar_div_fq (c function)": [[48, "c._fq_nmod_poly_scalar_div_fq"]], "_fq_nmod_poly_scalar_mul_fq_nmod (c function)": [[48, "c._fq_nmod_poly_scalar_mul_fq_nmod"]], "_fq_nmod_poly_scalar_submul_fq_nmod (c function)": [[48, "c._fq_nmod_poly_scalar_submul_fq_nmod"]], "_fq_nmod_poly_set (c function)": [[48, "c._fq_nmod_poly_set"]], "_fq_nmod_poly_set_length (c function)": [[48, "c._fq_nmod_poly_set_length"]], "_fq_nmod_poly_shift_left (c function)": [[48, "c._fq_nmod_poly_shift_left"]], "_fq_nmod_poly_shift_right (c function)": [[48, "c._fq_nmod_poly_shift_right"]], "_fq_nmod_poly_sqr (c function)": [[48, "c._fq_nmod_poly_sqr"]], "_fq_nmod_poly_sqr_ks (c function)": [[48, "c._fq_nmod_poly_sqr_KS"]], "_fq_nmod_poly_sqr_classical (c function)": [[48, "c._fq_nmod_poly_sqr_classical"]], "_fq_nmod_poly_sqrt (c function)": [[48, "c._fq_nmod_poly_sqrt"]], "_fq_nmod_poly_sqrt_series (c function)": [[48, "c._fq_nmod_poly_sqrt_series"]], "_fq_nmod_poly_sub (c function)": [[48, "c._fq_nmod_poly_sub"]], "_fq_nmod_poly_xgcd (c function)": [[48, "c._fq_nmod_poly_xgcd"]], "_fq_nmod_poly_xgcd_euclidean (c function)": [[48, "c._fq_nmod_poly_xgcd_euclidean"]], "_fq_nmod_poly_xgcd_euclidean_f (c function)": [[48, "c._fq_nmod_poly_xgcd_euclidean_f"]], "_fq_nmod_poly_zero (c function)": [[48, "c._fq_nmod_poly_zero"]], "fq_nmod_poly_add (c function)": [[48, "c.fq_nmod_poly_add"]], "fq_nmod_poly_add_series (c function)": [[48, "c.fq_nmod_poly_add_series"]], "fq_nmod_poly_add_si (c function)": [[48, "c.fq_nmod_poly_add_si"]], "fq_nmod_poly_clear (c function)": [[48, "c.fq_nmod_poly_clear"]], "fq_nmod_poly_compose (c function)": [[48, "c.fq_nmod_poly_compose"]], "fq_nmod_poly_compose_divconquer (c function)": [[48, "c.fq_nmod_poly_compose_divconquer"]], "fq_nmod_poly_compose_horner (c function)": [[48, "c.fq_nmod_poly_compose_horner"]], "fq_nmod_poly_compose_mod (c function)": [[48, "c.fq_nmod_poly_compose_mod"]], "fq_nmod_poly_compose_mod_brent_kung (c function)": [[48, "c.fq_nmod_poly_compose_mod_brent_kung"]], "fq_nmod_poly_compose_mod_brent_kung_precomp_preinv (c function)": [[48, "c.fq_nmod_poly_compose_mod_brent_kung_precomp_preinv"]], "fq_nmod_poly_compose_mod_brent_kung_preinv (c function)": [[48, "c.fq_nmod_poly_compose_mod_brent_kung_preinv"]], "fq_nmod_poly_compose_mod_horner (c function)": [[48, "c.fq_nmod_poly_compose_mod_horner"]], "fq_nmod_poly_compose_mod_horner_preinv (c function)": [[48, "c.fq_nmod_poly_compose_mod_horner_preinv"]], "fq_nmod_poly_compose_mod_preinv (c function)": [[48, "c.fq_nmod_poly_compose_mod_preinv"]], "fq_nmod_poly_deflate (c function)": [[48, "c.fq_nmod_poly_deflate"]], "fq_nmod_poly_deflation (c function)": [[48, "c.fq_nmod_poly_deflation"]], "fq_nmod_poly_degree (c function)": [[48, "c.fq_nmod_poly_degree"]], "fq_nmod_poly_derivative (c function)": [[48, "c.fq_nmod_poly_derivative"]], "fq_nmod_poly_div_basecase (c function)": [[48, "c.fq_nmod_poly_div_basecase"]], "fq_nmod_poly_div_newton_n_preinv (c function)": [[48, "c.fq_nmod_poly_div_newton_n_preinv"]], "fq_nmod_poly_div_series (c function)": [[48, "c.fq_nmod_poly_div_series"]], "fq_nmod_poly_divides (c function)": [[48, "c.fq_nmod_poly_divides"]], "fq_nmod_poly_divrem (c function)": [[48, "c.fq_nmod_poly_divrem"]], "fq_nmod_poly_divrem_basecase (c function)": [[48, "c.fq_nmod_poly_divrem_basecase"]], "fq_nmod_poly_divrem_divconquer (c function)": [[48, "c.fq_nmod_poly_divrem_divconquer"]], "fq_nmod_poly_divrem_f (c function)": [[48, "c.fq_nmod_poly_divrem_f"]], "fq_nmod_poly_divrem_newton_n_preinv (c function)": [[48, "c.fq_nmod_poly_divrem_newton_n_preinv"]], "fq_nmod_poly_equal (c function)": [[48, "c.fq_nmod_poly_equal"]], "fq_nmod_poly_equal_fq_nmod (c function)": [[48, "c.fq_nmod_poly_equal_fq_nmod"]], "fq_nmod_poly_equal_trunc (c function)": [[48, "c.fq_nmod_poly_equal_trunc"]], "fq_nmod_poly_evaluate_fq_nmod (c function)": [[48, "c.fq_nmod_poly_evaluate_fq_nmod"]], "fq_nmod_poly_fit_length (c function)": [[48, "c.fq_nmod_poly_fit_length"]], "fq_nmod_poly_fprint (c function)": [[48, "c.fq_nmod_poly_fprint"]], "fq_nmod_poly_fprint_pretty (c function)": [[48, "c.fq_nmod_poly_fprint_pretty"]], "fq_nmod_poly_gcd (c function)": [[48, "c.fq_nmod_poly_gcd"]], "fq_nmod_poly_gcd_euclidean (c function)": [[48, "c.fq_nmod_poly_gcd_euclidean"]], "fq_nmod_poly_gcd_euclidean_f (c function)": [[48, "c.fq_nmod_poly_gcd_euclidean_f"]], "fq_nmod_poly_gcd_hgcd (c function)": [[48, "c.fq_nmod_poly_gcd_hgcd"]], "fq_nmod_poly_gen (c function)": [[48, "c.fq_nmod_poly_gen"]], "fq_nmod_poly_get_coeff (c function)": [[48, "c.fq_nmod_poly_get_coeff"]], "fq_nmod_poly_get_str (c function)": [[48, "c.fq_nmod_poly_get_str"]], "fq_nmod_poly_get_str_pretty (c function)": [[48, "c.fq_nmod_poly_get_str_pretty"]], "fq_nmod_poly_hamming_weight (c function)": [[48, "c.fq_nmod_poly_hamming_weight"]], "fq_nmod_poly_inflate (c function)": [[48, "c.fq_nmod_poly_inflate"]], "fq_nmod_poly_init (c function)": [[48, "c.fq_nmod_poly_init"]], "fq_nmod_poly_init2 (c function)": [[48, "c.fq_nmod_poly_init2"]], "fq_nmod_poly_inv_series (c function)": [[48, "c.fq_nmod_poly_inv_series"]], "fq_nmod_poly_inv_series_newton (c function)": [[48, "c.fq_nmod_poly_inv_series_newton"]], "fq_nmod_poly_invsqrt_series (c function)": [[48, "c.fq_nmod_poly_invsqrt_series"]], "fq_nmod_poly_is_gen (c function)": [[48, "c.fq_nmod_poly_is_gen"]], "fq_nmod_poly_is_one (c function)": [[48, "c.fq_nmod_poly_is_one"]], "fq_nmod_poly_is_unit (c function)": [[48, "c.fq_nmod_poly_is_unit"]], "fq_nmod_poly_is_zero (c function)": [[48, "c.fq_nmod_poly_is_zero"]], "fq_nmod_poly_lead (c function)": [[48, "c.fq_nmod_poly_lead"]], "fq_nmod_poly_length (c function)": [[48, "c.fq_nmod_poly_length"]], "fq_nmod_poly_make_monic (c function)": [[48, "c.fq_nmod_poly_make_monic"]], "fq_nmod_poly_mul (c function)": [[48, "c.fq_nmod_poly_mul"]], "fq_nmod_poly_mul_ks (c function)": [[48, "c.fq_nmod_poly_mul_KS"]], "fq_nmod_poly_mul_classical (c function)": [[48, "c.fq_nmod_poly_mul_classical"]], "fq_nmod_poly_mul_reorder (c function)": [[48, "c.fq_nmod_poly_mul_reorder"]], "fq_nmod_poly_mul_univariate (c function)": [[48, "c.fq_nmod_poly_mul_univariate"]], "fq_nmod_poly_mulhigh (c function)": [[48, "c.fq_nmod_poly_mulhigh"]], "fq_nmod_poly_mulhigh_classical (c function)": [[48, "c.fq_nmod_poly_mulhigh_classical"]], "fq_nmod_poly_mullow (c function)": [[48, "c.fq_nmod_poly_mullow"]], "fq_nmod_poly_mullow_ks (c function)": [[48, "c.fq_nmod_poly_mullow_KS"]], "fq_nmod_poly_mullow_classical (c function)": [[48, "c.fq_nmod_poly_mullow_classical"]], "fq_nmod_poly_mullow_univariate (c function)": [[48, "c.fq_nmod_poly_mullow_univariate"]], "fq_nmod_poly_mulmod (c function)": [[48, "c.fq_nmod_poly_mulmod"]], "fq_nmod_poly_mulmod_preinv (c function)": [[48, "c.fq_nmod_poly_mulmod_preinv"]], "fq_nmod_poly_neg (c function)": [[48, "c.fq_nmod_poly_neg"]], "fq_nmod_poly_one (c function)": [[48, "c.fq_nmod_poly_one"]], "fq_nmod_poly_pow (c function)": [[48, "c.fq_nmod_poly_pow"]], "fq_nmod_poly_pow_trunc (c function)": [[48, "c.fq_nmod_poly_pow_trunc"]], "fq_nmod_poly_pow_trunc_binexp (c function)": [[48, "c.fq_nmod_poly_pow_trunc_binexp"]], "fq_nmod_poly_powmod_fmpz_binexp (c function)": [[48, "c.fq_nmod_poly_powmod_fmpz_binexp"]], "fq_nmod_poly_powmod_fmpz_binexp_preinv (c function)": [[48, "c.fq_nmod_poly_powmod_fmpz_binexp_preinv"]], "fq_nmod_poly_powmod_fmpz_sliding_preinv (c function)": [[48, "c.fq_nmod_poly_powmod_fmpz_sliding_preinv"]], "fq_nmod_poly_powmod_ui_binexp (c function)": [[48, "c.fq_nmod_poly_powmod_ui_binexp"]], "fq_nmod_poly_powmod_ui_binexp_preinv (c function)": [[48, "c.fq_nmod_poly_powmod_ui_binexp_preinv"]], "fq_nmod_poly_powmod_x_fmpz_preinv (c function)": [[48, "c.fq_nmod_poly_powmod_x_fmpz_preinv"]], "fq_nmod_poly_precompute_matrix (c function)": [[48, "c.fq_nmod_poly_precompute_matrix"]], "fq_nmod_poly_print (c function)": [[48, "c.fq_nmod_poly_print"]], "fq_nmod_poly_print_pretty (c function)": [[48, "c.fq_nmod_poly_print_pretty"]], "fq_nmod_poly_randtest (c function)": [[48, "c.fq_nmod_poly_randtest"]], "fq_nmod_poly_randtest_irreducible (c function)": [[48, "c.fq_nmod_poly_randtest_irreducible"]], "fq_nmod_poly_randtest_monic (c function)": [[48, "c.fq_nmod_poly_randtest_monic"]], "fq_nmod_poly_randtest_not_zero (c function)": [[48, "c.fq_nmod_poly_randtest_not_zero"]], "fq_nmod_poly_realloc (c function)": [[48, "c.fq_nmod_poly_realloc"]], "fq_nmod_poly_rem (c function)": [[48, "c.fq_nmod_poly_rem"]], "fq_nmod_poly_reverse (c function)": [[48, "c.fq_nmod_poly_reverse"]], "fq_nmod_poly_scalar_addmul_fq_nmod (c function)": [[48, "c.fq_nmod_poly_scalar_addmul_fq_nmod"]], "fq_nmod_poly_scalar_div_fq (c function)": [[48, "c.fq_nmod_poly_scalar_div_fq"]], "fq_nmod_poly_scalar_mul_fq_nmod (c function)": [[48, "c.fq_nmod_poly_scalar_mul_fq_nmod"]], "fq_nmod_poly_scalar_submul_fq_nmod (c function)": [[48, "c.fq_nmod_poly_scalar_submul_fq_nmod"]], "fq_nmod_poly_set (c function)": [[48, "c.fq_nmod_poly_set"]], "fq_nmod_poly_set_coeff (c function)": [[48, "c.fq_nmod_poly_set_coeff"]], "fq_nmod_poly_set_coeff_fmpz (c function)": [[48, "c.fq_nmod_poly_set_coeff_fmpz"]], "fq_nmod_poly_set_fmpz_mod_poly (c function)": [[48, "c.fq_nmod_poly_set_fmpz_mod_poly"]], "fq_nmod_poly_set_fq_nmod (c function)": [[48, "c.fq_nmod_poly_set_fq_nmod"]], "fq_nmod_poly_set_nmod_poly (c function)": [[48, "c.fq_nmod_poly_set_nmod_poly"]], "fq_nmod_poly_set_trunc (c function)": [[48, "c.fq_nmod_poly_set_trunc"]], "fq_nmod_poly_shift_left (c function)": [[48, "c.fq_nmod_poly_shift_left"]], "fq_nmod_poly_shift_right (c function)": [[48, "c.fq_nmod_poly_shift_right"]], "fq_nmod_poly_sqr (c function)": [[48, "c.fq_nmod_poly_sqr"]], "fq_nmod_poly_sqr_ks (c function)": [[48, "c.fq_nmod_poly_sqr_KS"]], "fq_nmod_poly_sqr_classical (c function)": [[48, "c.fq_nmod_poly_sqr_classical"]], "fq_nmod_poly_sqrt (c function)": [[48, "c.fq_nmod_poly_sqrt"]], "fq_nmod_poly_sqrt_series (c function)": [[48, "c.fq_nmod_poly_sqrt_series"]], "fq_nmod_poly_struct (c type)": [[48, "c.fq_nmod_poly_struct"]], "fq_nmod_poly_sub (c function)": [[48, "c.fq_nmod_poly_sub"]], "fq_nmod_poly_sub_series (c function)": [[48, "c.fq_nmod_poly_sub_series"]], "fq_nmod_poly_swap (c function)": [[48, "c.fq_nmod_poly_swap"]], "fq_nmod_poly_t (c type)": [[48, "c.fq_nmod_poly_t"]], "fq_nmod_poly_truncate (c function)": [[48, "c.fq_nmod_poly_truncate"]], "fq_nmod_poly_xgcd (c function)": [[48, "c.fq_nmod_poly_xgcd"]], "fq_nmod_poly_xgcd_euclidean (c function)": [[48, "c.fq_nmod_poly_xgcd_euclidean"]], "fq_nmod_poly_xgcd_euclidean_f (c function)": [[48, "c.fq_nmod_poly_xgcd_euclidean_f"]], "fq_nmod_poly_zero (c function)": [[48, "c.fq_nmod_poly_zero"]], "_fq_nmod_poly_is_squarefree (c function)": [[49, "c._fq_nmod_poly_is_squarefree"]], "fq_nmod_poly_factor (c function)": [[49, "c.fq_nmod_poly_factor"]], "fq_nmod_poly_factor_berlekamp (c function)": [[49, "c.fq_nmod_poly_factor_berlekamp"]], "fq_nmod_poly_factor_cantor_zassenhaus (c function)": [[49, "c.fq_nmod_poly_factor_cantor_zassenhaus"]], "fq_nmod_poly_factor_clear (c function)": [[49, "c.fq_nmod_poly_factor_clear"]], "fq_nmod_poly_factor_concat (c function)": [[49, "c.fq_nmod_poly_factor_concat"]], "fq_nmod_poly_factor_distinct_deg (c function)": [[49, "c.fq_nmod_poly_factor_distinct_deg"]], "fq_nmod_poly_factor_equal_deg (c function)": [[49, "c.fq_nmod_poly_factor_equal_deg"]], "fq_nmod_poly_factor_equal_deg_prob (c function)": [[49, "c.fq_nmod_poly_factor_equal_deg_prob"]], "fq_nmod_poly_factor_fit_length (c function)": [[49, "c.fq_nmod_poly_factor_fit_length"]], "fq_nmod_poly_factor_init (c function)": [[49, "c.fq_nmod_poly_factor_init"]], "fq_nmod_poly_factor_insert (c function)": [[49, "c.fq_nmod_poly_factor_insert"]], "fq_nmod_poly_factor_kaltofen_shoup (c function)": [[49, "c.fq_nmod_poly_factor_kaltofen_shoup"]], "fq_nmod_poly_factor_pow (c function)": [[49, "c.fq_nmod_poly_factor_pow"]], "fq_nmod_poly_factor_print (c function)": [[49, "c.fq_nmod_poly_factor_print"]], "fq_nmod_poly_factor_print_pretty (c function)": [[49, "c.fq_nmod_poly_factor_print_pretty"]], "fq_nmod_poly_factor_realloc (c function)": [[49, "c.fq_nmod_poly_factor_realloc"]], "fq_nmod_poly_factor_set (c function)": [[49, "c.fq_nmod_poly_factor_set"]], "fq_nmod_poly_factor_split_single (c function)": [[49, "c.fq_nmod_poly_factor_split_single"]], "fq_nmod_poly_factor_squarefree (c function)": [[49, "c.fq_nmod_poly_factor_squarefree"]], "fq_nmod_poly_factor_struct (c type)": [[49, "c.fq_nmod_poly_factor_struct"]], "fq_nmod_poly_factor_t (c type)": [[49, "c.fq_nmod_poly_factor_t"]], "fq_nmod_poly_factor_with_berlekamp (c function)": [[49, "c.fq_nmod_poly_factor_with_berlekamp"]], "fq_nmod_poly_factor_with_cantor_zassenhaus (c function)": [[49, "c.fq_nmod_poly_factor_with_cantor_zassenhaus"]], "fq_nmod_poly_factor_with_kaltofen_shoup (c function)": [[49, "c.fq_nmod_poly_factor_with_kaltofen_shoup"]], "fq_nmod_poly_is_irreducible (c function)": [[49, "c.fq_nmod_poly_is_irreducible"]], "fq_nmod_poly_is_irreducible_ben_or (c function)": [[49, "c.fq_nmod_poly_is_irreducible_ben_or"]], "fq_nmod_poly_is_irreducible_ddf (c function)": [[49, "c.fq_nmod_poly_is_irreducible_ddf"]], "fq_nmod_poly_is_squarefree (c function)": [[49, "c.fq_nmod_poly_is_squarefree"]], "fq_nmod_poly_iterated_frobenius_preinv (c function)": [[49, "c.fq_nmod_poly_iterated_frobenius_preinv"]], "fq_nmod_poly_remove (c function)": [[49, "c.fq_nmod_poly_remove"]], "fq_nmod_poly_roots (c function)": [[49, "c.fq_nmod_poly_roots"]], "_fq_nmod_vec_add (c function)": [[50, "c._fq_nmod_vec_add"]], "_fq_nmod_vec_clear (c function)": [[50, "c._fq_nmod_vec_clear"]], "_fq_nmod_vec_dot (c function)": [[50, "c._fq_nmod_vec_dot"]], "_fq_nmod_vec_equal (c function)": [[50, "c._fq_nmod_vec_equal"]], "_fq_nmod_vec_fprint (c function)": [[50, "c._fq_nmod_vec_fprint"]], "_fq_nmod_vec_init (c function)": [[50, "c._fq_nmod_vec_init"]], "_fq_nmod_vec_is_zero (c function)": [[50, "c._fq_nmod_vec_is_zero"]], "_fq_nmod_vec_neg (c function)": [[50, "c._fq_nmod_vec_neg"]], "_fq_nmod_vec_print (c function)": [[50, "c._fq_nmod_vec_print"]], "_fq_nmod_vec_randtest (c function)": [[50, "c._fq_nmod_vec_randtest"]], "_fq_nmod_vec_scalar_addmul_fq_nmod (c function)": [[50, "c._fq_nmod_vec_scalar_addmul_fq_nmod"]], "_fq_nmod_vec_scalar_submul_fq_nmod (c function)": [[50, "c._fq_nmod_vec_scalar_submul_fq_nmod"]], "_fq_nmod_vec_set (c function)": [[50, "c._fq_nmod_vec_set"]], "_fq_nmod_vec_sub (c function)": [[50, "c._fq_nmod_vec_sub"]], "_fq_nmod_vec_swap (c function)": [[50, "c._fq_nmod_vec_swap"]], "_fq_nmod_vec_zero (c function)": [[50, "c._fq_nmod_vec_zero"]], "_fq_poly_add (c function)": [[51, "c._fq_poly_add"]], "_fq_poly_compose (c function)": [[51, "c._fq_poly_compose"]], "_fq_poly_compose_divconquer (c function)": [[51, "c._fq_poly_compose_divconquer"]], "_fq_poly_compose_horner (c function)": [[51, "c._fq_poly_compose_horner"]], "_fq_poly_compose_mod (c function)": [[51, "c._fq_poly_compose_mod"]], "_fq_poly_compose_mod_brent_kung (c function)": [[51, "c._fq_poly_compose_mod_brent_kung"]], "_fq_poly_compose_mod_brent_kung_precomp_preinv (c function)": [[51, "c._fq_poly_compose_mod_brent_kung_precomp_preinv"]], "_fq_poly_compose_mod_brent_kung_preinv (c function)": [[51, "c._fq_poly_compose_mod_brent_kung_preinv"]], "_fq_poly_compose_mod_horner (c function)": [[51, "c._fq_poly_compose_mod_horner"]], "_fq_poly_compose_mod_horner_preinv (c function)": [[51, "c._fq_poly_compose_mod_horner_preinv"]], "_fq_poly_compose_mod_preinv (c function)": [[51, "c._fq_poly_compose_mod_preinv"]], "_fq_poly_derivative (c function)": [[51, "c._fq_poly_derivative"]], "_fq_poly_div_basecase (c function)": [[51, "c._fq_poly_div_basecase"]], "_fq_poly_div_newton_n_preinv (c function)": [[51, "c._fq_poly_div_newton_n_preinv"]], "_fq_poly_div_series (c function)": [[51, "c._fq_poly_div_series"]], "_fq_poly_divides (c function)": [[51, "c._fq_poly_divides"]], "_fq_poly_divrem (c function)": [[51, "c._fq_poly_divrem"]], "_fq_poly_divrem_basecase (c function)": [[51, "c._fq_poly_divrem_basecase"]], "_fq_poly_divrem_divconquer (c function)": [[51, "c._fq_poly_divrem_divconquer"]], "_fq_poly_divrem_divconquer_recursive (c function)": [[51, "c._fq_poly_divrem_divconquer_recursive"]], "_fq_poly_divrem_newton_n_preinv (c function)": [[51, "c._fq_poly_divrem_newton_n_preinv"]], "_fq_poly_evaluate_fq (c function)": [[51, "c._fq_poly_evaluate_fq"]], "_fq_poly_fprint (c function)": [[51, "c._fq_poly_fprint"]], "_fq_poly_fprint_pretty (c function)": [[51, "c._fq_poly_fprint_pretty"]], "_fq_poly_gcd (c function)": [[51, "c._fq_poly_gcd"]], "_fq_poly_gcd_euclidean (c function)": [[51, "c._fq_poly_gcd_euclidean"]], "_fq_poly_gcd_euclidean_f (c function)": [[51, "c._fq_poly_gcd_euclidean_f"]], "_fq_poly_gcd_hgcd (c function)": [[51, "c._fq_poly_gcd_hgcd"]], "_fq_poly_get_str (c function)": [[51, "c._fq_poly_get_str"]], "_fq_poly_get_str_pretty (c function)": [[51, "c._fq_poly_get_str_pretty"]], "_fq_poly_hamming_weight (c function)": [[51, "c._fq_poly_hamming_weight"]], "_fq_poly_hgcd (c function)": [[51, "c._fq_poly_hgcd"]], "_fq_poly_inv_series (c function)": [[51, "c._fq_poly_inv_series"]], "_fq_poly_inv_series_newton (c function)": [[51, "c._fq_poly_inv_series_newton"]], "_fq_poly_invsqrt_series (c function)": [[51, "c._fq_poly_invsqrt_series"]], "_fq_poly_make_monic (c function)": [[51, "c._fq_poly_make_monic"]], "_fq_poly_mul (c function)": [[51, "c._fq_poly_mul"]], "_fq_poly_mul_ks (c function)": [[51, "c._fq_poly_mul_KS"]], "_fq_poly_mul_classical (c function)": [[51, "c._fq_poly_mul_classical"]], "_fq_poly_mul_reorder (c function)": [[51, "c._fq_poly_mul_reorder"]], "_fq_poly_mul_univariate (c function)": [[51, "c._fq_poly_mul_univariate"]], "_fq_poly_mulhigh (c function)": [[51, "c._fq_poly_mulhigh"]], "_fq_poly_mulhigh_classical (c function)": [[51, "c._fq_poly_mulhigh_classical"]], "_fq_poly_mullow (c function)": [[51, "c._fq_poly_mullow"]], "_fq_poly_mullow_ks (c function)": [[51, "c._fq_poly_mullow_KS"]], "_fq_poly_mullow_classical (c function)": [[51, "c._fq_poly_mullow_classical"]], "_fq_poly_mullow_univariate (c function)": [[51, "c._fq_poly_mullow_univariate"]], "_fq_poly_mulmod (c function)": [[51, "c._fq_poly_mulmod"]], "_fq_poly_mulmod_preinv (c function)": [[51, "c._fq_poly_mulmod_preinv"]], "_fq_poly_neg (c function)": [[51, "c._fq_poly_neg"]], "_fq_poly_normalise (c function)": [[51, "c._fq_poly_normalise"]], "_fq_poly_normalise2 (c function)": [[51, "c._fq_poly_normalise2"]], "_fq_poly_pow (c function)": [[51, "c._fq_poly_pow"]], "_fq_poly_pow_trunc (c function)": [[51, "c._fq_poly_pow_trunc"]], "_fq_poly_pow_trunc_binexp (c function)": [[51, "c._fq_poly_pow_trunc_binexp"]], "_fq_poly_powmod_fmpz_binexp (c function)": [[51, "c._fq_poly_powmod_fmpz_binexp"]], "_fq_poly_powmod_fmpz_binexp_preinv (c function)": [[51, "c._fq_poly_powmod_fmpz_binexp_preinv"]], "_fq_poly_powmod_fmpz_sliding_preinv (c function)": [[51, "c._fq_poly_powmod_fmpz_sliding_preinv"]], "_fq_poly_powmod_ui_binexp (c function)": [[51, "c._fq_poly_powmod_ui_binexp"]], "_fq_poly_powmod_ui_binexp_preinv (c function)": [[51, "c._fq_poly_powmod_ui_binexp_preinv"]], "_fq_poly_powmod_x_fmpz_preinv (c function)": [[51, "c._fq_poly_powmod_x_fmpz_preinv"]], "_fq_poly_precompute_matrix (c function)": [[51, "c._fq_poly_precompute_matrix"]], "_fq_poly_print (c function)": [[51, "c._fq_poly_print"]], "_fq_poly_print_pretty (c function)": [[51, "c._fq_poly_print_pretty"]], "_fq_poly_reduce_matrix_mod_poly (c function)": [[51, "c._fq_poly_reduce_matrix_mod_poly"]], "_fq_poly_rem (c function)": [[51, "c._fq_poly_rem"]], "_fq_poly_reverse (c function)": [[51, "c._fq_poly_reverse"]], "_fq_poly_scalar_addmul_fq (c function)": [[51, "c._fq_poly_scalar_addmul_fq"]], "_fq_poly_scalar_div_fq (c function)": [[51, "c._fq_poly_scalar_div_fq"]], "_fq_poly_scalar_mul_fq (c function)": [[51, "c._fq_poly_scalar_mul_fq"]], "_fq_poly_scalar_submul_fq (c function)": [[51, "c._fq_poly_scalar_submul_fq"]], "_fq_poly_set (c function)": [[51, "c._fq_poly_set"]], "_fq_poly_set_length (c function)": [[51, "c._fq_poly_set_length"]], "_fq_poly_shift_left (c function)": [[51, "c._fq_poly_shift_left"]], "_fq_poly_shift_right (c function)": [[51, "c._fq_poly_shift_right"]], "_fq_poly_sqr (c function)": [[51, "c._fq_poly_sqr"]], "_fq_poly_sqr_ks (c function)": [[51, "c._fq_poly_sqr_KS"]], "_fq_poly_sqr_classical (c function)": [[51, "c._fq_poly_sqr_classical"]], "_fq_poly_sqr_reorder (c function)": [[51, "c._fq_poly_sqr_reorder"]], "_fq_poly_sqrt (c function)": [[51, "c._fq_poly_sqrt"]], "_fq_poly_sqrt_series (c function)": [[51, "c._fq_poly_sqrt_series"]], "_fq_poly_sub (c function)": [[51, "c._fq_poly_sub"]], "_fq_poly_xgcd (c function)": [[51, "c._fq_poly_xgcd"]], "_fq_poly_xgcd_euclidean (c function)": [[51, "c._fq_poly_xgcd_euclidean"]], "_fq_poly_xgcd_euclidean_f (c function)": [[51, "c._fq_poly_xgcd_euclidean_f"]], "_fq_poly_zero (c function)": [[51, "c._fq_poly_zero"]], "fq_poly_add (c function)": [[51, "c.fq_poly_add"]], "fq_poly_add_series (c function)": [[51, "c.fq_poly_add_series"]], "fq_poly_add_si (c function)": [[51, "c.fq_poly_add_si"]], "fq_poly_clear (c function)": [[51, "c.fq_poly_clear"]], "fq_poly_compose (c function)": [[51, "c.fq_poly_compose"]], "fq_poly_compose_divconquer (c function)": [[51, "c.fq_poly_compose_divconquer"]], "fq_poly_compose_horner (c function)": [[51, "c.fq_poly_compose_horner"]], "fq_poly_compose_mod (c function)": [[51, "c.fq_poly_compose_mod"]], "fq_poly_compose_mod_brent_kung (c function)": [[51, "c.fq_poly_compose_mod_brent_kung"]], "fq_poly_compose_mod_brent_kung_precomp_preinv (c function)": [[51, "c.fq_poly_compose_mod_brent_kung_precomp_preinv"]], "fq_poly_compose_mod_brent_kung_preinv (c function)": [[51, "c.fq_poly_compose_mod_brent_kung_preinv"]], "fq_poly_compose_mod_horner (c function)": [[51, "c.fq_poly_compose_mod_horner"]], "fq_poly_compose_mod_horner_preinv (c function)": [[51, "c.fq_poly_compose_mod_horner_preinv"]], "fq_poly_compose_mod_preinv (c function)": [[51, "c.fq_poly_compose_mod_preinv"]], "fq_poly_deflate (c function)": [[51, "c.fq_poly_deflate"]], "fq_poly_deflation (c function)": [[51, "c.fq_poly_deflation"]], "fq_poly_degree (c function)": [[51, "c.fq_poly_degree"]], "fq_poly_derivative (c function)": [[51, "c.fq_poly_derivative"]], "fq_poly_div_basecase (c function)": [[51, "c.fq_poly_div_basecase"]], "fq_poly_div_newton_n_preinv (c function)": [[51, "c.fq_poly_div_newton_n_preinv"]], "fq_poly_div_series (c function)": [[51, "c.fq_poly_div_series"]], "fq_poly_divides (c function)": [[51, "c.fq_poly_divides"]], "fq_poly_divrem (c function)": [[51, "c.fq_poly_divrem"]], "fq_poly_divrem_basecase (c function)": [[51, "c.fq_poly_divrem_basecase"]], "fq_poly_divrem_divconquer (c function)": [[51, "c.fq_poly_divrem_divconquer"]], "fq_poly_divrem_f (c function)": [[51, "c.fq_poly_divrem_f"]], "fq_poly_divrem_newton_preinv (c function)": [[51, "c.fq_poly_divrem_newton_preinv"]], "fq_poly_equal (c function)": [[51, "c.fq_poly_equal"]], "fq_poly_equal_fq (c function)": [[51, "c.fq_poly_equal_fq"]], "fq_poly_equal_trunc (c function)": [[51, "c.fq_poly_equal_trunc"]], "fq_poly_evaluate_fq (c function)": [[51, "c.fq_poly_evaluate_fq"]], "fq_poly_fit_length (c function)": [[51, "c.fq_poly_fit_length"]], "fq_poly_fprint (c function)": [[51, "c.fq_poly_fprint"]], "fq_poly_fprint_pretty (c function)": [[51, "c.fq_poly_fprint_pretty"]], "fq_poly_gcd (c function)": [[51, "c.fq_poly_gcd"]], "fq_poly_gcd_euclidean (c function)": [[51, "c.fq_poly_gcd_euclidean"]], "fq_poly_gcd_euclidean_f (c function)": [[51, "c.fq_poly_gcd_euclidean_f"]], "fq_poly_gcd_hgcd (c function)": [[51, "c.fq_poly_gcd_hgcd"]], "fq_poly_gen (c function)": [[51, "c.fq_poly_gen"]], "fq_poly_get_coeff (c function)": [[51, "c.fq_poly_get_coeff"]], "fq_poly_get_str (c function)": [[51, "c.fq_poly_get_str"]], "fq_poly_get_str_pretty (c function)": [[51, "c.fq_poly_get_str_pretty"]], "fq_poly_hamming_weight (c function)": [[51, "c.fq_poly_hamming_weight"]], "fq_poly_inflate (c function)": [[51, "c.fq_poly_inflate"]], "fq_poly_init (c function)": [[51, "c.fq_poly_init"]], "fq_poly_init2 (c function)": [[51, "c.fq_poly_init2"]], "fq_poly_inv_series (c function)": [[51, "c.fq_poly_inv_series"]], "fq_poly_inv_series_newton (c function)": [[51, "c.fq_poly_inv_series_newton"]], "fq_poly_invsqrt_series (c function)": [[51, "c.fq_poly_invsqrt_series"]], "fq_poly_is_gen (c function)": [[51, "c.fq_poly_is_gen"]], "fq_poly_is_one (c function)": [[51, "c.fq_poly_is_one"]], "fq_poly_is_unit (c function)": [[51, "c.fq_poly_is_unit"]], "fq_poly_is_zero (c function)": [[51, "c.fq_poly_is_zero"]], "fq_poly_lead (c function)": [[51, "c.fq_poly_lead"]], "fq_poly_length (c function)": [[51, "c.fq_poly_length"]], "fq_poly_make_monic (c function)": [[51, "c.fq_poly_make_monic"]], "fq_poly_mul (c function)": [[51, "c.fq_poly_mul"]], "fq_poly_mul_ks (c function)": [[51, "c.fq_poly_mul_KS"]], "fq_poly_mul_classical (c function)": [[51, "c.fq_poly_mul_classical"]], "fq_poly_mul_reorder (c function)": [[51, "c.fq_poly_mul_reorder"]], "fq_poly_mul_univariate (c function)": [[51, "c.fq_poly_mul_univariate"]], "fq_poly_mulhigh (c function)": [[51, "c.fq_poly_mulhigh"]], "fq_poly_mulhigh_classical (c function)": [[51, "c.fq_poly_mulhigh_classical"]], "fq_poly_mullow (c function)": [[51, "c.fq_poly_mullow"]], "fq_poly_mullow_ks (c function)": [[51, "c.fq_poly_mullow_KS"]], "fq_poly_mullow_classical (c function)": [[51, "c.fq_poly_mullow_classical"]], "fq_poly_mullow_univariate (c function)": [[51, "c.fq_poly_mullow_univariate"]], "fq_poly_mulmod (c function)": [[51, "c.fq_poly_mulmod"]], "fq_poly_mulmod_preinv (c function)": [[51, "c.fq_poly_mulmod_preinv"]], "fq_poly_neg (c function)": [[51, "c.fq_poly_neg"]], "fq_poly_one (c function)": [[51, "c.fq_poly_one"]], "fq_poly_pow (c function)": [[51, "c.fq_poly_pow"]], "fq_poly_pow_trunc (c function)": [[51, "c.fq_poly_pow_trunc"]], "fq_poly_pow_trunc_binexp (c function)": [[51, "c.fq_poly_pow_trunc_binexp"]], "fq_poly_powmod_fmpz_binexp (c function)": [[51, "c.fq_poly_powmod_fmpz_binexp"]], "fq_poly_powmod_fmpz_binexp_preinv (c function)": [[51, "c.fq_poly_powmod_fmpz_binexp_preinv"]], "fq_poly_powmod_fmpz_sliding_preinv (c function)": [[51, "c.fq_poly_powmod_fmpz_sliding_preinv"]], "fq_poly_powmod_ui_binexp (c function)": [[51, "c.fq_poly_powmod_ui_binexp"]], "fq_poly_powmod_ui_binexp_preinv (c function)": [[51, "c.fq_poly_powmod_ui_binexp_preinv"]], "fq_poly_powmod_x_fmpz_preinv (c function)": [[51, "c.fq_poly_powmod_x_fmpz_preinv"]], "fq_poly_precompute_matrix (c function)": [[51, "c.fq_poly_precompute_matrix"]], "fq_poly_print (c function)": [[51, "c.fq_poly_print"]], "fq_poly_print_pretty (c function)": [[51, "c.fq_poly_print_pretty"]], "fq_poly_randtest (c function)": [[51, "c.fq_poly_randtest"]], "fq_poly_randtest_irreducible (c function)": [[51, "c.fq_poly_randtest_irreducible"]], "fq_poly_randtest_monic (c function)": [[51, "c.fq_poly_randtest_monic"]], "fq_poly_randtest_not_zero (c function)": [[51, "c.fq_poly_randtest_not_zero"]], "fq_poly_realloc (c function)": [[51, "c.fq_poly_realloc"]], "fq_poly_rem (c function)": [[51, "c.fq_poly_rem"]], "fq_poly_reverse (c function)": [[51, "c.fq_poly_reverse"]], "fq_poly_scalar_addmul_fq (c function)": [[51, "c.fq_poly_scalar_addmul_fq"]], "fq_poly_scalar_div_fq (c function)": [[51, "c.fq_poly_scalar_div_fq"]], "fq_poly_scalar_mul_fq (c function)": [[51, "c.fq_poly_scalar_mul_fq"]], "fq_poly_scalar_submul_fq (c function)": [[51, "c.fq_poly_scalar_submul_fq"]], "fq_poly_set (c function)": [[51, "c.fq_poly_set"]], "fq_poly_set_coeff (c function)": [[51, "c.fq_poly_set_coeff"]], "fq_poly_set_coeff_fmpz (c function)": [[51, "c.fq_poly_set_coeff_fmpz"]], "fq_poly_set_fmpz_mod_poly (c function)": [[51, "c.fq_poly_set_fmpz_mod_poly"]], "fq_poly_set_fq (c function)": [[51, "c.fq_poly_set_fq"]], "fq_poly_set_nmod_poly (c function)": [[51, "c.fq_poly_set_nmod_poly"]], "fq_poly_set_trunc (c function)": [[51, "c.fq_poly_set_trunc"]], "fq_poly_shift_left (c function)": [[51, "c.fq_poly_shift_left"]], "fq_poly_shift_right (c function)": [[51, "c.fq_poly_shift_right"]], "fq_poly_sqr (c function)": [[51, "c.fq_poly_sqr"]], "fq_poly_sqr_ks (c function)": [[51, "c.fq_poly_sqr_KS"]], "fq_poly_sqr_classical (c function)": [[51, "c.fq_poly_sqr_classical"]], "fq_poly_sqr_reorder (c function)": [[51, "c.fq_poly_sqr_reorder"]], "fq_poly_sqrt (c function)": [[51, "c.fq_poly_sqrt"]], "fq_poly_sqrt_series (c function)": [[51, "c.fq_poly_sqrt_series"]], "fq_poly_struct (c type)": [[51, "c.fq_poly_struct"]], "fq_poly_sub (c function)": [[51, "c.fq_poly_sub"]], "fq_poly_sub_series (c function)": [[51, "c.fq_poly_sub_series"]], "fq_poly_swap (c function)": [[51, "c.fq_poly_swap"]], "fq_poly_t (c type)": [[51, "c.fq_poly_t"]], "fq_poly_truncate (c function)": [[51, "c.fq_poly_truncate"]], "fq_poly_xgcd (c function)": [[51, "c.fq_poly_xgcd"]], "fq_poly_xgcd_euclidean (c function)": [[51, "c.fq_poly_xgcd_euclidean"]], "fq_poly_xgcd_euclidean_f (c function)": [[51, "c.fq_poly_xgcd_euclidean_f"]], "fq_poly_zero (c function)": [[51, "c.fq_poly_zero"]], "_fq_poly_is_squarefree (c function)": [[52, "c._fq_poly_is_squarefree"]], "fq_poly_factor (c function)": [[52, "c.fq_poly_factor"]], "fq_poly_factor_berlekamp (c function)": [[52, "c.fq_poly_factor_berlekamp"]], "fq_poly_factor_cantor_zassenhaus (c function)": [[52, "c.fq_poly_factor_cantor_zassenhaus"]], "fq_poly_factor_clear (c function)": [[52, "c.fq_poly_factor_clear"]], "fq_poly_factor_concat (c function)": [[52, "c.fq_poly_factor_concat"]], "fq_poly_factor_distinct_deg (c function)": [[52, "c.fq_poly_factor_distinct_deg"]], "fq_poly_factor_equal_deg (c function)": [[52, "c.fq_poly_factor_equal_deg"]], "fq_poly_factor_equal_deg_prob (c function)": [[52, "c.fq_poly_factor_equal_deg_prob"]], "fq_poly_factor_fit_length (c function)": [[52, "c.fq_poly_factor_fit_length"]], "fq_poly_factor_init (c function)": [[52, "c.fq_poly_factor_init"]], "fq_poly_factor_insert (c function)": [[52, "c.fq_poly_factor_insert"]], "fq_poly_factor_kaltofen_shoup (c function)": [[52, "c.fq_poly_factor_kaltofen_shoup"]], "fq_poly_factor_pow (c function)": [[52, "c.fq_poly_factor_pow"]], "fq_poly_factor_print (c function)": [[52, "c.fq_poly_factor_print"]], "fq_poly_factor_print_pretty (c function)": [[52, "c.fq_poly_factor_print_pretty"]], "fq_poly_factor_realloc (c function)": [[52, "c.fq_poly_factor_realloc"]], "fq_poly_factor_set (c function)": [[52, "c.fq_poly_factor_set"]], "fq_poly_factor_split_single (c function)": [[52, "c.fq_poly_factor_split_single"]], "fq_poly_factor_squarefree (c function)": [[52, "c.fq_poly_factor_squarefree"]], "fq_poly_factor_struct (c type)": [[52, "c.fq_poly_factor_struct"]], "fq_poly_factor_t (c type)": [[52, "c.fq_poly_factor_t"]], "fq_poly_factor_with_berlekamp (c function)": [[52, "c.fq_poly_factor_with_berlekamp"]], "fq_poly_factor_with_cantor_zassenhaus (c function)": [[52, "c.fq_poly_factor_with_cantor_zassenhaus"]], "fq_poly_factor_with_kaltofen_shoup (c function)": [[52, "c.fq_poly_factor_with_kaltofen_shoup"]], "fq_poly_is_irreducible (c function)": [[52, "c.fq_poly_is_irreducible"]], "fq_poly_is_irreducible_ben_or (c function)": [[52, "c.fq_poly_is_irreducible_ben_or"]], "fq_poly_is_irreducible_ddf (c function)": [[52, "c.fq_poly_is_irreducible_ddf"]], "fq_poly_is_squarefree (c function)": [[52, "c.fq_poly_is_squarefree"]], "fq_poly_iterated_frobenius_preinv (c function)": [[52, "c.fq_poly_iterated_frobenius_preinv"]], "fq_poly_remove (c function)": [[52, "c.fq_poly_remove"]], "fq_poly_roots (c function)": [[52, "c.fq_poly_roots"]], "_fq_vec_add (c function)": [[53, "c._fq_vec_add"]], "_fq_vec_clear (c function)": [[53, "c._fq_vec_clear"]], "_fq_vec_dot (c function)": [[53, "c._fq_vec_dot"]], "_fq_vec_equal (c function)": [[53, "c._fq_vec_equal"]], "_fq_vec_fprint (c function)": [[53, "c._fq_vec_fprint"]], "_fq_vec_init (c function)": [[53, "c._fq_vec_init"]], "_fq_vec_is_zero (c function)": [[53, "c._fq_vec_is_zero"]], "_fq_vec_neg (c function)": [[53, "c._fq_vec_neg"]], "_fq_vec_print (c function)": [[53, "c._fq_vec_print"]], "_fq_vec_randtest (c function)": [[53, "c._fq_vec_randtest"]], "_fq_vec_scalar_addmul_fq (c function)": [[53, "c._fq_vec_scalar_addmul_fq"]], "_fq_vec_scalar_submul_fq (c function)": [[53, "c._fq_vec_scalar_submul_fq"]], "_fq_vec_set (c function)": [[53, "c._fq_vec_set"]], "_fq_vec_sub (c function)": [[53, "c._fq_vec_sub"]], "_fq_vec_swap (c function)": [[53, "c._fq_vec_swap"]], "_fq_vec_zero (c function)": [[53, "c._fq_vec_zero"]], "_fq_zech_ctx_init_conway (c function)": [[54, "c._fq_zech_ctx_init_conway"]], "_fq_zech_dense_reduce (c function)": [[54, "c._fq_zech_dense_reduce"]], "_fq_zech_inv (c function)": [[54, "c._fq_zech_inv"]], "_fq_zech_pow (c function)": [[54, "c._fq_zech_pow"]], "_fq_zech_reduce (c function)": [[54, "c._fq_zech_reduce"]], "_fq_zech_sparse_reduce (c function)": [[54, "c._fq_zech_sparse_reduce"]], "fq_zech_add (c function)": [[54, "c.fq_zech_add"]], "fq_zech_bit_pack (c function)": [[54, "c.fq_zech_bit_pack"]], "fq_zech_bit_unpack (c function)": [[54, "c.fq_zech_bit_unpack"]], "fq_zech_clear (c function)": [[54, "c.fq_zech_clear"]], "fq_zech_ctx_clear (c function)": [[54, "c.fq_zech_ctx_clear"]], "fq_zech_ctx_degree (c function)": [[54, "c.fq_zech_ctx_degree"]], "fq_zech_ctx_fprint (c function)": [[54, "c.fq_zech_ctx_fprint"]], "fq_zech_ctx_init (c function)": [[54, "c.fq_zech_ctx_init"]], "fq_zech_ctx_init_conway (c function)": [[54, "c.fq_zech_ctx_init_conway"]], "fq_zech_ctx_init_fq_nmod_ctx (c function)": [[54, "c.fq_zech_ctx_init_fq_nmod_ctx"]], "fq_zech_ctx_init_fq_nmod_ctx_check (c function)": [[54, "c.fq_zech_ctx_init_fq_nmod_ctx_check"]], "fq_zech_ctx_init_modulus (c function)": [[54, "c.fq_zech_ctx_init_modulus"]], "fq_zech_ctx_init_modulus_check (c function)": [[54, "c.fq_zech_ctx_init_modulus_check"]], "fq_zech_ctx_init_random (c function)": [[54, "c.fq_zech_ctx_init_random"]], "fq_zech_ctx_modulus (c function)": [[54, "c.fq_zech_ctx_modulus"]], "fq_zech_ctx_order (c function)": [[54, "c.fq_zech_ctx_order"]], "fq_zech_ctx_order_ui (c function)": [[54, "c.fq_zech_ctx_order_ui"]], "fq_zech_ctx_prime (c function)": [[54, "c.fq_zech_ctx_prime"]], "fq_zech_ctx_print (c function)": [[54, "c.fq_zech_ctx_print"]], "fq_zech_ctx_randtest (c function)": [[54, "c.fq_zech_ctx_randtest"]], "fq_zech_ctx_randtest_reducible (c function)": [[54, "c.fq_zech_ctx_randtest_reducible"]], "fq_zech_ctx_struct (c type)": [[54, "c.fq_zech_ctx_struct"]], "fq_zech_ctx_t (c type)": [[54, "c.fq_zech_ctx_t"]], "fq_zech_div (c function)": [[54, "c.fq_zech_div"]], "fq_zech_equal (c function)": [[54, "c.fq_zech_equal"]], "fq_zech_fprint (c function)": [[54, "c.fq_zech_fprint"]], "fq_zech_fprint_pretty (c function)": [[54, "c.fq_zech_fprint_pretty"]], "fq_zech_frobenius (c function)": [[54, "c.fq_zech_frobenius"]], "fq_zech_gcdinv (c function)": [[54, "c.fq_zech_gcdinv"]], "fq_zech_gen (c function)": [[54, "c.fq_zech_gen"]], "fq_zech_get_fmpz (c function)": [[54, "c.fq_zech_get_fmpz"]], "fq_zech_get_fq_nmod (c function)": [[54, "c.fq_zech_get_fq_nmod"]], "fq_zech_get_nmod_mat (c function)": [[54, "c.fq_zech_get_nmod_mat"]], "fq_zech_get_nmod_poly (c function)": [[54, "c.fq_zech_get_nmod_poly"]], "fq_zech_get_str (c function)": [[54, "c.fq_zech_get_str"]], "fq_zech_get_str_pretty (c function)": [[54, "c.fq_zech_get_str_pretty"]], "fq_zech_init (c function)": [[54, "c.fq_zech_init"]], "fq_zech_init2 (c function)": [[54, "c.fq_zech_init2"]], "fq_zech_inv (c function)": [[54, "c.fq_zech_inv"]], "fq_zech_is_invertible (c function)": [[54, "c.fq_zech_is_invertible"]], "fq_zech_is_invertible_f (c function)": [[54, "c.fq_zech_is_invertible_f"]], "fq_zech_is_one (c function)": [[54, "c.fq_zech_is_one"]], "fq_zech_is_primitive (c function)": [[54, "c.fq_zech_is_primitive"]], "fq_zech_is_square (c function)": [[54, "c.fq_zech_is_square"]], "fq_zech_is_zero (c function)": [[54, "c.fq_zech_is_zero"]], "fq_zech_mul (c function)": [[54, "c.fq_zech_mul"]], "fq_zech_mul_fmpz (c function)": [[54, "c.fq_zech_mul_fmpz"]], "fq_zech_mul_si (c function)": [[54, "c.fq_zech_mul_si"]], "fq_zech_mul_ui (c function)": [[54, "c.fq_zech_mul_ui"]], "fq_zech_multiplicative_order (c function)": [[54, "c.fq_zech_multiplicative_order"]], "fq_zech_neg (c function)": [[54, "c.fq_zech_neg"]], "fq_zech_norm (c function)": [[54, "c.fq_zech_norm"]], "fq_zech_one (c function)": [[54, "c.fq_zech_one"]], "fq_zech_pow (c function)": [[54, "c.fq_zech_pow"]], "fq_zech_pow_ui (c function)": [[54, "c.fq_zech_pow_ui"]], "fq_zech_print (c function)": [[54, "c.fq_zech_print"]], "fq_zech_print_pretty (c function)": [[54, "c.fq_zech_print_pretty"]], "fq_zech_pth_root (c function)": [[54, "c.fq_zech_pth_root"]], "fq_zech_rand (c function)": [[54, "c.fq_zech_rand"]], "fq_zech_rand_not_zero (c function)": [[54, "c.fq_zech_rand_not_zero"]], "fq_zech_randtest (c function)": [[54, "c.fq_zech_randtest"]], "fq_zech_randtest_dense (c function)": [[54, "c.fq_zech_randtest_dense"]], "fq_zech_randtest_not_zero (c function)": [[54, "c.fq_zech_randtest_not_zero"]], "fq_zech_reduce (c function)": [[54, "c.fq_zech_reduce"]], "fq_zech_set (c function)": [[54, "c.fq_zech_set"]], "fq_zech_set_fmpz (c function)": [[54, "c.fq_zech_set_fmpz"]], "fq_zech_set_fq_nmod (c function)": [[54, "c.fq_zech_set_fq_nmod"]], "fq_zech_set_nmod_mat (c function)": [[54, "c.fq_zech_set_nmod_mat"]], "fq_zech_set_nmod_poly (c function)": [[54, "c.fq_zech_set_nmod_poly"]], "fq_zech_set_si (c function)": [[54, "c.fq_zech_set_si"]], "fq_zech_set_ui (c function)": [[54, "c.fq_zech_set_ui"]], "fq_zech_sqr (c function)": [[54, "c.fq_zech_sqr"]], "fq_zech_sqrt (c function)": [[54, "c.fq_zech_sqrt"]], "fq_zech_struct (c type)": [[54, "c.fq_zech_struct"]], "fq_zech_sub (c function)": [[54, "c.fq_zech_sub"]], "fq_zech_sub_one (c function)": [[54, "c.fq_zech_sub_one"]], "fq_zech_swap (c function)": [[54, "c.fq_zech_swap"]], "fq_zech_t (c type)": [[54, "c.fq_zech_t"]], "fq_zech_trace (c function)": [[54, "c.fq_zech_trace"]], "fq_zech_zero (c function)": [[54, "c.fq_zech_zero"]], "_fq_zech_embed_gens_naive (c function)": [[55, "c._fq_zech_embed_gens_naive"]], "fq_zech_embed_composition_matrix (c function)": [[55, "c.fq_zech_embed_composition_matrix"]], "fq_zech_embed_composition_matrix_sub (c function)": [[55, "c.fq_zech_embed_composition_matrix_sub"]], "fq_zech_embed_dual_to_mono_matrix (c function)": [[55, "c.fq_zech_embed_dual_to_mono_matrix"]], "fq_zech_embed_gens (c function)": [[55, "c.fq_zech_embed_gens"]], "fq_zech_embed_matrices (c function)": [[55, "c.fq_zech_embed_matrices"]], "fq_zech_embed_mono_to_dual_matrix (c function)": [[55, "c.fq_zech_embed_mono_to_dual_matrix"]], "fq_zech_embed_mul_matrix (c function)": [[55, "c.fq_zech_embed_mul_matrix"]], "fq_zech_embed_trace_matrix (c function)": [[55, "c.fq_zech_embed_trace_matrix"]], "fq_zech_modulus_derivative_inv (c function)": [[55, "c.fq_zech_modulus_derivative_inv"]], "fq_zech_modulus_pow_series_inv (c function)": [[55, "c.fq_zech_modulus_pow_series_inv"]], "fq_zech_mat_add (c function)": [[56, "c.fq_zech_mat_add"]], "fq_zech_mat_can_solve (c function)": [[56, "c.fq_zech_mat_can_solve"]], "fq_zech_mat_charpoly (c function)": [[56, "c.fq_zech_mat_charpoly"]], "fq_zech_mat_charpoly_danilevsky (c function)": [[56, "c.fq_zech_mat_charpoly_danilevsky"]], "fq_zech_mat_clear (c function)": [[56, "c.fq_zech_mat_clear"]], "fq_zech_mat_concat_horizontal (c function)": [[56, "c.fq_zech_mat_concat_horizontal"]], "fq_zech_mat_concat_vertical (c function)": [[56, "c.fq_zech_mat_concat_vertical"]], "fq_zech_mat_entry (c function)": [[56, "c.fq_zech_mat_entry"]], "fq_zech_mat_entry_set (c function)": [[56, "c.fq_zech_mat_entry_set"]], "fq_zech_mat_equal (c function)": [[56, "c.fq_zech_mat_equal"]], "fq_zech_mat_fprint (c function)": [[56, "c.fq_zech_mat_fprint"]], "fq_zech_mat_fprint_pretty (c function)": [[56, "c.fq_zech_mat_fprint_pretty"]], "fq_zech_mat_init (c function)": [[56, "c.fq_zech_mat_init"]], "fq_zech_mat_init_set (c function)": [[56, "c.fq_zech_mat_init_set"]], "fq_zech_mat_is_empty (c function)": [[56, "c.fq_zech_mat_is_empty"]], "fq_zech_mat_is_one (c function)": [[56, "c.fq_zech_mat_is_one"]], "fq_zech_mat_is_square (c function)": [[56, "c.fq_zech_mat_is_square"]], "fq_zech_mat_is_zero (c function)": [[56, "c.fq_zech_mat_is_zero"]], "fq_zech_mat_lu (c function)": [[56, "c.fq_zech_mat_lu"]], "fq_zech_mat_lu_classical (c function)": [[56, "c.fq_zech_mat_lu_classical"]], "fq_zech_mat_lu_recursive (c function)": [[56, "c.fq_zech_mat_lu_recursive"]], "fq_zech_mat_minpoly (c function)": [[56, "c.fq_zech_mat_minpoly"]], "fq_zech_mat_mul (c function)": [[56, "c.fq_zech_mat_mul"]], "fq_zech_mat_mul_ks (c function)": [[56, "c.fq_zech_mat_mul_KS"]], "fq_zech_mat_mul_classical (c function)": [[56, "c.fq_zech_mat_mul_classical"]], "fq_zech_mat_mul_vec (c function)": [[56, "c.fq_zech_mat_mul_vec"]], "fq_zech_mat_mul_vec_ptr (c function)": [[56, "c.fq_zech_mat_mul_vec_ptr"]], "fq_zech_mat_ncols (c function)": [[56, "c.fq_zech_mat_ncols"]], "fq_zech_mat_neg (c function)": [[56, "c.fq_zech_mat_neg"]], "fq_zech_mat_nrows (c function)": [[56, "c.fq_zech_mat_nrows"]], "fq_zech_mat_one (c function)": [[56, "c.fq_zech_mat_one"]], "fq_zech_mat_print (c function)": [[56, "c.fq_zech_mat_print"]], "fq_zech_mat_print_pretty (c function)": [[56, "c.fq_zech_mat_print_pretty"]], "fq_zech_mat_randops (c function)": [[56, "c.fq_zech_mat_randops"]], "fq_zech_mat_randpermdiag (c function)": [[56, "c.fq_zech_mat_randpermdiag"]], "fq_zech_mat_randrank (c function)": [[56, "c.fq_zech_mat_randrank"]], "fq_zech_mat_randtest (c function)": [[56, "c.fq_zech_mat_randtest"]], "fq_zech_mat_randtril (c function)": [[56, "c.fq_zech_mat_randtril"]], "fq_zech_mat_randtriu (c function)": [[56, "c.fq_zech_mat_randtriu"]], "fq_zech_mat_reduce_row (c function)": [[56, "c.fq_zech_mat_reduce_row"]], "fq_zech_mat_rref (c function)": [[56, "c.fq_zech_mat_rref"]], "fq_zech_mat_set (c function)": [[56, "c.fq_zech_mat_set"]], "fq_zech_mat_set_fmpz_mod_mat (c function)": [[56, "c.fq_zech_mat_set_fmpz_mod_mat"]], "fq_zech_mat_set_nmod_mat (c function)": [[56, "c.fq_zech_mat_set_nmod_mat"]], "fq_zech_mat_similarity (c function)": [[56, "c.fq_zech_mat_similarity"]], "fq_zech_mat_solve (c function)": [[56, "c.fq_zech_mat_solve"]], "fq_zech_mat_solve_tril (c function)": [[56, "c.fq_zech_mat_solve_tril"]], "fq_zech_mat_solve_tril_classical (c function)": [[56, "c.fq_zech_mat_solve_tril_classical"]], "fq_zech_mat_solve_tril_recursive (c function)": [[56, "c.fq_zech_mat_solve_tril_recursive"]], "fq_zech_mat_solve_triu (c function)": [[56, "c.fq_zech_mat_solve_triu"]], "fq_zech_mat_solve_triu_classical (c function)": [[56, "c.fq_zech_mat_solve_triu_classical"]], "fq_zech_mat_solve_triu_recursive (c function)": [[56, "c.fq_zech_mat_solve_triu_recursive"]], "fq_zech_mat_struct (c type)": [[56, "c.fq_zech_mat_struct"]], "fq_zech_mat_sub (c function)": [[56, "c.fq_zech_mat_sub"]], "fq_zech_mat_submul (c function)": [[56, "c.fq_zech_mat_submul"]], "fq_zech_mat_swap (c function)": [[56, "c.fq_zech_mat_swap"]], "fq_zech_mat_swap_entrywise (c function)": [[56, "c.fq_zech_mat_swap_entrywise"]], "fq_zech_mat_t (c type)": [[56, "c.fq_zech_mat_t"]], "fq_zech_mat_vec_mul (c function)": [[56, "c.fq_zech_mat_vec_mul"]], "fq_zech_mat_vec_mul_ptr (c function)": [[56, "c.fq_zech_mat_vec_mul_ptr"]], "fq_zech_mat_window_clear (c function)": [[56, "c.fq_zech_mat_window_clear"]], "fq_zech_mat_window_init (c function)": [[56, "c.fq_zech_mat_window_init"]], "fq_zech_mat_zero (c function)": [[56, "c.fq_zech_mat_zero"]], "_fq_zech_poly_add (c function)": [[57, "c._fq_zech_poly_add"]], "_fq_zech_poly_compose (c function)": [[57, "c._fq_zech_poly_compose"]], "_fq_zech_poly_compose_divconquer (c function)": [[57, "c._fq_zech_poly_compose_divconquer"]], "_fq_zech_poly_compose_horner (c function)": [[57, "c._fq_zech_poly_compose_horner"]], "_fq_zech_poly_compose_mod (c function)": [[57, "c._fq_zech_poly_compose_mod"]], "_fq_zech_poly_compose_mod_brent_kung (c function)": [[57, "c._fq_zech_poly_compose_mod_brent_kung"]], "_fq_zech_poly_compose_mod_brent_kung_precomp_preinv (c function)": [[57, "c._fq_zech_poly_compose_mod_brent_kung_precomp_preinv"]], "_fq_zech_poly_compose_mod_brent_kung_preinv (c function)": [[57, "c._fq_zech_poly_compose_mod_brent_kung_preinv"]], "_fq_zech_poly_compose_mod_horner (c function)": [[57, "c._fq_zech_poly_compose_mod_horner"]], "_fq_zech_poly_compose_mod_horner_preinv (c function)": [[57, "c._fq_zech_poly_compose_mod_horner_preinv"]], "_fq_zech_poly_compose_mod_preinv (c function)": [[57, "c._fq_zech_poly_compose_mod_preinv"]], "_fq_zech_poly_derivative (c function)": [[57, "c._fq_zech_poly_derivative"]], "_fq_zech_poly_div_basecase (c function)": [[57, "c._fq_zech_poly_div_basecase"]], "_fq_zech_poly_div_newton_n_preinv (c function)": [[57, "c._fq_zech_poly_div_newton_n_preinv"]], "_fq_zech_poly_div_series (c function)": [[57, "c._fq_zech_poly_div_series"]], "_fq_zech_poly_divides (c function)": [[57, "c._fq_zech_poly_divides"]], "_fq_zech_poly_divrem (c function)": [[57, "c._fq_zech_poly_divrem"]], "_fq_zech_poly_divrem_basecase (c function)": [[57, "c._fq_zech_poly_divrem_basecase"]], "_fq_zech_poly_divrem_divconquer (c function)": [[57, "c._fq_zech_poly_divrem_divconquer"]], "_fq_zech_poly_divrem_divconquer_recursive (c function)": [[57, "c._fq_zech_poly_divrem_divconquer_recursive"]], "_fq_zech_poly_divrem_newton_n_preinv (c function)": [[57, "c._fq_zech_poly_divrem_newton_n_preinv"]], "_fq_zech_poly_evaluate_fq_zech (c function)": [[57, "c._fq_zech_poly_evaluate_fq_zech"]], "_fq_zech_poly_fprint (c function)": [[57, "c._fq_zech_poly_fprint"]], "_fq_zech_poly_fprint_pretty (c function)": [[57, "c._fq_zech_poly_fprint_pretty"]], "_fq_zech_poly_gcd (c function)": [[57, "c._fq_zech_poly_gcd"]], "_fq_zech_poly_gcd_euclidean (c function)": [[57, "c._fq_zech_poly_gcd_euclidean"]], "_fq_zech_poly_gcd_euclidean_f (c function)": [[57, "c._fq_zech_poly_gcd_euclidean_f"]], "_fq_zech_poly_gcd_hgcd (c function)": [[57, "c._fq_zech_poly_gcd_hgcd"]], "_fq_zech_poly_get_str (c function)": [[57, "c._fq_zech_poly_get_str"]], "_fq_zech_poly_get_str_pretty (c function)": [[57, "c._fq_zech_poly_get_str_pretty"]], "_fq_zech_poly_hamming_weight (c function)": [[57, "c._fq_zech_poly_hamming_weight"]], "_fq_zech_poly_hgcd (c function)": [[57, "c._fq_zech_poly_hgcd"]], "_fq_zech_poly_inv_series (c function)": [[57, "c._fq_zech_poly_inv_series"]], "_fq_zech_poly_inv_series_newton (c function)": [[57, "c._fq_zech_poly_inv_series_newton"]], "_fq_zech_poly_invsqrt_series (c function)": [[57, "c._fq_zech_poly_invsqrt_series"]], "_fq_zech_poly_make_monic (c function)": [[57, "c._fq_zech_poly_make_monic"]], "_fq_zech_poly_mul (c function)": [[57, "c._fq_zech_poly_mul"]], "_fq_zech_poly_mul_ks (c function)": [[57, "c._fq_zech_poly_mul_KS"]], "_fq_zech_poly_mul_classical (c function)": [[57, "c._fq_zech_poly_mul_classical"]], "_fq_zech_poly_mul_reorder (c function)": [[57, "c._fq_zech_poly_mul_reorder"]], "_fq_zech_poly_mulhigh (c function)": [[57, "c._fq_zech_poly_mulhigh"]], "_fq_zech_poly_mulhigh_classical (c function)": [[57, "c._fq_zech_poly_mulhigh_classical"]], "_fq_zech_poly_mullow (c function)": [[57, "c._fq_zech_poly_mullow"]], "_fq_zech_poly_mullow_ks (c function)": [[57, "c._fq_zech_poly_mullow_KS"]], "_fq_zech_poly_mullow_classical (c function)": [[57, "c._fq_zech_poly_mullow_classical"]], "_fq_zech_poly_mulmod (c function)": [[57, "c._fq_zech_poly_mulmod"]], "_fq_zech_poly_mulmod_preinv (c function)": [[57, "c._fq_zech_poly_mulmod_preinv"]], "_fq_zech_poly_neg (c function)": [[57, "c._fq_zech_poly_neg"]], "_fq_zech_poly_normalise (c function)": [[57, "c._fq_zech_poly_normalise"]], "_fq_zech_poly_normalise2 (c function)": [[57, "c._fq_zech_poly_normalise2"]], "_fq_zech_poly_pow (c function)": [[57, "c._fq_zech_poly_pow"]], "_fq_zech_poly_pow_trunc (c function)": [[57, "c._fq_zech_poly_pow_trunc"]], "_fq_zech_poly_pow_trunc_binexp (c function)": [[57, "c._fq_zech_poly_pow_trunc_binexp"]], "_fq_zech_poly_powmod_fmpz_binexp (c function)": [[57, "c._fq_zech_poly_powmod_fmpz_binexp"]], "_fq_zech_poly_powmod_fmpz_binexp_preinv (c function)": [[57, "c._fq_zech_poly_powmod_fmpz_binexp_preinv"]], "_fq_zech_poly_powmod_fmpz_sliding_preinv (c function)": [[57, "c._fq_zech_poly_powmod_fmpz_sliding_preinv"]], "_fq_zech_poly_powmod_ui_binexp (c function)": [[57, "c._fq_zech_poly_powmod_ui_binexp"]], "_fq_zech_poly_powmod_ui_binexp_preinv (c function)": [[57, "c._fq_zech_poly_powmod_ui_binexp_preinv"]], "_fq_zech_poly_powmod_x_fmpz_preinv (c function)": [[57, "c._fq_zech_poly_powmod_x_fmpz_preinv"]], "_fq_zech_poly_precompute_matrix (c function)": [[57, "c._fq_zech_poly_precompute_matrix"]], "_fq_zech_poly_print (c function)": [[57, "c._fq_zech_poly_print"]], "_fq_zech_poly_print_pretty (c function)": [[57, "c._fq_zech_poly_print_pretty"]], "_fq_zech_poly_reduce_matrix_mod_poly (c function)": [[57, "c._fq_zech_poly_reduce_matrix_mod_poly"]], "_fq_zech_poly_rem (c function)": [[57, "c._fq_zech_poly_rem"]], "_fq_zech_poly_reverse (c function)": [[57, "c._fq_zech_poly_reverse"]], "_fq_zech_poly_scalar_addmul_fq_zech (c function)": [[57, "c._fq_zech_poly_scalar_addmul_fq_zech"]], "_fq_zech_poly_scalar_div_fq (c function)": [[57, "c._fq_zech_poly_scalar_div_fq"]], "_fq_zech_poly_scalar_mul_fq_zech (c function)": [[57, "c._fq_zech_poly_scalar_mul_fq_zech"]], "_fq_zech_poly_scalar_submul_fq_zech (c function)": [[57, "c._fq_zech_poly_scalar_submul_fq_zech"]], "_fq_zech_poly_set (c function)": [[57, "c._fq_zech_poly_set"]], "_fq_zech_poly_set_length (c function)": [[57, "c._fq_zech_poly_set_length"]], "_fq_zech_poly_shift_left (c function)": [[57, "c._fq_zech_poly_shift_left"]], "_fq_zech_poly_shift_right (c function)": [[57, "c._fq_zech_poly_shift_right"]], "_fq_zech_poly_sqr (c function)": [[57, "c._fq_zech_poly_sqr"]], "_fq_zech_poly_sqr_ks (c function)": [[57, "c._fq_zech_poly_sqr_KS"]], "_fq_zech_poly_sqr_classical (c function)": [[57, "c._fq_zech_poly_sqr_classical"]], "_fq_zech_poly_sqrt (c function)": [[57, "c._fq_zech_poly_sqrt"]], "_fq_zech_poly_sqrt_series (c function)": [[57, "c._fq_zech_poly_sqrt_series"]], "_fq_zech_poly_sub (c function)": [[57, "c._fq_zech_poly_sub"]], "_fq_zech_poly_xgcd (c function)": [[57, "c._fq_zech_poly_xgcd"]], "_fq_zech_poly_xgcd_euclidean (c function)": [[57, "c._fq_zech_poly_xgcd_euclidean"]], "_fq_zech_poly_xgcd_euclidean_f (c function)": [[57, "c._fq_zech_poly_xgcd_euclidean_f"]], "_fq_zech_poly_zero (c function)": [[57, "c._fq_zech_poly_zero"]], "fq_zech_poly_add (c function)": [[57, "c.fq_zech_poly_add"]], "fq_zech_poly_add_series (c function)": [[57, "c.fq_zech_poly_add_series"]], "fq_zech_poly_add_si (c function)": [[57, "c.fq_zech_poly_add_si"]], "fq_zech_poly_clear (c function)": [[57, "c.fq_zech_poly_clear"]], "fq_zech_poly_compose (c function)": [[57, "c.fq_zech_poly_compose"]], "fq_zech_poly_compose_divconquer (c function)": [[57, "c.fq_zech_poly_compose_divconquer"]], "fq_zech_poly_compose_horner (c function)": [[57, "c.fq_zech_poly_compose_horner"]], "fq_zech_poly_compose_mod (c function)": [[57, "c.fq_zech_poly_compose_mod"]], "fq_zech_poly_compose_mod_brent_kung (c function)": [[57, "c.fq_zech_poly_compose_mod_brent_kung"]], "fq_zech_poly_compose_mod_brent_kung_precomp_preinv (c function)": [[57, "c.fq_zech_poly_compose_mod_brent_kung_precomp_preinv"]], "fq_zech_poly_compose_mod_brent_kung_preinv (c function)": [[57, "c.fq_zech_poly_compose_mod_brent_kung_preinv"]], "fq_zech_poly_compose_mod_horner (c function)": [[57, "c.fq_zech_poly_compose_mod_horner"]], "fq_zech_poly_compose_mod_horner_preinv (c function)": [[57, "c.fq_zech_poly_compose_mod_horner_preinv"]], "fq_zech_poly_compose_mod_preinv (c function)": [[57, "c.fq_zech_poly_compose_mod_preinv"]], "fq_zech_poly_deflate (c function)": [[57, "c.fq_zech_poly_deflate"]], "fq_zech_poly_deflation (c function)": [[57, "c.fq_zech_poly_deflation"]], "fq_zech_poly_degree (c function)": [[57, "c.fq_zech_poly_degree"]], "fq_zech_poly_derivative (c function)": [[57, "c.fq_zech_poly_derivative"]], "fq_zech_poly_div_basecase (c function)": [[57, "c.fq_zech_poly_div_basecase"]], "fq_zech_poly_div_newton_n_preinv (c function)": [[57, "c.fq_zech_poly_div_newton_n_preinv"]], "fq_zech_poly_div_series (c function)": [[57, "c.fq_zech_poly_div_series"]], "fq_zech_poly_divides (c function)": [[57, "c.fq_zech_poly_divides"]], "fq_zech_poly_divrem (c function)": [[57, "c.fq_zech_poly_divrem"]], "fq_zech_poly_divrem_basecase (c function)": [[57, "c.fq_zech_poly_divrem_basecase"]], "fq_zech_poly_divrem_divconquer (c function)": [[57, "c.fq_zech_poly_divrem_divconquer"]], "fq_zech_poly_divrem_f (c function)": [[57, "c.fq_zech_poly_divrem_f"]], "fq_zech_poly_divrem_newton_n_preinv (c function)": [[57, "c.fq_zech_poly_divrem_newton_n_preinv"]], "fq_zech_poly_equal (c function)": [[57, "c.fq_zech_poly_equal"]], "fq_zech_poly_equal_fq_zech (c function)": [[57, "c.fq_zech_poly_equal_fq_zech"]], "fq_zech_poly_equal_trunc (c function)": [[57, "c.fq_zech_poly_equal_trunc"]], "fq_zech_poly_evaluate_fq_zech (c function)": [[57, "c.fq_zech_poly_evaluate_fq_zech"]], "fq_zech_poly_fit_length (c function)": [[57, "c.fq_zech_poly_fit_length"]], "fq_zech_poly_fprint (c function)": [[57, "c.fq_zech_poly_fprint"]], "fq_zech_poly_fprint_pretty (c function)": [[57, "c.fq_zech_poly_fprint_pretty"]], "fq_zech_poly_gcd (c function)": [[57, "c.fq_zech_poly_gcd"]], "fq_zech_poly_gcd_euclidean (c function)": [[57, "c.fq_zech_poly_gcd_euclidean"]], "fq_zech_poly_gcd_euclidean_f (c function)": [[57, "c.fq_zech_poly_gcd_euclidean_f"]], "fq_zech_poly_gcd_hgcd (c function)": [[57, "c.fq_zech_poly_gcd_hgcd"]], "fq_zech_poly_gen (c function)": [[57, "c.fq_zech_poly_gen"]], "fq_zech_poly_get_coeff (c function)": [[57, "c.fq_zech_poly_get_coeff"]], "fq_zech_poly_get_str (c function)": [[57, "c.fq_zech_poly_get_str"]], "fq_zech_poly_get_str_pretty (c function)": [[57, "c.fq_zech_poly_get_str_pretty"]], "fq_zech_poly_hamming_weight (c function)": [[57, "c.fq_zech_poly_hamming_weight"]], "fq_zech_poly_inflate (c function)": [[57, "c.fq_zech_poly_inflate"]], "fq_zech_poly_init (c function)": [[57, "c.fq_zech_poly_init"]], "fq_zech_poly_init2 (c function)": [[57, "c.fq_zech_poly_init2"]], "fq_zech_poly_inv_series (c function)": [[57, "c.fq_zech_poly_inv_series"]], "fq_zech_poly_inv_series_newton (c function)": [[57, "c.fq_zech_poly_inv_series_newton"]], "fq_zech_poly_invsqrt_series (c function)": [[57, "c.fq_zech_poly_invsqrt_series"]], "fq_zech_poly_is_gen (c function)": [[57, "c.fq_zech_poly_is_gen"]], "fq_zech_poly_is_one (c function)": [[57, "c.fq_zech_poly_is_one"]], "fq_zech_poly_is_unit (c function)": [[57, "c.fq_zech_poly_is_unit"]], "fq_zech_poly_is_zero (c function)": [[57, "c.fq_zech_poly_is_zero"]], "fq_zech_poly_lead (c function)": [[57, "c.fq_zech_poly_lead"]], "fq_zech_poly_length (c function)": [[57, "c.fq_zech_poly_length"]], "fq_zech_poly_make_monic (c function)": [[57, "c.fq_zech_poly_make_monic"]], "fq_zech_poly_mul (c function)": [[57, "c.fq_zech_poly_mul"]], "fq_zech_poly_mul_ks (c function)": [[57, "c.fq_zech_poly_mul_KS"]], "fq_zech_poly_mul_classical (c function)": [[57, "c.fq_zech_poly_mul_classical"]], "fq_zech_poly_mul_reorder (c function)": [[57, "c.fq_zech_poly_mul_reorder"]], "fq_zech_poly_mulhigh (c function)": [[57, "c.fq_zech_poly_mulhigh"]], "fq_zech_poly_mulhigh_classical (c function)": [[57, "c.fq_zech_poly_mulhigh_classical"]], "fq_zech_poly_mullow (c function)": [[57, "c.fq_zech_poly_mullow"]], "fq_zech_poly_mullow_ks (c function)": [[57, "c.fq_zech_poly_mullow_KS"]], "fq_zech_poly_mullow_classical (c function)": [[57, "c.fq_zech_poly_mullow_classical"]], "fq_zech_poly_mulmod (c function)": [[57, "c.fq_zech_poly_mulmod"]], "fq_zech_poly_mulmod_preinv (c function)": [[57, "c.fq_zech_poly_mulmod_preinv"]], "fq_zech_poly_neg (c function)": [[57, "c.fq_zech_poly_neg"]], "fq_zech_poly_one (c function)": [[57, "c.fq_zech_poly_one"]], "fq_zech_poly_pow (c function)": [[57, "c.fq_zech_poly_pow"]], "fq_zech_poly_pow_trunc (c function)": [[57, "c.fq_zech_poly_pow_trunc"]], "fq_zech_poly_pow_trunc_binexp (c function)": [[57, "c.fq_zech_poly_pow_trunc_binexp"]], "fq_zech_poly_powmod_fmpz_binexp (c function)": [[57, "c.fq_zech_poly_powmod_fmpz_binexp"]], "fq_zech_poly_powmod_fmpz_binexp_preinv (c function)": [[57, "c.fq_zech_poly_powmod_fmpz_binexp_preinv"]], "fq_zech_poly_powmod_fmpz_sliding_preinv (c function)": [[57, "c.fq_zech_poly_powmod_fmpz_sliding_preinv"]], "fq_zech_poly_powmod_ui_binexp (c function)": [[57, "c.fq_zech_poly_powmod_ui_binexp"]], "fq_zech_poly_powmod_ui_binexp_preinv (c function)": [[57, "c.fq_zech_poly_powmod_ui_binexp_preinv"]], "fq_zech_poly_powmod_x_fmpz_preinv (c function)": [[57, "c.fq_zech_poly_powmod_x_fmpz_preinv"]], "fq_zech_poly_precompute_matrix (c function)": [[57, "c.fq_zech_poly_precompute_matrix"]], "fq_zech_poly_print (c function)": [[57, "c.fq_zech_poly_print"]], "fq_zech_poly_print_pretty (c function)": [[57, "c.fq_zech_poly_print_pretty"]], "fq_zech_poly_randtest (c function)": [[57, "c.fq_zech_poly_randtest"]], "fq_zech_poly_randtest_irreducible (c function)": [[57, "c.fq_zech_poly_randtest_irreducible"]], "fq_zech_poly_randtest_monic (c function)": [[57, "c.fq_zech_poly_randtest_monic"]], "fq_zech_poly_randtest_not_zero (c function)": [[57, "c.fq_zech_poly_randtest_not_zero"]], "fq_zech_poly_realloc (c function)": [[57, "c.fq_zech_poly_realloc"]], "fq_zech_poly_rem (c function)": [[57, "c.fq_zech_poly_rem"]], "fq_zech_poly_reverse (c function)": [[57, "c.fq_zech_poly_reverse"]], "fq_zech_poly_scalar_addmul_fq_zech (c function)": [[57, "c.fq_zech_poly_scalar_addmul_fq_zech"]], "fq_zech_poly_scalar_div_fq (c function)": [[57, "c.fq_zech_poly_scalar_div_fq"]], "fq_zech_poly_scalar_mul_fq_zech (c function)": [[57, "c.fq_zech_poly_scalar_mul_fq_zech"]], "fq_zech_poly_scalar_submul_fq_zech (c function)": [[57, "c.fq_zech_poly_scalar_submul_fq_zech"]], "fq_zech_poly_set (c function)": [[57, "c.fq_zech_poly_set"]], "fq_zech_poly_set_coeff (c function)": [[57, "c.fq_zech_poly_set_coeff"]], "fq_zech_poly_set_coeff_fmpz (c function)": [[57, "c.fq_zech_poly_set_coeff_fmpz"]], "fq_zech_poly_set_fmpz_mod_poly (c function)": [[57, "c.fq_zech_poly_set_fmpz_mod_poly"]], "fq_zech_poly_set_fq_zech (c function)": [[57, "c.fq_zech_poly_set_fq_zech"]], "fq_zech_poly_set_nmod_poly (c function)": [[57, "c.fq_zech_poly_set_nmod_poly"]], "fq_zech_poly_set_trunc (c function)": [[57, "c.fq_zech_poly_set_trunc"]], "fq_zech_poly_shift_left (c function)": [[57, "c.fq_zech_poly_shift_left"]], "fq_zech_poly_shift_right (c function)": [[57, "c.fq_zech_poly_shift_right"]], "fq_zech_poly_sqr (c function)": [[57, "c.fq_zech_poly_sqr"]], "fq_zech_poly_sqr_ks (c function)": [[57, "c.fq_zech_poly_sqr_KS"]], "fq_zech_poly_sqr_classical (c function)": [[57, "c.fq_zech_poly_sqr_classical"]], "fq_zech_poly_sqrt (c function)": [[57, "c.fq_zech_poly_sqrt"]], "fq_zech_poly_sqrt_series (c function)": [[57, "c.fq_zech_poly_sqrt_series"]], "fq_zech_poly_struct (c type)": [[57, "c.fq_zech_poly_struct"]], "fq_zech_poly_sub (c function)": [[57, "c.fq_zech_poly_sub"]], "fq_zech_poly_sub_series (c function)": [[57, "c.fq_zech_poly_sub_series"]], "fq_zech_poly_swap (c function)": [[57, "c.fq_zech_poly_swap"]], "fq_zech_poly_t (c type)": [[57, "c.fq_zech_poly_t"]], "fq_zech_poly_truncate (c function)": [[57, "c.fq_zech_poly_truncate"]], "fq_zech_poly_xgcd (c function)": [[57, "c.fq_zech_poly_xgcd"]], "fq_zech_poly_xgcd_euclidean (c function)": [[57, "c.fq_zech_poly_xgcd_euclidean"]], "fq_zech_poly_xgcd_euclidean_f (c function)": [[57, "c.fq_zech_poly_xgcd_euclidean_f"]], "fq_zech_poly_zero (c function)": [[57, "c.fq_zech_poly_zero"]], "_fq_zech_poly_is_squarefree (c function)": [[58, "c._fq_zech_poly_is_squarefree"]], "fq_zech_poly_factor (c function)": [[58, "c.fq_zech_poly_factor"]], "fq_zech_poly_factor_berlekamp (c function)": [[58, "c.fq_zech_poly_factor_berlekamp"]], "fq_zech_poly_factor_cantor_zassenhaus (c function)": [[58, "c.fq_zech_poly_factor_cantor_zassenhaus"]], "fq_zech_poly_factor_clear (c function)": [[58, "c.fq_zech_poly_factor_clear"]], "fq_zech_poly_factor_concat (c function)": [[58, "c.fq_zech_poly_factor_concat"]], "fq_zech_poly_factor_distinct_deg (c function)": [[58, "c.fq_zech_poly_factor_distinct_deg"]], "fq_zech_poly_factor_equal_deg (c function)": [[58, "c.fq_zech_poly_factor_equal_deg"]], "fq_zech_poly_factor_equal_deg_prob (c function)": [[58, "c.fq_zech_poly_factor_equal_deg_prob"]], "fq_zech_poly_factor_fit_length (c function)": [[58, "c.fq_zech_poly_factor_fit_length"]], "fq_zech_poly_factor_init (c function)": [[58, "c.fq_zech_poly_factor_init"]], "fq_zech_poly_factor_insert (c function)": [[58, "c.fq_zech_poly_factor_insert"]], "fq_zech_poly_factor_kaltofen_shoup (c function)": [[58, "c.fq_zech_poly_factor_kaltofen_shoup"]], "fq_zech_poly_factor_pow (c function)": [[58, "c.fq_zech_poly_factor_pow"]], "fq_zech_poly_factor_print (c function)": [[58, "c.fq_zech_poly_factor_print"]], "fq_zech_poly_factor_print_pretty (c function)": [[58, "c.fq_zech_poly_factor_print_pretty"]], "fq_zech_poly_factor_realloc (c function)": [[58, "c.fq_zech_poly_factor_realloc"]], "fq_zech_poly_factor_set (c function)": [[58, "c.fq_zech_poly_factor_set"]], "fq_zech_poly_factor_split_single (c function)": [[58, "c.fq_zech_poly_factor_split_single"]], "fq_zech_poly_factor_squarefree (c function)": [[58, "c.fq_zech_poly_factor_squarefree"]], "fq_zech_poly_factor_struct (c type)": [[58, "c.fq_zech_poly_factor_struct"]], "fq_zech_poly_factor_t (c type)": [[58, "c.fq_zech_poly_factor_t"]], "fq_zech_poly_factor_with_berlekamp (c function)": [[58, "c.fq_zech_poly_factor_with_berlekamp"]], "fq_zech_poly_factor_with_cantor_zassenhaus (c function)": [[58, "c.fq_zech_poly_factor_with_cantor_zassenhaus"]], "fq_zech_poly_factor_with_kaltofen_shoup (c function)": [[58, "c.fq_zech_poly_factor_with_kaltofen_shoup"]], "fq_zech_poly_is_irreducible (c function)": [[58, "c.fq_zech_poly_is_irreducible"]], "fq_zech_poly_is_irreducible_ben_or (c function)": [[58, "c.fq_zech_poly_is_irreducible_ben_or"]], "fq_zech_poly_is_irreducible_ddf (c function)": [[58, "c.fq_zech_poly_is_irreducible_ddf"]], "fq_zech_poly_is_squarefree (c function)": [[58, "c.fq_zech_poly_is_squarefree"]], "fq_zech_poly_iterated_frobenius_preinv (c function)": [[58, "c.fq_zech_poly_iterated_frobenius_preinv"]], "fq_zech_poly_remove (c function)": [[58, "c.fq_zech_poly_remove"]], "fq_zech_poly_roots (c function)": [[58, "c.fq_zech_poly_roots"]], "_fq_zech_vec_add (c function)": [[59, "c._fq_zech_vec_add"]], "_fq_zech_vec_clear (c function)": [[59, "c._fq_zech_vec_clear"]], "_fq_zech_vec_dot (c function)": [[59, "c._fq_zech_vec_dot"]], "_fq_zech_vec_equal (c function)": [[59, "c._fq_zech_vec_equal"]], "_fq_zech_vec_fprint (c function)": [[59, "c._fq_zech_vec_fprint"]], "_fq_zech_vec_init (c function)": [[59, "c._fq_zech_vec_init"]], "_fq_zech_vec_is_zero (c function)": [[59, "c._fq_zech_vec_is_zero"]], "_fq_zech_vec_neg (c function)": [[59, "c._fq_zech_vec_neg"]], "_fq_zech_vec_print (c function)": [[59, "c._fq_zech_vec_print"]], "_fq_zech_vec_randtest (c function)": [[59, "c._fq_zech_vec_randtest"]], "_fq_zech_vec_scalar_addmul_fq_zech (c function)": [[59, "c._fq_zech_vec_scalar_addmul_fq_zech"]], "_fq_zech_vec_scalar_submul_fq_zech (c function)": [[59, "c._fq_zech_vec_scalar_submul_fq_zech"]], "_fq_zech_vec_set (c function)": [[59, "c._fq_zech_vec_set"]], "_fq_zech_vec_sub (c function)": [[59, "c._fq_zech_vec_sub"]], "_fq_zech_vec_swap (c function)": [[59, "c._fq_zech_vec_swap"]], "_fq_zech_vec_zero (c function)": [[59, "c._fq_zech_vec_zero"]], "z_kronecker (c function)": [[62, "c.z_kronecker"]], "z_mul_checked (c function)": [[62, "c.z_mul_checked"]], "z_randint (c function)": [[62, "c.z_randint"]], "z_randtest (c function)": [[62, "c.z_randtest"]], "z_randtest_not_zero (c function)": [[62, "c.z_randtest_not_zero"]], "z_sizeinbase (c function)": [[62, "c.z_sizeinbase"]], "add_ssaaaa (c macro)": [[63, "c.add_ssaaaa"]], "add_sssaaaaaa (c macro)": [[63, "c.add_sssaaaaaa"]], "byte_swap (c macro)": [[63, "c.byte_swap"]], "count_leading_zeros (c macro)": [[63, "c.count_leading_zeros"]], "count_trailing_zeros (c macro)": [[63, "c.count_trailing_zeros"]], "invert_limb (c macro)": [[63, "c.invert_limb"]], "sdiv_qrnnd (c macro)": [[63, "c.sdiv_qrnnd"]], "smul_ppmm (c macro)": [[63, "c.smul_ppmm"]], "sub_dddmmmsss (c macro)": [[63, "c.sub_dddmmmsss"]], "sub_ddmmss (c macro)": [[63, "c.sub_ddmmss"]], "udiv_qrnnd (c macro)": [[63, "c.udiv_qrnnd"]], "udiv_qrnnd_preinv (c macro)": [[63, "c.udiv_qrnnd_preinv"]], "umul_ppmm (c macro)": [[63, "c.umul_ppmm"]], "mpf_mat_approx_equal (c function)": [[66, "c.mpf_mat_approx_equal"]], "mpf_mat_clear (c function)": [[66, "c.mpf_mat_clear"]], "mpf_mat_entry (c function)": [[66, "c.mpf_mat_entry"]], "mpf_mat_equal (c function)": [[66, "c.mpf_mat_equal"]], "mpf_mat_gso (c function)": [[66, "c.mpf_mat_gso"]], "mpf_mat_init (c function)": [[66, "c.mpf_mat_init"]], "mpf_mat_is_empty (c function)": [[66, "c.mpf_mat_is_empty"]], "mpf_mat_is_square (c function)": [[66, "c.mpf_mat_is_square"]], "mpf_mat_is_zero (c function)": [[66, "c.mpf_mat_is_zero"]], "mpf_mat_mul (c function)": [[66, "c.mpf_mat_mul"]], "mpf_mat_one (c function)": [[66, "c.mpf_mat_one"]], "mpf_mat_print (c function)": [[66, "c.mpf_mat_print"]], "mpf_mat_qr (c function)": [[66, "c.mpf_mat_qr"]], "mpf_mat_randtest (c function)": [[66, "c.mpf_mat_randtest"]], "mpf_mat_set (c function)": [[66, "c.mpf_mat_set"]], "mpf_mat_swap (c function)": [[66, "c.mpf_mat_swap"]], "mpf_mat_swap_entrywise (c function)": [[66, "c.mpf_mat_swap_entrywise"]], "mpf_mat_zero (c function)": [[66, "c.mpf_mat_zero"]], "_mpf_vec_add (c function)": [[67, "c._mpf_vec_add"]], "_mpf_vec_approx_equal (c function)": [[67, "c._mpf_vec_approx_equal"]], "_mpf_vec_clear (c function)": [[67, "c._mpf_vec_clear"]], "_mpf_vec_dot (c function)": [[67, "c._mpf_vec_dot"]], "_mpf_vec_dot2 (c function)": [[67, "c._mpf_vec_dot2"]], "_mpf_vec_equal (c function)": [[67, "c._mpf_vec_equal"]], "_mpf_vec_init (c function)": [[67, "c._mpf_vec_init"]], "_mpf_vec_is_zero (c function)": [[67, "c._mpf_vec_is_zero"]], "_mpf_vec_norm (c function)": [[67, "c._mpf_vec_norm"]], "_mpf_vec_norm2 (c function)": [[67, "c._mpf_vec_norm2"]], "_mpf_vec_randtest (c function)": [[67, "c._mpf_vec_randtest"]], "_mpf_vec_scalar_mul_2exp (c function)": [[67, "c._mpf_vec_scalar_mul_2exp"]], "_mpf_vec_scalar_mul_mpf (c function)": [[67, "c._mpf_vec_scalar_mul_mpf"]], "_mpf_vec_set (c function)": [[67, "c._mpf_vec_set"]], "_mpf_vec_sub (c function)": [[67, "c._mpf_vec_sub"]], "_mpf_vec_zero (c function)": [[67, "c._mpf_vec_zero"]], "mpfr_mat_clear (c function)": [[68, "c.mpfr_mat_clear"]], "mpfr_mat_entry (c function)": [[68, "c.mpfr_mat_entry"]], "mpfr_mat_equal (c function)": [[68, "c.mpfr_mat_equal"]], "mpfr_mat_init (c function)": [[68, "c.mpfr_mat_init"]], "mpfr_mat_mul_classical (c function)": [[68, "c.mpfr_mat_mul_classical"]], "mpfr_mat_randtest (c function)": [[68, "c.mpfr_mat_randtest"]], "mpfr_mat_set (c function)": [[68, "c.mpfr_mat_set"]], "mpfr_mat_swap (c function)": [[68, "c.mpfr_mat_swap"]], "mpfr_mat_swap_entrywise (c function)": [[68, "c.mpfr_mat_swap_entrywise"]], "mpfr_mat_zero (c function)": [[68, "c.mpfr_mat_zero"]], "_mpfr_vec_add (c function)": [[69, "c._mpfr_vec_add"]], "_mpfr_vec_clear (c function)": [[69, "c._mpfr_vec_clear"]], "_mpfr_vec_init (c function)": [[69, "c._mpfr_vec_init"]], "_mpfr_vec_scalar_mul_2exp (c function)": [[69, "c._mpfr_vec_scalar_mul_2exp"]], "_mpfr_vec_scalar_mul_mpfr (c function)": [[69, "c._mpfr_vec_scalar_mul_mpfr"]], "_mpfr_vec_scalar_product (c function)": [[69, "c._mpfr_vec_scalar_product"]], "_mpfr_vec_set (c function)": [[69, "c._mpfr_vec_set"]], "_mpfr_vec_zero (c function)": [[69, "c._mpfr_vec_zero"]], "mpn_norm (c macro)": [[70, "c.MPN_NORM"]], "mpn_swap (c macro)": [[70, "c.MPN_SWAP"]], "flint_mpn_debug (c function)": [[70, "c.flint_mpn_debug"]], "flint_mpn_divexact_1 (c function)": [[70, "c.flint_mpn_divexact_1"]], "flint_mpn_divides (c function)": [[70, "c.flint_mpn_divides"]], "flint_mpn_divisible_1_p (c function)": [[70, "c.flint_mpn_divisible_1_p"]], "flint_mpn_divrem_preinv1 (c function)": [[70, "c.flint_mpn_divrem_preinv1"]], "flint_mpn_divrem_preinvn (c function)": [[70, "c.flint_mpn_divrem_preinvn"]], "flint_mpn_factor_trial (c function)": [[70, "c.flint_mpn_factor_trial"]], "flint_mpn_factor_trial_tree (c function)": [[70, "c.flint_mpn_factor_trial_tree"]], "flint_mpn_fmms1 (c function)": [[70, "c.flint_mpn_fmms1"]], "flint_mpn_gcd_full (c function)": [[70, "c.flint_mpn_gcd_full"]], "flint_mpn_gcd_full2 (c function)": [[70, "c.flint_mpn_gcd_full2"]], "flint_mpn_mod_preinvn (c function)": [[70, "c.flint_mpn_mod_preinvn"]], "flint_mpn_mulmod_preinv1 (c function)": [[70, "c.flint_mpn_mulmod_preinv1"]], "flint_mpn_mulmod_preinvn (c function)": [[70, "c.flint_mpn_mulmod_preinvn"]], "flint_mpn_preinv1 (c function)": [[70, "c.flint_mpn_preinv1"]], "flint_mpn_preinvn (c function)": [[70, "c.flint_mpn_preinvn"]], "flint_mpn_remove_2exp (c function)": [[70, "c.flint_mpn_remove_2exp"]], "flint_mpn_remove_power_ascending (c function)": [[70, "c.flint_mpn_remove_power_ascending"]], "flint_mpn_rrandom (c function)": [[70, "c.flint_mpn_rrandom"]], "flint_mpn_urandomb (c function)": [[70, "c.flint_mpn_urandomb"]], "flint_mpn_zero_p (c function)": [[70, "c.flint_mpn_zero_p"]], "_mpoly_heap_insert (c function)": [[71, "c._mpoly_heap_insert"]], "_mpoly_heap_insert1 (c function)": [[71, "c._mpoly_heap_insert1"]], "_mpoly_heap_pop (c function)": [[71, "c._mpoly_heap_pop"]], "_mpoly_heap_pop1 (c function)": [[71, "c._mpoly_heap_pop1"]], "mpoly_ctx_clear (c function)": [[71, "c.mpoly_ctx_clear"]], "mpoly_ctx_init (c function)": [[71, "c.mpoly_ctx_init"]], "mpoly_ctx_init_rand (c function)": [[71, "c.mpoly_ctx_init_rand"]], "mpoly_ctx_struct (c type)": [[71, "c.mpoly_ctx_struct"]], "mpoly_ctx_t (c type)": [[71, "c.mpoly_ctx_t"]], "mpoly_exp_bits_required_ffmpz (c function)": [[71, "c.mpoly_exp_bits_required_ffmpz"]], "mpoly_exp_bits_required_pfmpz (c function)": [[71, "c.mpoly_exp_bits_required_pfmpz"]], "mpoly_exp_bits_required_ui (c function)": [[71, "c.mpoly_exp_bits_required_ui"]], "mpoly_get_cmpmask (c function)": [[71, "c.mpoly_get_cmpmask"]], "mpoly_get_monomial_ffmpz (c function)": [[71, "c.mpoly_get_monomial_ffmpz"]], "mpoly_get_monomial_pfmpz (c function)": [[71, "c.mpoly_get_monomial_pfmpz"]], "mpoly_get_monomial_ui (c function)": [[71, "c.mpoly_get_monomial_ui"]], "mpoly_main_variable_terms1 (c function)": [[71, "c.mpoly_main_variable_terms1"]], "mpoly_max_degrees_tight (c function)": [[71, "c.mpoly_max_degrees_tight"]], "mpoly_max_fields_fmpz (c function)": [[71, "c.mpoly_max_fields_fmpz"]], "mpoly_max_fields_ui_sp (c function)": [[71, "c.mpoly_max_fields_ui_sp"]], "mpoly_monomial_add (c function)": [[71, "c.mpoly_monomial_add"]], "mpoly_monomial_add_mp (c function)": [[71, "c.mpoly_monomial_add_mp"]], "mpoly_monomial_cmp (c function)": [[71, "c.mpoly_monomial_cmp"]], "mpoly_monomial_divides (c function)": [[71, "c.mpoly_monomial_divides"]], "mpoly_monomial_divides1 (c function)": [[71, "c.mpoly_monomial_divides1"]], "mpoly_monomial_divides_mp (c function)": [[71, "c.mpoly_monomial_divides_mp"]], "mpoly_monomial_divides_tight (c function)": [[71, "c.mpoly_monomial_divides_tight"]], "mpoly_monomial_equal (c function)": [[71, "c.mpoly_monomial_equal"]], "mpoly_monomial_exists (c function)": [[71, "c.mpoly_monomial_exists"]], "mpoly_monomial_gt (c function)": [[71, "c.mpoly_monomial_gt"]], "mpoly_monomial_is_zero (c function)": [[71, "c.mpoly_monomial_is_zero"]], "mpoly_monomial_lt (c function)": [[71, "c.mpoly_monomial_lt"]], "mpoly_monomial_mul_ui (c function)": [[71, "c.mpoly_monomial_mul_ui"]], "mpoly_monomial_overflows (c function)": [[71, "c.mpoly_monomial_overflows"]], "mpoly_monomial_overflows1 (c function)": [[71, "c.mpoly_monomial_overflows1"]], "mpoly_monomial_overflows_mp (c function)": [[71, "c.mpoly_monomial_overflows_mp"]], "mpoly_monomial_set (c function)": [[71, "c.mpoly_monomial_set"]], "mpoly_monomial_sub (c function)": [[71, "c.mpoly_monomial_sub"]], "mpoly_monomial_sub_mp (c function)": [[71, "c.mpoly_monomial_sub_mp"]], "mpoly_monomial_swap (c function)": [[71, "c.mpoly_monomial_swap"]], "mpoly_ordering_isdeg (c function)": [[71, "c.mpoly_ordering_isdeg"]], "mpoly_ordering_isrev (c function)": [[71, "c.mpoly_ordering_isrev"]], "mpoly_ordering_print (c function)": [[71, "c.mpoly_ordering_print"]], "mpoly_ordering_randtest (c function)": [[71, "c.mpoly_ordering_randtest"]], "mpoly_pack_monomials_tight (c function)": [[71, "c.mpoly_pack_monomials_tight"]], "mpoly_pack_vec_fmpz (c function)": [[71, "c.mpoly_pack_vec_fmpz"]], "mpoly_pack_vec_ui (c function)": [[71, "c.mpoly_pack_vec_ui"]], "mpoly_repack_monomials (c function)": [[71, "c.mpoly_repack_monomials"]], "mpoly_search_monomials (c function)": [[71, "c.mpoly_search_monomials"]], "mpoly_set_monomial_ffmpz (c function)": [[71, "c.mpoly_set_monomial_ffmpz"]], "mpoly_set_monomial_pfmpz (c function)": [[71, "c.mpoly_set_monomial_pfmpz"]], "mpoly_set_monomial_ui (c function)": [[71, "c.mpoly_set_monomial_ui"]], "mpoly_term_exp_fits_si (c function)": [[71, "c.mpoly_term_exp_fits_si"]], "mpoly_term_exp_fits_ui (c function)": [[71, "c.mpoly_term_exp_fits_ui"]], "mpoly_unpack_monomials_tight (c function)": [[71, "c.mpoly_unpack_monomials_tight"]], "mpoly_unpack_vec_fmpz (c function)": [[71, "c.mpoly_unpack_vec_fmpz"]], "mpoly_unpack_vec_ui (c function)": [[71, "c.mpoly_unpack_vec_ui"]], "ordering_t (c type)": [[71, "c.ordering_t"]], "nmod2_red2 (c macro)": [[72, "c.NMOD2_RED2"]], "nmod_addmul (c macro)": [[72, "c.NMOD_ADDMUL"]], "nmod_bits (c macro)": [[72, "c.NMOD_BITS"]], "nmod_can_use_shoup (c macro)": [[72, "c.NMOD_CAN_USE_SHOUP"]], "nmod_mul_fullword (c macro)": [[72, "c.NMOD_MUL_FULLWORD"]], "nmod_mul_prenorm (c macro)": [[72, "c.NMOD_MUL_PRENORM"]], "nmod_red (c macro)": [[72, "c.NMOD_RED"]], "nmod_red2 (c macro)": [[72, "c.NMOD_RED2"]], "nmod_red3 (c macro)": [[72, "c.NMOD_RED3"]], "_nmod_add (c function)": [[72, "c._nmod_add"]], "_nmod_mul_fullword (c function)": [[72, "c._nmod_mul_fullword"]], "_nmod_sub (c function)": [[72, "c._nmod_sub"]], "nmod_add (c function)": [[72, "c.nmod_add"]], "nmod_discrete_log_pohlig_hellman_clear (c function)": [[72, "c.nmod_discrete_log_pohlig_hellman_clear"]], "nmod_discrete_log_pohlig_hellman_init (c function)": [[72, "c.nmod_discrete_log_pohlig_hellman_init"]], "nmod_discrete_log_pohlig_hellman_precompute_prime (c function)": [[72, "c.nmod_discrete_log_pohlig_hellman_precompute_prime"]], "nmod_discrete_log_pohlig_hellman_primitive_root (c function)": [[72, "c.nmod_discrete_log_pohlig_hellman_primitive_root"]], "nmod_discrete_log_pohlig_hellman_run (c function)": [[72, "c.nmod_discrete_log_pohlig_hellman_run"]], "nmod_div (c function)": [[72, "c.nmod_div"]], "nmod_init (c function)": [[72, "c.nmod_init"]], "nmod_inv (c function)": [[72, "c.nmod_inv"]], "nmod_mul (c function)": [[72, "c.nmod_mul"]], "nmod_neg (c function)": [[72, "c.nmod_neg"]], "nmod_pow_fmpz (c function)": [[72, "c.nmod_pow_fmpz"]], "nmod_pow_ui (c function)": [[72, "c.nmod_pow_ui"]], "nmod_sub (c function)": [[72, "c.nmod_sub"]], "_nmod_mat_mul_classical_op (c function)": [[73, "c._nmod_mat_mul_classical_op"]], "_nmod_mat_mul_classical_threaded_op (c function)": [[73, "c._nmod_mat_mul_classical_threaded_op"]], "_nmod_mat_mul_classical_threaded_pool_op (c function)": [[73, "c._nmod_mat_mul_classical_threaded_pool_op"]], "_nmod_mat_pow (c function)": [[73, "c._nmod_mat_pow"]], "nmod_mat_add (c function)": [[73, "c.nmod_mat_add"]], "nmod_mat_addmul (c function)": [[73, "c.nmod_mat_addmul"]], "nmod_mat_can_solve (c function)": [[73, "c.nmod_mat_can_solve"]], "nmod_mat_can_solve_inner (c function)": [[73, "c.nmod_mat_can_solve_inner"]], "nmod_mat_charpoly (c function)": [[73, "c.nmod_mat_charpoly"]], "nmod_mat_charpoly_berkowitz (c function)": [[73, "c.nmod_mat_charpoly_berkowitz"]], "nmod_mat_charpoly_danilevsky (c function)": [[73, "c.nmod_mat_charpoly_danilevsky"]], "nmod_mat_clear (c function)": [[73, "c.nmod_mat_clear"]], "nmod_mat_concat_horizontal (c function)": [[73, "c.nmod_mat_concat_horizontal"]], "nmod_mat_concat_vertical (c function)": [[73, "c.nmod_mat_concat_vertical"]], "nmod_mat_det (c function)": [[73, "c.nmod_mat_det"]], "nmod_mat_det_howell (c function)": [[73, "c.nmod_mat_det_howell"]], "nmod_mat_entry (c function)": [[73, "c.nmod_mat_entry"]], "nmod_mat_entry_ptr (c function)": [[73, "c.nmod_mat_entry_ptr"]], "nmod_mat_equal (c function)": [[73, "c.nmod_mat_equal"]], "nmod_mat_get_entry (c function)": [[73, "c.nmod_mat_get_entry"]], "nmod_mat_howell_form (c function)": [[73, "c.nmod_mat_howell_form"]], "nmod_mat_init (c function)": [[73, "c.nmod_mat_init"]], "nmod_mat_init_set (c function)": [[73, "c.nmod_mat_init_set"]], "nmod_mat_inv (c function)": [[73, "c.nmod_mat_inv"]], "nmod_mat_invert_cols (c function)": [[73, "c.nmod_mat_invert_cols"]], "nmod_mat_invert_rows (c function)": [[73, "c.nmod_mat_invert_rows"]], "nmod_mat_is_zero (c function)": [[73, "c.nmod_mat_is_zero"]], "nmod_mat_is_zero_row (c function)": [[73, "c.nmod_mat_is_zero_row"]], "nmod_mat_lu (c function)": [[73, "c.nmod_mat_lu"]], "nmod_mat_lu_classical (c function)": [[73, "c.nmod_mat_lu_classical"]], "nmod_mat_lu_classical_delayed (c function)": [[73, "c.nmod_mat_lu_classical_delayed"]], "nmod_mat_lu_recursive (c function)": [[73, "c.nmod_mat_lu_recursive"]], "nmod_mat_minpoly (c function)": [[73, "c.nmod_mat_minpoly"]], "nmod_mat_mul (c function)": [[73, "c.nmod_mat_mul"]], "nmod_mat_mul_blas (c function)": [[73, "c.nmod_mat_mul_blas"]], "nmod_mat_mul_classical (c function)": [[73, "c.nmod_mat_mul_classical"]], "nmod_mat_mul_classical_threaded (c function)": [[73, "c.nmod_mat_mul_classical_threaded"]], "nmod_mat_mul_nmod_vec (c function)": [[73, "c.nmod_mat_mul_nmod_vec"]], "nmod_mat_mul_nmod_vec_ptr (c function)": [[73, "c.nmod_mat_mul_nmod_vec_ptr"]], "nmod_mat_mul_strassen (c function)": [[73, "c.nmod_mat_mul_strassen"]], "nmod_mat_ncols (c function)": [[73, "c.nmod_mat_ncols"]], "nmod_mat_neg (c function)": [[73, "c.nmod_mat_neg"]], "nmod_mat_nmod_vec_mul (c function)": [[73, "c.nmod_mat_nmod_vec_mul"]], "nmod_mat_nmod_vec_mul_ptr (c function)": [[73, "c.nmod_mat_nmod_vec_mul_ptr"]], "nmod_mat_nrows (c function)": [[73, "c.nmod_mat_nrows"]], "nmod_mat_nullspace (c function)": [[73, "c.nmod_mat_nullspace"]], "nmod_mat_pow (c function)": [[73, "c.nmod_mat_pow"]], "nmod_mat_print_pretty (c function)": [[73, "c.nmod_mat_print_pretty"]], "nmod_mat_randfull (c function)": [[73, "c.nmod_mat_randfull"]], "nmod_mat_randops (c function)": [[73, "c.nmod_mat_randops"]], "nmod_mat_randpermdiag (c function)": [[73, "c.nmod_mat_randpermdiag"]], "nmod_mat_randrank (c function)": [[73, "c.nmod_mat_randrank"]], "nmod_mat_randtest (c function)": [[73, "c.nmod_mat_randtest"]], "nmod_mat_randtril (c function)": [[73, "c.nmod_mat_randtril"]], "nmod_mat_randtriu (c function)": [[73, "c.nmod_mat_randtriu"]], "nmod_mat_rank (c function)": [[73, "c.nmod_mat_rank"]], "nmod_mat_reduce_row (c function)": [[73, "c.nmod_mat_reduce_row"]], "nmod_mat_rref (c function)": [[73, "c.nmod_mat_rref"]], "nmod_mat_scalar_addmul_ui (c function)": [[73, "c.nmod_mat_scalar_addmul_ui"]], "nmod_mat_scalar_mul (c function)": [[73, "c.nmod_mat_scalar_mul"]], "nmod_mat_scalar_mul_fmpz (c function)": [[73, "c.nmod_mat_scalar_mul_fmpz"]], "nmod_mat_set (c function)": [[73, "c.nmod_mat_set"]], "nmod_mat_set_entry (c function)": [[73, "c.nmod_mat_set_entry"]], "nmod_mat_similarity (c function)": [[73, "c.nmod_mat_similarity"]], "nmod_mat_solve (c function)": [[73, "c.nmod_mat_solve"]], "nmod_mat_solve_tril (c function)": [[73, "c.nmod_mat_solve_tril"]], "nmod_mat_solve_tril_classical (c function)": [[73, "c.nmod_mat_solve_tril_classical"]], "nmod_mat_solve_tril_recursive (c function)": [[73, "c.nmod_mat_solve_tril_recursive"]], "nmod_mat_solve_triu (c function)": [[73, "c.nmod_mat_solve_triu"]], "nmod_mat_solve_triu_classical (c function)": [[73, "c.nmod_mat_solve_triu_classical"]], "nmod_mat_solve_triu_recursive (c function)": [[73, "c.nmod_mat_solve_triu_recursive"]], "nmod_mat_solve_vec (c function)": [[73, "c.nmod_mat_solve_vec"]], "nmod_mat_strong_echelon_form (c function)": [[73, "c.nmod_mat_strong_echelon_form"]], "nmod_mat_struct (c type)": [[73, "c.nmod_mat_struct"]], "nmod_mat_sub (c function)": [[73, "c.nmod_mat_sub"]], "nmod_mat_submul (c function)": [[73, "c.nmod_mat_submul"]], "nmod_mat_swap (c function)": [[73, "c.nmod_mat_swap"]], "nmod_mat_swap_cols (c function)": [[73, "c.nmod_mat_swap_cols"]], "nmod_mat_swap_entrywise (c function)": [[73, "c.nmod_mat_swap_entrywise"]], "nmod_mat_swap_rows (c function)": [[73, "c.nmod_mat_swap_rows"]], "nmod_mat_t (c type)": [[73, "c.nmod_mat_t"]], "nmod_mat_trace (c function)": [[73, "c.nmod_mat_trace"]], "nmod_mat_transpose (c function)": [[73, "c.nmod_mat_transpose"]], "nmod_mat_window_clear (c function)": [[73, "c.nmod_mat_window_clear"]], "nmod_mat_window_init (c function)": [[73, "c.nmod_mat_window_init"]], "nmod_mat_zero (c function)": [[73, "c.nmod_mat_zero"]], "nmod_mpoly_add (c function)": [[74, "c.nmod_mpoly_add"]], "nmod_mpoly_add_ui (c function)": [[74, "c.nmod_mpoly_add_ui"]], "nmod_mpoly_clear (c function)": [[74, "c.nmod_mpoly_clear"]], "nmod_mpoly_cmp (c function)": [[74, "c.nmod_mpoly_cmp"]], "nmod_mpoly_combine_like_terms (c function)": [[74, "c.nmod_mpoly_combine_like_terms"]], "nmod_mpoly_compose_nmod_mpoly (c function)": [[74, "c.nmod_mpoly_compose_nmod_mpoly"]], "nmod_mpoly_compose_nmod_mpoly_gen (c function)": [[74, "c.nmod_mpoly_compose_nmod_mpoly_gen"]], "nmod_mpoly_compose_nmod_mpoly_geobucket (c function)": [[74, "c.nmod_mpoly_compose_nmod_mpoly_geobucket"]], "nmod_mpoly_compose_nmod_mpoly_horner (c function)": [[74, "c.nmod_mpoly_compose_nmod_mpoly_horner"]], "nmod_mpoly_compose_nmod_poly (c function)": [[74, "c.nmod_mpoly_compose_nmod_poly"]], "nmod_mpoly_content_vars (c function)": [[74, "c.nmod_mpoly_content_vars"]], "nmod_mpoly_ctx_clear (c function)": [[74, "c.nmod_mpoly_ctx_clear"]], "nmod_mpoly_ctx_init (c function)": [[74, "c.nmod_mpoly_ctx_init"]], "nmod_mpoly_ctx_modulus (c function)": [[74, "c.nmod_mpoly_ctx_modulus"]], "nmod_mpoly_ctx_nvars (c function)": [[74, "c.nmod_mpoly_ctx_nvars"]], "nmod_mpoly_ctx_ord (c function)": [[74, "c.nmod_mpoly_ctx_ord"]], "nmod_mpoly_ctx_struct (c type)": [[74, "c.nmod_mpoly_ctx_struct"]], "nmod_mpoly_ctx_t (c type)": [[74, "c.nmod_mpoly_ctx_t"]], "nmod_mpoly_degree_fmpz (c function)": [[74, "c.nmod_mpoly_degree_fmpz"]], "nmod_mpoly_degree_si (c function)": [[74, "c.nmod_mpoly_degree_si"]], "nmod_mpoly_degrees_fit_si (c function)": [[74, "c.nmod_mpoly_degrees_fit_si"]], "nmod_mpoly_degrees_fmpz (c function)": [[74, "c.nmod_mpoly_degrees_fmpz"]], "nmod_mpoly_degrees_si (c function)": [[74, "c.nmod_mpoly_degrees_si"]], "nmod_mpoly_derivative (c function)": [[74, "c.nmod_mpoly_derivative"]], "nmod_mpoly_discriminant (c function)": [[74, "c.nmod_mpoly_discriminant"]], "nmod_mpoly_div (c function)": [[74, "c.nmod_mpoly_div"]], "nmod_mpoly_div_monagan_pearce (c function)": [[74, "c.nmod_mpoly_div_monagan_pearce"]], "nmod_mpoly_divides (c function)": [[74, "c.nmod_mpoly_divides"]], "nmod_mpoly_divides_dense (c function)": [[74, "c.nmod_mpoly_divides_dense"]], "nmod_mpoly_divides_heap_threaded (c function)": [[74, "c.nmod_mpoly_divides_heap_threaded"]], "nmod_mpoly_divides_monagan_pearce (c function)": [[74, "c.nmod_mpoly_divides_monagan_pearce"]], "nmod_mpoly_divrem (c function)": [[74, "c.nmod_mpoly_divrem"]], "nmod_mpoly_divrem_ideal (c function)": [[74, "c.nmod_mpoly_divrem_ideal"]], "nmod_mpoly_divrem_ideal_monagan_pearce (c function)": [[74, "c.nmod_mpoly_divrem_ideal_monagan_pearce"]], "nmod_mpoly_divrem_monagan_pearce (c function)": [[74, "c.nmod_mpoly_divrem_monagan_pearce"]], "nmod_mpoly_equal (c function)": [[74, "c.nmod_mpoly_equal"]], "nmod_mpoly_equal_ui (c function)": [[74, "c.nmod_mpoly_equal_ui"]], "nmod_mpoly_evaluate_all_ui (c function)": [[74, "c.nmod_mpoly_evaluate_all_ui"]], "nmod_mpoly_evaluate_one_ui (c function)": [[74, "c.nmod_mpoly_evaluate_one_ui"]], "nmod_mpoly_fit_length (c function)": [[74, "c.nmod_mpoly_fit_length"]], "nmod_mpoly_fprint_pretty (c function)": [[74, "c.nmod_mpoly_fprint_pretty"]], "nmod_mpoly_from_univar (c function)": [[74, "c.nmod_mpoly_from_univar"]], "nmod_mpoly_gcd (c function)": [[74, "c.nmod_mpoly_gcd"]], "nmod_mpoly_gcd_brown (c function)": [[74, "c.nmod_mpoly_gcd_brown"]], "nmod_mpoly_gcd_cofactors (c function)": [[74, "c.nmod_mpoly_gcd_cofactors"]], "nmod_mpoly_gcd_hensel (c function)": [[74, "c.nmod_mpoly_gcd_hensel"]], "nmod_mpoly_gcd_zippel (c function)": [[74, "c.nmod_mpoly_gcd_zippel"]], "nmod_mpoly_gen (c function)": [[74, "c.nmod_mpoly_gen"]], "nmod_mpoly_get_coeff_ui_fmpz (c function)": [[74, "c.nmod_mpoly_get_coeff_ui_fmpz"]], "nmod_mpoly_get_coeff_ui_monomial (c function)": [[74, "c.nmod_mpoly_get_coeff_ui_monomial"]], "nmod_mpoly_get_coeff_ui_ui (c function)": [[74, "c.nmod_mpoly_get_coeff_ui_ui"]], "nmod_mpoly_get_coeff_vars_ui (c function)": [[74, "c.nmod_mpoly_get_coeff_vars_ui"]], "nmod_mpoly_get_str_pretty (c function)": [[74, "c.nmod_mpoly_get_str_pretty"]], "nmod_mpoly_get_term (c function)": [[74, "c.nmod_mpoly_get_term"]], "nmod_mpoly_get_term_coeff_ui (c function)": [[74, "c.nmod_mpoly_get_term_coeff_ui"]], "nmod_mpoly_get_term_exp_fmpz (c function)": [[74, "c.nmod_mpoly_get_term_exp_fmpz"]], "nmod_mpoly_get_term_exp_si (c function)": [[74, "c.nmod_mpoly_get_term_exp_si"]], "nmod_mpoly_get_term_exp_ui (c function)": [[74, "c.nmod_mpoly_get_term_exp_ui"]], "nmod_mpoly_get_term_monomial (c function)": [[74, "c.nmod_mpoly_get_term_monomial"]], "nmod_mpoly_get_term_var_exp_si (c function)": [[74, "c.nmod_mpoly_get_term_var_exp_si"]], "nmod_mpoly_get_term_var_exp_ui (c function)": [[74, "c.nmod_mpoly_get_term_var_exp_ui"]], "nmod_mpoly_get_ui (c function)": [[74, "c.nmod_mpoly_get_ui"]], "nmod_mpoly_init (c function)": [[74, "c.nmod_mpoly_init"]], "nmod_mpoly_init2 (c function)": [[74, "c.nmod_mpoly_init2"]], "nmod_mpoly_init3 (c function)": [[74, "c.nmod_mpoly_init3"]], "nmod_mpoly_is_canonical (c function)": [[74, "c.nmod_mpoly_is_canonical"]], "nmod_mpoly_is_gen (c function)": [[74, "c.nmod_mpoly_is_gen"]], "nmod_mpoly_is_one (c function)": [[74, "c.nmod_mpoly_is_one"]], "nmod_mpoly_is_square (c function)": [[74, "c.nmod_mpoly_is_square"]], "nmod_mpoly_is_ui (c function)": [[74, "c.nmod_mpoly_is_ui"]], "nmod_mpoly_is_zero (c function)": [[74, "c.nmod_mpoly_is_zero"]], "nmod_mpoly_length (c function)": [[74, "c.nmod_mpoly_length"]], "nmod_mpoly_make_monic (c function)": [[74, "c.nmod_mpoly_make_monic"]], "nmod_mpoly_mul (c function)": [[74, "c.nmod_mpoly_mul"]], "nmod_mpoly_mul_array (c function)": [[74, "c.nmod_mpoly_mul_array"]], "nmod_mpoly_mul_array_threaded (c function)": [[74, "c.nmod_mpoly_mul_array_threaded"]], "nmod_mpoly_mul_dense (c function)": [[74, "c.nmod_mpoly_mul_dense"]], "nmod_mpoly_mul_heap_threaded (c function)": [[74, "c.nmod_mpoly_mul_heap_threaded"]], "nmod_mpoly_mul_johnson (c function)": [[74, "c.nmod_mpoly_mul_johnson"]], "nmod_mpoly_neg (c function)": [[74, "c.nmod_mpoly_neg"]], "nmod_mpoly_one (c function)": [[74, "c.nmod_mpoly_one"]], "nmod_mpoly_pow_fmpz (c function)": [[74, "c.nmod_mpoly_pow_fmpz"]], "nmod_mpoly_pow_rmul (c function)": [[74, "c.nmod_mpoly_pow_rmul"]], "nmod_mpoly_pow_ui (c function)": [[74, "c.nmod_mpoly_pow_ui"]], "nmod_mpoly_print_pretty (c function)": [[74, "c.nmod_mpoly_print_pretty"]], "nmod_mpoly_push_term_ui_fmpz (c function)": [[74, "c.nmod_mpoly_push_term_ui_fmpz"]], "nmod_mpoly_push_term_ui_ui (c function)": [[74, "c.nmod_mpoly_push_term_ui_ui"]], "nmod_mpoly_quadratic_root (c function)": [[74, "c.nmod_mpoly_quadratic_root"]], "nmod_mpoly_randtest_bits (c function)": [[74, "c.nmod_mpoly_randtest_bits"]], "nmod_mpoly_randtest_bound (c function)": [[74, "c.nmod_mpoly_randtest_bound"]], "nmod_mpoly_randtest_bounds (c function)": [[74, "c.nmod_mpoly_randtest_bounds"]], "nmod_mpoly_realloc (c function)": [[74, "c.nmod_mpoly_realloc"]], "nmod_mpoly_resize (c function)": [[74, "c.nmod_mpoly_resize"]], "nmod_mpoly_resultant (c function)": [[74, "c.nmod_mpoly_resultant"]], "nmod_mpoly_reverse (c function)": [[74, "c.nmod_mpoly_reverse"]], "nmod_mpoly_scalar_mul_ui (c function)": [[74, "c.nmod_mpoly_scalar_mul_ui"]], "nmod_mpoly_set (c function)": [[74, "c.nmod_mpoly_set"]], "nmod_mpoly_set_coeff_ui_fmpz (c function)": [[74, "c.nmod_mpoly_set_coeff_ui_fmpz"]], "nmod_mpoly_set_coeff_ui_monomial (c function)": [[74, "c.nmod_mpoly_set_coeff_ui_monomial"]], "nmod_mpoly_set_coeff_ui_ui (c function)": [[74, "c.nmod_mpoly_set_coeff_ui_ui"]], "nmod_mpoly_set_str_pretty (c function)": [[74, "c.nmod_mpoly_set_str_pretty"]], "nmod_mpoly_set_term_coeff_ui (c function)": [[74, "c.nmod_mpoly_set_term_coeff_ui"]], "nmod_mpoly_set_term_exp_fmpz (c function)": [[74, "c.nmod_mpoly_set_term_exp_fmpz"]], "nmod_mpoly_set_term_exp_ui (c function)": [[74, "c.nmod_mpoly_set_term_exp_ui"]], "nmod_mpoly_set_ui (c function)": [[74, "c.nmod_mpoly_set_ui"]], "nmod_mpoly_sort_terms (c function)": [[74, "c.nmod_mpoly_sort_terms"]], "nmod_mpoly_sqrt (c function)": [[74, "c.nmod_mpoly_sqrt"]], "nmod_mpoly_struct (c type)": [[74, "c.nmod_mpoly_struct"]], "nmod_mpoly_sub (c function)": [[74, "c.nmod_mpoly_sub"]], "nmod_mpoly_sub_ui (c function)": [[74, "c.nmod_mpoly_sub_ui"]], "nmod_mpoly_swap (c function)": [[74, "c.nmod_mpoly_swap"]], "nmod_mpoly_t (c type)": [[74, "c.nmod_mpoly_t"]], "nmod_mpoly_term_coeff_ref (c function)": [[74, "c.nmod_mpoly_term_coeff_ref"]], "nmod_mpoly_term_content (c function)": [[74, "c.nmod_mpoly_term_content"]], "nmod_mpoly_term_exp_fits_si (c function)": [[74, "c.nmod_mpoly_term_exp_fits_si"]], "nmod_mpoly_term_exp_fits_ui (c function)": [[74, "c.nmod_mpoly_term_exp_fits_ui"]], "nmod_mpoly_to_univar (c function)": [[74, "c.nmod_mpoly_to_univar"]], "nmod_mpoly_total_degree_fits_si (c function)": [[74, "c.nmod_mpoly_total_degree_fits_si"]], "nmod_mpoly_total_degree_fmpz (c function)": [[74, "c.nmod_mpoly_total_degree_fmpz"]], "nmod_mpoly_total_degree_si (c function)": [[74, "c.nmod_mpoly_total_degree_si"]], "nmod_mpoly_univar_clear (c function)": [[74, "c.nmod_mpoly_univar_clear"]], "nmod_mpoly_univar_degree_fits_si (c function)": [[74, "c.nmod_mpoly_univar_degree_fits_si"]], "nmod_mpoly_univar_get_term_coeff (c function)": [[74, "c.nmod_mpoly_univar_get_term_coeff"]], "nmod_mpoly_univar_get_term_exp_si (c function)": [[74, "c.nmod_mpoly_univar_get_term_exp_si"]], "nmod_mpoly_univar_init (c function)": [[74, "c.nmod_mpoly_univar_init"]], "nmod_mpoly_univar_length (c function)": [[74, "c.nmod_mpoly_univar_length"]], "nmod_mpoly_univar_swap (c function)": [[74, "c.nmod_mpoly_univar_swap"]], "nmod_mpoly_univar_swap_term_coeff (c function)": [[74, "c.nmod_mpoly_univar_swap_term_coeff"]], "nmod_mpoly_used_vars (c function)": [[74, "c.nmod_mpoly_used_vars"]], "nmod_mpoly_zero (c function)": [[74, "c.nmod_mpoly_zero"]], "nmod_mpoly_factor (c function)": [[75, "c.nmod_mpoly_factor"]], "nmod_mpoly_factor_clear (c function)": [[75, "c.nmod_mpoly_factor_clear"]], "nmod_mpoly_factor_get_base (c function)": [[75, "c.nmod_mpoly_factor_get_base"]], "nmod_mpoly_factor_get_constant_ui (c function)": [[75, "c.nmod_mpoly_factor_get_constant_ui"]], "nmod_mpoly_factor_get_exp_si (c function)": [[75, "c.nmod_mpoly_factor_get_exp_si"]], "nmod_mpoly_factor_init (c function)": [[75, "c.nmod_mpoly_factor_init"]], "nmod_mpoly_factor_length (c function)": [[75, "c.nmod_mpoly_factor_length"]], "nmod_mpoly_factor_sort (c function)": [[75, "c.nmod_mpoly_factor_sort"]], "nmod_mpoly_factor_squarefree (c function)": [[75, "c.nmod_mpoly_factor_squarefree"]], "nmod_mpoly_factor_struct (c type)": [[75, "c.nmod_mpoly_factor_struct"]], "nmod_mpoly_factor_swap (c function)": [[75, "c.nmod_mpoly_factor_swap"]], "nmod_mpoly_factor_swap_base (c function)": [[75, "c.nmod_mpoly_factor_swap_base"]], "nmod_mpoly_factor_t (c type)": [[75, "c.nmod_mpoly_factor_t"]], "_nmod_poly_ks2_pack (c function)": [[76, "c._nmod_poly_KS2_pack"]], "_nmod_poly_ks2_pack1 (c function)": [[76, "c._nmod_poly_KS2_pack1"]], "_nmod_poly_ks2_recover_reduce (c function)": [[76, "c._nmod_poly_KS2_recover_reduce"]], "_nmod_poly_ks2_recover_reduce1 (c function)": [[76, "c._nmod_poly_KS2_recover_reduce1"]], "_nmod_poly_ks2_recover_reduce2 (c function)": [[76, "c._nmod_poly_KS2_recover_reduce2"]], "_nmod_poly_ks2_recover_reduce2b (c function)": [[76, "c._nmod_poly_KS2_recover_reduce2b"]], "_nmod_poly_ks2_recover_reduce3 (c function)": [[76, "c._nmod_poly_KS2_recover_reduce3"]], "_nmod_poly_ks2_reduce (c function)": [[76, "c._nmod_poly_KS2_reduce"]], "_nmod_poly_ks2_unpack (c function)": [[76, "c._nmod_poly_KS2_unpack"]], "_nmod_poly_ks2_unpack1 (c function)": [[76, "c._nmod_poly_KS2_unpack1"]], "_nmod_poly_ks2_unpack2 (c function)": [[76, "c._nmod_poly_KS2_unpack2"]], "_nmod_poly_ks2_unpack3 (c function)": [[76, "c._nmod_poly_KS2_unpack3"]], "_nmod_poly_add (c function)": [[76, "c._nmod_poly_add"]], "_nmod_poly_asin_series (c function)": [[76, "c._nmod_poly_asin_series"]], "_nmod_poly_asinh_series (c function)": [[76, "c._nmod_poly_asinh_series"]], "_nmod_poly_atan_series (c function)": [[76, "c._nmod_poly_atan_series"]], "_nmod_poly_atanh_series (c function)": [[76, "c._nmod_poly_atanh_series"]], "_nmod_poly_bit_pack (c function)": [[76, "c._nmod_poly_bit_pack"]], "_nmod_poly_bit_unpack (c function)": [[76, "c._nmod_poly_bit_unpack"]], "_nmod_poly_compose (c function)": [[76, "c._nmod_poly_compose"]], "_nmod_poly_compose_divconquer (c function)": [[76, "c._nmod_poly_compose_divconquer"]], "_nmod_poly_compose_horner (c function)": [[76, "c._nmod_poly_compose_horner"]], "_nmod_poly_compose_mod (c function)": [[76, "c._nmod_poly_compose_mod"]], "_nmod_poly_compose_mod_brent_kung (c function)": [[76, "c._nmod_poly_compose_mod_brent_kung"]], "_nmod_poly_compose_mod_brent_kung_precomp_preinv (c function)": [[76, "c._nmod_poly_compose_mod_brent_kung_precomp_preinv"]], "_nmod_poly_compose_mod_brent_kung_precomp_preinv_worker (c function)": [[76, "c._nmod_poly_compose_mod_brent_kung_precomp_preinv_worker"]], "_nmod_poly_compose_mod_brent_kung_preinv (c function)": [[76, "c._nmod_poly_compose_mod_brent_kung_preinv"]], "_nmod_poly_compose_mod_brent_kung_vec_preinv (c function)": [[76, "c._nmod_poly_compose_mod_brent_kung_vec_preinv"]], "_nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool (c function)": [[76, "c._nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool"]], "_nmod_poly_compose_mod_horner (c function)": [[76, "c._nmod_poly_compose_mod_horner"]], "_nmod_poly_compose_series (c function)": [[76, "c._nmod_poly_compose_series"]], "_nmod_poly_compose_series_brent_kung (c function)": [[76, "c._nmod_poly_compose_series_brent_kung"]], "_nmod_poly_compose_series_divconquer (c function)": [[76, "c._nmod_poly_compose_series_divconquer"]], "_nmod_poly_compose_series_horner (c function)": [[76, "c._nmod_poly_compose_series_horner"]], "_nmod_poly_cos_series (c function)": [[76, "c._nmod_poly_cos_series"]], "_nmod_poly_cosh_series (c function)": [[76, "c._nmod_poly_cosh_series"]], "_nmod_poly_derivative (c function)": [[76, "c._nmod_poly_derivative"]], "_nmod_poly_discriminant (c function)": [[76, "c._nmod_poly_discriminant"]], "_nmod_poly_div (c function)": [[76, "c._nmod_poly_div"]], "_nmod_poly_div_basecase (c function)": [[76, "c._nmod_poly_div_basecase"]], "_nmod_poly_div_divconquer (c function)": [[76, "c._nmod_poly_div_divconquer"]], "_nmod_poly_div_divconquer_recursive (c function)": [[76, "c._nmod_poly_div_divconquer_recursive"]], "_nmod_poly_div_newton (c function)": [[76, "c._nmod_poly_div_newton"]], "_nmod_poly_div_newton_n_preinv (c function)": [[76, "c._nmod_poly_div_newton_n_preinv"]], "_nmod_poly_div_root (c function)": [[76, "c._nmod_poly_div_root"]], "_nmod_poly_div_series (c function)": [[76, "c._nmod_poly_div_series"]], "_nmod_poly_div_series_basecase (c function)": [[76, "c._nmod_poly_div_series_basecase"]], "_nmod_poly_divides (c function)": [[76, "c._nmod_poly_divides"]], "_nmod_poly_divides_classical (c function)": [[76, "c._nmod_poly_divides_classical"]], "_nmod_poly_divrem (c function)": [[76, "c._nmod_poly_divrem"]], "_nmod_poly_divrem_basecase (c function)": [[76, "c._nmod_poly_divrem_basecase"]], "_nmod_poly_divrem_divconquer (c function)": [[76, "c._nmod_poly_divrem_divconquer"]], "_nmod_poly_divrem_divconquer_recursive (c function)": [[76, "c._nmod_poly_divrem_divconquer_recursive"]], "_nmod_poly_divrem_newton (c function)": [[76, "c._nmod_poly_divrem_newton"]], "_nmod_poly_divrem_newton_n_preinv (c function)": [[76, "c._nmod_poly_divrem_newton_n_preinv"]], "_nmod_poly_divrem_q0 (c function)": [[76, "c._nmod_poly_divrem_q0"]], "_nmod_poly_divrem_q1 (c function)": [[76, "c._nmod_poly_divrem_q1"]], "_nmod_poly_evaluate_nmod (c function)": [[76, "c._nmod_poly_evaluate_nmod"]], "_nmod_poly_evaluate_nmod_vec (c function)": [[76, "c._nmod_poly_evaluate_nmod_vec"]], "_nmod_poly_evaluate_nmod_vec_fast (c function)": [[76, "c._nmod_poly_evaluate_nmod_vec_fast"]], "_nmod_poly_evaluate_nmod_vec_fast_precomp (c function)": [[76, "c._nmod_poly_evaluate_nmod_vec_fast_precomp"]], "_nmod_poly_evaluate_nmod_vec_iter (c function)": [[76, "c._nmod_poly_evaluate_nmod_vec_iter"]], "_nmod_poly_exp_expinv_series (c function)": [[76, "c._nmod_poly_exp_expinv_series"]], "_nmod_poly_exp_series (c function)": [[76, "c._nmod_poly_exp_series"]], "_nmod_poly_exp_series_basecase (c function)": [[76, "c._nmod_poly_exp_series_basecase"]], "_nmod_poly_exp_series_monomial_ui (c function)": [[76, "c._nmod_poly_exp_series_monomial_ui"]], "_nmod_poly_gcd (c function)": [[76, "c._nmod_poly_gcd"]], "_nmod_poly_gcd_euclidean (c function)": [[76, "c._nmod_poly_gcd_euclidean"]], "_nmod_poly_gcd_hgcd (c function)": [[76, "c._nmod_poly_gcd_hgcd"]], "_nmod_poly_gcdinv (c function)": [[76, "c._nmod_poly_gcdinv"]], "_nmod_poly_hgcd (c function)": [[76, "c._nmod_poly_hgcd"]], "_nmod_poly_integral (c function)": [[76, "c._nmod_poly_integral"]], "_nmod_poly_interpolate_nmod_vec (c function)": [[76, "c._nmod_poly_interpolate_nmod_vec"]], "_nmod_poly_interpolate_nmod_vec_barycentric (c function)": [[76, "c._nmod_poly_interpolate_nmod_vec_barycentric"]], "_nmod_poly_interpolate_nmod_vec_fast (c function)": [[76, "c._nmod_poly_interpolate_nmod_vec_fast"]], "_nmod_poly_interpolate_nmod_vec_fast_precomp (c function)": [[76, "c._nmod_poly_interpolate_nmod_vec_fast_precomp"]], "_nmod_poly_interpolate_nmod_vec_newton (c function)": [[76, "c._nmod_poly_interpolate_nmod_vec_newton"]], "_nmod_poly_interpolation_weights (c function)": [[76, "c._nmod_poly_interpolation_weights"]], "_nmod_poly_inv_series (c function)": [[76, "c._nmod_poly_inv_series"]], "_nmod_poly_inv_series_basecase (c function)": [[76, "c._nmod_poly_inv_series_basecase"]], "_nmod_poly_inv_series_newton (c function)": [[76, "c._nmod_poly_inv_series_newton"]], "_nmod_poly_invmod (c function)": [[76, "c._nmod_poly_invmod"]], "_nmod_poly_invsqrt_series (c function)": [[76, "c._nmod_poly_invsqrt_series"]], "_nmod_poly_log_series (c function)": [[76, "c._nmod_poly_log_series"]], "_nmod_poly_log_series_monomial_ui (c function)": [[76, "c._nmod_poly_log_series_monomial_ui"]], "_nmod_poly_make_monic (c function)": [[76, "c._nmod_poly_make_monic"]], "_nmod_poly_mul (c function)": [[76, "c._nmod_poly_mul"]], "_nmod_poly_mul_ks (c function)": [[76, "c._nmod_poly_mul_KS"]], "_nmod_poly_mul_ks2 (c function)": [[76, "c._nmod_poly_mul_KS2"]], "_nmod_poly_mul_ks4 (c function)": [[76, "c._nmod_poly_mul_KS4"]], "_nmod_poly_mul_classical (c function)": [[76, "c._nmod_poly_mul_classical"]], "_nmod_poly_mulhigh (c function)": [[76, "c._nmod_poly_mulhigh"]], "_nmod_poly_mulhigh_classical (c function)": [[76, "c._nmod_poly_mulhigh_classical"]], "_nmod_poly_mullow (c function)": [[76, "c._nmod_poly_mullow"]], "_nmod_poly_mullow_ks (c function)": [[76, "c._nmod_poly_mullow_KS"]], "_nmod_poly_mullow_classical (c function)": [[76, "c._nmod_poly_mullow_classical"]], "_nmod_poly_mulmod (c function)": [[76, "c._nmod_poly_mulmod"]], "_nmod_poly_mulmod_preinv (c function)": [[76, "c._nmod_poly_mulmod_preinv"]], "_nmod_poly_multi_crt_local_size (c function)": [[76, "c._nmod_poly_multi_crt_local_size"]], "_nmod_poly_multi_crt_run (c function)": [[76, "c._nmod_poly_multi_crt_run"]], "_nmod_poly_multi_crt_run_p (c function)": [[76, "c._nmod_poly_multi_crt_run_p"]], "_nmod_poly_normalise (c function)": [[76, "c._nmod_poly_normalise"]], "_nmod_poly_pow (c function)": [[76, "c._nmod_poly_pow"]], "_nmod_poly_pow_binexp (c function)": [[76, "c._nmod_poly_pow_binexp"]], "_nmod_poly_pow_trunc (c function)": [[76, "c._nmod_poly_pow_trunc"]], "_nmod_poly_pow_trunc_binexp (c function)": [[76, "c._nmod_poly_pow_trunc_binexp"]], "_nmod_poly_power_sums (c function)": [[76, "c._nmod_poly_power_sums"]], "_nmod_poly_power_sums_naive (c function)": [[76, "c._nmod_poly_power_sums_naive"]], "_nmod_poly_power_sums_schoenhage (c function)": [[76, "c._nmod_poly_power_sums_schoenhage"]], "_nmod_poly_power_sums_to_poly (c function)": [[76, "c._nmod_poly_power_sums_to_poly"]], "_nmod_poly_power_sums_to_poly_naive (c function)": [[76, "c._nmod_poly_power_sums_to_poly_naive"]], "_nmod_poly_power_sums_to_poly_schoenhage (c function)": [[76, "c._nmod_poly_power_sums_to_poly_schoenhage"]], "_nmod_poly_powers_mod_preinv_naive (c function)": [[76, "c._nmod_poly_powers_mod_preinv_naive"]], "_nmod_poly_powers_mod_preinv_threaded (c function)": [[76, "c._nmod_poly_powers_mod_preinv_threaded"]], "_nmod_poly_powers_mod_preinv_threaded_pool (c function)": [[76, "c._nmod_poly_powers_mod_preinv_threaded_pool"]], "_nmod_poly_powmod_fmpz_binexp (c function)": [[76, "c._nmod_poly_powmod_fmpz_binexp"]], "_nmod_poly_powmod_fmpz_binexp_preinv (c function)": [[76, "c._nmod_poly_powmod_fmpz_binexp_preinv"]], "_nmod_poly_powmod_mpz_binexp (c function)": [[76, "c._nmod_poly_powmod_mpz_binexp"]], "_nmod_poly_powmod_mpz_binexp_preinv (c function)": [[76, "c._nmod_poly_powmod_mpz_binexp_preinv"]], "_nmod_poly_powmod_ui_binexp (c function)": [[76, "c._nmod_poly_powmod_ui_binexp"]], "_nmod_poly_powmod_ui_binexp_preinv (c function)": [[76, "c._nmod_poly_powmod_ui_binexp_preinv"]], "_nmod_poly_powmod_x_fmpz_preinv (c function)": [[76, "c._nmod_poly_powmod_x_fmpz_preinv"]], "_nmod_poly_powmod_x_ui_preinv (c function)": [[76, "c._nmod_poly_powmod_x_ui_preinv"]], "_nmod_poly_precompute_matrix (c function)": [[76, "c._nmod_poly_precompute_matrix"]], "_nmod_poly_precompute_matrix_worker (c function)": [[76, "c._nmod_poly_precompute_matrix_worker"]], "_nmod_poly_product_roots_nmod_vec (c function)": [[76, "c._nmod_poly_product_roots_nmod_vec"]], "_nmod_poly_reduce_matrix_mod_poly (c function)": [[76, "c._nmod_poly_reduce_matrix_mod_poly"]], "_nmod_poly_rem (c function)": [[76, "c._nmod_poly_rem"]], "_nmod_poly_rem_basecase (c function)": [[76, "c._nmod_poly_rem_basecase"]], "_nmod_poly_rem_q1 (c function)": [[76, "c._nmod_poly_rem_q1"]], "_nmod_poly_resultant (c function)": [[76, "c._nmod_poly_resultant"]], "_nmod_poly_resultant_euclidean (c function)": [[76, "c._nmod_poly_resultant_euclidean"]], "_nmod_poly_resultant_hgcd (c function)": [[76, "c._nmod_poly_resultant_hgcd"]], "_nmod_poly_reverse (c function)": [[76, "c._nmod_poly_reverse"]], "_nmod_poly_revert_series (c function)": [[76, "c._nmod_poly_revert_series"]], "_nmod_poly_revert_series_lagrange (c function)": [[76, "c._nmod_poly_revert_series_lagrange"]], "_nmod_poly_revert_series_lagrange_fast (c function)": [[76, "c._nmod_poly_revert_series_lagrange_fast"]], "_nmod_poly_revert_series_newton (c function)": [[76, "c._nmod_poly_revert_series_newton"]], "_nmod_poly_shift_left (c function)": [[76, "c._nmod_poly_shift_left"]], "_nmod_poly_shift_right (c function)": [[76, "c._nmod_poly_shift_right"]], "_nmod_poly_sin_series (c function)": [[76, "c._nmod_poly_sin_series"]], "_nmod_poly_sinh_series (c function)": [[76, "c._nmod_poly_sinh_series"]], "_nmod_poly_sqrt (c function)": [[76, "c._nmod_poly_sqrt"]], "_nmod_poly_sqrt_series (c function)": [[76, "c._nmod_poly_sqrt_series"]], "_nmod_poly_sub (c function)": [[76, "c._nmod_poly_sub"]], "_nmod_poly_tan_series (c function)": [[76, "c._nmod_poly_tan_series"]], "_nmod_poly_tanh_series (c function)": [[76, "c._nmod_poly_tanh_series"]], "_nmod_poly_taylor_shift (c function)": [[76, "c._nmod_poly_taylor_shift"]], "_nmod_poly_taylor_shift_convolution (c function)": [[76, "c._nmod_poly_taylor_shift_convolution"]], "_nmod_poly_taylor_shift_horner (c function)": [[76, "c._nmod_poly_taylor_shift_horner"]], "_nmod_poly_tree_alloc (c function)": [[76, "c._nmod_poly_tree_alloc"]], "_nmod_poly_tree_build (c function)": [[76, "c._nmod_poly_tree_build"]], "_nmod_poly_tree_free (c function)": [[76, "c._nmod_poly_tree_free"]], "_nmod_poly_xgcd (c function)": [[76, "c._nmod_poly_xgcd"]], "_nmod_poly_xgcd_euclidean (c function)": [[76, "c._nmod_poly_xgcd_euclidean"]], "_nmod_poly_xgcd_hgcd (c function)": [[76, "c._nmod_poly_xgcd_hgcd"]], "nmod_berlekamp_massey_r_poly (c function)": [[76, "c.nmod_berlekamp_massey_R_poly"]], "nmod_berlekamp_massey_v_poly (c function)": [[76, "c.nmod_berlekamp_massey_V_poly"]], "nmod_berlekamp_massey_add_point (c function)": [[76, "c.nmod_berlekamp_massey_add_point"]], "nmod_berlekamp_massey_add_points (c function)": [[76, "c.nmod_berlekamp_massey_add_points"]], "nmod_berlekamp_massey_add_zeros (c function)": [[76, "c.nmod_berlekamp_massey_add_zeros"]], "nmod_berlekamp_massey_clear (c function)": [[76, "c.nmod_berlekamp_massey_clear"]], "nmod_berlekamp_massey_init (c function)": [[76, "c.nmod_berlekamp_massey_init"]], "nmod_berlekamp_massey_point_count (c function)": [[76, "c.nmod_berlekamp_massey_point_count"]], "nmod_berlekamp_massey_points (c function)": [[76, "c.nmod_berlekamp_massey_points"]], "nmod_berlekamp_massey_reduce (c function)": [[76, "c.nmod_berlekamp_massey_reduce"]], "nmod_berlekamp_massey_set_prime (c function)": [[76, "c.nmod_berlekamp_massey_set_prime"]], "nmod_berlekamp_massey_start_over (c function)": [[76, "c.nmod_berlekamp_massey_start_over"]], "nmod_poly_add (c function)": [[76, "c.nmod_poly_add"]], "nmod_poly_add_series (c function)": [[76, "c.nmod_poly_add_series"]], "nmod_poly_asin_series (c function)": [[76, "c.nmod_poly_asin_series"]], "nmod_poly_asinh_series (c function)": [[76, "c.nmod_poly_asinh_series"]], "nmod_poly_atan_series (c function)": [[76, "c.nmod_poly_atan_series"]], "nmod_poly_atanh_series (c function)": [[76, "c.nmod_poly_atanh_series"]], "nmod_poly_bit_pack (c function)": [[76, "c.nmod_poly_bit_pack"]], "nmod_poly_bit_unpack (c function)": [[76, "c.nmod_poly_bit_unpack"]], "nmod_poly_clear (c function)": [[76, "c.nmod_poly_clear"]], "nmod_poly_compose (c function)": [[76, "c.nmod_poly_compose"]], "nmod_poly_compose_divconquer (c function)": [[76, "c.nmod_poly_compose_divconquer"]], "nmod_poly_compose_horner (c function)": [[76, "c.nmod_poly_compose_horner"]], "nmod_poly_compose_mod (c function)": [[76, "c.nmod_poly_compose_mod"]], "nmod_poly_compose_mod_brent_kung (c function)": [[76, "c.nmod_poly_compose_mod_brent_kung"]], "nmod_poly_compose_mod_brent_kung_precomp_preinv (c function)": [[76, "c.nmod_poly_compose_mod_brent_kung_precomp_preinv"]], "nmod_poly_compose_mod_brent_kung_preinv (c function)": [[76, "c.nmod_poly_compose_mod_brent_kung_preinv"]], "nmod_poly_compose_mod_brent_kung_vec_preinv (c function)": [[76, "c.nmod_poly_compose_mod_brent_kung_vec_preinv"]], "nmod_poly_compose_mod_brent_kung_vec_preinv_threaded (c function)": [[76, "c.nmod_poly_compose_mod_brent_kung_vec_preinv_threaded"]], "nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool (c function)": [[76, "c.nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool"]], "nmod_poly_compose_mod_horner (c function)": [[76, "c.nmod_poly_compose_mod_horner"]], "nmod_poly_compose_series (c function)": [[76, "c.nmod_poly_compose_series"]], "nmod_poly_compose_series_brent_kung (c function)": [[76, "c.nmod_poly_compose_series_brent_kung"]], "nmod_poly_compose_series_divconquer (c function)": [[76, "c.nmod_poly_compose_series_divconquer"]], "nmod_poly_compose_series_horner (c function)": [[76, "c.nmod_poly_compose_series_horner"]], "nmod_poly_cos_series (c function)": [[76, "c.nmod_poly_cos_series"]], "nmod_poly_cosh_series (c function)": [[76, "c.nmod_poly_cosh_series"]], "nmod_poly_deflate (c function)": [[76, "c.nmod_poly_deflate"]], "nmod_poly_deflation (c function)": [[76, "c.nmod_poly_deflation"]], "nmod_poly_degree (c function)": [[76, "c.nmod_poly_degree"]], "nmod_poly_derivative (c function)": [[76, "c.nmod_poly_derivative"]], "nmod_poly_discriminant (c function)": [[76, "c.nmod_poly_discriminant"]], "nmod_poly_div (c function)": [[76, "c.nmod_poly_div"]], "nmod_poly_div_basecase (c function)": [[76, "c.nmod_poly_div_basecase"]], "nmod_poly_div_divconquer (c function)": [[76, "c.nmod_poly_div_divconquer"]], "nmod_poly_div_newton (c function)": [[76, "c.nmod_poly_div_newton"]], "nmod_poly_div_newton_n_preinv (c function)": [[76, "c.nmod_poly_div_newton_n_preinv"]], "nmod_poly_div_root (c function)": [[76, "c.nmod_poly_div_root"]], "nmod_poly_div_series (c function)": [[76, "c.nmod_poly_div_series"]], "nmod_poly_div_series_basecase (c function)": [[76, "c.nmod_poly_div_series_basecase"]], "nmod_poly_divides (c function)": [[76, "c.nmod_poly_divides"]], "nmod_poly_divides_classical (c function)": [[76, "c.nmod_poly_divides_classical"]], "nmod_poly_divrem (c function)": [[76, "c.nmod_poly_divrem"]], "nmod_poly_divrem_basecase (c function)": [[76, "c.nmod_poly_divrem_basecase"]], "nmod_poly_divrem_divconquer (c function)": [[76, "c.nmod_poly_divrem_divconquer"]], "nmod_poly_divrem_newton (c function)": [[76, "c.nmod_poly_divrem_newton"]], "nmod_poly_divrem_newton_n_preinv (c function)": [[76, "c.nmod_poly_divrem_newton_n_preinv"]], "nmod_poly_equal (c function)": [[76, "c.nmod_poly_equal"]], "nmod_poly_equal_trunc (c function)": [[76, "c.nmod_poly_equal_trunc"]], "nmod_poly_evaluate_mat (c function)": [[76, "c.nmod_poly_evaluate_mat"]], "nmod_poly_evaluate_mat_horner (c function)": [[76, "c.nmod_poly_evaluate_mat_horner"]], "nmod_poly_evaluate_mat_paterson_stockmeyer (c function)": [[76, "c.nmod_poly_evaluate_mat_paterson_stockmeyer"]], "nmod_poly_evaluate_nmod (c function)": [[76, "c.nmod_poly_evaluate_nmod"]], "nmod_poly_evaluate_nmod_vec (c function)": [[76, "c.nmod_poly_evaluate_nmod_vec"]], "nmod_poly_evaluate_nmod_vec_fast (c function)": [[76, "c.nmod_poly_evaluate_nmod_vec_fast"]], "nmod_poly_evaluate_nmod_vec_iter (c function)": [[76, "c.nmod_poly_evaluate_nmod_vec_iter"]], "nmod_poly_exp_series (c function)": [[76, "c.nmod_poly_exp_series"]], "nmod_poly_exp_series_basecase (c function)": [[76, "c.nmod_poly_exp_series_basecase"]], "nmod_poly_exp_series_monomial_ui (c function)": [[76, "c.nmod_poly_exp_series_monomial_ui"]], "nmod_poly_find_distinct_nonzero_roots (c function)": [[76, "c.nmod_poly_find_distinct_nonzero_roots"]], "nmod_poly_fit_length (c function)": [[76, "c.nmod_poly_fit_length"]], "nmod_poly_fprint (c function)": [[76, "c.nmod_poly_fprint"]], "nmod_poly_fprint_pretty (c function)": [[76, "c.nmod_poly_fprint_pretty"]], "nmod_poly_fread (c function)": [[76, "c.nmod_poly_fread"]], "nmod_poly_gcd (c function)": [[76, "c.nmod_poly_gcd"]], "nmod_poly_gcd_euclidean (c function)": [[76, "c.nmod_poly_gcd_euclidean"]], "nmod_poly_gcd_hgcd (c function)": [[76, "c.nmod_poly_gcd_hgcd"]], "nmod_poly_gcdinv (c function)": [[76, "c.nmod_poly_gcdinv"]], "nmod_poly_get_coeff_ui (c function)": [[76, "c.nmod_poly_get_coeff_ui"]], "nmod_poly_get_str (c function)": [[76, "c.nmod_poly_get_str"]], "nmod_poly_get_str_pretty (c function)": [[76, "c.nmod_poly_get_str_pretty"]], "nmod_poly_inflate (c function)": [[76, "c.nmod_poly_inflate"]], "nmod_poly_init (c function)": [[76, "c.nmod_poly_init"]], "nmod_poly_init2 (c function)": [[76, "c.nmod_poly_init2"]], "nmod_poly_init2_preinv (c function)": [[76, "c.nmod_poly_init2_preinv"]], "nmod_poly_init_mod (c function)": [[76, "c.nmod_poly_init_mod"]], "nmod_poly_init_preinv (c function)": [[76, "c.nmod_poly_init_preinv"]], "nmod_poly_integral (c function)": [[76, "c.nmod_poly_integral"]], "nmod_poly_interpolate_nmod_vec (c function)": [[76, "c.nmod_poly_interpolate_nmod_vec"]], "nmod_poly_interpolate_nmod_vec_barycentric (c function)": [[76, "c.nmod_poly_interpolate_nmod_vec_barycentric"]], "nmod_poly_interpolate_nmod_vec_fast (c function)": [[76, "c.nmod_poly_interpolate_nmod_vec_fast"]], "nmod_poly_interpolate_nmod_vec_newton (c function)": [[76, "c.nmod_poly_interpolate_nmod_vec_newton"]], "nmod_poly_inv_series (c function)": [[76, "c.nmod_poly_inv_series"]], "nmod_poly_inv_series_basecase (c function)": [[76, "c.nmod_poly_inv_series_basecase"]], "nmod_poly_inv_series_newton (c function)": [[76, "c.nmod_poly_inv_series_newton"]], "nmod_poly_invmod (c function)": [[76, "c.nmod_poly_invmod"]], "nmod_poly_invsqrt_series (c function)": [[76, "c.nmod_poly_invsqrt_series"]], "nmod_poly_is_one (c function)": [[76, "c.nmod_poly_is_one"]], "nmod_poly_is_zero (c function)": [[76, "c.nmod_poly_is_zero"]], "nmod_poly_length (c function)": [[76, "c.nmod_poly_length"]], "nmod_poly_log_series (c function)": [[76, "c.nmod_poly_log_series"]], "nmod_poly_log_series_monomial_ui (c function)": [[76, "c.nmod_poly_log_series_monomial_ui"]], "nmod_poly_make_monic (c function)": [[76, "c.nmod_poly_make_monic"]], "nmod_poly_max_bits (c function)": [[76, "c.nmod_poly_max_bits"]], "nmod_poly_modulus (c function)": [[76, "c.nmod_poly_modulus"]], "nmod_poly_mul (c function)": [[76, "c.nmod_poly_mul"]], "nmod_poly_mul_ks (c function)": [[76, "c.nmod_poly_mul_KS"]], "nmod_poly_mul_ks2 (c function)": [[76, "c.nmod_poly_mul_KS2"]], "nmod_poly_mul_ks4 (c function)": [[76, "c.nmod_poly_mul_KS4"]], "nmod_poly_mul_classical (c function)": [[76, "c.nmod_poly_mul_classical"]], "nmod_poly_mulhigh (c function)": [[76, "c.nmod_poly_mulhigh"]], "nmod_poly_mulhigh_classical (c function)": [[76, "c.nmod_poly_mulhigh_classical"]], "nmod_poly_mullow (c function)": [[76, "c.nmod_poly_mullow"]], "nmod_poly_mullow_ks (c function)": [[76, "c.nmod_poly_mullow_KS"]], "nmod_poly_mullow_classical (c function)": [[76, "c.nmod_poly_mullow_classical"]], "nmod_poly_mulmod (c function)": [[76, "c.nmod_poly_mulmod"]], "nmod_poly_mulmod_preinv (c function)": [[76, "c.nmod_poly_mulmod_preinv"]], "nmod_poly_multi_crt (c function)": [[76, "c.nmod_poly_multi_crt"]], "nmod_poly_multi_crt_clear (c function)": [[76, "c.nmod_poly_multi_crt_clear"]], "nmod_poly_multi_crt_init (c function)": [[76, "c.nmod_poly_multi_crt_init"]], "nmod_poly_multi_crt_precomp (c function)": [[76, "c.nmod_poly_multi_crt_precomp"]], "nmod_poly_multi_crt_precomp_p (c function)": [[76, "c.nmod_poly_multi_crt_precomp_p"]], "nmod_poly_multi_crt_precompute (c function)": [[76, "c.nmod_poly_multi_crt_precompute"]], "nmod_poly_multi_crt_precompute_p (c function)": [[76, "c.nmod_poly_multi_crt_precompute_p"]], "nmod_poly_neg (c function)": [[76, "c.nmod_poly_neg"]], "nmod_poly_pow (c function)": [[76, "c.nmod_poly_pow"]], "nmod_poly_pow_binexp (c function)": [[76, "c.nmod_poly_pow_binexp"]], "nmod_poly_pow_trunc (c function)": [[76, "c.nmod_poly_pow_trunc"]], "nmod_poly_pow_trunc_binexp (c function)": [[76, "c.nmod_poly_pow_trunc_binexp"]], "nmod_poly_power_sums (c function)": [[76, "c.nmod_poly_power_sums"]], "nmod_poly_power_sums_naive (c function)": [[76, "c.nmod_poly_power_sums_naive"]], "nmod_poly_power_sums_schoenhage (c function)": [[76, "c.nmod_poly_power_sums_schoenhage"]], "nmod_poly_power_sums_to_poly (c function)": [[76, "c.nmod_poly_power_sums_to_poly"]], "nmod_poly_power_sums_to_poly_naive (c function)": [[76, "c.nmod_poly_power_sums_to_poly_naive"]], "nmod_poly_power_sums_to_poly_schoenhage (c function)": [[76, "c.nmod_poly_power_sums_to_poly_schoenhage"]], "nmod_poly_powers_mod_bsgs (c function)": [[76, "c.nmod_poly_powers_mod_bsgs"]], "nmod_poly_powers_mod_naive (c function)": [[76, "c.nmod_poly_powers_mod_naive"]], "nmod_poly_powmod_fmpz_binexp (c function)": [[76, "c.nmod_poly_powmod_fmpz_binexp"]], "nmod_poly_powmod_fmpz_binexp_preinv (c function)": [[76, "c.nmod_poly_powmod_fmpz_binexp_preinv"]], "nmod_poly_powmod_mpz_binexp (c function)": [[76, "c.nmod_poly_powmod_mpz_binexp"]], "nmod_poly_powmod_mpz_binexp_preinv (c function)": [[76, "c.nmod_poly_powmod_mpz_binexp_preinv"]], "nmod_poly_powmod_ui_binexp (c function)": [[76, "c.nmod_poly_powmod_ui_binexp"]], "nmod_poly_powmod_ui_binexp_preinv (c function)": [[76, "c.nmod_poly_powmod_ui_binexp_preinv"]], "nmod_poly_powmod_x_fmpz_preinv (c function)": [[76, "c.nmod_poly_powmod_x_fmpz_preinv"]], "nmod_poly_powmod_x_ui_preinv (c function)": [[76, "c.nmod_poly_powmod_x_ui_preinv"]], "nmod_poly_precompute_matrix (c function)": [[76, "c.nmod_poly_precompute_matrix"]], "nmod_poly_print (c function)": [[76, "c.nmod_poly_print"]], "nmod_poly_print_pretty (c function)": [[76, "c.nmod_poly_print_pretty"]], "nmod_poly_product_roots_nmod_vec (c function)": [[76, "c.nmod_poly_product_roots_nmod_vec"]], "nmod_poly_randtest (c function)": [[76, "c.nmod_poly_randtest"]], "nmod_poly_randtest_irreducible (c function)": [[76, "c.nmod_poly_randtest_irreducible"]], "nmod_poly_randtest_monic (c function)": [[76, "c.nmod_poly_randtest_monic"]], "nmod_poly_randtest_monic_irreducible (c function)": [[76, "c.nmod_poly_randtest_monic_irreducible"]], "nmod_poly_randtest_monic_primitive (c function)": [[76, "c.nmod_poly_randtest_monic_primitive"]], "nmod_poly_randtest_pentomial (c function)": [[76, "c.nmod_poly_randtest_pentomial"]], "nmod_poly_randtest_pentomial_irreducible (c function)": [[76, "c.nmod_poly_randtest_pentomial_irreducible"]], "nmod_poly_randtest_sparse_irreducible (c function)": [[76, "c.nmod_poly_randtest_sparse_irreducible"]], "nmod_poly_randtest_trinomial (c function)": [[76, "c.nmod_poly_randtest_trinomial"]], "nmod_poly_randtest_trinomial_irreducible (c function)": [[76, "c.nmod_poly_randtest_trinomial_irreducible"]], "nmod_poly_read (c function)": [[76, "c.nmod_poly_read"]], "nmod_poly_realloc (c function)": [[76, "c.nmod_poly_realloc"]], "nmod_poly_rem (c function)": [[76, "c.nmod_poly_rem"]], "nmod_poly_rem_basecase (c function)": [[76, "c.nmod_poly_rem_basecase"]], "nmod_poly_resultant (c function)": [[76, "c.nmod_poly_resultant"]], "nmod_poly_resultant_euclidean (c function)": [[76, "c.nmod_poly_resultant_euclidean"]], "nmod_poly_resultant_hgcd (c function)": [[76, "c.nmod_poly_resultant_hgcd"]], "nmod_poly_reverse (c function)": [[76, "c.nmod_poly_reverse"]], "nmod_poly_revert_series (c function)": [[76, "c.nmod_poly_revert_series"]], "nmod_poly_revert_series_lagrange (c function)": [[76, "c.nmod_poly_revert_series_lagrange"]], "nmod_poly_revert_series_lagrange_fast (c function)": [[76, "c.nmod_poly_revert_series_lagrange_fast"]], "nmod_poly_revert_series_newton (c function)": [[76, "c.nmod_poly_revert_series_newton"]], "nmod_poly_scalar_mul_nmod (c function)": [[76, "c.nmod_poly_scalar_mul_nmod"]], "nmod_poly_set (c function)": [[76, "c.nmod_poly_set"]], "nmod_poly_set_coeff_ui (c function)": [[76, "c.nmod_poly_set_coeff_ui"]], "nmod_poly_set_str (c function)": [[76, "c.nmod_poly_set_str"]], "nmod_poly_set_trunc (c function)": [[76, "c.nmod_poly_set_trunc"]], "nmod_poly_shift_left (c function)": [[76, "c.nmod_poly_shift_left"]], "nmod_poly_shift_right (c function)": [[76, "c.nmod_poly_shift_right"]], "nmod_poly_sin_series (c function)": [[76, "c.nmod_poly_sin_series"]], "nmod_poly_sinh_series (c function)": [[76, "c.nmod_poly_sinh_series"]], "nmod_poly_sqrt (c function)": [[76, "c.nmod_poly_sqrt"]], "nmod_poly_sqrt_series (c function)": [[76, "c.nmod_poly_sqrt_series"]], "nmod_poly_struct (c type)": [[76, "c.nmod_poly_struct"]], "nmod_poly_sub (c function)": [[76, "c.nmod_poly_sub"]], "nmod_poly_sub_series (c function)": [[76, "c.nmod_poly_sub_series"]], "nmod_poly_swap (c function)": [[76, "c.nmod_poly_swap"]], "nmod_poly_t (c type)": [[76, "c.nmod_poly_t"]], "nmod_poly_tan_series (c function)": [[76, "c.nmod_poly_tan_series"]], "nmod_poly_tanh_series (c function)": [[76, "c.nmod_poly_tanh_series"]], "nmod_poly_taylor_shift (c function)": [[76, "c.nmod_poly_taylor_shift"]], "nmod_poly_taylor_shift_convolution (c function)": [[76, "c.nmod_poly_taylor_shift_convolution"]], "nmod_poly_taylor_shift_horner (c function)": [[76, "c.nmod_poly_taylor_shift_horner"]], "nmod_poly_truncate (c function)": [[76, "c.nmod_poly_truncate"]], "nmod_poly_xgcd (c function)": [[76, "c.nmod_poly_xgcd"]], "nmod_poly_xgcd_euclidean (c function)": [[76, "c.nmod_poly_xgcd_euclidean"]], "nmod_poly_xgcd_hgcd (c function)": [[76, "c.nmod_poly_xgcd_hgcd"]], "nmod_poly_zero (c function)": [[76, "c.nmod_poly_zero"]], "signed_mpn_sub_n (c function)": [[76, "c.signed_mpn_sub_n"]], "_nmod_poly_interval_poly_worker (c function)": [[77, "c._nmod_poly_interval_poly_worker"]], "_nmod_poly_is_squarefree (c function)": [[77, "c._nmod_poly_is_squarefree"]], "nmod_poly_factor (c function)": [[77, "c.nmod_poly_factor"]], "nmod_poly_factor_berlekamp (c function)": [[77, "c.nmod_poly_factor_berlekamp"]], "nmod_poly_factor_cantor_zassenhaus (c function)": [[77, "c.nmod_poly_factor_cantor_zassenhaus"]], "nmod_poly_factor_clear (c function)": [[77, "c.nmod_poly_factor_clear"]], "nmod_poly_factor_concat (c function)": [[77, "c.nmod_poly_factor_concat"]], "nmod_poly_factor_distinct_deg (c function)": [[77, "c.nmod_poly_factor_distinct_deg"]], "nmod_poly_factor_distinct_deg_threaded (c function)": [[77, "c.nmod_poly_factor_distinct_deg_threaded"]], "nmod_poly_factor_equal_deg (c function)": [[77, "c.nmod_poly_factor_equal_deg"]], "nmod_poly_factor_equal_deg_prob (c function)": [[77, "c.nmod_poly_factor_equal_deg_prob"]], "nmod_poly_factor_fit_length (c function)": [[77, "c.nmod_poly_factor_fit_length"]], "nmod_poly_factor_init (c function)": [[77, "c.nmod_poly_factor_init"]], "nmod_poly_factor_insert (c function)": [[77, "c.nmod_poly_factor_insert"]], "nmod_poly_factor_kaltofen_shoup (c function)": [[77, "c.nmod_poly_factor_kaltofen_shoup"]], "nmod_poly_factor_pow (c function)": [[77, "c.nmod_poly_factor_pow"]], "nmod_poly_factor_print (c function)": [[77, "c.nmod_poly_factor_print"]], "nmod_poly_factor_realloc (c function)": [[77, "c.nmod_poly_factor_realloc"]], "nmod_poly_factor_set (c function)": [[77, "c.nmod_poly_factor_set"]], "nmod_poly_factor_squarefree (c function)": [[77, "c.nmod_poly_factor_squarefree"]], "nmod_poly_factor_struct (c type)": [[77, "c.nmod_poly_factor_struct"]], "nmod_poly_factor_t (c type)": [[77, "c.nmod_poly_factor_t"]], "nmod_poly_factor_with_berlekamp (c function)": [[77, "c.nmod_poly_factor_with_berlekamp"]], "nmod_poly_factor_with_cantor_zassenhaus (c function)": [[77, "c.nmod_poly_factor_with_cantor_zassenhaus"]], "nmod_poly_factor_with_kaltofen_shoup (c function)": [[77, "c.nmod_poly_factor_with_kaltofen_shoup"]], "nmod_poly_is_irreducible (c function)": [[77, "c.nmod_poly_is_irreducible"]], "nmod_poly_is_irreducible_ddf (c function)": [[77, "c.nmod_poly_is_irreducible_ddf"]], "nmod_poly_is_irreducible_rabin (c function)": [[77, "c.nmod_poly_is_irreducible_rabin"]], "nmod_poly_is_squarefree (c function)": [[77, "c.nmod_poly_is_squarefree"]], "nmod_poly_remove (c function)": [[77, "c.nmod_poly_remove"]], "nmod_poly_mat_add (c function)": [[78, "c.nmod_poly_mat_add"]], "nmod_poly_mat_clear (c function)": [[78, "c.nmod_poly_mat_clear"]], "nmod_poly_mat_det (c function)": [[78, "c.nmod_poly_mat_det"]], "nmod_poly_mat_det_fflu (c function)": [[78, "c.nmod_poly_mat_det_fflu"]], "nmod_poly_mat_det_interpolate (c function)": [[78, "c.nmod_poly_mat_det_interpolate"]], "nmod_poly_mat_entry (c function)": [[78, "c.nmod_poly_mat_entry"]], "nmod_poly_mat_equal (c function)": [[78, "c.nmod_poly_mat_equal"]], "nmod_poly_mat_evaluate_nmod (c function)": [[78, "c.nmod_poly_mat_evaluate_nmod"]], "nmod_poly_mat_fflu (c function)": [[78, "c.nmod_poly_mat_fflu"]], "nmod_poly_mat_find_pivot_any (c function)": [[78, "c.nmod_poly_mat_find_pivot_any"]], "nmod_poly_mat_find_pivot_partial (c function)": [[78, "c.nmod_poly_mat_find_pivot_partial"]], "nmod_poly_mat_init (c function)": [[78, "c.nmod_poly_mat_init"]], "nmod_poly_mat_init_set (c function)": [[78, "c.nmod_poly_mat_init_set"]], "nmod_poly_mat_inv (c function)": [[78, "c.nmod_poly_mat_inv"]], "nmod_poly_mat_is_empty (c function)": [[78, "c.nmod_poly_mat_is_empty"]], "nmod_poly_mat_is_one (c function)": [[78, "c.nmod_poly_mat_is_one"]], "nmod_poly_mat_is_square (c function)": [[78, "c.nmod_poly_mat_is_square"]], "nmod_poly_mat_is_zero (c function)": [[78, "c.nmod_poly_mat_is_zero"]], "nmod_poly_mat_max_length (c function)": [[78, "c.nmod_poly_mat_max_length"]], "nmod_poly_mat_modulus (c function)": [[78, "c.nmod_poly_mat_modulus"]], "nmod_poly_mat_mul (c function)": [[78, "c.nmod_poly_mat_mul"]], "nmod_poly_mat_mul_ks (c function)": [[78, "c.nmod_poly_mat_mul_KS"]], "nmod_poly_mat_mul_classical (c function)": [[78, "c.nmod_poly_mat_mul_classical"]], "nmod_poly_mat_mul_interpolate (c function)": [[78, "c.nmod_poly_mat_mul_interpolate"]], "nmod_poly_mat_ncols (c function)": [[78, "c.nmod_poly_mat_ncols"]], "nmod_poly_mat_neg (c function)": [[78, "c.nmod_poly_mat_neg"]], "nmod_poly_mat_nrows (c function)": [[78, "c.nmod_poly_mat_nrows"]], "nmod_poly_mat_nullspace (c function)": [[78, "c.nmod_poly_mat_nullspace"]], "nmod_poly_mat_one (c function)": [[78, "c.nmod_poly_mat_one"]], "nmod_poly_mat_pow (c function)": [[78, "c.nmod_poly_mat_pow"]], "nmod_poly_mat_print (c function)": [[78, "c.nmod_poly_mat_print"]], "nmod_poly_mat_randtest (c function)": [[78, "c.nmod_poly_mat_randtest"]], "nmod_poly_mat_randtest_sparse (c function)": [[78, "c.nmod_poly_mat_randtest_sparse"]], "nmod_poly_mat_rank (c function)": [[78, "c.nmod_poly_mat_rank"]], "nmod_poly_mat_rref (c function)": [[78, "c.nmod_poly_mat_rref"]], "nmod_poly_mat_scalar_mul_nmod (c function)": [[78, "c.nmod_poly_mat_scalar_mul_nmod"]], "nmod_poly_mat_scalar_mul_nmod_poly (c function)": [[78, "c.nmod_poly_mat_scalar_mul_nmod_poly"]], "nmod_poly_mat_set (c function)": [[78, "c.nmod_poly_mat_set"]], "nmod_poly_mat_solve (c function)": [[78, "c.nmod_poly_mat_solve"]], "nmod_poly_mat_solve_fflu (c function)": [[78, "c.nmod_poly_mat_solve_fflu"]], "nmod_poly_mat_solve_fflu_precomp (c function)": [[78, "c.nmod_poly_mat_solve_fflu_precomp"]], "nmod_poly_mat_sqr (c function)": [[78, "c.nmod_poly_mat_sqr"]], "nmod_poly_mat_sqr_ks (c function)": [[78, "c.nmod_poly_mat_sqr_KS"]], "nmod_poly_mat_sqr_classical (c function)": [[78, "c.nmod_poly_mat_sqr_classical"]], "nmod_poly_mat_sqr_interpolate (c function)": [[78, "c.nmod_poly_mat_sqr_interpolate"]], "nmod_poly_mat_struct (c type)": [[78, "c.nmod_poly_mat_struct"]], "nmod_poly_mat_sub (c function)": [[78, "c.nmod_poly_mat_sub"]], "nmod_poly_mat_swap (c function)": [[78, "c.nmod_poly_mat_swap"]], "nmod_poly_mat_swap_entrywise (c function)": [[78, "c.nmod_poly_mat_swap_entrywise"]], "nmod_poly_mat_t (c type)": [[78, "c.nmod_poly_mat_t"]], "nmod_poly_mat_trace (c function)": [[78, "c.nmod_poly_mat_trace"]], "nmod_poly_mat_zero (c function)": [[78, "c.nmod_poly_mat_zero"]], "nmod_vec_dot (c function)": [[79, "c.NMOD_VEC_DOT"]], "_nmod_vec_add (c function)": [[79, "c._nmod_vec_add"]], "_nmod_vec_clear (c function)": [[79, "c._nmod_vec_clear"]], "_nmod_vec_dot (c function)": [[79, "c._nmod_vec_dot"]], "_nmod_vec_dot_bound_limbs (c function)": [[79, "c._nmod_vec_dot_bound_limbs"]], "_nmod_vec_dot_ptr (c function)": [[79, "c._nmod_vec_dot_ptr"]], "_nmod_vec_dot_rev (c function)": [[79, "c._nmod_vec_dot_rev"]], "_nmod_vec_equal (c function)": [[79, "c._nmod_vec_equal"]], "_nmod_vec_init (c function)": [[79, "c._nmod_vec_init"]], "_nmod_vec_max_bits (c function)": [[79, "c._nmod_vec_max_bits"]], "_nmod_vec_neg (c function)": [[79, "c._nmod_vec_neg"]], "_nmod_vec_randtest (c function)": [[79, "c._nmod_vec_randtest"]], "_nmod_vec_reduce (c function)": [[79, "c._nmod_vec_reduce"]], "_nmod_vec_scalar_addmul_nmod (c function)": [[79, "c._nmod_vec_scalar_addmul_nmod"]], "_nmod_vec_scalar_mul_nmod (c function)": [[79, "c._nmod_vec_scalar_mul_nmod"]], "_nmod_vec_scalar_mul_nmod_shoup (c function)": [[79, "c._nmod_vec_scalar_mul_nmod_shoup"]], "_nmod_vec_set (c function)": [[79, "c._nmod_vec_set"]], "_nmod_vec_sub (c function)": [[79, "c._nmod_vec_sub"]], "_nmod_vec_swap (c function)": [[79, "c._nmod_vec_swap"]], "_nmod_vec_zero (c function)": [[79, "c._nmod_vec_zero"]], "_padic_canonicalise (c function)": [[80, "c._padic_canonicalise"]], "_padic_ctx_pow_ui (c function)": [[80, "c._padic_ctx_pow_ui"]], "_padic_exp (c function)": [[80, "c._padic_exp"]], "_padic_exp_balanced (c function)": [[80, "c._padic_exp_balanced"]], "_padic_exp_bound (c function)": [[80, "c._padic_exp_bound"]], "_padic_exp_rectangular (c function)": [[80, "c._padic_exp_rectangular"]], "_padic_fprint (c function)": [[80, "c._padic_fprint"]], "_padic_inv (c function)": [[80, "c._padic_inv"]], "_padic_inv_clear (c function)": [[80, "c._padic_inv_clear"]], "_padic_inv_precomp (c function)": [[80, "c._padic_inv_precomp"]], "_padic_inv_precompute (c function)": [[80, "c._padic_inv_precompute"]], "_padic_lifts_exps (c function)": [[80, "c._padic_lifts_exps"]], "_padic_lifts_pows (c function)": [[80, "c._padic_lifts_pows"]], "_padic_log (c function)": [[80, "c._padic_log"]], "_padic_log_balanced (c function)": [[80, "c._padic_log_balanced"]], "_padic_log_bound (c function)": [[80, "c._padic_log_bound"]], "_padic_log_rectangular (c function)": [[80, "c._padic_log_rectangular"]], "_padic_log_satoh (c function)": [[80, "c._padic_log_satoh"]], "_padic_print (c function)": [[80, "c._padic_print"]], "_padic_reduce (c function)": [[80, "c._padic_reduce"]], "_padic_teichmuller (c function)": [[80, "c._padic_teichmuller"]], "padic_add (c function)": [[80, "c.padic_add"]], "padic_clear (c function)": [[80, "c.padic_clear"]], "padic_ctx_clear (c function)": [[80, "c.padic_ctx_clear"]], "padic_ctx_init (c function)": [[80, "c.padic_ctx_init"]], "padic_debug (c function)": [[80, "c.padic_debug"]], "padic_div (c function)": [[80, "c.padic_div"]], "padic_equal (c function)": [[80, "c.padic_equal"]], "padic_exp (c function)": [[80, "c.padic_exp"]], "padic_exp_balanced (c function)": [[80, "c.padic_exp_balanced"]], "padic_exp_rectangular (c function)": [[80, "c.padic_exp_rectangular"]], "padic_fprint (c function)": [[80, "c.padic_fprint"]], "padic_get_fmpq (c function)": [[80, "c.padic_get_fmpq"]], "padic_get_fmpz (c function)": [[80, "c.padic_get_fmpz"]], "padic_get_mpq (c function)": [[80, "c.padic_get_mpq"]], "padic_get_mpz (c function)": [[80, "c.padic_get_mpz"]], "padic_get_prec (c function)": [[80, "c.padic_get_prec"]], "padic_get_str (c function)": [[80, "c.padic_get_str"]], "padic_get_val (c function)": [[80, "c.padic_get_val"]], "padic_init (c function)": [[80, "c.padic_init"]], "padic_init2 (c function)": [[80, "c.padic_init2"]], "padic_inv (c function)": [[80, "c.padic_inv"]], "padic_is_one (c function)": [[80, "c.padic_is_one"]], "padic_is_zero (c function)": [[80, "c.padic_is_zero"]], "padic_log (c function)": [[80, "c.padic_log"]], "padic_log_balanced (c function)": [[80, "c.padic_log_balanced"]], "padic_log_rectangular (c function)": [[80, "c.padic_log_rectangular"]], "padic_log_satoh (c function)": [[80, "c.padic_log_satoh"]], "padic_mul (c function)": [[80, "c.padic_mul"]], "padic_neg (c function)": [[80, "c.padic_neg"]], "padic_one (c function)": [[80, "c.padic_one"]], "padic_pow_si (c function)": [[80, "c.padic_pow_si"]], "padic_prec (c function)": [[80, "c.padic_prec"]], "padic_print (c function)": [[80, "c.padic_print"]], "padic_randtest (c function)": [[80, "c.padic_randtest"]], "padic_randtest_int (c function)": [[80, "c.padic_randtest_int"]], "padic_randtest_not_zero (c function)": [[80, "c.padic_randtest_not_zero"]], "padic_reduce (c function)": [[80, "c.padic_reduce"]], "padic_set (c function)": [[80, "c.padic_set"]], "padic_set_fmpq (c function)": [[80, "c.padic_set_fmpq"]], "padic_set_fmpz (c function)": [[80, "c.padic_set_fmpz"]], "padic_set_mpq (c function)": [[80, "c.padic_set_mpq"]], "padic_set_mpz (c function)": [[80, "c.padic_set_mpz"]], "padic_set_si (c function)": [[80, "c.padic_set_si"]], "padic_set_ui (c function)": [[80, "c.padic_set_ui"]], "padic_shift (c function)": [[80, "c.padic_shift"]], "padic_sqrt (c function)": [[80, "c.padic_sqrt"]], "padic_sub (c function)": [[80, "c.padic_sub"]], "padic_swap (c function)": [[80, "c.padic_swap"]], "padic_teichmuller (c function)": [[80, "c.padic_teichmuller"]], "padic_unit (c function)": [[80, "c.padic_unit"]], "padic_val (c function)": [[80, "c.padic_val"]], "padic_val_fac (c function)": [[80, "c.padic_val_fac"]], "padic_val_fac_ui (c function)": [[80, "c.padic_val_fac_ui"]], "padic_val_fac_ui_2 (c function)": [[80, "c.padic_val_fac_ui_2"]], "padic_zero (c function)": [[80, "c.padic_zero"]], "_padic_mat_add (c function)": [[81, "c._padic_mat_add"]], "_padic_mat_canonicalise (c function)": [[81, "c._padic_mat_canonicalise"]], "_padic_mat_mul (c function)": [[81, "c._padic_mat_mul"]], "_padic_mat_neg (c function)": [[81, "c._padic_mat_neg"]], "_padic_mat_reduce (c function)": [[81, "c._padic_mat_reduce"]], "_padic_mat_scalar_mul_fmpz (c function)": [[81, "c._padic_mat_scalar_mul_fmpz"]], "_padic_mat_scalar_mul_padic (c function)": [[81, "c._padic_mat_scalar_mul_padic"]], "_padic_mat_sub (c function)": [[81, "c._padic_mat_sub"]], "padic_mat (c function)": [[81, "c.padic_mat"]], "padic_mat_add (c function)": [[81, "c.padic_mat_add"]], "padic_mat_clear (c function)": [[81, "c.padic_mat_clear"]], "padic_mat_entry (c function)": [[81, "c.padic_mat_entry"]], "padic_mat_equal (c function)": [[81, "c.padic_mat_equal"]], "padic_mat_fprint (c function)": [[81, "c.padic_mat_fprint"]], "padic_mat_fprint_pretty (c function)": [[81, "c.padic_mat_fprint_pretty"]], "padic_mat_get_entry_padic (c function)": [[81, "c.padic_mat_get_entry_padic"]], "padic_mat_get_fmpq_mat (c function)": [[81, "c.padic_mat_get_fmpq_mat"]], "padic_mat_get_prec (c function)": [[81, "c.padic_mat_get_prec"]], "padic_mat_get_val (c function)": [[81, "c.padic_mat_get_val"]], "padic_mat_init (c function)": [[81, "c.padic_mat_init"]], "padic_mat_init2 (c function)": [[81, "c.padic_mat_init2"]], "padic_mat_is_canonical (c function)": [[81, "c.padic_mat_is_canonical"]], "padic_mat_is_empty (c function)": [[81, "c.padic_mat_is_empty"]], "padic_mat_is_square (c function)": [[81, "c.padic_mat_is_square"]], "padic_mat_is_zero (c function)": [[81, "c.padic_mat_is_zero"]], "padic_mat_mul (c function)": [[81, "c.padic_mat_mul"]], "padic_mat_ncols (c function)": [[81, "c.padic_mat_ncols"]], "padic_mat_neg (c function)": [[81, "c.padic_mat_neg"]], "padic_mat_nrows (c function)": [[81, "c.padic_mat_nrows"]], "padic_mat_one (c function)": [[81, "c.padic_mat_one"]], "padic_mat_prec (c function)": [[81, "c.padic_mat_prec"]], "padic_mat_print (c function)": [[81, "c.padic_mat_print"]], "padic_mat_print_pretty (c function)": [[81, "c.padic_mat_print_pretty"]], "padic_mat_randtest (c function)": [[81, "c.padic_mat_randtest"]], "padic_mat_reduce (c function)": [[81, "c.padic_mat_reduce"]], "padic_mat_scalar_div_fmpz (c function)": [[81, "c.padic_mat_scalar_div_fmpz"]], "padic_mat_scalar_mul_fmpz (c function)": [[81, "c.padic_mat_scalar_mul_fmpz"]], "padic_mat_scalar_mul_padic (c function)": [[81, "c.padic_mat_scalar_mul_padic"]], "padic_mat_set (c function)": [[81, "c.padic_mat_set"]], "padic_mat_set_entry_padic (c function)": [[81, "c.padic_mat_set_entry_padic"]], "padic_mat_set_fmpq_mat (c function)": [[81, "c.padic_mat_set_fmpq_mat"]], "padic_mat_sub (c function)": [[81, "c.padic_mat_sub"]], "padic_mat_swap (c function)": [[81, "c.padic_mat_swap"]], "padic_mat_swap_entrywise (c function)": [[81, "c.padic_mat_swap_entrywise"]], "padic_mat_transpose (c function)": [[81, "c.padic_mat_transpose"]], "padic_mat_val (c function)": [[81, "c.padic_mat_val"]], "padic_mat_zero (c function)": [[81, "c.padic_mat_zero"]], "_padic_poly_add (c function)": [[82, "c._padic_poly_add"]], "_padic_poly_canonicalise (c function)": [[82, "c._padic_poly_canonicalise"]], "_padic_poly_compose (c function)": [[82, "c._padic_poly_compose"]], "_padic_poly_compose_pow (c function)": [[82, "c._padic_poly_compose_pow"]], "_padic_poly_derivative (c function)": [[82, "c._padic_poly_derivative"]], "_padic_poly_evaluate_padic (c function)": [[82, "c._padic_poly_evaluate_padic"]], "_padic_poly_fprint (c function)": [[82, "c._padic_poly_fprint"]], "_padic_poly_fprint_pretty (c function)": [[82, "c._padic_poly_fprint_pretty"]], "_padic_poly_is_canonical (c function)": [[82, "c._padic_poly_is_canonical"]], "_padic_poly_is_reduced (c function)": [[82, "c._padic_poly_is_reduced"]], "_padic_poly_mul (c function)": [[82, "c._padic_poly_mul"]], "_padic_poly_normalise (c function)": [[82, "c._padic_poly_normalise"]], "_padic_poly_pow (c function)": [[82, "c._padic_poly_pow"]], "_padic_poly_print (c function)": [[82, "c._padic_poly_print"]], "_padic_poly_print_pretty (c function)": [[82, "c._padic_poly_print_pretty"]], "_padic_poly_scalar_mul_padic (c function)": [[82, "c._padic_poly_scalar_mul_padic"]], "_padic_poly_set_length (c function)": [[82, "c._padic_poly_set_length"]], "_padic_poly_sub (c function)": [[82, "c._padic_poly_sub"]], "padic_poly_add (c function)": [[82, "c.padic_poly_add"]], "padic_poly_canonicalise (c function)": [[82, "c.padic_poly_canonicalise"]], "padic_poly_clear (c function)": [[82, "c.padic_poly_clear"]], "padic_poly_compose (c function)": [[82, "c.padic_poly_compose"]], "padic_poly_compose_pow (c function)": [[82, "c.padic_poly_compose_pow"]], "padic_poly_debug (c function)": [[82, "c.padic_poly_debug"]], "padic_poly_degree (c function)": [[82, "c.padic_poly_degree"]], "padic_poly_derivative (c function)": [[82, "c.padic_poly_derivative"]], "padic_poly_equal (c function)": [[82, "c.padic_poly_equal"]], "padic_poly_evaluate_padic (c function)": [[82, "c.padic_poly_evaluate_padic"]], "padic_poly_fit_length (c function)": [[82, "c.padic_poly_fit_length"]], "padic_poly_fprint (c function)": [[82, "c.padic_poly_fprint"]], "padic_poly_fprint_pretty (c function)": [[82, "c.padic_poly_fprint_pretty"]], "padic_poly_get_coeff_padic (c function)": [[82, "c.padic_poly_get_coeff_padic"]], "padic_poly_get_fmpq_poly (c function)": [[82, "c.padic_poly_get_fmpq_poly"]], "padic_poly_get_fmpz_poly (c function)": [[82, "c.padic_poly_get_fmpz_poly"]], "padic_poly_init (c function)": [[82, "c.padic_poly_init"]], "padic_poly_init2 (c function)": [[82, "c.padic_poly_init2"]], "padic_poly_inv_series (c function)": [[82, "c.padic_poly_inv_series"]], "padic_poly_is_canonical (c function)": [[82, "c.padic_poly_is_canonical"]], "padic_poly_is_one (c function)": [[82, "c.padic_poly_is_one"]], "padic_poly_is_reduced (c function)": [[82, "c.padic_poly_is_reduced"]], "padic_poly_is_zero (c function)": [[82, "c.padic_poly_is_zero"]], "padic_poly_length (c function)": [[82, "c.padic_poly_length"]], "padic_poly_mul (c function)": [[82, "c.padic_poly_mul"]], "padic_poly_neg (c function)": [[82, "c.padic_poly_neg"]], "padic_poly_one (c function)": [[82, "c.padic_poly_one"]], "padic_poly_pow (c function)": [[82, "c.padic_poly_pow"]], "padic_poly_prec (c function)": [[82, "c.padic_poly_prec"]], "padic_poly_print (c function)": [[82, "c.padic_poly_print"]], "padic_poly_print_pretty (c function)": [[82, "c.padic_poly_print_pretty"]], "padic_poly_randtest (c function)": [[82, "c.padic_poly_randtest"]], "padic_poly_randtest_not_zero (c function)": [[82, "c.padic_poly_randtest_not_zero"]], "padic_poly_randtest_val (c function)": [[82, "c.padic_poly_randtest_val"]], "padic_poly_realloc (c function)": [[82, "c.padic_poly_realloc"]], "padic_poly_reduce (c function)": [[82, "c.padic_poly_reduce"]], "padic_poly_scalar_mul_padic (c function)": [[82, "c.padic_poly_scalar_mul_padic"]], "padic_poly_set (c function)": [[82, "c.padic_poly_set"]], "padic_poly_set_coeff_padic (c function)": [[82, "c.padic_poly_set_coeff_padic"]], "padic_poly_set_fmpq (c function)": [[82, "c.padic_poly_set_fmpq"]], "padic_poly_set_fmpq_poly (c function)": [[82, "c.padic_poly_set_fmpq_poly"]], "padic_poly_set_fmpz (c function)": [[82, "c.padic_poly_set_fmpz"]], "padic_poly_set_fmpz_poly (c function)": [[82, "c.padic_poly_set_fmpz_poly"]], "padic_poly_set_padic (c function)": [[82, "c.padic_poly_set_padic"]], "padic_poly_set_si (c function)": [[82, "c.padic_poly_set_si"]], "padic_poly_set_ui (c function)": [[82, "c.padic_poly_set_ui"]], "padic_poly_shift_left (c function)": [[82, "c.padic_poly_shift_left"]], "padic_poly_shift_right (c function)": [[82, "c.padic_poly_shift_right"]], "padic_poly_sub (c function)": [[82, "c.padic_poly_sub"]], "padic_poly_swap (c function)": [[82, "c.padic_poly_swap"]], "padic_poly_truncate (c function)": [[82, "c.padic_poly_truncate"]], "padic_poly_val (c function)": [[82, "c.padic_poly_val"]], "padic_poly_zero (c function)": [[82, "c.padic_poly_zero"]], "_perm_clear (c function)": [[83, "c._perm_clear"]], "_perm_compose (c function)": [[83, "c._perm_compose"]], "_perm_init (c function)": [[83, "c._perm_init"]], "_perm_inv (c function)": [[83, "c._perm_inv"]], "_perm_parity (c function)": [[83, "c._perm_parity"]], "_perm_print (c function)": [[83, "c._perm_print"]], "_perm_randtest (c function)": [[83, "c._perm_randtest"]], "_perm_set (c function)": [[83, "c._perm_set"]], "_perm_set_one (c function)": [[83, "c._perm_set_one"]], "show_memory_usage (c macro)": [[85, "c.SHOW_MEMORY_USAGE"]], "timeit_end_repeat (c macro)": [[85, "c.TIMEIT_END_REPEAT"]], "timeit_once_start (c macro)": [[85, "c.TIMEIT_ONCE_START"]], "timeit_once_stop (c macro)": [[85, "c.TIMEIT_ONCE_STOP"]], "timeit_repeat (c macro)": [[85, "c.TIMEIT_REPEAT"]], "timeit_start (c macro)": [[85, "c.TIMEIT_START"]], "timeit_stop (c macro)": [[85, "c.TIMEIT_STOP"]], "get_clock (c function)": [[85, "c.get_clock"]], "get_memory_usage (c function)": [[85, "c.get_memory_usage"]], "prof_repeat (c function)": [[85, "c.prof_repeat"]], "start_clock (c function)": [[85, "c.start_clock"]], "stop_clock (c function)": [[85, "c.stop_clock"]], "timeit_start (c function)": [[85, "c.timeit_start"]], "timeit_stop (c function)": [[85, "c.timeit_stop"]], "_fmpz_mod_poly_reduce (c function)": [[86, "c._fmpz_mod_poly_reduce"]], "_fmpz_poly_reduce (c function)": [[86, "c._fmpz_poly_reduce"]], "_qadic_exp (c function)": [[86, "c._qadic_exp"]], "_qadic_exp_balanced (c function)": [[86, "c._qadic_exp_balanced"]], "_qadic_exp_rectangular (c function)": [[86, "c._qadic_exp_rectangular"]], "_qadic_frobenius (c function)": [[86, "c._qadic_frobenius"]], "_qadic_frobenius_a (c function)": [[86, "c._qadic_frobenius_a"]], "_qadic_inv (c function)": [[86, "c._qadic_inv"]], "_qadic_log (c function)": [[86, "c._qadic_log"]], "_qadic_log_balanced (c function)": [[86, "c._qadic_log_balanced"]], "_qadic_log_rectangular (c function)": [[86, "c._qadic_log_rectangular"]], "_qadic_norm (c function)": [[86, "c._qadic_norm"]], "_qadic_pow (c function)": [[86, "c._qadic_pow"]], "_qadic_teichmuller (c function)": [[86, "c._qadic_teichmuller"]], "_qadic_trace (c function)": [[86, "c._qadic_trace"]], "qadic_add (c function)": [[86, "c.qadic_add"]], "qadic_clear (c function)": [[86, "c.qadic_clear"]], "qadic_ctx_clear (c function)": [[86, "c.qadic_ctx_clear"]], "qadic_ctx_degree (c function)": [[86, "c.qadic_ctx_degree"]], "qadic_ctx_init (c function)": [[86, "c.qadic_ctx_init"]], "qadic_ctx_init_conway (c function)": [[86, "c.qadic_ctx_init_conway"]], "qadic_ctx_print (c function)": [[86, "c.qadic_ctx_print"]], "qadic_equal (c function)": [[86, "c.qadic_equal"]], "qadic_exp (c function)": [[86, "c.qadic_exp"]], "qadic_exp_balanced (c function)": [[86, "c.qadic_exp_balanced"]], "qadic_exp_rectangular (c function)": [[86, "c.qadic_exp_rectangular"]], "qadic_fprint_pretty (c function)": [[86, "c.qadic_fprint_pretty"]], "qadic_frobenius (c function)": [[86, "c.qadic_frobenius"]], "qadic_gen (c function)": [[86, "c.qadic_gen"]], "qadic_get_padic (c function)": [[86, "c.qadic_get_padic"]], "qadic_init (c function)": [[86, "c.qadic_init"]], "qadic_init2 (c function)": [[86, "c.qadic_init2"]], "qadic_inv (c function)": [[86, "c.qadic_inv"]], "qadic_is_one (c function)": [[86, "c.qadic_is_one"]], "qadic_is_zero (c function)": [[86, "c.qadic_is_zero"]], "qadic_log (c function)": [[86, "c.qadic_log"]], "qadic_log_balanced (c function)": [[86, "c.qadic_log_balanced"]], "qadic_log_rectangular (c function)": [[86, "c.qadic_log_rectangular"]], "qadic_mul (c function)": [[86, "c.qadic_mul"]], "qadic_neg (c function)": [[86, "c.qadic_neg"]], "qadic_norm (c function)": [[86, "c.qadic_norm"]], "qadic_norm_analytic (c function)": [[86, "c.qadic_norm_analytic"]], "qadic_norm_resultant (c function)": [[86, "c.qadic_norm_resultant"]], "qadic_one (c function)": [[86, "c.qadic_one"]], "qadic_pow (c function)": [[86, "c.qadic_pow"]], "qadic_prec (c function)": [[86, "c.qadic_prec"]], "qadic_print_pretty (c function)": [[86, "c.qadic_print_pretty"]], "qadic_randtest (c function)": [[86, "c.qadic_randtest"]], "qadic_randtest_int (c function)": [[86, "c.qadic_randtest_int"]], "qadic_randtest_not_zero (c function)": [[86, "c.qadic_randtest_not_zero"]], "qadic_randtest_val (c function)": [[86, "c.qadic_randtest_val"]], "qadic_reduce (c function)": [[86, "c.qadic_reduce"]], "qadic_set (c function)": [[86, "c.qadic_set"]], "qadic_set_ui (c function)": [[86, "c.qadic_set_ui"]], "qadic_sqrt (c function)": [[86, "c.qadic_sqrt"]], "qadic_sub (c function)": [[86, "c.qadic_sub"]], "qadic_teichmuller (c function)": [[86, "c.qadic_teichmuller"]], "qadic_trace (c function)": [[86, "c.qadic_trace"]], "qadic_val (c function)": [[86, "c.qadic_val"]], "qadic_zero (c function)": [[86, "c.qadic_zero"]], "qsieve_add_to_hashtable (c function)": [[87, "c.qsieve_add_to_hashtable"]], "qsieve_collect_relations (c function)": [[87, "c.qsieve_collect_relations"]], "qsieve_compare_relation (c function)": [[87, "c.qsieve_compare_relation"]], "qsieve_compute_c (c function)": [[87, "c.qsieve_compute_C"]], "qsieve_compute_pre_data (c function)": [[87, "c.qsieve_compute_pre_data"]], "qsieve_do_sieving (c function)": [[87, "c.qsieve_do_sieving"]], "qsieve_do_sieving2 (c function)": [[87, "c.qsieve_do_sieving2"]], "qsieve_evaluate_candidate (c function)": [[87, "c.qsieve_evaluate_candidate"]], "qsieve_evaluate_sieve (c function)": [[87, "c.qsieve_evaluate_sieve"]], "qsieve_factor (c function)": [[87, "c.qsieve_factor"]], "qsieve_get_table_entry (c function)": [[87, "c.qsieve_get_table_entry"]], "qsieve_init_a0 (c function)": [[87, "c.qsieve_init_A0"]], "qsieve_init_poly_first (c function)": [[87, "c.qsieve_init_poly_first"]], "qsieve_init_poly_next (c function)": [[87, "c.qsieve_init_poly_next"]], "qsieve_insert_relation2 (c function)": [[87, "c.qsieve_insert_relation2"]], "qsieve_knuth_schroeppel (c function)": [[87, "c.qsieve_knuth_schroeppel"]], "qsieve_merge_relation (c function)": [[87, "c.qsieve_merge_relation"]], "qsieve_next_a0 (c function)": [[87, "c.qsieve_next_A0"]], "qsieve_parse_relation (c function)": [[87, "c.qsieve_parse_relation"]], "qsieve_primes_increment (c function)": [[87, "c.qsieve_primes_increment"]], "qsieve_primes_init (c function)": [[87, "c.qsieve_primes_init"]], "qsieve_process_relation (c function)": [[87, "c.qsieve_process_relation"]], "qsieve_remove_duplicates (c function)": [[87, "c.qsieve_remove_duplicates"]], "qsieve_write_to_file (c function)": [[87, "c.qsieve_write_to_file"]], "thread_pool_clear (c function)": [[89, "c.thread_pool_clear"]], "thread_pool_get_size (c function)": [[89, "c.thread_pool_get_size"]], "thread_pool_give_back (c function)": [[89, "c.thread_pool_give_back"]], "thread_pool_handle (c type)": [[89, "c.thread_pool_handle"]], "thread_pool_init (c function)": [[89, "c.thread_pool_init"]], "thread_pool_request (c function)": [[89, "c.thread_pool_request"]], "thread_pool_set_size (c function)": [[89, "c.thread_pool_set_size"]], "thread_pool_t (c type)": [[89, "c.thread_pool_t"]], "thread_pool_wait (c function)": [[89, "c.thread_pool_wait"]], "thread_pool_wake (c function)": [[89, "c.thread_pool_wake"]], "bsplit_basecase_func_t (c type)": [[90, "c.bsplit_basecase_func_t"]], "bsplit_clear_func_t (c type)": [[90, "c.bsplit_clear_func_t"]], "bsplit_init_func_t (c type)": [[90, "c.bsplit_init_func_t"]], "bsplit_merge_func_t (c type)": [[90, "c.bsplit_merge_func_t"]], "do_func_t (c type)": [[90, "c.do_func_t"]], "flint_parallel_binary_splitting (c function)": [[90, "c.flint_parallel_binary_splitting"]], "flint_parallel_do (c function)": [[90, "c.flint_parallel_do"]], "n_crt (c function)": [[91, "c.n_CRT"]], "n_addmod (c function)": [[91, "c.n_addmod"]], "n_cbrt (c function)": [[91, "c.n_cbrt"]], "n_cbrt_binary_search (c function)": [[91, "c.n_cbrt_binary_search"]], "n_cbrt_chebyshev_approx (c function)": [[91, "c.n_cbrt_chebyshev_approx"]], "n_cbrt_newton_iteration (c function)": [[91, "c.n_cbrt_newton_iteration"]], "n_cbrtrem (c function)": [[91, "c.n_cbrtrem"]], "n_cleanup_primes (c function)": [[91, "c.n_cleanup_primes"]], "n_clog (c function)": [[91, "c.n_clog"]], "n_clog_2exp (c function)": [[91, "c.n_clog_2exp"]], "n_compute_primes (c function)": [[91, "c.n_compute_primes"]], "n_discrete_log_bsgs (c function)": [[91, "c.n_discrete_log_bsgs"]], "n_div2_preinv (c function)": [[91, "c.n_div2_preinv"]], "n_divides (c function)": [[91, "c.n_divides"]], "n_divrem2_precomp (c function)": [[91, "c.n_divrem2_precomp"]], "n_divrem2_preinv (c function)": [[91, "c.n_divrem2_preinv"]], "n_euler_phi (c function)": [[91, "c.n_euler_phi"]], "n_factor (c function)": [[91, "c.n_factor"]], "n_factor_squfof (c function)": [[91, "c.n_factor_SQUFOF"]], "n_factor_ecm (c function)": [[91, "c.n_factor_ecm"]], "n_factor_ecm_add (c function)": [[91, "c.n_factor_ecm_add"]], "n_factor_ecm_double (c function)": [[91, "c.n_factor_ecm_double"]], "n_factor_ecm_mul_montgomery_ladder (c function)": [[91, "c.n_factor_ecm_mul_montgomery_ladder"]], "n_factor_ecm_select_curve (c function)": [[91, "c.n_factor_ecm_select_curve"]], "n_factor_ecm_stage_i (c function)": [[91, "c.n_factor_ecm_stage_I"]], "n_factor_ecm_stage_ii (c function)": [[91, "c.n_factor_ecm_stage_II"]], "n_factor_insert (c function)": [[91, "c.n_factor_insert"]], "n_factor_lehman (c function)": [[91, "c.n_factor_lehman"]], "n_factor_one_line (c function)": [[91, "c.n_factor_one_line"]], "n_factor_partial (c function)": [[91, "c.n_factor_partial"]], "n_factor_pollard_brent (c function)": [[91, "c.n_factor_pollard_brent"]], "n_factor_pollard_brent_single (c function)": [[91, "c.n_factor_pollard_brent_single"]], "n_factor_power235 (c function)": [[91, "c.n_factor_power235"]], "n_factor_pp1 (c function)": [[91, "c.n_factor_pp1"]], "n_factor_pp1_wrapper (c function)": [[91, "c.n_factor_pp1_wrapper"]], "n_factor_trial (c function)": [[91, "c.n_factor_trial"]], "n_factor_trial_partial (c function)": [[91, "c.n_factor_trial_partial"]], "n_factor_trial_range (c function)": [[91, "c.n_factor_trial_range"]], "n_factorial_fast_mod2_preinv (c function)": [[91, "c.n_factorial_fast_mod2_preinv"]], "n_factorial_mod2_preinv (c function)": [[91, "c.n_factorial_mod2_preinv"]], "n_flog (c function)": [[91, "c.n_flog"]], "n_gcd (c function)": [[91, "c.n_gcd"]], "n_gcdinv (c function)": [[91, "c.n_gcdinv"]], "n_invmod (c function)": [[91, "c.n_invmod"]], "n_is_oddprime_binary (c function)": [[91, "c.n_is_oddprime_binary"]], "n_is_oddprime_small (c function)": [[91, "c.n_is_oddprime_small"]], "n_is_perfect_power (c function)": [[91, "c.n_is_perfect_power"]], "n_is_perfect_power235 (c function)": [[91, "c.n_is_perfect_power235"]], "n_is_prime (c function)": [[91, "c.n_is_prime"]], "n_is_prime_pocklington (c function)": [[91, "c.n_is_prime_pocklington"]], "n_is_prime_pseudosquare (c function)": [[91, "c.n_is_prime_pseudosquare"]], "n_is_probabprime (c function)": [[91, "c.n_is_probabprime"]], "n_is_probabprime_bpsw (c function)": [[91, "c.n_is_probabprime_BPSW"]], "n_is_probabprime_fermat (c function)": [[91, "c.n_is_probabprime_fermat"]], "n_is_probabprime_fibonacci (c function)": [[91, "c.n_is_probabprime_fibonacci"]], "n_is_probabprime_lucas (c function)": [[91, "c.n_is_probabprime_lucas"]], "n_is_square (c function)": [[91, "c.n_is_square"]], "n_is_squarefree (c function)": [[91, "c.n_is_squarefree"]], "n_is_strong_probabprime2_preinv (c function)": [[91, "c.n_is_strong_probabprime2_preinv"]], "n_is_strong_probabprime_precomp (c function)": [[91, "c.n_is_strong_probabprime_precomp"]], "n_jacobi (c function)": [[91, "c.n_jacobi"]], "n_jacobi_unsigned (c function)": [[91, "c.n_jacobi_unsigned"]], "n_ll_mod_preinv (c function)": [[91, "c.n_ll_mod_preinv"]], "n_lll_mod_preinv (c function)": [[91, "c.n_lll_mod_preinv"]], "n_mod2_precomp (c function)": [[91, "c.n_mod2_precomp"]], "n_mod2_preinv (c function)": [[91, "c.n_mod2_preinv"]], "n_mod_precomp (c function)": [[91, "c.n_mod_precomp"]], "n_moebius_mu (c function)": [[91, "c.n_moebius_mu"]], "n_moebius_mu_vec (c function)": [[91, "c.n_moebius_mu_vec"]], "n_mulmod2 (c function)": [[91, "c.n_mulmod2"]], "n_mulmod2_preinv (c function)": [[91, "c.n_mulmod2_preinv"]], "n_mulmod_precomp (c function)": [[91, "c.n_mulmod_precomp"]], "n_mulmod_precomp_shoup (c function)": [[91, "c.n_mulmod_precomp_shoup"]], "n_mulmod_preinv (c function)": [[91, "c.n_mulmod_preinv"]], "n_mulmod_shoup (c function)": [[91, "c.n_mulmod_shoup"]], "n_nextprime (c function)": [[91, "c.n_nextprime"]], "n_nth_prime (c function)": [[91, "c.n_nth_prime"]], "n_nth_prime_bounds (c function)": [[91, "c.n_nth_prime_bounds"]], "n_pow (c function)": [[91, "c.n_pow"]], "n_powmod (c function)": [[91, "c.n_powmod"]], "n_powmod2 (c function)": [[91, "c.n_powmod2"]], "n_powmod2_fmpz_preinv (c function)": [[91, "c.n_powmod2_fmpz_preinv"]], "n_powmod2_preinv (c function)": [[91, "c.n_powmod2_preinv"]], "n_powmod2_ui_preinv (c function)": [[91, "c.n_powmod2_ui_preinv"]], "n_powmod_precomp (c function)": [[91, "c.n_powmod_precomp"]], "n_powmod_ui_precomp (c function)": [[91, "c.n_powmod_ui_precomp"]], "n_precompute_inverse (c function)": [[91, "c.n_precompute_inverse"]], "n_preinvert_limb (c function)": [[91, "c.n_preinvert_limb"]], "n_prime_inverses_arr_readonly (c function)": [[91, "c.n_prime_inverses_arr_readonly"]], "n_prime_pi (c function)": [[91, "c.n_prime_pi"]], "n_prime_pi_bounds (c function)": [[91, "c.n_prime_pi_bounds"]], "n_primes_arr_readonly (c function)": [[91, "c.n_primes_arr_readonly"]], "n_primes_clear (c function)": [[91, "c.n_primes_clear"]], "n_primes_extend_small (c function)": [[91, "c.n_primes_extend_small"]], "n_primes_init (c function)": [[91, "c.n_primes_init"]], "n_primes_jump_after (c function)": [[91, "c.n_primes_jump_after"]], "n_primes_next (c function)": [[91, "c.n_primes_next"]], "n_primes_sieve_range (c function)": [[91, "c.n_primes_sieve_range"]], "n_primitive_root_prime (c function)": [[91, "c.n_primitive_root_prime"]], "n_primitive_root_prime_prefactor (c function)": [[91, "c.n_primitive_root_prime_prefactor"]], "n_randbits (c function)": [[91, "c.n_randbits"]], "n_randint (c function)": [[91, "c.n_randint"]], "n_randlimb (c function)": [[91, "c.n_randlimb"]], "n_randprime (c function)": [[91, "c.n_randprime"]], "n_randtest (c function)": [[91, "c.n_randtest"]], "n_randtest_bits (c function)": [[91, "c.n_randtest_bits"]], "n_randtest_not_zero (c function)": [[91, "c.n_randtest_not_zero"]], "n_randtest_prime (c function)": [[91, "c.n_randtest_prime"]], "n_remove (c function)": [[91, "c.n_remove"]], "n_remove2_precomp (c function)": [[91, "c.n_remove2_precomp"]], "n_revbin (c function)": [[91, "c.n_revbin"]], "n_rootrem (c function)": [[91, "c.n_rootrem"]], "n_sizeinbase (c function)": [[91, "c.n_sizeinbase"]], "n_sqrt (c function)": [[91, "c.n_sqrt"]], "n_sqrtmod (c function)": [[91, "c.n_sqrtmod"]], "n_sqrtmod_2pow (c function)": [[91, "c.n_sqrtmod_2pow"]], "n_sqrtmod_primepow (c function)": [[91, "c.n_sqrtmod_primepow"]], "n_sqrtmodn (c function)": [[91, "c.n_sqrtmodn"]], "n_sqrtrem (c function)": [[91, "c.n_sqrtrem"]], "n_submod (c function)": [[91, "c.n_submod"]], "n_urandint (c function)": [[91, "c.n_urandint"]], "n_xgcd (c function)": [[91, "c.n_xgcd"]]}})